<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>üíéFree Wordpress Themes for your Websiteüíé</title>
      <author>Stacksjar</author>
      <pubDate>Mon, 30 Aug 2021 10:04:58 +0000</pubDate>
      <link>https://dev.to/stacksjar/themesrain-for-building-a-perfect-website-for-your-business-280p</link>
      <guid>https://dev.to/stacksjar/themesrain-for-building-a-perfect-website-for-your-business-280p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-themesrain"&gt;
  &lt;/a&gt;
  What is ThemesRain?
&lt;/h2&gt;

&lt;p&gt;ThemesRain is a marketplace where you can purchase both, premium and free versions of WordPress themes to design a website that is both professional and simple to create. Each website designed using the ThemesRain template is retina-ready and designed to reach out to larger audiences with enhanced search engine optimization, responsive design, and innovative designing. &lt;/p&gt;

&lt;p&gt;If you are wondering whether it is perfect for your business, then keep on reading. Below we'll mention some of the pros and cons of ThemesRain WordPress themes, which will help your business create a niche for itself. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;‚óè Themes listed on ThemesRain are highly customizable &lt;/p&gt;

&lt;p&gt;‚óè You get the best deal with ThemesRains&lt;/p&gt;

&lt;p&gt;‚óè Enhance safety for payment transactions&lt;/p&gt;

&lt;p&gt;‚óè User-friendly and simple designs for quick installations  &lt;/p&gt;

&lt;p&gt;‚óè Highly responsive design which works across any platform &lt;/p&gt;

&lt;p&gt;‚óè SEO-optimized designs to improve your ratings&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;‚óè Designing, developing and maintenance of website based on WordPress can be challenging&lt;/p&gt;

&lt;p&gt;‚óè Though some WordPress themes are free, you may need to purchase plugins to get the best results&lt;/p&gt;

&lt;p&gt;‚óè SEO-based features of WordPress can be difficult to understand for beginners&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Product Categories Of ThemesRain (Premium and Free)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ThemesRain offers a wide range of pre-designed WordPress themes that are suitable for a variety of businesses. Most businesses suffer due to a lack of professional websites which can direct more business and clients towards them. A professional website not only builds trust among customers but also helps you become a part of the never-ending business world. Having said that not everyone is well-versed with coding and creating a website for businesses can be a tough nut to crack.&lt;/p&gt;

&lt;p&gt;If you think that you can hire a person who is well-versed with coding languages, then it's well and good, but not every business has a budget set aside for website developers, in that case, you need an alternative and that‚Äôs where WordPress themes by ThemesRain come in. All themes designed by ThemesRain are designed for people with limited to no knowledge of coding. With easy demo and one-click installation, you get to design a professional website which is your way to make a name for yourself and your business. &lt;/p&gt;

&lt;p&gt;In case you are wondering whether, ThemesRain has a template for business, then check out below for different types of businesses they cater to. We are sure there is one theme that is perfect for your business:&lt;/p&gt;

&lt;p&gt;‚óè Restaurant Websites&lt;/p&gt;

&lt;p&gt;‚óè Construction &amp;amp; Real Estate Websites&lt;/p&gt;

&lt;p&gt;‚óè Beauty Industry Websites&lt;/p&gt;

&lt;p&gt;‚óè Interior Design Websites&lt;/p&gt;

&lt;p&gt;‚óè University &amp;amp; Institute Websites&lt;/p&gt;

&lt;p&gt;‚óè Sports Websites&lt;/p&gt;

&lt;p&gt;‚óè Legal Firm Websites&lt;/p&gt;

&lt;p&gt;‚óè Travel Blogs&lt;/p&gt;

&lt;p&gt;‚óè Flower Business Websites&lt;/p&gt;

&lt;p&gt;‚óè News Agency Websites&lt;/p&gt;

&lt;p&gt;‚óè Medical Websites&lt;/p&gt;

&lt;p&gt;‚óè Cryptocurrency Websites&lt;/p&gt;

&lt;p&gt;‚óè Funeral Business Websites&lt;/p&gt;

&lt;p&gt;‚óè Car Mechanic Websites&lt;/p&gt;

&lt;p&gt;‚óè Health Websites&lt;/p&gt;

&lt;p&gt;All the themes that we have mentioned are available in premium and free versions. But we urge you to invest in a premium version that allows you to reap the full benefits of WordPress themes with all the features, plugins, and add-ons.&lt;/p&gt;

&lt;p&gt;Get Discounts from Here:- &lt;a href="https://stacksjar.com/post/themesrain-for-building-a-perfect-website-for-your-business"&gt;Free Wordpress Themes&lt;/a&gt;&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
    <item>
      <title>Pull Requests for Dummies</title>
      <author>Adriano Martins</author>
      <pubDate>Mon, 30 Aug 2021 09:48:50 +0000</pubDate>
      <link>https://dev.to/reviewpad/pull-requests-for-dummies-2baj</link>
      <guid>https://dev.to/reviewpad/pull-requests-for-dummies-2baj</guid>
      <description>&lt;p&gt;&lt;em&gt;Debate about code reviews is often dominated by debate about pull requests. The confusion between the two is so common we have made it a point to clarify that they are not the same quite often. So what are pull requests? And why are they called that way?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Imagine you're writing a book.&lt;/p&gt;

&lt;p&gt;(&lt;a href="https://reviewpad.com/blog/series-for-dummies/"&gt;You knew that was coming&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;In this case, you're writing collaboratively. Let's say it's a non-fiction book, or a technical manual. Something that requires a certain degree of responsibility and accuracy.&lt;/p&gt;

&lt;p&gt;You will need to figure out a strategy to make sure there are as few mistakes as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-about-version-control"&gt;
  &lt;/a&gt;
  How about‚Ä¶ version control?
&lt;/h2&gt;

&lt;p&gt;If this is a collaborative work, then it stands to reason that you will want to keep your file (let's say a Word document) somewhere everyone can easily find it and work on it. Let's say you keep your manuscript on Dropbox.&lt;/p&gt;

&lt;p&gt;You (or any one of the other authors) are working on a specific chapter, so you download the manuscript that the team is keeping online. You would never edit the manuscript directly, that would be way too risky. You create a temporary version, and label it as such.&lt;/p&gt;

&lt;p&gt;You do your work, write your lines, make sure everything is to your liking, and then what do you do?&lt;/p&gt;

&lt;p&gt;You upload it to the Dropbox, always making sure that it's labeled correctly as a temporary version. Why? Because you would like feedback from your colleagues before &lt;strong&gt;pulling&lt;/strong&gt; everything together (notice our word choice there üßê).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-a-simple-word-for-asking-for-feedback"&gt;
  &lt;/a&gt;
  What's a simple word for asking for feedback?
&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;review&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Dictionaries are interesting.&lt;/p&gt;

&lt;p&gt;Anyway, your colleagues will then look at your brand new text and they will carefully look over it. They will correct mistakes, leave notes and suggestions, make recommendations, and, of course, if all is well, simply accept it.&lt;/p&gt;

&lt;p&gt;When this is done, and the author of the new chapter is confident he's answered all the queries and fixed all the problems, they can then &lt;strong&gt;request&lt;/strong&gt; whoever is responsible for the manuscript to &lt;strong&gt;pull&lt;/strong&gt; his changed text into the main document.&lt;/p&gt;

&lt;p&gt;And that is what a &lt;strong&gt;pull request&lt;/strong&gt; is.&lt;/p&gt;

&lt;p&gt;When a developer finishes a task, they will start a process to &lt;strong&gt;join the new code to the project&lt;/strong&gt;. For that purpose, they will ask whoever's in charge of the project to &lt;strong&gt;pull&lt;/strong&gt; the changes from their working branch to the main branch. Voil√°, a request to pull changes: a pull-request.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-its-not-a-review-but-it-implies-a-review"&gt;
  &lt;/a&gt;
  So it's not a review, but it implies a review?
&lt;/h2&gt;

&lt;p&gt;Most of the time, yes.&lt;/p&gt;

&lt;p&gt;Unless the changes are very trivial, it would be irresponsible to pull changes into the main branch without performing a code review.&lt;/p&gt;

&lt;p&gt;What happens frequently is the opposite: code reviews happen all the time without the need for a pull request.&lt;/p&gt;

&lt;p&gt;A developer might want to review the changes between different states of a project for many different purposes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Auditing the source code is always important;&lt;/li&gt;
&lt;li&gt;Reviewing code without making it visible to everyone else in the project (pull-requests are always visible), for whatever reason;&lt;/li&gt;
&lt;li&gt;Reviewing the code when the project is scattered across many repositories;&lt;/li&gt;
&lt;li&gt;There are even some software development methodologies that don't use pull requests at all! And they still review code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope this helped clear up what pull requests are, and why they are often wrongly mistaken for code reviews. Are there any topics you'd like us to cover next on this series?&lt;/p&gt;

&lt;p&gt;If so, you know where to find us on Twitter (&lt;a href="http://twitter.com/codereviewpad/"&gt;@reviewpad&lt;/a&gt;)!&lt;/p&gt;

</description>
      <category>pullrequest</category>
      <category>git</category>
      <category>explainlikeimfive</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Setting up your own online store? Here's a breakdown of the transaction fees charged by payment services</title>
      <author>Rob OLeary</author>
      <pubDate>Mon, 30 Aug 2021 09:23:26 +0000</pubDate>
      <link>https://dev.to/robole/setting-up-your-own-online-store-here-s-a-breakdown-of-the-transaction-fees-charged-by-payment-services-3b2a</link>
      <guid>https://dev.to/robole/setting-up-your-own-online-store-here-s-a-breakdown-of-the-transaction-fees-charged-by-payment-services-3b2a</guid>
      <description>&lt;p&gt;If you want to sell something online, it is now something that you can do quickly, and without any technical expertise. There are marketplaces, tonnes of marketplaces, and third-party integrations to make your own store. Before you charge in, it is a good idea to understand what the costs involved are.&lt;/p&gt;

&lt;p&gt;It pays to know how much you will make on each sale. I made the mistake of overlooking this initially. I was selling a product for ‚Ç¨3, and I wasn't totally sure what the fees were. After making a couple of sales, I reviewed the transactions and I saw that the fees added up to 20% of the sales amount. Yikes!  &lt;/p&gt;

&lt;p&gt;Keep in mind that if you sell something for ‚Ç¨1 or ‚Ç¨100, fees are going to have a different impact on your profits. If you can identify what the profit margin is at different price points, it can help you decide what you will sell. So, this is a worthwhile exercise to do before you start.&lt;/p&gt;

&lt;p&gt;If you are selling a digital product, your biggest expense is payment processing fees, or platform fees if you are selling on a marketplace. A lot of the marketplaces use third-party services such as &lt;a href="https://www.paypal.com"&gt;PayPal&lt;/a&gt; and &lt;a href="https://stripe.com/"&gt;Stripe&lt;/a&gt; to handle payments, and if you make your own store you will use one of these too. &lt;/p&gt;

&lt;p&gt;If you are selling a physical product, then you have to consider the cost of production, delivery, and time it will take for support. There are marketplaces that will handle this for you for a bigger slice of your profits.&lt;/p&gt;

&lt;p&gt;In this article, I will focus on the costs for handling payments. I will look at the fees for online commercial transactions charged by the major payment service providers. I am not evaluating other features of their services, which may be a factor for you in choosing a payment service provider, I am purely interested in the costs involved.&lt;/p&gt;

&lt;p&gt;I will look at the fees for Ireland. While you may not live in Ireland, this will still provide a good outline of how the fees are arranged by each payment service provider. Please don't follow what I have outlined blindly. Take a look at the websites for the payment service providers, I have included links where applicable, change the website's settings to your country of residence, and ensure that you understand the details specific to you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fees-compared"&gt;
  &lt;/a&gt;
  Fees compared
&lt;/h2&gt;

&lt;p&gt;Fees charged on transactions generally range between 3% and 6% of the transaction value with payment service providers. Each provider arranges their fee slightly differently, so it makes it a bit tricky to do a direct comparison. They all take a percentage cut from each transaction, and there is an accompanying fixed amount charged. They diverge when it comes to selling internationally and handling currency conversion.&lt;/p&gt;

&lt;p&gt;To make a fair comparison, let's look at the fees as a percentage of transaction amount. We can take each of these different factors into consideration separately. I have highlighted the best rates in light green where there is a clear case for choosing one of the other.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ir9mG27y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.roboleary.net/assets/img/blog/2021-08-30-ecommerce-transaction-fees/domestic-sales.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir9mG27y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.roboleary.net/assets/img/blog/2021-08-30-ecommerce-transaction-fees/domestic-sales.png" alt="domestic sales table. products under 5 euro is best to go with paypal micropayments. otherwise go with Stripe or Square"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For domestic sales, if you are selling products under 5 Euro, the lowest fees are with PayPal at their micropayment rate. There is a big gotcha with micropayments - the rate applies to all transactions, so you will end up paying higher fees on transactions greater than 5 euro. This is not ideal if you sell a range of products.&lt;/p&gt;

&lt;p&gt;Stripe and Square charge the same rates. The one difference is that Square deducts VAT (Value Added Tax) at source on your behalf in Ireland. They are a better choice than PayPal for all price points above 5 Euro.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rcZW1C8W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.roboleary.net/assets/img/blog/2021-08-30-ecommerce-transaction-fees/international-sales.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rcZW1C8W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.roboleary.net/assets/img/blog/2021-08-30-ecommerce-transaction-fees/international-sales.png" alt="international fees"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PayPal's fees are higher for international sales. Stripe and Square charge the same fees for domestic and international sales. It only makes sense to go with PayPal, if you are only selling products for 3 euro or less, and you can apply the micropayments rate. This probably is not practical.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f1niMXH3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.roboleary.net/assets/img/blog/2021-08-30-ecommerce-transaction-fees/international-sales-currency.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f1niMXH3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.roboleary.net/assets/img/blog/2021-08-30-ecommerce-transaction-fees/international-sales-currency.png" alt="international fees with currency conversion fees included"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currency conversion is done differently by each provider. For PayPal and Stripe, currency conversion can be avoided if you have a bank account linked to your account that shares the currency of the transaction, but there are some differences in how they perform this check. Some people use services such as &lt;a href="https://wise.com/"&gt;Wise&lt;/a&gt; to have a multi-currency account that can accept different currencies, and who can perform the currency conversion at a more competitive rate. I am not experienced in this, so please explore this topic for yourself.&lt;/p&gt;

&lt;p&gt;Square charges customers in the currency of your store, so the customer's bank will be responsible for any currency conversion. Customers may not appreciate this! Square also deducts VAT for each transaction for Ireland.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#payment-service-provider-fees-in-detail"&gt;
  &lt;/a&gt;
  Payment service provider fees in detail
&lt;/h2&gt;

&lt;p&gt;Let's look at the details of the fees for each provider, and any conditions that may apply.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#paypal"&gt;
  &lt;/a&gt;
  Paypal
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.paypal.com"&gt;PayPal&lt;/a&gt; is the most established provider and serves the most countries worldwide. However, they are not the cheapest, and their fees are quite convoluted.&lt;/p&gt;

&lt;p&gt;With PayPal, you can open a personal account, or a business account (also called a merchant account). Fees generally vary according to your country, and whether the transaction is domestic or international. You can read about the &lt;a href="https://www.paypal.com/ie/webapps/mpp/paypal-fees"&gt;personal fees here&lt;/a&gt;, and the &lt;a href="https://www.paypal.com/ie/webapps/mpp/merchant-fees"&gt;merchant fees here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are selling on a platform like GumRoad, you can use a personal PayPal account if you want to, and the fees should be the same. You can change a personal account into a business account, but not vice versa.&lt;/p&gt;

&lt;p&gt;For domestic transactions, there is a charge of &lt;strong&gt;3.4% of transaction amount + fixed fee based on the currency (‚Ç¨0.35 for Euro)&lt;/strong&gt; for every transaction.&lt;/p&gt;

&lt;p&gt;For international transactions, you will be charged an &lt;strong&gt;additional 0.5% to 2% based on your region and the region of the buyer&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Currency conversion may be required to withdraw your balance from your PayPal account when your bank account has a different currency to the balance in your PayPal account&lt;/strong&gt;. You can expect to pay approximately &lt;strong&gt;3% above the base exchange rate&lt;/strong&gt;. The rates do not appear to be based on wholesale market currency rates, so it is likely to cost you more than 3% in real terms. Again, this amount may vary depending on the currency involved.&lt;/p&gt;

&lt;p&gt;You can use services such as &lt;a href="https://wise.com/"&gt;Wise&lt;/a&gt; to get a multi-currency account, this allows you to withdraw from PayPal without converting the currency. Then, you can convert the money to another currency on Wise at a better rate, &lt;a href="https://wise.com/gb/blog/how-to-send-money-from-paypal-to-transferwise"&gt;you can read more about that in this article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With a merchant account, you can apply for &lt;a href="https://www.paypal.com/us/webapps/mpp/merchant-fees"&gt;micropayments&lt;/a&gt;. They will save you on fees for transactions less than 5 euro. The catch is that if you upgrade to the micropayment rate, this rate will apply to all commercial transaction payments received into your PayPal account. So, you really only want to do this if you &lt;em&gt;only&lt;/em&gt; sell products at less than 5 euro.&lt;/p&gt;

&lt;p&gt;The fees for micropayments are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;u&gt;Domestic&lt;/u&gt;: &lt;strong&gt;5% of transaction amount + fixed fee based on currency (‚Ç¨0.05 for Euro).&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;u&gt;International&lt;/u&gt;: &lt;strong&gt;6% of transaction amount + fixed fee based on currency (‚Ç¨0.05 for Euro)&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It does not seem to be possible to apply for micropayments through their website. When I contacted the support team to ask how to apply, they said they can't set-up it up through web chat. They asked me to call a particular department (PPS department) instead. I didn't do it as it wasn't something I wanted done.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stripe"&gt;
  &lt;/a&gt;
  Stripe
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://stripe.com/"&gt;Stripe&lt;/a&gt; has been around since 2009, and focuses more on offering integrations for ecommerce. It serves a &lt;a href="https://stripe.com/global"&gt;decent amount of countries&lt;/a&gt;, but it is predominantly Europe and North America, for now.&lt;/p&gt;

&lt;p&gt;Stripe's payment processing fees are quite straightforward, &lt;a href="https://stripe.com/en-ie/pricing"&gt;for Ireland the pricing is&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Domestic transactions: &lt;strong&gt;1.4% of transaction amount + fixed fee based (‚Ç¨0.25 for Europe)&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;International transactions: &lt;strong&gt;2.9% of transaction amount for non-European cards +  2% currency conversion fee if required  + fixed fee (‚Ç¨0.25 for Europe)&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You &lt;a href="https://stripe.com/docs/currencies/conversions#avoiding-currency-conversions"&gt;may be able to avoid currency conversion fees&lt;/a&gt; if you have multiple bank accounts linked to your Stripe account.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#square"&gt;
  &lt;/a&gt;
  Square
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://squareup.com/us/en"&gt;Square&lt;/a&gt; was founded in 2009 and is more focused on physical point-of-sales and mobile apps, but it does offer online payment processing also. It only serves a few markets, currently that is: Australia, Canada, France, Ireland, Japan, United Kingdom, and the United States.&lt;/p&gt;

&lt;p&gt;Stripe's &lt;a href="https://squareup.com/ie/en/online-store/plans"&gt;payment processing fees for Ireland are&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;1.4% of transaction amount + ‚Ç¨0.25 + VAT per transaction with EU + EEA cards&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;2.9% of transaction amount + ‚Ç¨0.25 + VAT per transaction with UK/Non-EEA cards&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can reduce the fees slightly if you get a Premium Plan for ‚Ç¨60/mo. The fixed portion of the fee is reduced from 25 cents to 15 cents for each transaction.&lt;/p&gt;

&lt;p&gt;Square &lt;a href="https://www.sellercommunity.com/t5/General-Discussion/Does-Square-allow-or-handle-currency-conversion-for/m-p/53404"&gt;charges the customer in the currency of your store&lt;/a&gt;. So, the customer is responsible for currency fees&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#payoneer"&gt;
  &lt;/a&gt;
  Payoneer
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.payoneer.com/"&gt;Payoneer&lt;/a&gt; facilitates international fund transfers, payments requests and invoicing of clients, and is used by marketplaces such as Fiverr, 99Designs, and iStock for payouts.&lt;/p&gt;

&lt;p&gt;It doesn't appear that Payoneer can be used as a third-party integration for individuals. So, you may only encounter Payoneer if you use as a third-party service for payouts for digital marketplaces, or if you invoice customers for business-to-business sales.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.payoneer.com/about/fees/"&gt;fees&lt;/a&gt; are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;u&gt;Payoneer to Payoneer payments&lt;/u&gt;: Free.&lt;/li&gt;
&lt;li&gt;
&lt;u&gt;Direct payments by a client by credit card (all currencies):&lt;/u&gt; 3% of transaction amount.&lt;/li&gt;
&lt;li&gt;
&lt;u&gt;Payment through a marketplace&lt;/u&gt;: The marketplace set the rates.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Withdrawals are charged&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;u&gt;Withdrawals in local currency from a Payoneer balance of the same currency&lt;/u&gt;: &lt;strong&gt;‚Ç¨1.50 in EUR&lt;/strong&gt;, or $1.50 in USD.&lt;/li&gt;
&lt;li&gt;
&lt;u&gt;Withdrawals in non-local currency&lt;/u&gt;: &lt;strong&gt;Up to 2% of transaction amount&lt;/strong&gt;. The exchange rate of transactions with conversion is based on wholesale currency market rates obtained at the time of transaction from a range of financial institutions. For more info, &lt;a href="https://blog.payoneer.com/how-to/general/everything-you-need-to-know-about-conversion-rates/"&gt;read this article&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Stripe and Square offer the most straightforward, competitive all round rates. PayPal's rates are not straightforward. If you are selling products at less than 5 Euro, PayPal's micropayment rates are the most favourable rates around, but it may not be practical to use PayPal as a single provider just for this instance.&lt;/p&gt;

&lt;p&gt;Ultimately, the best provider depends on where you are, what you are selling, and what markets you are serving. You may be in a country that is not served by a particular provider, so the choices are not equal everywhere.&lt;/p&gt;

&lt;p&gt;If I missed out on something, please let me know!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>ecommerce</category>
    </item>
    <item>
      <title>Next.js, Material UI, MongoDB Personal Dashboard</title>
      <author>Katsiaryna (Kate) Lupachova</author>
      <pubDate>Mon, 30 Aug 2021 09:18:52 +0000</pubDate>
      <link>https://dev.to/ramonak/next-js-material-ui-mongodb-personal-dashboard-3i82</link>
      <guid>https://dev.to/ramonak/next-js-material-ui-mongodb-personal-dashboard-3i82</guid>
      <description>&lt;p&gt;&lt;em&gt;Originally published on &lt;a href="https://ramonak.io/"&gt;my personal blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;As a developer who tries to contribute to the community by writing blog posts, developing and maintaining open-source libraries, and building side projects, I'd like to have a place where I could see and track all these my activities in one place. So I decided to create the dashboard of my personal projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tech-stack"&gt;
  &lt;/a&gt;
  Tech Stack
&lt;/h2&gt;

&lt;p&gt;For the tech stack I've chosen to use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material-ui.com/"&gt;Material UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://recharts.org/en-US/"&gt;Recharts&lt;/a&gt; - charting library&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-spring.io/"&gt;react-spring&lt;/a&gt; - animation library&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.mongodb.com/"&gt;MongoDB Atlas&lt;/a&gt; - cloud-hosted Mongo Database&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;The app has a "classic" dashboard layout:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;header&lt;/li&gt;
&lt;li&gt;dark and light theme switch&lt;/li&gt;
&lt;li&gt;sidebar with toggle&lt;/li&gt;
&lt;li&gt;content area&lt;/li&gt;
&lt;li&gt;footer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, the app uses &lt;a href="https://eslint.org/"&gt;ESLint&lt;/a&gt; custom rules, &lt;a href="https://prettier.io/"&gt;prettier&lt;/a&gt; code formatting, &lt;a href="https://typicode.github.io/husky/#/"&gt;husky&lt;/a&gt; git hooks with &lt;a href="https://github.com/okonet/lint-staged"&gt;lint-staged&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pages"&gt;
  &lt;/a&gt;
  Pages
&lt;/h2&gt;

&lt;p&gt;The dashboard consists of 5 pages:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#page-1---overview-of-my-blog-posts-npm-packages-demo-and-hobby-apps-stats"&gt;Overview of my blog posts, npm packages demo, and hobby apps stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#page-2---devto-stats"&gt;dev.to stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#page-3---github-stats"&gt;GitHub stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#page-4---twitter-stats"&gt;Twitter stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#page-5---npm-packages-stats"&gt;NPM packages stats&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#page-1-overview-of-my-blog-posts-npm-packages-demo-and-hobby-apps-stats"&gt;
  &lt;/a&gt;
  Page 1 - Overview of my blog posts, npm packages demo, and hobby apps stats
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NHSLCVdq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nfdw38e37jy7wsz12uo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NHSLCVdq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nfdw38e37jy7wsz12uo.gif" alt="page-one"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first page displays the main stats of the blog posts on my personal website, of the npm packages demos that I developed and maintain, and of the hobby apps that I wrote in my spare time. These stats are rendered in the table and include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the date of publishing&lt;/li&gt;
&lt;li&gt;the title, which also serves as a link to the respective blog post/demo/app&lt;/li&gt;
&lt;li&gt;this week number of weeks with comparison to the previous week&lt;/li&gt;
&lt;li&gt;total views count&lt;/li&gt;
&lt;li&gt;modal window with the chart that shows the number of views for each day during the last month&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Published&lt;/em&gt;, &lt;em&gt;Last 7 days views&lt;/em&gt; and &lt;em&gt;Total views&lt;/em&gt; columns are sortable. By default, the data is sorted by the number of views for the last 7 days. The blog posts table has pagination.&lt;/p&gt;

&lt;p&gt;The data about the views count is stored in &lt;strong&gt;MongoDB Atlas&lt;/strong&gt; database. There is a dedicated Next.js &lt;a href="https://github.com/KaterinaLupacheva/my-projects-dashboard/tree/master/pages/api/views"&gt;API Route&lt;/a&gt; that communicates with the database. To be able to gather these stats, I developed a custom hook - &lt;a href="https://github.com/KaterinaLupacheva/ramonak.io/blob/master/src/hooks/use-view-counter.js"&gt;&lt;em&gt;useViewCounter&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Probably another part that was tricky to implement on this page is the feature of &lt;strong&gt;sorting&lt;/strong&gt; the Material UI &lt;strong&gt;table by specific columns&lt;/strong&gt;. &lt;a href="https://github.com/KaterinaLupacheva/my-projects-dashboard/blob/master/components/ViewsTable/ViewsTable.tsx"&gt;This&lt;/a&gt; is how I implemented it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#page-2-devto-stats"&gt;
  &lt;/a&gt;
  Page 2 - dev.to stats
&lt;/h2&gt;

&lt;p&gt;I'm a follower of the "Learn in public" concept. When I learn something new while working on a project and I write an article on it, I definitely know the subject better later. Plus I hope this also helps other developers in their "gaining new knowledge" journey.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q5OGHm9P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ijh0hkk3m9jg3tpkshq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q5OGHm9P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ijh0hkk3m9jg3tpkshq.gif" alt="page-two"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To use dev.to API you just need to obtain the &lt;strong&gt;API key&lt;/strong&gt;. How to do so is described in the &lt;a href="https://docs.forem.com/api/"&gt;official docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are two stat cards at the top of the page. They show data about &lt;strong&gt;followers count&lt;/strong&gt; and the total &lt;strong&gt;number of posts&lt;/strong&gt; for today. The data is gathered from &lt;code&gt;https://dev.to/api/followers/users&lt;/code&gt; and &lt;code&gt;https://dev.to/api/articles/me&lt;/code&gt; APIs respectively. "Running numbers" animation implemented with the &lt;a href="https://react-spring.io/"&gt;react-spring&lt;/a&gt; library.&lt;/p&gt;

&lt;p&gt;Also, there are &lt;strong&gt;dynamics of followers count chart&lt;/strong&gt;. But dev.to API provides data only for the current number of followers. Where do I get the data for the previous days? To be able to display this data we need to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;store followers count in the &lt;strong&gt;database&lt;/strong&gt; (for this I use &lt;a href="https://www.mongodb.com/"&gt;MongoDB Atlas&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;run the &lt;strong&gt;cron (scheduled) job&lt;/strong&gt; for this to happen daily (&lt;a href="https://docs.github.com/en/actions"&gt;GitHub actions&lt;/a&gt; to the rescue)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The number at the bottom right corner of the followers' count card shows the followers' number change for the last week.&lt;/p&gt;

&lt;p&gt;The main section of the page consists of cards with information about &lt;strong&gt;each blog post&lt;/strong&gt;. This data is fetched from &lt;code&gt;https://dev.to/api/articles/me&lt;/code&gt; API. Each card has information about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;article's title&lt;/li&gt;
&lt;li&gt;date of publishing&lt;/li&gt;
&lt;li&gt;number of views, reactions, and comments&lt;/li&gt;
&lt;li&gt;tags list&lt;/li&gt;
&lt;li&gt;cover image&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The card is clickable. By clicking on it, the article opens in a new tab, using the URL data from the API.&lt;/p&gt;

&lt;p&gt;All blog posts can be &lt;strong&gt;sorted&lt;/strong&gt; by the published date (sorted by default), number of views, reactions, or comments. How to implement this feature is described in &lt;a href="https://ramonak.io/posts/react-how-to-sort-array-of-objects-with-dropdown-and-hooks"&gt;this blog post&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#page-3-github-stats"&gt;
  &lt;/a&gt;
  Page 3 - GitHub stats
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ad6wc0aT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxhohvvyagf2ja9mj8ds.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ad6wc0aT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxhohvvyagf2ja9mj8ds.gif" alt="page-three"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before using &lt;a href="https://docs.github.com/en/rest"&gt;GitHub REST API&lt;/a&gt; you need to create a personal access token. &lt;a href="https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token"&gt;Here&lt;/a&gt; are the instructions on how to do so.&lt;/p&gt;

&lt;p&gt;At the top of the page, the general GitHub &lt;strong&gt;user profile data&lt;/strong&gt; and &lt;strong&gt;main stats&lt;/strong&gt; indicators are shown. A user profile data is a response from &lt;code&gt;https://api.github.com/user&lt;/code&gt; endpoint and it includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;bio&lt;/li&gt;
&lt;li&gt;avatar&lt;/li&gt;
&lt;li&gt;location&lt;/li&gt;
&lt;li&gt;company
and other profile information.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;followers' count&lt;/strong&gt; and the &lt;strong&gt;number of the public repos&lt;/strong&gt; are also coming from the above-mentioned endpoint.&lt;/p&gt;

&lt;p&gt;But the data about &lt;strong&gt;total stars&lt;/strong&gt; and &lt;strong&gt;total forks&lt;/strong&gt; amount is calculated based on each repo data. To get the information about all user's repos you should query &lt;code&gt;https://api.github.com/user/repos&lt;/code&gt; endpoint.&lt;/p&gt;

&lt;p&gt;Same as for dev.to followers count, the data on GitHub total repos, total followers, total stars, and total forks is stored &lt;strong&gt;daily&lt;/strong&gt; in the &lt;strong&gt;database&lt;/strong&gt; with the help of the &lt;strong&gt;scheduled GitHub action&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The repositories section of the page displays cards with &lt;strong&gt;each repo data&lt;/strong&gt;, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;repo name&lt;/li&gt;
&lt;li&gt;website (if exists)&lt;/li&gt;
&lt;li&gt;description&lt;/li&gt;
&lt;li&gt;number of stars, forks, watchers&lt;/li&gt;
&lt;li&gt;language&lt;/li&gt;
&lt;li&gt;created at and updated at dates&lt;/li&gt;
&lt;li&gt;license&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The cards are &lt;strong&gt;sortable&lt;/strong&gt; by stars (default), forks, and the last update date.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I have a separate app that utilizes GitHub REST API - &lt;a href="https://github-dashboard.ramonak.io/"&gt;GitHub API dashboard&lt;/a&gt;, that I've developed a while back and probably need to update. A user can enter any existing GitHub username and see public information on that user, including profile information, a person's programming languages structure, and repos data.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#page-4-twitter-stats"&gt;
  &lt;/a&gt;
  Page 4 - Twitter stats
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fDZHqmfb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wj5mtvc737xz4wfg26ow.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fDZHqmfb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wj5mtvc737xz4wfg26ow.gif" alt="page-four"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm not a very active (mildly speaking) Twitter user. I mean I do read other people's tweets, but do not tweet myself often. Maybe this will change eventually, but it is what it is now.&lt;/p&gt;

&lt;p&gt;As it's stated in the &lt;a href="https://developer.twitter.com/en/docs/twitter-api/getting-started/getting-access-to-the-twitter-api"&gt;docs&lt;/a&gt;, to get access to the Twitter API you need to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;apply and receive approval for a developer account&lt;/li&gt;
&lt;li&gt;get your app's key and tokens.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Specifically for my dashboard, I use v1.1. of the API and Bearer Token for authorization.&lt;/p&gt;

&lt;p&gt;The top section of the page displays general information about the Twitter &lt;strong&gt;profile&lt;/strong&gt;. This data comes from &lt;code&gt;https://api.twitter.com/1.1/users/show&lt;/code&gt; API and includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;screen name&lt;/li&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;description&lt;/li&gt;
&lt;li&gt;location&lt;/li&gt;
&lt;li&gt;when a profile was created&lt;/li&gt;
&lt;li&gt;followers count&lt;/li&gt;
&lt;li&gt;image URL
and so on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Same as for dev.to and GitHub followers count, the data on Twitter followers is stored &lt;strong&gt;daily&lt;/strong&gt; in the &lt;strong&gt;database&lt;/strong&gt; with the help of the &lt;strong&gt;scheduled GitHub action&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The data in the Tweets section of the page comes from &lt;code&gt;https://api.twitter.com/1.1/statuses/user_timeline&lt;/code&gt; API. This API returns a tweet's text, date of publishing, retweets and likes count, etc. I visually distinguish if a tweet was a reply to some other tweet and a tweet by itself.&lt;/p&gt;

&lt;p&gt;If a tweet returns from the API &lt;strong&gt;truncated&lt;/strong&gt;, I compute a link to its full content.&lt;/p&gt;

&lt;p&gt;The tweet cards are &lt;strong&gt;sortable&lt;/strong&gt; by published date (default), retweets, and likes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#page-5-npm-packages-stats"&gt;
  &lt;/a&gt;
  Page 5 - NPM packages stats
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xgBxnu9w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsi5w1ap2dp7qlqxbbv7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xgBxnu9w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsi5w1ap2dp7qlqxbbv7.gif" alt="page-five"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While developing a piece of functionality for any projects that I'm involved with, sometimes I publish it as a public &lt;strong&gt;library&lt;/strong&gt; on &lt;a href="https://www.npmjs.com/"&gt;NPM&lt;/a&gt;. Thus any developer (myself included) can use it, and I feel great that I can do something useful for a community.&lt;/p&gt;

&lt;p&gt;If you'd like to publish your library, I wrote the &lt;strong&gt;blog post&lt;/strong&gt; on &lt;a href="https://ramonak.io/posts/react-publish-to-npm"&gt;how to publish a custom React component to NPM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There is no need to obtain an API key or token for querying NPM registry API. For the dashboard, I use only the endpoint that provides the data about a &lt;strong&gt;package downloads count&lt;/strong&gt; - &lt;code&gt;https://api.npmjs.org/downloads/&lt;/code&gt;. You can read more about it &lt;a href="https://github.com/npm/registry/blob/master/docs/download-counts.md"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have &lt;strong&gt;4 public NPM libraries&lt;/strong&gt; at the moment. There are stats on each of them in the dashboard:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a chart with the daily downloads count for the last month&lt;/li&gt;
&lt;li&gt;an average downloads per day (calculated)&lt;/li&gt;
&lt;li&gt;weekly downloads&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, the &lt;a href="https://www.npmjs.com/package/@ramonak/react-progress-bar"&gt;React progress bar&lt;/a&gt; library has the biggest downloads count among my libraries so far. The robust UI components libraries are great, and I love to use them. But sometimes you just need one simple customizable component. And I had exactly such a use case. Here is the blog post about &lt;a href="https://ramonak.io/posts/react-progress-bar"&gt;how to create a custom progress bar component in 5 minutes&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The source code for my personal dashboard is available in &lt;a href="https://github.com/KaterinaLupacheva/my-projects-dashboard"&gt;this repo&lt;/a&gt;. And here is the &lt;a href="https://my-projects-dashboard.vercel.app/"&gt;live version&lt;/a&gt; (deployed on &lt;a href="https://vercel.com"&gt;Vercel&lt;/a&gt;).&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>nextjs</category>
      <category>typescript</category>
    </item>
    <item>
      <title>What Are the Advantages and Disadvantages of Web Applications?</title>
      <author>Chris Fowler</author>
      <pubDate>Mon, 30 Aug 2021 08:57:20 +0000</pubDate>
      <link>https://dev.to/dsvdeveloper88/what-are-the-advantages-and-disadvantages-of-web-applications-35l1</link>
      <guid>https://dev.to/dsvdeveloper88/what-are-the-advantages-and-disadvantages-of-web-applications-35l1</guid>
      <description>&lt;p&gt;Businesses can give their users interactivity without having to use the time and resources necessary for building a mobile application. Web-based applications ultimately ease the development process.&lt;/p&gt;

&lt;p&gt;That said, weighing the cons of &lt;a href="https://www.designveloper.com/blog/web-app-development/"&gt;web application development&lt;/a&gt; against the pros is still useful for getting the kinks ironed out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sZNYkJqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21opzk91x5mojdm6mgu7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sZNYkJqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21opzk91x5mojdm6mgu7.jpeg" alt="web applications"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-web-apps"&gt;
  &lt;/a&gt;
  Advantages of Web Apps
&lt;/h2&gt;

&lt;p&gt;First, you should take a closer look at the advantages of web app development. You‚Äôll find that web apps are an efficient option for boosting the UX of consumers who prize user engagement when it comes to their web browsing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-easier-development"&gt;
  &lt;/a&gt;
  1. Easier Development
&lt;/h3&gt;

&lt;p&gt;Once again, most &lt;a href="https://www.designveloper.com/blog/mobile-app-development-services/"&gt;mobile app developers&lt;/a&gt; and web developers are not one and the same. This is a shame because that means if you want the best of both worlds, you‚Äôll always need at least twice as many developers or at least twice as much talent.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-more-convenience"&gt;
  &lt;/a&gt;
  2. More Convenience
&lt;/h3&gt;

&lt;p&gt;Web apps do not need to be downloaded and installed. Or in the case of PWAs, the download and installation won‚Äôt be the equivalent of the app actually taking up space on your device.  &lt;/p&gt;

&lt;p&gt;And with &lt;a href="https://www.designveloper.com/blog/progressive-web-apps-examples/"&gt;progressive web apps&lt;/a&gt; specifically, you can get many of the benefits of mobile apps with none of the hassle. While smartphones these days seem to be ever-increasing their storage space in what seem to be squared increments.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-high-portability"&gt;
  &lt;/a&gt;
  3. High Portability
&lt;/h3&gt;

&lt;p&gt;Got a smartphone? You can use a web app. A laptop? Even better! Users can access web apps from any device. Got a tablet? You can use a web app.&lt;/p&gt;

&lt;p&gt;Basically, web apps are entirely multi-platform. They provide users with an entertaining exchange no matter the operating system, whether that be Android, iOS, PC, etc. so long as users maintain an internet connection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-web-apps"&gt;
  &lt;/a&gt;
  Disadvantages of Web Apps
&lt;/h2&gt;

&lt;p&gt;Of course, a pro and con list would be futile if there were only pros. Naturally, web app development has disadvantages too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-reduced-speed"&gt;
  &lt;/a&gt;
  1. Reduced Speed
&lt;/h3&gt;

&lt;p&gt;Despite all the praise, web apps cannot replace mobile apps and will operate a bit slower than an application that is hosted on a local server. &lt;/p&gt;

&lt;p&gt;PWAs definitely try to mitigate this side effect, but there‚Äôs no veritable evidence that they‚Äôve successfully eliminated this disadvantage altogether. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-limited-functionality"&gt;
  &lt;/a&gt;
  2. Limited Functionality
&lt;/h3&gt;

&lt;p&gt;Since web apps aren‚Äôt native, they don‚Äôt have the same capacity to collaborate effectively with the hardware and operating system of your specific device.&lt;/p&gt;

&lt;p&gt;Native technology will always carry an advantage over non-native technologies. As system settings differ from one device to the next, and web apps are by definition multi-platform.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-decreased-access"&gt;
  &lt;/a&gt;
  3. Decreased Access
&lt;/h3&gt;

&lt;p&gt;Generally, web apps need internet access to perform well or in most cases, to perform at all. Though PWAs do deter from this typecast, the most interactive of web apps will not respond if you don‚Äôt have a web connection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-types-of-web-applications"&gt;
  &lt;/a&gt;
  3 Types of Web Applications
&lt;/h2&gt;

&lt;p&gt;There are different types of web applications with different behaviors depending on how they‚Äôre built. While all these web application types still use web technologies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#singlepage-apps"&gt;
  &lt;/a&gt;
  Single-Page Apps
&lt;/h3&gt;

&lt;p&gt;A single-page application (SPA) differs from a traditional multi-page application where new pages load only when you click a link. SPAs wield their power from only one page, typically deploying an infinite scroll mechanism to display all its content.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serverside-web-apps"&gt;
  &lt;/a&gt;
  Server-Side Web Apps
&lt;/h3&gt;

&lt;p&gt;Server-side software is essentially synonymous with back-end development. Back-end development is composed of building the databases, servers, application programming interfaces (APIs).&lt;/p&gt;

&lt;p&gt;On the bright side, server-side web apps are normally more secure and offer more browser compatibility than client-side web apps. Though server-side applications by and large still display content and/or UIs, the most dynamic of code resides in the web server.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clientside-web-apps"&gt;
  &lt;/a&gt;
  Client-Side Web Apps
&lt;/h3&gt;

&lt;p&gt;Client-side &lt;a href="https://www.designveloper.com/blog/7-awesome-web-app-ideas-for-web-developer/"&gt;web apps&lt;/a&gt; are dominant in front-end development, meaning the user interface (UI) is the focus of these types of apps.&lt;/p&gt;

&lt;p&gt;Any data or business logic that the app might use to function is dynamically loaded at start-up. As a result of client-side rendering, there is little to no buffering time for loading a page.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>news</category>
      <category>beginners</category>
      <category>devops</category>
    </item>
    <item>
      <title>Top API's for next JavaScript Project</title>
      <author>Suprabha</author>
      <pubDate>Mon, 30 Aug 2021 08:47:24 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/top-api-s-for-next-javascript-project-cop</link>
      <guid>https://dev.to/suprabhasupi/top-api-s-for-next-javascript-project-cop</guid>
      <description>&lt;h3&gt;
  &lt;a href="#1-jokes-api"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://github.com/15Dkatz/official_joke_api"&gt;Jokes API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mi3iNki8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/DjuAOHR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mi3iNki8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/DjuAOHR.png" alt="Jokes API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple jokes API. &lt;br&gt;
The majority of these jokes were contributed by joke-loving coders around the world!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-coinlayer"&gt;
  &lt;/a&gt;
  2. &lt;a href="http://coinlayer.com"&gt;CoinLayer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tzi0sOFX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/LcjL4jT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tzi0sOFX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/LcjL4jT.png" alt="Random User"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Powerful cryptocurrency rates JSON API delivering real-time crypto exchange rate and conversion data for more than 25 exchanges and 385 coins worldwide.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-random-user"&gt;
  &lt;/a&gt;
  3. &lt;a href="http://randomuser.me"&gt;Random User&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---I8zrwZx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Zl8cLpi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---I8zrwZx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Zl8cLpi.png" alt="CoinLayer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Random user generator is a FREE API for generating placeholder user information. &lt;br&gt;
Get profile photos, names, and more. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-marvel-comics-api"&gt;
  &lt;/a&gt;
  4. &lt;a href="http://developer.marvel.com"&gt;Marvel Comics API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LE6l281O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ErXfWZx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LE6l281O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ErXfWZx.png" alt="Marvel Comics API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Marvel developer portal gives Marvel fans, partners and other technologists access to an array of powerful APIs, documentation, and other tools to interact with Marvel's systems.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-spacex-api"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://github.com/r-spacex/SpaceX-API"&gt;SpaceX API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8PToaFMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/LHWfcz4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8PToaFMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/LHWfcz4.png" alt="SpaceX API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open Source REST API for SpaceX launch, rocket, core, capsule, Starlink, launchpad, and landing pad data&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-pokemon-api"&gt;
  &lt;/a&gt;
  6. &lt;a href="http://pokeapi.co"&gt;Pokemon API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bdnLyAbj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/D01ynH2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bdnLyAbj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/D01ynH2.png" alt="Pokemon API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An open RESTful API for Pok√©mon data. All pokemon data in one place.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-star-wars-api"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://swapi.dev/"&gt;Star Wars API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b3gmHqW6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/5bDARj6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b3gmHqW6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/5bDARj6.png" alt="Star Wars API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All the Star Wars data you've ever wanted:&lt;br&gt;
Planets, Spaceships, Vehicles, People, Films and Species&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-openweather-api"&gt;
  &lt;/a&gt;
  8. &lt;a href="http://openweathermap.org/api"&gt;OpenWeather API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qK1WhRl_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/349tXkG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qK1WhRl_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/349tXkG.png" alt="OpenWeather API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple and fast and free weather API from OpenWeatherMap you have access to current weather data + forecasts. &lt;/p&gt;

&lt;p&gt;Historical weather data for 40 years back for any coordinate. Weather maps, UV Index, air pollution &amp;amp; historical data&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-nasa-api"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://api.nasa.gov/index.html"&gt;NASA API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KruFscTz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/82gyCZl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KruFscTz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/82gyCZl.png" alt="NASA API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NASA provides a bunch of APIs you can use for free like Astronomy Picture of the Day and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-dev-api"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://developers.forem.com/api"&gt;DEV API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pESWzpRi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/2FS2Fhy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pESWzpRi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/2FS2Fhy.png" alt="DEV API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can get published articles, post articles, get comments, see users followers, see a user's tags that they follow, and much more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-spotify-api"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://developer.spotify.com/"&gt;Spotify API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fShVj5W2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/i7JR2mO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fShVj5W2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/i7JR2mO.png" alt="Spotify API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With Spotify's API, you can get metadata about music artists, albums, tracks, and user-related data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-twitter-api"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://developer.twitter.com/en/docs/twitter-api"&gt;Twitter API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h1UqkFpU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/LjZFubz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h1UqkFpU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/LjZFubz.png" alt="Twitter API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Twitter API is the official API for the Twitter social media app. This API allows you to retrieve and engage with tweets, users, and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-stripe-api"&gt;
  &lt;/a&gt;
  13. &lt;a href="https://stripe.com/docs/api"&gt;Stripe API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1zUBZ8Bd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/oxgWLWp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1zUBZ8Bd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/oxgWLWp.png" alt="Stripe API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Stripe API is an API which allows users to make payments and send it to your credit card. It's an extremely popular API for any websites which require payments.&lt;/p&gt;

&lt;p&gt;Thanks for reading the article ‚ù§Ô∏è&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/suprabhasupi"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aDe0OdcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/4t25pJE.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        üåü &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        üìö &lt;a href="https://gum.co/css-pseudo-class-elements"&gt; Ebooks&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        üåü &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>lntroduction to Laravel Livewire </title>
      <author>Judith ‚òÅ Oiku</author>
      <pubDate>Mon, 30 Aug 2021 08:12:59 +0000</pubDate>
      <link>https://dev.to/osejudith/lntroduction-to-laravel-livewire-aif</link>
      <guid>https://dev.to/osejudith/lntroduction-to-laravel-livewire-aif</guid>
      <description>&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;br&gt;
This article introduces Livewire and how it can be implemented into a Laravel application.&lt;/p&gt;

&lt;p&gt;A modern full-stack web app can be a bit complex to build especially with tools like Vue and React and this is the problem Livewire aims to solve.&lt;/p&gt;

&lt;p&gt;Livewire is a full-stack framework for Laravel that enables a developer to build a dynamic interface that is less complex within the Laravel environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt; &lt;br&gt;
Basic knowledge of Laravel is needed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Takeaways&lt;/strong&gt;&lt;br&gt;
After going through this article, you will understand:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What Livewire is?&lt;/li&gt;
&lt;li&gt;What problem does Livewire aim to solve, and &lt;/li&gt;
&lt;li&gt;How to get started with Livewire&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;with that being said, the following steps will enable us to get started with Livewire and how we can implement it into our Laravel application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;br&gt;
a) Install a new Laravel project using &lt;br&gt;
&lt;code&gt;composer create-project laravel/laravel laravel-livewire&lt;/code&gt;&lt;br&gt;
b) cd into laravel-livewire&lt;br&gt;
c) Run &lt;code&gt;composer require livewire/livewire&lt;/code&gt;&lt;br&gt;
d) Include &lt;code&gt;@livewireStyles&lt;/code&gt; and &lt;code&gt;@livewireScripts&lt;/code&gt; in the head and body tag of your &lt;code&gt;views/welcome.blade.php&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"{{ str_replace('_', '-', app()-&amp;gt;getLocale()) }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Laravel | Livewire&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- Fonts --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&amp;amp;display=swap"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- Styles --&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Nunito'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
        @livewireStyles
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"antialiased"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;


        @livewireScripts
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;once that is done, we have all we need to start using Livewire in our Laravel application.&lt;/p&gt;

&lt;p&gt;e) Next, run &lt;code&gt;php artisan serve&lt;/code&gt;&lt;br&gt;
f) Let make our first Livewire component for a simple counter to increase and decrease a value using the &lt;code&gt;php artisan make livewire counter&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;if that is successful, you should see a screen like the one below in your terminal&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qh09-CB2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlqddghj4tlyodc4t4s0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qh09-CB2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlqddghj4tlyodc4t4s0.PNG" alt="livewire"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking into our project structure, the above command created two new files in &lt;code&gt;app/Http/Livewire/Counter.php&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Livewire&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Livewire\Component&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Counter&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Component&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'livewire.counter'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and &lt;code&gt;resources\views/livewire/counter.blade.php&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    ....
&amp;lt;/div&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;g) Next, we want to render a simple text to our browser to ensure our component is working, modify your counter Livewire blade file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;I am learning Livewire&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;h) Before that, we need to include &lt;code&gt;&amp;lt;livewire: counter /&amp;gt; &lt;br&gt;
&lt;/code&gt; component in our welcome blade file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"{{ str_replace('_', '-', app()-&amp;gt;getLocale()) }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Laravel | Livewire&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- Fonts --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&amp;amp;display=swap"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- Styles --&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Nunito'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
        @livewireStyles
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"antialiased"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;livewire:counter&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; 

        @livewireScripts
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we can now preview it on our browser &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v8de4lyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqhbgrg3jpki9djt5rgy.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v8de4lyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqhbgrg3jpki9djt5rgy.PNG" alt="image2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whola!, we have our component rendered to the browser successfully.&lt;br&gt;
i) We can now implement our simple counter&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Livewire&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Livewire\Component&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Counter&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Component&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;increase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;decrease&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'livewire.counter'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we declared a public property &lt;code&gt;$count&lt;/code&gt; initialized to zero, a method to increase and decrease the number. Public property in Livewire is automatically made available to the view.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"text-align: center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Counter using Laravel Livewire&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;wire:click=&lt;/span&gt;&lt;span class="s"&gt;"increase"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;+&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;wire:click=&lt;/span&gt;&lt;span class="s"&gt;"decrease"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;-&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{$count}}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we used the livewire template directive in our buttons to increase and decrease the number.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yzznt0qR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztjduc3trk9any0rnyun.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yzznt0qR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztjduc3trk9any0rnyun.PNG" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
we have successfully implemented a simple counter to increase and decrease numbers using Livewire. &lt;/p&gt;

&lt;p&gt;A lot can be still be gotten from Livewire to enable you to build that full-stack modern web application.&lt;/p&gt;

&lt;p&gt;To read and get more on Livewire, visit &lt;a href="https://laravel-livewire.com/docs/2.x/quickstart"&gt;livewire documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code snippet for this tutorial can be found in my &lt;a href="https://github.com/ojudith/laravel-livewire"&gt;GitHub repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to say hi via &lt;a href="https://www.linkedin.com/in/oikujudith/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>livewire</category>
      <category>beginners</category>
      <category>php</category>
    </item>
    <item>
      <title>3 Website which you can find your custom React hooks</title>
      <author>Abdullah Furkan √ñzbek</author>
      <pubDate>Mon, 30 Aug 2021 08:06:43 +0000</pubDate>
      <link>https://dev.to/afozbek/3-website-which-you-can-find-your-custom-react-hooks-1fa7</link>
      <guid>https://dev.to/afozbek/3-website-which-you-can-find-your-custom-react-hooks-1fa7</guid>
      <description>&lt;p&gt;3 website which you can find your custom React hooks;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://30secondsofcode.org/react/t/hooks/p/1"&gt;https://30secondsofcode.org/react/t/hooks/p/1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://usehooks-typescript.com"&gt;https://usehooks-typescript.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://usehooks.com"&gt;https://usehooks.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>hooks</category>
      <category>javascript</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>You Don't Have To Use Observables In Angular</title>
      <author>Dev By RayRay</author>
      <pubDate>Mon, 30 Aug 2021 07:42:35 +0000</pubDate>
      <link>https://dev.to/devbyrayray/you-don-t-have-to-use-observables-in-angular-1653</link>
      <guid>https://dev.to/devbyrayray/you-don-t-have-to-use-observables-in-angular-1653</guid>
      <description>&lt;p&gt;In Angular, you can perform asynchronous actions in two different ways, Observables, and Promises.&lt;/p&gt;

&lt;p&gt;Most people pick Observables because every example on blogs and documentation tells you to do so. But why? Are Promises that bad? Or Observables that good?&lt;/p&gt;

&lt;p&gt;In this post, I want to dive with you into the why! Why and when should we use Observables, and when are Promises just fine.&lt;/p&gt;

&lt;p&gt;Let's start with comparing the two with each other.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" alt="divider-byrayray.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#observables-vs-promises"&gt;
  &lt;/a&gt;
  Observables VS Promises
&lt;/h2&gt;

&lt;p&gt;Let's start with the Observables.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#observables"&gt;
  &lt;/a&gt;
  Observables
&lt;/h3&gt;

&lt;p&gt;Angular is using under the hood RxJS. RxJS comes with a great set of features like Observables.&lt;/p&gt;

&lt;p&gt;Observables can perform asynchronous and synchronous actions in comparison to Promises. Promises can only perform asynchronous actions.&lt;/p&gt;

&lt;p&gt;When Observables are created, it does nothing until a piece of code decides to subscribe to it. You can cancel a subscription to Observables, or when an error is happening, it's automatically unsubscribed.&lt;/p&gt;

&lt;p&gt;Observables handle a stream of values. It updates very quickly at a later point in time.&lt;/p&gt;

&lt;p&gt;To summarise:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Observables behaviors&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Multiple values&lt;/li&gt;
&lt;li&gt;Can be canceled&lt;/li&gt;
&lt;li&gt;Great for real-time information&lt;/li&gt;
&lt;li&gt;Can be subscribed to from multiple places&lt;/li&gt;
&lt;li&gt;Errors unsubscribe automatically&lt;/li&gt;
&lt;li&gt;Observables are declarative. They are only performed when something is subscribed to it.&lt;/li&gt;
&lt;li&gt;Have a built-in mechanism to perform transformations to the data (map, forEach, filter, reduce, retry, and retryWhen operators)&lt;/li&gt;
&lt;li&gt;Can be both asynchronous and synchronous&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#promises"&gt;
  &lt;/a&gt;
  Promises
&lt;/h3&gt;

&lt;p&gt;A Promise is a general JavaScript concept introduced since ES2015 (ES6). It's ideal for performing asynchronous actions. It doesn't have subscribers like Observables.&lt;/p&gt;

&lt;p&gt;A Promise can't be canceled like an Observable. It can be resolved or rejected, nothing more, nothing less. It can handle single values instead of a stream of values. &lt;/p&gt;

&lt;p&gt;Promises are performed on creation instead of subscription like Observables are.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to learn more about Promises, check  &lt;a href="https://hasnode.byrayray.dev/how-promises-actually-work-in-javascript-1c80b1af7193"&gt;a more detailed post I wrote earlier&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To summarise:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Promises behaviors&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Single value&lt;/li&gt;
&lt;li&gt;Can't be canceled&lt;/li&gt;
&lt;li&gt;Great for single time information&lt;/li&gt;
&lt;li&gt;Can't re-use or distribute information&lt;/li&gt;
&lt;li&gt;Promises are performed on the creation&lt;/li&gt;
&lt;li&gt;Is always asynchronous&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" alt="divider-byrayray.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-use-a-promise-or-observable"&gt;
  &lt;/a&gt;
  When Use A Promise Or Observable?
&lt;/h2&gt;

&lt;p&gt;As we saw earlier, the most significant difference between a Promise and an Observable is handling a single value and a stream of values.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-a-observable"&gt;
  &lt;/a&gt;
  Use A Observable
&lt;/h3&gt;

&lt;p&gt;An Observable is ideal for situations where the data changes during its lifetime.&lt;/p&gt;

&lt;p&gt;Situations to use&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Real-time data from a WebSocket, for example. Think about dashboards, chat messages, notifications, video subtitles, sound visualizations.&lt;/li&gt;
&lt;li&gt;Or actions that are performed very often by a user. For example, think about collapsable menus, dark and light modes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These situations require data to update in a short amount of time, at least in the same lifetime of the subscriptions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-a-promise"&gt;
  &lt;/a&gt;
  Use A Promise
&lt;/h3&gt;

&lt;p&gt;Since a Promise can handle a single value,  there are pretty many situations to use it.&lt;/p&gt;

&lt;p&gt;Situations to use&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Forms submission: Creating, editing, and deleting data entities don't require a constantly updated stream of data. The form data is sent to the API; it's successfully done or not.&lt;/li&gt;
&lt;li&gt;API requests for data that doesn't change real-time: a large amount of data to show an overview page or a detail page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of these situations don't require that data to change that often. Data is collected by an API call, displayed, and done. It's that simple.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" alt="divider-byrayray.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-everyone-using-observables-for-everything"&gt;
  &lt;/a&gt;
  Why Is Everyone Using Observables For Everything?
&lt;/h2&gt;

&lt;p&gt;So this raises for me the question. "Why is everyone using Observables for everything?"&lt;/p&gt;

&lt;p&gt;Yes, I'm guilty on this topic myself! I have done singular requests using an Observable. Was it needed? No!&lt;/p&gt;

&lt;p&gt;Keeping a subscription open, while the data is not changing in the lifetime of that Observable, is not correctly using the power of a browser. Besides that, most developers (myself included) will forget to unsubscribe from their Observable quite often.&lt;/p&gt;

&lt;p&gt;My rule of thumb mostly is: "&lt;em&gt;If you don't need it, don't include or use it!&lt;/em&gt;"&lt;/p&gt;

&lt;p&gt;Let's not waste our resources but use everything for its purpose.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" alt="divider-byrayray.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summarize"&gt;
  &lt;/a&gt;
  Summarize
&lt;/h2&gt;

&lt;p&gt;Okay, let's make this easy for everyone.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Use an Observable for data that is changing real-time or more often during its lifetime. Don't waste resources! Use A Promise if the data isn't changing during the lifetime of a component!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It could be possible that I'm missing the point or being wrong üòÖ. Would you please let me know in the comments what I'm missing?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" alt="divider-byrayray.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks"&gt;
  &lt;/a&gt;
  Thanks!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DymzaNFk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629789655319/nBF6anHH4w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DymzaNFk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629789655319/nBF6anHH4w.png" alt="hashnode-footer.png"&gt;&lt;/a&gt;&lt;br&gt;
*I hope you learned something new or are inspired to create something new after reading this story! ü§ó If so, consider subscribing via email (scroll to the top of this page) or follow me here on Hashnode.&lt;br&gt;
*&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Did you know that you can create a &lt;a href="https://hashnode.com/@devbyrayray/joinme"&gt;Developer blog like this one, yourself&lt;/a&gt;? It's entirely for free. üëçüí∞üéâü•≥üî•&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;If I left you with questions or something to say as a response, scroll down and type me a message. Please send me a &lt;a href="https://twitter.com/@devbyrayray"&gt;DM on Twitter @DevByRayRay&lt;/a&gt; when you want to keep it private. My DM's are always open üòÅ&lt;/em&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>UUID or cached sequences?</title>
      <author>Franck Pachot</author>
      <pubDate>Mon, 30 Aug 2021 07:41:47 +0000</pubDate>
      <link>https://dev.to/yugabyte/uuid-or-cached-sequences-42fi</link>
      <guid>https://dev.to/yugabyte/uuid-or-cached-sequences-42fi</guid>
      <description>&lt;p&gt;One reason why people choose a UUID for the surrogate key is scalability. Because it generates unique values without having to synchronize with a central generator like a sequence. There are other reasons to use UUID but this post is about scalability. In most databases, sequences can be scalable with a cache: the central catalog object that manages the sequence doesn't have to be read each time we need a next value. Even when the database does not provide a sequence cache, it is very easy to manage from the application. When you read from the sequence, multiply it by 50 and use it as the base to add to a local counter from 1 to 50. You will read the next value from the central point of truth only once every 50 next value generation. This is what JPA @SequenceGenerator is doing and 50 is the Hibernate default.&lt;/p&gt;

&lt;p&gt;If you have a high throughput of inserts, you can increase the cache. Reading from the central sequence every 32767 inserts is probably a negligible overhead. Why am I putting 32767 ? Because this takes 2 bytes, out of the 8 bytes of the PostgreSQL bigint. So, even if the cached values are not used (which should happen only when connections in the pool are recycled) it remains 1e14 numbers from the bigint - enough to ingest a million rows every second for 30 years. You see where I'm going: even with a huge cache, an 8 bytes sequence is sufficient for scalability, compared to the 16 bytes UUID required to ensure unicity without a sequence.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#postgresql"&gt;
  &lt;/a&gt;
  PostgreSQL
&lt;/h2&gt;

&lt;p&gt;In PostgreSQL the sequence cache is per session. If you constantly connect and disconnect, you will waste the cache range each time. But anyway, this is not how the database should be used. A connection is a process creation on the backend and if you do that for each transaction, you have a bigger problem than the wasted sequence cache. The application server should use a connection pool, and then the cache is re-used. I've created the following example, in python,  to read the nextval() for each session grabbed from the pool. With 5 concurrent threads and a connection pool that can grow to 5 connections.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;   &lt;span class="nn"&gt;sqlalchemy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Sequence&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;threading&lt;/span&gt;

&lt;span class="n"&gt;yb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sqlalchemy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'postgresql+psycopg2://franck:yugabyte@yba.pachot.net:5433/yb_demo_northwind'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pool_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;max_overflow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;mythread&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
 &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;threading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_thread&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;nextid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Sequence&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'myseq'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;nextid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; from &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;threading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_thread&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;yb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pool&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;yb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'drop sequence if exists myseq; create sequence myseq cache 32767'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;mythreads&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;threading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mythread&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;mythreads&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;mythreads&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
 &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the beginning of the output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     1 from Thread-1 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
     2 from Thread-1 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
     3 from Thread-1 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
     4 from Thread-1 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
     5 from Thread-1 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
     6 from Thread-1 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
 32768 from Thread-4 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
     7 from Thread-1 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
 65535 from Thread-5 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
 98302 from Thread-2 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
131069 from Thread-3 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
 32769 from Thread-4 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
     8 from Thread-1 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
 65536 from Thread-5 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
131070 from Thread-3 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
 98303 from Thread-2 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
 32770 from Thread-4 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
     9 from Thread-1 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
 65537 from Thread-5 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
131071 from Thread-3 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
 98304 from Thread-2 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
 32771 from Thread-4 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
    10 from Thread-1 Pool size: 1  Connections in pool: 1 Current Overflow: 4 Current Checked out connections: 4
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Even if I am using different session each time, they are grabbed from the connection pool and the sequence cache is still there from the previous one. Thread 1 has started first and grabs the first connection from the pool, and uses numbers within the cached range of 1-32767. It may not use them all if the connection is recycle but for sure the waste of number is not as large as the cache value. You can see that the other threads grab additional connections, starting at 32768, 65535... and then using the values in this range. So, with this solution, you waste only occasionally a small part of the 2 bytes range. Nothing to worry when compared to the UUID which has to waste a lot more (UUID is 16 bytes) to ensure a very low probability of collision.&lt;/p&gt;

&lt;p&gt;(Here is a &lt;a href="https://www.kaggle.com/franckpachot/https-dev-to-yugabyte-uuid-or-cached-sequences-c/log"&gt;kaggle&lt;/a&gt; with this example if you want to play with)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yugabytedb"&gt;
  &lt;/a&gt;
  YugabyteDB
&lt;/h2&gt;

&lt;p&gt;I said PostgreSQL but I was connected to a YugabyteDB because they are fully compatible with postgres. The same query layer is used but the storage is different. In Yugabyte, all sequences are stored in a distributed table which is replicated according to the replication factor, and is still available in the event of a node crash or network failure. Because the leader tablet for the sequence may be on another node, the latency to read it is higher. And because it is replicated to other nodes, the latency to write to the quorum is also higher than monolith PostgreSQL. As a consequence, a large cache is a strong recommendation. To be sure that performance is fine even when not defining the cache explicitly, the default in YugabyteDB is pushed to 100 instead of 1 in PostgreSQL. And if the throughput is high, it is highly recommended to go higher. Don't worry about the gap, this will still be smaller than a UUID. &lt;/p&gt;

&lt;p&gt;Despites their name, sequence generators are there to provide unique numbers, not a no-gap series. There's a lot to say about primary key, surrogate keys... will discuss about this at &lt;a href="https://jokerconf.com/en/"&gt;Joker 2021&lt;/a&gt; in October: &lt;a href="https://jokerconf.com/en/2021/talks/4sezsd94jevt4zjyiuje3w/"&gt;SQL primary key, surrogate key, composite keys, foreign keys... and JPA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, with YugabyteDB as with PostgreSQL, you can generate a UUID with &lt;code&gt;gen_random_uuid()&lt;/code&gt; as &lt;em&gt;pg_crypto&lt;/em&gt; is installed by default. You can also install uuid-ossp.&lt;/p&gt;

&lt;p&gt;But let's see another advantage of the cached sequence in a distributed database. You may want to distribute all rows even when generated from the same session. And this will be the case if you define the primary key with HASH sharding, the default. &lt;br&gt;
Like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;bigint&lt;/span&gt; &lt;span class="k"&gt;generated&lt;/span&gt; &lt;span class="n"&gt;always&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="k"&gt;identity&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;start&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;cache&lt;/span&gt; &lt;span class="mi"&gt;32767&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="k"&gt;constraint&lt;/span&gt; &lt;span class="n"&gt;t1_id&lt;/span&gt; &lt;span class="k"&gt;primary&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="n"&gt;HASH&lt;/span&gt; &lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or you may prefer to keep clustered the rows that are inserted together:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;bigint&lt;/span&gt; &lt;span class="k"&gt;generated&lt;/span&gt; &lt;span class="n"&gt;always&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="k"&gt;identity&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;start&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;cache&lt;/span&gt; &lt;span class="mi"&gt;32767&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="k"&gt;constraint&lt;/span&gt; &lt;span class="n"&gt;t1_id&lt;/span&gt; &lt;span class="k"&gt;primary&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt; &lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can even define the ranges. The cache range will put rows at different place, in the same table it they are all in the same range. That's a choice, you can also rely on &lt;a href="https://docs.yugabyte.com/latest/architecture/docdb-sharding/tablet-splitting/#automatic-tablet-splitting"&gt;Automatic Tablet Splitting&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-short"&gt;
  &lt;/a&gt;
  In short
&lt;/h2&gt;

&lt;p&gt;You have the choice. There are reasons to use a UUID which have nothing to do with size or performance. For example, seeing UUID in logs rarely raises security audit concerns but having numbers generated in sequence may allow some guesses about your business information. This can be mitigated by starting at a high number, and it is highly shuffled by the cache, but anyway, security policy may not allow it. However, when the concern is scalability we need to think clearly. At first glance, it seems that a cache has a state which must be shared by all sessions, and then is not scalable. But with a large cache, querying and updating the sequence becomes an infrequent operation where the latency doesn't matter. And once you solved this, you can get all advantages of a sequence. The ascending nature of the number helps clustering rows together to accelerate bulk loads. Or, on the opposite, can be distributed by hash sharding if that's preferable to distribute the load to many nodes. &lt;/p&gt;

&lt;p&gt;The size also matters. 16 bytes in the primary key and all foreign keys is large. My sequence, with &lt;code&gt;bigint&lt;/code&gt;, is two times smaller.  And operations on it, like comparing or increasing a integer, is a very simple CPU operation when compared to generating a UUID with enough randomness. Just run the following on PostgreSQL or YugabyteDB:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="n"&gt;extension&lt;/span&gt; &lt;span class="n"&gt;pgcrypto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;timing&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt;
&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="n"&gt;sequence&lt;/span&gt; &lt;span class="n"&gt;myseq&lt;/span&gt; &lt;span class="k"&gt;cache&lt;/span&gt; &lt;span class="mi"&gt;32767&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nextval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'myseq'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;generate_series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10000000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gen_random_uuid&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;generate_series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10000000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this large cache, the sequence generates 3 million unique numbers per second, but less than one million per second for the UUID:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WBocyatF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrp9qr8a4lp6iy7g1ld9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WBocyatF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrp9qr8a4lp6iy7g1ld9.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you never thought about the sequence cache size, there's a good chance that you think sequences are not scalable. The problem is not the SQL sequence, but keeping the defaults that are often too small.&lt;/p&gt;

</description>
      <category>database</category>
      <category>postgres</category>
      <category>sql</category>
      <category>yugabyte</category>
    </item>
    <item>
      <title>Printing in React Made Easy With React-To-Print</title>
      <author>NJOKU SAMSON EBERE</author>
      <pubDate>Mon, 30 Aug 2021 07:23:52 +0000</pubDate>
      <link>https://dev.to/ebereplenty/printing-in-react-made-easy-with-react-to-print-4b3k</link>
      <guid>https://dev.to/ebereplenty/printing-in-react-made-easy-with-react-to-print-4b3k</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;It is easy to use the regular javaScript &lt;code&gt;print()&lt;/code&gt; method to trigger the printing of a whole window or page of a website. &lt;/p&gt;

&lt;p&gt;However, we do not always desire that. We may be interested in printing just a part of that website. In fact, we may not even desire that the part we want to print be visible to the user until the print button is clicked. In doing all these, you still want the styling of that portion to maintained.&lt;/p&gt;

&lt;p&gt;All these problem has been fixed in React using the &lt;a href="https://www.npmjs.com/package/react-to-print"&gt;React-To-Print&lt;/a&gt; npm package. I will be demonstrating how you can print using the &lt;strong&gt;React-To-Print&lt;/strong&gt; and even hide the component being printed while maintaining the CSS styles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-reacttoprint"&gt;
  &lt;/a&gt;
  What is React-To-Print?
&lt;/h2&gt;

&lt;p&gt;This is an npm package that aims to give end users the ability to print out the contents of a component by popping up a print window with CSS styles copied over as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;p&gt;This tutorial assumes that you already have the basic knowledge of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;JavaScript&lt;/a&gt; and &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; especially the &lt;a href="https://reactjs.org/docs/components-and-props.html"&gt;difference between class and functional component&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#starter-project"&gt;
  &lt;/a&gt;
  Starter project
&lt;/h2&gt;

&lt;p&gt;We will be using the app we &lt;a href="https://dev.to/ebereplenty/full-stack-authentication-and-hosting-nodejs-reactjs-heroku-netlify-3fcm"&gt;created here&lt;/a&gt; as the starter project of this tutorial. To get the project setup in your local machine, do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clone the &lt;a href="https://github.com/EBEREGIT/react-auth"&gt;repo&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;clone&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/EBEREGIT/react-auth&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install the dependencies
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Load the project on your browser
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You should have this view on your browser now&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aUktmLBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v558vyh16t2k1kk03bas.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aUktmLBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v558vyh16t2k1kk03bas.JPG" alt="Starter Project Initial View"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Awesome!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-the-component-to-be-printed"&gt;
  &lt;/a&gt;
  Building the component to be Printed
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create a component to contain the button that triggers the printing of the desired component
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-bootstrap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactToPrint&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-to-print&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;PrintComponent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;componentRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* button to trigger printing of target component */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ReactToPrint&lt;/span&gt;
          &lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Print&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;          &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;componentRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* component to be printed */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ComponentToPrint&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;From the code above, we imported the &lt;code&gt;ReactToPrint&lt;/code&gt; library, then we called the &lt;code&gt;ReactToPrint&lt;/code&gt; component in the body. The &lt;code&gt;ReactToPrint&lt;/code&gt; holds the &lt;strong&gt;trigger&lt;/strong&gt; &lt;em&gt;(this can be a button or what so ever we choose)&lt;/em&gt; and the &lt;strong&gt;content&lt;/strong&gt; &lt;em&gt;(this is a reference to the component that is to be printed)&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Below the &lt;code&gt;ReactToPrint&lt;/code&gt; component is the component to be printed with a &lt;code&gt;ref&lt;/code&gt; connecting it to the &lt;code&gt;ReactToPrint&lt;/code&gt; content props.&lt;/p&gt;

&lt;p&gt;Now, let's build the &lt;code&gt;ComponentToPrint&lt;/code&gt; component with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ComponentToPrint&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Attendance&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;thead&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/th&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/th&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Email&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/th&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/thead&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;tbody&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/td&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Njoku&lt;/span&gt; &lt;span class="nx"&gt;Samson&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/td&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;samson&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;yahoo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/td&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/tr&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/td&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Ebere&lt;/span&gt; &lt;span class="nx"&gt;Plenty&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/td&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;ebere&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;gmail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/td&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/tr&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/td&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Undefined&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/td&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;No&lt;/span&gt; &lt;span class="nx"&gt;Email&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/td&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/tr&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/tbody&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/table&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add the following styles in the &lt;code&gt;index.css&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="nt"&gt;thead&lt;/span&gt; &lt;span class="nt"&gt;th&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Render the component in the &lt;code&gt;freeComponent.js&lt;/code&gt; file like so:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PrintComponent&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Don't forget to import the component on top of the file like so:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PrintComponent&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./PrintComponent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now, navigate to &lt;code&gt;http://localhost:3000/free&lt;/code&gt; and you should have the following screen:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jOG22vGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjnlrcx3ev7ln7vja0kr.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOG22vGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjnlrcx3ev7ln7vja0kr.JPG" alt="Screen with Print component"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you click on the blue button, you should have the print dialogue with the print preview
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--paUAeA2l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ele9hm5mxw5w0442y6hn.JPG" alt="print dialogue with the print preview"&gt;
&lt;em&gt;Notice that the print preview has only the component that we desire to print and the CSS styles are not left out. How awesome!!!&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hiding-the-component-to-be-printed"&gt;
  &lt;/a&gt;
  Hiding the component to be printed
&lt;/h3&gt;

&lt;p&gt;Sometimes, we don't want our users to see what is to be printed until the print button is clicked. This is useful when you are generating invoice, receipt and so on. To make this happen, go to the &lt;code&gt;PrintComponent&lt;/code&gt; component in the &lt;code&gt;PrintComponent.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Replace &lt;code&gt;&amp;lt;ComponentToPrint ref={(el) =&amp;gt; (componentRef = el)} /&amp;gt;&lt;/code&gt; with the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ComponentToPrint&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;componentRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You should have the following screen now:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ntSfpeZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fni57zc095kuen9xmd6o.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ntSfpeZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fni57zc095kuen9xmd6o.JPG" alt="The free component screen with hidden print component"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;You will still get same result if you click the print button like mine below:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--paUAeA2l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ele9hm5mxw5w0442y6hn.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--paUAeA2l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ele9hm5mxw5w0442y6hn.JPG" alt="print dialogue with the print preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Incredible!!!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#important-notice"&gt;
  &lt;/a&gt;
  IMPORTANT NOTICE!
&lt;/h3&gt;

&lt;p&gt;The trigger component &lt;em&gt;(&lt;code&gt;PrintComponent&lt;/code&gt; in our case)&lt;/em&gt; can be either functional or class component but the component to be printed &lt;em&gt;(&lt;code&gt;ComponentToPrint&lt;/code&gt; in our case)&lt;/em&gt; must be a class component for it to work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;We have been able to see how to make printing in React very easy. Not just that we can print only the component we want, we can also hide the component and the CSS styles will not be affected.&lt;/p&gt;

&lt;p&gt;There are a lot of other functionalities that we didn't touch but are available in the documentation. I encourage you to take your time and look into the documentation, play around with other functionalities and see what you can come up with. &lt;/p&gt;

&lt;p&gt;All codes are &lt;a href="https://github.com/EBEREGIT/react-auth/tree/print-tutorial!%5Bimage%5D(https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nuu0ec3k5cjj2wqw6zg.png)"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>[Part 2] How to build your own natural language image search engine</title>
      <author>rkouye</author>
      <pubDate>Mon, 30 Aug 2021 07:19:27 +0000</pubDate>
      <link>https://dev.to/rkouye/how-to-build-your-own-natural-language-image-search-engine-part-2-329g</link>
      <guid>https://dev.to/rkouye/how-to-build-your-own-natural-language-image-search-engine-part-2-329g</guid>
      <description>&lt;p&gt;&lt;a href="https://helios-app.vercel.app/"&gt;Try it online&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In part 1, we explored how to build a na√Øve natural language image search engine using Open AI's &lt;a href="https://openai.com/blog/clip/"&gt;CLIP&lt;/a&gt;. But our implementation had linear time complexity.&lt;/p&gt;

&lt;p&gt;To speed up the process, let's understand how CLIP works.&lt;/p&gt;

&lt;p&gt;CLIP can be instructed, in natural language, to predict the most relevant text snippet, given an image, without directly optimizing for the task.&lt;/p&gt;

&lt;p&gt;To do so, it translates the input (text or image) into a relatively low dimensional space in which similar images and text are close to each other. This process is called embedding.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c9mQd2IH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkhoh8h5w5q61j81piax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c9mQd2IH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkhoh8h5w5q61j81piax.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the embedded space, each input map to a vector.&lt;/p&gt;

&lt;p&gt;A vector is just an object in (a vector) space. &lt;/p&gt;

&lt;p&gt;More generally, all &lt;strong&gt;n-tuples&lt;/strong&gt; (sequences of length n) &lt;code&gt;(a1, a2, ..., an)&lt;/code&gt; of elements &lt;code&gt;ai&lt;/code&gt; form a vector space of dimension n. &lt;/p&gt;

&lt;p&gt;The nearest neighbors of each vector are the best match for our search query.&lt;/p&gt;

&lt;p&gt;We can use &lt;strong&gt;cosine similarity&lt;/strong&gt; to retrieve the nearest neighbors. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cosine similarity&lt;/strong&gt; is a measure of similarity between two non-zero vectors. It is defined to equal the cosine of the angle between them. One advantage of cosine similarity is its low complexity : only the non-zero dimensions need to be considered. It is also bounded (&lt;code&gt;-1 to 1&lt;/code&gt;) which makes it ideal for information retrieval.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#breaking-down-our-na%C3%AFve-implementation"&gt;
  &lt;/a&gt;
  Breaking down our na√Øve implementation
&lt;/h2&gt;

&lt;p&gt;Our previous implementation could be split into two phases: Indexing and Searching.&lt;/p&gt;

&lt;p&gt;During indexing, we embed each of our images and store the resulting vector somewhere.&lt;/p&gt;

&lt;p&gt;During a search, we embed our search query and compute the cosine similarity of the term query's vector with each of the previously stored vectors. This operation takes &lt;strong&gt;O(n)&lt;/strong&gt; ! Finally we can return the image with the best similarity score.&lt;/p&gt;

&lt;p&gt;In part 3, we will learn about existing techniques to retrieve similar vectors faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/rkouye/es-clip-image-search"&gt;Source code&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>deeplearning</category>
      <category>elasticsearch</category>
      <category>python</category>
    </item>
  </channel>
</rss>
