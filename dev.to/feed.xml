<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Crypto price tracker with JS</title>
      <author>Rohit Sharma</author>
      <pubDate>Thu, 06 Jan 2022 08:45:31 +0000</pubDate>
      <link>https://dev.to/devrohit0/crypto-price-tracker-with-js-57d7</link>
      <guid>https://dev.to/devrohit0/crypto-price-tracker-with-js-57d7</guid>
      <description>&lt;p&gt;Hello Everyone! Today we are going to create a website which gives us current price of any crypto currency listed on coingecko. For this project we are going to use &lt;a href="https://www.coingecko.com/en/api"&gt;Coingecko API&lt;/a&gt; Free version. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UED-ytfLcwI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h2&gt;

&lt;p&gt;We have to use two &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;. In the first &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; we create some &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt;,which user select to get current price of Cryptocurrency(for example: bitcoin, ethereum etc.) and in the second &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; we create &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; for currency (example: usd, inr etc.)&lt;/p&gt;

&lt;p&gt;We also need to create a button, &lt;code&gt;onclick&lt;/code&gt; we call our API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;CoinRate&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;CoinRate&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"inputs"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"selectCrypto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"crypto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;option&amp;gt;&lt;/span&gt;bitcoin&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;option&amp;gt;&lt;/span&gt;ethereum&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;option&amp;gt;&lt;/span&gt;solana&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;option&amp;gt;&lt;/span&gt;aave&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Check Price&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"selectCurrency"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"currency"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;option&amp;gt;&lt;/span&gt;usd&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;option&amp;gt;&lt;/span&gt;inr&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;

                &lt;span class="nt"&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"outputs"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
            &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;price&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Price&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;Copyright &lt;span class="ni"&gt;&amp;amp;copy;&lt;/span&gt; CoinRate (Coingecko API) &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;'https://www.freepik.com/vectors/logo'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Logo vector created by freepik - www.freepik.com&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"main.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h2&gt;

&lt;p&gt;You can style your webpage as according to you. My CSS code for this project is given below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(/5499459.jpg)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-repeat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;no-repeat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt; &lt;span class="m"&gt;25%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-rows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25%&lt;/span&gt; &lt;span class="m"&gt;30%&lt;/span&gt; &lt;span class="m"&gt;20%&lt;/span&gt; &lt;span class="m"&gt;25%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="s1"&gt;"header header header"&lt;/span&gt;
    &lt;span class="s1"&gt;". inputs ."&lt;/span&gt;
    &lt;span class="s1"&gt;". outputs ."&lt;/span&gt;
    &lt;span class="s1"&gt;"footer footer footer"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#header&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;footer&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#inputs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="py"&gt;grid-template-rows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="s1"&gt;"selectCrypto selectCurrency"&lt;/span&gt;
    &lt;span class="s1"&gt;"btn btn"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#btn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#9eeaf0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#9eeaf0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#selectCrypto&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;selectCrypto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#selectCurrency&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;selectCurrency&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#outputs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#inpCrypto&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;236&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;243&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;max-content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#inpCrypto&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;236&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;243&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;max-content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#price&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;236&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;243&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;max-content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;215&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;215&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;215&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#9eeaf0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;select&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#9eeaf0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;option&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h2&gt;

&lt;p&gt;This is the most important part of this project.&lt;br&gt;
Grab the all important elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;price&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;btn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;cryptoInp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#crypto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currencyInp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#currency&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add an event listener to &lt;code&gt;btn&lt;/code&gt; which fire &lt;code&gt;getPrice()&lt;/code&gt; function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;getPrice&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we'll write our &lt;code&gt;getPrice()&lt;/code&gt; fuunction. We use AJAX for this project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getPrice&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cryptoInp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currency&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currencyInp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;xhr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;xhr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.coingecko.com/api/v3/simple/price?ids=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;amp;vs_currencies=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;xhr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;price&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Current Price is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;price&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;price&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;xhr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you loved it. If  yes , then drop a like and support my work.&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/devrohit"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gB5HhZkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-blue.png" alt="Buy Me A Coffee" width="434" height="100"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>The best features added to JavaScript from 2016 to 2021</title>
      <author>[ATTILA]</author>
      <pubDate>Thu, 06 Jan 2022 08:43:01 +0000</pubDate>
      <link>https://dev.to/realattila/the-best-features-added-to-javascript-from-2016-to-2021-5803</link>
      <guid>https://dev.to/realattila/the-best-features-added-to-javascript-from-2016-to-2021-5803</guid>
      <description>&lt;p&gt;hi,ECMAScript is a JavaScript standard meant to ensure the interoperability of web pages across different web browsers. It is standardized by Ecma International according to the document ECMA-262. ECMAScript is commonly used for client-side scripting on the World Wide Web.&lt;br&gt;
in this article, we gonna talk about amazing features that we all need to use in our projects.&lt;br&gt;
after ECMAScript 2015, nearly we have a new version of javascript that have major changes, like arrow functions, sets, maps, classes and destructuring.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#es7ecmascript-2016"&gt;
  &lt;/a&gt;
  ES7(ECMAScript 2016)
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#arrayprototypeincludes"&gt;
  &lt;/a&gt;
  Array.prototype.includes
&lt;/h3&gt;

&lt;p&gt;Determines whether an array includes a certain element or not&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[1, 2, 3].includes(3, 0, 7); // true
[1, 2, NaN].includes(NaN); // true
[0,+1,-1].includes(42); // false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#es8ecmascript-2017"&gt;
  &lt;/a&gt;
  ES8(ECMAScript 2017)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#async-functions"&gt;
  &lt;/a&gt;
  Async functions
&lt;/h3&gt;

&lt;p&gt;here is goood example look at code blow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;async function foo() {
   const result1 = await new Promise((resolve) =&amp;gt; setTimeout(() =&amp;gt; resolve('1')))
   const result2 = await new Promise((resolve) =&amp;gt; setTimeout(() =&amp;gt; resolve('2')))
}
foo()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the async function, you can use await keyword, then code stop until result1 returns resolve or reject then code move to next line and wait for result2 until it back resolves or rejects.&lt;br&gt;
let`s look at other example.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
async function foo() {&lt;br&gt;
    try {&lt;br&gt;
        const bar = await new Promise((resolve) =&amp;gt; setTimeout(() =&amp;gt;  resolve('1')));&lt;br&gt;
    }&lt;br&gt;
    catch(e) {&lt;br&gt;
        console.log(e)&lt;br&gt;
    }&lt;br&gt;
}&lt;br&gt;
foo()&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;br&gt;
in this example you could simply use async function to use try catch&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#objectvalues"&gt;
  &lt;/a&gt;
  Object.values
&lt;/h3&gt;

&lt;p&gt;get all the values of the object as an array.&lt;br&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
var person = { fname: "Hemanth", lname: "HM", location: "Earth", type: "Human" };&lt;br&gt;
Object.values(person);&lt;br&gt;
// ["Hemanth","HM","Earth","Human"]&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#es9ecmascript-2018"&gt;
  &lt;/a&gt;
  ES9(ECMAScript 2018)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#object-rest-properties"&gt;
  &lt;/a&gt;
  Object rest properties
&lt;/h3&gt;

&lt;p&gt;Rest properties for object destructuring assignment.&lt;br&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
let { fname, lname, ...rest } = { fname: "Hemanth", lname: "HM", location: "Earth", type: "Human" };&lt;br&gt;
fname; //"Hemanth"&lt;br&gt;
lname; //"HM"&lt;br&gt;
rest; // {location: "Earth", type: "Human"}&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#spreat-operator"&gt;
  &lt;/a&gt;
  spreat operator
&lt;/h3&gt;

&lt;p&gt;The spread operator can be used to combine multiple objects or cloning objects.&lt;br&gt;
remember: speart operator can do shallow clone not deep clone, if you do not know the difference between shallow and deep wait for my next article :D&lt;br&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
const obj1 = {a:10,b:20}&lt;br&gt;
const obj2={c:30}&lt;br&gt;
const clone_obj={...obj1}&lt;br&gt;
const obj3 = {...obj1,...obj2}&lt;br&gt;
console.log(clone_obj) // {a: 10, b: 20}&lt;br&gt;
console.log(obj3) // {a: 10, b: 20, c: 30}&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#promise-finally"&gt;
  &lt;/a&gt;
  Promise: finally()
&lt;/h3&gt;

&lt;p&gt;finally is a new callback that always executed, no matter if then or catch is called. it is too useful for clean up state especially in reactjs&lt;br&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
fetch(url)&lt;br&gt;
  .then()&lt;br&gt;
  .catch()&lt;br&gt;
  .finally(() =&amp;gt; console.log(&lt;/code&gt;I'm always called!&lt;code&gt;));&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#es10ecmascript2019"&gt;
  &lt;/a&gt;
  ES10(ECMAScript2019)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#arrayflat"&gt;
  &lt;/a&gt;
  Array.flat()
&lt;/h3&gt;

&lt;p&gt;The flat() method creates a new array with all sub-array elements concatenated into it recursively up to the specified depth. depth can pass as first param. in down example, i send number 2 for depth.&lt;br&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
const array1 = [1,2,[3,4,[5,6]]]&lt;br&gt;
console.log(array1.flat(2)) // [1,2,3,4,5,6]&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamic-import"&gt;
  &lt;/a&gt;
  dynamic import
&lt;/h3&gt;

&lt;p&gt;To dynamically import a module, the import keyword may be called as a function. When used this way, it returns a promise.&lt;br&gt;
in dynamic import, you could call the module when you really need it to use.&lt;br&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
import('/modules/my-module.js')&lt;br&gt;
  .then((module) =&amp;gt; {&lt;br&gt;
    // Do something with the module.&lt;br&gt;
  });&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#es11ecmascript2020"&gt;
  &lt;/a&gt;
  ES11(ECMAScript2020)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#optional-chaining"&gt;
  &lt;/a&gt;
  optional chaining
&lt;/h3&gt;

&lt;p&gt;Optional Chaining, known to babel users, is now supported natively by Javascript. This functionality removes the need for conditionals before calling a variable or method enclosed in it. optional chaining prevent to pass Error object, if our code has an undefined value&lt;br&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
const smartphones = {&lt;br&gt;
    brands: {&lt;br&gt;
        apple: true&lt;br&gt;
    }&lt;br&gt;
}&lt;br&gt;
console.log(smartphones.companies?.motorola) // output is: undefined&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nullish-coalescing-operator"&gt;
  &lt;/a&gt;
  nullish coalescing operator
&lt;/h3&gt;

&lt;p&gt;A new operator was added to Javascript. It came to cause a discrepancy between Javascript's falsey value. We use the falsey condition with the || operator. The falsey values ​​are: 0, undefined, null, false, NaN&lt;br&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
console.log(null || 'not false value'); // 'not false value'&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#es12-ecmascript2021"&gt;
  &lt;/a&gt;
  ES12 (ECMAScript2021)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#stringreplaceall"&gt;
  &lt;/a&gt;
  String.replaceAll()
&lt;/h3&gt;

&lt;p&gt;The replaceAll()function on the String prototype allows replacing all instances of a sub-string, without using regex.&lt;br&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
const orgStr = 'JavaScript, often abbreviated as JS, is a programming language that conforms to the ECMAScript specification. JavaScript is high-level, often just-in-time compiled and multi-paradigm.';&lt;br&gt;
let newStr2 = orgStr.replaceAll('JavaScript', 'TypeScript');&lt;br&gt;
console.log(newStr2); // 'TypeScript, often abbreviated as JS, is a programming language that conforms to the ECMAScript specification. TypeScript is high-level, often just-in-time compiled and multi-paradigm.'&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;thank you for reading the article, I will be glad if you write a comment. if you know other features that are useful for you and I forget to write, you can write in comments for me and other readers.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to change the app name in react-native(in android and IOS):
</title>
      <author>maheenriaz</author>
      <pubDate>Thu, 06 Jan 2022 07:36:40 +0000</pubDate>
      <link>https://dev.to/zenkoders/how-to-change-the-app-name-in-react-nativein-android-and-ios-573i</link>
      <guid>https://dev.to/zenkoders/how-to-change-the-app-name-in-react-nativein-android-and-ios-573i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#in-android"&gt;
  &lt;/a&gt;
  &lt;strong&gt;In Android:&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;To change the app name in react native first go to your project folder and open this path in VScode,&lt;br&gt;
android/app/src/main/res/values/string.xml&lt;br&gt;
Now you can easily change the app name in the string tag.&lt;br&gt;
For example:&lt;br&gt;
&lt;code&gt;&amp;lt;string name="app_name"&amp;gt;YOUR_APP_NAME&amp;lt;/string&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After changing the app name, uninstall the previous app from your device and run these commands:&lt;br&gt;
&lt;code&gt;$ cd android &lt;br&gt;
 $ ./gradlew clean &lt;br&gt;
 $ cd ..&lt;br&gt;
 $ react-native run-android&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-ios"&gt;
  &lt;/a&gt;
  &lt;strong&gt;For IOS:&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Open info.plist, change the value after the key to your app name. Eg.&lt;br&gt;
&lt;code&gt;&amp;lt;key&amp;gt;CFBundleDisplayName&amp;lt;/key&amp;gt;&lt;br&gt;
 &amp;lt;string&amp;gt;My New App Name&amp;lt;/string&amp;gt;&lt;/code&gt;&lt;br&gt;
Now uninstall the previous app from your device. Run &lt;br&gt;
&lt;code&gt;$ npm install&lt;br&gt;
 $ pod install&lt;/code&gt;&lt;br&gt;
Now simply, you can install the new app on your device.&lt;br&gt;
Or you can also change the app name from Xcode. &lt;br&gt;
Go to Xcode, open your project in Xcode, and find the targets tab. Select your project and change the hostname with your app name.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s2Z07qfU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/suae19gqu40dzunv2l4q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s2Z07qfU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/suae19gqu40dzunv2l4q.png" alt="IOS" width="880" height="269"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ios</category>
      <category>android</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What is Webpack? In simple words.</title>
      <author>Nitsan Cohen</author>
      <pubDate>Thu, 06 Jan 2022 07:27:31 +0000</pubDate>
      <link>https://dev.to/nitsancohen770/what-is-webpack-in-simple-words-31fe</link>
      <guid>https://dev.to/nitsancohen770/what-is-webpack-in-simple-words-31fe</guid>
      <description>&lt;p&gt;What is Webpack?&lt;/p&gt;

&lt;p&gt;Once upon a time, there was only &lt;code&gt;HTML&lt;/code&gt;. &lt;code&gt;HTML&lt;/code&gt; was the only building block of the whole web.&lt;/p&gt;

&lt;p&gt;Then came JavaScript but its usage was very basic and minimal. You could see websites with a "HUGE" JavaScript bundle of:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
alert("Welcome to my website")
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Today, not only JavaScript is used everywhere, but there are some frameworks (like React), where the user does not get from the server any HTML code (only an empty file)! He gets a bundle of JavaScript which transpile to HTML (and sometimes also CSS) by the users' browser.&lt;/p&gt;

&lt;p&gt;Anyhow, we have to deal and manage with a lot of JavaScript code these days and this is where Webpack comes into the picture.&lt;/p&gt;

&lt;p&gt;When dealing with a lot of code, we want to split our code into small pieces. It makes our code more readable and maintainable. You are probably already familiar with the import-export syntax. This is code-splitting.&lt;/p&gt;

&lt;p&gt;But eventually, we will want to transform all of our files into (usually) one big bundle. This bundle should be optimized and should work (polyfill) on all the browsers we expect our code will run at.&lt;/p&gt;

&lt;p&gt;Webpack does exactly that. It will run on build time and create an optimized bundle of your code (-small-sized bundle). For example, it can change the name of your variables from:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const example = 10;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var e = 10;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is optimized because it takes less memory (fewer letters to store) and runs faster on the browser (the JavaScript engine runs it faster). &lt;/p&gt;

&lt;p&gt;Another aspect, as mentioned, is Polyfilling. We can configure our Webpack setup to make our code run on the browsers we define for it. This is actually done with the help of another library (usually Babel).&lt;/p&gt;

&lt;p&gt;In the example above, Webpack is changing the const keyword to var, to make it work on more browsers.&lt;/p&gt;

&lt;p&gt;Let's go through a basic Webpack configuration for a React app (open the attached picture side by side).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7fOpeN4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eo4xb1ckx4nsyb4j765q.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7fOpeN4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eo4xb1ckx4nsyb4j765q.jpeg" alt="what-is-webpack" width="880" height="883"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Entry&lt;/strong&gt; - the entry destination is the main file we want Webpack to start its bundling. We only have to specify one file and Webpack will figure out the rest by looking for its dependencies. Here we specify the index.js file which is the place where we render our App in React (and all other files are just siblings of it).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt; - is the path where we want our bundle to be. We specify directory name (here it's dist) and we can also specify the file name we want to output.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Loaders&lt;/strong&gt; - Webpack is not very smart. It understands only JS and JSON files. If we want Wepback to understand JSX, for example, we have to specify loaders that will translate it for Webpack. Here we specify the babel-loader and set its options to work with JSX (React).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Plugins&lt;/strong&gt; - These help us to make our code more optimized and handle assets. In our example, we use the HtmlWebpackPlugin. This plugin will generate an HTML file and will automatically inject our JS bundle into it.&lt;/p&gt;

&lt;p&gt;Don't be afraid of your Webpack. It's a great tool and you should be comfortable enough with it so you can make config changes to it.&lt;br&gt;
I encourage you to go and play with Webpack.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>I received a letter from myself</title>
      <author>Chris Bongers</author>
      <pubDate>Thu, 06 Jan 2022 06:58:20 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/i-received-a-letter-from-myself-p4n</link>
      <guid>https://dev.to/dailydevtips1/i-received-a-letter-from-myself-p4n</guid>
      <description>&lt;p&gt;And to be precise, from my past self.&lt;/p&gt;

&lt;p&gt;I &lt;a href="https://daily-dev-tips.com/posts/a-letter-to-my-future-self/"&gt;wrote this letter precisely a year ago&lt;/a&gt;, as a gift to myself.&lt;br&gt;
And boy, oh boy, it defiantly put a smile on my face.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rSWj0jIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1609505787908/Br5ZrHPI-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rSWj0jIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1609505787908/Br5ZrHPI-.png" alt="Receiving a letter from myself" width="500" height="464"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There were some things I could not have envisioned and some things I was absolutely right about.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reflection-time"&gt;
  &lt;/a&gt;
  Reflection time
&lt;/h2&gt;

&lt;p&gt;Let's go through this together, shall we?&lt;/p&gt;

&lt;p&gt;... reading my letter ...&lt;/p&gt;

&lt;p&gt;It's funny. I start with wanting to spend more time in nature, and I hope my past self is glad to hear we actually did spend a lot more time in nature and offline.&lt;/p&gt;

&lt;p&gt;The big thing about the time when writing this letter was the travel bans, and one year later, we still have a lot of travel bans in place.&lt;/p&gt;

&lt;p&gt;But needless to say, I'm writing this today from a tropical island, on which ironically enough, we got stuck 😂.&lt;/p&gt;

&lt;p&gt;My wedding was the most beautiful day. It was exactly as I would have envisioned it, heck, even better.&lt;br&gt;
I did not only take 3 days off but a whole 10 days, and it was worth it.&lt;/p&gt;

&lt;p&gt;I am happy to inform you that besides those 10 days, I did not miss a day in blogging.&lt;/p&gt;

&lt;p&gt;I'm super happy that I wrote this letter to myself. It was super fun to read my predictions and reflect on the past year.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keeping-the-tradition-in-honor"&gt;
  &lt;/a&gt;
  Keeping the tradition in honor
&lt;/h2&gt;

&lt;p&gt;That being said, let's write a letter to Chris from the future, to be precise, 2023, Chris.&lt;/p&gt;

&lt;p&gt;Hey Chris,&lt;/p&gt;

&lt;p&gt;This is you, but the one a year younger.&lt;br&gt;
You might even remember us reading a letter, deciding to write one, and re-reading this one now.&lt;/p&gt;

&lt;p&gt;Another crazy year has gone by. Traveling is still a pain, but hopefully, you and your beautiful wife have finally been able to visit Europe and your family.&lt;/p&gt;

&lt;p&gt;I know everyone was eagerly waiting to finally host you in The Netherlands.&lt;/p&gt;

&lt;p&gt;And perhaps you even found the perfect place to stay for a longer period.&lt;/p&gt;

&lt;p&gt;As for work, the job is still treating you well. I see you've grown so much in a year though, impressive to see where you are now and how confident you are about it.&lt;/p&gt;

&lt;p&gt;I'm also delighted to see you've really been keeping up the exercise and outdoor adventures.&lt;br&gt;
It must really mean we love the outdoors, right.&lt;/p&gt;

&lt;p&gt;Let's take about the blog for a second. This is like your baby at this point. It's been almost 3 years since you started it, and you did a full unbroken year of blogging.&lt;/p&gt;

&lt;p&gt;Most people would say that that's nuts but just look at the number of people you have inspired, helped, and guided in those 3 years.&lt;/p&gt;

&lt;p&gt;Definitely worth it!&lt;br&gt;
Keep doing what you love.&lt;/p&gt;

&lt;p&gt;I hope this letter put yet another smile on your face, and you will keep this tradition in honor.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Chris 💖&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
    </item>
    <item>
      <title>System Design Guide for Front-end Developers</title>
      <author>Neha Sharma </author>
      <pubDate>Thu, 06 Jan 2022 06:56:53 +0000</pubDate>
      <link>https://dev.to/hellonehha/system-design-guide-for-front-end-developers-5fkl</link>
      <guid>https://dev.to/hellonehha/system-design-guide-for-front-end-developers-5fkl</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ymLU67G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzd0ii1miqc9cuu9hpaf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ymLU67G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzd0ii1miqc9cuu9hpaf.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TOC:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Why system design for FE&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What do interviewers look for&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Important Topics&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;UI/UX&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Frameworks, and technologies choices&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Example&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Strategy&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why system design for Front-End?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Front-End is getting complex day by day.The line between Backend and Front-End is fading out. As well as, it is expected that Front-End should contribute to the design decisions of the project. Front-End developers should flag in the design meetings if Backend/APIs folks are ignoring any important aspect in the design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What interviewers are looking for?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As a Front-End developer do you understand&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;How the application should be designed E2E?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What are the important parts of any application?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do you understand which resource is the right fit and why&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do you understand the pros-cons of the design decisions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do you understand what is required from the backend/APIs folks to make your Front-End&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do you understand the cost (price) of designing an application and how to optimize it?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Are you able to design a micro-service&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Are you able to design micro-frontends&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to create and scalable repos&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What are the important topics?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Database&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CDN&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;APIs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Storage - S3, EC2, EBS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deployment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Route53&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Certificates&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Analytics&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Monitoring&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Logs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data Recovery&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Performance&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;accessibility&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cross-browser&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SPoF (Single Point of Failure)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scalable&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Security&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Micro-frontends&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SEO&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reliability&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Maintainability&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Is UI/UX is part of the system design? If yes, then what to talk about&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yes, as a Front-End developer you should talk about UI/UX. Talk about how the UX would be?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It is important to talk about&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Performance&lt;/em&gt;: How your design decision is going to improve performance&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Accessibility&lt;/em&gt;: This will come when you will talk about UI and UX.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Cross-browser&lt;/em&gt;: If any tech decision is going to impact any browser (do call out)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;SPoF&lt;/em&gt;: Single point of failure: How to avoid it&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Scalable&lt;/em&gt;: How scalable your solution is&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Security&lt;/em&gt;: Most important aspect, how you are going to take care of security&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Data State&lt;/em&gt;: How to maintain the data consistency between mobile and desktop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Shall we talk about the frameworks choices and technology choices?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yes, it is important to talk about it. But your all decision should not be based on the frameworks you are aware of. You should focus on the solution not based on what frameworks you know. &lt;/p&gt;

&lt;p&gt;Also, this is an important aspect of the interview. So, you should be well versed with the pros-cons of all the technology decisions you are taking. &lt;/p&gt;

&lt;p&gt;Eg: why a non-relational database over a relational database? Why EC2 and not Lambda function? ReactJS vs Angular? SSR vs CSR etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How deep-dive one should go?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;At first, focus on solving the problem (not on the BEST solution).&lt;/li&gt;
&lt;li&gt;Then focus on optimising the solution. Talk about - BEST solution and why (pros and cons,  what area would be impacted? Eg: performance will increase, SPoF will be avoided, etc.&lt;/li&gt;
&lt;li&gt;Now, go deep dive into the modules related to the front-end. For example: do talk about APIs endpoints, cache or local storage or DB, which DB, deployment and storage of the web app.&lt;/li&gt;
&lt;li&gt;An &lt;em&gt;interviewer will stop you in between to ask questions. Give them time and space to them to ask the questions.&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You need to design a chat application.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A user can do multiple chats with multiple users&lt;/li&gt;
&lt;li&gt;A user can be added to a group&lt;/li&gt;
&lt;li&gt;A user can be able to react with emojis on the chat(s)&lt;/li&gt;
&lt;li&gt;A user can be able to reply to the chat 1:1&lt;/li&gt;
&lt;li&gt;and a few more requirements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Define the Scope:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How many users are we expecting?&lt;/li&gt;
&lt;li&gt;How many chats in parallel can be done?&lt;/li&gt;
&lt;li&gt;How long is the History of chats to be maintained?&lt;/li&gt;
&lt;li&gt;Which emojis are to be used, and their functionality? eg: toggle, or how they will be viewed, do we need to maintain in the history of chat etc.&lt;/li&gt;
&lt;li&gt;Do we support multiple user chats?&lt;/li&gt;
&lt;li&gt;Come with numbers to know the scalability, performance, resources required etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;OUTCOME&lt;/strong&gt;: You should be aware of the scope and scale of the problem&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Think about solutions, Features, and Resources&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start from web or mobile (where you feel comfortable or as per the ask of the interviewer)&lt;/li&gt;
&lt;li&gt;What problem we are solving here? You can’t solve all the problems in one go. So, think about the top 2-3 and start focusing on that.&lt;/li&gt;
&lt;li&gt;Think about resources that will be used to make a useable system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;OUTCOME&lt;/strong&gt;: You should be clear with 2-3 top requirements and what resources you will be requiring&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Let's start with the High-level design (Front-End + Back-End)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web interaction&lt;/li&gt;
&lt;li&gt;Endpoints&lt;/li&gt;
&lt;li&gt;Database&lt;/li&gt;
&lt;li&gt;Authentication&lt;/li&gt;
&lt;li&gt;Storage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;OUTCOME: You should have a useable working design solving the top 2-3 problems. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Let’s, deep dive, and optimize&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Question: What will happen when the user is offline for a month. How you will design the experience for it? (talk about UX and UI)&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;accessibility&lt;/li&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;li&gt;Scalability&lt;/li&gt;
&lt;li&gt;How to scale the design&lt;/li&gt;
&lt;li&gt;How the older chats will be retrieved&lt;/li&gt;
&lt;li&gt;API design etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;OUTCOME&lt;/strong&gt;: An optimised design of the problem with clear pros and cons.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Strategy:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The system design round is 60 mins approx.

&lt;ul&gt;
&lt;li&gt;5 mins to share problem statement&lt;/li&gt;
&lt;li&gt;40 mins to solve questions&lt;/li&gt;
&lt;li&gt;5 mins for Q&amp;amp;A.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You must do practice to place everything in 40 mins. Before the interview does practice as much as you can. You should use either whiteboard, paper, or any application such as draw.io&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make your 40 mins interactive. Keep talking and thinking aloud. It is important talk aloud about what you are thinking and why?&lt;/li&gt;
&lt;li&gt;There is no correct or incorrect answer. System design is all about knowing you and your design decision skills.&lt;/li&gt;
&lt;li&gt;As a Front End developer, the scope would be vast. So, better to talk about scope. Ask - where do you want me to focus? Eg: Shall I just skip the FE part in detail and get into the deep of the backend, or infra or deployment etc.&lt;/li&gt;
&lt;li&gt;Go in the details of connecting the modules and user-journey. Eg: Where the user’s data would be stored, which API endpoint will be used to get the data, how the scalability of the storage of the user’s data if the user will increase from 10x to 100x&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy Learning!!&lt;/p&gt;

&lt;p&gt;You can follow me at Twitter.com/hellonehha&lt;/p&gt;

</description>
      <category>frontend</category>
      <category>programming</category>
      <category>systemdesign</category>
      <category>developers</category>
    </item>
    <item>
      <title>Make notes sharing app with React and Firebase</title>
      <author>SnowBit</author>
      <pubDate>Thu, 06 Jan 2022 06:47:18 +0000</pubDate>
      <link>https://dev.to/codewithsnowbit/make-notes-sharing-app-with-react-and-firebase-5dle</link>
      <guid>https://dev.to/codewithsnowbit/make-notes-sharing-app-with-react-and-firebase-5dle</guid>
      <description>&lt;p&gt;&lt;code&gt;Hello 👋&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MAqUCNTt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641447302153/aSJPOACRV.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MAqUCNTt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641447302153/aSJPOACRV.gif" alt="showcase.gif" width="600" height="340"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Basic understanding of React JS&lt;/li&gt;
&lt;li&gt;Node JS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-1-raw-createreactapp-endraw-"&gt;
  &lt;/a&gt;
  Step 1 - &lt;code&gt;create-react-app&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npx create-react-app@latest mynoteapp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2-creating-textarea"&gt;
  &lt;/a&gt;
  Step 2 - Creating TextArea
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"txt"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"30"&lt;/span&gt; &lt;span class="na"&gt;rows=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter some text!"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;{text}&lt;/span&gt; &lt;span class="na"&gt;onChange=&lt;/span&gt;&lt;span class="s"&gt;{e&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; setText(e.target.value)} onKeyDown={keySound}&amp;gt;&lt;span class="nt"&gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;*&lt;em&gt;Styling *&lt;/em&gt;🌈&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, now the &lt;strong&gt;Textarea&lt;/strong&gt; is covered the whole page without &lt;strong&gt;outlines&lt;/strong&gt; and &lt;strong&gt;borders&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-add-settings-menu-using-raw-datgui-endraw-"&gt;
  &lt;/a&gt;
  Step 3 - Add Settings Menu using &lt;code&gt;dat.gui&lt;/code&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;code&gt;data.gui&lt;/code&gt; using,
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i dat.gui
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Import it to &lt;code&gt;Textarea.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;dat&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dat.gui&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Initialize &lt;code&gt;dat.gui&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gui&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;dat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GUI&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;hideable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create objects
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;fontSize&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;fontFamily&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;monospace&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;saveFile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#saveBtn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add options
1) Font size
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="nx"&gt;gui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fontSize&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;step&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;textarea&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fontSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2) Font family&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;gui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fontFamily&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Monospace&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;monospace&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Roboto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Roboto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Poppins&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Poppins&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cursive&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cursive&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;textarea&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fontFamily&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3) Save button&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;gui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;saveFile&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a &lt;strong&gt;GUI&lt;/strong&gt; panel on the top-right corner of the page&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YG-kRmQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641449042036/RutHuVNDC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YG-kRmQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641449042036/RutHuVNDC.png" alt="GUI panel" width="502" height="204"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-setting-up-database"&gt;
  &lt;/a&gt;
  Step 4 - Setting up database
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Go to &lt;a href="https://console.firebase.google.com/"&gt;Google Firebase Console&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Create a &lt;strong&gt;new project&lt;/strong&gt;, give it a name as you wish&lt;/li&gt;
&lt;li&gt;Create a new &lt;strong&gt;web&lt;/strong&gt; application
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qK0Zi3Ih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641449238223/GhV-71Q4a.png" alt="Web app" width="880" height="385"&gt;
&lt;/li&gt;
&lt;li&gt;Install &lt;strong&gt;firebase&lt;/strong&gt; to your react application
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;firebase
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Copy your credentials and create &lt;code&gt;fireabse.js&lt;/code&gt; in the &lt;code&gt;src&lt;/code&gt; directory of your React application&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;firebase.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;firebase&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firebase/compat/app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firebase/compat/firestore&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firebaseConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR_API_KEY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;authDomain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR_AUTH_DOMAIN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;projectId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR_PROJECT_ID&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;storageBucket&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR_STORAGE_BUCKET&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;messagingSenderId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR_MESSAGING_ID&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;appId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR_APP_ID&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;firebase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initializeApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firebaseConfig&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firestore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;


&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now go back again to your &lt;strong&gt;Firebase&lt;/strong&gt; project &lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;Firestore Database&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nB2oZpfL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641449956301/xgAMqGi1-.png" alt="Firestore" width="880" height="142"&gt;
&lt;/li&gt;
&lt;li&gt;Create a &lt;strong&gt;database&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;And choose &lt;strong&gt;production mode&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Choose any location you want&lt;/li&gt;
&lt;li&gt;After creating the &lt;strong&gt;database&lt;/strong&gt;, go to the &lt;strong&gt;rules&lt;/strong&gt; tab of the dashboard
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dBVlS3fT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641450155123/R3ASwxwaj.png" alt="Rules" width="880" height="238"&gt;
&lt;/li&gt;
&lt;li&gt;Paste the following code to the &lt;strong&gt;rules playground&lt;/strong&gt; and &lt;strong&gt;publish it&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;rules_version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;service&lt;/span&gt; &lt;span class="nx"&gt;cloud&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firestore&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;match&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;databases&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/documents &lt;/span&gt;&lt;span class="err"&gt;{
&lt;/span&gt;    &lt;span class="nx"&gt;match&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="o"&gt;=**&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;allow&lt;/span&gt; &lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;write&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Now go back to your React project&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go to &lt;code&gt;Textarea.js&lt;/code&gt; and import &lt;code&gt;database&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../firebase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a &lt;code&gt;save function&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleSave&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;slug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tinyid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nx"&gt;keySound&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;today&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;today&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nx"&gt;padStart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;today&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMonth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;padStart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//January is 0!&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;yyyy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;today&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFullYear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;today&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;dd&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;mm&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;yyyy&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;notes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;today&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="nx"&gt;navigate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To generate slug, you can use &lt;a href="https://www.npmjs.com/package/tiny-unique-id"&gt;tiny-unique-id&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loading created notes
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleLoad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;notes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="nx"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;handleLoad&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check out the full source code: &lt;a href="https://github.com/codewithsnowbit/notes-share-react"&gt;https://github.com/codewithsnowbit/notes-share-react&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Thank you for reading&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Follow me on Twitter - &lt;a href="https://twitter.com/codewithsnowbit"&gt;@codewithsnowbit&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Subscribe me on YouTube - &lt;a href="https://www.youtube.com/channel/UCNTKqF1vhFYX_v0ERnUa1RQ?view_as=subscriber&amp;amp;sub_confirmation=1"&gt;Code With SnowBit&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>firebase</category>
    </item>
    <item>
      <title>Workshift - The all-in-one application for organisations</title>
      <author>arnu515</author>
      <pubDate>Thu, 06 Jan 2022 06:18:35 +0000</pubDate>
      <link>https://dev.to/arnu515/workshift-the-all-in-one-application-for-organisations-59aj</link>
      <guid>https://dev.to/arnu515/workshift-the-all-in-one-application-for-organisations-59aj</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8dOCnO9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ggfx1zac9vuo0qn1cjj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8dOCnO9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ggfx1zac9vuo0qn1cjj.png" alt="Screenshot of workshift.gq" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;Workshift is an &lt;a href="https://github.com/arnu515/workshift"&gt;open source&lt;/a&gt; application for organisations that allows organisation members to collaborate with each other. It is a realtime chat platform built on MongoDB Atlas and utilises many features provided by MongoDB Atlas and MongoDB Realm.&lt;/p&gt;

&lt;p&gt;Link to hosted demo (might be slow because the backend is hosted on a $1 &lt;a href="https://m.do.co/c/371591aa3027"&gt;DigitalOcean droplet&lt;/a&gt;: &lt;a href="https://workshift.gq"&gt;https://workshift.gq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to source code: &lt;a href="https://github.com/arnu515/workshift"&gt;https://github.com/arnu515/workshift&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Choose your own adventure&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/arnu515"&gt;
        arnu515
      &lt;/a&gt; / &lt;a href="https://github.com/arnu515/workshift"&gt;
        workshift
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Workshift: Work better. Built for the Dev and MongoDB hackathon
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Workshift - The all-in-one app for organisations (BETA)&lt;/h1&gt;
&lt;p&gt;Worshift is an application for organisations that provides realtime communications. It was built for a hackathon and is currently in beta.&lt;/p&gt;
&lt;p&gt;Hosted demo: &lt;a href="https://workshift.gq" rel="nofollow"&gt;https://workshift.gq&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;P.S.: The demo will be slow because the backend is hosted on a $6 &lt;a href="https://m.do.co/c/371591aa3027" rel="nofollow"&gt;DigitalOcean droplet&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
Host the app yourself&lt;/h2&gt;
&lt;h3&gt;
Prerequisites&lt;/h3&gt;
&lt;p&gt;You will need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A server to host. Get $100 credit on digitalocean by signing up using &lt;a href="https://m.do.co/c/371591aa3027" rel="nofollow"&gt;this link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://realm.mongodb.com" rel="nofollow"&gt;MongoDB Realm Application&lt;/a&gt; connected to a &lt;a href="https://cloud.mongodb.com" rel="nofollow"&gt;MongoDB Atlas Cluster&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://pusher.com" rel="nofollow"&gt;Pusher&lt;/a&gt; application for realtime support.&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://backblaze.com" rel="nofollow"&gt;Backblaze&lt;/a&gt; B2 Storage bucket, or any AWS S3 compatible bucket for file storage&lt;/li&gt;
&lt;li&gt;Optionally: A &lt;a href="https://github.com/settings/developers"&gt;Github OAuth App&lt;/a&gt; and a &lt;a href="https://discord.com/developers/applications" rel="nofollow"&gt;Discord app&lt;/a&gt; for OAuth.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://nodejs.org" rel="nofollow"&gt;NodeJS&lt;/a&gt; version 14 or higher, and &lt;code&gt;yarn&lt;/code&gt; and &lt;code&gt;lerna&lt;/code&gt; commands installed globally using &lt;code&gt;sudo npm i -g yarn lerna&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Host locally&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;a href="https://hub.docker.com/r/arnu515/workshift-backend" rel="nofollow"&gt;Docker Image&lt;/a&gt; is provided for the backend. The frontend can be built and…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/arnu515/workshift"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cfLO0nJO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://workshift.gq/img/workshift.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cfLO0nJO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://workshift.gq/img/workshift.png" alt="Workshift screenshot" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Workshift uses these MongoDB Realm features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MongoDB Atlas for data storage&lt;/li&gt;
&lt;li&gt;Atlas Search for searching for users to invite&lt;/li&gt;
&lt;li&gt;Realm functions and triggers for sending events to Pusher when something has changed in the database&lt;/li&gt;
&lt;li&gt;Realm HTTPS endpoints to implement Atlas Search in the frontend without exposing secrets&lt;/li&gt;
&lt;li&gt;Realm hosting for storing common assets (&lt;a href="https://assets.workshift.gq"&gt;https://assets.workshift.gq&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Workshift uses these additional providers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://vercel.com"&gt;Vercel&lt;/a&gt; for hosting the &lt;a href="https://app.workshift.gq"&gt;frontend&lt;/a&gt; and &lt;a href="https://workshift.gq"&gt;landing page&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://m.do.co/c/371591aa3027"&gt;DigitalOcean&lt;/a&gt; for hosting the &lt;a href="https://api.workshift.gq"&gt;backend&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pusher.com"&gt;Pusher&lt;/a&gt; for realtime services&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.backblaze.com/b2/cloud-storage.html"&gt;Backblaze B2&lt;/a&gt; for S3-compatible storage&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com"&gt;Github&lt;/a&gt; Actions for automated deployments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For information about the tech-stack and instructions on local hosting, checkout the &lt;a href="https://github.com/arnu515/workshift#readme"&gt;README&lt;/a&gt;&lt;/p&gt;

</description>
      <category>atlashackathon</category>
      <category>mongodb</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>5 Best Azure Courses for Beginners</title>
      <author>javinpaul</author>
      <pubDate>Thu, 06 Jan 2022 06:00:44 +0000</pubDate>
      <link>https://dev.to/javinpaul/5-best-azure-courses-for-beginners-5bie</link>
      <guid>https://dev.to/javinpaul/5-best-azure-courses-for-beginners-5bie</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/cloud-computing-101-master-the-fundamentals?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p4vONPF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.educative.io/v2api/collection/10370001/6598398019371008/image/5016866440871936" alt="The Complete Guide to DevOps in Azure - Learn Interactively" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, if you want to learn Microsoft Azure in 2022 and looking for the best resources like online courses, books, tutorials, etc then you have come to the right place. &lt;/p&gt;

&lt;p&gt;Earlier, I have shared the &lt;strong&gt;&lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-online-courses-to-learn-cloud-computing-aws.html"&gt;best cloud computing courses&lt;/a&gt;&lt;/strong&gt; and &lt;a href="https://www.java67.com/2020/07/5-free-courses-to-learn-microsoft-azure-cloud.html"&gt;&lt;strong&gt;best free Azure courses&lt;/strong&gt;&lt;/a&gt; but many of you asked for more comprehensive and in-depth Azure courses and here we are with the list of the 5 best Microsoft Azure courses in 2022.  &lt;/p&gt;

&lt;p&gt;Microsoft Azure is, as the name implies, Microsoft's answer to Google Cloud Platform and Amazon Web Services. What that means is that it provides a wide range of cloud services like computing, storage, analytics, and networking all under one umbrella.&lt;/p&gt;

&lt;p&gt;If you are using Azure for hosting your applications then you can also select the features and services that they need and run their applications on the Azure platform or scale new applications. Azure tools are used in a variety of industries like e-commerce, finance, etc.&lt;/p&gt;

&lt;p&gt;One of the main things that attract users to &lt;a href="https://azure.microsoft.com/en-us/"&gt;Microsoft Azure&lt;/a&gt; is the flexibility it provides in picking their preferred tools and technologies.&lt;/p&gt;

&lt;p&gt;Azure was earlier called Windows Azure and also offers four different kinds of cloud computing. These are infrastructure as a service (IaaS), platform as a service (PaaS), software as a service (SaaS).&lt;/p&gt;

&lt;p&gt;Like the &lt;a href="https://www.java67.com/2021/12/-best-google-cloud-platform-course-online.html"&gt;Google Cloud Platform&lt;/a&gt; and &lt;a href="https://www.java67.com/2021/12/5-best-amazon-web-service-aws-courses.html"&gt;AWS&lt;/a&gt;, Azure also charges its customers using a pay-as-you-go model. This means that when you use Azure, you only need to pay for the services that you use and there is no fixed fee.  &lt;/p&gt;

&lt;p&gt;Once customers subscribe to Azure, they get access to all the services included in the Azure portal. These services can be used to create cloud-based resources like databases and virtual machines.&lt;/p&gt;

&lt;p&gt;By the way, if you are not just interested on learning Azure but also to get certified than I suggest you to prepare for AZ-900 or Azure fundamentals certification in 2022. This can accelerate your learning and you can also become a certified Azure professional, &lt;br&gt;
an in-demand skill and certification for your resume. &lt;/p&gt;

&lt;p&gt;If you need a comprehensive resource for AZ-900 exam preparation, I suggest you to take a look at &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fmicrosoft-azure-fundamentals-az-900"&gt;Microsoft Azure Fundamentals AZ-900 Exam Prep Specialization&lt;/a&gt; on Coursera. This is created by Microsoft itself and its tightly aligned with AZ-900 syllabus.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fmicrosoft-azure-fundamentals-az-900"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LCv7tmgk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3.amazonaws.com/coursera_assets/meta_images/generated/XDP/XDP%257ESPECIALIZATION%21%257Emicrosoft-azure-fundamentals-az-900/XDP%257ESPECIALIZATION%21%257Emicrosoft-azure-fundamentals-az-900.jpeg" alt="Best resource for Microsoft Azure Fundamentals AZ-900 Exam Prep | Coursera" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will also get 50% rebate on actual exam price. I mean all learners who pass all 4 courses will receive a voucher for 50% off the AZ-900 certificate exam.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-best-azure-amp-cloud-computing-courses-to-learn-in-2022"&gt;
  &lt;/a&gt;
  5 Best Azure &amp;amp; Cloud Computing Courses to learn in 2022
&lt;/h2&gt;

&lt;p&gt;We have scoured the internet and came up with a list of the 5 Best Azure Cloud Computing Courses. These are truly the best online courses you can join to learn Azure and its curated from the best websites and online learning platforms like Udemy, Coursera, Pluralsight, etc. Let's  Check out the list below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-microsoft-azure-beginners-guide-az900-2021-udemy"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-azure-beginners-guide%2F"&gt;Microsoft Azure - Beginner's Guide + AZ-900 - 2021&lt;/a&gt; [Udemy]
&lt;/h3&gt;

&lt;p&gt;You can treat this course as the starting point in your wonderful journey into the amazing world of Microsoft Azure. The course has been created by Alan Rodriguez, who is a software engineering evangelist and has more than 15 years of experience in the industry.&lt;/p&gt;

&lt;p&gt;In this course, you will learn how to start using Microsoft Azure and create virtual machines using the platform. You will also get a basic understanding of different services like Azure Functions and Azure Web Apps. By the end of this course, you will be fully prepared to take the AZ-900 certification exam.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration: 15 hours&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Rating: 4.5 stars out of 5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Instructor: Alan Rodriguez&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Price: $14&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is the link to join this course - &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-azure-beginners-guide%2F"&gt;Microsoft Azure - Beginner's Guide + AZ-900 - 2021&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-azure-beginners-guide%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lD2E67yE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-PKSWKfA_Lro/Yb3zdxszm8I/AAAAAAAAqk0/6hMid0ZFHfYT1_p-98QfSwe2dK3Of-wEACNcBGAsYHQ/w424-h213/az-900-describe-core-azure-services-social.png" alt="5 Best Microsoft Azure Cloud Computing Courses to Learn" width="424" height="213"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-getting-started-with-azure-coursera"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fcloud-azure-intro"&gt;Getting Started with Azure&lt;/a&gt; [Coursera]&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This course will serve as an introduction to Microsoft Azure as you familiarize yourself with core Azure topics as well as practice implementations of infrastructure components. By the end of this course, you will also get a shareable certificate of completion that you can proudly display on your LinkedIn profile.&lt;/p&gt;

&lt;p&gt;In this course, you will learn how to deploy virtual machines and create custom dashboards by navigating the Azure portal. You will also get a fundamental understanding of Cloud security, including Network Security, firewall, and Resource Policies. You will also learn more about Azure Cloud Resource Groups and Storage options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration: Approximately 20 hours&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Rating: 4.3 stars out of 5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Instructor: Kenny Mobley&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Price: $20&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By the way, if you find Coursera courses useful, which they are because they are created by reputed companies and universities around the world, I suggest you join the &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus"&gt;Coursera Plus&lt;/a&gt;&lt;/strong&gt;, a subscription plan from Coursera which gives you unlimited access to their most popular courses, specialization, professional certificate, and guided projects&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fcloud-azure-intro"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-b0pQkT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEiPHzcdGxVqdGaYoRP6tOR1Towd0VEhj7utgFObsk04X4I6DroizhbdD6rTq8dC52q1fz_0lNmBdmwfEMvPqMTo2FL0dmCEKsO6WNi4gzLToctIazkqihWwx_DgKlt2GKOBHwz-98WamZZizrRtTgeC0ruH_H2NNrdhPDxuyfi_dAbQJ2K3xvcs_kkr%3Dw288-h288" alt="Best Coursera course to learn Microsoft Azure" width="150" height="150"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-implementing-an-azure-databricks-environment-in-microsoft-azure-pluralsight"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fmicrosoft-azure-databricks-environment-implementing"&gt;Implementing an Azure Databricks Environment in Microsoft Azure&lt;/a&gt; **&lt;/strong&gt;[Pluralsight]**
&lt;/h3&gt;

&lt;p&gt;This one is slightly different from the other course on this list and is a specialized Microsoft course. In this course, you will learn how to use Azure Databricks to solve all of your data problems.&lt;/p&gt;

&lt;p&gt;Azure Databricks has a robust analytics platform for bringing all the data together and is perfect for data scientists and data engineers. One of the main problems with a large amount of data is learning how to use it correctly and optimize it. Microsoft Azure will help you and make your job easier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration: 3 hours&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Rating: 4.5 stars out of 5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Instructor: Michael Bender&lt;/strong&gt;&lt;br&gt;
*&lt;em&gt;Course Price: $499 per year for the Premium plan *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;By the way, you would need a Pluralsight membership to join this course which costs around $29 per month or $299 per year (14% discount). I highly recommend this subscription to all programmers as it provides instant access to more than 7000+ online courses to learn any tech skill. &lt;/p&gt;

&lt;p&gt;Alternatively, you can also use their &lt;strong&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fpricing%2Ffree-trial"&gt;10-day-free-pass&lt;/a&gt;&lt;/strong&gt; to watch this course for FREE.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fmicrosoft-azure-databricks-environment-implementing"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xt-57o9D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-jM_oEQLr-u0/Yb30crZyMuI/AAAAAAAAqk8/Y74y_tJGqhEswqBfq1PBnZjDit1ika10QCNcBGAsYHQ/w320-h180/microsoft-azure-databricks-environment-implementing-v1.png" alt="Best Pluralsight course to learn Microsoft Azure" width="320" height="180"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-learning-azure-devops-linkedin-learning"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. &lt;a href="http://linkedin-learning.pxf.io/c/1193463/449670/8005?u=https%3A%2F%2Fwww.linkedin.com%2Flearning%2Flearning-azure-devops-10005641"&gt;Learning Azure DevOps&lt;/a&gt; [LinkedIn Learning]&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The instructor of this course is Walt Ritscher, who is a programmer, UI designer, and staff instructor at LinkedIn Learning. In this course, he will take you on a whirlwind journey of Azure, covering Azure boards, backlogs, work items, sprints, software projects, and Kanban boards.&lt;/p&gt;

&lt;p&gt;You will learn more about creating projects and adding users to organizations or teams. There is also a section on Azure Pipelines, which can be used to automate your application build and deployment phases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration: 2 hours&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Instructor: Walt Ritscher&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Price: $12 per month for an annual subscription&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By the way, you would need a LinkedIn Learning membership to watch this course which costs around $19.99 per month but you can also watch this course for FREE by taking their &lt;a href="http://linkedin-learning.pxf.io/c/1193463/449670/8005?u=https%3A%2F%2Fwww.linkedin.com%2Flearning%2Fsubscription%2Fproducts"&gt;1-month-free-trail&lt;/a&gt; which is a great way to explore their 16000+ online courses on the latest technology.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://linkedin-learning.pxf.io/c/1193463/449670/8005?u=https%3A%2F%2Fwww.linkedin.com%2Flearning%2Flearning-azure-devops-10005641"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g7fakjRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEgb9mG6LI2AZ1jnsz0oTTSQOQ_oaHhcbraQiquN99ayEGXoQazey3nzlg-EHKSUUj49pITJ4Euvqutt9W2b4t_dauRmNglzw4z6vjujIomSBkbXg19K1rWwmvbrxsqf4PcuRWjzEuti6aPav6wtQsSMwmAmHiJpqc0hXyRsWjMAL-Bsfbm-8MHudygu%3Dw384-h216" alt="Best LinkedIn Learning course to learn Microsoft Azure" width="299" height="168"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-microsoft-azure-from-zero-to-hero-the-complete-guide-udemy"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-azure-from-zero-to-hero-the-complete-guide%2F"&gt;Microsoft Azure: From Zero to Hero - The Complete Guide&lt;/a&gt; [Udemy]&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;If you are looking for a course that will turn you into an Azure expert and enable you to design and build modern cloud apps, well, look no further. The fact that this course is led by Memi Lavi, who is a Certified Azure Architect, is just the icing on the cake.&lt;/p&gt;

&lt;p&gt;The course will start with the fundamentals of Microsoft Azure, like Resource Groups, Storage Account, and Budgets. Once you purchase this course, you will get lifetime access to more than 20 hours of on-demand video lectures, 23 articles, and 40 downloadable educational resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration: 20 hours&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Rating: 4.7 stars out of 5&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Instructor: Memi Lavi&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Course Price: $14&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is the link to join this course - &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-azure-from-zero-to-hero-the-complete-guide%2F"&gt;Microsoft Azure: From Zero to Hero - The Complete Guide&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmicrosoft-azure-from-zero-to-hero-the-complete-guide%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--utV_cvlo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEgmahozYxxGqdRBH6YHDLdw5LoXh6TYQcIo5qU0lkKQSt9Xlha-ocP0p0Gsu6VMlfwK7kN2ijDZbrp_uFOsO9q6wTgLctUXcdTHT25itn-7zvci3BQIe5H9s4NDPqqscIV76bqstPgfQTTBLG02Zhok4OfYVIMzOQhZ1sYq0VlSUE7HtEp3V7xo-FSY%3Dw348-h196" alt="Best Udemy course to learn Microsoft Azure" width="240" height="135"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#azure-frequently-asked-questions"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Azure Frequently Asked Questions&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Now that you have seen the best courses to learn Microsoft azure in 2022, let's revisit a couple of questions that beginner often asked while learning Microsoft Azure&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. What is Microsoft Azure used for?&lt;/strong&gt;&lt;br&gt;
Once customers subscribe to Azure, they get access to all the services included in the Azure portal. These services can be used to create cloud-based resources like databases and virtual machines&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. What type of cloud service is Microsoft Azure?&lt;/strong&gt;&lt;br&gt;
It is a public cloud service. This means that all the software, hardware, and infrastructure is owned and managed by the company providing the service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. What are the benefits of Azure?&lt;/strong&gt;&lt;br&gt;
Azure tools are used in a variety of industries like e-commerce, finance, etc. One of the main things that attract users to Microsoft Azure is the flexibility it provides in picking their preferred tools and technologies.&lt;/p&gt;

&lt;p&gt;That's all about the best online courses to learn Microsoft Azure in 2022. We have done the hard work for you and compiled this list of the 5 Best Azure Cloud Computing Courses. Don't worry, you can thank us later. The important thing that you should do is select a course from this list and start learning. Azure is an important skill to add to your resume as more and more companies are switching to Azure cloud.&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Cloud Computing Articles&lt;/strong&gt; you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-amazon-web-services-aws-cloud-in-2020-best-and-free-317f10d7c21d"&gt;My Favorite Courses to learn AWS in depth&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-google-cloud-platform-gcp-courses-certifications-online.html"&gt;Top 5 Google Cloud Courses and Certifications&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/08/how-to-crack-aws-certified-solution-architect-exam.html"&gt;How to Crack the AWS Solution Architect Associate Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/06/top-5-course-to-crack-google-cloud-professional-data-engineer-certification.html"&gt;Top 5 Courses to pass Google Cloud Professional Data Engineer Certification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/05/top-5-amazon-web-services-aws-courses-for-beginners-and-experienced-programmers.html"&gt;Top 5 Courses to learn AWS for Beginners and Experienced Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/05/top-5-courses-to-crack-aws-certified-developer-associate-certification-exam.html"&gt;Top 5 Courses to Crack AWS Certified Developer Associate Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/top-5-course-to-crack-aws-certified-devops-engineer-professional-exam-certification.html"&gt;5 Courses to become AWS DevOps Engineer Professional &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/05/top-5-cloud-courses-for-java-and-spring-boot-developers.html"&gt;Top 5 AWS and Cloud Courses for Java Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/07/top-5-courses-to-become-google-cloud-professional-architect.html"&gt;5 Best Courses to become Google Cloud Professional Cloud, Architect&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/top-5-course-to-crack-aws-solution-architect-professional-sap-c01-certification-exam.html"&gt;Top 5 Courses to become AWS Solution Architect Professional&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/top-5-course-to-crack-aws-certified-devops-engineer-professional-exam-certification.html"&gt;Top 5 Courses to Crack AWS DevOps Engineer Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/05/top-5-course-to-crack-google-cloud-associate-cloud-engineer-certification-exam.html"&gt;5 Courses to become Google Cloud Platform Associate Cloud Engineer&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/05/top-5-courses-to-crack-aws-solutions-architect-associate-certification-exam-SAA-C01.html#axzz5rHwAwycj"&gt;Top 5 Courses to Crack AWS Solution Architect Associate Certification&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2018/05/top-5-amazon-web-services-or-aws-courses-to-learn-online.html"&gt;5 Free Courses to learn Amazon Web Service&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/08/top-5-free-aws-solution-architect-Associate-certification-dumps-practice-questions.html"&gt;5 Free AWS Solution Architect Associate Practice Test, Dumps, and Mock Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/03/top-5-aws-certified-cloud-practitioner-mock-test-practice-questions.html"&gt;Top 5 Mock test and Exam Dumps for AWS Cloud Practitioner (CLF-C01)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/top-5-courses-to-crack-aws-certified-cloud-practitioner-exam-certification-clf-c01.html"&gt;5 Best courses to Pass the AWS Cloud Practitioner exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/top-5-course-to-crack-aws-solution-architect-professional-sap-c01-certification-exam.html"&gt;Top 5 Courses to Crack AWS Solution Architect Professional Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-amazon-web-services-aws-cloud-in-2020-best-and-free-317f10d7c21d"&gt;How to prepare for AWS Solution Architect Certification&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you liked this list of the 5 Best Azure Courses for beginners, feel free to share it with your friends and families. Drop a comment if you have any doubts or questions and we will get back to you right away.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. -&lt;/strong&gt; If you are preparing for Azure Fundamentals Certification in 2022 and need resources then I highly recommend you check out &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Faz900-azure%2F"&gt;AZ-900: Microsoft Azure Fundamentals Exam Prep&lt;/a&gt;&lt;/strong&gt; course on Udemy. This course has more than 5 hours of content and enough to pass the AZ-900 exam to get Azure Fundamentals certifications, and you can buy this for just $10 on Udemy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.P.S&lt;/strong&gt; - For better prep, you can also join &lt;a href="https://www.udemy.com/course/az-900-practice-test-azure-fundamentls-certification-exam/?referralCode=C335B28D838A48DEDFA1"&gt;my AZ-900 practice tests&lt;/a&gt; on Udemy which contains 250+ questions with detailed explanations. It's currently available on 90% discount.  &lt;/p&gt;

</description>
      <category>azure</category>
      <category>cloudcomputing</category>
      <category>programming</category>
      <category>development</category>
    </item>
    <item>
      <title>Build a Serverless REST API on AWS in under 5 minutes!</title>
      <author>Manitej ⚡</author>
      <pubDate>Thu, 06 Jan 2022 05:37:35 +0000</pubDate>
      <link>https://dev.to/manitej/build-a-serverless-rest-api-on-aws-in-under-5-minutes-144j</link>
      <guid>https://dev.to/manitej/build-a-serverless-rest-api-on-aws-in-under-5-minutes-144j</guid>
      <description>&lt;p&gt;In this example we will look at how to create a serverless REST API on AWS using &lt;a href="//%7B%7B%20site.sst_github_repo%20%7D%7D"&gt;Serverless Stack (SST)&lt;/a&gt;. If you are a TypeScript user, we've got &lt;a href="//%20link%20_examples/how-to-create-a-rest-api-in-typescript-with-serverless.md%20"&gt;a version for that as well&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Node.js &amp;gt;= 10.15.1&lt;/li&gt;
&lt;li&gt;We'll be using Node.js (or ES) in this example but you can also use TypeScript&lt;/li&gt;
&lt;li&gt;An &lt;a href="//%20link%20_chapters/create-an-aws-account.md%20"&gt;AWS account&lt;/a&gt; with the &lt;a href="//%20link%20_chapters/configure-the-aws-cli.md%20"&gt;AWS CLI configured locally&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#create-an-sst-app"&gt;
  &lt;/a&gt;
  Create an SST app
&lt;/h2&gt;

&lt;p&gt;Let's start by creating an SST app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npx create-serverless-stack@latest rest-api
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;rest-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default our app will be deployed to an environment (or stage) called &lt;code&gt;dev&lt;/code&gt; and the &lt;code&gt;us-east-1&lt;/code&gt; AWS region. This can be changed in the &lt;code&gt;sst.json&lt;/code&gt; in your project root.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rest-api"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"stage"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"region"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"us-east-1"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#project-layout"&gt;
  &lt;/a&gt;
  Project layout
&lt;/h2&gt;

&lt;p&gt;An SST app is made up of two parts.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;stacks/&lt;/code&gt; — App Infrastructure&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The code that describes the infrastructure of your serverless app is placed in the &lt;code&gt;stacks/&lt;/code&gt; directory of your project. SST uses &lt;a href="//%20link%20_chapters/what-is-aws-cdk.md%20"&gt;AWS CDK&lt;/a&gt;, to create the infrastructure.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;src/&lt;/code&gt; — App Code&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The code that's run when your API is invoked is placed in the &lt;code&gt;src/&lt;/code&gt; directory of your project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-our-routes"&gt;
  &lt;/a&gt;
  Setting up our routes
&lt;/h2&gt;

&lt;p&gt;Let's start by setting up the routes for our API.&lt;/p&gt;

&lt;p&gt;Replace the &lt;code&gt;stacks/MyStack.js&lt;/code&gt; with the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;sst&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@serverless-stack/resources&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MyStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;sst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Create the HTTP API&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Api&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET /notes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/list.main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET /notes/{id}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/get.main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;PUT /notes/{id}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/update.main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c1"&gt;// Show the API endpoint in the output&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addOutputs&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;ApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are creating an API here using the &lt;a href="https://docs.serverless-stack.com/constructs/api"&gt;&lt;code&gt;sst.Api&lt;/code&gt;&lt;/a&gt; construct. And we are adding three routes to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GET /notes
GET /notes/{id}
PUT /notes/{id}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first is getting a list of notes. The second is getting a specific note given an id. And the third is updating a note.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-function-code"&gt;
  &lt;/a&gt;
  Adding function code
&lt;/h2&gt;

&lt;p&gt;For this example, we are not using a database. We'll look at that in detail in another example. So internally we are just going to get the list of notes from a file.&lt;/p&gt;

&lt;p&gt;Let's add a file that contains our notes in &lt;code&gt;src/notes.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;noteId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;id2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;noteId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello Old World! Old note.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add the code for our first endpoint.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-a-list-of-notes"&gt;
  &lt;/a&gt;
  Getting a list of notes
&lt;/h3&gt;

&lt;p&gt;Add a &lt;code&gt;src/list.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;notes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./notes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;notes&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are simply converting a list of notes to string, and responding with that in the request body.&lt;/p&gt;

&lt;p&gt;Note that this function need to be &lt;code&gt;async&lt;/code&gt; to be invoked by AWS Lambda. Even though, in this case we are doing everything synchronously.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-a-specific-note"&gt;
  &lt;/a&gt;
  Getting a specific note
&lt;/h3&gt;

&lt;p&gt;Add the following to &lt;code&gt;src/get.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;notes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./notes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;note&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;notes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathParameters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;note&lt;/span&gt;
    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;note&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are checking if we have the requested note. If we do, we respond with it. If we don't, then we respond with a 404 error. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#updating-a-note"&gt;
  &lt;/a&gt;
  Updating a note
&lt;/h3&gt;

&lt;p&gt;Add the following to &lt;code&gt;src/update.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;notes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./notes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;note&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;notes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathParameters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;note&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;note&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;note&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We first check if the note with the requested id exists. And then we update the content of the note and return it. Of course, we aren't really saving our changes because we don't have a database!&lt;/p&gt;

&lt;p&gt;Now let's test our new API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#starting-your-dev-environment"&gt;
  &lt;/a&gt;
  Starting your dev environment
&lt;/h2&gt;

&lt;p&gt;SST features a &lt;a href="https://docs.serverless-stack.com/live-lambda-development"&gt;Live Lambda Development&lt;/a&gt; environment that allows you to work on your serverless apps live.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npx sst start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first time you run this command it'll take a couple of minutes to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It'll bootstrap your AWS environment to use CDK.&lt;/li&gt;
&lt;li&gt;Deploy a debug stack to power the Live Lambda Development environment.&lt;/li&gt;
&lt;li&gt;Deploy your app, but replace the functions in the &lt;code&gt;src/&lt;/code&gt; directory with ones that connect to your local client.&lt;/li&gt;
&lt;li&gt;Start up a local client.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once complete, you should see something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;===============
 Deploying app
===============

Preparing your SST app
Transpiling source
Linting source
Deploying stacks
dev-rest-api-my-stack: deploying...

 ✅  dev-rest-api-my-stack


Stack dev-rest-api-my-stack
  Status: deployed
  Outputs:
    ApiEndpoint: https://2q0mwp6r8d.execute-api.us-east-1.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;ApiEndpoint&lt;/code&gt; is the API we just created. Now let's get our list of notes. Head over to the following in your browser. Make sure to replace the URL with your API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://2q0mwp6r8d.execute-api.us-east-1.amazonaws.com/notes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see the list of notes as a JSON string.&lt;/p&gt;

&lt;p&gt;And use the following endpoint to to retrieve a specific note.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://2q0mwp6r8d.execute-api.us-east-1.amazonaws.com/notes/id1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to update our note, we need to make a &lt;code&gt;PUT&lt;/code&gt; request. Our browser cannot make this type of request. So use the following command in your terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-X&lt;/span&gt; PUT &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s1"&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{"content":"Updating my note"}'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
https://2q0mwp6r8d.execute-api.us-east-1.amazonaws.com/notes/id1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should respond with the updated note.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-changes"&gt;
  &lt;/a&gt;
  Making changes
&lt;/h2&gt;

&lt;p&gt;Let's make a quick change to our API. It would be good if the JSON strings are pretty printed to make them more readable.&lt;/p&gt;

&lt;p&gt;Replace &lt;code&gt;src/list.js&lt;/code&gt; with the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;notes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./notes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;notes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;  &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are just &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify"&gt;adding some spaces&lt;/a&gt; to pretty print the JSON.&lt;/p&gt;

&lt;p&gt;If you head back to the &lt;code&gt;/notes&lt;/code&gt; endpoint.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://2q0mwp6r8d.execute-api.us-east-1.amazonaws.com/notes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see your list of notes in a more readable format.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-your-api"&gt;
  &lt;/a&gt;
  Deploying your API
&lt;/h2&gt;

&lt;p&gt;Now that our API is tested and ready to go. Let's go ahead and deploy it for our users. You'll recall that we were using a &lt;code&gt;dev&lt;/code&gt; environment, the one specified in your &lt;code&gt;sst.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, we are going to deploy your API again. But to a different environment, called &lt;code&gt;prod&lt;/code&gt;. This allows us to separate our environments, so when we are working in &lt;code&gt;dev&lt;/code&gt;, it doesn't break the API for our users.&lt;/p&gt;

&lt;p&gt;Run the following in your terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npx sst deploy &lt;span class="nt"&gt;--stage&lt;/span&gt; prod
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A note on these environments. SST is simply deploying the same app twice using two different &lt;code&gt;stage&lt;/code&gt; names. It prefixes the resources with the stage names to ensure that they don't thrash.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cleaning-up"&gt;
  &lt;/a&gt;
  Cleaning up
&lt;/h2&gt;

&lt;p&gt;Finally, you can remove the resources created in this example using the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npx sst remove
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And to remove the prod environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npx sst remove &lt;span class="nt"&gt;--stage&lt;/span&gt; prod
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;And that's it! You've got a brand new serverless API. A local development environment, to test and make changes. And it's deployed to production as well, so you can share it with your users. Check out the repo below for the code we used in this example. And leave a comment if you have any questions!&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Dynamic content rendering in Alpine.js</title>
      <author>mohsen</author>
      <pubDate>Thu, 06 Jan 2022 05:03:58 +0000</pubDate>
      <link>https://dev.to/mohsenkamrani/dynamic-content-rendering-in-alpinejs-3b6l</link>
      <guid>https://dev.to/mohsenkamrani/dynamic-content-rendering-in-alpinejs-3b6l</guid>
      <description>&lt;p&gt;Today I'll show you how to dynamically set the content of your tags, or &lt;code&gt;InnerHtml&lt;/code&gt; to be specific in Alpine. If you've noticed I'm trying to stay loyal to the goals of Alpine, so we jump straight to the code.&lt;/p&gt;

&lt;p&gt;A bonus in today's tutorial is that we use an external file to store some of our javascript.&lt;/p&gt;

&lt;p&gt;Let's create two files named &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;index.js&lt;/code&gt;.&lt;br&gt;
We start by importing alpine in our html file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//unpkg.com/alpinejs"&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our example scenario we want to show two different messages based on a random variable; I know it doesn't make sense but it does serve the purpose!&lt;/p&gt;

&lt;p&gt;Let's add a &lt;code&gt;div&lt;/code&gt; to our html file where we want to render the dynamic content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//unpkg.com/alpinejs"&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;x-data=&lt;/span&gt;&lt;span class="s"&gt;"{ message: getMessage()}"&lt;/span&gt; &lt;span class="na"&gt;x-html=&lt;/span&gt;&lt;span class="s"&gt;"message"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No let's write a simple function to generate the dynamic message in our &lt;code&gt;index.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getMessage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;h1&amp;gt;Good morning &amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;h1&amp;gt;Good evening&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please notice that what we have put in our messages just looks like html but it's a simple string from &lt;code&gt;javascript's&lt;/code&gt; point of view. Btw, leave a comment down bellow if this part reminds you of something else. (Hint: it starts with R)&lt;/p&gt;

&lt;p&gt;Now that we have our function, let's see how we can use it in our html with the Alpine.js directives and how we can set the content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;x-data=&lt;/span&gt;&lt;span class="s"&gt;"{ message: getMessage()}"&lt;/span&gt; &lt;span class="na"&gt;x-html=&lt;/span&gt;&lt;span class="s"&gt;"message"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yup, this is all we need. &lt;/p&gt;

&lt;p&gt;As usual, we use &lt;code&gt;x-data&lt;/code&gt; to set the data. Refer to my previous posts in this series if you don't know what &lt;code&gt;x-data&lt;/code&gt; does. Just notice how seamlessly we have called our function in our directive and have assigned it's value to a property in our data object.&lt;/p&gt;

&lt;p&gt;The new directive we're using is &lt;code&gt;x-html&lt;/code&gt; which basically sets the &lt;code&gt;innerHTML&lt;/code&gt; of a tag.&lt;/p&gt;

&lt;p&gt;A word of caution before showing the complete code of our html page, including importing our &lt;code&gt;javascript&lt;/code&gt; file from Alpine team:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;⚠️ Only use on trusted content and never on user-provided content. ⚠️ Dynamically rendering HTML from third parties can easily lead to XSS vulnerabilities.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And our html file's final look:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//unpkg.com/alpinejs"&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./index.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;x-data=&lt;/span&gt;&lt;span class="s"&gt;"{ message: getMessage()}"&lt;/span&gt; &lt;span class="na"&gt;x-html=&lt;/span&gt;&lt;span class="s"&gt;"message"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find the source code  &lt;a href="https://github.com/mkamrani/alpinejs-dynamic-conent-utopiops"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now that we have our code ready, let's deploy it on  &lt;a href="https://www.utopiops.com"&gt;utopiops&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Head over to the &lt;code&gt;Fully managed applications&lt;/code&gt; section as we want to use free static website deployment and hosting that Utopiops offers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wlfj9OJW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640944738538/QMMZQKUtp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wlfj9OJW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640944738538/QMMZQKUtp.png" alt="Screen Shot 2021-12-31 at 8.16.15 pm.png" width="291" height="939"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we choose &lt;code&gt;Static website&lt;/code&gt; as the application type to be created. (Utopiops also offers free plans for &lt;code&gt;Function&lt;/code&gt; and &lt;code&gt;Dockerized&lt;/code&gt; applications)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7WK9BeMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640944848567/j_pE1HukP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7WK9BeMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640944848567/j_pE1HukP.png" alt="Screen Shot 2021-12-31 at 8.16.35 pm.png" width="717" height="318"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the only thing we need to know is to specify the  &lt;a href="https://github.com/mkamrani/alpinejs-helloworld-utopiops"&gt;repository&lt;/a&gt;  that we store our code (Utopiops supports Github, Bitbucket and Gitlab).&lt;/p&gt;

&lt;p&gt;Remember we don't need to provide any build command!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RI_SeX41--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641444182971/Poq84ml8O.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RI_SeX41--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641444182971/Poq84ml8O.png" alt="Screen Shot 2022-01-06 at 3.42.53 pm.png" width="880" height="391"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's it, in a few seconds we have our website ready and every time we make a change to our code it automatically deploys our changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://alpinejs-dynamic-content-e25cb512.sites.utopiops.com/"&gt;https://alpinejs-dynamic-content-e25cb512.sites.utopiops.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: Utopiops is in public beta at the time of writing this post and the view you see when you log in to Utopiops at &lt;a href="https://www.utopiops.com"&gt;https://www.utopiops.com&lt;/a&gt; might be different, but the good news is that it sure just have become more user-friendly and easier to use.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>cloudhosting</category>
    </item>
    <item>
      <title>Magic Numbers (in programming)</title>
      <author>Anthony Dellavecchia</author>
      <pubDate>Thu, 06 Jan 2022 04:55:21 +0000</pubDate>
      <link>https://dev.to/anthonyjdella/magic-numbers-in-programming-19h0</link>
      <guid>https://dev.to/anthonyjdella/magic-numbers-in-programming-19h0</guid>
      <description>&lt;p&gt;Today, I got feedback from a code review and learned something new. It was about &lt;a href="https://en.wikipedia.org/wiki/Magic_number_(programming)"&gt;"magic numbers"&lt;/a&gt;, which are unique values with unexplained meaning or multiple occurrences which could (preferably) be replaced with named constants.&lt;/p&gt;

&lt;p&gt;I've known about the concept of using constants rather than hard-coding values, but I didn't think of that for "magic number" situations. It's a pretty simple concept but I just wanted to share what I learned.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#magic-numbers-are-bad"&gt;
  &lt;/a&gt;
  Magic Numbers are Bad
&lt;/h2&gt;

&lt;p&gt;Magic numbers are language agnostic, but below, you'll see a code snippet in Java WITH magic numbers (the bad way).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class MagicNumber {

    String pipeDelimitedString = "This|is|an|example|of|Magic|Numbers|123 Parker Road|cityline@gmail.com";
    String [] splitString = pipeDelimitedString.split("\\|");

    obj.doSomething(splitString[7]);
    obj.doSomething(splitString[8]);           
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, I am simply splitting a pipe delimited string that contains some useful data (Home Address and Email Address).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;splitString[7]&lt;/code&gt; refers to the 8th element, or 123 Parker Road, which is a Home Address&lt;/p&gt;

&lt;p&gt;&lt;code&gt;splitString[8]&lt;/code&gt; refers to the 9th element, or &lt;a href="mailto:cityline@gmail.com"&gt;cityline@gmail.com&lt;/a&gt;, which is an Email Address&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-that-bad-well-its-not-easy-to-read"&gt;
  &lt;/a&gt;
  Why is that bad? We’ll it’s not easy to read.
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;splitString[n]&lt;/code&gt;, where n is a number, may not mean anything from an outsider looking at your code. The numbers 7 &amp;amp; 8 have no meaning!&lt;/p&gt;

&lt;p&gt;Now, you’ll see a code snippet in Java WITHOUT magic numbers (the good way).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class MagicNumber {

  String pipeDelimitedString = "This|is|an|example|of|Magic|Numbers|123 Parker Road|cityline@gmail.com";
  String [] splitString = pipeDelimitedString.split("\\|");

  obj.doSomething(splitString[Constants.HOME_ADDRESS]);
  obj.doSomething(splitString[Constants.EMAIL_ADDRESS]);           
}

class Constants {

  public static final int HOME_ADDRESS = 7;
  public static final int EMAIL_ADDRESS = 8;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I’ve created a constants class, with some constants &lt;code&gt;(HOME_ADDRESS = 7 and EMAIL_ADDRESS = 8)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Constants.HOME_ADDRESS&lt;/code&gt; &amp;amp; &lt;code&gt;Constants.EMAIL_ADDRESS&lt;/code&gt; are much easier to understand and now have meaning!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you aren’t convinced, what’s easier to read:&lt;br&gt;
&lt;code&gt;splitString[Constants.HOME_ADDRESS]&lt;/code&gt; or &lt;code&gt;splitString[7]&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Again, this is just ONE example of magic numbers but there are many more. Thanks for reading!&lt;/p&gt;

&lt;p&gt;Thanks for reading! Check out my blog for more articles like this @ &lt;a href="https://www.anthonydellavecchia.com"&gt;www.anthonydellavecchia.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
      <category>java</category>
    </item>
  </channel>
</rss>
