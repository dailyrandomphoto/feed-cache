<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How I passed the AWS Certified Solutions Architect Professional 2021 Exam - SAP-C01</title>
      <author>Arif Amirani</author>
      <pubDate>Mon, 09 Aug 2021 10:39:01 +0000</pubDate>
      <link>https://dev.to/arifamirani/how-i-passed-the-aws-certified-solutions-architect-professional-2021-exam-sap-c01-4f6l</link>
      <guid>https://dev.to/arifamirani/how-i-passed-the-aws-certified-solutions-architect-professional-2021-exam-sap-c01-4f6l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I recently passed my AWS Solutions Architect Professional Certification on the first try. I wanted to share my experience of preparing for the exam as well as the actual exam day tips and tricks I learnt from the veterans. I'll also talk about what to expect and ways to navigate the challenges. Getting an AWS certification is important for your cloud ecosystem career. Any role including DevOps, Engineer, Data, Architect would immensely benefit from this certification.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-certificate"&gt;
  &lt;/a&gt;
  The certificate
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xocWD0qF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zb97dvh5ysejc448fdcz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xocWD0qF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zb97dvh5ysejc448fdcz.png" alt="AWS Certified Solutions Architect Professional Badge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.credly.com/badges/d08284c3-5837-40de-9b8a-0894934e6e2a/public_url"&gt;Credly Page&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;I've been a full stack developer for over 15 years. Worked in small and large organizations across domains. I started my journey on cloud with AWS, working on the very basic offerings such as EC2, VPC, ELB, R53, S3, etc around 8 years ago. My primary focus has always been on AWS with about 20% time spent on other cloud vendors like Google Cloud Platform (GCP). I've built large scale, distributed, real-time systems in various domains and seen them through scale and chaos.&lt;/p&gt;

&lt;p&gt;I have also passed my AWS DevOps certification a couple of years ago. Currently I am an AWS Community Builder, which is an awesome platform for AWS enthusiasts and you should definitely signup to learn from the experts at &lt;a href="https://aws.amazon.com/developer/community/community-builders/"&gt;AWS Community Builders&lt;/a&gt;. With &lt;a href="https://twitter.com/jasondunn"&gt;Jason Dunn&lt;/a&gt; steering the effort it has become even more engaging and vibrant.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-the-exam-test-you-on"&gt;
  &lt;/a&gt;
  What does the exam test you on?
&lt;/h2&gt;

&lt;p&gt;The AWS SA Pro is one of the toughest and sought after certifications in the cloud ecosystem. The primary reason is, the certification not only tests your knowledge but most importantly your experience. AWS tries very hard to ensure that candidates DO NOT clear this certification by sheer hard work or grit unless they can demonstrate experience and the ability to evaluate situations.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Does that I mean I cannot pass without experience?&lt;br&gt;
Of course you can, but according to me, cramming for a professional certification and passing it might just be a waste of time. You're better off studying the associate certification and then get real world experience before moving ahead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#understanding-the-exams"&gt;
  &lt;/a&gt;
  Understanding the exams
&lt;/h2&gt;

&lt;p&gt;It is important to understand the mechanics of the exam. They will help you be aware of what AWS expects out of each question. AWS goes into painstaking details to make the exam unambigous. Their focus is to test your knowledge and experience at every step. My notes on the research:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#questions"&gt;
  &lt;/a&gt;
  Questions
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;There are no trick questions&lt;/li&gt;
&lt;li&gt;Several questions are distractors. Distractors are answers which &lt;em&gt;may be&lt;/em&gt; wrong but seem perfectly plausible&lt;/li&gt;
&lt;li&gt;Very rarely will previous questions/answers aid your next ones&lt;/li&gt;
&lt;li&gt;You get about 2.5 minutes per question and they are long. Learn to read them quickly (more on this later)&lt;/li&gt;
&lt;li&gt;Many answers are right, you have to pick the &lt;em&gt;most&lt;/em&gt; appropriate one given the requirement&lt;/li&gt;
&lt;li&gt;At the Professional level, the questions require you to &lt;em&gt;Analyze and Evaluate&lt;/em&gt;. This means you need to understand the scenario and pick one based on several factors&lt;/li&gt;
&lt;li&gt;Questions will only test you on one area at a time even with multiple systems&lt;/li&gt;
&lt;li&gt;Questions will not test you on UI, numbers, math, etc. You do however need to know the limits of services to select the right answer. For e.g. API Gateway has a timeout of 29 secs and will impact long running choices.&lt;/li&gt;
&lt;li&gt;Scores are scaled. Each question does not have the same weight. This will impact your total score.&lt;/li&gt;
&lt;li&gt;There is no penalty for wrong answers&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#my-preparation"&gt;
  &lt;/a&gt;
  My Preparation
&lt;/h2&gt;

&lt;p&gt;I spent over two weeks of rigorous study prior to the exam. I continously work on projects that require me to interact with AWS (most common services), this helped a lot. Some of the questions are &lt;em&gt;recall level&lt;/em&gt;, which means they test your ability to remember services and their characteristics, and continously working with AWS will help you answer them.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Give yourself at least 1 month to prepare even if you are an AWS expert&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#focus"&gt;
  &lt;/a&gt;
  Focus
&lt;/h3&gt;

&lt;p&gt;Like any certification exam, passing the SA Pro, requires a bit of everything:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Knowledge - You absolutely must be well versed with AWS&lt;/li&gt;
&lt;li&gt;Experience - You must know how to solve problems using a combination of AWS services and have solved at least a few in the past&lt;/li&gt;
&lt;li&gt;Scope - Understand what the certification will test you on before you start studying. Go to at least more than one source to get latest information&lt;/li&gt;
&lt;li&gt;Skill - The questions are long, designed to confuse and needs time to evaluate. Picking the right approach is key to solving all questions&lt;/li&gt;
&lt;li&gt;Time Management - Devise an approach to reading the questions and skimming through them (more on this later)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many courses and prep tools out there for the professional exam. I did a cursory search on the internet and asked experts around for the recommended ones.&lt;/p&gt;

&lt;p&gt;The only two I ended up using was:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AWS Certified Solutions Architect Professional Practice Exams 2021 by Tutorials Dojo&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These exams are the holy grail of practice. They are continously updated and John B (a fellow AWS CB) is looped into the AWS ecosystem. The team keeps the questions updated and very relevant to the exam. If there is one service you pay for to pass the exam, this is it.&lt;/p&gt;

&lt;p&gt;John and his team are great and will help you every step of the way.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How to use Tutorials Dojo"&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do these exams last but do them all&lt;/li&gt;
&lt;li&gt;Go thru your study material and leave them for last&lt;/li&gt;
&lt;li&gt;Prepare yourself for 3 hours and take one exam at a time in its entirety&lt;/li&gt;
&lt;li&gt;Do this as close to the exam date as your schedule allows&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://portal.tutorialsdojo.com/courses/aws-certified-solutions-architect-professional-practice-exams/"&gt;Click here to visit Tutorials Dojo&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ultimate AWS Certified Solutions Architect Professional 2021 by Stephane Maarek (Udemy)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Stephane Maarek is one of the best fast paced trainers out there for AWS certifications. If you have significant experience with AWS, then his courses will walk you through the exam oriented aspects of the services. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How to use Stephane's course&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is a slides only course. No UI or demos&lt;/li&gt;
&lt;li&gt;Follow up with self guided practical sessions to understand the nuances&lt;/li&gt;
&lt;li&gt;Review the slides before the exams&lt;/li&gt;
&lt;li&gt;This is a long course, playback at 1.25x or 1.5x to save time&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/aws-solutions-architect-professional/"&gt;Click here to visit Stephane Maarek's course on Udemy&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#study-notes"&gt;
  &lt;/a&gt;
  Study notes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Go through all the services whether you have used them or not&lt;/li&gt;
&lt;li&gt;Write down characteristics and limitations of every service (e.g. EBS is about 3IOPS/GB, Lambda has a max of 15 mins, Lambda vCPU increases with RAM)&lt;/li&gt;
&lt;li&gt;Map services to keywords. e.g. NLB = expensive, fast, millions of connections, SQS = decouple services&lt;/li&gt;
&lt;li&gt;Take notes, lots and lots of notes. I filled an entire book with simple one liner notes. It helps to recall later&lt;/li&gt;
&lt;li&gt;There are many services with similar names and functions. Clearly write their attributes to distinguish e.g. Storage gateway options&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-read-the-questions"&gt;
  &lt;/a&gt;
  How to read the questions
&lt;/h2&gt;

&lt;p&gt;Almost all questions are scenario based and require you to read them quickly. I devised a strategy that worked for me. After the first 120 minutes, I had gone through the entire set of questions, skipped 5 (not even read), and had marked about 12 of them for review. This gave me a full hour to review the ones I wasn't sure of. The strategy is as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You get about 2.5 minutes per question. Do not time while reading the question&lt;/li&gt;
&lt;li&gt;If the question is long and has each answer that involves multiple services - Skip it&lt;/li&gt;
&lt;li&gt;Get through all the small ones first&lt;/li&gt;
&lt;li&gt;With each question:

&lt;ul&gt;
&lt;li&gt;Read the scenario and requirement two times. Pick up keywords and pivot your answer around them&lt;/li&gt;
&lt;li&gt;Eliminate the wrong ones immediately. Wrong ones have clear issues e.g. Archive data to ephemeral storage&lt;/li&gt;
&lt;li&gt;Questions can have single word differences, read each word carefully e.g. instance data vs user data&lt;/li&gt;
&lt;li&gt;Once an answer is chosen, read it and map each requirement to the scenario and requirement&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#exam-day-game-time"&gt;
  &lt;/a&gt;
  Exam day - Game time!
&lt;/h2&gt;

&lt;p&gt;I woke up early on exam day, after a small run, I took the final timed exam from Tutorials Dojo.&lt;/p&gt;

&lt;p&gt;Notes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have a good breakfast. You'll be in for 3 hours, you need the energy&lt;/li&gt;
&lt;li&gt;Have a small walk/run&lt;/li&gt;
&lt;li&gt;Try and reach at least 20 minutes before&lt;/li&gt;
&lt;li&gt;There is no set exam time/batch. Once you arrive, they log you in and off you go&lt;/li&gt;
&lt;li&gt;You cannot carry anything in the exam center (no watches, wallets, keys, etc)&lt;/li&gt;
&lt;li&gt;There is a bathroom break but the exam timer does not pause or stop. Best to take care of things before the exam starts&lt;/li&gt;
&lt;li&gt;Exam centers generally have smaller monitors and uncomfortable chairs/keyboards. Be mentally prepared to not be physically comfortable&lt;/li&gt;
&lt;li&gt;Ask for a pen/paper to write notes. You can only mark the question for review, not the choices. I avoided using the comments feature of the exam. Instead I wrote down the choices I am confused between on paper&lt;/li&gt;
&lt;li&gt;Remain calm. The first few questions and minutes can be overwhelming. Once you start answering your pace picks up (TD exams will also help)&lt;/li&gt;
&lt;li&gt;There is no penalty for wrong answers, so make sure you attempt all of them&lt;/li&gt;
&lt;li&gt;If you finish early, review only the most ambigous questions. I tried reviewing most of them and wasted a lot of time&lt;/li&gt;
&lt;li&gt;Mark questions for review liberally. If you practice you can get through the questions quickly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that's it, if you've practiced and read enough this should be a breeze. You'll see a &lt;strong&gt;PASS&lt;/strong&gt; grade immediately.&lt;/p&gt;

&lt;p&gt;Best of luck!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>certification</category>
      <category>career</category>
      <category>cloud</category>
    </item>
    <item>
      <title>How to choose a database on AWS</title>
      <author>Ivonne Roberts</author>
      <pubDate>Mon, 09 Aug 2021 10:35:36 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-choose-a-database-on-aws-1omh</link>
      <guid>https://dev.to/aws-builders/how-to-choose-a-database-on-aws-1omh</guid>
      <description>&lt;p&gt;How do I choose a database on AWS? How do I choose between NoSQL (Amazon DynamoDB) vs SQL (Amazon RDS)? When building a serverless microservice on AWS, I will walk you through how I narrow down what the best database on AWS is for my microservice.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/drkBB21eKdI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#database-options-on-aws"&gt;
  &lt;/a&gt;
  Database options on AWS
&lt;/h2&gt;

&lt;p&gt;When it comes to storing data in AWS, at the time of writing, there are over 15 different options. The options for our microservice’s persistent store are the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amazon Aurora&lt;/li&gt;
&lt;li&gt;Amazon RDS

&lt;ul&gt;
&lt;li&gt;Aurora&lt;/li&gt;
&lt;li&gt;PostgreSQL&lt;/li&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;MariaDB&lt;/li&gt;
&lt;li&gt;Oracle&lt;/li&gt;
&lt;li&gt;SQLServer&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Amazon Redshift&lt;/li&gt;
&lt;li&gt;Amazon DynamoDB&lt;/li&gt;
&lt;li&gt;DocumentDB&lt;/li&gt;
&lt;li&gt;Amazon Keyspaces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Not included here are the services for graph data and memory caching as it is not applicable for our use case.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-choosing-the-right-database-is-important"&gt;
  &lt;/a&gt;
  Why choosing the right database is important
&lt;/h2&gt;

&lt;p&gt;When choosing a database, it is important to make an informed decision to avoid issues down the road caused by cost, performance, or even worse, having to migrating to another database to support our business model. There are a few questions we need to ask ourselves when choosing a database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-we-need-a-nosql-or-sql-option"&gt;
  &lt;/a&gt;
  Do we need a NoSQL or SQL option?
&lt;/h2&gt;

&lt;p&gt;Here is the JSON object we need to be able to support. If you want to understand how we arrived at this JSON object, read &lt;a href="https://blog.ivonneroberts.com/2021/06/16/how-to-design-a-restful-api-on-aws/"&gt;How to design a RESTful API on AWS&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ACTIVE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"public"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1234556&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Weird Animal Facts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Tune in to learn about how horses make the neighing sound"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"dateTime"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2021-06-30T08:00:00+01:00"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"duration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"length"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"unit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"HOUR"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"locations"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ONLINE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://ivonneroberts.com/meetingURL"&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"VENUE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"address"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"streetAddress1"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1 5th Avenue"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"streetAddress2"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"city"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"New York"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"state"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"NY"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"zip"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10001&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A normalized form of this data could be represented by an &lt;code&gt;Event&lt;/code&gt; table, a &lt;code&gt;Schedule&lt;/code&gt; table and a &lt;code&gt;Location&lt;/code&gt; table. Let’s analyze these entities to be able to determine which type of database on AWS we could use, NoSQL or SQL.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Event&lt;/code&gt; table could have a 1:many relationship with &lt;code&gt;Schedule&lt;/code&gt;. You can imagine a scenario where an event could have a repeating schedule. That &lt;code&gt;Schedule&lt;/code&gt; table could have multiple entries for a given event. To decide NoSQL versus SQL, let’s look at the update query. How many event records would need to be updated, if an instance needs to be changed? We would need to update one record. This makes it a candidate for NoSQL database.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Event&lt;/code&gt; table could also have a 1:many relationship with &lt;code&gt;Location&lt;/code&gt;. An event could be both online, as well as, at a venue. Asking the same NoSQL versus SQL, let’s look at the update query. If a location needs to be updated how many event records would need to be updated? The answer is n events that use this same venue. You would have to query the table to find how many events have that venue and then update each one. This is not a candidate for NoSQL. However, the attributes of a location, have a lot of details or nuances that have nothing to do with an event. In fact, I would argue &lt;code&gt;Location&lt;/code&gt; should be in its own microservice. The Event REST API response should instead only include a location id, and that information stored as part of another microservice.&lt;/p&gt;

&lt;p&gt;With those questions answered, the remaining data in our microservice now could be stored in a NoSQL database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-the-data-will-be-queried"&gt;
  &lt;/a&gt;
  How the data will be queried
&lt;/h2&gt;

&lt;p&gt;For these first two urls, a NoSQL implementation (specifically Amazon DynamoDB) would be a scan on the full table. As the data grows, scans are not cost efficient, nor performant. We can mitigate this problem by introducing a range/sort key in addition to our primary/partition key, for example category. As a client, I am subscribed to the YouTube category. These APIs could use your authentication to determine your eligible categories, query the DB for them and then further filter either by date or other attributes of the event.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://api.mydomain.com/events/v1/events/
https://api.mydomain.com/events/v1/events/search?date[gt]=2021-07-01&amp;amp;status=CANCELLED
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This next API is straight forward. We can query our NoSQL database by the event id (partition key in DyanmoDB).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://api.mydomain.com/events/v1/events/{eventId}/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#costs-associated-with-databases-on-aws"&gt;
  &lt;/a&gt;
  Costs associated with databases on AWS
&lt;/h2&gt;

&lt;p&gt;The next question we need to ask is what are the cost consideration. When choosing a database there is both the cost of the actual database/license, as well as, the people cost to maintain and fine tune that database. For some of the databases on AWS you pay for what you use/store, most of the heavy lifting is abstracted from you. Other databases require EC2 instances, additional licenses in addition to the service. Also, depending on the database, you might need a database administrator to update, manage and fine tune that database. This can be cost prohibitive for a startup.&lt;/p&gt;

&lt;p&gt;Depending on where you are in your journey it is acceptable to start with the minimum requirements, and then at a later date take the downtime and migrate to another database that better meets your needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finalized-json-structure"&gt;
  &lt;/a&gt;
  Finalized JSON structure
&lt;/h2&gt;

&lt;p&gt;Now that we have reviewed the considerations for choosing our database, and we have finalized on a NoSQL option. Let’s update our JSON payload to reflect the changes we called out. First we have added a category attribute, this will be our range/sort key. Second, we have added a schedule attribute that is a list of all our instances of this event. Lastly we have updated the location object to now simply refer to an ID that references a resource in a separate location microservice.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ACTIVE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1234556&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"category"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"DEVWIDGETS_YOUTUBE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Weird Animal Facts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Tune in to learn about how horses make the neighing sound"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"schedules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"dateTime"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2021-06-30T08:00:00+01:00"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="nl"&gt;"duration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"length"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"unit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"HOUR"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}],&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"locations"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;456&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;789&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So after much deliberation we have finalized our JSON payload and have decided to use NoSQL. On AWS our options are Amazon DynamoDB, Amazon DocumentDB, and Amazon Keyspaces. For this microservice I am going to use Amazon DynamoDB as it is a fully managed service. It is a fairly robust database that abstracts a lot of the heavy lifting associated with managing a database. Most importantly it is serverless which means I don’t need to concern myself with EC2 pricing, patching and troubleshooting. And, to name a few more key features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fully managed&lt;/li&gt;
&lt;li&gt;multi-region&lt;/li&gt;
&lt;li&gt;multi-active&lt;/li&gt;
&lt;li&gt;built-in security&lt;/li&gt;
&lt;li&gt;backup and restore&lt;/li&gt;
&lt;li&gt;in-memory caching&lt;/li&gt;
&lt;li&gt;configurable autoscaling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We now have walked through how to choose a database on AWS Cloud. Next week, I will continue to build on this design and implement some of these APIs on AWS. Check back weekly for new content. Feel free to comment below any questions you may have or reach out to me on twitter at &lt;a class="mentioned-user" href="https://dev.to/ivlo11"&gt;@ivlo11&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#happy-coding"&gt;
  &lt;/a&gt;
  Happy Coding!
&lt;/h2&gt;

</description>
      <category>aws</category>
      <category>database</category>
      <category>nosql</category>
      <category>microservices</category>
    </item>
    <item>
      <title>Introducing the ultimate Laravel lean, mean, app-building machine - Soft UI Dashboard PRO Laravel</title>
      <author>Creative Tim</author>
      <pubDate>Mon, 09 Aug 2021 10:31:41 +0000</pubDate>
      <link>https://dev.to/creativetim_official/introducing-the-ultimate-laravel-lean-mean-app-building-machine-soft-ui-dashboard-pro-laravel-5ahp</link>
      <guid>https://dev.to/creativetim_official/introducing-the-ultimate-laravel-lean-mean-app-building-machine-soft-ui-dashboard-pro-laravel-5ahp</guid>
      <description>&lt;p&gt;Everybody wants to do more in less time. But what about doing more of what you enjoy and using &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-pro-laravel?ref=devto"&gt;Soft UI Dashboard PRO Laravel&lt;/a&gt; for the boring, repetitive tasks? Rather than writing basic CRUDs from scratch or painstakingly crafting your own Bootstrap UI components, you can focus on what really sets your app apart. &lt;/p&gt;

&lt;p&gt;Here's how you can save time both for backend and frontend tasks using Bootstrap 5, Laravel, Livewire and Alpine.js technologies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Frontend&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Awesome UI guaranteed following the latest design trend&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Soft UI Dashboard PRO Laravel is built following the hottest design trend right now, Soft UI. This guarantees your app will look amazing regardless of what you are building. The Soft UI look &amp;amp; feel relies heavily on: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.creative-tim.com/live/soft-ui-dashboard-pro-laravel"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cei3Sa6f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/laravel.gif" alt="default dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;gradients - grab users attention, make for a clean, high-end look and they`re a popular design trend this year.&lt;/li&gt;
&lt;li&gt;3D interactive elements - make your app more dynamic and engage users easier&lt;/li&gt;
&lt;li&gt;glassmorphism - transparent and blurred backgrounds are all the rage, a design trend used by companies such as Microsoft and Apple. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Reusable UI components &amp;amp; prebuilt design blocks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With over 300 UI components, from buttons and inputs to complex elements such as tables and charts, you have all the building blocks for your UI. You can create responsive, dynamic interfaces using the handcrafted Bootstrap 5 components and you can easily customize them through SASS files and classes.What's more, the product comes with pre-built design blocks you can assemble as modules to create unique pages. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.creative-tim.com/live/soft-ui-dashboard-pro-laravel?ref=devto"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OMF7Q9Zl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/Screen-Shot-2021-08-05-at-10.59.03.png" alt="table component"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;Table Component&lt;/center&gt;
&lt;br&gt;
&lt;strong&gt;Integrated plugins for extra functionality&lt;/strong&gt;

&lt;p&gt;You can extend functionalities as needed through the 14 integrated plugins, such as Kanban, Sweet Alerts, Wizard, Fullcalendar and many more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example pages to get you started&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whether you want to get a sense of what you can build or you need to quickly set up the basic structure for your web project, 54 example pages are there to help. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.creative-tim.com/live/soft-ui-dashboard-pro-laravel?ref=devto"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pz25U96M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/widgets-page.png" alt="widgets page"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;Widgets Page&lt;/center&gt;
&lt;br&gt;
&lt;a href="https://www.creative-tim.com/live/soft-ui-dashboard-pro-laravel?ref=devto"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1oqZpu2v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/profile-page.png" alt="profile page"&gt;&lt;/a&gt;&lt;br&gt;
&lt;center&gt;Profile Page&lt;/center&gt;
&lt;br&gt;
&lt;a href="https://www.creative-tim.com/live/soft-ui-dashboard-pro-laravel?ref=devto"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SMKUqcsj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/automotive-dashboard-page.png" alt="automotive dashboard"&gt;&lt;/a&gt;&lt;br&gt;
&lt;center&gt;Automotive Dashboard&lt;/center&gt;
&lt;br&gt;
&lt;a href="https://www.creative-tim.com/live/soft-ui-dashboard-pro-laravel?ref=devto"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nl39kJSL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/Virtual-Reality-page-dashboard.png" alt="virtual reality"&gt;&lt;/a&gt;&lt;br&gt;
&lt;center&gt;Virtual Reality Dashboard&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#backend"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Backend&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The CRUDs most apps need, out of the box&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Laravel backend is fully integrated, meaning you can easily tick all the boxes for a fully-functional admin panel for your custom application. You have Laravel CRUDs for the commonly used functionalities in any CMS, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Role-based authentication&lt;/li&gt;
&lt;li&gt;User profile&lt;/li&gt;
&lt;li&gt;User management&lt;/li&gt;
&lt;li&gt;Role management&lt;/li&gt;
&lt;li&gt;Item management&lt;/li&gt;
&lt;li&gt;Category and tag management&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Livewire &amp;amp; Alpine.js integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Everything is enhanced by Liveweire and Alpins.js, so you have all the full stack resources you need to build upon. The Livewire integration allows you to build dynamic interfaces easier without leaving the comfort of your favourite framework. If you combine this even further with Alpine.js, you get the perfect combo for kickstarting your next project.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A versatile full stack tool for building apps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Imagine Soft UI Dashboard PRO Laravel as the blueprint for your next app. A versatile tool which can be used to build different types of apps. Below are three of the most popular options you can start building right away.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lightweight e-commerce&lt;/strong&gt; - easily add products, create categories to organize products, add tags, customize item management to save prices or add additional custom fields &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lightweight CMS&lt;/strong&gt; - manage content by creating categories and tags. Create, view and update items and decide who has access to various types of content based on roles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Blog&lt;/strong&gt; - add articles and tags to find articles easier, create categories for organizing blog articles and easily manage your blog users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Resources&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-pro-laravel?ref=devto"&gt;Product Details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-laravel?ref=devto"&gt;Live Preview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://soft-ui-dashboard-pro-laravel.creative-tim.com/documentation/bootstrap/overview/soft-ui-dashboard/index.html?ref=devto"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Want a test drive? Check out the &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard?ref=devto"&gt;free demo&lt;/a&gt; with limited features to get a feel of what Soft UI Dashboard PRO Laravel can do.   &lt;/p&gt;

</description>
      <category>laravel</category>
      <category>backend</category>
      <category>fullstack</category>
    </item>
    <item>
      <title>How to use Luos with Python? Step 1 - Install and config Pyluos</title>
      <author>Emanuel Allely</author>
      <pubDate>Mon, 09 Aug 2021 10:09:47 +0000</pubDate>
      <link>https://dev.to/emanuel_allely/how-to-use-luos-with-python-step-1-install-and-config-pyluos-43a0</link>
      <guid>https://dev.to/emanuel_allely/how-to-use-luos-with-python-step-1-install-and-config-pyluos-43a0</guid>
      <description>&lt;p&gt;🎥 Here is a "quick and dirty" video tutorial showing how to install and config Pyluos to use Luos with Python. 🎓 Luos is an open-source project working on "how to bring &lt;strong&gt;modularity&lt;/strong&gt; and &lt;strong&gt;flexibility&lt;/strong&gt; to embedded systems", like @SpaceX, @Tesla, or @Dyson does.&lt;/p&gt;

&lt;p&gt;➔ &lt;a href="https://youtu.be/OCbpLSiOuG4"&gt;https://youtu.be/OCbpLSiOuG4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W2dhugu2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzj8dd8f0o42aejvu0q7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W2dhugu2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzj8dd8f0o42aejvu0q7.png" alt="Luos x Python"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>luos</category>
      <category>embedded</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How I Failed With My Recent SaaS Product</title>
      <author>Sunil Kumar</author>
      <pubDate>Mon, 09 Aug 2021 09:56:57 +0000</pubDate>
      <link>https://dev.to/sunilc_/how-i-failed-with-my-recent-saas-product-3f27</link>
      <guid>https://dev.to/sunilc_/how-i-failed-with-my-recent-saas-product-3f27</guid>
      <description>&lt;p&gt;When I was introduced to programming, I fell in love with it. The idea of changing the world just by sitting in a room in a corner of the world fascinated me.&lt;/p&gt;

&lt;p&gt;I always loved to work on side projects. I loved building products to solve own problems I faced every day. At any point, I always had a side project I was excited to work on. I did this for many years but I never shared it with anyone except for a few close friends of mine.&lt;/p&gt;

&lt;p&gt;I kept working on many side projects over the years. I even put them proudly on my resume. But I never really built something which was solving an actual problem. I did this for years. I built products that were fun to work on. &lt;/p&gt;

&lt;p&gt;For example, these are some of the products I built:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A Linux desktop alarm manager&lt;/li&gt;
&lt;li&gt;Track courier app&lt;/li&gt;
&lt;li&gt;Github contribution enhancer&lt;/li&gt;
&lt;li&gt;Product Hunt CLI etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see all these are fun products to build but they aren't solving an actual real-world problem.&lt;/p&gt;

&lt;p&gt;Eventually, I came across the concept of micro saas products and bootstrapped companies. If you're a SaaS enthusiast but don't think can build a typical startup, you should check out what micro SaaS startups are.&lt;/p&gt;

&lt;p&gt;Basically, you build a small SaaS product that solves a very niche problem and earn tens of thousands of dollars (or a hell lot more if it goes well).&lt;/p&gt;

&lt;p&gt;The main goals behind a Mirco startup are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;solving a small but a real problem&lt;/li&gt;
&lt;li&gt;working on products you love&lt;/li&gt;
&lt;li&gt;still making a lot of money&lt;/li&gt;
&lt;li&gt;freedom from working for someone else&lt;/li&gt;
&lt;li&gt;staying small (typically 1-5 people)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#story-of-landr"&gt;
  &lt;/a&gt;
  Story of Landr:
&lt;/h3&gt;

&lt;p&gt;When the pandemic hit the world in 2020 I had plenty of time at my disposal. So I decided to work on that "one cool idea" I had for some time.&lt;/p&gt;

&lt;p&gt;The idea was to make "yet another website builder". But I decided to solve this problem a little differently. Even though many drag and drop tools were available for nontechnical people to build websites, I thought people still needed to have great design skills to develop a good website using these tools.&lt;/p&gt;

&lt;p&gt;So I built a simpler tool that involved taking user inputs through a series of forms and generate websites from a user-selected template available on the tool. I named it &lt;a href="https://landr.page"&gt;&lt;strong&gt;Landr&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Users can input details like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;product features&lt;/li&gt;
&lt;li&gt;sections&lt;/li&gt;
&lt;li&gt;pricing&lt;/li&gt;
&lt;li&gt;newsletter details&lt;/li&gt;
&lt;li&gt;embed video links&lt;/li&gt;
&lt;li&gt;images etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sounds simple right?&lt;/p&gt;

&lt;p&gt;Of course, this was a cool idea to build. End users can just enter some inputs and click on the Generate button and create a website for themselves.&lt;/p&gt;

&lt;p&gt;This is where I went wrong.&lt;/p&gt;

&lt;p&gt;If you have the slightest knowledge of building SaaS products you would have figured out my mistakes by now, which are many!&lt;/p&gt;

&lt;p&gt;This is not generally how you build SaaS products, especially when your goal is to build a successful SaaS product generating thousands of dollars of income per month. You need to follow the right approach which generally involves doing the below steps in order:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Market research&lt;/li&gt;
&lt;li&gt;Ideation&lt;/li&gt;
&lt;li&gt;Validate Idea&lt;/li&gt;
&lt;li&gt;Build MVP product&lt;/li&gt;
&lt;li&gt;Launch&lt;/li&gt;
&lt;li&gt;Get user feedback&lt;/li&gt;
&lt;li&gt;Add additional features&lt;/li&gt;
&lt;li&gt;Launch again&lt;/li&gt;
&lt;li&gt;Market it more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see I didn't do any of the critical steps before starting to code the product. Doing market research is very important to understand which market has the potential to get into.&lt;/p&gt;

&lt;p&gt;Ideation is important to understand the real problems that people have. Once you confirm there exists a demand for a product solving a particular problem and people are ready to pay if such a product exists, only then you should go ahead and start building the MVP version of your product.&lt;/p&gt;

&lt;p&gt;But I skipped all these critical steps and jumped right into coding the "cool idea" I had. If you want to learn how to build a successful SaaS business online, take a look at the &lt;a href="https://sunilkumarc.gumroad.com/l/kgtSS"&gt;eBook&lt;/a&gt; that we released recently which I co-wrote along with my friend.&lt;/p&gt;

&lt;p&gt;I spent months building the complete product end to end all by myself. I was the only one who was deciding what features should be present in the product without any user involvement. &lt;/p&gt;

&lt;p&gt;I was motivated to complete the project and I did put a lot of heart into it. I was able to complete it in 2 months along with my day job at a startup. Another mistake. This is another mistake. You should not be spending 2 months of your time without showing the minimal product to the end-users and getting feedback to improve on it. There is a famous quote by Reid Hoffman, the founder of LinkedIn, which really resonates with some entrepreneurs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are not embarrassed by the first version of your product, you’ve launched too late.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Honestly, I loved the effort I had put in and how the product turned out in the end. I made a checklist of different things to take care of for the launch on Product Hunt and on Twitter. I even made a launch video myself. I have never edited videos before. But I was committed enough to giving it all I had for the launch.&lt;/p&gt;

&lt;p&gt;The launch in fact did go well and it achieved &lt;a href="https://www.producthunt.com/posts/landr-3/"&gt;&lt;strong&gt;#5 Product of the Day&lt;/strong&gt;&lt;/a&gt;. The launch went well in terms of upvotes and likes. I didn't make a single sale. I wasn't aware of how SaaS products are actually built during this time. More importantly, I didn't know how to market the product I had.&lt;/p&gt;

&lt;p&gt;I tried to DM people on Twitter, got involved in Facebook group discussions, and tried to spread the word about my product. But nobody was ready to pay for the product. I tried hard for a couple of months more before I finally abandoned the project.&lt;/p&gt;

&lt;p&gt;When I researched and talked to more people in the SaaS space after this, I realized my mistakes.&lt;/p&gt;

&lt;p&gt;When I look back I don't regret spending months of hard work on this product. At the end of the day, I learned something new and I did build a product I had in mind, which made me happy.&lt;/p&gt;

</description>
      <category>career</category>
      <category>startup</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>What Is Ruby Used For?</title>
      <author>Jjyygh</author>
      <pubDate>Mon, 09 Aug 2021 09:56:05 +0000</pubDate>
      <link>https://dev.to/jjyygh/what-is-ruby-used-for-5bi5</link>
      <guid>https://dev.to/jjyygh/what-is-ruby-used-for-5bi5</guid>
      <description>&lt;h2&gt;Introduction to Uses Of Ruby&lt;/h2&gt;
&lt;p&gt;Ruby is mainly designed or follow the principle of least astonishment (POLA). Its main idea is to reduce the complexity of use for users. While developing programmers can enjoy the programming in Ruby. Ruby has come up with great features like support to an object-oriented language, inheritance, garbage collection, dynamic and duck typing, overloading, exception handling, built-in support, support to all major platforms, compatible with other languages, and scope of variables, etc.&lt;/p&gt;
&lt;h3&gt;Ruby&lt;/h3&gt;
&lt;p&gt;Ruby is an open-source programming language. It is also referred to as scripting language that is dynamic, interpreted and object-oriented as well. It was created and developed by Yukihiro Matsumoto in the year 1993. It was first released or appeared in 1995. It supports cross-platform operating systems. It was written in C language.  Ruby has a syntax that is mainly similar to Perl and Python. It is scalable and projects with large code are easily maintainable.&lt;/p&gt;
&lt;br&gt;Read More : &lt;b&gt;&lt;span&gt;&lt;a href="https://www.codelivly.com/what-is-ruby-programming-used-for/"&gt;Uses Of Ruby Programming&lt;/a&gt;&lt;/span&gt;&lt;/b&gt;

</description>
      <category>ruby</category>
    </item>
    <item>
      <title>Get a 100k Flux grant for deploying your app on the Flux network</title>
      <author>Cryptovium </author>
      <pubDate>Mon, 09 Aug 2021 09:54:04 +0000</pubDate>
      <link>https://dev.to/cryptovium/get-a-flux-grant-for-deploying-your-app-on-the-flux-network-2nbh</link>
      <guid>https://dev.to/cryptovium/get-a-flux-grant-for-deploying-your-app-on-the-flux-network-2nbh</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RquakokX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ho3jncxtavfutx0zx7u7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RquakokX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ho3jncxtavfutx0zx7u7.png" alt="Flux - your gateway to a decentralized world"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flux has opened up applications for developers to get a &lt;strong&gt;100,000 Flux&lt;/strong&gt; (~$10,000 at time of writing) grant for creating and deploying something awesome on the Flux network.&lt;/p&gt;

&lt;p&gt;If you've got the ideas, skills and motivation to build something truly unique, then Flux's decentrealized cloud network is the place to build it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-flux"&gt;
  &lt;/a&gt;
  What is Flux?
&lt;/h2&gt;

&lt;p&gt;Flux is a powerful global decentralized computing network currently made up of over &lt;strong&gt;1650 community-run, decentralized nodes&lt;/strong&gt; powered by the revolutionary second layer operating system: FluxOS.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/VCqHOBRuSmI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Each node is capable of hosting dockerized applications with FluxOS ensuring that a set number of containers are run across the network. This ensures true decentralization and that your app is always available.&lt;/p&gt;

&lt;p&gt;The Flux Network currently has close to 10,000 vCores, 30TB RAM and 1,000TB of SSD storage available for apps to consume.&lt;/p&gt;

&lt;p&gt;Powering the ecosystem is the Flux blockchain, a Proof of Work chain that is used for rewarding miners and node operators, payment for compute resources and much more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apps-already-on-the-flux-network"&gt;
  &lt;/a&gt;
  Apps already on the Flux Network
&lt;/h2&gt;

&lt;p&gt;The Flux network already hosts dozens of apps and aspects of blockchain infrastructure for other projects. Flux can run any hardened dockerized image, so the possibilities of what you can build are endless.&lt;/p&gt;

&lt;p&gt;They recently completed a 20 dapps in 20 days challenge which 20 new apps added to the network, including numerous games. In fact, Flux is perfect for hosting online games and even has some Minecraft servers currently running on the network.&lt;/p&gt;

&lt;p&gt;As mentioned above, Flux also hosts aspects of other Crypto projects infrastructure, the best example of which is Kadena. There are hundreds of Kadena nodes currently being run on the Flux Network.&lt;/p&gt;

&lt;p&gt;To see a complete list of apps running on Flux, check out:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.runonflux.io/fluxos#dapps-section"&gt;https://www.runonflux.io/fluxos#dapps-section&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#100k-flux-grants"&gt;
  &lt;/a&gt;
  100k Flux grants
&lt;/h2&gt;

&lt;p&gt;To keep the ball rolling after the 20 dapps in 20 days challenge, Flux is looking for the next killer decentralized application and is inviting developers to submit their ideas to be in with a chance of getting one of those 100k $FLUX grants.&lt;/p&gt;

&lt;p&gt;It can be a single app, a platform/system consisting of a combination of apps or something else entirely as long as it harnesses the strengths of a decentralized cloud and helps to grow the network.&lt;/p&gt;

&lt;p&gt;Grants are give for the development proposals that are greenlighted by the community DAO and are paid in phases at key project milestones with the final amount paid on the final production deployment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-apply"&gt;
  &lt;/a&gt;
  How to apply
&lt;/h2&gt;

&lt;p&gt;For more details on how to apply and what winning the grant will mean, please check out the following post from the Flux team:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fluxofficial.medium.com/call-for-developers-innovate-on-flux-and-get-a-100k-grant-e9ae90735b63"&gt;https://fluxofficial.medium.com/call-for-developers-innovate-on-flux-and-get-a-100k-grant-e9ae90735b63&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further reading
&lt;/h2&gt;

&lt;p&gt;If you'd like to learn more about the Flux project as a whole, then checkout the &lt;a href="https://runonflux.io"&gt;Flux website&lt;/a&gt;, drop by the &lt;a href="https://discord.io/runonflux"&gt;Flux discord&lt;/a&gt; or give them a follow on &lt;a href="https://twitter.com/RunOnFlux"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also cover Flux and other projects extensively on my own &lt;a href="https://twitter.com/Cryptovium"&gt;Twitter account&lt;/a&gt;, including weekly updates on the earning potential of running a Flux node.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--htyeIIDy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E6buHZ1XMAUtaKw.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--KSHd3v3B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1396757759937466369/PSfP2wRl_normal.jpg" alt="Cryptovium profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Cryptovium
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/cryptovium"&gt;@cryptovium&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I'm a month into running my stratus &lt;a href="https://twitter.com/hashtag/FluxNode"&gt;#FluxNode&lt;/a&gt; so... time for a monthly update! Even with the suppressed $FLUX and $KDA prices we're experiencing at the moment, these things are &lt;a href="https://twitter.com/hashtag/PassiveIncome"&gt;#PassiveIncome&lt;/a&gt; powerhouses. As the &lt;a href="https://twitter.com/hashtag/Crypto"&gt;#Crypto&lt;/a&gt; market conditions improve... 🤯&lt;br&gt;&lt;br&gt;Monthly profit: $100.19 🔥 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:05 PM - 16 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1416081604812869634" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1416081604812869634" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1416081604812869634" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Give me a follow!&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>docker</category>
      <category>javascript</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Observer Design Pattern in JavaScript</title>
      <author>Shubham Khatri</author>
      <pubDate>Mon, 09 Aug 2021 09:46:15 +0000</pubDate>
      <link>https://dev.to/shubhamreacts/observer-design-pattern-in-javascript-74m</link>
      <guid>https://dev.to/shubhamreacts/observer-design-pattern-in-javascript-74m</guid>
      <description>&lt;p&gt;While working with any language, we tend to use several reusable design solutions to commonly occurring problems. In JavaScript, too, we have a mix of well-defined patterns.&lt;/p&gt;

&lt;p&gt;The Observer pattern is one of them.&lt;/p&gt;

&lt;p&gt;In this article, we shall understand more about the Observer design pattern in JavaScript and implement a small example in vanilla JavaScript.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-the-observer-design-pattern"&gt;
  &lt;/a&gt;
  What Is the Observer Design Pattern?
&lt;/h2&gt;

&lt;p&gt;The Observer pattern follows a subscription model. A subscriber (commonly referred to as &lt;strong&gt;&lt;em&gt;the observer&lt;/em&gt;&lt;/strong&gt;) subscribes to an event or an action handled by a publisher (commonly referred to as &lt;strong&gt;&lt;em&gt;the subject&lt;/em&gt;&lt;/strong&gt;) is notified when the event or action occurs.&lt;/p&gt;

&lt;p&gt;The subject broadcasts the occurrence of the event or action to all the observers.&lt;/p&gt;

&lt;p&gt;When the observer no longer wishes to be notified of the changes by the subject, it unsubscribes itself from the subject, and the subject then removes it from the list of subscribers.&lt;/p&gt;

&lt;p&gt;An Observer design pattern is very similar to a &lt;strong&gt;&lt;em&gt;Publisher/Subscriber&lt;/em&gt;&lt;/strong&gt; pattern, with a small difference that a &lt;strong&gt;&lt;em&gt;Publisher/Subscriber&lt;/em&gt;&lt;/strong&gt; pattern also specifies a topic it wants to subscribe to. &lt;/p&gt;

&lt;p&gt;For example, when detecting keyboard shortcuts, the subscriber can choose to specify a key combination that it wants to listen to in a &lt;strong&gt;&lt;em&gt;Publisher/Subscriber&lt;/em&gt;&lt;/strong&gt; model.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#implementation-of-the-observer-pattern"&gt;
  &lt;/a&gt;
  Implementation of the Observer Pattern
&lt;/h2&gt;

&lt;p&gt;As an example of the Observer pattern, we will go about implementing a simple interaction where multiple elements listen to the mouse position on the screen and perform different actions.&lt;/p&gt;

&lt;p&gt;Below is an example of what our interaction looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z087sScn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628501304147/iFGHMMHk4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z087sScn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628501304147/iFGHMMHk4.gif" alt="Demo interaction"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before we implement this interaction, let us analyze what is happening in this example as the mouse position changes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The mouse position is immediately updated in the textbox at the top right corner.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The circle follows the trajectory of the mouse after a delay of 1s.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From the above description, we see that multiple components need information about the same thing but behave differently.&lt;/p&gt;

&lt;p&gt;From the above example, we identify that the &lt;strong&gt;subject&lt;/strong&gt; listens to the mouse event on the window and relays it to whoever wants it. The &lt;strong&gt;circle and textbox&lt;/strong&gt; are &lt;strong&gt;observers&lt;/strong&gt; in the above example.&lt;/p&gt;

&lt;p&gt;So let us now go ahead and implement it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-implement-a-mousepositionobservable-class"&gt;
  &lt;/a&gt;
  Step 1. Implement a MousePositionObservable class
&lt;/h3&gt;

&lt;p&gt;As a first step let us go ahead and implement the &lt;code&gt;MousePositionObservable&lt;/code&gt; class. This class needs to do the following things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Keep a list of observer callbacks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Expose a &lt;code&gt;subscribe&lt;/code&gt; method which the observers will call to subscribe to the change. The return value of this must be a function that will move the &lt;code&gt;callback&lt;/code&gt; from the set of &lt;code&gt;subscriptions&lt;/code&gt; when called.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Listen to &lt;code&gt;mouseMove&lt;/code&gt; event and trigger all subscription callbacks.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The code looks like the below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MousePositionObservable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscriptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleMouseMove&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;handleMouseMove&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscriptions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sub&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientY&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscriptions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscriptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscriptions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cb&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;cb&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2-create-html-elements"&gt;
  &lt;/a&gt;
  Step 2. Create HTML elements
&lt;/h3&gt;

&lt;p&gt;We now create our HTML elements for &lt;code&gt;circle&lt;/code&gt; and &lt;code&gt;textMessageBox&lt;/code&gt; and add styles to them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"circle"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mouse-position"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h4&amp;gt;&lt;/span&gt;Mouse Position&lt;span class="nt"&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"position"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f3df49&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.circle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#238643&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.mouse-position&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.mouse-position&lt;/span&gt; &lt;span class="nt"&gt;h4&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-3-add-observers"&gt;
  &lt;/a&gt;
  Step 3. Add observers
&lt;/h3&gt;

&lt;p&gt;The last step to make it come together is to create an instance of our &lt;code&gt;MousePositionObservable&lt;/code&gt; class and add observers to it.&lt;/p&gt;

&lt;p&gt;To do that we shall invoke the &lt;code&gt;subscribe&lt;/code&gt; method on the class instance and pass on a callback.&lt;/p&gt;

&lt;p&gt;Our code looks like the below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mousePositionObservable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MousePositionObservable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;mousePositionObservable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.circle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`translate(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Update the mouse positon container to show the mouse position values&lt;/span&gt;
&lt;span class="nx"&gt;mousePositionObservable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;board&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.mouse-position .position&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;board&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
    &amp;lt;div&amp;gt;
       &amp;lt;div&amp;gt;ClientX: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/div&amp;gt;
       &amp;lt;div&amp;gt;ClientY: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  `&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We add two subscriptions to the &lt;code&gt;MousePositionObservable&lt;/code&gt; instance, one for each element that needs to listen to mouse values.&lt;/p&gt;

&lt;p&gt;The subscription callback for the &lt;code&gt;circle&lt;/code&gt; element gets the reference of the DOM element and updates its &lt;code&gt;transform&lt;/code&gt; property. The transform property will use hardware acceleration where possible, so using &lt;code&gt;translate()&lt;/code&gt; over position top and left will see performance benefits if any animations or transitions are also being used on the element.&lt;/p&gt;

&lt;p&gt;The subscription callback for the &lt;code&gt;textbox&lt;/code&gt; element updates its HTML content by using the &lt;code&gt;innerHTML&lt;/code&gt; property.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: When you want to unsubscribe the listener, all you have to do is to store the returned value from the subscribe function call and invoke it like a function&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That is all we need for our demo.&lt;/p&gt;

&lt;p&gt;You can check out the working example in the Codepen below:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/mayank_shubham/embed/OJpjraX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#advantages-and-disadvantages-of-the-observer-design-pattern"&gt;
  &lt;/a&gt;
  Advantages and Disadvantages of the Observer Design Pattern
&lt;/h2&gt;

&lt;p&gt;An Observer design pattern provides us the following benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It is extremely useful when we want to perform multiple actions on a single event.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It provides a way to decouple functionalities while maintaining consistency between related objects.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The downside of this pattern stems from its benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Since the Observer design pattern leads to loosely coupled code, it is sometimes hard to guarantee that other parts of the application are working as they should. For example, the subscriptions added to the subject may have code that is behaving incorrectly, but there is no way for the publisher to know that.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#realworld-applications"&gt;
  &lt;/a&gt;
  Real-World Applications
&lt;/h2&gt;

&lt;p&gt;While working with web development we see that &lt;code&gt;Redux&lt;/code&gt; and &lt;code&gt;React Context&lt;/code&gt; are both examples of implementations built upon the Observer Design Pattern.&lt;/p&gt;

&lt;p&gt;In Redux, we have a &lt;code&gt;subscribe&lt;/code&gt; method that allows us to add observers to the redux state which acts as the subject. Whoever subscribes to the redux store is notified when any change is made to the store.&lt;/p&gt;

&lt;p&gt;Similarly, with React Context whenever the value is updated for the &lt;code&gt;ContextProvider&lt;/code&gt;, all components that subscribe to the Context either through the &lt;code&gt;useContext&lt;/code&gt; hook or through &lt;code&gt;Context.Consumer&lt;/code&gt; are re-rendered with updated context values.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we went through the Observer design pattern and how to use it within our application. We also implement a demo based on this pattern and learned about some of the advantages and disadvantages of following this approach to designing interactions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you for reading.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you found this article useful and informative, please don't forget to like and share it with your friends and colleagues.&lt;/p&gt;

&lt;p&gt;If you have any suggestions, please feel free to comment.&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/ShubhamReacts"&gt;Twitter&lt;/a&gt; for more web development content.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>ht</category>
    </item>
    <item>
      <title>npm commands every developer should know</title>
      <author>Naveenchandar</author>
      <pubDate>Mon, 09 Aug 2021 09:40:09 +0000</pubDate>
      <link>https://dev.to/naveenchandar/npm-commands-every-developer-should-know-13dk</link>
      <guid>https://dev.to/naveenchandar/npm-commands-every-developer-should-know-13dk</guid>
      <description>&lt;p&gt;NPM stands for Node Package Manager, is one of the most used tools for any javascript developer. It puts all modules in one place so that node can find them, and manages dependency conflicts. Here's a list of the most common npm commands you should be aware of.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;install&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command is used to install the npm package and the other packages which the particular package depends on. It will install in the local &lt;code&gt;node_modules&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install &amp;lt;packagename&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There's a shorthand for installing the new packages.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm i &amp;lt;packagename&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;uninstall&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command does the exact opposite of install. It will uninstall the package completely which is already exist in the node_modules folder. If the package mention is not present &lt;code&gt;package.json&lt;/code&gt; list or &lt;code&gt;node_modules&lt;/code&gt; folder, it won't do anything.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm uninstall &amp;lt;packagename&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Shorthand for uninstalling the new packages.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm un &amp;lt;packagename&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;update&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command updates the current package to the latest version and if no package name has been specified then it will update all packages. If some package is missing, it will check and update those too.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm update &amp;lt;packagename&amp;gt;&lt;/code&gt; or &lt;code&gt;npm update&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;Shorthand for updating the packages.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm up &amp;lt;packagename&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;deprecate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command will update the npm registry entry for a package by providing a deprecation warning or message to all who attempt to install it.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm deprecate &amp;lt;pkg&amp;gt;[@&amp;lt;version range&amp;gt;] &amp;lt;message&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To un-deprecate a particular package, specify an empty string ("") for the message argument. Note that you must use double quotes with no space between them.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm deprecate &amp;lt;pkg&amp;gt;[@&amp;lt;version range&amp;gt;] ""&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;doctor&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It checks our environment so that our npm installation has what it needs to manage our JavaScript packages. Before installing npm will check for some basic requirements which has to be met by the packages.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node.js and git must be executable by npm.&lt;/li&gt;
&lt;li&gt;Make sure the npm registry, registry.npmjs.com, or another service that uses the registry API is available.&lt;/li&gt;
&lt;li&gt;Directories that uses npm, node_modules (both locally and globally), exist and can be written by the current user.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;npm doctor&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;list&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command will print all the packages and their versions that are installed, as well as their dependencies in a tree structure.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;view&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command will prints the data about the package.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm view &amp;lt;packagename&amp;gt; &amp;lt;versions&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If version is not specified, default version is 'latest'&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;help&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command helps with the mentioned topic. It shows the appropriate documentation page.&lt;br&gt;
If the topic does not exist, or if multiple terms are provided, then npm will run the &lt;code&gt;help-search&lt;/code&gt; command to find a match. If &lt;code&gt;help-search&lt;/code&gt; finds a single subject, then it will run help on that topic, so unique matches are equivalent to specifying a topic name.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm help &amp;lt;term&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install/Update the package globally&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command will install or update the package globally in your local system.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g nodemon&lt;/code&gt;&lt;br&gt;
&lt;code&gt;npm update -g nodemon&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;-g specifes global. If &lt;code&gt;-g&lt;/code&gt; is not specified, package will be installed in local by default which can't be accessed outside the project directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install a package as production/development dependency&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command will install the package which will be available in the specified environment.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -P &amp;lt;packagename&amp;gt;&lt;/code&gt; P for Production&lt;br&gt;
&lt;code&gt;npm install -D &amp;lt;packagename&amp;gt;&lt;/code&gt; D for Development&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;init&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command can convert an empty directory to an npm project by adding package.json file into it.&lt;/p&gt;

&lt;p&gt;Also, you can add meta info of the project to the &lt;code&gt;package.json&lt;/code&gt; file while creating it.&lt;/p&gt;

&lt;p&gt;If you don't have &lt;code&gt;package.json&lt;/code&gt; in a directory, and you trigger &lt;code&gt;npm install moduleName&lt;/code&gt; at that directory path then module will be installed globally.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm init&lt;/code&gt; or &lt;code&gt;npm init -y&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;build&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm build&lt;/code&gt; and &lt;code&gt;npm run build&lt;/code&gt; are entirely different.&lt;br&gt;
&lt;code&gt;npm run build&lt;/code&gt; - This command runs the build field from the package.json scripts field.&lt;br&gt;
&lt;code&gt;npm build&lt;/code&gt; - It is an internal command. If you run it you'll get: npm WARN build npm build called with no arguments. Did you mean to npm run-script build? You can read more on the documentation &lt;a href="https://docs.npmjs.com/cli/build"&gt;npm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;start&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command runs a predefined command specified in the &lt;code&gt;start&lt;/code&gt; property available inside &lt;code&gt;scripts&lt;/code&gt; in the &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;stop&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This command runs a predefined command specified in the &lt;code&gt;stop&lt;/code&gt; property available inside &lt;code&gt;scripts&lt;/code&gt; in the &lt;code&gt;package.json&lt;/code&gt; file. Unlike &lt;code&gt;start&lt;/code&gt;, there is no default script that will run if the &lt;code&gt;stop&lt;/code&gt; property is not defined&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm stop &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading this post. Have a great day. 🙂&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>node</category>
      <category>npm</category>
    </item>
    <item>
      <title>strip.pysondb a new JSON DB for python</title>
      <author>Adwaith Rajesh</author>
      <pubDate>Mon, 09 Aug 2021 09:33:51 +0000</pubDate>
      <link>https://dev.to/adwaithrajesh/strip-pysondb-a-new-json-db-for-python-2c75</link>
      <guid>https://dev.to/adwaithrajesh/strip-pysondb-a-new-json-db-for-python-2c75</guid>
      <description>&lt;p&gt;Today we will be talking about &lt;a href="https://github.com/Adwaith-Rajesh/strip.pysondb"&gt;strip.pysondb&lt;/a&gt;, as the name suggest it's stripped down version of an existing JSON DB called &lt;a href="https://dev.to/fredysomy/pysondb-a-json-based-lightweight-database-for-python-ija"&gt;pysondb&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We will discuss some issues with pysondb and how the strip.pysondb fixes those issues.&lt;/p&gt;

&lt;p&gt;But first, some of the core features of strip.pysondb are.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No third party packages needed&lt;/li&gt;
&lt;li&gt;No CLI&lt;/li&gt;
&lt;li&gt;No ImageUtils&lt;/li&gt;
&lt;li&gt;Use of &lt;a href="https://www.python.org/dev/peps/pep-0008/#function-and-variable-names"&gt;python naming conventions&lt;/a&gt; in functions and classes.&lt;/li&gt;
&lt;li&gt;Just the code required to perform CRUD operation on JSON DB.&lt;/li&gt;
&lt;li&gt;Users can generate custom id's for their&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even though its called a stripped-down version of the original. There are some huge differences in the strip.pysondb works.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The data is not saved to file instantly, instead a methods needs to be called in order to do that.&lt;/li&gt;
&lt;li&gt;The user is supposed to pass the keys / column name for the DB during initialization of the &lt;code&gt;DB&lt;/code&gt; class.&lt;/li&gt;
&lt;li&gt;Some of the new methods that are not derived from PysonDB are,

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Adwaith-Rajesh/strip.pysondb/blob/master/docs/docs.md#dbpop_id-str---dictstr-any--none"&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Adwaith-Rajesh/strip.pysondb/blob/master/docs/docs.md#saving-to-a-file"&gt;&lt;code&gt;commit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Adwaith-Rajesh/strip.pysondb/blob/master/docs/docs.md#load-values-from-a-file"&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Adwaith-Rajesh/strip.pysondb/blob/master/docs/docs.md#get-the-first-n-values-from-the-db"&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Adwaith-Rajesh/strip.pysondb/blob/master/docs/docs.md#using-a-custom-id-generator"&gt;&lt;code&gt;set_id_generator&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Adwaith-Rajesh/strip.pysondb/blob/master/docs/docs.md#check-whether-an-id-exists-in-the-db"&gt;&lt;code&gt;id_exists&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lets-talk-about-speed"&gt;
  &lt;/a&gt;
  Let's talk about speed
&lt;/h2&gt;

&lt;p&gt;Here is a sample code that continuously add 1000 values to the DB, and calculates the time it takes to add all the 1000 values&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pysonDB
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  pip3 install pysondb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;  &lt;span class="c1"&gt;# test.py
&lt;/span&gt;  &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;

  &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pysondb&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;

  &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"test.json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"name&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Output
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  $ py test.py
  7.166365623474121
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yep, it takes 8 seconds to add 1000 values. If the DB already has a 1000 values then it takes 20 seconds.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;strip.pysondb
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  pip3 install strip.pysondb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;  &lt;span class="c1"&gt;# test2.py
&lt;/span&gt;  &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;

  &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pysondb&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DB&lt;/span&gt;

  &lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"name&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"test2.json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Output
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  $ py test2.py
  0.009546756744384
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see it only takes 0.01 seconds to add 1000 values. It only takes 0.9 seconds to 100_000 values to the DB.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Adwaith-Rajesh/strip.pysondb"&gt;Click here to see the GItHub Repo and for more info on the usage of strip.pysondb&lt;/a&gt; Star it if you like it.&lt;/p&gt;

&lt;p&gt;So next time you want to use a DB in your projects choose wisely and research all the available options.&lt;/p&gt;

&lt;p&gt;Thank you for reading.&lt;/p&gt;

</description>
      <category>database</category>
      <category>python</category>
      <category>json</category>
      <category>pysondb</category>
    </item>
    <item>
      <title>Considerations in Building Enclaves for Multiparty Computation (Part 2)</title>
      <author>Jack F.</author>
      <pubDate>Mon, 09 Aug 2021 09:21:31 +0000</pubDate>
      <link>https://dev.to/oblivious/considerations-in-building-enclaves-for-multiparty-computation-part-2-2pcn</link>
      <guid>https://dev.to/oblivious/considerations-in-building-enclaves-for-multiparty-computation-part-2-2pcn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#getting-your-code-on"&gt;
  &lt;/a&gt;
  Getting Your Code On
&lt;/h2&gt;

&lt;p&gt;Now that you’ve pinned down the ideal functionality of the enclave, and assuming you are comfortable coding up a server to handle requests from each party, we can talk about some of the aspects you probably want to keep in mind.&lt;/p&gt;

&lt;p&gt;In AWS, you can treat Nitro Enclaves as a self-contained VM with an Enclave Image File build from a Docker image running inside. The communication in and out of the enclave is via virtual sockets (vsock) only to the parent instance (that is the instance that created the enclave. The parent instance acts as an intermediary between the enclave and the outside world, with the sole exception of the KMS Proxy which speaks directly with AWS Key Management Service.&lt;/p&gt;

&lt;p&gt;To start, the purpose of using a trusted execution environment is because the parties don’t trust each other. So we have to assume the users of the enclave are adversarial by nature. This means there is an onus on you, the developer, to develop a secure application which is often easier said than done. A good starting point is to create strict input and output validators. If the IO is forced to conform to a predefined JSON-schema or OpenAPI definition, at least you should be able to validate that while checking for any malicious characters and so on.&lt;/p&gt;

&lt;p&gt;You should endeavor to be particularly careful when handling bytes as an input, especially in Python. The YouTuber PwnFunction has a nice introductory tutorial on a known exploit in Python’s Pickle library which you can find here.&lt;br&gt;
There is an ever persisting battle of course between usability and security. Some would strongly argue that enclave source code should be in either C or Rust, while others feel comfortable using languages such as Python in order to take advantage of a particular tool or framework within the enclave itself. Irrespective of your decision, the code can be made more secure by performing rigorous testing, performing static analysis such as SonarCloud, and using internal firewalls to lock down any unexpected communication channels.&lt;/p&gt;

&lt;p&gt;‌Once you’ve hardened the IO of the enclave you may also want to consider your authentication model for within the enclave. This can be as simple as inputting the key management services the enclave can speak to as a build argument (discusses in the next section) or using pre-shared keys with TLS-PSK for example. OAuth-based approaches may cause some additional considerations if the enclave can not directly communicate with a trusted key authority for public-key cryptographic approaches. That’s not to say it’s impossible, but one should certainly think through the challenges and potential risks which may be involved if there is a parent server acting as a man-in-the-middle.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#encoding-guarantees-build-arguments-and-environment-variables"&gt;
  &lt;/a&gt;
  Encoding Guarantees: Build Arguments and Environment Variables
&lt;/h2&gt;

&lt;p&gt;Previously we established that the enclave image (converted from the Docker image) running inside the Nitro Enclave is what is attested when requesting key access from one or more of the parties. Well, we can use this fact to develop reusable enclave images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2XRlt59R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h9kkfmfeymrxaynwn911.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2XRlt59R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h9kkfmfeymrxaynwn911.png" alt="Enclave Build Pipeline"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example, assume that we have two parties, Alice and Bob. They would like to be authorised based on some hash of their respective KMS ARNs and would also like to limit the number of function calls made by Alice to 3 and Bob to 2. Now imagine another scenario where Alice and Charlie would like to run the same interaction, but this time Alice can only make 2 function calls and Charlie 4.&lt;/p&gt;

&lt;p&gt;In such a scenario you do not want to be hard coding this information each time. Instead, you can leverage Docker build arguments and set them as environment variables within the enclave. This changes the Docker image and as such the attestation hashes that are used to verify the container to the key management services. It also can be highly efficient too, depending on how you create your Docker image as it can take advantage of build caching such that building the image with new arguments can be a painless process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#persistent-storage-pci-devices-amp-resource-requirements"&gt;
  &lt;/a&gt;
  Persistent Storage, PCI Devices &amp;amp; Resource Requirements
&lt;/h2&gt;

&lt;p&gt;Nitro Enclaves endeavor to ensure security by locking down a virtual machine to a very limited set of functionalities. It operates purely in RAM with dedicated CPUs. As such many functionalities, you may expect may not be available.&lt;/p&gt;

&lt;p&gt;For example, one would typically expect to have persistent storage on a Volume on an EC2 instance. However, this of course is outside of the enclave so you have to encrypt data using a KMS before releasing it to the parent instance. In the context of multiparty computation, this poses an interesting question, whose keys to use? To answer this you may wish to consider who manages the parent instance and how many of the parties would need to collaborate together to decrypt the data if the encrypted payload was to ever be leaked. One approach would be to encrypt the packet with each party's KMS in turn and reverse the process when decrypting the payload if returned to the enclave at a later point. There is nothing obviously wrong with this approach, but as we no every encryption and decryption will add to the latency of the enclave overall.&lt;/p&gt;

&lt;p&gt;When it comes to data, we’ve found it's best to assume the enclave is transactional and to save and reload persistent data for better confidence. That is not to say you shouldn’t save anything locally but best to consider it as a cache. That way if the enclave were to halt and be restored you have the safety net of being able to reload the state of the enclave.&lt;br&gt;
A second challenge is that no PCI devices are available to the enclave, so if you are hoping to crunch some data on a GPA or equivalent, you may want to think again. Your only obvious solution in such a scenario is to pay for an instance with more powerful CPUs and/or to allocate more of them to the enclave to facilitate threading and multiprocessing.&lt;/p&gt;

&lt;p&gt;Finally, one must remember that the entire enclave lives within the permitted resources at launch time. This means the enclave must have enough ram for the enclave image, all RAM required internally, and all RAM which will store the file system and so forth. This is worth keeping in mind as you develop your enclave and taking a resource-efficient design can save you significantly on your monthly AWS bills.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#timing-attacks"&gt;
  &lt;/a&gt;
  Timing Attacks
&lt;/h2&gt;

&lt;p&gt;Importantly, enclaves give you a guarantee that what code you agree gets run, not that it is safe to run. This is a big difference and the onus is on the developer to make sure that side channels, such as execution time, do not leak sensitive information that was unforeseen when signing off on the ideal functionality.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gk3doYdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5o3ayolyqhzhvwlikxm4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gk3doYdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5o3ayolyqhzhvwlikxm4.png" alt="Timing Attacs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s have a look at how the timing of execution may inadvertently change the guessing probability of a party's secret input. Suppose Alice inputs a decision tree that Bob wishes to use to classify some data. If the decision tree is not balanced, ie if there is a different number of comparisons required depending on the path taken through the branches of the decision tree, then simple timing of the execution time may reveal what the output of the classification was.&lt;/p&gt;

&lt;p&gt;While not always trivial to achieve, you should endeavor to create fixed-time programs for enclaves if the timing is likely to reveal superfluous information to one or more parties involved.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;While not delving into actual code, we’ve tried to outline some pointers towards building your first few enclaves. Even the pros can make a mistake with a poorly defined ideal functionality or an insecure implementation. Take your time, give it a shot and be comfortable to make some mistakes initially. Enclave technology is still very new and there is great reward in being an early pioneer in developing and leveraging enclave applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-oblivious%E2%80%8C"&gt;
  &lt;/a&gt;
  Why Oblivious?‌
&lt;/h2&gt;

&lt;p&gt;At Oblivious, we’ve built the first full-service enclave management system for multiparty applications. It’s called Ignite and it allows data scientists and machine learning practitioners to take advantage of prebuilt enclaves for data exploration, analysis, training, and inference. If you are interested in the technology, reach out to us to get started today!&lt;/p&gt;

</description>
      <category>security</category>
      <category>datascience</category>
      <category>privacy</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Top Prime reasons why to adapt SMS Drip Campaign Plugin for Business</title>
      <author>Vijay Kumar</author>
      <pubDate>Mon, 09 Aug 2021 09:00:14 +0000</pubDate>
      <link>https://dev.to/outrightcrmstore/top-prime-reasons-why-to-adapt-sms-drip-campaign-plugin-for-business-1266</link>
      <guid>https://dev.to/outrightcrmstore/top-prime-reasons-why-to-adapt-sms-drip-campaign-plugin-for-business-1266</guid>
      <description>&lt;p&gt;Research says 9 out of 10 people like to get connected with every diverse type of industry via an SMS communication channel. SMS will always be the leading channel every year. This is why we developed a product of SuiteCRM to help you all and make your SMS communication channel better. &lt;/p&gt;

&lt;p&gt;Introducing SuiteCRM SMS Drip Campaign which allows you to send SMS to plenty of your leads/prospects at a specific period of time. It means you can send at the same time or set the right time where this plugin will send your valuable SMS at the desired time period for handling your business. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;For example:&lt;/b&gt; Our business team worked and launched some great SuiteCRM Plugins to enhance your Sugar software functionalities. We are looking to flash our secure plugins in the market. We can choose SuiteCRM Drip Campaign for saving our precious time by setting the time interval and the message will be sent from SuiteCRM at the time of your preference. Great functionality for handling your communication and will reduce tons of burden. &lt;br&gt;
More great reasons for adopting this vigorous extension of SuiteCRM&lt;br&gt;
Well, the plugin functionality is not just sending SMS at predefined intervals. It has more such exceptional functions for helping you all. Have a look-&lt;br&gt;
Businesses can use this plugin and can run it directly from their CRM software. &lt;br&gt;
It is not just embedded for sending SMS to one person at a single time. Use it to flash your SMS to numerous customers at a single time. &lt;br&gt;
A user can use their SMS templates in their drip campaign. One of the greatest features of this rich plugin. &lt;br&gt;
We are allowing you to set multiple phone numbers and then choose from which number you want to send your SMS to fetch the audience quickly. &lt;br&gt;
Getting a clear status of your activity is also required. We tried and tested this addon and you can easily check the SMS status that you shared. &lt;br&gt;
Is this extension affordable?&lt;br&gt;
If looking to fill your bucket with great addons like &lt;a href="https://store.outrightcrm.com/product/suitecrm-sms-drip-campaign/"&gt;SuiteCRM SMS Drip Campaign&lt;/a&gt; then you need to pay $249.00. Also, with the purchasing of the product, get the “FREE PRODUCT TOUR” for understanding the Configuration and Installation of it. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;About the Email Drip Campaign for SuiteCRM&lt;/b&gt; &lt;/p&gt;

&lt;p&gt;Boost up your email sending practice with a great platform for your organization. No need to wait for long to get the right time of sending the right email to the right customer. We are introducing to you the “Email Drip Campaign” which is a great choice for businesses of all sizes. A person can prepare an email with the accurate information like the way he/she wanted and later on set the interval so that email will be sent automatically to that lead/prospect. Simple and outstanding! &lt;/p&gt;

&lt;p&gt;&lt;b&gt;What is an Email Drip Campaign?&lt;/b&gt; &lt;/p&gt;

&lt;p&gt;Earlier, this question was bouncing around your head. Let us clear you that it is a pre-written email that will be sent with a fixed interval to save your precious time. A better or you can say one of the holistic methods to nurture relationships with everyone who is involved with your business. &lt;/p&gt;

&lt;p&gt;The real statistic about the Email Drip Campaign is: 80% is the open rate of this email marketing platform and this platform minus the cost at least 33% for all. One more thing to uncover and that is “How many types of drip campaigns are there to help you”. There are 6 main to know-&lt;/p&gt;


&lt;ul&gt;

&lt;li&gt;Competitive Drips&lt;/li&gt;

&lt;li&gt;Training Drips&lt;/li&gt;

&lt;li&gt;Educational Drips&lt;/li&gt;

&lt;li&gt;Promotional Drips&lt;/li&gt;

&lt;li&gt;Top-Of-Mind Drips&lt;/li&gt;

&lt;li&gt;Re-engagement Drips&lt;/li&gt;



&lt;p&gt;Superfine benefits of Email Drip Campaign to manage your business&lt;br&gt;
After getting aware of “What is an email drip campaign” and the types of it, let’s find out how it can help us more in our day-to-day activities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--73WpzHPg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/jerrick/image/upload/f_jpg%2Cq_auto%2Cw_720/610cc6fae87e7a001db58350.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--73WpzHPg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/jerrick/image/upload/f_jpg%2Cq_auto%2Cw_720/610cc6fae87e7a001db58350.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You set the interval that doesn’t mean it shares false information to tarnish your business brand. The key role of this platform is to present the right information to the correct lead. It already focused on user interaction, stage of the sales cycle, etc. &lt;/p&gt;

&lt;p&gt;A business will get maximum benefit like sending email on time, getting sales at the right time, and more importantly, everything will be done with less effort. Sending email with a set interval means customers feel like you want to get engaged with them and this is the plus point for your business. &lt;/p&gt;

&lt;p&gt;With the assistance of a drip campaign for your business, a user can send segmented email to their potential leads or to a new customer who purchased something from you. It is to remind them that you still have the opportunity to explore more and get the best product to cater to your needs. &lt;/p&gt;


&lt;/ul&gt;

</description>
      <category>smsdrip</category>
      <category>dripcampaign</category>
      <category>serverless</category>
      <category>software</category>
    </item>
  </channel>
</rss>
