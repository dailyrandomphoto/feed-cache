<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Working with functions</title>
      <author>Theo Selin</author>
      <pubDate>Fri, 08 Oct 2021 11:08:16 +0000</pubDate>
      <link>https://dev.to/theo_selin/working-with-functions-2h5k</link>
      <guid>https://dev.to/theo_selin/working-with-functions-2h5k</guid>
      <description>&lt;p&gt;As I'm going into more intermediate coding with my class, we've talked a bit about best practices and how to "think" or "interpret" the different tools provided with coding.&lt;/p&gt;

&lt;p&gt;Something that helped me a lot with understanding how to properly use functions is when our teacher &lt;a class="mentioned-user" href="https://dev.to/hassanmian"&gt;@hassanmian&lt;/a&gt;
 told us to see them as different persons.&lt;/p&gt;

&lt;p&gt;This got me thinking; so I found a good analogy for it in a relay race. The work that needs to be done has to be devided between the different runners evenly. It'd simply be unfair if one person had to to the whole race and the rest still gets cred for it.&lt;/p&gt;

&lt;p&gt;So if it's a lot that needs to be done, the first function needs to hand the baton to the next function and so on.&lt;/p&gt;

&lt;p&gt;I've got a feeling that my future DEV posts are going to involve more analogies, but it helps me anchor what I learn to something I understand and who knows; it might help somebody else out there.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Deep Freeze tutorial for Beginners by a Beginner</title>
      <author>newbiehritick</author>
      <pubDate>Fri, 08 Oct 2021 11:03:08 +0000</pubDate>
      <link>https://dev.to/newbiehritick/deep-freeze-tutorial-for-beginners-by-a-beginner-1glf</link>
      <guid>https://dev.to/newbiehritick/deep-freeze-tutorial-for-beginners-by-a-beginner-1glf</guid>
      <description>&lt;h1&gt;
  &lt;a href="#deep-freeze-tutorial-for-beginners-by-a-beginner"&gt;
  &lt;/a&gt;
  Deep Freeze tutorial for Beginners by a Beginner
&lt;/h1&gt;

&lt;p&gt;I got into web development just a few months back and a few days ago I came across a interview question asking to write code to deep freeze an object.&lt;/p&gt;

&lt;p&gt;But what is freezing an object ???&lt;/p&gt;

&lt;p&gt;Freezing an object means preventing new properties from being added to it, existing properties from being removed, prevents changing the enumerability, configurability, or writability of existing properties. Basically freezing an object means we &lt;strong&gt;cannot&lt;/strong&gt; add ,delete or change existing properties which otherwise would have been possible in javascript as it is a &lt;strong&gt;dynamic&lt;/strong&gt; language.&lt;/p&gt;

&lt;p&gt;To freeze objects in javascript we use Object.freeze() method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const obj = {
  name: "Hritick",
};

console.log(obj.name); //* Prints -&amp;gt; Hritick

obj.name = "Hritick Jaiswal";
console.log(obj.name);//* Prints -&amp;gt; Hritick Jaiswal
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But now if we use Object.freeze&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Object.freeze(obj); //* Freezes the object
console.log(Object.isFrozen(obj)); //* Checks if an object is frozen or not

obj.name = "Hritick"; //* Changing values is ignored
console.log(obj);//* Prints -&amp;gt; { name: 'Hritick Jaiswal' }

obj.surname = "Jaiswal"; //* Adding values is ignored
console.log(obj);//* Prints -&amp;gt; { name: 'Hritick Jaiswal' }

delete obj.name; //* Deleting values is ignored
console.log(obj);//* Prints -&amp;gt; { name: 'Hritick Jaiswal' }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok great but what the hell is deep freeze and if we have &lt;strong&gt;Object.freeze&lt;/strong&gt; and why do we need it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const obj = {
  name: "Hritick",
  address: {
    is: "Kolkata",
  },
};

console.log(obj.address.is);//* Prints -&amp;gt; Kolkata

Object.freeze(obj)

obj.address.is = "Hyderabad"; //! This is allowed
console.log(obj.address.is);//* Prints -&amp;gt; Hyderabad
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So why did Object.freeze did not work ???&lt;/p&gt;

&lt;p&gt;Well Object.freeze &lt;strong&gt;did work&lt;/strong&gt; &lt;br&gt;
It did "freeze" the properties of the object "obj" as the property "address" stores the memory location of the object { is:"Kolkata" } which &lt;strong&gt;cannot&lt;/strong&gt; be changed but Object.freeze works on the immediate layer only.&lt;/p&gt;

&lt;p&gt;Deep freezing is preventing from such cases. So what should we do ....&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function deepFreeze(object) {
  if (typeof object !== "object") return;

  for (const value of Object.values(object)) {
    deepFreeze(value);
  }

  Object.freeze(object);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code uses &lt;strong&gt;recursion&lt;/strong&gt; to basically freeze every object no matter at what level it is.&lt;/p&gt;

&lt;p&gt;And that's it , this is my first post here so if I made any mistakes or anyone has any suggestions &lt;strong&gt;please tell me&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>The only cheatsheet you will ever need</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Fri, 08 Oct 2021 10:32:27 +0000</pubDate>
      <link>https://dev.to/visualway/the-only-cheatsheet-you-will-ever-need-20a</link>
      <guid>https://dev.to/visualway/the-only-cheatsheet-you-will-ever-need-20a</guid>
      <description>&lt;p&gt;Ok, so what is a cheatsheet?&lt;br&gt;
It is a compilation of important syntax, neat tricks, data types, commonly used library functions.&lt;/p&gt;

&lt;p&gt;So My series &lt;a href="https://dev.to/abhirajb/series/14396"&gt;The Ultimate Cheatsheets&lt;/a&gt; was a pretty big hit on this platform building up to 10k+ views in total. &lt;/p&gt;

&lt;p&gt;I guess it really did help people and would like to thank everyone for using it.&lt;/p&gt;

&lt;p&gt;Today I am launching the official product for The Ultimate Cheatsheets. &lt;br&gt;
(&lt;em&gt;ps: i could not think of another name&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;Tech Stack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Eleventy&lt;/li&gt;
&lt;li&gt;Markdown&lt;/li&gt;
&lt;li&gt;HTML, CSS&lt;/li&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out the website &lt;a href="https://ultimatecheatsheets.netlify.app/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will add more cheatsheets in future.&lt;br&gt;
You can also download the pdfs.&lt;/p&gt;

&lt;p&gt;Upvote us on ProductHunt &lt;br&gt;
&lt;a href="https://www.producthunt.com/posts/the-ultimate-cheatsheets?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-the-ultimate-cheatsheets"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S-T8Re6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.producthunt.com/widgets/embed-image/v1/featured.svg%3Fpost_id%3D315218%26theme%3Dlight" alt="The Ultimate Cheatsheets - A collection of beginner-friendly programming cheatsheets | Product Hunt"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Support us!&lt;br&gt;
&lt;a href="https://buymeacoffee.com/rainboestrykr"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yDh1mRjd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Buy_Me_A_Coffee-FFDD00%3Fstyle%3Dfor-the-badge%26logo%3Dbuy-me-a-coffee%26logoColor%3Dblack" alt="bmc"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>ML Best Practices for Public Sector Organizations | AWS White Paper Summary</title>
      <author>Salah Elhossiny</author>
      <pubDate>Fri, 08 Oct 2021 10:13:59 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/ml-best-practices-for-public-sector-organizations-aws-white-paper-summary-4cni</link>
      <guid>https://dev.to/awsmenacommunity/ml-best-practices-for-public-sector-organizations-aws-white-paper-summary-4cni</guid>
      <description>&lt;ul&gt;
&lt;li&gt;This whitepaper outlines some of the challenges for public sector agencies in adoption and implementation of ML. &lt;/li&gt;
&lt;li&gt;And provides best practices to address these challenges. &lt;/li&gt;
&lt;li&gt;The target audience for this whitepaper includes executive leaders and agency IT Directors.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#challenges-for-public-sector"&gt;
  &lt;/a&gt;
  Challenges for public sector
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Data Ingestion and Preparation.&lt;/li&gt;
&lt;li&gt;Model Training and Tuning. &lt;/li&gt;
&lt;li&gt;ML Operations (MLOps). &lt;/li&gt;
&lt;li&gt;&lt;p&gt;Governance. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Security &amp;amp; Compliance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cost Optimization.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bias and Explainability.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#best-practices"&gt;
  &lt;/a&gt;
  Best Practices
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#data-ingestion-and-preparation"&gt;
  &lt;/a&gt;
  Data Ingestion and Preparation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The AWS Cloud enables public sector customers to overcome the challenge of connecting to and extracting data from both streaming and batch data, as described in the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For streaming data, Amazon Kinesis and AWS Managed Streaming for Apache Kafka (Amazon MSK) enable collection, processing, and analysis of data in real time. &lt;/li&gt;
&lt;li&gt;Amazon Kinesis provides a suite of capabilities to collect, process, and analyze real-time, streaming data. &lt;/li&gt;
&lt;li&gt;Amazon Kinesis Data Streams (KDS) is a service that enables ingestion of streaming data. &lt;/li&gt;
&lt;li&gt;Producers of data push data directly into a stream, which consists of a group of stored data units called records. &lt;/li&gt;
&lt;li&gt;The stored data is available for further processing or storage as part of the data pipeline. &lt;/li&gt;
&lt;li&gt;Ingestion of streaming videos can be done using Amazon Kinesis Video Streams.&lt;/li&gt;
&lt;li&gt;There are a number of mechanisms available for data ingestion in batch format. &lt;/li&gt;
&lt;li&gt;With AWS Database Migration Services (AWS DMS), you can replicate and ingest existing databases while the source databases remain fully operational. &lt;/li&gt;
&lt;li&gt;The service supports multiple database sources and targets, including writing data directly to Amazon S3.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#data-preparation"&gt;
  &lt;/a&gt;
  Data Preparation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Once the data is extracted, it needs to be transformed and loaded into a data store for feeding into an ML model. &lt;/li&gt;
&lt;li&gt;It needs to be cataloged and organized so that it is available for consumption, and needs to enable data lineage for compliance with federal government guidelines. &lt;/li&gt;
&lt;li&gt;AWS Cloud provides three services that provide these mechanisms.

&lt;ul&gt;
&lt;li&gt;AWS GLUE&lt;/li&gt;
&lt;li&gt;Amazon Sagemaker data wrangler&lt;/li&gt;
&lt;li&gt;Amazon EMR&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#model-training-and-tuning"&gt;
  &lt;/a&gt;
  Model Training and Tuning
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It involves the selection of a ML model that is appropriate for the use case, followed by training and tuning of the ML model.&lt;/li&gt;
&lt;li&gt;One of the major challenges facing the public sector is the ability for team members to apply a consistent pattern or framework for working with multitudes of options that exist in this space.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The AWS Cloud enables public sector customers to overcome challenges in model selection, training, and tuning as described in the following.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can use AWS Sagemaker built-in algorithms or your own script (script mode). &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GWgc7y8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/135825866-e1b9c2a0-5852-47a7-ac9f-85f2f7e79077.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GWgc7y8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/135825866-e1b9c2a0-5852-47a7-ac9f-85f2f7e79077.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GS9EI9K8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/135813159-2c3dcf88-238f-4f04-b922-290217687b2b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GS9EI9K8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/135813159-2c3dcf88-238f-4f04-b922-290217687b2b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Or you can use your own container (BYOC). &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t2Z2RVRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/135813365-1886b6cf-c529-41e8-a43e-976fdf2883f7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t2Z2RVRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/135813365-1886b6cf-c529-41e8-a43e-976fdf2883f7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mlops"&gt;
  &lt;/a&gt;
  MLOps
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;MLOps is the discipline of integrating ML workloads into release management, Continuous Integration / Continuous Delivery (CI/CD), and operations.&lt;/li&gt;
&lt;li&gt;One of the major hurdles facing government organizations is the ability to create a repeatable process for deployment that is consistent with their organizational best practices. &lt;/li&gt;
&lt;li&gt;Using ML models in software development makes it difficult to achieve versioning, quality control, reliability, reproducibility, explainability, and audibility in that process.&lt;/li&gt;
&lt;li&gt;AWS Cloud provides a number of different options that solve these challenges, either by building an MLOps pipeline from scratch or by using managed services.&lt;/li&gt;
&lt;li&gt;You can use Amazon Sagemaker pipelines. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aws-codepipeline-and-aws-lambda"&gt;
  &lt;/a&gt;
  AWS CodePipeline and AWS Lambda
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;For AWS programmers, teams that are already working with CodePipeline for deployment of other workloads, an option exists to utilize the same workflows for ML.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6idA8r99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/135985926-5dfdbfae-17b5-4d9d-bcc6-5f70a8cffe8f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6idA8r99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/135985926-5dfdbfae-17b5-4d9d-bcc6-5f70a8cffe8f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-stepfunctions-data-science-software-development-kit-sdk"&gt;
  &lt;/a&gt;
  AWS StepFunctions Data Science Software Development Kit (SDK)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It is an open-source Python library that allows data scientists to create workflows that process and publish ML models using SageMaker and Step Functions. &lt;/li&gt;
&lt;li&gt;This can be used by teams that are already comfortable using Python and AWS Step Functions.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The SDK provides the ability to copy workflows, experiment with new options, and then put the refined workflow in production. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The SDK can also be used to create and visualize end-to-end data science workflows that perform tasks such as data pre-processing on AWS Glue and model training, hyperparameter tuning, and endpoint creation on Amazon SageMaker.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Workflows can be reused in production by exporting AWS CloudFormation (infrastructure as code) templates.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aws-mlops-framework"&gt;
  &lt;/a&gt;
  AWS MLOps Framework
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--36g7B3aI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/135986339-23ac5cf0-a735-4dfa-846a-aa82aafd0c2d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--36g7B3aI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/135986339-23ac5cf0-a735-4dfa-846a-aa82aafd0c2d.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The solution provides a ready-made template to upload trained models (also referred to as a bring your own model), configure the orchestration of the pipeline, and monitor the pipeline's operations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can deploy custom ML models on EC2, or EKS, etc. &lt;/li&gt;
&lt;li&gt;Also, deploy at the Edge: AWS IoT Greengrass. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#management-and-governance"&gt;
  &lt;/a&gt;
  Management and Governance
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;AWS Cloud provides several services that enable governance and control. &lt;/li&gt;
&lt;li&gt;These include: 

&lt;ul&gt;
&lt;li&gt;AWS Control Tower.&lt;/li&gt;
&lt;li&gt;License Manager. &lt;/li&gt;
&lt;li&gt;Resource Tagging. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#aws-service-catalog"&gt;
  &lt;/a&gt;
  AWS Service Catalog
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Deploying and setting up ML workspaces for a group or different groups of people is always a big challenge for public sector organizations.&lt;/li&gt;
&lt;li&gt;AWS Service Catalog provides a solution for this problem. It enables the central management of commonly deployed IT services, and achieves consistent governance and meets compliance requirements. &lt;/li&gt;
&lt;li&gt;End users can quickly deploy only the approved IT services they need, following the constraints set by the organization.&lt;/li&gt;
&lt;li&gt;For example, AWS Service Catalog can be used with Amazon SageMaker notebooks to provide end users a template to quickly deploy and set up their ML Workspace.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3yPqfPmv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/136161153-083ad035-909a-4353-bcd3-297a75257a6f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3yPqfPmv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/136161153-083ad035-909a-4353-bcd3-297a75257a6f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-and-compliance"&gt;
  &lt;/a&gt;
  Security and compliance
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Public sector organizations have a number of security challenges and concerns with hosting ML workloads in the cloud as these applications can contain sensitive customer data. &lt;/li&gt;
&lt;li&gt;This includes personal information or proprietary information that must be protected over the entire data lifecycle.&lt;/li&gt;
&lt;li&gt;The specific concerns also include protecting the network and underlying resources such as compute, storage and databases; user authentication and authorization; logging, monitoring and auditing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2CJgX-bP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/136161633-79480422-ba1d-4fe5-9fa6-1a767bff573f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2CJgX-bP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/136161633-79480422-ba1d-4fe5-9fa6-1a767bff573f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#compute-and-network-isolation"&gt;
  &lt;/a&gt;
  Compute and network isolation
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;One of the major requirements with many public sector ML projects is the ability to keep the environments, data and workloads secure and isolated from internet access. &lt;/li&gt;
&lt;li&gt;These can be achieved using the following methods: 

&lt;ul&gt;
&lt;li&gt;Provision ML components in an isolated VPC with no internet access, see more info &lt;a href="https://aws.amazon.com/blogs/machine-learning/building-secure-machine-learning-environments-with-amazon-sagemaker/"&gt; here &lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;Use VPC end-point and end-point policies to further limit access, see more info &lt;a href="https://aws.amazon.com/blogs/machine-learning/securing-amazon-sagemaker-studio-connectivity-using-a-private-vpc/"&gt; here &lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UUuKvf8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/136162671-107c9a7a-1851-4061-9f5a-592c222b4222.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UUuKvf8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/136162671-107c9a7a-1851-4061-9f5a-592c222b4222.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-protection"&gt;
  &lt;/a&gt;
  Data Protection
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Protect data at rest with KMS. &lt;/li&gt;
&lt;li&gt;Protect data in transit with TLS/SSL. &lt;/li&gt;
&lt;li&gt;Secure shared notebook instances. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#authentication-and-authorization"&gt;
  &lt;/a&gt;
  Authentication and Authorization
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;AWS IAM enables control of access to AWS resources. IAM administrators control who can be authenticated (signed in) and authorized (have permissions) to use SageMaker resources. &lt;/li&gt;
&lt;li&gt;IAM can help create preventive controls for many aspects of your ML environment, including access to Amazon SageMaker resources, data in Amazon S3, and API endpoints.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#artifact-and-model-management"&gt;
  &lt;/a&gt;
  Artifact and model management
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The recommended best practice is to use version control to track code or other model artifacts. &lt;/li&gt;
&lt;li&gt;If model artifacts are modified or deleted, either accidentally or deliberately, version control allows you to roll back to a previous stable release. &lt;/li&gt;
&lt;li&gt;This can be used in cases where an unauthorized user gains access to the environment and makes changes to the model. &lt;/li&gt;
&lt;li&gt;If model artifacts are stored in Amazon S3, versioning should be enabled.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#security-compliance"&gt;
  &lt;/a&gt;
  Security compliance
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Third-party auditors assess the security and compliance of Amazon SageMaker as part of multiple AWS compliance programs including FedRAMP, HIPAA, and others.&lt;/li&gt;
&lt;li&gt;AWS provides the following resources to help with compliance:

&lt;ul&gt;
&lt;li&gt;Security and Compliance Quick Start Guides – These deployment guides discuss architectural considerations and provide steps for deploying security- and compliance-focused baseline environments on AWS.&lt;/li&gt;
&lt;li&gt;Architecting for HIPAA Security and Compliance – This  describes how organizations can use AWS to help create HIPAA-compliant applications.&lt;/li&gt;
&lt;li&gt;AWS Compliance Resources – This collection of workbooks and guides might apply to the Organization’s industry and location.&lt;/li&gt;
&lt;li&gt;AWS Config – This AWS service assesses how well resource configurations comply with internal practices, industry guidelines, and regulations. &lt;/li&gt;
&lt;li&gt;As an example, AWS Config can be used to create compliance rules that can scan AWS Key Management Service (AWS KMS) key policies to determine whether these policies align with the principle of granting least privilege to users. &lt;/li&gt;
&lt;li&gt;Please refer to the How to use AWS Config to determine compliance of AWS KMS key policies to your specifications, which outlines this process.&lt;/li&gt;
&lt;li&gt;AWS Security Hub – This AWS service provides a comprehensive view of the security state within AWS that helps check compliance with security industry standards and best practices.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cost-optimization"&gt;
  &lt;/a&gt;
  Cost Optimization
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Cost management is a primary concern for public sector organizations projects to ensure the best use of public funds while enabling agency missions. &lt;/li&gt;
&lt;li&gt;AWS provides several mechanisms to manage costs in each phase of the ML lifecycle (Prepare, Build, Train &amp;amp; Tune, Deploy, and Manage) as described in this section.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#prepare"&gt;
  &lt;/a&gt;
  Prepare
&lt;/h4&gt;

&lt;p&gt;This step of the ML lifecycle includes storing the data, labeling the data, and processing the data. Cost control in this phase can be accomplished using the following techniques:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#data-storage"&gt;
  &lt;/a&gt;
  Data Storage:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;ML requires extensive data exploration and transformation. &lt;/li&gt;
&lt;li&gt;Multiple redundant copies of data are quickly generated, which can lead to exponential growth in storage costs. Therefore, it is essential to establish a cost control strategy at the storage level. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;Processes can be established to regularly analyze source data and either remove duplicative data or archive data to lower cost storage based on compliance policies. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For example, for data stored in S3, S3 storage class analysis can be enabled on any group of objects (based on prefix or object tagging) to automatically analyze storage access patterns. This enables identification and transition of rarely-accessed data to S3 glacier, lowering costs. S3 intelligent storage can also be used to lower costs of data that has unpredictable usage patterns. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It works by monitoring and moving data between a data tier that is optimized for frequent access and another lower-cost tier that is optimized for infrequent access.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#data-labeling"&gt;
  &lt;/a&gt;
  Data Labeling.
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Data labeling is a key process of identifying raw data (such as images, text files, and videos) and adding one or more meaningful and informative labels to provide context so that an ML model can learn from it. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This process can be very time consuming and can quickly increase costs of a project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon SageMaker Ground Truth can be used to reduce these costs. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ground Truth’s automated data labeling utilizes the Active Learning ML technique to reduce the number of labels required for models, thereby lowering these costs. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ground Truth also provides additional mechanisms such as crowdsourcing with Amazon Mechanical Turk or another vendor company, that can be chosen to lower the costs of labeling.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#data-wrangling"&gt;
  &lt;/a&gt;
  Data Wrangling.
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In ML, a lot of time is spent in identifying, converting, transforming, and validating raw source data into features that can be used to train models and&lt;br&gt;
make predictions. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon SageMaker Data Wrangler can be used to reduce this time spent, lowering the costs of the project. With Data Wrangler, data can be imported from various data sources, and transformed without requiring coding. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once data is prepared, fully automated ML workflows can be built with Amazon SageMaker Pipelines and saved for reuse in the Amazon SageMaker Feature Store, eliminating the costs incurred in preparing this data again.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#build"&gt;
  &lt;/a&gt;
  Build
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This step of the ML lifecycle involves building ML models. Cost control in this phase can be accomplished using the following techniques:

&lt;ul&gt;
&lt;li&gt;Notebook Utilization.&lt;/li&gt;
&lt;li&gt;Test Code locally. &lt;/li&gt;
&lt;li&gt;Use Pipe mode (where applicable) to reduce training time. &lt;/li&gt;
&lt;li&gt;Find the right balance: Performance vs. accuracy. &lt;/li&gt;
&lt;li&gt;AWS Marketplace. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#train-and-tune"&gt;
  &lt;/a&gt;
  Train and Tune
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This step of the ML lifecycle involves providing the algorithm selected in the build phase with the training data to learn from, and setting the model parameters to optimize the training process. &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cost control in this phase can be accomplished using the following techniques:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use Spot Instances. &lt;/li&gt;
&lt;li&gt;Hyperparameter optimization (HPO). &lt;/li&gt;
&lt;li&gt;Distributed Training. &lt;/li&gt;
&lt;li&gt;Monitor the performance of your training jobs to identify waste. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#deploy-and-manage"&gt;
  &lt;/a&gt;
  Deploy and Manage
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This step of the ML lifecycle involves deployment of the model to get predictions, and managing the model to ensure it meets functional and non-functional requirements of the application. &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cost control in this phase can be accomplished using the following techniques:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Endpoint deployment. &lt;/li&gt;
&lt;li&gt;Multi-model endpoints. &lt;/li&gt;
&lt;li&gt;Auto Scaling.&lt;/li&gt;
&lt;li&gt;Amazon Elastic Inference for deep learning.&lt;/li&gt;
&lt;li&gt;Analyzing costs with Cost Explorer.&lt;/li&gt;
&lt;li&gt;AWS Budgets.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#bias-and-explainability"&gt;
  &lt;/a&gt;
  Bias and Explainability
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Demonstrating explainability is a significant challenge because complex ML models are hard to understand and even harder to interpret and debug. &lt;/li&gt;
&lt;li&gt;There is an inherent tension between ML performance (predictive accuracy) and explainability; &lt;/li&gt;
&lt;li&gt;Often the highest performing methods are the least explainable, and the most explainable are less accurate. &lt;/li&gt;
&lt;li&gt;Hence, public sector organizations need to invest significant time with appropriate tools, techniques, &lt;/li&gt;
&lt;li&gt;And mechanisms to demonstrate explainability and lack of bias in their ML models, which could be a deterrent to adoption.&lt;/li&gt;
&lt;li&gt;AWS Cloud provides the following capabilities and services to assist public sector organizations in resolving these challenges.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#amazon-sagemaker-debugger"&gt;
  &lt;/a&gt;
  Amazon SageMaker Debugger
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Amazon SageMaker Debugger provides visibility into the model training process for real-time and offline analysis. In the existing training code for TensorFlow, Keras, Apache MXNet, PyTorch, and XGBoost, &lt;/li&gt;
&lt;li&gt;The new SageMaker Debugger SDK can be used to save the internal model state at periodic intervals in S3. &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This state is composed of a number of components: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The parameters being learned by the model (for example, weights and biases for neural networks), the changes applied to these parameters by the optimizer (gradients), optimization parameters, scalar values such as accuracies and losses, and outputs of each layer of a neural network.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SageMaker Debugger provides three built-in tensor collections called feature importance, average_shap, and full_shap, to visualize and analyze captured tensors specifically for model explanation. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Feature importance is a technique that explains the features that make up the training data using a score (importance). &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It indicates how useful or valuable the feature is, relative to other features.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SHAP (SHapley Additive exPlanations) is an open-source technique based on game theory. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It explains an ML prediction by assuming that each feature value of training data instance is a player in a game in which the prediction is the payout. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Shapley values indicate how to distribute the payout fairly among the features.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Public sector organizations have complex mission objectives and are increasingly adopting ML services to help with their initiatives. &lt;br&gt;
ML can transform the way government agencies operate, and enable them to provide improved citizen services. &lt;br&gt;
However, several barriers remain for these organizations to implement ML. &lt;br&gt;
This whitepaper outlined some of the challenges and provided best practices that can help address these challenges using AWS Cloud.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://d1.awsstatic.com/whitepapers/machine-learning-best-practices-for-public-sector-organizations.pdf?did=wp_card&amp;amp;trk=wp_card"&gt; Original paper &lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>machinelearning</category>
      <category>management</category>
    </item>
    <item>
      <title>Hacktoberfest Beginners and Advanced Repos to Contribute to</title>
      <author>ZigRazor</author>
      <pubDate>Fri, 08 Oct 2021 10:11:21 +0000</pubDate>
      <link>https://dev.to/zigrazor/hacktoberfest-beginners-and-advanced-repos-to-contribute-to-p1</link>
      <guid>https://dev.to/zigrazor/hacktoberfest-beginners-and-advanced-repos-to-contribute-to-p1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vFDUvZmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nuvxbwdhxhbfwsazd7ka.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vFDUvZmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nuvxbwdhxhbfwsazd7ka.png" alt="Hacktoberfest"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👋🏻 Hi everyone, and Happy &lt;em&gt;Hacktoberfest&lt;/em&gt;! &lt;/p&gt;

&lt;p&gt;This is my repos ready for the &lt;em&gt;Hacktoberfest&lt;/em&gt;:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Python&lt;/strong&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#pystatemachine"&gt;
  &lt;/a&gt;
  &lt;strong&gt;PyStateMachine&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;*** Beginners ***&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A Python implementation of simply configurable State Machines.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ZigRazor"&gt;
        ZigRazor
      &lt;/a&gt; / &lt;a href="https://github.com/ZigRazor/PyStateMachine"&gt;
        PyStateMachine
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Python State Machine 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
PyStateMachine&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.python.org" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ka8K9yX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg" alt="python" width="40" height="40"&gt;&lt;/a&gt;  Python State Machine&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.codefactor.io/repository/github/zigrazor/pystatemachine" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c18f6428bc5b47e3f0c90e5fb3408f7af11683972b0f65c895db8a2ef41a80ab/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f7a696772617a6f722f707973746174656d616368696e652f6261646765" alt="CodeFactor"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/gh/ZigRazor/PyStateMachine/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=ZigRazor/PyStateMachine&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aae204bcacee65214897ed9c5e95fa14b752f3823be289937d1193701fb633d9/68747470733a2f2f6170702e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3137636130376636376261343430383962663238616633376261333638653162" alt="Codacy Badge"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://deepsource.io/gh/ZigRazor/PyStateMachine/?ref=repository-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6dff22b71afdc6e33ee9b6b8a286a2d32bc91ffec9cec6e53031a06172112530/68747470733a2f2f64656570736f757263652e696f2f67682f5a696752617a6f722f507953746174654d616368696e652e7376672f3f6c6162656c3d6163746976652b6973737565732673686f775f7472656e643d74727565" alt="DeepSource"&gt;&lt;/a&gt;
&lt;a href="https://deepsource.io/gh/ZigRazor/PyStateMachine/?ref=repository-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d9055d4e631078870a9a68cef0fe504192ce72d465e2208c43093f743066bac3/68747470733a2f2f64656570736f757263652e696f2f67682f5a696752617a6f722f507953746174654d616368696e652e7376672f3f6c6162656c3d7265736f6c7665642b6973737565732673686f775f7472656e643d74727565" alt="DeepSource"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;PyStateMachine&lt;/strong&gt; is a Framework that support state machines in &lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Python3&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
How to Run&lt;/h3&gt;
&lt;p&gt;Work in Progess&lt;/p&gt;
&lt;h2&gt;
Example&lt;/h2&gt;
&lt;p&gt;Work in Progess&lt;/p&gt;
&lt;h2&gt;
Test Suite&lt;/h2&gt;
&lt;p&gt;Work in Progress&lt;/p&gt;
&lt;h2&gt;
How to contribute &lt;a href="https://GitHub.com/ZigRazor/PyStateMachine/graphs/contributors/"&gt;&lt;img src="https://camo.githubusercontent.com/581fe7a30c9fddc871a0aca71a3096401c38d12ed169cd14a74efaf5010bebe2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f5a696752617a6f722f507953746174654d616368696e652e737667" alt="GitHub contributors"&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="https://github.com/ZigRazor/PyStateMachine/blob/main/CONTRIBUTING.md"&gt;CONTRIBUTING GUIDE&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Hacktoberfest&lt;/h2&gt;
&lt;p&gt;We are pleased to inform you that this repository is participating in the &lt;strong&gt;#Hacktoberfest&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;Happy Coding!&lt;/p&gt;
&lt;h2&gt;
Contact&lt;/h2&gt;
&lt;p&gt;E-Mail : &lt;a href="https://github.com/ZigRazor/PyStateMachinemailto:zigrazor@gmail.com"&gt;zigrazor@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ZigRazor"&gt;GitHub Profile&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/fafcc15adae98d433dd7f7e4810d1985dd756e19c0995b129eb819c700b8bccc/68747470733a2f2f677076632e6172747572696f2e6465762f5a696752617a6f72"&gt;&lt;img src="https://camo.githubusercontent.com/fafcc15adae98d433dd7f7e4810d1985dd756e19c0995b129eb819c700b8bccc/68747470733a2f2f677076632e6172747572696f2e6465762f5a696752617a6f72" alt="Profile views"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/82bea85177f2d542509b6e27cfb5681787d2cad5853c8f0e7a502a3c0a82ac9b/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d5a696752617a6f722673686f775f69636f6e733d74727565267468656d653d746f6b796f6e69676874"&gt;&lt;img src="https://camo.githubusercontent.com/82bea85177f2d542509b6e27cfb5681787d2cad5853c8f0e7a502a3c0a82ac9b/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d5a696752617a6f722673686f775f69636f6e733d74727565267468656d653d746f6b796f6e69676874" alt="ZigRazor's github stats"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Support&lt;/h2&gt;
&lt;p&gt;To support me just add &lt;em&gt;&lt;strong&gt;Star&lt;/strong&gt;&lt;/em&gt; the project  &lt;a href="https://GitHub.com/ZigRazor/PyStateMachine/stargazers/"&gt;&lt;img src="https://camo.githubusercontent.com/12e7e3d53b015ad56b976644b5cc2bc8bcba021ae2891cf0ef910706a740e3d5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f5a696752617a6f722f507953746174654d616368696e652e7376673f7374796c653d736f6369616c266c6162656c3d53746172266d61784167653d32353932303030" alt="GitHub stars"&gt;&lt;/a&gt; or &lt;em&gt;&lt;strong&gt;follow me&lt;/strong&gt;&lt;/em&gt;  &lt;a href="https://github.com/ZigRazor?tab=followers"&gt;&lt;img src="https://camo.githubusercontent.com/8a8e16662b6c2f65545e7c5bb08b3c2a74c43b3d7f6632de86312c2a53935a78/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f6c6c6f776572732f5a696752617a6f722e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77266d61784167653d32353932303030" alt="GitHub followers"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To get updated &lt;em&gt;&lt;strong&gt;watch&lt;/strong&gt;&lt;/em&gt; the project  &lt;a href="https://GitHub.com/ZigRazor/PyStateMachine/watchers/"&gt;&lt;img src="https://camo.githubusercontent.com/311c72805a48f13ebfb677fc8d7fbbf94b76ee150096a70b14e5b7277ab4de9d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f77617463686572732f5a696752617a6f722f507953746174654d616368696e652e7376673f7374796c653d736f6369616c266c6162656c3d5761746368266d61784167653d32353932303030" alt="GitHub watchers"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Project Info&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/ZigRazor/PyStateMachine"&gt;&lt;img src="https://camo.githubusercontent.com/ad744e2f8ac3f48e6b6496b93f7bd7569a022e218c4a0d18204654328f813189/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f70696e2f3f757365726e616d653d5a696752617a6f72267265706f3d507953746174654d616368696e65" alt="Readme Card"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ZigRazor/PyStateMachine"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#logparser"&gt;
  &lt;/a&gt;
  &lt;strong&gt;LogParser&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;*** Beginners ***&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A Log Parser, that create structured data from log files.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ZigRazor"&gt;
        ZigRazor
      &lt;/a&gt; / &lt;a href="https://github.com/ZigRazor/LogParser"&gt;
        LogParser
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A Log Parser, that create structured data from log files.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
LogParser&lt;/h1&gt;
&lt;p&gt;A Log Parser, that create structured data from log files.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ZigRazor/LogParser"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  &lt;strong&gt;C++&lt;/strong&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#cxxgraph"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CXXGraph&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;*** Advanced ***&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Header-Only C++ library for Graph Representation and Algorithms with a simple interface.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ZigRazor"&gt;
        ZigRazor
      &lt;/a&gt; / &lt;a href="https://github.com/ZigRazor/CXXGraph"&gt;
        CXXGraph
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Header-Only C++ Library for Graph Representation and Algorithms
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/ZigRazor/CXXGraph/blob/master/Icon.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--om3usTQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ZigRazor/CXXGraph/raw/master/Icon.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
CXXGraph&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0d3ae99a9dcced770f5a2e6d2395999c121d9975f3f1816ee3b3902a3c8e6a92/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f632b2b2532302d2532333030353939432e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d63253242253242266f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/0d3ae99a9dcced770f5a2e6d2395999c121d9975f3f1816ee3b3902a3c8e6a92/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f632b2b2532302d2532333030353939432e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d63253242253242266f676f436f6c6f723d7768697465"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6aea43d076c7bf00489f1b347caa33fe5c4d84a8af2983804f8702632f2669ec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622532302d2532333132313031312e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d676974687562266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/6aea43d076c7bf00489f1b347caa33fe5c4d84a8af2983804f8702632f2669ec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622532302d2532333132313031312e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d676974687562266c6f676f436f6c6f723d7768697465"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/ZigRazor/CXXGraph" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e0b9841f69ef29cc485b3d302097010f2d296ed1dde60f3adac4ba71370dcd04/68747470733a2f2f636f6465636f762e696f2f67682f5a696752617a6f722f43585847726170682f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d37373341513248395251" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://www.codefactor.io/repository/github/zigrazor/cxxgraph" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c66e00601b49f804758f834a946e1329891101b719d307d83d5566b5701a982/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f7a696772617a6f722f63787867726170682f6261646765" alt="CodeFactor"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/a5f922a2d34eec75f084349c6c747c69d94eccd0935dc93e295a4a686d1c4564/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f5a696752617a6f722f43585847726170682e737667" alt="GitHub license"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/ZigRazor/CXXGraph/releases/"&gt;&lt;img src="https://camo.githubusercontent.com/e3a3bede7aca95abde3fcdbf4645750e7da6aa728bdbd9cd655771c9a244d670/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f5a696752617a6f722f43585847726170682e737667" alt="GitHub release"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/885c6402353e401234ea76f317d84186d70716c9db53a43b8a6d9daf037c712c/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/885c6402353e401234ea76f317d84186d70716c9db53a43b8a6d9daf037c712c/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963" alt="LGTM Alerts"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6c41a6d75b013b0b28757348218ecf27f68e512a987e82bc9882fd3ab5021943/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/6c41a6d75b013b0b28757348218ecf27f68e512a987e82bc9882fd3ab5021943/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963" alt="LGTM Grade"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57a85d2ce2ebfa08308aa0e27c14e3e668b0075ece44e2d030a4298c089c85e0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657175697265642d472b2b372e332e302d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt; &lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d28ad01b651a380285f9c75dea25963780875fcea989db81cf85ef6a29adc048/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72657175697265642d432b2b31372d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt; &lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e17b5a84de0de988ba21d8a70cd9bec1e3ef9c33bc75be3ec44c1cbff4b73604/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657175697265642d434d616b65332e392d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ae88698a90d8466f4372f695b517d9a65fc5b3f70cb781531c2074876047c846/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4275696c642d5061737365642d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt; &lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/35a3866fb1a06659337b8fe3e8bfb6ff6705c702e1fae78d400d47217b00b766/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f556e6974546573742d5061737365642d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Share on &lt;a href="https://twitter.com/intent/tweet?text=Header-Only%20C++%20Library%20for%20Graph%20Representation%20and%20Algorithms%204&amp;amp;url=https://github.com/ZigRazor/CXXGraph&amp;amp;hashtags=cpp,headeronly,library,opensource,developers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet"&gt;&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#cxxgraph"&gt;CXXGraph&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#algorithm-explanation"&gt;Algorithm Explanation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#dijkstra"&gt;Dijkstra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#dial"&gt;Dial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#bfs"&gt;BFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#dfs"&gt;DFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#cycle-detection"&gt;Cycle Detection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#partition-algorithm-explanation"&gt;Partition Algorithm Explanation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#vertex-cut"&gt;Vertex-Cut&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#greedy-vertex-cut"&gt;Greedy Vertex-Cut&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#classes-explanation"&gt;Classes Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-use"&gt;How to use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#unit-test-execution"&gt;Unit-Test Execution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#google-test-installation"&gt;Google Test Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-compile-test"&gt;How to Compile Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-run-test"&gt;How to Run Test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#benchmark-execution"&gt;Benchmark Execution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#google-benchmark-installation"&gt;Google Benchmark Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-compile-benchmark"&gt;How to Compile Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-run-benchmark"&gt;How to Run Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#packaging"&gt;Packaging&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#tarballs"&gt;Tarballs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#rpm"&gt;RPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#deb"&gt;DEB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#install-and-uninstall"&gt;Install and Uninstall&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-linux-tarballs"&gt;Install Linux Tarballs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-rpm"&gt;Install RPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-deb"&gt;Install DEB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-from-source"&gt;Install From Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#example"&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-contribute"&gt;How to contribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#site"&gt;Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#support"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#references"&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#hacktoberfest-2k21"&gt;Hacktoberfest 2k21&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#we-are-looking-for"&gt;We are Looking for...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;CXXGraph&lt;/strong&gt; is a small library, header only, that manages the Graph and it's algorithms in &lt;strong&gt;C++&lt;/strong&gt;. In other words a "Comprehensive C++ Graph Library".&lt;/p&gt;
&lt;h2&gt;
Algorithm Explanation&lt;/h2&gt;
&lt;h4&gt;
Dijkstra&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm" rel="nofollow"&gt;Graph Dijkstras Shortest Path Algorithm(Dijkstra's Shortest Path)&lt;/a&gt;
&lt;strong&gt;Dijkstra's Algorithm&lt;/strong&gt; is used to find the shortest path from a source node to all other reachable nodes in the graph. The algorithm initially assumes…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ZigRazor/CXXGraph"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#cxxautomata"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CXXAutomata&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;*** Intermediate ***&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A C++ Library to which implements the structures and algorithms for finite automata, pushdown automata, and Turing machines. &lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ZigRazor"&gt;
        ZigRazor
      &lt;/a&gt; / &lt;a href="https://github.com/ZigRazor/CXXAutomata"&gt;
        CXXAutomata
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A C++ library for simulating automata and Turing machines
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
CXXAutomata&lt;/h1&gt;
&lt;p&gt;A C++ library for simulating automata and Turing machines&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ZigRazor/CXXAutomata"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#cxxlog"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CXXLog&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;*** Beginners ***&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A C++ HeaderOnly Logging Utilities &lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ZigRazor"&gt;
        ZigRazor
      &lt;/a&gt; / &lt;a href="https://github.com/ZigRazor/CXXLog"&gt;
        CXXLog
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      HeaderOnly Logging Utilities
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
CXXLog&lt;/h1&gt;
&lt;p&gt;HeaderOnly Logging Utilities&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ZigRazor/CXXLog"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;If you need some instructions on how to contribute or how to approch to the repo or more in general to the Open Source, do not hesitate to open an issue on the repository or write to me at email : &lt;a href="mailto:zigrazor@gmail.com"&gt;zigrazor@gmail.com&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;Happy Coding! 💻&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>beginners</category>
      <category>python</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Serverless Cloud Application Development with AWS Lambda</title>
      <author>john methew</author>
      <pubDate>Fri, 08 Oct 2021 09:39:07 +0000</pubDate>
      <link>https://dev.to/johnmethew18/serverless-cloud-application-development-with-aws-lambda-3o7l</link>
      <guid>https://dev.to/johnmethew18/serverless-cloud-application-development-with-aws-lambda-3o7l</guid>
      <description>&lt;p&gt;Do you know AWS Serverless approach lets you build applications and backend services without the requirement to provision any servers? With the “pay as you use” model using AWS server less platforms an &lt;b&gt;&lt;a href="https://www.devitpl.com/cloud-application-development/"&gt;cloud application development company&lt;/a&gt;&lt;/b&gt; will charge you only to pay for what you use.&lt;/p&gt;

&lt;p&gt;Key advantages of developing modern application on AWS Cloud&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Applications built with server less requires no server management. This, in turn, means no software to install.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Services run by AWS server less platform offers up to 100% uptime with high reliability and availability.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Serverless platforms can be scaled automatically.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Serverless applications provides unlimited user capacity.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;know about AWS Lambda functions for application development in cloud computing&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/getting-started/hands-on/run-serverless-code/"&gt;AWS Lambda&lt;/a&gt; is a cloud library that offers pre-built sample functions for common use cases such as image conversion, file compression, and changing notification.&lt;/p&gt;

&lt;p&gt;know step by step for &lt;/p&gt;

&lt;p&gt;How it works&lt;br&gt;
Create a Simple Lambda Function in 4 steps:&lt;/p&gt;

&lt;p&gt;Read detailed article in &lt;b&gt;&lt;a href="https://www.blog.devitpl.com/4-step-guide-to-create-serverless-cloud-application/"&gt;4-Step Guide to Create Serverless Cloud Application with AWS Lambda&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
      <category>awslambda</category>
      <category>cloudapplication</category>
      <category>cloud</category>
      <category>applicationdevelopment</category>
    </item>
    <item>
      <title>mixmello, made with ReactJS and open source.</title>
      <author>Alex Gurr</author>
      <pubDate>Fri, 08 Oct 2021 09:36:47 +0000</pubDate>
      <link>https://dev.to/alexgurr/mixmello-made-with-reactjs-and-open-source-40ci</link>
      <guid>https://dev.to/alexgurr/mixmello-made-with-reactjs-and-open-source-40ci</guid>
      <description>&lt;p&gt;Introducing mixmello, a free, open source application to create remixed versions of your favourite Spotify playlists.&lt;/p&gt;

&lt;p&gt;Web: &lt;a href="https://www.mixmello.com"&gt;mixmello.com&lt;/a&gt;&lt;br&gt;
GitHub: &lt;a href="https://github.com/alexgurr/mixmello"&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stack"&gt;
  &lt;/a&gt;
  Stack
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Frontend&lt;/strong&gt;: react@latest -- design &amp;amp; logo by me from scratch&lt;br&gt;
&lt;strong&gt;Backend&lt;/strong&gt;: none&lt;br&gt;
&lt;strong&gt;APIs&lt;/strong&gt;: &lt;a href="https://developer.spotify.com/documentation/web-api/"&gt;Spotify&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Authentication&lt;/strong&gt;: Spotify &lt;a href="https://oauth.net/2/pkce/"&gt;OAuth pkce&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#things-i-learned"&gt;
  &lt;/a&gt;
  Things I Learned
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Making an app that uses the Spotify API is more work than you think!&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Spotify's public API has some questionable decisions, including limits on resources but no search functionality. This means you have to chain paginated requests to get items and make a local search.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Their development checking team means business. &lt;strong&gt;Make sure you read the partner guidelines before build&lt;/strong&gt;. You get one evaluation per day and the turnaround is slow. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you use any metadata from their API, including art, titles, tracks etc. you must add a &lt;em&gt;Open In Spotify&lt;/em&gt; button.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pkce is by far the easiest way of authenticating client-side with their API&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Open to feedback, suggestions, PRs and any questions you might have!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>What is Mobile App Development : An Interactive Guide - 2021 </title>
      <author>Artistixe IT Solutions LLP</author>
      <pubDate>Fri, 08 Oct 2021 09:32:55 +0000</pubDate>
      <link>https://dev.to/artistixe_it/what-is-mobile-app-development-an-interactive-guide-2021-33la</link>
      <guid>https://dev.to/artistixe_it/what-is-mobile-app-development-an-interactive-guide-2021-33la</guid>
      <description>&lt;p&gt;In the beginning of this decade, there were impressive predictions. Through in-app advertising and app stores, mobile applications are predicted to generate around $700 billion. The fact that the development of mobile apps is spreading by leaps and bounds is encouraging, but there's a lot of mystery surrounding it. Only if you have a clearly defined goal and how to develop an app can you reach the pinnacle of success.&lt;/p&gt;

&lt;p&gt;Why is Mobile App Development Important?&lt;br&gt;
Apps are being downloaded and installed at a higher rate than ever before, as smartphones and smart devices continue to rise in popularity. Most businesses today rely on mobile apps to grow their customer base and attract more customers. By 2023, market experts project an increase in app revenue of 1 trillion dollars.&lt;/p&gt;

&lt;p&gt;App Development Offers the Following Advantages:&lt;br&gt;
Through effective communication between the developer and customer, the developer creates a loyal customer base.&lt;br&gt;
The development of apps is a tried and tested method for ensuring your brand's all-pervasive presence.&lt;br&gt;
The fastest way to let your customers know about potential offers or new products is through an app if you run a business.&lt;br&gt;
It increases sales of your products/services when payment options are an integral part of the app.&lt;br&gt;
Identify the Category of Apps You Are Looking For&lt;br&gt;
No alt text provided for this image&lt;br&gt;
Health care apps&lt;br&gt;
This category contains more than one hundred thousand apps. Apps for healthcare have evolved beyond their original function of checking the health of users. A doctor and patient can communicate two-way with their appointments, ensure that appropriate drugs are administered, and make appointments.&lt;/p&gt;

&lt;p&gt;Manufacturing apps&lt;br&gt;
Your manufacturing process can be streamlined with integrated data analysis. Your workforce is more efficient with manufacturing apps as they systematically decrease the system's flaws.&lt;/p&gt;

&lt;p&gt;Logistics&lt;br&gt;
With today's technology, you can track your packages at the touch of a button. Therefore, you can also send ETA to your users. Managing your warehouse and monitoring your fleet is easy if you own a business.&lt;/p&gt;

&lt;p&gt;Retail Apps&lt;br&gt;
Apps for retail today serve a number of purposes. Rather than simply displaying products, it enhances the interaction between the customer and the business owner. Customers are also informed about the latest products, coupons, and exciting offers.&lt;/p&gt;

&lt;p&gt;E-learning Apps&lt;br&gt;
Professional courses are in greater demand today than ever before. Enrollment numbers are also rising. App developers have realized the need for online classrooms with engaging and interactive tutorials.&lt;/p&gt;

&lt;p&gt;Financial Apps&lt;br&gt;
In managing your finances, financial apps have been the backbone. The firm can help you manage your debt and make predictions before you invest. Today, you are literally at the tip of your fingers when it comes to your financial wellbeing.&lt;/p&gt;

&lt;p&gt;Media Apps&lt;br&gt;
An app that offers you a variety of movies, music, streaming services, and messaging can be considered a media app. In today's world, media apps focus on connecting people better, especially in times of pandemics. In the modern era, people are stuck within the confines of their own homes, so we have created a larger collection of movies and music than ever before&lt;/p&gt;

&lt;p&gt;Food and Hospitality&lt;br&gt;
During a vacation, you can book your bed and breakfast or the best restaurant in the area with a click of a button. With the advent of customer reviews, tourists can now have a more interactive experience with the app when it comes to local specialties and places to visit.&lt;/p&gt;

&lt;p&gt;Mobile Platforms that Are Dominant&lt;br&gt;
What Are the Different Development Approaches for Building Apps?&lt;br&gt;
No alt text provided for this image&lt;br&gt;
Native Apps&lt;br&gt;
Apps that are native to a particular device unlock the full potential of the device and the app. Nevertheless, they are very costly and require a great deal of maintenance. This will give it good performance since APIs can be accessed directly. One of the disadvantages of native apps is that they require different code for each platform.&lt;/p&gt;

&lt;p&gt;Cross-platform Applications&lt;br&gt;
These applications are built using a variety of languages and frameworks. Because of this, they work on a wide range of platforms. They may have a single codebase, but maintenance requires efficient bridges. Performance is limited with native apps compared to web apps.&lt;/p&gt;

&lt;p&gt;Hybrid Applications&lt;br&gt;
JavaScript, HTML, and CSS are used to build these apps. The Android and iOS apps share the same codebase. Therefore, performance is lower than native applications.&lt;/p&gt;

&lt;p&gt;Progressive Web Applications&lt;br&gt;
Web-based applications. The browser allows you to use web applications without installing anything. Apps can be installed on the home screen and run in the background.&lt;/p&gt;

&lt;p&gt;Technologies Used in Mobile Applications&lt;br&gt;
React Native&lt;br&gt;
It is a part of the Javascript library, so it shares a code base. Apps that run across platforms can be created with it. In addition to this, React includes a reusable code system that is applicable to a variety of scenarios.&lt;/p&gt;

&lt;p&gt;Flutter&lt;br&gt;
Google's toolkit can be found here. Flutter can be used to build native applications across multiple platforms with a single codebase. Since the architecture is layered, there are options for customisation.&lt;/p&gt;

&lt;p&gt;Ionic&lt;br&gt;
When compared to other processes, this mobile application development is more rapid. The reason for this is that it comes with inbuilt UI components, themes, and styles. Additionally, the application features adaptive styles and is interactive. The application runs smoothly across multiple operating systems because of this.&lt;/p&gt;

&lt;p&gt;Six phases form the basis of a focused approach to app development. Let's take a closer look at them:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Strategizing&lt;br&gt;
To turn an idea into a working app, the first phase of app development is to have a clearly defined policy. This process should also include your enterprise mobility strategy. It is important to identify the key demographics that will use the app during this phase. Your competitors should be known to you. It is very important for a mobile app development company to be clear about the app's objectives before deciding on a platform.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Planning and Analysis&lt;br&gt;
You will be able to tell when your idea is transformed into a real project. The first thing you do is analyze the scenarios in which your application can add value as well as the functional requirements to get started. Once you know all of these things, you should create a product roadmap that charts the progress of your idea from its very first day until its eventual execution.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should also include the requirements and the date by which you expect a milestone to be achieved. It would be good to have an MVP available if cost is a concern.&lt;/p&gt;

&lt;p&gt;A key element of the planning process is identifying the skills required for app development. You'll need developers who understand how to use these technology stacks if you plan on developing an Android or iOS app. Your app needs a name, and you need to check if it has already been taken.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;UI/UX Design
An impression of your mobile application is greatly influenced by the way it looks. No matter whether you want to launch a complete product or an MVP, the user experience must be top-notch.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When users interact with your app, they are simply evoking emotions. App development must address the issues of design, accessibility, usability, system performance, and marketing to maximize user experience. It makes sense to create an interactive and seamless UX when you build apps with more and more companies shifting to a more user-centric approach.&lt;/p&gt;

&lt;p&gt;In order to make the app appealing to users, you must make the UI presentable. Good UX design companies create UIs which evoke a feeling of curiosity and make the user want to know more about the application that they have developed.&lt;/p&gt;

&lt;p&gt;Information Architecture&lt;br&gt;
As part of your app development process, you should also have a systematic understanding of the data that your app will display, the data that will be taken from the user, and the user's navigational journey within the app.&lt;/p&gt;

&lt;p&gt;Different businesses have different users with different privileges and functions, so it is crucial to enable these information to be stored in the information architecture within business mobility.&lt;/p&gt;

&lt;p&gt;In addition to this, you should also draw out a workflow diagram to see the possible combinations of interactions between the app and the user.&lt;/p&gt;

&lt;p&gt;Wireframes&lt;br&gt;
Wireframes are essentially digital sketches. Applicant's aesthetics are represented by these screenshots. Develop the layout so you can review the design before finalizing it in an effective manner. Ideally, any application you design should be device-specific. As a result, it is important to clarify whether your app runs on Android, iOS, as the user experience will differ.&lt;/p&gt;

&lt;p&gt;Style Guides&lt;br&gt;
Designers use a style guide as a guide when they are designing. It can be difficult for a designer to create wireframes because of the complexity. He must choose a font while designing. It is important that the color scheme matches the vision of the application. A decision needs to be made regarding where certain icons should be positioned.&lt;/p&gt;

&lt;p&gt;Any app's productivity and efficiency can be increased by focusing on the style guide during the development process. In addition, style guides allow you to chart your product's evolution&lt;/p&gt;

&lt;p&gt;Mockups&lt;br&gt;
You have a high-fidelity final rendering of the app when you apply the standards of the style guide to the wireframe. You can make further changes to the interface, the information architecture, and the workflow once the mockup is ready. These mockups are often created by UI designers using Adobe Photoshop. Figma and Sketch are also popular apps.&lt;/p&gt;

&lt;p&gt;Prototype&lt;br&gt;
A prototype is a dynamic first rendition of the app which you can use to simulate the user experience, while mockups are static images that give you an idea of the layout of the app. Additionally, a prototype reviews the workflow that can be expected from the final product.&lt;/p&gt;

&lt;p&gt;Although building a prototype can be expensive and time-consuming, it makes sense to do so. App development teams can use this data to determine if the app lacks anything and make necessary changes before the launch. Prototype building can be done with Invision.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;App Development
App development usually consists of three parts. Backend/server technology is the first step, followed by API(s), and finally mobile app front end development.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Backend Technology&lt;br&gt;
The backend of a mobile app is used to store, secure, and process data. Backend refers to the process that occurs when the user interacts with the UI. The backend stores information in a remote database, which allows the creation of the architecture. There is no need for a backend in applications that do not require data connection.&lt;/p&gt;

&lt;p&gt;API(s) development&lt;br&gt;
Today, there is hardly any app that does not stay connected to servers. App developers often use Amazon, Google, or internal teams to provide APIs.&lt;/p&gt;

&lt;p&gt;API development is a very sensitive process, and making requests through servers can be tricky if not done correctly. APIs can be bought and built. You can integrate an API into your application if you buy it. It will save you time and money, but you will have to give up the freedom to include features of your choice. An app developer team develops the latter.&lt;/p&gt;

&lt;p&gt;In addition to documenting APIs, you should keep this in mind during the process of developing a mobile app. Documentation can give you an overview of the app's history and current state. It is easier to form updates this way. It is possible to allow others access to your API by documenting it.&lt;/p&gt;

&lt;p&gt;Front End Development&lt;br&gt;
The front end of a mobile application is what the users actually see and interact with. Apps for mobile devices will use interactive experiences for the user that are enabled by the backend and API. Applications that don't use APIs will store their data locally. The backend of an app can be developed in any programming language. You will need to use a platform-specific technology stack when using native applications.&lt;/p&gt;

&lt;p&gt;Apps for iOS can be developed using Flutter or React Native, for example. Java and Kotlin can be used to develop apps for Android, in addition to the others mentioned earlier. A mobile app developer should understand the pros and cons of each language before selecting one.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Testing a Developed Application
No alt text provided for this image
In any mobile app development program, quality checking is one of the most important phases. With quality hecking, the app is more usable, more secure, and more stable. This process requires you to prepare test cases that address all the qualities of the app. Manual or automatic testing is possible.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Test cases provide answers regarding the viability of an app development, just as use cases provide answers regarding its viability. You can follow the following types of testing procedures&lt;/p&gt;

&lt;p&gt;User Experience Testing&lt;br&gt;
A well-designed application matches the expectations of the user experience curated by the design team. According to the style guide, the app will leave a good impression on the reader. Use aesthetic color schemes and fonts in your app, and ensure a consistent design. As soon as your app meets these standards, it can be launched.&lt;/p&gt;

&lt;p&gt;Functional Testing&lt;br&gt;
By using this method, you can ensure that all your specifications are justified in your app. The app will be used differently by every user, and therefore mobile app development must take this into account. Finding out if your app has a bug can be done through functional testing. The app might need to be fixed if the outcome is different for two similar actions. The app should be available on two platforms so that two versions of the application can be compared. The functionality of an application can also be broken down into various components to be analyzed.&lt;/p&gt;

&lt;p&gt;Performance Testing&lt;br&gt;
Performance testing in app development is aimed at determining whether the app can perform consistently even with different loads. During this test, an important question will be answered, such as how well it responds to user requests and how fast screens load. It will also test the app's effect on the device, determining if it drains the battery or causes memory leaks. In addition, it raises the important question of whether your app is too big. The development of mobile apps should also consider how the app performs when multiple users are logged in.&lt;/p&gt;

&lt;p&gt;Security Testing&lt;br&gt;
Mobile app development is concerned with achieving a security standard that cannot be compromised. A hacker can exploit any vulnerability. Occasionally, the work is outsourced for thorough examination. Logins should be recorded in the device and on the backend if your app requires them. The user should be able to terminate the session if they haven't interacted for some time&lt;/p&gt;

&lt;p&gt;The security of your device should be emphasized in case your mobile app development also allows a user's credentials to be stored on the device. Apple's keychain feature, for example, allows users to store credentials and not worry about losing them.&lt;/p&gt;

&lt;p&gt;Device and Platform Testing&lt;br&gt;
Testing web apps is easy, but testing mobile apps should be far more frequent since new devices are continuously being released with new firmware, operating systems, and designs. It is therefore important to test mobile apps across different platforms and simulators to ensure the app works properly on all of them.&lt;/p&gt;

&lt;p&gt;Because it is more expensive to develop multiplatform apps, most companies opt for single-platform apps. You can follow device testing as one of the best tools to ensure sustainability if you are wondering how to build an app.&lt;/p&gt;

&lt;p&gt;Recovery Testing&lt;br&gt;
Testing your app's recovery means assessing its ability to recover from failures. One of the most important things you should realize if you are considering how to create an app is that it can fail, but what matters is how quickly it relaunches.&lt;/p&gt;

&lt;p&gt;Beta Testing&lt;br&gt;
An app is beta tested by real users in terms of App development terminology. In mobile app development, beta testing ensures the product's reliability, security and compatibility. Through beta testing, a large group of users evaluates the application for loopholes. In-app purchases are also checked for reliability.&lt;/p&gt;

&lt;p&gt;Certification testing is the final form of testing. App developers should follow the standards set by the Apple and Play Stores so there will be no difference between the devices and the apps they create.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Mobile App Deployment
An app must be submitted to the app store of the device in order to be launched. After the mobile app development process is complete, you will need to create a developer's account in order to submit your app. Meta-data for the release of the app will include the following:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The Title of the App&lt;br&gt;
Description of the App&lt;br&gt;
Category&lt;br&gt;
Keywords&lt;br&gt;
App store screenshots&lt;br&gt;
An Android app becomes a part of the app store after a few hours. With the Apple store, however, there will be a review process that will determine how well your app follows the store's guidelines. It is necessary to create a test account for the store if users will need to log in.&lt;/p&gt;

&lt;p&gt;Once your app has been approved for the store, check out feedback and crash reports. As part of quality control after app development, key analytics and performance indicators should be used.&lt;/p&gt;

&lt;p&gt;After Mobile App Development Is Completed, How Can Quality Be Maintained?&lt;br&gt;
After the app development process, it is crucial to update the app interface. When the users do not have anything new to look forward to, they will likely switch to the competing app that provides similar features.&lt;br&gt;
You can never build an app if you want to keep it compatible with new hardware and software updates.&lt;br&gt;
Mobile app development includes fixing bugs as well, and it can show your dedication to ensuring the quality of your application to your customers.&lt;br&gt;
Getting feedback from your customers after developing mobile apps should provide you with useful information for developing new features. Users may decide to switch to another app if your app doesn't excite them.&lt;/p&gt;

&lt;p&gt;Conclusion&lt;br&gt;
Artistixe IT Solutions LLP is an efficient Mobile App Development Company that offers a carefully curated selection of technologically diverse products and services. To get in touch, mail us at &lt;a href="mailto:info@artistixeit.com"&gt;info@artistixeit.com&lt;/a&gt; if you have a project that needs attention.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.sooperarticles.com/internet-articles/web-development-articles/what-mobile-app-development-interactive-guide-2021-1820125.html"&gt;https://www.sooperarticles.com/internet-articles/web-development-articles/what-mobile-app-development-interactive-guide-2021-1820125.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>mobileapp</category>
      <category>development</category>
      <category>appdevelopment</category>
    </item>
    <item>
      <title>Working with Next.js + Headless CMS 👨‍💻</title>
      <author>Tuomo Kankaanpää</author>
      <pubDate>Fri, 08 Oct 2021 09:27:46 +0000</pubDate>
      <link>https://dev.to/tumee/working-with-next-js-headless-cms-32g</link>
      <guid>https://dev.to/tumee/working-with-next-js-headless-cms-32g</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://www.tuomokankaanpaa.com/newsletter"&gt;my newsletter&lt;/a&gt; last week. I publish previous week's newsletter here on the blog. If you want to read these as soon as they are published, &lt;a href="https://www.tuomokankaanpaa.com/newsletter"&gt;sign up&lt;/a&gt; for the newsletter!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ahoy,&lt;/p&gt;

&lt;p&gt;Last week I talked about my top 5 features in Visual Studio Code. After publishing that video, I actually ran into a website that lists a bunch (35 to be exact) of useful, but kind of unknown, features in VS Code.&lt;/p&gt;

&lt;p&gt;The website is &lt;a href="http://vscodecandothat.com/"&gt;vscodecandothat.com&lt;/a&gt;. I highly recommend checking it out if you use VS Code.&lt;/p&gt;

&lt;p&gt;This weeks &lt;a href="https://www.youtube.com/watch?v=qinZQstIpqY"&gt;Youtube video&lt;/a&gt; is also about vscodecandothat website. In the video I go over some of the features they have listed, that I found really helpful and cool!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/qinZQstIpqY"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=qinZQstIpqY"&gt;📹 View on Youtube&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-worked-on-learned-this-week"&gt;
  &lt;/a&gt;
  What I worked on / learned this week?
&lt;/h2&gt;

&lt;p&gt;One of the things was the Next.js blog application I mentioned &lt;a href="https://tuomokankaanpaa.com/blog/best-vs-code-features-learning-material-ui"&gt;last week&lt;/a&gt;. I tried to make it look a bit better, but I still think that it needs some work on that front 🙈&lt;/p&gt;

&lt;p&gt;Other thing I did was working on setting up a headless CMS as a datasource for the application. I started the application off with just static data in a Javascript file, but the goal is to have it use a headless CMS as a datasource.&lt;/p&gt;

&lt;p&gt;Implementing a headless CMS was pretty interesting and cool thing to explore. While working on it, I realised in practice how great it is to use technologies like Jamstack and Next.js.&lt;/p&gt;

&lt;p&gt;Swapping the datasource required some modifications on the existing application, like renaming few variables and adding the data as props instead of just direct import statement, but other than that it didn't require much work and it was surprisingly easy to swap the datasource.&lt;/p&gt;

&lt;p&gt;So at the end, I got a raw version of the blog with headless CMS working.&lt;/p&gt;

&lt;p&gt;As I mentioned in the last week's email, I am planning on shooting a video about the whole process. I think I will do two part video. First part showing how to code the blog and second part to show how to add headless CMS to the mix.&lt;/p&gt;

&lt;p&gt;What do you think? Hit the reply button and let me know if that is something you'd like to see.&lt;/p&gt;

&lt;p&gt;That's it for this week!&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br&gt;
Tuomo&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>vscode</category>
      <category>nextjs</category>
      <category>jamstack</category>
    </item>
    <item>
      <title>How to enable versioning in Amazon S3
</title>
      <author>Amador Criado</author>
      <pubDate>Fri, 08 Oct 2021 09:03:28 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-enable-versioning-in-amazon-s3-17m8</link>
      <guid>https://dev.to/aws-builders/how-to-enable-versioning-in-amazon-s3-17m8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#what-is-versioning"&gt;
  &lt;/a&gt;
  What is Versioning?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Versioning is a means for keeping multiple variants of the same object in the bucket.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Versioning is used to preserve, retrieve, and restore every version of every object stored in an S3 bucket.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Versioning is done at the S3 Bucket level.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Versioning can be enabled from the AWS Console / SDKs / API.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Versioning, once enabled, cannot be completely disabled.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The alternative to disabling versioning is placing the bucket in a "versioning-suspended" state.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A drawback of having multiple versions of an object is you are billed multiple times (since the objects are getting stored in S3 each time).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In order to avoid having multiple versions of the same object, S3 has a feature called Lifecycle  Management. This allows us to decide on what to do when multiple versions of an object are piling up.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One advantage of versioning is, we can provide permissions on versioned objects i.e., we can define which version of an object is public and which one is private.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#example-diagram"&gt;
  &lt;/a&gt;
  Example Diagram
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oNtpfCFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632069807412/VTz_IGEWD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oNtpfCFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632069807412/VTz_IGEWD.png" alt="aws-s3-versioning-diagram.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enable-versioning-on-the-s3-bucket"&gt;
  &lt;/a&gt;
  Enable Versioning on the S3 bucket
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create new Bucket&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w1R_s9qT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632069979509/iZYpJcNg-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w1R_s9qT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632069979509/iZYpJcNg-.png" alt="aws-s3-versioning-new-bucket.png"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enable versioning&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nFHOWM4t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070082846/u20_zE3pe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nFHOWM4t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070082846/u20_zE3pe.png" alt="aws-s3-versioning-check-enabled.png"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To test it, upload new object, we have used the orc avatar for the initial version:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jTafB1C1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070006114/Dkz4lUJkX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jTafB1C1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070006114/Dkz4lUJkX.png" alt="aws-s3-versioning-s3-upload.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make the bucket public with a Bucket Policy, use the Policy generator and grant public access to getObject in s3: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NunpGnEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070202715/VgYaPAsXK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NunpGnEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070202715/VgYaPAsXK.png" alt="aws-s3-versioning-policy-gen-click.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---t1duIun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070355939/BxM0ZJNGz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---t1duIun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070355939/BxM0ZJNGz.png" alt="aws-s3-versioning-policygen.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XqGOpb9p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070222199/uJQCFe6uf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XqGOpb9p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070222199/uJQCFe6uf.png" alt="aws-s3-versioning-policy-json.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--496FbRFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070264014/o_768rX0b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--496FbRFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070264014/o_768rX0b.png" alt="aws-s3-versioning-policy-paste.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now we upload the same object but with different color balance to differenciate clearly the versions:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Leiw0yq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070252392/3B9J62rH9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Leiw0yq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070252392/3B9J62rH9.png" alt="aws-s3-versioning-show.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kGc6AoYy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070323865/-EI3OithM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kGc6AoYy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1632070323865/-EI3OithM.png" alt="aws-s3-versioning-select-version.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>s3</category>
      <category>versioning</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Deploying an discordjs bot to Qovery</title>
      <author>Jambang J</author>
      <pubDate>Fri, 08 Oct 2021 08:48:24 +0000</pubDate>
      <link>https://dev.to/jambang067/deploying-an-discordjs-bot-to-qovery-51e</link>
      <guid>https://dev.to/jambang067/deploying-an-discordjs-bot-to-qovery-51e</guid>
      <description>&lt;h1&gt;
  &lt;a href="#deploying-simple-discordjs-bot-to-qoveryweb-console-for-free"&gt;
  &lt;/a&gt;
  Deploying simple discord.js bot to Qovery(Web console) For free.
&lt;/h1&gt;

&lt;p&gt;This post contains tutorial and the total code used in it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h3&gt;

&lt;p&gt;-&lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; account - will be needed for keeping source code at an place and to be linked in Qovery.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#creating-a-qovery-account"&gt;
  &lt;/a&gt;
  Creating a Qovery account
&lt;/h4&gt;

&lt;p&gt;After finising all necessary requirements, you will need to open an account at Qovery.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigate to &lt;a href="https://console.qovery.com/login"&gt;https://console.qovery.com/login&lt;/a&gt; in your desired browser and click on either &lt;code&gt;Sign in with GitHub&lt;/code&gt; or &lt;code&gt;Sign in with GitLab&lt;/code&gt; upto you(GitHub recommended). You can create an account at &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; or &lt;a href="https://gitlab.com"&gt;GitLab&lt;/a&gt;.Choose the community plan as we want to deploy our apps for free.In this tutorial we will use GitHub as our application source code is hosted there.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After login &amp;amp; filling some optional forms,this is where you should be:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u7ENY7lc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/webconsole.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u7ENY7lc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/webconsole.jpg" alt="Qovery Console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click at the purple button with the &lt;code&gt;Create a project&lt;/code&gt; text, to create a new &lt;strong&gt;project group&lt;/strong&gt;. Name it anything you like and click on &lt;code&gt;Create&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8p9-AEly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/Newproject.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8p9-AEly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/Newproject.jpg" alt="Create new project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Qovery will create a project group for you where you can host multiple applications to keep apps topics organized.&lt;/p&gt;

&lt;p&gt;Now let's create a &lt;strong&gt;new environment&lt;/strong&gt;. After a project was successfully created you should see this screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eZl2-aIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/newenv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eZl2-aIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/newenv.jpg" alt="Create new environment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on &lt;code&gt;Create environment&lt;/code&gt; and name your environment. For this tutorial, I will name it &lt;code&gt;discordjs-qovery&lt;/code&gt;. After creation you should see a screen similar to the one below:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Congratulations! Your Qovery environment is now ready to use 🎉&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;important: Qovery gives you free $45 credits in platform credits,the system is on community plan which helps new users get started with Qovery platform,you can earn credits by contributing back to community&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#nowabout-the-code-part"&gt;
  &lt;/a&gt;
  Now,about the code part.
&lt;/h4&gt;

&lt;p&gt;We are going to write the actual bot code now to work in &lt;code&gt;Nodejs&lt;/code&gt;. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-code-to-make-the-bot"&gt;
  &lt;/a&gt;
  The code to make the bot.
&lt;/h4&gt;

&lt;p&gt;The code is written in JavaScript,so for beginners,don't worry,this will be easy,let's get into coding :&lt;/p&gt;

&lt;p&gt;You may create index.js file for the bot's main file,where the bot's central functions work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#update"&gt;
  &lt;/a&gt;
  Update:
&lt;/h2&gt;

&lt;p&gt;You don't need to use the package.json provided in tutorial,you can clone the repo in your local machine,delete the package.json file which came from this repo,and then run npm init command,and use that package.json generated by node.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coding-of-the-bot"&gt;
  &lt;/a&gt;
  Coding of the bot:
&lt;/h2&gt;

&lt;p&gt;First we want to make sure that discord.js package is included in code,so we can interact with discord api to make the bot,and the require classes to make the bot smoothly working.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Intents&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;discord.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then,we will want to create an system from where JavaScript will fetch token from other file and send it to index.js,so you will need to add the following code too:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./config.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then,we want to make sure the client is created to be used.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;intents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Intents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GUILDS&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We add prefix to bot,else the bot won't respond to commands,we will need to add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prefix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// can be edited.&lt;/span&gt;
&lt;span class="c1"&gt;// You can change the prefix to whatever you want,like $,A,7 etc.,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next,we need to see whether the bot is ready to be online without errors,so we add an console.log() code,when the bot is ready without any issues,it will simply use this code,and your bot will have an activity saying "prefix: ." by default,you can change it later on,you will need to add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; Ready to be in qovery`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setActivity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prefix: .&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;//the console.log() content can we edited too.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we want to have some clear error message caused by our code,so we add another code to see what's clearly wrong with our code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now,we arrived to our first command,called &lt;code&gt;ping&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;prefix&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ping&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pong&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#getting-our-bot-token"&gt;
  &lt;/a&gt;
  Getting our bot token:
&lt;/h2&gt;

&lt;p&gt;After we done all this,let's leave the coding part temporarily,we need to fetch bot token from discord developer portal,first we will open &lt;a href="https://discord.com/developers/applications"&gt;https://discord.com/developers/applications&lt;/a&gt; and login with discord if you didn't,now steps to fetch a bot token:&lt;/p&gt;

&lt;p&gt;1.Create a new app,name it whatever you like,but for this tutorial,I will name it Qoverydjs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tpVbPZZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/newdapp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tpVbPZZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/newdapp.jpg" alt="New discord app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.After creating a new discord app,you will need to create a bot which will be existing in the app,by clicking the button shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CJen3_Ut--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/v1/./tutorial/images/botbutton.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CJen3_Ut--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/v1/./tutorial/images/botbutton.jpg" alt="discord bot creation"&gt;&lt;/a&gt;&lt;br&gt;
After clicking on the bot button,create a new bot,name it as you like.&lt;/p&gt;

&lt;p&gt;3.Fetching bot token,after You created a new bot,you must be at this screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7cQEUr_E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/botbutton.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7cQEUr_E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/botbutton.jpg" alt="discord bot creation"&gt;&lt;/a&gt;&lt;br&gt;
Then, click on the &lt;code&gt;copy&lt;/code&gt; button at the screen,so we can save it to use it later.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#final-steps-of-the-main-part"&gt;
  &lt;/a&gt;
  Final steps of the main part:
&lt;/h2&gt;

&lt;p&gt;So,as we got the bot token,next step is,we will go back to code part and create &lt;code&gt;config.json&lt;/code&gt; file,where our bot token will be stored safely,and put the following code in it,you will need to replace Your_bot_token_here with your actual bot token:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"token"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Your_bot_token_here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Final part of our code is to make our bot code complete, save the config.json file and move to &lt;code&gt;index.js&lt;/code&gt; file and add this code at the last line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//last step of code.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Okay,so this is what &lt;code&gt;index.js&lt;/code&gt; file should be like,by now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Intents&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;discord.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./config.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;intents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Intents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GUILDS&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; Ready to be in qovery`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setActivity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prefix: .&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;prefix&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ping&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pong&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;


&lt;span class="c1"&gt;// Login to Discord with your client's token&lt;/span&gt;
&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and our &lt;code&gt;config.json&lt;/code&gt; file should be like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"token"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"bot_token"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save the code and move to final process(given below).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dockerizing-app-to-deploy-to-qovery"&gt;
  &lt;/a&gt;
  Dockerizing app to deploy to Qovery:
&lt;/h2&gt;

&lt;p&gt;Next,we will need to create A file called &lt;code&gt;Dockerfile&lt;/code&gt; so Qovery can build an container image and deploy our bot,after creating the &lt;code&gt;Dockerfile&lt;/code&gt; you will need to follow the given steps below:&lt;/p&gt;

&lt;p&gt;1.First we need to specify the node version to be used,we will be using Node v16,by adding the follwing code in Dockerfile we can specify the node version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:16&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.As we need bot to be hosted in a fixed directory and make it work directory which will copy all the code and build from there ,we create an mkdir command,we can use the command by specifying it in Dockerfile,we will need to add the follwing code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; /usr/src/app2
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3.We will create an file called &lt;code&gt;package.json&lt;/code&gt; and add the following code to specify the packages we want to install or in simple words,we tell Dockerfile to fetch dependencies names and install them:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"qovery-discordjs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"repository"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"git"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"git+https://github.com/jiopolm/qovery-discordjs.git"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"keywords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ISC"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"bugs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://github.com/jiopolm/qovery-discordjs/issues"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"homepage"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://github.com/jiopolm/qovery-discordjs/#readme"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"discord-together"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.1.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"discord.js"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~12.2.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ffmpeg-static"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.3.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"fs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.0.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"genius-lyrics"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.2.7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ms"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.1.3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.12.7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4.As we created package.json,we can move further and add the following code in Dockerfile from which required packages are installed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package*.json ./&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.Now we will need to tell docker to install all the packages from package.json so the dependencies are installed and copied to the directory we made to make the bot work:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;6.Final Dockerfile part,we will need to execute the index or main file of bot by specifying to docker,in this tutorial we made index.js main file of the bot,so we add the code given below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; [ "node", "index.js" ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So,as the Dockerfile part is finished,this is how it should look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:16&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package*.json ./&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; [ "node", "index.js" ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we finished the Dockerfile part,we will need to tell docker and git to ignore some directories,so the packages are installed based on our app and not based on existing app's code:&lt;/p&gt;

&lt;p&gt;(i) We will create &lt;code&gt;.dockerignore&lt;/code&gt; file to tell docker to ignore some directories,after the creation of &lt;code&gt;.dockerignore&lt;/code&gt; we will add the follwing code to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node_modules
npm-debug.log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(ii) We will create &lt;code&gt;.gitignore&lt;/code&gt; to specify which directories should be ignore while cloning the repo to somewhere:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node_modules
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After saving the two files,we will head back to Qovery web console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deploying-to-qovery"&gt;
  &lt;/a&gt;
  Deploying to Qovery
&lt;/h3&gt;

&lt;p&gt;Now, that we have got our project and environment ready lets head to &lt;a href="https://console.qovery.com"&gt;Qovery Console&lt;/a&gt; and create a new application&lt;/p&gt;

&lt;p&gt;Fill out the &lt;strong&gt;&lt;em&gt;name&lt;/em&gt;&lt;/strong&gt; of your application, choose the GitHub repository and the branch and change the &lt;strong&gt;&lt;em&gt;build mode&lt;/em&gt;&lt;/strong&gt; to &lt;code&gt;Dockerfile&lt;/code&gt; and click on &lt;strong&gt;&lt;code&gt;Create&lt;/code&gt;&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;After creation, you should see a screen like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---OxbBbtg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/appdash.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---OxbBbtg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/appdash.jpg" alt="Application dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From here you will just need to click on the &lt;strong&gt;&lt;em&gt;Actions&lt;/em&gt;&lt;/strong&gt; button and from there select the &lt;strong&gt;&lt;em&gt;Deploy&lt;/em&gt;&lt;/strong&gt; option,leave the port blank as we are not deploying any web server for serving apis through the bot(In this tutorial).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0pq8bC1V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/deploy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0pq8bC1V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/deploy.jpg" alt=" actions button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After approximately 4 minutes of waiting,your bot should be deployed successfully on Qovery.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c1LzwacP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/success.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1LzwacP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/jiopolm/discordjs-qovery/main/tutorial/images/success.jpg" alt="Successful deployment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that,you may check whether the bot is running or not in your server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If the bot is responding then Congratulations, you have just deployed your bot to Qovery 🎉&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;GitHub repo - &lt;a href="https://github.com/jiopolm/discordjs-qovery"&gt;https://github.com/jiopolm/discordjs-qovery&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading :)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Tailwind Button group</title>
      <author>MD Bootstrap</author>
      <pubDate>Fri, 08 Oct 2021 08:40:16 +0000</pubDate>
      <link>https://dev.to/mdbootstrap/tailwind-button-group-3ded</link>
      <guid>https://dev.to/mdbootstrap/tailwind-button-group-3ded</guid>
      <description>&lt;p&gt;Responsive button group built with Tailwind. Button group wraps a series of buttons together into a single line (navbar) or stack in a vertical column.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#quick-start"&gt;
  &lt;/a&gt;
  Quick Start
&lt;/h4&gt;

&lt;p&gt;In order to start using Tailwind simply download our starter.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://tailwind-elements.com/tw-starter.zip"&gt;DOWNLOAD ZIP STARTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tailwind Elements does not change or add any CSS to the already one from TailwindCSS.&lt;/p&gt;

&lt;p&gt;You can directly copy our components into your Tailwind design and they will work straight away.&lt;/p&gt;

&lt;p&gt;In some dynamic components (like dropdowns or modals) we add Font Awesome icons and custom JavaScript. However, they do not require any additional installation, all the necessary code is always included in the example and copied to any Tailwind project - it will work.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#mdb-go"&gt;
  &lt;/a&gt;
  MDB GO
&lt;/h4&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RAhugF8NOBs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#customization"&gt;
  &lt;/a&gt;
  Customization
&lt;/h2&gt;

&lt;h5&gt;
  &lt;a href="#basic-example"&gt;
  &lt;/a&gt;
  Basic example
&lt;/h5&gt;

&lt;h6&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Small --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center justify-center mb-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border-l border-t border-b border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-xs px-4 py-2 rounded-l outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Left
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border border-solid border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-xs px-4 py-2 outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Center
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border-t border-b border-r border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-xs px-4 py-2 rounded-r outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Right
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- Medium --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center justify-center mb-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border-l border-t border-b border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-sm px-6 py-3 rounded-l outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Left
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border border-solid border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-sm px-6 py-3 outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Center
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border-t border-b border-r border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-sm px-6 py-3 rounded-r outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Right
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- Large --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center justify-center mb-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border-l border-t border-b border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-base px-8 py-3 rounded-l outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Left
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border border-solid border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-base px-8 py-3 outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Center
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border-t border-b border-r border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-base px-8 py-3 rounded-r outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Right
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#icon-group"&gt;
  &lt;/a&gt;
  Icon group
&lt;/h5&gt;

&lt;h6&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Required font awesome --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://use.fontawesome.com/releases/v5.11.2/css/all.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

      &lt;span class="c"&gt;&amp;lt;!-- Small --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center justify-center mb-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border-l border-t border-b border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-xs px-4 py-2 rounded-l outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
          &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-user"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border border-solid border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-xs px-4 py-2 outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
          &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-heart"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border-t border-b border-r border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-xs px-4 py-2 rounded-r outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
          &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-wrench"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

      &lt;span class="c"&gt;&amp;lt;!-- Medium --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center justify-center mb-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border-l border-t border-b border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-sm px-6 py-3 rounded-l outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
          &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-user"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border border-solid border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-sm px-6 py-3 outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
          &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-heart"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border-t border-b border-r border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-sm px-6 py-3 rounded-r outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
          &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-wrench"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

      &lt;span class="c"&gt;&amp;lt;!-- Large --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center justify-center mb-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border-l border-t border-b border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-base px-8 py-3 rounded-l outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
          &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-user"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border border-solid border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-base px-8 py-3 outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
          &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-heart"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-purple-500 bg-transparent border-t border-b border-r border-purple-500 hover:bg-purple-500 hover:text-white active:bg-purple-600 font-bold uppercase text-base px-8 py-3 rounded-r outline-none focus:outline-none mb-1 ease-linear transition-all duration-150"&lt;/span&gt;
          &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-wrench"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#you-can-see-more-customization-examples-on-the-button-group-documentation-page"&gt;
  &lt;/a&gt;
  You can see more customization examples on the &lt;a href="https://tailwind-elements.com/docs/standard/components/button-group/"&gt;📄 Button group documentation page&lt;/a&gt;
&lt;/h4&gt;




&lt;h2&gt;
  &lt;a href="#crucial-resources"&gt;
  &lt;/a&gt;
  Crucial Resources
&lt;/h2&gt;

&lt;p&gt;Here are the resources that we have prepared to help you work with this component:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Read &lt;a href="https://tailwind-elements.com/docs/standard/components/button-group/"&gt;📄 Button group documentation page&lt;/a&gt; &amp;lt;-- start here&lt;/li&gt;
&lt;li&gt;In to get the most out of your project, you should also get acquainted with other Components options related to Button group. See the section below to find the list of them.&lt;/li&gt;
&lt;li&gt;After finishing the project you can publish it with CLI in order to receive &lt;a href="https://mdbootstrap.com/docs/standard/cli/"&gt;💽 Free hosting (beta)&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#related-components-options-amp-features"&gt;
  &lt;/a&gt;
  Related Components options &amp;amp; features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/accordion/"&gt;Accordion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/alerts/"&gt;Alerts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/badges/"&gt;Badges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/buttons/"&gt;Buttons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/cards/"&gt;Cards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/carousel/"&gt;Carousel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/charts/"&gt;Charts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/chips/"&gt;Chips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/dropdown/"&gt;Dropdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/gallery/"&gt;Gallery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/headings/"&gt;Headings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/images/"&gt;Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/listgroup/"&gt;List group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/modal/"&gt;Modal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/Paragraphs/"&gt;Paragraphs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/popover/"&gt;Popover&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/progress/"&gt;Progress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/rating/"&gt;Rating&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/spinners/"&gt;Spinners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/stepper/"&gt;Stepper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/tables/"&gt;Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/template/"&gt;Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/toast/"&gt;Toast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwind-elements.com/docs/standard/components/tooltip/"&gt;Tooltip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#additional-resources"&gt;
  &lt;/a&gt;
  Additional resources
&lt;/h2&gt;

&lt;p&gt;Learn web development with our &lt;strong&gt;learning roadmap&lt;/strong&gt;:&lt;br&gt;
&lt;strong&gt;&lt;a href="https://mdbootstrap.com/docs/standard/getting-started/"&gt;🎓 Start Learning&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join our mailing list &amp;amp; receive &lt;strong&gt;exclusive resources&lt;/strong&gt; for developers&lt;br&gt;
&lt;strong&gt;&lt;a href="https://mdbootstrap.com/newsletter/"&gt;🎁 Get gifts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join our private FB group for &lt;strong&gt;inspiration &amp;amp; community experience&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.facebook.com/groups/682245759188413"&gt;👨‍👩‍👧‍👦 Ask to join&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support creation of open-source packages&lt;/strong&gt; with a STAR on GitHub&lt;br&gt;
&lt;a href="https://github.com/dawidadach/Tailwind-Elements/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4wcaku9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/github/stars/dawidadach/Tailwind-Elements.svg%3Fstyle%3Dsocial%26label%3DStar%26maxAge%3D2592000" alt="GitHub stars"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
