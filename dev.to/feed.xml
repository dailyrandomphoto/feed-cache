<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>101 Tips to üòçbecome a great programmerüò™ </title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 06:59:18 +0000</pubDate>
      <link>https://dev.to/h763/101-tips-to-become-a-great-programmer-5caj</link>
      <guid>https://dev.to/h763/101-tips-to-become-a-great-programmer-5caj</guid>
      <description>&lt;p&gt;¬†A good programmer is someone who always looks both ways before crossing a one-way street. ~Doug Linder&lt;/p&gt;

&lt;p&gt;Let me start by saying that I do not consider myself to be a competent coder. I consider my coding abilities to be mediocre, and I am still learning and have a long way to go before I am even remotely satisfied with them.Yes, I am better at programming than a lot of others, but that is just because they are lazy and choose to sit about idle all day instead of programming. Their dreadful abilities make my less dreadful abilities appear fantastic.&lt;/p&gt;

&lt;p&gt;So most of the tips I will mention below are lessons learnt from failed endeavours, they are what I have wanted to be and I am not. So lets dive in.¬†&lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/tips-to-become-a-great-programmer/&amp;amp;ved=2ahUKEwi_29zf9trzAhWNSH0KHdCDA14QFnoECAQQBQ&amp;amp;usg=AOvVaw2TZoEJ1qtcJHCjk5WDoNUU"&gt;101 Tips to become a great programmer&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Best üòç Coding app for beginners [Updated]</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 06:40:14 +0000</pubDate>
      <link>https://dev.to/h763/best-coding-app-for-beginners-updated-56g5</link>
      <guid>https://dev.to/h763/best-coding-app-for-beginners-updated-56g5</guid>
      <description>&lt;p&gt;Programming skills open doors to dozens of lucrative tech careers. And there‚Äôs never been a better or easier time to learn. Just like learning any other language, coding requires regular practice to master. But it‚Äôs not always easy for people to find time to practice in front of a computer. That‚Äôs why coding apps are so helpful. In this article, we‚Äôll cover the best coding apps on iOS and Android for those who want to learn to code.¬†&lt;/p&gt;
&lt;br&gt;Read More : &lt;b&gt;&lt;a href="https://www.codelivly.com/best-coding-apps-for-beginners/"&gt;Best Coding App For Beginners&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>Top 10 Best Software Editor for Web Developer </title>
      <author>Bhavyashah</author>
      <pubDate>Thu, 21 Oct 2021 06:37:47 +0000</pubDate>
      <link>https://dev.to/bhavyashah/top-10-best-software-editor-for-web-developer-16jo</link>
      <guid>https://dev.to/bhavyashah/top-10-best-software-editor-for-web-developer-16jo</guid>
      <description>&lt;p&gt;Software development is a broad subject, and it‚Äôs not so easy to learn about all its aspects at once. To do this, we can use various software editor developed with the specific purpose of assisting us in our work. However, determining which one best suits your working style and needs is often complicated and confusing. Therefore, I would present you the list of 10 most popular and efficient software editors for web developer.&lt;/p&gt;

&lt;h1&gt;List of Top 10 Software Editor For Web Developer&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Visual Studio Code&lt;/li&gt;
&lt;li&gt;Sublime Text 3&lt;/li&gt;
&lt;li&gt;Atom&lt;/li&gt;
&lt;li&gt;PyCharm&lt;/li&gt;
&lt;li&gt;Webstorm&lt;/li&gt;
&lt;li&gt;NetBeans&lt;/li&gt;
&lt;li&gt;Brackets&lt;/li&gt;
&lt;li&gt;Code::Blocks&lt;/li&gt;
&lt;li&gt;Eclipse&lt;/li&gt;
&lt;li&gt;NOTEPAD++&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope you Learn Something New Things for this article.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>discuss</category>
    </item>
    <item>
      <title>25 amazing ü§© GitHub repositories that will help you ü™Ñ make a Beautiful Project</title>
      <author>Coderz</author>
      <pubDate>Thu, 21 Oct 2021 06:31:21 +0000</pubDate>
      <link>https://dev.to/h763/25-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-94b</link>
      <guid>https://dev.to/h763/25-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-94b</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Today I would like to give examples of good GitHub repositories that will help you implement complex animations, as well as useful functions in your projects.&lt;/p&gt;
&lt;p&gt;So let's get started¬†&lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/10-awesome-github-repos-every-web-developer-should-know/&amp;amp;ved=2ahUKEwiw1e_qpqbzAhU78HMBHVvBAWkQFnoECBAQAQ&amp;amp;usg=AOvVaw1YdY91hlP3suK6HGMF0MXW"&gt;25 amazing ü§© GitHub repositories that will help you ü™Ñ make a Beautiful Project&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>API Testing - How to manage API Test suites in vREST NG Application?</title>
      <author>Dheeraj Aggarwal</author>
      <pubDate>Thu, 21 Oct 2021 06:01:57 +0000</pubDate>
      <link>https://dev.to/dheerajaggarwal/api-testing-how-to-manage-api-test-suites-in-vrest-ng-application-2b1j</link>
      <guid>https://dev.to/dheerajaggarwal/api-testing-how-to-manage-api-test-suites-in-vrest-ng-application-2b1j</guid>
      <description>&lt;p&gt;This video #tutorial explains how you may quickly manage your API Test suites in vREST NG Application via UI.&lt;/p&gt;

&lt;p&gt;vREST NG is a script less API test automation tool. It helps you to write maintainable test cases quickly for functional and regression testing of APIs. You can download and install the vREST NG application directly on Windows, OSX, and Linux via our website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Video Link:&lt;/strong&gt; &lt;a href="https://youtu.be/rIOFNiUhBvo"&gt;https://youtu.be/rIOFNiUhBvo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Testing Tutorials Playlist:&lt;/strong&gt; &lt;a href="https://youtube.com/playlist?list=PLmua155_WrDzt1AbB6iV5Lsw_Z7QrzZZ0"&gt;https://youtube.com/playlist?list=PLmua155_WrDzt1AbB6iV5Lsw_Z7QrzZZ0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Important Links:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://vrest.io/?utm_source=devto&amp;amp;utm_medium=devto-desc&amp;amp;utm_campaign=video"&gt;vREST NG Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/NtRa7kw"&gt;Community Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meetings.hubspot.com/dheeraj-aggarwal"&gt;Book a Live Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Please do like and share if you found this video helpful and let the voice heard by the testing community. Also, let us know your feedback by commenting on this post.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>tutorial</category>
      <category>apitesting</category>
      <category>vrest</category>
    </item>
    <item>
      <title>5 Tips for Affordable Shopping at a Furniture Store</title>
      <author>Bergen Furniture &amp; Design</author>
      <pubDate>Thu, 21 Oct 2021 05:47:29 +0000</pubDate>
      <link>https://dev.to/bergenfurniturenj/5-tips-for-affordable-shopping-at-a-furniture-store-5g3f</link>
      <guid>https://dev.to/bergenfurniturenj/5-tips-for-affordable-shopping-at-a-furniture-store-5g3f</guid>
      <description>&lt;p&gt;Furniture shopping can be fun and painful. It‚Äôs fun if you enjoy exploring items and get your favorite items at good prices. However, if you end up paying more than desired, it becomes a headache in the long run. But you don‚Äôt need to worry about spending hefty amounts every time you visit a Furniture Store in Ridgefield NJ. These tips will help you save a good cost when out to shop furnishings for your home.&lt;br&gt;
‚Ä¢ Negotiate for Discount on Accessories: Usually, stores might not have too many margins in furniture products they sell. And they already put on good deals to attract buyers. So, you won‚Äôt score a hefty discount on whatever you are going to buy. But if you are buying accessories as well, you can save some bucks there. The bigger your purchase amount, the more you can bargain on accessories. But that doesn‚Äôt mean you should spend hundreds more than you need just to save some tens.&lt;br&gt;
‚Ä¢ Find the Right Time to Shop: Do you know what‚Äôs the best time to shop and save? Most will say sale periods. But do you know there are some brand or industry-specific months apart from the general sale seasons? You will also find some stores offering discounts throughout the year. However, for furniture, the best time to shop usually falls around December to January and May to June. And you might get over a 20% discount on an item that‚Äôs otherwise available at 10% less. So, if you can wait for that period, hold your nerves till sales begin.&lt;br&gt;
‚Ä¢ Clearance and Floor Models: Do you remember the model on display at the &lt;a href="https://www.bergenfurniturenj.com/new-jersey/bergen-county/ho-ho-kus"&gt;Furniture Store in Ho Ho Kus NJ&lt;/a&gt;? And do you know you can get that for almost half its cost? Many stores mark floor models down due to either some visible flaw or to create space for new items. Similarly, clearance items also attract great negotiations as store owners want to clear their inventory shelves even if it means making less or no profit.&lt;br&gt;
‚Ä¢ Choose Your Financing Option Carefully: Imagine you walk into a store to buy that desired furniture and find a 0% financing offer. Will you pay in full or opt for paying in small installments over time? Well, you should check the terms, conditions, and detailed charges before deciding. Although such financing offers to relieve you from the financial burden without putting on extra debt, you might face higher charges on delayed payments. This might make you pay more than you saved by not opting for a non-zero financing option.&lt;br&gt;
‚Ä¢ Avoid Buying Basic Ad Hoc Plans: It could be for fabric protection when you buy upholstered furniture or anything similar. Why spend a high amount on hiring someone for the furniture care chores when you can do those things yourself? With a plan, you will have to pay for the person and product. However, opting out will cut down the cost of the person while you can buy the product at a much lesser price separately. Although that will mean you will be doing to cleaning and caring things yourself.&lt;br&gt;
Make a note, keep it in your pocket or your phone, and make sure to read these tips before entering a &lt;a href="https://www.bergenfurniturenj.com/new-jersey/bergen-county/ridgefield"&gt;Furniture Store in Ridgefield NJ&lt;/a&gt;, for shopping.&lt;/p&gt;

</description>
      <category>writing</category>
      <category>discuss</category>
      <category>tutorial</category>
      <category>testing</category>
    </item>
    <item>
      <title>NextAuth the easiest authentication for Next.js</title>
      <author>Chris Bongers</author>
      <pubDate>Thu, 21 Oct 2021 05:44:14 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/nextauth-the-easiest-authentication-for-nextjs-5aom</link>
      <guid>https://dev.to/dailydevtips1/nextauth-the-easiest-authentication-for-nextjs-5aom</guid>
      <description>&lt;p&gt;Adding authentication to any application can be a bit of a mission.&lt;br&gt;
However, with NextAuth, it's a breeze for Next.js applications.&lt;/p&gt;

&lt;p&gt;In this article, we'll explore a social login, using Twitter as our authentication layer.&lt;/p&gt;

&lt;p&gt;We'll build this whole app from scratch so you can follow along.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-nextauth-to-our-application"&gt;
  &lt;/a&gt;
  Adding NextAuth to our application
&lt;/h2&gt;

&lt;p&gt;Before adding it, let's quickly scaffold a new Next.js app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-next-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Give the project a cool name on the prompt, and that's it. We have a basic Next.js app now.&lt;/p&gt;

&lt;p&gt;To run your app enter the folder and execute the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To add NextAuth to our project, we need to install the following package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i next-auth@beta
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#adding-the-serverside-layer"&gt;
  &lt;/a&gt;
  Adding the server-side layer
&lt;/h2&gt;

&lt;p&gt;The first step is to add the server-side layer. This comes with the callback for the providers and more.&lt;/p&gt;

&lt;p&gt;To add this, we need to create an &lt;code&gt;auth&lt;/code&gt; folder inside our &lt;code&gt;pages/api&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;Inside this &lt;code&gt;auth&lt;/code&gt; folder create a file called &lt;code&gt;[...nextauth].js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Inside of it, place the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;NextAuth&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next-auth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;NextAuth&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="c1"&gt;// We'll come back here&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#adding-the-session-to-our-app"&gt;
  &lt;/a&gt;
  Adding the session to our app
&lt;/h2&gt;

&lt;p&gt;The next part we need is a session provider. This is already given to us by NextAuth. We just need to enable it in our &lt;code&gt;pages/_app.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;SessionProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next-auth/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;pageProps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;SessionProvider&lt;/span&gt; &lt;span class="na"&gt;session&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;SessionProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will make sure our complete app is wrapped in a session provider to access the session throughout our app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-twitter-provider-to-nextauth"&gt;
  &lt;/a&gt;
  Adding the Twitter provider to NextAuth
&lt;/h2&gt;

&lt;p&gt;So far, we don't have any providers set up yet, so our app can't authenticate with anything.&lt;/p&gt;

&lt;p&gt;To change this, we must first register a new app in the &lt;a href="https://developer.twitter.com/"&gt;Twitter Developer console&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Create a new app here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bg7OFxjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633969004315/-5KIByrIj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bg7OFxjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633969004315/-5KIByrIj.png" alt="Twitter new app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add this point go back to your application, and create a &lt;code&gt;.env&lt;/code&gt; file in the root of your project.&lt;br&gt;
Inside this file, add the following two details from your Twitter app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TWITTER_CLIENT_ID=xxx
TWITTER_CLIENT_SECRET=xxx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then click the authentication settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eoIGAZFS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633969601798/UQncOwWk6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eoIGAZFS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633969601798/UQncOwWk6.png" alt="Authentication settings button in Twitter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On this screen, fill out the following options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Enable 3-legged Oauth (ON)&lt;/li&gt;
&lt;li&gt;Request email addresses from users (ON)&lt;/li&gt;
&lt;li&gt;Callback URLs (&lt;a href="http://localhost:3000/api/auth/callback/twitter"&gt;http://localhost:3000/api/auth/callback/twitter&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Website URL (your website)&lt;/li&gt;
&lt;li&gt;Terms of service (your website)&lt;/li&gt;
&lt;li&gt;Privacy policy (your website)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tCHvLnv_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633969714109/548cAXj-l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tCHvLnv_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633969714109/548cAXj-l.png" alt="Twitter app settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The last thing we need to do is edit our &lt;code&gt;pages/api/auth/[...nextauth].js&lt;/code&gt; file and include the Provider:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;NextAuth&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next-auth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;TwitterProvider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next-auth/providers/twitter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;NextAuth&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;TwitterProvider&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;clientId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TWITTER_CLIENT_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;clientSecret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TWITTER_CLIENT_SECRET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#adding-the-frontend-authentication-steps"&gt;
  &lt;/a&gt;
  Adding the frontend authentication steps
&lt;/h2&gt;

&lt;p&gt;Now that we have everything in place, let's add the login button to our app and test everything out.&lt;/p&gt;

&lt;p&gt;Change your &lt;code&gt;index.js&lt;/code&gt; file to look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useSession&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;signIn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;signOut&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next-auth/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSession&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
        Signed in as &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;signOut&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Sign out&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      Not signed in &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;signIn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Sign in&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And if we now run our app, the flow looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e5kYRhxG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633970251874/6riVZdj04.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e5kYRhxG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633970251874/6riVZdj04.gif" alt="NextAuth the easiest authentication for Next.js"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also find the complete code on &lt;a href="https://github.com/rebelchris/next-auth"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
    </item>
    <item>
      <title>SysmonForLinux - Logging File Create Events </title>
      <author>oz9un</author>
      <pubDate>Thu, 21 Oct 2021 05:33:41 +0000</pubDate>
      <link>https://dev.to/openlab/sysmonforlinux-logging-file-create-events-2bck</link>
      <guid>https://dev.to/openlab/sysmonforlinux-logging-file-create-events-2bck</guid>
      <description>&lt;p&gt;In this article, I will explain how to use SysmonForLinux and how to create specific configurations to keep track of file creation events.&lt;/p&gt;

&lt;p&gt;For further information about events and configuration options; you can visit my github repository: &lt;a href="https://github.com/oz9un/SysmonForLinux-Manual"&gt;oz9un&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sysmon-in-a-nutshell"&gt;
  &lt;/a&gt;
  Sysmon in a nutshell:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Sysmon&lt;/strong&gt; (System Monitor) is a Windows system service that logs system activity to the Windows event log. Now, it is available for &lt;strong&gt;Linux&lt;/strong&gt; too! &lt;/p&gt;

&lt;p&gt;It was developed by Microsoft as an open source project. Even though it is doubtful to see such a contribution, I am very glad about it ü§≠&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpBMHJq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/ANbD1CCdA3iI8/giphy.gif%3Fcid%3Decf05e47chlsv1aaptk03nsstucjmbytwln7w8t9locgvmfi%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpBMHJq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/ANbD1CCdA3iI8/giphy.gif%3Fcid%3Decf05e47chlsv1aaptk03nsstucjmbytwln7w8t9locgvmfi%26rid%3Dgiphy.gif%26ct%3Dg" alt="sus_gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#file-create-event"&gt;
  &lt;/a&gt;
  File Create event:
&lt;/h2&gt;

&lt;p&gt;As its name suggests, this event detects when a file is created on Linux systems.&lt;/p&gt;

&lt;p&gt;This event can be especially useful when tracking auto-startup folders and folders where everyone has a permission to create files. Because most of the time, they are the main targets of malicious users üëπ.&lt;/p&gt;

&lt;p&gt;A normal file creation event log would looks like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qvvEDcn5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4x8zf6qaw3r9m1164w7d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qvvEDcn5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4x8zf6qaw3r9m1164w7d.png" alt="FileCreation Event Log"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#configuring-file-create-event"&gt;
  &lt;/a&gt;
  Configuring File Create event:
&lt;/h2&gt;

&lt;p&gt;By default, SysmonForLinux logs every file creation events. But we are talking about Linux. Even if you connect to a server via SSH; that results in the creation of many tmp files.&lt;/p&gt;

&lt;p&gt;As a result, you can guess how chaotic the log file has become. This is why we don't want to log everything, especially in case of file creation event.&lt;/p&gt;

&lt;p&gt;File Create event has 7 different description fields that we can use as filters:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fgOQgmFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bw6rxk7loe0i65y60rx1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fgOQgmFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bw6rxk7loe0i65y60rx1.png" alt="Description Fields"&gt;&lt;/a&gt;&lt;br&gt;
You can view all description fields for each event on my &lt;a href="https://github.com/oz9un/SysmonForLinux-Manual"&gt;github&lt;/a&gt; page!&lt;/p&gt;

&lt;p&gt;When creating a configuration file (xml) for SysmonForLinux, we can use this fields as a filter.&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#example-scenario"&gt;
  &lt;/a&gt;
  Example scenario:
&lt;/h2&gt;

&lt;p&gt;Suppose you want to keep log of the every file creation event with the following properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;File should be created in &lt;em&gt;/tmp&lt;/em&gt; or under &lt;em&gt;/home/secret&lt;/em&gt; folder.&lt;/li&gt;
&lt;li&gt;File should be created in &lt;em&gt;October 2021&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;File shouldn't be created with &lt;em&gt;/usr/sbin/cups-browsed&lt;/em&gt; daemon (This printer daemon uses /tmp file quite often).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Desired configuration file should looks like that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Event ID 11 == FileCreate. Log what we want! --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;RuleGroup&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;groupRelation=&lt;/span&gt;&lt;span class="s"&gt;"and"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;FileCreate&lt;/span&gt; &lt;span class="na"&gt;onmatch=&lt;/span&gt;&lt;span class="s"&gt;"include"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;TargetFilename&lt;/span&gt; &lt;span class="na"&gt;condition=&lt;/span&gt;&lt;span class="s"&gt;"contains any"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;/home/secret/;/tmp/&lt;span class="nt"&gt;&amp;lt;/TargetFilename&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;UtcTime&lt;/span&gt; &lt;span class="na"&gt;condition=&lt;/span&gt;&lt;span class="s"&gt;"contains"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;2021-10&lt;span class="nt"&gt;&amp;lt;/UtcTime&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/FileCreate&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;FileCreate&lt;/span&gt; &lt;span class="na"&gt;onmatch=&lt;/span&gt;&lt;span class="s"&gt;"exclude"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Image&lt;/span&gt; &lt;span class="na"&gt;condition=&lt;/span&gt;&lt;span class="s"&gt;"is"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;/usr/sbin/cups-browsed&lt;span class="nt"&gt;&amp;lt;/Image&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/FileCreate&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/RuleGroup&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can view the whole configuration file from: &lt;a href="https://github.com/oz9un/SysmonForLinux-Manual/blob/main/Description%20Field%20Examples/FileCreate_ExampleScenario.xml"&gt;Example Scenario&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results:
&lt;/h2&gt;

&lt;p&gt;To view sysmon's log file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;tail&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; /var/log/syslog | &lt;span class="nb"&gt;sudo&lt;/span&gt; /opt/sysmon/sysmonLogView &lt;span class="nt"&gt;-X&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a1YPV6Ex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3ujafruawscruow8w2c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a1YPV6Ex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3ujafruawscruow8w2c.png" alt="Sysmon Log Output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, we successfully created a configuration file according to our properties and caught some malicious events already!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WrFQS5Oa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/TOWeGr70V2R1K/giphy.gif%3Fcid%3Decf05e47a1op0mndh2ygfi3sf7fx21ioab3rxnp60jdeezsn%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WrFQS5Oa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/TOWeGr70V2R1K/giphy.gif%3Fcid%3Decf05e47a1op0mndh2ygfi3sf7fx21ioab3rxnp60jdeezsn%26rid%3Dgiphy.gif%26ct%3Dg" alt="hacker_gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#end-amp-contact"&gt;
  &lt;/a&gt;
  End &amp;amp; Contact:
&lt;/h2&gt;

&lt;p&gt;This is at the end of my first post about SysmonForLinux. I plan to write much more on this subject as I find time. I would be very happy if you can give a feedback. Stay in touch!&lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/oz9un"&gt;https://github.com/oz9un&lt;/a&gt;&lt;br&gt;
Twitter: &lt;a href="https://twitter.com/oz9un"&gt;https://twitter.com/oz9un&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HpGlf6hD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/iPiUxztIL4Sl2/giphy.gif%3Fcid%3Decf05e47u8cqoaovibilphanyitfewmsnw8wa7c35tqxez0p%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HpGlf6hD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/iPiUxztIL4Sl2/giphy.gif%3Fcid%3Decf05e47u8cqoaovibilphanyitfewmsnw8wa7c35tqxez0p%26rid%3Dgiphy.gif%26ct%3Dg" alt="cat_gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>sysmon</category>
      <category>linux</category>
      <category>log</category>
      <category>devops</category>
    </item>
    <item>
      <title>Best dev tool ever!!</title>
      <author>ImgSrc</author>
      <pubDate>Thu, 21 Oct 2021 05:14:46 +0000</pubDate>
      <link>https://dev.to/imgsrcspace/best-dev-tool-ever-3bmb</link>
      <guid>https://dev.to/imgsrcspace/best-dev-tool-ever-3bmb</guid>
      <description>&lt;p&gt;Hey everyone, &lt;br&gt;
Imgsrc.space is the best Placeholder service ever. It's just like searching on google images but &lt;em&gt;you won't even need to leave your coding environment&lt;/em&gt;. We have a vast a library of around &lt;strong&gt;3 million&lt;/strong&gt; images and videos, so all you have to do is enter your search term and we will do  the rest. Totally free. &lt;br&gt;
&lt;a href="https://imgsrc.space"&gt;Imgsrc.space&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#how-to-use-our-placeholders"&gt;
  &lt;/a&gt;
  How To Use Our Placeholders?
&lt;/h1&gt;

&lt;p&gt;Well there are 2 ways to use them&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The easy way - Works everywhere no platform dependence&lt;/li&gt;
&lt;li&gt;The easier way - Works in your web pages with a js library&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#the-easy-way"&gt;
  &lt;/a&gt;
  The easy way
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#get-a-specific-image"&gt;
  &lt;/a&gt;
  Get a specific image
&lt;/h3&gt;

&lt;p&gt;Just add the search term you want at the end of the url after / and we will deliver it. Simple.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://imgsrc.space/cat
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nq07FHHJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9xsmwlp7lhqvj0nk6u9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nq07FHHJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9xsmwlp7lhqvj0nk6u9.jpg" alt="Image of a cat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resizing-images"&gt;
  &lt;/a&gt;
  Resizing images
&lt;/h3&gt;

&lt;p&gt;Imgsrc.space can also resize the images for you. To enter your desired dimensions put an "?" at the end of the search term and then your enter your desired height and width. Here "h" stands for height and w stands for width. They must be separated by an &amp;amp;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://imgsrc.space/architecture?h=400&amp;amp;w=400
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zEYeCR03--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xouey169tek2r5u8gi9t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zEYeCR03--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xouey169tek2r5u8gi9t.png" alt="Image of architecture 400by400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#autoresizing-images"&gt;
  &lt;/a&gt;
  AutoResizing images
&lt;/h3&gt;

&lt;p&gt;If you only provide a single dimension parameter (i.e only height or width) Imgsrc.Space would automatically resize the other parameters accordingly&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://imgsrc.space/paris?h=400
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nWiablnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jkxo4z2btrw3ue3jh595.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nWiablnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jkxo4z2btrw3ue3jh595.png" alt="Image of Paris"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-a-specific-video"&gt;
  &lt;/a&gt;
  Getting a specific Video
&lt;/h3&gt;

&lt;p&gt;To get a specific image just enter the search word in the image source after a dot and a space followed by an -v&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://imgsrc.space/ocean-v
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://imgsrc.space/ocean-v"&gt;try it&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-easier-way"&gt;
  &lt;/a&gt;
  The easier way
&lt;/h2&gt;

&lt;p&gt;If you are writing html pages, then we have a good news, you can use our js library to make things easier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script src="https://cdn.jsdelivr.net/gh/imgsrc-space/imgsrc.space-js-library/main.js" &amp;gt; &amp;lt;/script&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy and paste the above script tag to the &lt;strong&gt;&lt;em&gt;TOP&lt;/em&gt;&lt;/strong&gt; of your html page (in the head tag), and that's it.&lt;/p&gt;

&lt;p&gt;Now to use a image just enter a "dot followed by a space and then your search term ".Here are some examples of what you can do with it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img src=". cow" &amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img src=". dog?h=500&amp;amp;w=70" &amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img src=". sunset?w=700" &amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;video&amp;gt; &amp;lt;source src=". car-v" type="video/mp4"&amp;gt; &amp;lt;/video&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find more details in this &lt;a href="https://imgsrc.space/documentation.src/index.htm#Using-our-JS-library"&gt;documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this would save you guys some time. Happy coding üòÄüëçüèº&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>productivity</category>
    </item>
    <item>
      <title>6 Python Easy Tricks for beginners</title>
      <author>Rohan Kiratsata</author>
      <pubDate>Thu, 21 Oct 2021 05:06:25 +0000</pubDate>
      <link>https://dev.to/rohankiratsata/6-python-easy-tricks-for-begineers-4g12</link>
      <guid>https://dev.to/rohankiratsata/6-python-easy-tricks-for-begineers-4g12</guid>
      <description>&lt;p&gt;Hello fellow coders! Today I'm going to tell you 6 python tricks that you can use to make your learning journey fun and easy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-swapping-numbers"&gt;
  &lt;/a&gt;
  1. Swapping Numbers
&lt;/h2&gt;

&lt;p&gt;Swapping is important concept when it comes to data structure and algorithm. In normal way we need to create a temporary variable to swap the numbers. But in Python it's just easy..&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="c1"&gt;# Before Swapping
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# OUTPUT : 5 10
&lt;/span&gt;
&lt;span class="c1"&gt;#Swapping Variables
&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# OUTPUT : 10 5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-opening-a-website"&gt;
  &lt;/a&gt;
  2. Opening a Website
&lt;/h2&gt;

&lt;p&gt;Opening website using a python library.This is how we can open a website with just a single line of code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;webbrowser&lt;/span&gt;
&lt;span class="n"&gt;webbrowser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://www.google.com"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-colored-text"&gt;
  &lt;/a&gt;
  3. Colored Text
&lt;/h2&gt;

&lt;p&gt;Prints colored output text. But first we need to install &lt;strong&gt;termcolor&lt;/strong&gt; python package using &lt;code&gt;pip install termcolor&lt;/code&gt; in cmd or terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;termcolor&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;colored&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colored&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This is Awesome"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colored&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Python is easy"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"blue"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-reverse-a-string"&gt;
  &lt;/a&gt;
  4. Reverse a String
&lt;/h2&gt;

&lt;p&gt;Trust me, reversing a string can't be easy than this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"pythoniseasy"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-multiple-user-input"&gt;
  &lt;/a&gt;
  5. Multiple User Input
&lt;/h2&gt;

&lt;p&gt;Single line code for taking multiple user input using &lt;code&gt;.split()&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Enter A &amp;amp; B : "&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"A :"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"B"&lt;/span&gt; &lt;span class="p"&gt;:,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-single-string-from-list"&gt;
  &lt;/a&gt;
  6. Single String From List
&lt;/h2&gt;

&lt;p&gt;Create a single string from all elements in the list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;lstStr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"coding"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"is"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"fun"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lstStr&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it for today! Till then KEEP CODING...KEEP HUSTLING&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>After refresh scroll page to Top/Middle/Footer.</title>
      <author>Vickyvn</author>
      <pubDate>Thu, 21 Oct 2021 04:59:51 +0000</pubDate>
      <link>https://dev.to/vickyvn5/after-refresh-scroll-page-to-topmiddlefooter-42bk</link>
      <guid>https://dev.to/vickyvn5/after-refresh-scroll-page-to-topmiddlefooter-42bk</guid>
      <description>&lt;p&gt;Here we learn how can we scroll our page onclick button or after Reload page.&lt;/p&gt;

&lt;p&gt;simple we adding ref in our html tags where you want to scroll page.&lt;br&gt;
example &lt;br&gt;
&amp;lt; div class="top" ref="goToTop"&amp;gt; ... &amp;lt; /div &amp;gt;&lt;br&gt;
or&lt;br&gt;
&amp;lt; div class="middle" ref="goToMiddle"&amp;gt; ... &amp;lt; /div &amp;gt;&lt;br&gt;
or&lt;br&gt;
&amp;lt; div class="footer" ref="goToFooter"&amp;gt; ... &amp;lt; /div &amp;gt;&lt;/p&gt;

&lt;p&gt;in vue js we handled&lt;br&gt;
// Create method&lt;br&gt;
scrollToElement(ref) {&lt;br&gt;
    window.scrollTo(0,0);&lt;br&gt;
    this.$scrollTo(ref, 1000);&lt;br&gt;
},&lt;/p&gt;

&lt;p&gt;// If want to after refresh then create mounted()&lt;/p&gt;

&lt;p&gt;mounted() {&lt;br&gt;
     this.scrollToElement(this.$refs.goToTop);&lt;br&gt;
}, &lt;br&gt;
// for top use goToTop , for middle use goToMiddle , for footer use &lt;/p&gt;

&lt;p&gt;// If want to after onclick then create method&lt;br&gt;
onclickMethod() {&lt;br&gt;
     this.scrollToElement(this.$refs.goToTop); &lt;br&gt;
}, &lt;/p&gt;

&lt;p&gt;I hope it will help you.&lt;/p&gt;

</description>
      <category>vue</category>
    </item>
    <item>
      <title>Focused state border width hack with Elm-UI</title>
      <author>Sufiyan</author>
      <pubDate>Thu, 21 Oct 2021 04:49:58 +0000</pubDate>
      <link>https://dev.to/sufiyanyusuf/focused-state-border-width-hack-with-elm-ui-3n5b</link>
      <guid>https://dev.to/sufiyanyusuf/focused-state-border-width-hack-with-elm-ui-3n5b</guid>
      <description>&lt;p&gt;I was recently trying to fix the focused styling for textfields in our company design system (&lt;a href="https://github.com/PaackEng/paack-ui"&gt;https://github.com/PaackEng/paack-ui&lt;/a&gt;), and ran into this issue where I wasn't able to update the border width as per the design for the focused state. &lt;/p&gt;

&lt;p&gt;So elm-ui lets you specify attributes for the focused state, but these have the type "decorative" attr (apparently the decorative label has something to do with the ephemeral styles). &lt;/p&gt;

&lt;p&gt;Unfortunately, border width property has the type attr.  After banging my head for a while I realized a good hack - instead of setting the border width for the focused state, I just ended up setting an explicit shadow:&lt;/p&gt;

&lt;p&gt;shadow { color = Colors.navyBlue700, offset = ( 0, 0 ), blur = 0, size = 1.2 }&lt;/p&gt;

&lt;p&gt;Works perfectly !!!&lt;/p&gt;

</description>
      <category>elm</category>
      <category>elmui</category>
      <category>beginners</category>
      <category>frontend</category>
    </item>
  </channel>
</rss>
