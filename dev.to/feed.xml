<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Striver's SDE Sheet Journey - #5 Sort an array of 0s, 1s and 2s</title>
      <author>sachin26</author>
      <pubDate>Thu, 23 Dec 2021 10:57:03 +0000</pubDate>
      <link>https://dev.to/sachin26/strivers-sde-sheet-journey-5-sort-an-array-of-0s-1s-and-2s-2pcc</link>
      <guid>https://dev.to/sachin26/strivers-sde-sheet-journey-5-sort-an-array-of-0s-1s-and-2s-2pcc</guid>
      <description>&lt;p&gt;Hi👋Devs,&lt;/p&gt;

&lt;p&gt;I hope you getting something from the series, now we came to the 5th problem, let's solve the problem without wasting any time.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;u&gt;Problem Statement&lt;/u&gt; :-&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;given an array &lt;code&gt;nums&lt;/code&gt; with &lt;code&gt;n&lt;/code&gt; objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is a &lt;strong&gt;Dutch national flag problem&lt;/strong&gt; was proposed by &lt;a href="https://en.wikipedia.org/wiki/Dutch_national_flag_problem#:~:text=The-,Dutch%20national%20flag%20problem,-%5B1%5D%20is%20a"&gt;Diskstra&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: nums = [2,0,1]
Output: [0,1,2]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#solution-1"&gt;
  &lt;/a&gt;
  &lt;u&gt;Solution 1&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;we can easily solve this problem by using any sorting algorithm. the sorting algorithm will sort the array &lt;code&gt;nums&lt;/code&gt; in ascending order and that would be our expected output.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-2"&gt;
  &lt;/a&gt;
  &lt;u&gt;Solution 2&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;the array &lt;code&gt;nums&lt;/code&gt; only contains the three unique values 0's,1's,2's. so what we need to do is just create three variables that store the frequency of the three unique values and after that overwrite the array based on the frequency of the values.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;lets understand this approach step by step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-1&lt;/strong&gt; initialize three variable.&lt;br&gt;
 &lt;code&gt;redCount = 0&lt;/code&gt;,&lt;br&gt;
 &lt;code&gt;whiteCount = 0&lt;/code&gt;,&lt;br&gt;
 &lt;code&gt;blueCount = 0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-2&lt;/strong&gt; run a loop from &lt;code&gt;i=0&lt;/code&gt; to &lt;code&gt;nums.length&lt;/code&gt; and then,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; if &lt;code&gt;nums[i] == red&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; then &lt;code&gt;redCount++&lt;/code&gt;.&lt;br&gt;
&lt;strong&gt;2.&lt;/strong&gt; if &lt;code&gt;nums[i] == white&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; then &lt;code&gt;whiteCount++&lt;/code&gt;.&lt;br&gt;
&lt;strong&gt;3.&lt;/strong&gt; if &lt;code&gt;nums[i] == blue&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt; then &lt;code&gt;blueCount++&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-3&lt;/strong&gt; again run a loop from &lt;code&gt;i=0&lt;/code&gt; to &lt;code&gt;nums.length&lt;/code&gt; and then,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; if &lt;code&gt;redCount != 0&lt;/code&gt; then,&lt;br&gt;
 &lt;code&gt;nums[i] = red&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;redCount--&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; if &lt;code&gt;whiteCount !=0&lt;/code&gt; then,&lt;br&gt;
 &lt;code&gt;nums[i] = white&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;whiteCount--&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; if &lt;code&gt;blueCount !=0&lt;/code&gt; then &lt;code&gt;nums[i] = blue&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-4&lt;/strong&gt; end.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Java&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sortColors&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;white&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;redCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;whiteCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blueCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;

            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;red:&lt;/span&gt;
                    &lt;span class="n"&gt;redCount&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;white:&lt;/span&gt;
                    &lt;span class="n"&gt;whiteCount&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;blue:&lt;/span&gt;
                    &lt;span class="n"&gt;blueCount&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;redCount&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;redCount&lt;/span&gt;&lt;span class="o"&gt;--;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nf"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;whiteCount&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                 &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;whiteCount&lt;/span&gt;&lt;span class="o"&gt;--;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#solution-3"&gt;
  &lt;/a&gt;
  &lt;u&gt;Solution 3&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;let's discuss the main algorithm that is &lt;strong&gt;three-way partitioning&lt;/strong&gt; was proposed by Dijkstra himself.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;in this algo we are classifying the &lt;code&gt;nums&lt;/code&gt; array into 3 groups by using three pointers.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-1&lt;/strong&gt; initialize three pointers &lt;code&gt;redPointer = 0&lt;/code&gt;, &lt;code&gt;whitePointer = 0&lt;/code&gt;, &lt;code&gt;bluePointer = nums.length -1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;step-2&lt;/strong&gt; run a loop from &lt;code&gt;whitePointer&lt;/code&gt; to &lt;code&gt;bluePointer&lt;/code&gt; and then,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; if &lt;code&gt;nums[whitePointer]&lt;/code&gt; = &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;red&lt;/code&gt; then,&lt;br&gt;
 &lt;code&gt;swap(whitePointer,redPointer)&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;redPointer++&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;whitePointer++&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; if &lt;code&gt;nums[whitePointer]&lt;/code&gt; = &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;white&lt;/code&gt; then,&lt;br&gt;
 &lt;code&gt;whitePointer++&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; if &lt;code&gt;nums[whitePointer]&lt;/code&gt; = &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;blue&lt;/code&gt; then,&lt;br&gt;
 &lt;code&gt;swap(whitePointer,bluePointer)&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;bluePointer--&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;step-4&lt;/strong&gt; end.&lt;/p&gt;

&lt;p&gt;look at this picture for a better understanding.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dj60vgAT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ex18o3oghvml2pawkcb8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dj60vgAT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ex18o3oghvml2pawkcb8.png" alt="Sort an array of 0s, 1s and 2s" width="880" height="1245"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Java&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sortColors&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

      &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;red&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;white&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;redPointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;whitePointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bluePointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;whitePointer&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;bluePointer&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;

            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;whitePointer&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;

            &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;

                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;red:&lt;/span&gt;
                    &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;whitePointer&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;redPointer&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;redPointer&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
                    &lt;span class="n"&gt;whitePointer&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;white:&lt;/span&gt;
                    &lt;span class="n"&gt;whitePointer&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nl"&gt;blue:&lt;/span&gt;
                    &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;whitePointer&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bluePointer&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;bluePointer&lt;/span&gt;&lt;span class="o"&gt;--;&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;swap&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;firstIndex&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;secondIndex&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;firstIndex&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;firstIndex&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;secondIndex&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;secondIndex&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Time Complexity⏱️&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;loop running from whitePointer to bluePointer, then&lt;br&gt;
Time Complexity: &lt;strong&gt;O(n)&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Space Complexity⛰️&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;the algo is not using any extra space then ,&lt;br&gt;
Space Complexity: &lt;strong&gt;O(1)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading this article I tried to stay clean &amp;amp; simple in my explanations and if you like this article then like and share it with your devs friend.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>java</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>React JS Interview(Part-2)</title>
      <author>Atul Bhatt</author>
      <pubDate>Thu, 23 Dec 2021 10:45:32 +0000</pubDate>
      <link>https://dev.to/atulbhattsystem32/react-js-interviewpart-2-41bm</link>
      <guid>https://dev.to/atulbhattsystem32/react-js-interviewpart-2-41bm</guid>
      <description>&lt;p&gt;So this is the &lt;code&gt;second blog post&lt;/code&gt; where I'm sharing some more important questions that you may stumble upon while giving a &lt;code&gt;React JS or just a JS interview.&lt;/code&gt; Even if you don't encounter any of these questions in your interview it will be good to check them out just for finding out how many of them you know well. Let's start.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;What is a pure function?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;What is a HOC?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Give some examples of HOC you have used.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;What is render props?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Custom Hooks?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Difference between Custom Hooks and Functions and Component?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Explain the working of Virtual DOM in detail.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;What is reconciliation in react?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;What are controlled and Uncontrolled components?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Which one is better-controlled or uncontrolled components?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;What is Memoization and how it can be achieved in React?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Do you know what is a toolchain?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;What is code splitting in React and how we can achieve it?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;What is hoisting in JavaScript?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;What is the difference between Array.forEach() and Array.map()?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Explain event loop?&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Name one JS engine.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Is Javascript Object Oriented? If not then what type it is?&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Some JS snippets to try:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Snippet1

let a = [1,2,3,4,5]
let b = a
b[3] = 10
let c = b
console.log(a,b,c)
//Output: ??
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Snippet2


let obj1= {name:"atul", age:24, 
           hobbies:['reading books', 
           'writing blogs','exercising', 'poetry']}
let obj2 = obj1
delete obj2['hobbies']
console.log(obj1, obj2)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Snippet3


const aa  = 5
const bb = [12,23,543,56]
const cc = {name: "atul", age:24}
ac= 10 //What will happen? Is this Ok.
bb[3] = 9
bb[4] = 12
cc['Age'] = 'greater than 18'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Snippet4


let myself = {
  name: "atul",
  age: 24,
  hobbies: ["reading books", "writing blogs", "exercising", "poetry"],
  favourites: {
    movies: ["Iron Man", "End Game", "Spiderman"],
    Sports: ["Cricket", "Football", "Basketball", "Badminton"],
    song: ["Legends Never Die", "Chidiya: Vilen", "etc", "etc..."]
  }
};

let yourself = { ...myself };
yourself["hobbies"] = ["Guitar playing", "playing football", "Dancing"];

let newSelf = {
  ...myself
};
newSelf.favourites.movies = ["Star Wars", "Ice Age", "Batman", "Flash"];

console.log("myself:", myself);
console.log("yourself:", yourself);
console.log("newself", newSelf);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Here is link to all the questions asked above with implementation, so that you don't feel slacking off with what will happen in each case.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag__replit"&gt;
  &lt;iframe height="550px" src="https://repl.it/@AtulBhatt/JSInterview2?lite=true"&gt;&lt;/iframe&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;I will be ending this article here for now. I'll continue it in the next part with more questions that will cover more in-depth questions. So see you around here next time.👋&lt;br&gt;
Have an insightful day 😄.&lt;/code&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>interview</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Frontend unit testing</title>
      <author>Anton</author>
      <pubDate>Thu, 23 Dec 2021 10:32:13 +0000</pubDate>
      <link>https://dev.to/antmik/frontend-unit-testing-15nh</link>
      <guid>https://dev.to/antmik/frontend-unit-testing-15nh</guid>
      <description>&lt;p&gt;Javascript was invented a few decades ago. Initially was used for small in-browser interactions. Though in recent ten years javascript passed through huge evolution. It is mostly related to the invention of SPAs (single page applications) and NPM package manager. Which gave superpowers to the already known Javascript. With those transformations, the code base started to become larger and more complex. A larger code base is more vulnerable to errors. In this article, we will see how to make a codebase resistant to errors. At least to reduce part of them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Unit testing?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We are not gonna go into details about what the Units are. Briefly saying, software engineering best practices suggest separating the code into small components or modules. Such separation will increase the maintainability and readability of code.&lt;/p&gt;

&lt;p&gt;Going back to our topic. Unit tests are responsible for keeping our code correctly functioning when introducing new changes. They are small interactions with specific functions or components. As a result of these interactions, unit tests expect to receive specific responses from the component/function. At least the core functions of an application should be tested.&lt;/p&gt;

&lt;p&gt;To simplify, let’s use a real-life example. You want to buy a box of six eggs. What should you check?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Is it a box of eggs or something else&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Are there eggs at all&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Are there six eggs or less&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Is there a broken egg&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Are they the size you wanted&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What if I don’t write unit tests?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nothing happens. At least from first sight. But as the larger your codebase grows harder becomes to maintain it and debug. Sometimes you may introduce a bug and don’t mention it. Then after weeks of development, it pops up and crashes the application. You start panicking and debug every bit of your code. After hours or even days spent debugging you figure out the problem was in a small mistake.&lt;/p&gt;

&lt;p&gt;What if somebody told you could’ve avoided this situation? Or at least reduce the number of them. One of the solutions is Unit tests.&lt;/p&gt;

&lt;p&gt;Sometimes it may seem boring to write tests. You just want to be in the free flight with the code with creativity fireworks exploding every single minute of the work. Though I’d like to warn you (like your grandma) if start falling you didn’t take a parachute.&lt;/p&gt;

&lt;p&gt;Yes, there are cases when you don’t need any tests. For example, you develop a prototype that never will go to production. Here is the goal not to develop a stable app, but a proof of concept.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do they work?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the modern javascript environment, there are a variety of libraries making testing comfortable for developers. Some of the most popular are &lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt;, &lt;a href="https://jasmine.github.io/"&gt;Jasmine&lt;/a&gt;. They have built-in methods. The core are “expect” methods. Which take a method/component and check whether the output is the one we expect to receive.&lt;/p&gt;

&lt;p&gt;Let’s take jasmine for example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A suite is just a function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;and so is a spec&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;**=**&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toBe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;When to write them?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are a variety of approaches to unit tests. Each developer has his own preferences related to testing. Also, each company has its guidelines and requirements for testing software.&lt;/p&gt;

&lt;p&gt;TDD approach suggests writing tests beforehand and then implementing code. However, this approach fits systematic software development when almost everything is described already in the technical overview. In many cases, you choose solutions and write methods in the process. That means methods written before tests.&lt;/p&gt;

&lt;p&gt;Even in that case I strongly suggest writing tests step by step. You’ve written a method, write unit tests. Otherwise, you end up with a long code with many methods or dependencies involved. And when you will start testing it can turn into a strong headache.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mocking data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The goal of unit tests is to check specific units such as class, component, function. That means you need to ignore all non-relevant code. Yet many components have external dependencies on third-party libraries or other components. In this case, within the unit test we need to replace these dependencies with static code which will simulate responses and states.&lt;/p&gt;

&lt;p&gt;Jasmine for instance has already built-in methods for mocking data. Such as &lt;strong&gt;createSpyObj&lt;/strong&gt; or &lt;strong&gt;spyOn&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test coverage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Each time you build tests ensure they are really testing what you need. There are many cases when test passes and it is green, but in the reality, it didn’t check anything or checked the wrong statement.&lt;/p&gt;

&lt;p&gt;Another mistake could be not putting expectations to the test. But this case is easier to discover because testing frameworks such as Jasmine will write “&lt;strong&gt;NO EXPECTATIONS…&lt;/strong&gt;” before each tets case lacking expectation. Even the test will pass, though you will see it’s useless.&lt;/p&gt;

&lt;p&gt;Be careful with test coverage. You have to check whether all or most of the cases are covered by the test.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To conclude&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The main goal of the unit tests is to provide stable work for development teams.&lt;/p&gt;

&lt;p&gt;Let’s recap:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Test &lt;strong&gt;all&lt;/strong&gt; possible case &lt;strong&gt;scenarios&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check the level of &lt;strong&gt;code coverage&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**Mock **any external classes/services&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don’t test &lt;strong&gt;third-party&lt;/strong&gt; libraries.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Write tests&lt;/strong&gt; as soon as you progress with the development. Don’t wait until the end&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://jasmine.github.io/"&gt;Jasmine&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cover gif. &lt;a href="https://imgur.com/gallery/tPPNeaJ"&gt;“Completely obliterate the car”&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>angular</category>
      <category>webdev</category>
      <category>testing</category>
    </item>
    <item>
      <title>5 Best Courses to learn Blockchain for Beginners in 2022</title>
      <author>javinpaul</author>
      <pubDate>Thu, 23 Dec 2021 09:59:03 +0000</pubDate>
      <link>https://dev.to/javinpaul/5-best-courses-to-learn-blockchain-for-beginners-in-2022-2me4</link>
      <guid>https://dev.to/javinpaul/5-best-courses-to-learn-blockchain-for-beginners-in-2022-2me4</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.shareasale.com/r.cfm?b=1713885&amp;amp;u=880419&amp;amp;m=105464&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iAUmJF5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1838/1%2AiOO5nqTh2hNDqNJV6c9REg.jpeg" alt="10 Best Blockchain Courses and Certification" width="880" height="590"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, If you want to learn Blockchain in 2022 and looking for best resources to learn Blockchain then you have come to the right place. &lt;/p&gt;

&lt;p&gt;Earlier, I have shared &lt;a href="https://dev.to/javinpaul/6-best-websites-to-become-a-blockchain-developer-in-2022-3han"&gt;best websites to learn Blockchain in 2022&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/best-blockchain-courses-and-certification-in-2020-63729f8f04d0"&gt;best blockchain certifications&lt;/a&gt; as well as &lt;a href="https://www.java67.com/2018/02/5-free-blockchain-technology-courses.html"&gt;best free Blockchain courses&lt;/a&gt; and in this article I am going to share the best blockchain courses for beginners to learn in 2022. &lt;/p&gt;

&lt;p&gt;If you're involved in the cryptocurrency space then you've probably heard about blockchain. Unless you're living under a rock...&lt;/p&gt;

&lt;p&gt;I'm talking about this new technology that offers what cryptocurrencies were most dangerous about... safety. With blockchain, transaction safety is a must every time. Big companies are investing big stacks of money to find experts in this field.&lt;/p&gt;

&lt;p&gt;A blockchain expert's salary can go as high as $150,000 per year. So yeah, if you were thinking of learning about &lt;a href="https://javarevisited.blogspot.com/2020/07/top-5-online-courses-to-learn-blockchain.html"&gt;blockchain&lt;/a&gt;, this is the right time to do so.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.shareasale.com/r.cfm?b=1713895&amp;amp;u=880419&amp;amp;m=105464&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--suP16yO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/originals/0b/00/0c/0b000cd4a0644af5f6573891461b57ad.png" alt="Blockchain Risk Assessment and Enterprise Management Framework | 101  Blockchains | Blockchain, Blockchain cryptocurrency, Blockchain technology" width="880" height="879"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-best-courses-to-learn-blockchain-technology-in-2022"&gt;
  &lt;/a&gt;
  5 Best courses to learn Blockchain technology in 2022
&lt;/h2&gt;

&lt;p&gt;If you want to learn Blockchain but wondering where to start then don't worry, I am going to share with you the 5 best online cures you can join to learn Blockchain in 2022. These are truly the best courses from sites like Udemy, 101 Blockchain, Coursera, and many others.&lt;/p&gt;

&lt;p&gt;Keep reading to find out the best courses that will provide you with solid knowledge about blockchain.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-certified-enterprise-blockchain-professional-cebp"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.shareasale.com/r.cfm?b=1713885&amp;amp;u=880419&amp;amp;m=105464&amp;amp;urllink=&amp;amp;afftrack="&gt;Certified Enterprise Blockchain Professional&lt;/a&gt; (CEBP)
&lt;/h3&gt;

&lt;p&gt;This is one of the most popular Blockchain certifications from 101 Blockchain, a site specialized in quality Blockchain training material.&lt;/p&gt;

&lt;p&gt;This is an action-based course for those who want to learn not just what is blockchain and basics are but also go one step ahead and want to learn how to approach Blockchain implementation. This course will teach you how to do that with actional tools.&lt;/p&gt;

&lt;p&gt;This is also one of the most complete courses I found on Blockchain as it does not just cover Blockchain basics and implementation but also different Blockchain networks like Ethereum and the use of Blockchain in the real world, particularly in the finance industry.&lt;/p&gt;

&lt;p&gt;This is a 4-week program, provided you spend 3 to 4 hours each week but it's completely flexible and you can learn as per your convenience and schedule.&lt;/p&gt;

&lt;p&gt;In terms of cost, this is a bit costly especially if you compare that to Udemy and Coursera courses but it's worth it. It will cost you around $397 to enroll in the program but you can also use my code BCHAIN30 to gain a 30% discount, especially for javarevisited readers.&lt;/p&gt;

&lt;p&gt;Here is the link to join this program - &lt;a href="https://www.shareasale.com/r.cfm?b=1713885&amp;amp;u=880419&amp;amp;m=105464&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;strong&gt;Certified Enterprise Blockchain Professional&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.shareasale.com/r.cfm?b=1713885&amp;amp;u=880419&amp;amp;m=105464&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QeUfhdzk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-8gjv2XGlyfA/YbXWTAJAY4I/AAAAAAAAqg8/6q6yjOuSe8Ul6w2kFpe-i_hbxl9tAnFFgCNcBGAsYHQ/w471-h228/image.png" alt="5 Best Courses to learn Blockchain in 2022" width="471" height="227"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-blockchain-az-learn-how-to-build-your-first-blockchain"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fbuild-your-blockchain-az%2F"&gt;Blockchain A-Z: Learn how to build your first blockchain&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;People say that this course is the best one you can find out there. Blockchain isn't the only thing you'll learn in it. It comes from Udemy by the way and it has more than 76,000 students as we speak.&lt;/p&gt;

&lt;p&gt;High school level mathematics, as well as basic python knowledge, are required in order to watch the course. The python part can get a bit boring but don't worry because the course is overall exciting.&lt;/p&gt;

&lt;p&gt;So by taking this course you'll learn stuff like how to build a blockchain and why is it important, the theory behind cryptocurrency transactions, blockchains, and smart contracts, and how to create your own currency and smart contract. Pretty awesome right?&lt;/p&gt;

&lt;p&gt;The best part is that many colossal companies like Apple and Volkswagen, use this course to educate their employees on the blockchain.&lt;/p&gt;

&lt;p&gt;Not only will you transform from a novice to a blockchain expert but you'll also get the required tech instincts.&lt;/p&gt;

&lt;p&gt;So if you're a college student looking to make your own crypto &amp;amp; blockchain career or someone that is just fascinated by this whole thing, the "Blockchain A-Z: Learn how to build your first blockchain" course is the perfect fit for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to join this course - **&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fbuild-your-blockchain-az%2F"&gt;Blockchain A-Z: Learn how to build your first blockchain&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fbuild-your-blockchain-az%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9D3zTF86--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/WqiqqfY6OKPbG_CPsf9CCxDlBfh1LapbvoCL6QGCEc6X2__H5TpSt3WI-fMFCt5W0573KGLuBt4pO4kINlZ7K28ozhyrf22Nl7gEX1lUq-Vk2vHs7S_Wy4hURPkPrAfAvBiRDpxz%3Dw520-h251" alt="best Blockchain course for Beginners" width="519" height="251"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-blockchain-specialization"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fblockchain"&gt;Blockchain Specialization&lt;/a&gt;**
&lt;/h3&gt;

&lt;p&gt;And let's close this up with a Coursera blockchain course. In the Blockchain Specialization course, Bina Ramamurthy will teach you the Next Frontier in IT. More specifically, you'll learn to understand smart contracts, you'll get a core idea of blockchain that enables automation, autonomy, scalability, and transparency.&lt;/p&gt;

&lt;p&gt;But that's not all of it. You'll also learn how to design and program smart contracts and decentralized applications. And the best of them all... after you finish the course, you'll be able to think of innovative application models, leveraging blockchain technology.&lt;/p&gt;

&lt;p&gt;You'll learn to work on the Ethereum blockchain platform as well.&lt;/p&gt;

&lt;p&gt;This course is offered by The State Univeristy of New York and the University of Buffalo. The course is ideal for programmers and designers involved in developing and implementing blockchain applications, and anyone who is interested in understanding its potential.&lt;/p&gt;

&lt;p&gt;By the way, you can either join this specialization individually, or you can also join the &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus"&gt;Coursera Plus&lt;/a&gt;&lt;/strong&gt;, a subscription plan from Coursera which gives you unlimited access to their most popular courses, specialization, professional certificate, and guided projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fblockchain"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--20UfHpxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/Anzcdr_vL6rcKRhrcOmlnkORxg9KTeT0vGyUshrAAuzc8K5bCvQ7V2mZRMxhG5iwsFHGZ_7LVV91mhw4lnhmEJVNvzxAqOJOSXx742MZpBf2UH6y0OG9pNFTrX1qNeFs6LWkUSWz%3Dw551-h224" alt="best Blockchain Certification for beginners" width="551" height="224"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-become-a-blockchain-developer"&gt;
  &lt;/a&gt;
  4 . &lt;a href="https://www.educative.io/courses/hands-on-blockchain-hyperledger-fabric?affiliate_id=5073518643380224"&gt;Become a blockchain developer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This course is different because it's the only Educative course on this list. But why is that important? Because Educative is an online learning platform that allows you to run code in the browser and learn along the way.&lt;/p&gt;

&lt;p&gt;As for the course, it's one of the most complete courses you'll find out there. People with No experience can easily take it. &lt;/p&gt;

&lt;p&gt;The course starts with basic cryptography in order to build a good understanding of the blockchain and its value. Then, you will explore the Hyperledger Fabric technology by IBM. This is where the Educative features will come in handy.&lt;/p&gt;

&lt;p&gt;Parts of this course are: deploy your own blockchain network, deploy chain code on it and create an application that invokes your chain code running in fabric network as well as learn to manage fabric user identities in your application using wallets.&lt;/p&gt;

&lt;p&gt;Educative with its amazing software will help you reach the expertise level you need in order to find success.  &lt;/p&gt;

&lt;p&gt;By the way, you can either join this course individually or you can get an &lt;strong&gt;&lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;Educative Unlimited&lt;/a&gt;&lt;/strong&gt; subscription (recommended) to get access to their 250+ high quality, text-based, interactive courses to learn key skills for coding interviews, software development, and technology.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/hands-on-blockchain-hyperledger-fabric?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---qqwzIkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/2p8ZqxqmqK-0Q0-49bU_hlsnk7ZBiRGS6sCkmUZN6J0YVSrSB5C-MEh8U9NC1blZ6ltlWl2xtv5Vj2ajYcLtm99N_W-TIBEtXAWaGRSavrlBz3Da7oLQDnY2CcuPDbfFjDQPXRhY%3Dw504-h252" alt="best Educative course to learn Blockchain" width="504" height="252"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-learning-blockchain-development-with-eos-and-c"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Flearning-blockchain-development-with-eos-and-cpp%2F"&gt;Learning Blockchain Development with EOS and C++&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This course is also crazy helpful but it's a bit different from the previous one. This one is more specialized. There are no general speaking things that you can easily find online. Everything provided in this course is of insane value and only experts know it.&lt;/p&gt;

&lt;p&gt;Speaking of experts, the program's instructor is Jackson Kelly. Jackson Kelly is a software engineer currently working for Amazon. I think that Amazon only hires the best of them so further explanation is not necessary.&lt;/p&gt;

&lt;p&gt;You'll learn about EOS, how to design and deploy smart contracts to the EOS blockchain, how to deploy your own token to the EOS blockchain, how to airdrop tokens, and how to set up an IDE with EOS. Of course, that's not all of it. I'm just providing you with an outline.&lt;/p&gt;

&lt;p&gt;One of the main things that this course aims to achieve is to teach you how to build production-ready apps with EOS.&lt;/p&gt;

&lt;p&gt;If you're a programmer looking to leverage your blockchain knowledge or an engineer who wants to understand EOS and how to build dApps with it, then the "Learning Blockchain Development with EOS and C++" is a really good choice for you.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Here is the link to join this course - *&lt;/em&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Flearning-blockchain-development-with-eos-and-cpp%2F"&gt;Learning Blockchain Development with EOS and C++&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Flearning-blockchain-development-with-eos-and-cpp%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8WFdLYtd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/9_Xl09qIcgbfib7BJYemwsriHKGL5z72Xjes1hz85IxeRzkSQzcnYyT-DCn2Wveuw2h9rkBJso89ZhNbsJo4_GA4-hjvccuGK3g89fkh44Xey13Eg4uwR82wq-U3eAelyex5eCY2%3Dw446-h336" alt="best online course to learn Blockchain with C++" width="446" height="336"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-ethereum-and-solidity-the-complete-developers-guide"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fethereum-and-solidity-the-complete-developers-guide%2F"&gt;Ethereum and Solidity: The Complete Developer's Guide&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;As you might understand from the tile, this course is all about Ethereum and Solidity. Concepts that are closely related to the blockchain.&lt;/p&gt;

&lt;p&gt;Don't worry if you don't know what these terms mean. Because I'll try to give you a very simple explanation.&lt;/p&gt;

&lt;p&gt;Ethereum is a cryptocurrency. One of the most famous ones. In value, it's the second most expensive cryptocurrency in the world. After Bitcoin of course. If you've invested in cryptos before, you certainly know of it.&lt;/p&gt;

&lt;p&gt;In simple words, [Solidity] is a programming language for writing smart contracts.&lt;/p&gt;

&lt;p&gt;Some of the key takeaways are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Design, test, and deploy smart contracts, &lt;/li&gt;
&lt;li&gt;  building compelling blockchain applications using the &lt;a href="https://javarevisited.blogspot.com/2021/11/top-5-courses-to-learn-ethereum-for.html"&gt;Ethereum Blockchain&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;  Learning the true purpose and capabilities of Ethereum and Solidity, &lt;/li&gt;
&lt;li&gt;  and Seeing practical examples to comprehend what blockchain and mining are.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A windows/mac/Linux device is necessary as well as basic knowledge of Javascript and NPM. It should be mentioned that this is another bestseller course with over 78,000 students as we speak.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Here is the link to join this course *&lt;/em&gt;- &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fethereum-and-solidity-the-complete-developers-guide%2F"&gt;Ethereum and Solidity: The Complete Developer's Guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fethereum-and-solidity-the-complete-developers-guide%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x1joe2Bx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/W87G7rcjsF9CydK5L_67Z1hXU_aZ42IXooy8sKIHWNFdwFGOQBRaKN_RxEwtNYQebeX1eVGHafYKB9LqIOOEZzDATjX7p4TPfpS_u833H-QxSgmKKFBbAYrrAG-7RO01EBiiFL-c%3Dw421-h237" alt="best Udemy course to learn Blockchain and Solidity" width="421" height="237"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all about how to learn Blockchain in 2022. These were the best blockchain courses you can find out there. Each of them is better at something specific and overall these courses are capable of turning you into a blockchain expert in a matter of weeks or even days.&lt;/p&gt;

&lt;p&gt;If you want to start your career as a Blockchain developer in 2022, I highly recommend you to join one of these courses, and if you are really determined, go for a Blockchain certification like the &lt;a href="https://www.shareasale.com/r.cfm?b=1713885&amp;amp;u=880419&amp;amp;m=105464&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;strong&gt;Certified Enterprise Blockchain Professional&lt;/strong&gt;&lt;/a&gt; by 101 Blockchains to move ahead from the competition.&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Blockchain Technology articles&lt;/strong&gt; you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/7-free-courses-to-learn-blockchain-in-2020-764e66b47ebe"&gt;7 Free Courses to learn blockchain in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/best-blockchain-courses-and-certification-in-2020-63729f8f04d0"&gt;10 Best Blockchain Courses for Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2020/07/top-5-websites-to-learn-blockchain-in.html"&gt;Top 5 Websites to learn Blockchain 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hackernoon.com/10-machine-learning-data-science-and-deep-learning-courses-for-programmers-7edc56078cde"&gt;10 Courses to Learn Data Science for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hackernoon.com/top-5-courses-to-learn-python-in-2018-best-of-lot-26644a99e7ec"&gt;Top 5 Courses to Learn Python in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/07/top-5-tableau-online-courses-and-certifications-for-data-science-engineers.html"&gt;Top 5 Courses to Learn Tableau for Data Science&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2020/06/top-5-courses-to-learn-microsoft-power-BI.html"&gt;Top 5 Courses to learn Power B.I. in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/10/top-8-python-libraries-for-data-science-machine-learning.html"&gt;Top 8 Python Libraries for Data Science and Machine Learning&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2019/01/5-free-courses-to-learn-machine-and-deep-learning-in-2019.html"&gt;Top 5 Free Courses to Learn Machine Learning&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hackernoon.com/top-5-courses-to-learn-python-in-2018-best-of-lot-26644a99e7ec"&gt;10 Machine Learning and Deep Learning Courses for Programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hackernoon.com/10-reasons-to-learn-python-in-2018-f473dc35e2ee"&gt;10 Reasons to Learn Python in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/08/top-5-python-books-for-data-science-and-machine-learning.html"&gt;5 Books to learn Python for Data Science &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hackernoon.com/10-free-python-programming-courses-for-beginners-to-learn-online-38312f3b9912"&gt;10 Free Courses to Learn Python for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hackernoon.com/top-5-data-science-and-machine-learning-course-for-programmers-e724cfb9940a"&gt;Top 5 Courses to Learn Advance Data Science&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hackernoon.com/top-5-tensorflow-and-ml-courses-for-programmers-8b30111cad2c"&gt;Top 5 Courses to Learn TensorFlow for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you like these *best Blockchain courses then please share them *with your friends and colleagues if you find them useful. If you have any questions or feedback, then please drop a note.&lt;/p&gt;

&lt;p&gt;P. S. - If you are looking for a free course to learn Blockchain technology from scratch in 2022 then you can also check out &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Funderstanding-blockchain-technology%2F"&gt;The Complete Course On Understanding Blockchain Technology [FREE]&lt;/a&gt;&lt;/strong&gt; Course on Udemy. This is a 50-minute long crash course on blockchain technology for beginners. It's completely free and you just need a free udemy account to access this course.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>development</category>
      <category>programming</category>
      <category>coding</category>
    </item>
    <item>
      <title>Host websites from mobile for free</title>
      <author>ShGI</author>
      <pubDate>Thu, 23 Dec 2021 09:57:13 +0000</pubDate>
      <link>https://dev.to/shubham_ingale/host-websites-from-mobile-for-free-36nc</link>
      <guid>https://dev.to/shubham_ingale/host-websites-from-mobile-for-free-36nc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hosting-from-mobile"&gt;
  &lt;/a&gt;
  Hosting from mobile
&lt;/h2&gt;

&lt;p&gt;Hosting is most important step to make your website accessible for world.&lt;br&gt;
there are some services which will help you to host from you Android mobile.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MoUIBL6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0gx7pg48d02pvwntx81.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MoUIBL6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0gx7pg48d02pvwntx81.jpeg" alt="GitHub pages banner" width="739" height="415"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github-pages"&gt;
  &lt;/a&gt;
  GitHub pages
&lt;/h3&gt;

&lt;p&gt;You can host your repository folder , branch or whole repo by enabling pages from repo settings. Get more information on &lt;a href="http://pages.github.com"&gt;pages.github.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GkclgleT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zdrtbv1jxamu8yu5azn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GkclgleT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zdrtbv1jxamu8yu5azn.png" alt="firebase hosting banner" width="333" height="151"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#firebase-hosting"&gt;
  &lt;/a&gt;
  Firebase hosting
&lt;/h3&gt;

&lt;p&gt;Firebase hosting is better because it provides domain .web.dev&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-you-can-host-website-on-firebase-via-mobile"&gt;
  &lt;/a&gt;
  How you can host website on firebase via mobile.
&lt;/h4&gt;

&lt;p&gt;You've to download app called &lt;a href="https://play.google.com/store/apps/details?id=com.termux"&gt;termux&lt;/a&gt;&lt;br&gt;
Once you download termux you've to enter firebase commands in termux and site will be live.&lt;br&gt;
link &lt;a href="https://www.javatpoint.com/firebase-hosting"&gt;firebase commands&lt;/a&gt;&lt;br&gt;
if you've any Query about firebase hosting , &lt;a href="https://discord.gg/WMWM5eb2px"&gt;ask us&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3EWdlgy7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lypx5qo6xcnz41gvy8x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3EWdlgy7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lypx5qo6xcnz41gvy8x.png" alt="Netlify banner" width="310" height="163"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#netlify"&gt;
  &lt;/a&gt;
  Netlify
&lt;/h3&gt;

&lt;p&gt;Netlify also offers you free hosting with domain .netlify.app.&lt;br&gt;
You've to signup to Netlify and authenticate your gh/gl/bitbucket repo with site.&lt;/p&gt;

&lt;p&gt;Thanks for reading&lt;br&gt;
Written by &lt;a href="https://codebysgi.netlify.app"&gt;shubham&lt;/a&gt; with &lt;code&gt;&amp;lt;3&lt;/code&gt;.&lt;/p&gt;

</description>
      <category>firebase</category>
      <category>webdev</category>
      <category>android</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Things to Consider When Choosing a Technical Partner for Your Business</title>
      <author>Kateryna Pakhomova</author>
      <pubDate>Thu, 23 Dec 2021 09:32:32 +0000</pubDate>
      <link>https://dev.to/kateryna_pakhomova/things-to-consider-when-choosing-a-technical-partner-for-your-business-2a4p</link>
      <guid>https://dev.to/kateryna_pakhomova/things-to-consider-when-choosing-a-technical-partner-for-your-business-2a4p</guid>
      <description>&lt;p&gt;&lt;strong&gt;The original article was written by SoftFormance &lt;a href="https://www.softformance.com/blog/choosing-a-technical-partner-for-your-business/"&gt;https://www.softformance.com/blog/choosing-a-technical-partner-for-your-business/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Back in 2017, John, the owner of CargoDrive – a cargo transportation company, sought to develop an online marketplace for cargo transportation.&lt;/p&gt;

&lt;p&gt;He had a dream to build an online place where vehicle owners and companies can effectively connect and help each other.&lt;/p&gt;

&lt;p&gt;So he started looking for a technical partner as he had no background in software development.&lt;/p&gt;

&lt;p&gt;After two quick weeks, John found a company DreamSoft which offered custom software development services.&lt;/p&gt;

&lt;p&gt;They jumped straight into the development phase and kept working in 2-week iterations.&lt;/p&gt;

&lt;p&gt;Eleven months later into development and the platform was still far from finished. Budget spent three times over the initial “pre-sale” estimate.&lt;/p&gt;

&lt;p&gt;With that unfinished work and zero understanding of why it happened so, John started looking for a new development team.&lt;/p&gt;

&lt;p&gt;This time John decided to focus on trust and transparency.&lt;/p&gt;

&lt;p&gt;So he turned to a friend who owned a 3-devs agency that started just 6 months ago.&lt;/p&gt;

&lt;p&gt;Guys were showing pretty steady progress and after another 6 months into development, the platform started to take its shape.&lt;/p&gt;

&lt;p&gt;Still, the process was a bit clumsy, some things were misunderstood and the team had to re-do a lot of things 2-3 times.&lt;/p&gt;

&lt;p&gt;Even though it seemed like the software is almost done, they could not completely finalize it after another two months.&lt;/p&gt;

&lt;p&gt;So John had no choice but to stop a partnership.&lt;/p&gt;

&lt;p&gt;Eventually, on Linkedin, he came across yet another company that stated that 70% of their client projects came to them from previous teams.&lt;/p&gt;

&lt;p&gt;John approached those guys desperately looking to finish his marketplace and they agreed to help.&lt;/p&gt;

&lt;p&gt;Long story short: five more months re-doing UX, design, and functionality John with his new team launched the marketplace to beta users and now John keeps growing the platform.&lt;/p&gt;

&lt;p&gt;Guess what?&lt;/p&gt;

&lt;p&gt;The names in this story are made-up. &lt;/p&gt;

&lt;p&gt;But the story is real.&lt;/p&gt;

&lt;p&gt;The last company in this story is our agency SoftFormance and John is our client.&lt;/p&gt;

&lt;p&gt;As follows, in most cases, finding a technical partner seems to be a lost cause. But we don’t want you to be drowned in doubts or fear of not choosing the right. &lt;/p&gt;

&lt;p&gt;This is why we’d like to share the best process of shortlisting candidates for a tech partner.&lt;/p&gt;

&lt;p&gt;Of course, it’s not a cure-all potion, but at least it will help you to find a good development team. &lt;/p&gt;

&lt;p&gt;So if you don’t want to be like John and instead start your software on the first try, we’d highly recommend using the guidelines listed below in this great article:&lt;/p&gt;

&lt;p&gt;How to find a tech partner and what to know about them? &lt;br&gt;
Capabilities&lt;br&gt;
When you go to the supermarket for groceries, you want to buy tomatoes, milk, pastries, ham, fish, and salad. Now, imagine that this supermarket is divided into several stores across the city. For example, one store sells only vegetables, another sells only fruit, and the other department sells only fish. &lt;/p&gt;

&lt;p&gt;Which store would you choose: the one where you can buy all the products or the stores where everything is sold separately? Of course, we will not pay attention to quality or price in this situation. Let’s assume all products are of the same quality and value. So what?&lt;/p&gt;

&lt;p&gt;Obviously, a supermarket with all the products will suit you more than a few shops around the city that make you spend a whole day on the road just to buy groceries.&lt;/p&gt;

&lt;p&gt;The same goes for the software world.&lt;/p&gt;

&lt;p&gt;There are full-cycle and part-cycle development teams. Part-cycle agencies provide only one type of service and can be partners only in one thing, for example, in design, product strategy, or digital marketing. &lt;/p&gt;

&lt;p&gt;Full-cycle agencies differ in their approach and number of specializations. Such technical partners provide a full range of services, which include: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YJmc6ese--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k98y4ps8g13mpj9xlhdy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YJmc6ese--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k98y4ps8g13mpj9xlhdy.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Tech and biz consultancy: In other words, it’s a discovery phase. In SoftFormance, we call it a software startup workshop. During it, we collect and produce essential data, analyze the project feasibility, delineate functional and non-functional requirements, research target market, advise on the business model, determine a tech stack, as well as outline the whole development process. &lt;br&gt;
Web development: Crafting client-centric web apps that range from MVPs for startups to feature-packed and digitally transformative enterprise solutions. &lt;br&gt;
Mobile development: Development of native and hybrid mobile apps. &lt;br&gt;
UX/UI design: Designing websites and visually appealing applications along with putting users first. Design services can also include prototyping and product validation. &lt;br&gt;
QA: The quality of products, including software ones, influences their popularity among users. Testing ensures that everything works as it should and that the product meets the industry requirements. &lt;br&gt;
DevOps: Being a portmanteau of “development” and “operations,” DevOps helps deliver apps faster. According to DORA’s 2019 State of DevOps Report, companies that use DevOps practices have a 7x lower change failure rate and deploy 208x times faster. &lt;br&gt;
Support: It helps your customers to use your product more effectively. Support is not only about maintenance and uptime guarantee. It also stands for new features and constant improvement. Although 60% of a product’s cost is maintenance, 60% of maintenance cost is software’s improvement. &lt;br&gt;
Still, capabilities alone aren’t enough to choose a technical partner. &lt;/p&gt;

&lt;p&gt;Alignment with Your Business Objectives&lt;br&gt;
Take into account whether the development team understands your business specifics and aligns with your business objectives when choosing a technical partner. &lt;/p&gt;

&lt;p&gt;One of our current projects Opesta.com, where we became tech partners, started just like this. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HJx9BEPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/281dn5nhpqxwxlmrw6ga.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HJx9BEPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/281dn5nhpqxwxlmrw6ga.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Opesta’s co-founder Ethan Sigmon sought a technology partner to make his idea thrive. Ethan is occupied in marketing and helps business owners to set up and promote social media ads. Based on his background, Ethan decided to develop a marketing automation platform for his clients who used Facebook ads. And we meet him with burning eyes full of enthusiasm.&lt;/p&gt;

&lt;p&gt;As follows, we’ve been developing software for startups since 2011, and many of our projects focus on marketing automation. We also use Facebook ads for our agency, so we perfectly knew what experience business owners face at the other side of the fence.&lt;/p&gt;

&lt;p&gt;On the first call, Ethan and SoftFormance’s team realized that our business backgrounds coincide, and we see a clear roadmap of ​​what to do with Ethan’s idea next. &lt;/p&gt;

&lt;p&gt;That’s why SoftFormance, as a technical partner, checked how feasible the business idea was in the first place. During the research, we realized that Ethan’s idea was very cool, but he had a chance to get lost among stronger competitors, such as ManyChat and MobileMonkey. &lt;/p&gt;

&lt;p&gt;So, on the next call, we brainstormed how to transform this business idea. In the end, we decided to create a Facebook marketing automation platform for Shopify owners.&lt;/p&gt;

&lt;p&gt;Here’s the kicker: make sure that your tech partner understands your business, not just the app. &lt;/p&gt;

&lt;p&gt;The high-level list of business specifics includes: &lt;/p&gt;

&lt;p&gt;the current state of similar software use within your market&lt;br&gt;
the newest tech trends &lt;br&gt;
competitors’ products&lt;br&gt;
The easiest way to figure out whether the tech partner understands the business specifics is to schedule a call. And, the questions your potential technology partner asks you on a call define their business background.&lt;/p&gt;

&lt;p&gt;So, are these questions related to technology only? Or are they business-oriented? The examples of “business questions” are:&lt;/p&gt;

&lt;p&gt;Why did you decide to develop such an app? What is your background?&lt;br&gt;
Is this your first business initiative?&lt;br&gt;
How do you plan to market the app? &lt;br&gt;
What is your user retention strategy? &lt;br&gt;
Have you thought of potential business risks for your idea? What are they?&lt;br&gt;
In short, it’s better to work with business veterans than be a guinea pig. &lt;/p&gt;

&lt;p&gt;Communication and Commitment&lt;br&gt;
You expect clear and concise communication from every service-based business. For instance, if you order food, you expect the delivery company to repeat your order, ask if you need any additional sauce to the salad or one more fork, and advise the best meal on their menu. &lt;/p&gt;

&lt;p&gt;Software development is also a service-based business, and it depends much on clear communication. Unfortunately, 56% of software projects are doomed to fail due to poor communication. &lt;/p&gt;

&lt;p&gt;Communication lets you as a business owner be engaged in the development process by being informed about new features, development status, system response latency improvements, or data volume statistics. Also, communication shows how responsible your technical partner is about delivering work. &lt;/p&gt;

&lt;p&gt;We are proud of the communication level we have at SoftFormance. Our main communication rules are consistency, truth, and correspondence. &lt;/p&gt;

&lt;p&gt;By consistency, we understand regular updates on work progress. We’ve established a rule of Wednesday and Friday in our company. &lt;/p&gt;

&lt;p&gt;So, every Monday we meet and discuss the agenda for the following week and inform our clients about it. On Wednesday, all team members send mid-week reports in Slack channels about how much work has been accomplished and whether everything goes well. &lt;/p&gt;

&lt;p&gt;From these mid-week reports, our clients and we understand the progress state and expect certain results by the end of the week. On Friday evening, team members send weekly reports in Slack client channels, including info about all weekly progress, issues, and achievements. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5aKeiyd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mz8rp3oua7a2llslj3sk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5aKeiyd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mz8rp3oua7a2llslj3sk.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Besides, if something goes wrong and we are late with the actual estimate, we never hide it. Instead, we provide details and feedback, even if it’s not a positive one. And this is the rule of truth in SoftFormance. &lt;/p&gt;

&lt;p&gt;Finally, the correspondence rule helps us assign employees with the right skillsets to the particular projects. Thus, devs who love FinTech and are crackerjacks in it are always assigned to these projects. &lt;/p&gt;

&lt;p&gt;It’s not a big surprise that communication is tied to commitment.&lt;/p&gt;

&lt;p&gt;Commitment, in other words, is the extent to which the development team is ready to achieve success with you, treating your project like their own. &lt;/p&gt;

&lt;p&gt;For instance, we worked on a project with a budget estimated at $50K. But due to unpredictable circumstances, the budget grew to $140K, and we paid $70K from our pocket. And this situation clearly shows the extent of our commitment to the clients. &lt;/p&gt;

&lt;p&gt;In most cases, failures and the way a technical partner solves them show the level of their readiness and commitment to take on your project and make a candy out of it. So, when looking for a development team, don’t hesitate to ask them about failures. &lt;/p&gt;

&lt;p&gt;Talking about challenges and their solutions gives you insight into whether you should trust these people. Also, it helps to conclude if technical partner analyses their failures, changes the approach, never does the same, or run away from the problem. Then, they will probably run away from you. Good tech partners will never tell you that everything’s been perfect. &lt;/p&gt;

&lt;p&gt;Besides, if technology partner speaks openly about the problems, it means they are transparent. And this leads us to the next point. &lt;/p&gt;

&lt;p&gt;Transparency&lt;br&gt;
40% of our clients came to us from other technical partners. And almost all of them didn’t know where the development was finished, in which phase the project was and what the next steps would be. Business owners face such issues because the process is not transparent. &lt;/p&gt;

&lt;p&gt;So, when looking for a tech partner, make sure you and a partner are on the same page regarding the working process. &lt;/p&gt;

&lt;p&gt;A good technical partner provides a detailed working plan for a project, starting from the discovery phase. Also, the responsible development team constantly sends updates and gives access to time-tracking and project-management apps. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rJHUVlij--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5l6r4qmaw8zgdewhkjt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rJHUVlij--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5l6r4qmaw8zgdewhkjt.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
So, on the first call, ask a technical provider how do they manage the development process? Which project management tool do they use? Do they give their clients access to the code repository? &lt;/p&gt;

&lt;p&gt;In all, they have to make it easy for you to follow sprints, provide feedback, and relax. If they hide details and don’t give access, then how would you track the project progress? &lt;/p&gt;

&lt;p&gt;Expertise&lt;br&gt;
When you decide to build a house, the first step is to prepare the construction site and pour the foundation. And to do it, you’ll probably seek vendors. At this point, the choice is obvious, you will: &lt;/p&gt;

&lt;p&gt;look for experts in construction site preparation and house foundations but not in interior design or gardening &lt;br&gt;
choose vendors who not only know the types of house foundations but those who have experience in pouring them all&lt;br&gt;
prefer builders who have years of experience rather than 2-month startuppers&lt;br&gt;
Big news: search for a tech partner works the same way. &lt;/p&gt;

&lt;p&gt;So, if you’re looking for a tech partner, choose one that: &lt;/p&gt;

&lt;p&gt;is an expert in the tech world and can suggest innovative solutions that work specifically for your business idea&lt;br&gt;
has an experience equal to knowledge&lt;br&gt;
is on the market for several years&lt;br&gt;
The whole sense of seeking a technical partner is to keep up with the latest tech trends and implement them into the business process. This is why a tech partner has to be like a duck to water in new tech directions to guide the development process and advise on the tech stack that can enhance your specific product. &lt;/p&gt;

&lt;p&gt;For example, at Softformance, we focus on several domains, notably: &lt;/p&gt;

&lt;p&gt;Healthcare &lt;br&gt;
Fintech&lt;br&gt;
Digital marketing&lt;br&gt;
eCommerce&lt;br&gt;
Education&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AQ7v3rMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohvcmg52kvl9b4dd64f7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AQ7v3rMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohvcmg52kvl9b4dd64f7.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
But before you decide to end the qualification process of your tech partner on this phase, make sure to check how well the development team takes their bearings in your sphere. Because sometimes, it’s not enough only to see domains in the company’s portfolio. &lt;/p&gt;

&lt;p&gt;Let’s take healthcare development as an example of this “expertise check.” &lt;/p&gt;

&lt;p&gt;Healthcare software development requires a special approach to data protection. HIPAA (the Health Insurance Portability and Accountability Act) and GDPR (the General Data Protection Regulations) set standards for sensitive patient data protection. So, your technology partner’s availability of physical, process, and network security measures will be the key factor to your decision. &lt;/p&gt;

&lt;p&gt;Besides, every self-respecting healthcare software provider will never hesitate to answer what HEDIS tools are and which criteria they include. &lt;/p&gt;

&lt;p&gt;This means that if you’re looking for a technical partner in healthcare, fintech, or any other sector, you have to take into account their experience received from previous projects and authority to guide you through the process without filling your head with HEDIS, HIPAA, GDPR, NCQA, and similar buzz words. &lt;/p&gt;

&lt;p&gt;Testimonials and references&lt;br&gt;
Have you even made a purchase on Amazon?&lt;/p&gt;

&lt;p&gt;I bet you did. And you probably bought a product that had reviews and at least 4 stars rather than one with an empty profile. &lt;/p&gt;

&lt;p&gt;Similarly, when choosing a tech partner, review real feedback from their clients. The easiest way to do it is to check their Clutch.co profile. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vRX5Tk0C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qy1xcqxbowlvwz9mxrvg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vRX5Tk0C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qy1xcqxbowlvwz9mxrvg.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Another way to get feedback is to ask for a reference from an existing or previous client. The tech partner that delivers value and is proud of their projects will be happy to share contacts. &lt;/p&gt;

&lt;p&gt;Also, you can find testimonials and real client names on the company’s website. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bpl3Jl8_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3v35ew9jz92p4i2rzigq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bpl3Jl8_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3v35ew9jz92p4i2rzigq.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Maintenance and Support&lt;br&gt;
A golden rule is: “Don’t start a partnership before you plan an exit plan.” &lt;/p&gt;

&lt;p&gt;No one wants to be left alone and struggling after the product release. So, ask your technical partner whether they provide technical support and maintenance in the long run. &lt;/p&gt;

&lt;p&gt;At SoftFormance, we provide a 6-month bug-free guarantee after launch. Moreover, we provide our clients with full-time, half-time, or part-time uptime guarantees. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8GprI3DS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k03r17cks14xurpvrngv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8GprI3DS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k03r17cks14xurpvrngv.jpg" alt="Image description" width="880" height="570"&gt;&lt;/a&gt;&lt;br&gt;
Finally, if clients like our services and want to continue with regular maintenance, we offer support retainer packages available by subscription. &lt;/p&gt;

&lt;p&gt;Wrapping Up&lt;br&gt;
The search for a technical partner can be challenging and arduous. But accessing the aforementioned criteria, you can’t go wrong. &lt;/p&gt;

&lt;p&gt;Here’s a final tip: when choosing a tech partner, speak to at least three teams about the development process. Then start a small project with each of them. The team which you like the most in the process is your true tech partner. &lt;/p&gt;

&lt;p&gt;Talking about SoftFormance, we’ve been tech partners hundreds of times. We succeeded and failed alongside our clients but never gave up on them or their idea. This is what your technical partner should be like – reliable, loyal, and always ready to face challenges. &lt;/p&gt;

&lt;p&gt;So, if you are looking for a technology partner and think that only Captain America could be your ideal one, contact us for a consultation and we’ll dispel your doubts.  &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>devops</category>
      <category>django</category>
    </item>
    <item>
      <title>Advance Laravel 8 Interview Questions and Answers 2022</title>
      <author>Ashish Yadav</author>
      <pubDate>Thu, 23 Dec 2021 08:49:26 +0000</pubDate>
      <link>https://dev.to/expoashish/advance-laravel-8-interview-questions-and-answers-2022-4p66</link>
      <guid>https://dev.to/expoashish/advance-laravel-8-interview-questions-and-answers-2022-4p66</guid>
      <description>&lt;h1&gt;
  &lt;a href="#q-1-what-is-serialization-in-laravel"&gt;
  &lt;/a&gt;
  Q. 1: What is Serialization in Laravel?
&lt;/h1&gt;

&lt;p&gt;It's similar to turning an object into JSON, but with the advantage that PHP will remember the native data type of each serialized item (string, array, integer, float, boolean).&lt;/p&gt;

&lt;p&gt;PHP and Javascript can only communicate via strings. You can pass the string "foo" very easily to Javascript. You can pass the number 1 very easily to Javascript. You can pass the boolean values true and false easily to Javascript. But how do you pass this array to Javascript?&lt;/p&gt;

&lt;p&gt;The answer is serialization. In case of PHP/Javascript, JSON is actually the better serialization format:&lt;/p&gt;

&lt;p&gt;**echo json_encode($array)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/advance-laravel-8-interview-questions.html"&gt;Read Full Blog Here....&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>computerscience</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How-to Use Static Stability to Design a Resilient Architecture</title>
      <author>Gert Leenders</author>
      <pubDate>Thu, 23 Dec 2021 08:26:49 +0000</pubDate>
      <link>https://dev.to/aws-heroes/how-to-use-static-stability-to-design-a-resilient-architecture-17p9</link>
      <guid>https://dev.to/aws-heroes/how-to-use-static-stability-to-design-a-resilient-architecture-17p9</guid>
      <description>&lt;h3&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Building a resilient architecture, it could help to separate systems along the control and data plane boundary. Once separated, focus on the data plane for targeting a higher availability. Because of its relative simplicity, a data plane is much better suited for High Availability than a control plane. Finally, introduce static stability by preparing yourself for impairments before they happen. Don't rely on reacting to impairments as they happen, it's less effective. A statically stable design is achieved once the overall system keeps working, even when a dependency becomes impaired!&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;Very recently, while browsing some online AWS documentation, I landed on a page about &lt;a href="https://aws.amazon.com/builders-library/static-stability-using-availability-zones/"&gt;Static stability using Availability Zones&lt;/a&gt;. Although that page had nothing to do with what I was looking after, I found the title quite intriguing. I had never heard about the concept before. Triggered, I decided to read the paper. It turned out to be one of the more interesting papers I've read in a while. The remainder of this post is a brief rehash of the paper, focussed on the core concept and supplemented with my thoughts.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Important note: although the paper originates from AWS, the concepts are not limited to the AWS Ecosystem but are broadly applicable in system design.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#before-we-start"&gt;
  &lt;/a&gt;
  Before we start
&lt;/h3&gt;

&lt;p&gt;Because static stability is all about resilience, I need once more to rant a little on the importance of &lt;a href="https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/disaster-recovery-dr-objectives.html"&gt;RTO and RPO&lt;/a&gt; first. I find it hard to understand that sometimes systems are being designed without knowing their recovery objectives. It seems impossible to make a great design without knowing these. A design that doesn't consider the recovery objectives from the start will inevitably result in over-or underengineering.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always sort out the recovery objectives first before starting a system design!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-static-stability"&gt;
  &lt;/a&gt;
  What is Static Stability?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;In a statically stable design, the overall system keeps working even when a dependency becomes impaired.&lt;/strong&gt; Perhaps the system doesn’t see any updated information that its dependency was supposed to have delivered. &lt;strong&gt;However, everything it was doing before the dependency became impaired continues to work despite the impaired dependency.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before we drill further down, we first need to talk about Availability Zones, because on AWS, availability zones are a main pillar of statically stable designs. Therefore a quick refresher of the definition of an Availably Zone: &lt;strong&gt;"an Availability Zone is one or more discrete data centers with redundant power, networking, and connectivity in an AWS Region".&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Over the years, when building systems on top of Availability Zones, AWS has learned to be ready for impairments before they happen&lt;/strong&gt;. A less effective approach might be to deploy to multiple Availability Zones with the expectation that, should there be an impairment within one Availability Zone, the service will scale up in other Availability Zones and be restored to full health. &lt;strong&gt;This approach is less effective because it relies on reacting to impairments as they happen, rather than being prepared for those impairments before they happen. In other words, it lacks static stability.&lt;/strong&gt; In contrast, a more effective, statically stable service would over-provision its infrastructure to the point where it would continue operating correctly without having to launch anything new, even if an Availability Zone were to become impaired.&lt;/p&gt;

&lt;p&gt;However, understanding static stability itself is only half the story. To properly apply the pattern to a system design, you need to understand a second concept: control and data planes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NlBsqkF4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f0thpbk6ujd78k58ygwa.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NlBsqkF4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f0thpbk6ujd78k58ygwa.jpeg" alt="Control Plane" width="880" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-control-and-data-plane"&gt;
  &lt;/a&gt;
  What is a Control and Data plane?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;A control plane is the machinery involved in making changes to a system&lt;/strong&gt; (adding resources, deleting resources, modifying resources) and getting those changes propagated to wherever they need to go to take effect. &lt;strong&gt;A data plane, in contrast, is the daily business of those resources, that is, what it takes for them to function.&lt;/strong&gt; Furthermore, It's crucial to understand that the data plane is usually far simpler than its control plane. &lt;strong&gt;As a result of its relative simplicity, a data plane is much better suited for targeting a higher availability than a control plane.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#putting-it-all-together"&gt;
  &lt;/a&gt;
  Putting it all together
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#separate-systems-along-the-control-and-data-plane-boundary"&gt;
  &lt;/a&gt;
  Separate systems along the control and data plane boundary
&lt;/h3&gt;

&lt;p&gt;The concepts of control planes, data planes, and static stability are broadly applicable in various system designs. Suppose you're able to decompose a system into its control plane and data plane. In that case, it might be a helpful conceptual tool for designing highly available services for several reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It's typical for the availability of the data plane to be even more critical to the success of the customers of a service than the control plane.&lt;/li&gt;
&lt;li&gt;It's typical for the data plane to operate at a higher volume (often by orders of magnitude) than its control plane. Thus, it's better to keep them separate so that each can be scaled according to its own relevant scaling dimensions.&lt;/li&gt;
&lt;li&gt;AWS found over the years that a system's control plane tends to have more moving parts than its data plane, so it's statistically more likely to become impaired for that reason alone.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Putting those considerations altogether, it seems a best practice to separate systems along the control and data plane boundary.&lt;/p&gt;

&lt;p&gt;Now, let's zoom in on some examples of Static Stable Designs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#design-1-static-stability-using-an-activeactive-setup-on-availability-zones"&gt;
  &lt;/a&gt;
  Design 1: Static Stability using an Active-Active setup on Availability Zones
&lt;/h3&gt;

&lt;p&gt;A common example of an active-active design on AZ's is a load-balanced HTTPS service. The diagram below shows a public-facing Load Balancer providing an HTTPS service. The load balancer's target is an Auto Scaling group that spans three Availability Zones. This is an example of active-active high availability using Availability Zones.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--phPmyfMe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbj33szscxvfobxd8dl0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--phPmyfMe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbj33szscxvfobxd8dl0.png" alt="Active-Active setup" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In the event of an Availability Zone impairment, this design requires no action.&lt;/strong&gt; The instances in the impaired Availability Zone will start failing health checks, and the Load Balancer will shift traffic away from them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#design-2-static-stability-using-an-activestandby-on-availability-zones"&gt;
  &lt;/a&gt;
  Design 2: Static Stability using an Active-standby on Availability Zones
&lt;/h3&gt;

&lt;p&gt;The next diagram shows an Amazon RDS database. In this case, the RDS database setup spans multiple Availability Zones. In a multi-AZ setup Amazon RDS puts the standby candidate in a different Availability Zone from the primary node. In this setup, when the Availability Zone with the primary node becomes impaired, the stateful service does nothing with the infrastructure. In the background, RDS will manage the failover and then repoint the DNS name to the new primary in the working Availability Zone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HnJDuFzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10pacbzzpgjx4fc0acxd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HnJDuFzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10pacbzzpgjx4fc0acxd.png" alt="Active-standby" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These two patterns have in common that both of them had already provisioned the capacity they’d need in the event of an Availability Zone impairment well in advance of any actual impairment.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-principle-of-independent-availability-zones"&gt;
  &lt;/a&gt;
  The principle of independent Availability Zones
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;A third way to use the principle of independent Availability Zones is to design a packet flow to stay within an Availability Zone rather than crossing boundaries.&lt;/strong&gt; Keeping network traffic local to the Availability Zone is worth exploring in more detail. The following diagram illustrates a highly available external service, shown in orange, that depends on another, internal service, shown in green. A straightforward design treats both of these services as consumers of independent EC2 Availability Zones. &lt;br&gt;
Each of the orange and green services is fronted by a Load Balancer, and each service has a well-provisioned fleet of backend hosts spread across three Availability Zones. One highly available regional service calls another highly available regional service. This is a simple design, and for many of the services we’ve built, it's a good design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-hJ4MsL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/54dnrwqyck3m2q6yi83y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-hJ4MsL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/54dnrwqyck3m2q6yi83y.png" alt="HA Service" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Suppose, however, that the green service is a foundational service. That is, suppose it is intended not only to be highly available but also, itself, to serve as a building block for providing Availability Zone independence. In that case, you might instead design it as three instances of a zone-local service, on which we follow Availability Zone-aware deployment practices.&lt;/strong&gt; The following diagram illustrates the design in which a highly available regional service calls a highly available zonal service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IvvDxdpc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/if3zjau9c9mj1ty38mgl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IvvDxdpc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/if3zjau9c9mj1ty38mgl.png" alt="Zone local" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reasons to design a building-block service to be Availability Zone independent comes down to simple arithmetic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In a system where one highly available regional service calls another highly available regional service and a request is sent through the system, then with some simplifying assumptions, the chance of the request avoiding the impaired Availability Zone is 2/3 * 2/3 = 4/9. That is, the request has worse than even odds of steering clear of the event.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In contrast, if you built the green service to be a zonal service&lt;/strong&gt;, then the hosts in the orange service can call the green endpoint in the same Availability Zone. With this architecture, &lt;strong&gt;the chances of avoiding the impaired Availability Zone are 2/3&lt;/strong&gt;. If N services are a part of this call path, then these numbers generalize to (2/3)^N for N regional services versus remaining constant at 2/3 for N zonal services!&lt;/p&gt;

&lt;p&gt;I hope you enjoyed reading about the concept of static stability and the principles of independent AZ's as much as I did. 😉&lt;/p&gt;

&lt;p&gt;Kudos to &lt;a href="https://aws.amazon.com/builders-library/authors/becky-weiss/"&gt;Becky Weiss&lt;/a&gt; and &lt;a href="https://aws.amazon.com/builders-library/authors/mike-furr/"&gt;Mike Furr&lt;/a&gt; as the authors of the ordinal AWS paper.&lt;/p&gt;

&lt;p&gt;Until next time!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>architecture</category>
      <category>devops</category>
    </item>
    <item>
      <title>Everything About Laravel 8 Composer 2022 | Composer in Laravel 8</title>
      <author>Ashish Yadav</author>
      <pubDate>Thu, 23 Dec 2021 08:26:31 +0000</pubDate>
      <link>https://dev.to/expoashish/everything-about-laravel-8-composer-2022-composer-in-laravel-8-516p</link>
      <guid>https://dev.to/expoashish/everything-about-laravel-8-composer-2022-composer-in-laravel-8-516p</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction:
&lt;/h1&gt;

&lt;p&gt;Composer was inspired by projects like NPM and Bundler.  Dependencies save you time and energy. Functionalities you may need for your app like sending e-mails or logging can all be easily included as third party libraries.&lt;/p&gt;

&lt;p&gt;Composer is an exceptional dependency manager for PHP. &lt;/p&gt;

&lt;p&gt;The vast selection of compatible packages are hosted on the official Composer repository called Packagist. These packages are open source so you can contribute to them too. Popular frameworks and tools like Laravel, PHPUnit and Monolog can all be found here.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites:
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/everything-about-laravel-8-composer.html"&gt;Read Full Blog Here....&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>programming</category>
      <category>computerscience</category>
      <category>vue</category>
    </item>
    <item>
      <title>Have you used `flushSync` in React?</title>
      <author>Som Shekhar Mukherjee</author>
      <pubDate>Thu, 23 Dec 2021 08:21:28 +0000</pubDate>
      <link>https://dev.to/ssmkhrj/have-you-used-flushsync-in-react-4cpo</link>
      <guid>https://dev.to/ssmkhrj/have-you-used-flushsync-in-react-4cpo</guid>
      <description>&lt;p&gt;In this post we'll discuss about the &lt;code&gt;flushSync&lt;/code&gt; utility provided by &lt;code&gt;react-dom&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's try and understand what &lt;code&gt;flushSync&lt;/code&gt; is and how it can useful through an example.&lt;/p&gt;

&lt;p&gt;As always, it's a simple todo example but the point to note here is that the todo container has fixed height and is scrollable.&lt;/p&gt;

&lt;p&gt;So, there's our &lt;code&gt;App&lt;/code&gt; component that has a &lt;code&gt;todos&lt;/code&gt; state and returns a list of todos along with a form.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mockTodos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onAdd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newTask&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="p"&gt;([...&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newTask&lt;/span&gt; &lt;span class="p"&gt;}]);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Todos&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;overflowY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;AddTodo&lt;/span&gt; &lt;span class="na"&gt;onAdd&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onAdd&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;AddTodo&lt;/code&gt; component is also fairly simple, it just manages the input state and once the form is submitted it calls the &lt;code&gt;onAdd&lt;/code&gt; prop with the new todo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AddTodo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;onAdd&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;taskInput&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTaskInput&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;taskInput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;setTaskInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;onAdd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;taskInput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
        &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Your Task"&lt;/span&gt;
        &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;taskInput&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setTaskInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Add Task&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we've an understanding of how our code works, suppose we want to add a functionality where every time a new todo is added, the container is scrolled to its bottom so that the newly added todo is visible to the user.&lt;/p&gt;

&lt;p&gt;Think for while and figure out how you would go about implementing this functionality.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-raw-useeffect-endraw-hook"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;useEffect&lt;/code&gt; hook
&lt;/h2&gt;

&lt;p&gt;So, you might be thinking of using the effect hook. Every time the &lt;code&gt;todos&lt;/code&gt; change just scroll the container to the bottom.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;listRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;listRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// listRef is simply a ref attached to the ul&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;OR&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastTodo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;listRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastElementChild&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;lastTodo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollIntoView&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Both of these work fine but you might want to you use the &lt;code&gt;useLayoutEffect&lt;/code&gt; hook in this situation in case you observe any jitters in scrolling.&lt;/p&gt;

&lt;p&gt;But, I would not want to put this in either of these hooks because I feel that more than a side effect, it actually should be a part of the &lt;code&gt;onAdd&lt;/code&gt; handler itself. So, let's try and do that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scrolling-logic-inside-the-handler"&gt;
  &lt;/a&gt;
  Scrolling logic inside the handler
&lt;/h2&gt;

&lt;p&gt;If you simply put the scrolling logic inside the handler (as shown below), you would notice that you're not exactly getting the desired results.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onAdd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newTask&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="p"&gt;([...&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newTask&lt;/span&gt; &lt;span class="p"&gt;}]);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastTodo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;listRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastElementChild&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;lastTodo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollIntoView&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because &lt;code&gt;setTodos&lt;/code&gt; is not synchronous, what happens is you scroll first and then the &lt;code&gt;todos&lt;/code&gt; actually get updated. So, what's in view is not the last todo but second to last.&lt;/p&gt;

&lt;p&gt;So, to get it working as expected we would have to make sure that the logic for scrolling runs only after the &lt;code&gt;todos&lt;/code&gt; state has been updated. And that's where &lt;code&gt;flushSync&lt;/code&gt; comes handy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-raw-flushsync-endraw-"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;flushSync&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;To use &lt;code&gt;flushSync&lt;/code&gt;, we need to import it from &lt;code&gt;react-dom&lt;/code&gt;: &lt;code&gt;import { flushSync } from "react-dom";&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And now we can wrap the &lt;code&gt;setTodos&lt;/code&gt; call inside &lt;code&gt;flushSync&lt;/code&gt; handler (as shown below).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onAdd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newTask&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;flushSync&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="p"&gt;([...&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newTask&lt;/span&gt; &lt;span class="p"&gt;}]);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastTodo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;listRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastElementChild&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;lastTodo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scrollIntoView&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have made sure that the state update happens synchronously and the logic for scrolling is executed only after the state has been updated.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/react-flush-sync-bo1in"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;That's it for this post, let me know situations where you would want to use &lt;code&gt;flushSync&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Peace ✌&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to make a QR Code generator using Vanilla JavaScript?</title>
      <author>murtuza</author>
      <pubDate>Thu, 23 Dec 2021 07:52:46 +0000</pubDate>
      <link>https://dev.to/murtuzaalisurti/how-to-make-a-qr-code-generator-using-vanilla-javascript-3cla</link>
      <guid>https://dev.to/murtuzaalisurti/how-to-make-a-qr-code-generator-using-vanilla-javascript-3cla</guid>
      <description>&lt;p&gt;While you can generate QR codes for URLs in browsers such as Chrome it's always interesting to learn how you can make your own version of a simple QR code generator. Here we go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h2&gt;

&lt;p&gt;Here's a quick look at the HTML code and it's pretty straightforward.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"heading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;QRcodes&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Generate QRCode for anything!&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"user-input"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"input_text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Type something...&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"input_text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"input_text"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Generate QR Code&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"qr-code"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"display: none;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./js/app.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The last element is for the QR code to be displayed as soon as we fetch it from a library through javascript (more on that later).&lt;/p&gt;

&lt;p&gt;Let's move on to some javascript.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h2&gt;

&lt;p&gt;First of all, we will create an event for when the user clicks on the &lt;code&gt;Generate QR code&lt;/code&gt; button.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;//code&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, we are going to create a function known as &lt;code&gt;generate()&lt;/code&gt; which will be invoked as soon as the user clicks on the &lt;code&gt;Generate QR code&lt;/code&gt; button. This function will take the text input from the user as a parameter.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user_input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Inside this function, we are going to use a javascript library &lt;a href="https://davidshimjs.github.io/qrcodejs/"&gt;qrcode.js&lt;/a&gt; to generate QR code. You can use this library via a CDN by including the below &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag of &lt;code&gt;html&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Inside the &lt;code&gt;generate()&lt;/code&gt; function, we will create a new object using the given library. It will take two arguments, first is the element in which the QR code has to be displayed and secondly, the content for which the QR code has to be generated and some options to customize the QR code.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user_input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;qrcode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;QRCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;user_input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;//default 128&lt;/span&gt;
        &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;colorDark&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#000000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;colorLight&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#ffffff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;correctLevel&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;QRCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CorrectLevel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;H&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Next, we will create a download button and append it below the QR code.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;download&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;download&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Inside this download button we will add a link which allows users to download the QR code with a specified file name and append it into the download button. You  can &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download"&gt;learn more about the download attribute here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;download_link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;download_link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;download&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;qr_code_linq.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;download_link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Download&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;download&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;download_link&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's figure out the &lt;code&gt;href&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag next.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;qrcode&lt;/code&gt; object will return a &lt;code&gt;canvas&lt;/code&gt; element as well as an &lt;code&gt;image&lt;/code&gt; element. &lt;/p&gt;

&lt;p&gt;For smartphones, the &lt;code&gt;canvas&lt;/code&gt; element will be visible but for desktop, the &lt;code&gt;image&lt;/code&gt; element will be visible having a &lt;code&gt;src&lt;/code&gt; attribute set to a &lt;code&gt;dataURL&lt;/code&gt;. We will use the &lt;code&gt;dataURL&lt;/code&gt; to download the QR code. &lt;/p&gt;

&lt;p&gt;In the case of desktop, it's pretty obvious. We just have to grab the value of &lt;code&gt;src&lt;/code&gt; attribute of the image element and assign it to the &lt;code&gt;href&lt;/code&gt; attribute of the download link (&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag) after a specified amount of time (0.3 seconds) using &lt;code&gt;setTimeout()&lt;/code&gt; function because the QR code takes some time to be generated.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;download_link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;href&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;But how do we get the &lt;code&gt;dataURL&lt;/code&gt; from the canvas element? By using the method &lt;code&gt;toDataURL()&lt;/code&gt; on the &lt;code&gt;canvas&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;download_link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;href&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;After applying some logic, we get this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;download_link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;href&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;canvas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toDataURL&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;download_link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;href&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Also, the &lt;code&gt;.qr-code&lt;/code&gt; element will be hidden until the user clicks on the &lt;code&gt;Generate QR code&lt;/code&gt; button. With this, our &lt;code&gt;generate()&lt;/code&gt; function is all set to be invoked.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user_input&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;qrcode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;QRCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;user_input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;//128&lt;/span&gt;
        &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;colorDark&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#000000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;colorLight&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#ffffff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;correctLevel&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;QRCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CorrectLevel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;H&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;qrcode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;download&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;download&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;download_link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;download_link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;download&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;qr_code_linq.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;download_link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Download&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;download&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;download_link&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;download_link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;href&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;canvas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toDataURL&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;download_link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;href&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now inside our click event function, we will check if there is already a QR code displayed or not. If it is, then we will first clear that QR code and generate a new one. If it's not present, we can simply generate a new one.&lt;/p&gt;

&lt;p&gt;Also, all of this happens only if the user enters some text or if the input value is not empty.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#input_text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user_input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;childElementCount&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user_input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user_input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.qr-code&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;display: none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;not valid input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can style the elements the way as you want. Here are the styles that I went for:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="nd"&gt;:root&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;62.5%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;text-size-adjust&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-text-size-adjust&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#EAE6E5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.heading&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;5rem&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.title&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.sub-title&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Poppins'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#12130F&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.sub-title&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#8F8073&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.user-input&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.user-input&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Poppins'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.user-input&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;35rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Poppins'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#9b8774&lt;/span&gt;&lt;span class="n"&gt;ad&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.7rem&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.7rem&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#5b92799&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#12130F&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Poppins'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.qr-code&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#8F8073&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#8F8073&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#8F8073&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-bottom-left-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-bottom-right-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#8F8073&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#8F8073&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.qr-code&lt;/span&gt; &lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#8F8073&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Poppins'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#EAE6E5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.qr-code&lt;/span&gt; &lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#EAE6E5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here is a demo of the entire project:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/seekertruth/embed/XWeeVrG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here's the &lt;a href="https://github.com/murtuzaalisurti/qr"&gt;github repository&lt;/a&gt; for this project.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/murtuzaalisurti"&gt;
        murtuzaalisurti
      &lt;/a&gt; / &lt;a href="https://github.com/murtuzaalisurti/qr"&gt;
        qr
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A simple QR Code Generator Web Application! Generate as well as download QR codes for anything real quick!
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;That's all for now. I am on &lt;a href="https://twitter.com/murtuza_surti"&gt;Twitter&lt;/a&gt; as well as &lt;a href="https://github.com/murtuzaalisurti"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>.NET Applications
with Linux Containers</title>
      <author>Learn2Skills</author>
      <pubDate>Thu, 23 Dec 2021 07:51:59 +0000</pubDate>
      <link>https://dev.to/aws-builders/net-applicationswith-linux-containers-9m1</link>
      <guid>https://dev.to/aws-builders/net-applicationswith-linux-containers-9m1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#choosing-container-orchestration"&gt;
  &lt;/a&gt;
  Choosing container orchestration
&lt;/h2&gt;

&lt;p&gt;As you re-platform your application, you can select a container orchestrator that is most&lt;br&gt;
suitable for your requirements. 80% of all containers in the cloud run on AWS, and you have a broad set of options to run and manage your containers on AWS. When choosing your container orchestration option, you should start with the question, “How much of the container infrastructure do I want to manage?” The following options are available to you:&lt;br&gt;
• &lt;strong&gt;Self-Managed Containers on&lt;/strong&gt; &lt;a href="https://aws.amazon.com/ec2/"&gt;Amazon Elastic Compute Cloud&lt;/a&gt; &lt;strong&gt;(Amazon EC2)&lt;/strong&gt;&lt;br&gt;
— EC2 virtual machines give you full control of your server clusters and provide a broad range of customization options. You can choose Amazon EC2 to run your container orchestration if you need server-level control over the installation,configuration, and management of your container orchestration environment.&lt;br&gt;
• &lt;a href="https://aws.amazon.com/eks/"&gt;Amazon Elastic Kubernetes Service&lt;/a&gt; &lt;strong&gt;(Amazon EKS)&lt;/strong&gt; — Amazon EKS is a managed service that makes it easy for you to run Kubernetes on AWS without needing to install and operate your own Kubernetes control plane or worker nodes.&lt;br&gt;
Amazon EKS provisions and scales the Kubernetes control plane, including the API servers and backend persistence layer, across multiple AWS &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-availability-zones"&gt;Availability Zones&lt;/a&gt; for high availability and fault tolerance. Amazon EKS integrated with various AWS services such as Elastic Load Balancing, AWS Identity and Access Management&lt;br&gt;
(AWS IAM), Amazon VPC, and &lt;a href="https://aws.amazon.com/cloudtrail/"&gt;AWS CloudTrail&lt;/a&gt; to provide scalability and security for your applications.&lt;br&gt;
• &lt;a href="https://aws.amazon.com/ecs/"&gt;Amazon Elastic Container Service&lt;/a&gt; &lt;strong&gt;(Amazon ECS)&lt;/strong&gt; — Amazon ECS is a highly scalable, high-performance container management service that supports Docker&lt;br&gt;
containers and enables you to run applications on a managed cluster of Amazon EC2 instances. With simple API calls, you can launch and stop container-enabled applications, query the complete state of your cluster, and access many familiar features like security groups, Elastic Load Balancing, EBS volumes, and IAM roles.You can use Amazon ECS to schedule the placement of containers across your cluster based on your resource needs and availability requirements.Amazon Web Services Modernize .NET Applications with Linux Containers&lt;br&gt;
• &lt;a href="https://aws.amazon.com/fargate/"&gt;AWS Fargate&lt;/a&gt; — AWS Fargate is a serverless compute engine for containers that works with both Amazon ECS and Amazon EKS. AWS Fargate removes the need to provision and manage servers and enables you to specify and pay for resources per application. AWS Fargate is the easiest way to get started with containers on AWS. With AWS Fargate, developers don’t have to manage the underlying infrastructure and they can launch and scale their containers easily and manage everything at the container level. This guide uses AWS Fargate for ECS to deploy&lt;br&gt;
containerized .NET Framework applications on AWS.The next section covers some of the tools and libraries that are available to you as you build your .NET applications and DevOps automation on AWS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools and libraries&lt;/strong&gt;&lt;br&gt;
AWS has many tools available for developers and IT practitioners to build and run container applications and infrastructure. The following table covers some of the primary tools that are useful for the refactoring and replatforming process. You’ll use many of&lt;br&gt;
these tools later on in the Walkthrough section of the guide. For the latest news and releases, visit the &lt;a href="https://aws.amazon.com/developer/language/net/"&gt;.NET on AWS landing page&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-container-services"&gt;
  &lt;/a&gt;
  AWS container services
&lt;/h2&gt;

&lt;p&gt;There are several cost aspects to consider when running applications on AWS. These include, but are not limited to, storage, data transfer, service usage, compute, and operations. This guide focuses on compute (where the containers run) and operations cost (staffing) of managing the compute resources. To simplify the analysis, it does not include the cost of running a database in the example.&lt;br&gt;
As mentioned, there are four different services that AWS provides to run containerbased applications: Amazon EC2, Amazon EKS, Amazon ECS, and AWS Fargate. To understand the cost implications of running containers on each of these services, this paper reviews an example of a simple application architecture, and compares the cost of running it on each service with an On-Demand pricing model in the us-east-1 Region.As detailed previously, you could choose a different pricing structure such as Spot Instances or Saving Plans, which are supported for the services covered in this guide.The examples in the following sections were generated by the &lt;a href="https://calculator.aws/#/estimate?id=962adcc4611ed94c0aef310846f355dc2b247ba9"&gt;AWS Pricing Calculator&lt;/a&gt;.&lt;br&gt;
As the baseline for the comparison, this paper uses an application running on Windows in Amazon EC2, as shown in the following figure:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--933F-i8I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdwrs7otvus68rnlhqya.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--933F-i8I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdwrs7otvus68rnlhqya.JPG" alt="Image description" width="749" height="538"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selfmanaged-containers-on-amazon-ec2"&gt;
  &lt;/a&gt;
  Self-managed containers on Amazon EC2
&lt;/h2&gt;

&lt;p&gt;Running containers on Amazon EC2 gives you the highest level of control over the underlying compute, but it comes with the highest TCO, because you must manage theentirety of the container’s lifecycle. Additionally, you are responsible for optimally&lt;br&gt;
utilizing the underlying compute, rather than leaving this to the managed container orchestrator. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-eks"&gt;
  &lt;/a&gt;
  Amazon EKS
&lt;/h2&gt;

&lt;p&gt;With Amazon EKS, you pay $0.10 per hour for each cluster that you create. You can use a single Amazon EKS cluster to run multiple applications by taking advantage of Kubernetes namespaces and IAM security policies. You can run Amazon EKS on AWS using either Amazon EC2 or AWS Fargate, and on-premises using &lt;a href="https://aws.amazon.com/outposts/"&gt;AWS Outposts&lt;/a&gt; or&lt;br&gt;
&lt;a href="https://aws.amazon.com/eks/eks-anywhere/"&gt;Amazon EKS Anywhere&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are using Amazon EC2 (including with Amazon EKS-managed node groups), you pay for AWS resources (such as EC2 instances or EBS volumes) you create to run your Kubernetes worker nodes. You pay only for what you use, as you use it; there are no minimum fees and no upfront commitments.&lt;br&gt;
The calculations in this guide use Amazon EC2 for compute. For more details on Amazon EKS pricing, see the &lt;a href="https://aws.amazon.com/eks/pricing/"&gt;Amazon EKS pricing page&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-ecs"&gt;
  &lt;/a&gt;
  Amazon ECS
&lt;/h2&gt;

&lt;p&gt;With Amazon ECS, there is no additional charge for the cluster management. You can run Amazon ECS on AWS using either Amazon EC2 or AWS Fargate, and on-premises using AWS Outposts or Amazon ECS Anywhere. Again, you only pay for what you use, as you use it.&lt;/p&gt;

&lt;p&gt;For the calculations in this guide, we used EC2 for compute, and for more details on ECS pricing reference the &lt;a href="https://aws.amazon.com/ecs/pricing/"&gt;Amazon ECS pricing page&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-fargate"&gt;
  &lt;/a&gt;
  AWS Fargate
&lt;/h2&gt;

&lt;p&gt;AWS Fargate can be used to run containers on Amazon ECS and Amazon EKS, removing the operational cost of managing the underlying infrastructure yourself. Pricing is calculated based on the vCPU and memory resources used from the time you start to download your container image until the Amazon ECS Task or Amazon EKS Pod ends,&lt;br&gt;
rounded up to the nearest second.&lt;/p&gt;

&lt;p&gt;For simplicity, this guide assumes that AWS Fargate will run all the time (730 hours per month), but ideally you benefit more from AWS Fargate when cluster utilization falls under certain thresholds. Windows containers are not supported to run on AWS Fargate at this time. Therefore this paper estimates only the cost of running Linux containers. See the &lt;a href="https://aws.amazon.com/fargate/pricing/"&gt;AWS Fargate pricing page&lt;/a&gt; for more information. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#architecture-overview"&gt;
  &lt;/a&gt;
  Architecture overview
&lt;/h2&gt;

&lt;p&gt;It’s common for enterprise applications built in the last decade to follow a layered &lt;a href="https://en.wikipedia.org/wiki/Multitier_architecture"&gt;N-Tier&lt;/a&gt; architectural approach. The unctionally for different aspects of the application are logically separated, yet bundled together as interdependent code modules.&lt;br&gt;
There are multiple advantages of an N-Tier architecture. They’re easy to develop, more feasible to test if the application size is small, and can scale vertically. However, as more functionality is added and the code base grows, the applications become&lt;br&gt;
cumbersome to manage, change, and scale. State-dependent applications are particularly difficult to scale horizontally, and the compute capacity must be provisioned to consider the peak load.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4HOGiqN4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz2g0ateomi8rhiuwt6r.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4HOGiqN4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz2g0ateomi8rhiuwt6r.JPG" alt="Image description" width="768" height="454"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many customers start their cloud journey with a lift-and-shift approach, running their NTier .NET Framework applications on EC2 without any code changes. It’s common for these deployments to have more than one EC2 Windows instance with an &lt;a href="https://aws.amazon.com/elasticloadbalancing/application-load-balancer/"&gt;Application Load Balancer (ALB)&lt;/a&gt;, routing the user requests to one of the EC2 instances. A stateful application can have session affinity (sticky sessions) enabled at the ALB level to create an affinity between a client and a specific EC2 instance.&lt;br&gt;
Along with the ALB, developers can use AWS Auto Scaling to monitor an application and automatically adjust capacity to maintain steady, predictable performance at the lowest possible cost. &lt;a href="https://aws.amazon.com/rds/sqlserver/"&gt;Amazon RDS for SQL Server&lt;/a&gt; is a managed database service that&lt;br&gt;
frees you up to focus on application development by managing time-consuming database administration tasks, including provisioning, backups, software patching,monitoring, and hardware scaling.&lt;br&gt;
This guide refactors this traditional N-Tier .NET Framework application to run on Amazon ECS with AWS Fargate. As mentioned in the previous sections, running containers on Amazon EC2 and Amazon EKS is also an option, but using Amazon ECS and AWS Fargate is a simple yet powerful place to start if you and your teams are new&lt;br&gt;
to containers.&lt;br&gt;
Fargate integrates natively with AWS services such as Application Load Balancer and &lt;a href="https://aws.amazon.com/autoscaling/"&gt;AWS Auto Scaling&lt;/a&gt;, enabling developers to start with the minimum amount of compute to meet user requirements and scale dynamically as the incoming traffic increases. The high-level architecture for the containerized version of this application follows, and is the target of the transformation detailed in this guide. In the following figure, the one vCPU,&lt;br&gt;
two GB blocks represent the AWS Fargate tasks where the application containers are running.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RDkSuFqk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jtd7p8ty1bbpay73irrn.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RDkSuFqk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jtd7p8ty1bbpay73irrn.JPG" alt="Image description" width="801" height="464"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Additional benefits of moving to containers are realized when teams also implement automation and DevOps. A cloud-optimized, containerized application allows you toquickly and frequently deliver consistent applications to your users. A common&lt;br&gt;
development pipeline for continuous deployment with AWS follows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P-xMR8k9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz5sfo097wokzgjiitg6.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-xMR8k9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz5sfo097wokzgjiitg6.JPG" alt="Image description" width="796" height="463"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://d1.awsstatic.com/whitepapers/modernize-dotnet-apps-with-linux-containers.pdf?did=wp_card&amp;amp;trk=wp_card"&gt;Original paper&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>docker</category>
    </item>
  </channel>
</rss>
