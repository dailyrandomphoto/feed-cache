<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why You Should Use Arrow Functions For Validation Functions</title>
      <author>Yogesh Chavan</author>
      <pubDate>Sun, 29 Aug 2021 06:17:46 +0000</pubDate>
      <link>https://dev.to/myogeshchavan97/why-you-should-use-arrow-functions-for-validation-functions-2bdb</link>
      <guid>https://dev.to/myogeshchavan97/why-you-should-use-arrow-functions-for-validation-functions-2bdb</guid>
      <description>&lt;p&gt;Arrow Functions are one of the greatest additions in ES6, whether it's regarding the &lt;code&gt;this&lt;/code&gt; keyword or regarding the shorter syntax.&lt;/p&gt;

&lt;p&gt;Today we will see, how using arrow functions makes our code much simpler and shorter while creating validation functions.&lt;/p&gt;

&lt;p&gt;Suppose, you have written a function which returns &lt;code&gt;true&lt;/code&gt; if the email is valid otherwise returns an error message as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;validateEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;[^&lt;/span&gt;&lt;span class="sr"&gt;@ &lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+@&lt;/span&gt;&lt;span class="se"&gt;[^&lt;/span&gt;&lt;span class="sr"&gt;@ &lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;\.[^&lt;/span&gt;&lt;span class="sr"&gt;@ &lt;/span&gt;&lt;span class="se"&gt;\.]&lt;/span&gt;&lt;span class="sr"&gt;+$/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isValidEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;validateEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Please enter a valid email address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isValidEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isValidEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc@@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Please enter a valid email address&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The same function can be written in just one line using ES6 arrow functions syntax as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;validateEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="sr"&gt;/^&lt;/span&gt;&lt;span class="se"&gt;[^&lt;/span&gt;&lt;span class="sr"&gt;@ &lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+@&lt;/span&gt;&lt;span class="se"&gt;[^&lt;/span&gt;&lt;span class="sr"&gt;@ &lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;\.[^&lt;/span&gt;&lt;span class="sr"&gt;@ &lt;/span&gt;&lt;span class="se"&gt;\.]&lt;/span&gt;&lt;span class="sr"&gt;+$/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isValidEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;validateEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Please enter a valid email address.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isValidEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isValidEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abc@@gmail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Please enter a valid email address&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Suppose you have written a generic validation function that checks if the input field is empty or not as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isNotEmpty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fieldValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fieldValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; is required.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isNotEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;David&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Name is required&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The same function can be written in just one line using ES6 arrow functions syntax as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isNotEmpty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fieldValue&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fieldValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; is required.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isNotEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;David&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Name is required&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are just two examples of validation functions but as you can see, you can create all validation functions using this ES6 arrow function syntax which allows us to write code in a simpler and shorter way.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h3&gt;

&lt;p&gt;Check out my recently published &lt;a href="https://master-redux.yogeshchavan.dev/"&gt;Mastering Redux&lt;/a&gt; course.&lt;/p&gt;

&lt;p&gt;In this course, you will build 3 apps along with food ordering app and you'll learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic and advanced Redux&lt;/li&gt;
&lt;li&gt;How to manage the complex state of array and objects&lt;/li&gt;
&lt;li&gt;How to use multiple reducers to manage complex redux state&lt;/li&gt;
&lt;li&gt;How to debug Redux application&lt;/li&gt;
&lt;li&gt;How to use Redux in React using react-redux library to make your app reactive.&lt;/li&gt;
&lt;li&gt;How to use redux-thunk library to handle async API calls and much more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and then finally we'll build a complete &lt;a href="https://www.youtube.com/watch?v=2zaPDfCKAvM"&gt;food ordering app&lt;/a&gt; from scratch with stripe integration for accepting payments and deploy it to the production.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3w0DGum"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Taa9-Eif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/98ae4f4ead57fde8d47fcf7641220b72/raw/c3e4265df4396d639a7938a83bffd570130483b1/banner.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Want to stay up to date with regular content regarding JavaScript, React, Node.js? &lt;a href="https://www.linkedin.com/in/yogesh-chavan97/"&gt;Follow me on LinkedIn&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/myogeshchavan97"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xG4nnUnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-yellow.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
      <category>node</category>
    </item>
    <item>
      <title>How to setup SSL with Docker</title>
      <author>Dhiraj Patra</author>
      <pubDate>Sun, 29 Aug 2021 05:54:20 +0000</pubDate>
      <link>https://dev.to/dhirajpatra/how-to-setup-ssl-with-docker-4bgh</link>
      <guid>https://dev.to/dhirajpatra/how-to-setup-ssl-with-docker-4bgh</guid>
      <description>&lt;p&gt;I am trying to tell you the easiest way to set up SSL for your domain on any server. I have used this test &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#googlecloudplatform"&gt;
  &lt;/a&gt;
  googlecloudplatform
&lt;/h1&gt;

&lt;p&gt;Create your instance [&lt;a href="https://cloud.google.com/ai-platform/deep-learning-vm/docs/quickstart-cli"&gt;https://cloud.google.com/ai-platform/deep-learning-vm/docs/quickstart-cli&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Setup your domain name to instance [&lt;a href="https://cloud.google.com/dns/docs/tutorials/create-domain-tutorial"&gt;https://cloud.google.com/dns/docs/tutorials/create-domain-tutorial&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Log in to your instance with SSH or similar facilities&lt;br&gt;
Go to the root of your application folder. Create a network by&lt;br&gt;
docker network create nginx&lt;/p&gt;

&lt;p&gt;Update your docker-compose file similar to this however nginx-prod and certbot is require&lt;/p&gt;

&lt;p&gt;version: "3.4"&lt;br&gt;
services:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#nginx-reverse-proxy"&gt;
  &lt;/a&gt;
  Nginx reverse proxy
&lt;/h1&gt;

&lt;p&gt;nginx-prod:&lt;br&gt;
  container_name: nginx-prod&lt;br&gt;
  restart: always&lt;br&gt;
  build:&lt;br&gt;
    context: ./nginx&lt;br&gt;
    dockerfile: Dockerfile&lt;br&gt;
  ports:&lt;br&gt;
    - 80:80 # for production&lt;br&gt;
    - 443:443&lt;br&gt;
  volumes:&lt;br&gt;
    - ./nginx/public_html:/public_html&lt;br&gt;
    - ./nginx/dhparam:/etc/nginx/dhparam&lt;br&gt;
    - ./certbot/conf/:/etc/nginx/ssl/&lt;br&gt;
    - ./certbot/data:/usr/share/nginx/html/letsencrypt&lt;br&gt;
  networks:&lt;br&gt;
    - nginx&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#certbot-to-create-ssl-certificate"&gt;
  &lt;/a&gt;
  certbot to create ssl certificate
&lt;/h1&gt;

&lt;p&gt;certbot:&lt;br&gt;
  image: certbot/certbot&lt;br&gt;
  volumes:&lt;br&gt;
    - ./certbot/conf/:/etc/letsencrypt&lt;br&gt;
    - ./certbot/logs/:/var/log/letsencrypt&lt;br&gt;
    - ./certbot/data:/usr/share/nginx/html/letsencrypt&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#your-web-application-it-may-differ-for-you"&gt;
  &lt;/a&gt;
  your web application it may differ for you
&lt;/h1&gt;

&lt;p&gt;web:&lt;br&gt;
  build:&lt;br&gt;
    context: ./api&lt;br&gt;
    dockerfile: Dockerfile&lt;br&gt;
  container_name: web&lt;br&gt;
  image: orderbot&lt;br&gt;
  restart: always&lt;br&gt;
  env_file:&lt;br&gt;
    - ./.env&lt;br&gt;
  ports:&lt;br&gt;
    - "5000:5000"&lt;br&gt;
networks:&lt;br&gt;
  nginx:&lt;br&gt;
    external: true&lt;br&gt;
Hope you have already the nginx folder in the root with this structure&lt;br&gt;
nginx/&lt;br&gt;
  conf.d/&lt;/p&gt;

&lt;p&gt;Now create these folders at the root&lt;/p&gt;

&lt;p&gt;dhparam&lt;br&gt;
public_html&lt;/p&gt;

&lt;p&gt;Add configuration file below to nginx/local.conf&lt;/p&gt;

&lt;p&gt;server {&lt;br&gt;
    listen 80;&lt;br&gt;
    server_name YOUR_DOMAIN;&lt;br&gt;
    root /public_html/;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;location ~ /.well-known/acme-challenge{
  allow all;
  root /usr/share/nginx/html/letsencrypt;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Go to dhparam folder and run the command below&lt;br&gt;
openssl dhparam -out ~/nginx/dhparam/dhparam-2048.pem 2048&lt;br&gt;
Now fire up the docker-compose&lt;/p&gt;

&lt;p&gt;docker-compose up --build -d&lt;/p&gt;

&lt;p&gt;Now run the certbot container [kindly replace YOUR_EMAIL and YOUR_DOMAIN]&lt;/p&gt;

&lt;p&gt;docker-compose run certbot certonly --webroot --webroot-path=/usr/share/nginx/html/letsencrypt --email YOUR_EMAIL --agree-tos --no-eff-email -d YOUR_DOMAIN&lt;/p&gt;

&lt;p&gt;Now stop/down the docker-compose by&lt;/p&gt;

&lt;p&gt;docker-compose down&lt;/p&gt;

&lt;p&gt;Modify your nginx/conf.d/local.conf [replace YOUR_DOMAIN]&lt;/p&gt;

&lt;p&gt;server {&lt;br&gt;
    listen 80;&lt;br&gt;
    server_name YOUR_DOMAIN;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;location ~ /.well-known/acme-challenge{
  allow all;
  root /usr/share/nginx/html/letsencrypt;
}

location / {
  return 301 https://YOUR_DOMAIN$request_uri;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;server {&lt;br&gt;
     listen 443 ssl http2;&lt;br&gt;
     server_name YOUR_DOMAIN;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; ssl on;
 server_tokens off;
 ssl_certificate /etc/nginx/ssl/live/YOUR_DOMAIN/fullchain.pem;
 ssl_certificate_key /etc/nginx/ssl/live/YOUR_DOMAIN/privkey.pem;
 ssl_dhparam /etc/nginx/dhparam/dhparam-2048.pem;

 ssl_buffer_size 8k;
 ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
 ssl_prefer_server_ciphers on;
 ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

location / {
    proxy_pass http://frontend:3000;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Now fire up the docker-compose along with your other application containers. Now you can comment out the whole certbot section in the docker-compose.yml file and then run&lt;/p&gt;

&lt;p&gt;docker-compose up --build -d&lt;br&gt;
docker ps&lt;/p&gt;

&lt;p&gt;Now you can run your domain with&lt;br&gt;
https://&lt;/p&gt;

&lt;p&gt;More help here&lt;br&gt;
&lt;a href="https://cloud.google.com/community/tutorials/nginx-reverse-proxy-docker"&gt;https://cloud.google.com/community/tutorials/nginx-reverse-proxy-docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;About: I am a Technical Architect and Social Entrepreneur. You can find out more on &lt;a href="https://dhirajpatra.github.io/"&gt;https://dhirajpatra.github.io/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>docker</category>
      <category>ssl</category>
    </item>
    <item>
      <title>Before I land a job as a developer, mistakes that I've made by learning how to code by myself</title>
      <author>Tran Minh Tri</author>
      <pubDate>Sun, 29 Aug 2021 03:33:18 +0000</pubDate>
      <link>https://dev.to/tris909/before-i-land-a-job-as-a-developer-mistakes-that-i-ve-made-by-learning-how-to-code-by-myself-j2k</link>
      <guid>https://dev.to/tris909/before-i-land-a-job-as-a-developer-mistakes-that-i-ve-made-by-learning-how-to-code-by-myself-j2k</guid>
      <description>&lt;p&gt;Before become a full stack developer by learning how to code as a self-taught developer for a year. &lt;/p&gt;

&lt;p&gt;I've made many mistakes that now when I look back, I wish I didn't do it. These mistakes costed me my time, mental health and possibly money ( it's a small amount to me but I know there are peoples spent way more than I am ). &lt;/p&gt;

&lt;p&gt;These mistakes could possibly block you from become a developer or make you suffer a lot before you can land your first job. &lt;/p&gt;

&lt;p&gt;All the things below I about to say is my personal opinion, feel free to skip it but if you can find a small value in this blog, then cheer mate.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-mistake-learning-way-too-much-without-focusing-on-your-goals-and-the-reason-why"&gt;
  &lt;/a&gt;
  First mistake : Learning way too much without focusing on your goals and the reason why
&lt;/h2&gt;

&lt;p&gt;When I'm 20. After a few months of learning how to code. I went to apply a few positions, not really a 'few' but many positions that I think I can apply to earn some experience. &lt;/p&gt;

&lt;p&gt;Now that's all good. The problem is there are too many skills and I'm being too greedy about this. &lt;/p&gt;

&lt;p&gt;I remembered I've learned PHP and React-Native before but now the only skill I actually learn and use from day to day is React. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kEo_xctR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/px3i5413ohm4qxct4qms.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kEo_xctR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/px3i5413ohm4qxct4qms.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You may wonder, what's so bad about that ? &lt;/p&gt;

&lt;p&gt;The problem is by greed for every dev jobs out there, I'm not focusing on any particular skill. I didn't build out any big and complicated project using that specific language or framework. I'm half-good at everything and because I'm half-good. &lt;/p&gt;

&lt;p&gt;The reality that I'm no good. No real strong point and no real focus.&lt;/p&gt;

&lt;p&gt;You know the type of person who knows everything but in fact they only know the surface and that's no where match to the level you need to work in real world.&lt;/p&gt;

&lt;p&gt;Looking back what I should have done is start by researching about the job market to understand what skill is the most important one for me to land a job as a developer then build out many projects using that one.&lt;/p&gt;

&lt;p&gt;Now I know there are peoples reading to this point a be like : "What the hell is this guy is talking about ? Should developer always learn new things as their jobs ? Does this means that you can't apply to any jobs you don't qualify 100% for ?" &lt;/p&gt;

&lt;p&gt;If you are thinking like this, you are totally missing the point. The fact that a developer has like 80-90% skill requirements for the job and learn the rest when they are on site is totally different from a guy who are no good and has his skills somewhere at 40-50% thinking that he will be able to win the job over all other 20-30 peoples applying to the same job. &lt;/p&gt;

&lt;p&gt;If you apply directly without any helps from your friends, colleges, or even family. Understand that your skills must be at the top and you should have a strong point to sell. Jack of all trades is a joke and most of the times you are being way too confident about knowing anything rather than actually know it and use it professionally. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#second-mistake-learning-like-a-parrot"&gt;
  &lt;/a&gt;
  Second mistake : Learning like a parrot.
&lt;/h2&gt;

&lt;p&gt;I have done so many tutorials. Yes that's me. The ugly true starts coming out after a few months of self-learning by watching other peoples code then re-write what they code. &lt;/p&gt;

&lt;p&gt;I don't really know how to build things from scratch. That's what I realize. And believe me it's hard truth. &lt;/p&gt;

&lt;p&gt;Ever feel likes you want to build out something that's really cool but then you don't know where to start, what technologies to use. How will you structure your databases. How will you build out your backend or frontend.&lt;/p&gt;

&lt;p&gt;Yea that feeling. That's when you realize all the time you spent learning how to code. Indeed you learned how to code, but you learn the syntax rather than learn about the system the problem. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H_rGDbhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ifxalg1estqs5rzlaaz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H_rGDbhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ifxalg1estqs5rzlaaz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will soon become even a bigger issue if you go work for companies and they start a new fresh project from scratch. Imagine all that pipelines, CI-CD, frontend, backend and so much more. If you just starting out as a junior developer. Well that's okay but one day you will become a mid level or a senior one you will have to do all of that. &lt;/p&gt;

&lt;p&gt;So be aware, tutorials are great for learning how to code when you just start. But don't depend on them. &lt;/p&gt;

&lt;p&gt;Learn the syntax, learn the fundamentals. Learn the "why". Then move one build your own application using all that technologies. Or you can follow a tutorial to some point. Then stop and keep building it using your own idea and rebuild the structure of the application to fit your needs.&lt;/p&gt;

&lt;p&gt;Building many features all alone by yourself is hard. It will take time and will cause you many frustration but it will definitely help you in the long run. &lt;/p&gt;

&lt;p&gt;You will have to build stuffs from scratch and that is freaky important. Believe me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#third-mistake-not-apply-for-job-early"&gt;
  &lt;/a&gt;
  Third mistake : Not apply for job early
&lt;/h2&gt;

&lt;p&gt;Don't wait for a perfect moment. In fact you will never be perfect. None of us are perfect and even the senior developers are not perfect. &lt;/p&gt;

&lt;p&gt;You can't never stop learning something new in this field. As soon as you have the frontend skills : HTML, CSS, JS, a framework. You can start applying immediately.&lt;/p&gt;

&lt;p&gt;This will force you to build out a resume. It force you to think about your selling points. It force you to be aware of your current level and try harder to be job-ready. &lt;/p&gt;

&lt;p&gt;If you are learning how to code as a hobby. You will never force yourself learning or working on stuffs that's hard and no one hand holding your through it but are required. &lt;/p&gt;

&lt;p&gt;Applying jobs early also bring many opportunities that you're not aware of if you are that kind of person who is way too modest and thinking you're no worth. &lt;/p&gt;

&lt;p&gt;Personally, Applying for jobs give me the motivation to code every single day. More and more interviews just keep coming and the more I see the more I know that peoples are giving out recognition for my skills. That what keep me coding every single day. Knowing I will eventually break free and land my first job.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a9lQLhty--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pw511k8yoqpuhf49nvlb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a9lQLhty--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pw511k8yoqpuhf49nvlb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The job market is not high demand as you think, believe me. There are many many peoples applying to the same tech position. I've been there I know. &lt;/p&gt;

&lt;p&gt;They only short for senior developer that agree to mid level salary. There are no shortage for new peoples. My job I'm working right now has nearly 50 peoples applied to it with degrees and experiences. The only reason I get hired is the attitude : 'All I need is experiences, I will work with minimum pay".&lt;/p&gt;

&lt;p&gt;The story that graduates tech earn around 100k is certainly not the case. Positioning yourself to embrace it. You need experience than money. Especially if you're self-taught. Close that expectation now and it will be easier for you land job in the tech industry. &lt;/p&gt;

&lt;p&gt;You will eventually get paid a lot but it will not come right out of the door. &lt;/p&gt;

&lt;p&gt;So 2 things : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Applying for jobs early&lt;/li&gt;
&lt;li&gt;Put down your ego and expectation. Your grow in career is the most important thing. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#fourth-reason-spending-way-too-much-this-is-not-my-mistake-btw-im-just-putting-it-here-because-why-not-i-saw-many-peoples-have-this-"&gt;
  &lt;/a&gt;
  Fourth reason : Spending way too much ( This is not my mistake btw, I'm just putting it here because why not. I saw many peoples have this )
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1IN1l_dR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nk7qqulpy7a83rkf6k5i.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1IN1l_dR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nk7qqulpy7a83rkf6k5i.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You don't need expensive bootcamp to learn how to code. You may don't even need a 4 years CS degree consider the fact that they don't really teach you about real skills you gonna use date to date as a developer. &lt;/p&gt;

&lt;p&gt;There are many coding platform or courses will cost you as much as 15$-20$ that will provide you immense value and knowledge. Me personally, I would recommend people around 5 courses so they can be job-ready after finishing all of those. &lt;/p&gt;

&lt;p&gt;Sometime being in debt, working a labour job for 8 hours a day is what stopping you from becoming a developer. No one can really put in the work to become a developer if they never have a chance. I solely believe I'm no special than a guy who work in the supermarket stocking items. If the guy in the supermarket know about this and create enough room to create an escape. He will be able to make it and be way more successful the he could ever imagine. &lt;/p&gt;

&lt;p&gt;So believe me, don't create debt learning how to code. Don't push extra pressures on yourself. It won't come fast by any means. Just being patient and it will come. But create too many worries around yourself like debts and etc... You won't be able to make it.&lt;/p&gt;

&lt;p&gt;Now I'm not saying that's all you need. You need proofs. Lot of them, things to show to other peoples to convince them you know what you are talking about and why you're good at what you're doing. And that's : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PORTFOLIO&lt;/li&gt;
&lt;li&gt;GITHUB &lt;/li&gt;
&lt;li&gt;LinkedIn that record your grow as a developer&lt;/li&gt;
&lt;li&gt;Twitter ? ( I don't really use this ) &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But Github and Portfolio is a must, I won't say otherwise. I don't believe in story where you get the job from your friends by chance. I just point out if you gonna apply the job directly and compete with everyone else. If you don't have experience and you don't even have portfolio or github. You will lost 99% of the time ( I really want to say 100% but you know nothing is absolute ). &lt;/p&gt;

&lt;p&gt;What you really need is time to learn how to code everyday and a dedication that you will never quit even if that's the 400th application you have failed.&lt;/p&gt;

&lt;p&gt;One more thing, after you have worked as a developer. You will be self-teaching yourself how to code anyway. There are no bootcamps that will help you. So why don't save yourself a favor and start doing it now to form a habit. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#end-"&gt;
  &lt;/a&gt;
  END :
&lt;/h2&gt;

&lt;p&gt;All the things above may be harsh but it's the truth. I wish when I first starting out someone will say all of this to me. &lt;/p&gt;

&lt;p&gt;Believe me guys, I'm not trying to be a dick. But I've been there and done that. I worked at McDonald before becoming a developer. I spent so many hours just learning how to code. &lt;/p&gt;

&lt;p&gt;Looking back I'm not really regret anything particularly. But if I know these things it maybe easier for me in some ways. &lt;/p&gt;

&lt;p&gt;That's it guys. Hope you find some values out of it.&lt;/p&gt;

&lt;p&gt;--peace-- &lt;/p&gt;

</description>
      <category>advices</category>
      <category>career</category>
    </item>
    <item>
      <title>python: module has no attribute error</title>
      <author>antlossway</author>
      <pubDate>Sun, 29 Aug 2021 02:42:12 +0000</pubDate>
      <link>https://dev.to/antlossway/python-module-has-no-attribute-error-4753</link>
      <guid>https://dev.to/antlossway/python-module-has-no-attribute-error-4753</guid>
      <description>&lt;h1&gt;
  &lt;a href="#problem"&gt;
  &lt;/a&gt;
  Problem
&lt;/h1&gt;

&lt;p&gt;I have a directory ~/dev/python3/pylib, which contains handy small modules. One of them is DB.py, which defines functions to connect to different databases.&lt;/p&gt;

&lt;p&gt;If a script requires connection to a database, I can simply do&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import site
site.addsitedir('/home/xqy/dev/python3/pylib')
import DB

db = DB.connectlocaldb()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But why I got error like below?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AttributeError: module 'DB' has no attribute 'connectlocaldb'&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I checked several times to make sure the lib dir is correct and the file DB.py includes function "connectlocaldb()", but the error still persists.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reason"&gt;
  &lt;/a&gt;
  Reason:
&lt;/h1&gt;

&lt;p&gt;When importing a module, python will go through a list of directories included in &lt;strong&gt;sys.path&lt;/strong&gt;, and searching for the specified module, the first one found will be used.&lt;/p&gt;

&lt;p&gt;xqy@voyager:~/dev/python3$ python&lt;br&gt;
Python 3.7.3 (default, Jan 22 2021, 20:04:44) &lt;br&gt;
[GCC 8.3.0] on linux&lt;br&gt;
Type "help", "copyright", "credits" or "license" for more information.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;import sys&lt;br&gt;
print("\n".join(sys.path))&lt;br&gt;
''&lt;br&gt;
/usr/lib/python37.zip&lt;br&gt;
/usr/lib/python3.7&lt;br&gt;
/usr/lib/python3.7/lib-dynload&lt;br&gt;
/home/xqy/.local/lib/python3.7/site-packages&lt;br&gt;
/usr/local/lib/python3.7/dist-packages&lt;br&gt;
/usr/lib/python3/dist-packages&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;
&lt;br&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;the empty entry '' means the current directory&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There is another DB.py under ~/dev/python3/, as my current directory is ~/dev/python3, the module file ~/dev/python3/DB.py is used instead of /home/xqy/dev/python3/pylib/DB.py&lt;/p&gt;

&lt;p&gt;And there is no "connectlocaldb" function in ~/dev/python3/DB.py&lt;/p&gt;

&lt;p&gt;We can also find out sys.path using below command&lt;/p&gt;

&lt;p&gt;xqy@voyager:~/dev/python3$ python3 -m site&lt;br&gt;
sys.path = [&lt;br&gt;
    '/home/xqy/dev/python3',&lt;br&gt;
    '/usr/lib/python37.zip',&lt;br&gt;
    '/usr/lib/python3.7',&lt;br&gt;
    '/usr/lib/python3.7/lib-dynload',&lt;br&gt;
    '/home/xqy/.local/lib/python3.7/site-packages',&lt;br&gt;
    '/usr/local/lib/python3.7/dist-packages',&lt;br&gt;
    '/usr/lib/python3/dist-packages',&lt;br&gt;
]&lt;br&gt;
USER_BASE: '/home/xqy/.local' (exists)&lt;br&gt;
USER_SITE: '/home/xqy/.local/lib/python3.7/site-packages' (exists)&lt;br&gt;
ENABLE_USER_SITE: True&lt;/p&gt;

&lt;p&gt;xqy@voyager:~/dev/python3$ cd ~&lt;br&gt;
xqy@voyager:~$ python3 -m site&lt;br&gt;
sys.path = [&lt;br&gt;
    '/home/xqy',&lt;br&gt;
    '/usr/lib/python37.zip',&lt;br&gt;
    '/usr/lib/python3.7',&lt;br&gt;
    '/usr/lib/python3.7/lib-dynload',&lt;br&gt;
    '/home/xqy/.local/lib/python3.7/site-packages',&lt;br&gt;
    '/usr/local/lib/python3.7/dist-packages',&lt;br&gt;
    '/usr/lib/python3/dist-packages',&lt;br&gt;
]&lt;br&gt;
USER_BASE: '/home/xqy/.local' (exists)&lt;br&gt;
USER_SITE: '/home/xqy/.local/lib/python3.7/site-packages' (exists)&lt;br&gt;
ENABLE_USER_SITE: True`&lt;/p&gt;

&lt;p&gt;Therefore, by deleting file ~/dev/python3/DB.py or changing current directory, the error will not appear any more.&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>Degree vs Self Taught vs Boot Camp </title>
      <author>Nicholas Mendez</author>
      <pubDate>Sun, 29 Aug 2021 02:37:45 +0000</pubDate>
      <link>https://dev.to/snickdx/degree-vs-self-taught-vs-boot-camp-3bo7</link>
      <guid>https://dev.to/snickdx/degree-vs-self-taught-vs-boot-camp-3bo7</guid>
      <description>&lt;p&gt;It's been a long ongoing debate. With the prevalence of widely available information, many people wonder if a degree is still worth it for getting into the tech industry. My programming journey started self taught but I am a CS graduate and currently teach CS Courses at the University level. Here's my take on the matter.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-criticisms-of-a-college-degree"&gt;
  &lt;/a&gt;
  The Criticisms of a college degree
&lt;/h1&gt;

&lt;p&gt;The most obvious disadvantage of a degree is the cost. Cost in terms of time and finances. Tuition in US based Universities appear to be on the constant rise. For many people finding the time to do a 3 or 4 year degree may simply infeasible especially if they are trying for a career change.&lt;/p&gt;

&lt;p&gt;There will always be a gap between the cutting edge developments of industry and what is covered in curriculum. Many people fear making the sacrifices of pursuing a degree only to learn irrelevant or outdated material. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#challenges-of-being-self-taught"&gt;
  &lt;/a&gt;
  Challenges of being self taught
&lt;/h1&gt;

&lt;p&gt;We live at a great time for dev, there's so much free content, communities and mentors that can help you to get you to where you want. However, the caveat is that the sheer amount of content can be overwhelming. Often it's hard to know where to start or what to learn as there are so many differing opinions out there.&lt;/p&gt;

&lt;p&gt;Secondly, many traditional firms still require a degree programme for even entry level tech jobs. Even when companies do not have the requirement you often hear stories of self taught devs being condescended by their formally educated colleagues. The good news things like this seem to be on decline as the industry focuses more on outcome and portfolios rather than just grades.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-dangers-of-boot-camps"&gt;
  &lt;/a&gt;
  The dangers of Boot Camps
&lt;/h1&gt;

&lt;p&gt;Boot Camps, nano degrees and courses are a great way to seek focused shorter term education dedicated to mastering a specific subject. Unfortunately there are some predatory boot camps out there offering &lt;a href="https://ultratechlife.com/tech/coding-bootcamp-fraud-isa/"&gt;poor quality education or making false promises&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I've seen Boot Camps that rush content and you end up learning a specific framework as opposed to programming and web development in general. A web developer should have other skills like communication, project management and software design. A boot camp typically focuses on the technical skillset.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#advantages-of-being-self-taught"&gt;
  &lt;/a&gt;
  Advantages of being self taught
&lt;/h1&gt;

&lt;p&gt;Good self taught developers will always have my respect. It takes so much motivation, discipline and courage to take on web dev like that. The self taught devs I've worked with are passionate people and generally happy to help others as they can empathize with newbies.&lt;/p&gt;

&lt;p&gt;The only advice I'd give to self taught devs is to look into some computer science and software engineering concepts to round off their knowledge. Things such as algorithms, data structures, requirements gathering, agile, design patterns and SOLID principles.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#advantages-of-a-degree"&gt;
  &lt;/a&gt;
  Advantages of a Degree
&lt;/h1&gt;

&lt;p&gt;When it comes to the degree discussion I think people often undermine some of its value. Yes, you will get a paper at the end but the university experience offers much more. The life-long colleagues you will make, networking, internships and other student opportunities that offer profound personal growth and development also await. People don't describe college as the 'best time of their life' for no reason. For those who can do college, it's ultimately up to you to make the best of your time there.&lt;/p&gt;

&lt;p&gt;New tech come and go all the time but a good degree programme instils a balance solid, immutable foundational concepts and modern methodologies &amp;amp; technologies. Also a Computer Science degree will cover much more than just web development, you get databases, devops, software engineering, cloud, networking, AI, cyber security etc so there are many other career options as well.&lt;/p&gt;

&lt;p&gt;When it comes to cost, you may want to consider Universities based outside of the US where tuition can be as much as 50% cheaper!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#advantages-of-a-boot-camp"&gt;
  &lt;/a&gt;
  Advantages of a Boot Camp
&lt;/h1&gt;

&lt;p&gt;Like a degree, boot camps provide a set curriculum and ensures you cover content via lectures, labs and assessments. For many,  It's easier to rely on this structure as rather than finding the motivation for self taught study. A good boot camp can get you up to speed without the commitment of a degree. I know some talented devs who have transitioned into tech via a Boot Camp. &lt;/p&gt;

&lt;p&gt;If you are doing a Boot Camp, try to go for one recommended by an experience dev, ideally one without ties to the camp itself. Additionally you may also want to seek out online courses or Nano degrees to cover Computer Science and Software Engineering concepts to compliment your technical knowledge. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;At the end of the day, no matter what the path, learning never ends as that is the nature of Technology. This stuff can be intimidating but that's what your community is for! &lt;/p&gt;

&lt;p&gt;Please feel free to @me on &lt;a href="https://twitter.com/snickdx"&gt;twitter&lt;/a&gt; if you have questions on career guidance or just need of general advice, I'd be happy to help out!&lt;/p&gt;

&lt;p&gt;I promise you, if you really want it you can make it no matter the path, you just need to keep striding. What path are you on or took? What advice would you give for that path? Please share in the comments!&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>career</category>
    </item>
    <item>
      <title>Export Amazon Aurora to BigQuery using BigQuery Data Transfer Service</title>
      <author>moga</author>
      <pubDate>Sun, 29 Aug 2021 02:11:33 +0000</pubDate>
      <link>https://dev.to/moga/export-amazon-aurora-to-bigquery-using-bigquery-data-transfer-service-86p</link>
      <guid>https://dev.to/moga/export-amazon-aurora-to-bigquery-using-bigquery-data-transfer-service-86p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-i-want-to-do"&gt;
  &lt;/a&gt;
  What I want to do
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;I want to use BigQuery to analyze data from Google Analytics and services.&lt;/li&gt;
&lt;li&gt;To do this, I want to transfer data from Amazon Aurora to BigQuery.&lt;/li&gt;
&lt;li&gt;I want to transfer the data from Amazon Aurora to BigQuery less than once a day.&lt;/li&gt;
&lt;li&gt;I don't want to add too much load to Aurora.&lt;/li&gt;
&lt;li&gt;I want to write as little code as possible.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#policy"&gt;
  &lt;/a&gt;
  Policy
&lt;/h2&gt;

&lt;p&gt;In order to reduce the load on Aurora, I thought that I could use the daily snapshots that Aurora automatically takes. Lucky for us, we have this snapshot. Lucky for us, these snapshots can be exported to S3 (which seems to have become possible around January 2020). This feature will export the snapshot in PARQUET format. This feature exports snapshots in PARQUET format, which is a very efficient format in terms of data volume.&lt;br&gt;
&lt;a href="https://docs.aws.amazon.com/ja_jp/AmazonRDS/latest/AuroraUserGuide/USER_ExportSnapshot.html"&gt;https://docs.aws.amazon.com/ja_jp/AmazonRDS/latest/AuroraUserGuide/USER_ExportSnapshot.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have a PARQUET file in S3, you can send it to BigQuery using BigQuery Data Transfer Service. BigQuery Data Transfer Service can read PARQUET files in S3 and send them to BigQuery. Moreover, it can be executed periodically if the interval is more than 24 hours, such as daily. The service itself is free of charge, although you will have to pay for the data transfer.&lt;br&gt;
&lt;a href="https://cloud.google.com/bigquery-transfer/docs/s3-transfer-intro"&gt;https://cloud.google.com/bigquery-transfer/docs/s3-transfer-intro&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, combining the two, the following is the process.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;launch Lambda, etc. at any time on a daily basis&lt;/li&gt;
&lt;li&gt;export the daily snapshot that Amazon Aurora is taking automatically to S3&lt;/li&gt;
&lt;li&gt;load the file with GCP's BigQuery Data Transfer Service&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I recommend you to try this flow from the console before implementing it, so you can see how the data is exported to S3, what you need to export, and how the Transfer Service works. Basically, just follow the documentation, but there are a few things I got stuck on.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#try-it-from-the-console"&gt;
  &lt;/a&gt;
  Try it from the console
&lt;/h2&gt;

&lt;p&gt;I poked and prodded from the console, and it was easy to dump the Aurora snapshot to S3. But it took a lot of time, about 30 minutes. I wonder if it takes time to convert the file format. I don't know the details.&lt;/p&gt;

&lt;p&gt;When I tried to read one of the PARQUET files with Transfer Service, I got an error like &lt;code&gt;PERMISSION_DENIED: [AccessDenied: Access Denied]&lt;/code&gt; and could not transfer it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It should have been enough because I have &lt;code&gt;S3ReadOnlyAccess&lt;/code&gt; on it (it says so in the documentation).&lt;/li&gt;
&lt;li&gt;AWS CloudTrail shows an error that &lt;code&gt;kms:Decrypt&lt;/code&gt; is missing.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;kms:Decrypt&lt;/code&gt; to the AWS user permissions for BigQuery Data Transfer Service

&lt;ul&gt;
&lt;li&gt;The target is the &lt;code&gt;KmsKeyId&lt;/code&gt; specified in the &lt;code&gt;StartExportTask&lt;/code&gt; that you will see later (👇).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you do this, you can transfer the data. By the way, you need to prepare the dataset and table in BigQuery beforehand. It seems that the data is always imported with &lt;code&gt;WRITE_APPEND&lt;/code&gt;, so it is better to set the partition at the import time in the table. First, I created an empty table with no schema.&lt;/p&gt;

&lt;p&gt;When the data was transferred to BigQuery, the schema types were reasonably consistent and all were nullable.&lt;/p&gt;

&lt;p&gt;The data transferred to BigQuery had a few schema types, but all of them were nullable. As far as I can see, the S3 URI setting for the transfer allows wildcards, but it ends up being shoved into a single table, so I decided that I need to set up one transfer per table in Aurora.&lt;/p&gt;

&lt;p&gt;By the way, I tried to use wildcards to shove multiple RDB tables into one BigQuery table, but the file transfer from S3 to GCP worked, but the read did not (0 jobs succeeded).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#automate"&gt;
  &lt;/a&gt;
  Automate
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#aurora-snapshot-to-s3"&gt;
  &lt;/a&gt;
  Aurora Snapshot to S3
&lt;/h3&gt;

&lt;p&gt;To automate the part of exporting Aurora snapshot to S3, we need to write some code, which looks like this when implemented in TypeScript.&lt;/p&gt;

&lt;p&gt;If you implement it in TypeScript, it will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DescribeDBClusterSnapshotsCommand&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;RDSClient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StartExportTaskCommand&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-sdk/client-rds&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;requestToExportSnapshotToS3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;RDSClient&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Aurora&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;region&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; })

  // retrieve the most recent Snapshot

  const describeCommand = new DescribeDBClusterSnapshotsCommand({
    DBClusterIdentifier: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="nx"&gt;Aurora&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;s DB cluster ID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;describeResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;describeCommand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;describeResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DBClusterSnapshots&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;latestSnapshot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;describeResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DBClusterSnapshots&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="c1"&gt;// We want to sort in descending order&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SnapshotCreateTime&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SnapshotCreateTime&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;snapshotArn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;latestSnapshot&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;DBClusterSnapshotArn&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;snapshotArn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;

  &lt;span class="c1"&gt;// Request Export&lt;/span&gt;
  &lt;span class="c1"&gt;// more details in the 👇 documentation&lt;/span&gt;
  &lt;span class="c1"&gt;// https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_StartExportTask.html&lt;/span&gt;

  &lt;span class="c1"&gt;// taskID must be a date, because only date/time variables can be used in the Transfer Service.&lt;/span&gt;
  &lt;span class="nx"&gt;Const&lt;/span&gt; &lt;span class="nx"&gt;taskID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`export-id-YYYYMMDD`&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;exportCommand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;StartExportTaskCommand&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;ExportTaskIdentifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;taskID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;// You can create it when you do S3 export from the 👇 console, so it's easy to use it.&lt;/span&gt;
    &lt;span class="na"&gt;IamRoleArn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Role for S3Export&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;// You can specify database, table, etc.&lt;/span&gt;
    &lt;span class="na"&gt;ExportOnly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;database_name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;S3BucketName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bucket to export to&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;// I could have used any custom key, but I chose the key used for DB encryption&lt;/span&gt;
    &lt;span class="na"&gt;KmsKeyId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ID of the encryption key&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;SourceArn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;snapshotArn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;exportCommand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can do this by using CloudWatch and Lambda. The important thing is the permissions of the role that executes the process.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add the role that executes the Export process to the KMS key user that is used for DB encryption (user/role that hits the SDK).

&lt;ul&gt;
&lt;li&gt;To get KMSKeyNotAccessibleFault.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Allow the following to the role that executes the export process 👆.

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;kms:DescribeKey&lt;/code&gt; (the above key is the target resource)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;kms:CreateGrant&lt;/code&gt; (the above key is the target resource)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;iam:PassRole&lt;/code&gt; (required when running StartExportTask)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rds:StartExportTask&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rds:DescribeDBClusterSnapshots&lt;/code&gt; (to get the Arn of the target Snapshot)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we give these, we could run.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-bigquery-data-transfer-service"&gt;
  &lt;/a&gt;
  Configure BigQuery Data Transfer Service
&lt;/h3&gt;

&lt;p&gt;The only thing you need to think about is the S3 URI. The implementation in 👆 looks like this. The &lt;code&gt;run_time&lt;/code&gt; variable is in UTC, so you need to match it with the &lt;code&gt;YYYYMMDD&lt;/code&gt; of the taskID that you set in 👆 depending on the timing of the transfer service.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;s3://your_bucket_name/export-id-{run_time|"%Y%m%d"}/database_name/schema_name.table_name/*.parquet
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can run it and the data will be in the BigQuery table we specified.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;CloudTrail has helped me a lot. CloudTrail is a great service that can be used for debugging.&lt;/p&gt;

&lt;p&gt;When I looked at the export from Aurora, I wondered if it was possible to do it in DynamoDB. It may be more complicated than this case because it may require a data format conversion layer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"Item"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"83369704-ccef-4163-8c20-24d240c10806"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Leopoldine Blümel-Mude"&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"Item"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1f187e30-b279-4bfa-85dc-e347092f364f"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Theo Trommler"&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"Item"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"88942fa5-e8be-4b29-8869-6abdc662eaea"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nl"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Herr Franz-Peter Thanel B.A."&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_ExportTableToPointInTime.html"&gt;https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_ExportTableToPointInTime.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aurora</category>
      <category>bigquery</category>
      <category>transfer</category>
    </item>
    <item>
      <title>Algorithm practice</title>
      <author>LATOYA FOWLER</author>
      <pubDate>Sun, 29 Aug 2021 01:21:30 +0000</pubDate>
      <link>https://dev.to/ldfowler/algorithm-practice-2ja8</link>
      <guid>https://dev.to/ldfowler/algorithm-practice-2ja8</guid>
      <description>&lt;p&gt;&lt;a href="https://codepen.io/ldfowler/pen/qBjOOvV"&gt;https://codepen.io/ldfowler/pen/qBjOOvV&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;// // 1.) Write a function that returns an array with all the numbers from 1 to 255.&lt;br&gt;
// function ReturnArrayFromOneTo255()&lt;br&gt;
12:07&lt;br&gt;
//2.) Write a function that would get the sum of all the even numbers from 1 to 1000.&lt;br&gt;
//3.) Write a function that returns the sum of all the odd numbers from 1 to 5000.&lt;br&gt;
// 4.) Write a function that returns the sum of all the values within an array.&lt;br&gt;
// (e.g. [1,2,5] returns 8, [-5,2,5,12] returns 14).&lt;br&gt;
// 5.) Given an array with multiple values,&lt;br&gt;
// write a function that returns the maximum number in the array.&lt;br&gt;
// 6.) Given an array with multiple values,&lt;br&gt;
//  write a function that returns the average of the values in the array.&lt;br&gt;
// [1,3,5,7,20] average is 7.2&lt;br&gt;
// 7.) Write a function that would return an array of all the odd numbers between 1 to 50.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>arrays</category>
      <category>math</category>
    </item>
    <item>
      <title>AxleJS - Fetch, supercharged.</title>
      <author>ksplat</author>
      <pubDate>Sun, 29 Aug 2021 00:49:59 +0000</pubDate>
      <link>https://dev.to/ksplatdev/axlejs-fetch-supercharged-36f9</link>
      <guid>https://dev.to/ksplatdev/axlejs-fetch-supercharged-36f9</guid>
      <description>&lt;h1&gt;
  &lt;a href="#axlejs"&gt;
  &lt;/a&gt;
  AxleJS
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h2&gt;

&lt;p&gt;Good'ol Fetch API. Simple and easy, but bad error handling, long options, and doesn't always follow redirects. &lt;/p&gt;

&lt;p&gt;Thats where AxleJS &lt;strong&gt;&lt;em&gt;supercharges&lt;/em&gt;&lt;/strong&gt; fetch, with better error handling, easier to use options, can automatically follow redirects, and an easier way to manage and view headers and search queries!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Functions for all HTTP Restful Methods&lt;/li&gt;
&lt;li&gt;Only ~9KB minified and ~15KB unminified&lt;/li&gt;
&lt;li&gt;Custom, Extended Response and Request classes&lt;/li&gt;
&lt;li&gt;Built-in way to cancel requests&lt;/li&gt;
&lt;li&gt;Still keeps Fetch simple and easy to use&lt;/li&gt;
&lt;li&gt;Fully written in TypeScript&lt;/li&gt;
&lt;li&gt;Includes Type definitions&lt;/li&gt;
&lt;li&gt;And a lot more..&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#github-repository"&gt;
  &lt;/a&gt;
  GitHub Repository
&lt;/h2&gt;

&lt;p&gt;AxleJS is free and open-source using the &lt;a href="https://github.com/ksplatdev/AxleJS/blob/main/LICENSE"&gt;MIT License&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ksplatdev/AxleJS"&gt;https://github.com/ksplatdev/AxleJS&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How Valtio Proxy State Works (Vanilla Part)</title>
      <author>Daishi Kato</author>
      <pubDate>Sat, 28 Aug 2021 23:55:36 +0000</pubDate>
      <link>https://dev.to/dai_shi/how-valtio-proxy-state-works-vanilla-part-35hh</link>
      <guid>https://dev.to/dai_shi/how-valtio-proxy-state-works-vanilla-part-35hh</guid>
      <description>&lt;h5&gt;
  &lt;a href="#adding-immutability-to-mutable-state"&gt;
  &lt;/a&gt;
  Adding immutability to mutable state
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://github.com/pmndrs/valtio"&gt;Valtio&lt;/a&gt; is a library for global state primarily for React.&lt;br&gt;
It's originally modeled to match with &lt;a href="https://github.com/reactjs/rfcs/blob/master/text/0147-use-mutable-source.md"&gt;useMutableSource&lt;/a&gt;&lt;br&gt;
API. However, it turns out it's a novel API to add&lt;br&gt;
immutability to mutable state.&lt;/p&gt;

&lt;p&gt;What is immutable state? JavaScript doesn't support immutability as language, so it's just a coding contract.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;immutableState1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// update the state&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;immutableState2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;immutableState1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;immutableState1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// update it again&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;immutableState3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;immutableState2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;immutableState2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Some people might be familiar with this pattern, or it can be new to some other people. We always create a new object without modifying the existing ones. This allows us to compare the state objects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;immutableState1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;immutableState2&lt;/span&gt; &lt;span class="c1"&gt;// is false&lt;/span&gt;
&lt;span class="nx"&gt;immutableState2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;immutableState3&lt;/span&gt; &lt;span class="c1"&gt;// is false&lt;/span&gt;

&lt;span class="c1"&gt;// decrement count&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;immutableState4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;immutableState3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;immutableState3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;immutableState4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// shows "{ count: 1, text: 'hello' }"&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;immutableState2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// shows "{ count: 1, text: 'hello' }"&lt;/span&gt;

&lt;span class="c1"&gt;// however their references are different&lt;/span&gt;
&lt;span class="nx"&gt;immutableState2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;immutableState4&lt;/span&gt; &lt;span class="c1"&gt;// is false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The benefit of immutable states is you can compare the state object with &lt;code&gt;===&lt;/code&gt; to know if anything inside can be changed.&lt;/p&gt;

&lt;p&gt;Contradictory to immutable state, mutable states are JavaScript objects without any contracts on updating.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mutableState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// update the state&lt;/span&gt;
&lt;span class="nx"&gt;mutableState&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// update it again&lt;/span&gt;
&lt;span class="nx"&gt;mutableState&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Unlike immutable state, we mutate state and keep the same object. Because it's how JavaScript objects are mutable by nature, mutable state is easier to handle. The problem of mutable states is the flip side of the benefit of immutable states. If you have two mutable state objects, you need to compare all properties to see if they have same contents.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mutableState1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mutableState2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isSame&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mutableState1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;every&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;mutableState1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;mutableState2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is not enough for nested objects and also the number of keys can be different. You need so-called deepEqual to compare two mutable objects.&lt;/p&gt;

&lt;p&gt;deepEqual is not very efficient for large objects. Immutable objects shine there because the comparison doesn't depend on the size nor the depth of objects.&lt;/p&gt;

&lt;p&gt;So, our goal is to bridge between mutable state and immutable state. More precisely, we want to automatically create immutable state from mutable state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#detecting-mutation"&gt;
  &lt;/a&gt;
  Detecting mutation
&lt;/h2&gt;

&lt;p&gt;Proxy is a way to trap object operations. We use &lt;code&gt;set&lt;/code&gt; handler to detect mutations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;setting&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// shows "setting a 1"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need to track if the object is mutated, so it has a version number.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ---&amp;gt; 1&lt;/span&gt;
&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ---&amp;gt; 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This version number is for the object itself, and it doesn't care which property is changed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// continued&lt;/span&gt;
&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ---&amp;gt; 3&lt;/span&gt;
&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ---&amp;gt; 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can now track the mutation, next is to create an immutable state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-snapshot"&gt;
  &lt;/a&gt;
  Creating snapshot
&lt;/h2&gt;

&lt;p&gt;We call an immutable state of a mutable state, a snapshot. We create a new snapshot if we detect mutation, that is when the version number is changed.&lt;/p&gt;

&lt;p&gt;Creating a snapshot is basically copying an object. For simplicity, let's assume our object is not nested.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lastVersion&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lastSnapshot&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;snapshot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastVersion&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;lastVersion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;lastSnapshot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;lastSnapshot&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snapshot&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// ---&amp;gt; { a: 10 }&lt;/span&gt;
&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snapshot&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// ---&amp;gt; { a: 10, b: 20 }&lt;/span&gt;
&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snapshot&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// ---&amp;gt; { a: 11, b: 21 }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;snapshot&lt;/code&gt; is a function to create a snapshot object. It's important to note that the snapshot object is only created when &lt;code&gt;snapshot&lt;/code&gt; is invoked. Until then, we can do as many mutations as we want, which only increment &lt;code&gt;version&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#subscribing"&gt;
  &lt;/a&gt;
  Subscribing
&lt;/h2&gt;

&lt;p&gt;At this point, we don't know when mutations happen. It's often the case we want to do something if the state is changed. For this, we have subscriptions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listeners&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;listeners&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;subscribe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;listeners&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;unsubscribe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;listeners&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;unsubscribe&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mutated!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// shows "mutated!"&lt;/span&gt;
&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// shows "mutated!"&lt;/span&gt;
&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// shows "mutated!"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Combining &lt;code&gt;snapshot&lt;/code&gt; and &lt;code&gt;subscribe&lt;/code&gt; allows us to connect mutable state to React.&lt;/p&gt;

&lt;p&gt;We will introduce how valtio works with React in another post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#handling-nested-objects"&gt;
  &lt;/a&gt;
  Handling nested objects
&lt;/h2&gt;

&lt;p&gt;So far, our examples were with simple objects, whose properties are primitive values. In reality, we want to use nested objects, and it's the benefit of immutable state.&lt;/p&gt;

&lt;p&gt;Nested object looks something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We would also like to use arrays.&lt;/p&gt;

&lt;p&gt;Valtio supports nested objects and arrays. If you are interested in how it's implemented, check out the source code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/pmndrs/valtio"&gt;https://github.com/pmndrs/valtio&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-notes"&gt;
  &lt;/a&gt;
  Closing notes
&lt;/h2&gt;

&lt;p&gt;In this blog post, we use simple code in examples. The implementation does something more to handle various cases. It's still bare minimum.&lt;/p&gt;

&lt;p&gt;The actual API is very close to the example code. Here's rough type definition in TypeScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;proxyObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;proxyObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this post, we discussed about the vanilla part of valtio. Hope to write about the react part, some time soon.&lt;/p&gt;




&lt;p&gt;Originally published at &lt;a href="https://blog.axlight.com/posts/how-valtio-proxy-state-works-vanilla-part/"&gt;https://blog.axlight.com&lt;/a&gt; on August 27, 2021.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>LeetCode 417. Pacific Atlantic Water Flow (javascrpt solution)
</title>
      <author>codingpineapple</author>
      <pubDate>Sat, 28 Aug 2021 23:33:37 +0000</pubDate>
      <link>https://dev.to/cod3pineapple/leetcode-417-pacific-atlantic-water-flow-javascrpt-solution-230p</link>
      <guid>https://dev.to/cod3pineapple/leetcode-417-pacific-atlantic-water-flow-javascrpt-solution-230p</guid>
      <description>&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description:
&lt;/h3&gt;

&lt;p&gt;There is an m x n rectangular island that borders both the Pacific Ocean and Atlantic Ocean. The Pacific Ocean touches the island's left and top edges, and the Atlantic Ocean touches the island's right and bottom edges.&lt;/p&gt;

&lt;p&gt;The island is partitioned into a grid of square cells. You are given an m x n integer matrix heights where heights[r][c] represents the height above sea level of the cell at coordinate (r, c).&lt;/p&gt;

&lt;p&gt;The island receives a lot of rain, and the rain water can flow to neighboring cells directly north, south, east, and west if the neighboring cell's height is less than or equal to the current cell's height. Water can flow from any cell adjacent to an ocean into the ocean.&lt;/p&gt;

&lt;p&gt;Return a 2D list of grid coordinates result where result[i] = [ri, ci] denotes that rain water can flow from cell (ri, ci) to both the Pacific and Atlantic oceans.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution:
&lt;/h3&gt;

&lt;p&gt;Time Complexity : O(n^2)&lt;br&gt;
Space Complexity: O(n^2)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;pacificAtlantic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;heights&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Set amount of rows and columns to variables&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numRows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;heights&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numCols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;heights&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;

    &lt;span class="c1"&gt;// Create matrixes to hold which cells can visit each ocean&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pacific&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numRows&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numCols&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;atlantic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numRows&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numCols&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;// Run dfs on first and last columns that touch an ocean&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;heights&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
       &lt;span class="nx"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kc"&gt;Infinity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pacific&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="nx"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numRows&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kc"&gt;Infinity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;atlantic&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Run dfs on each cell on the top and bottom rows that touch an ocean&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;heights&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kc"&gt;Infinity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pacific&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numCols&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kc"&gt;Infinity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;atlantic&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Starting from an edge of heights that touches an ocean, move inward and add all cells to the ocean matrix that can spill into the previously vistited cell&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ocean&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="c1"&gt;// Stop dfs if we given coordinates that are not on the board, if the value of the cell we are visiting cannot spill water into the previous cell, or if we have already visited this cell&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;numRows&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;numCols&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;heights&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ocean&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Set this cell as visited by the current ocean&lt;/span&gt;
        &lt;span class="nx"&gt;ocean&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

        &lt;span class="c1"&gt;// Look in all directions to find more nodes that can visit the current ocean by flowing into the cell at [i, j]&lt;/span&gt;
        &lt;span class="nx"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;heights&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;ocean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;heights&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;ocean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;heights&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;ocean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;heights&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;ocean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="c1"&gt;// Check which cells [i, j] are able to touch both oceans by checking if a cell is in both ocean matrixes&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;numRows&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;numCols&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;atlantic&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;pacific&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]){&lt;/span&gt;
                &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Easy Callback, Promises, Async-Await</title>
      <author>Prakhar Yadav</author>
      <pubDate>Sat, 28 Aug 2021 22:05:36 +0000</pubDate>
      <link>https://dev.to/prakh_r/easy-callback-promises-async-await-4c8</link>
      <guid>https://dev.to/prakh_r/easy-callback-promises-async-await-4c8</guid>
      <description>&lt;p&gt;After having read about callbacks, promises &amp;amp; async-await multiple times in not so easy to comprehensions, I finally have wrapped my head around them.&lt;br&gt;
And today I'd share it in simpler terms that I am able to remember &amp;amp; understand.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#callbacks"&gt;
  &lt;/a&gt;
  Callbacks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xozl7hEu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mv3cnqbmed1bblvhvnt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xozl7hEu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mv3cnqbmed1bblvhvnt.jpg" alt="Call me back post-it note"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Callbacks are functions being passed as arguments. That's it. That doesn't satisfy you then read these one page articles (&lt;em&gt;to arrive on same conclusion of course&lt;/em&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Callback_function"&gt;Callback by Mozilla Dev Net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/js/js_callback.asp"&gt;Callback by W3School&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javascripttutorial.net/javascript-callback/"&gt;Callback by javascripttutotial.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;
  &lt;a href="#promises"&gt;
  &lt;/a&gt;
  Promises:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BBVHYp6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/np29309g2xvlyqjv9qle.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BBVHYp6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/np29309g2xvlyqjv9qle.png" alt="Promise resolve &amp;amp; reject"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;functions that are not run sequentially. They are run when possible.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const fun = new Promise ((resolve, reject) =&amp;gt; {
  if(&amp;lt;some condition&amp;gt;)
    resolve("some success message");
  else
    reject("some failure message");
});


fun()
  .then(msg =&amp;gt; console.log(msg)) // some success message
  .catch(msg =&amp;gt; console.log(msg)); // some failure message
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Resolve is called to indicate &amp;amp; return success status of the Promise, &amp;amp; Reject is called when we need to show failure.&lt;/p&gt;

&lt;p&gt;Once returned we need to handle the stuff as well right?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;then()&lt;/code&gt; is used to handle the resolved state&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;catch()&lt;/code&gt; is used to handle the rejected state&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See! Simple.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EPzYcH1d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4s0cvjyq8epk4pl08hi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EPzYcH1d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4s0cvjyq8epk4pl08hi.png" alt="Detailed flow diagram of how a Promise works"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#async-await"&gt;
  &lt;/a&gt;
  Async - Await
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BrvzIM82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7k8smmbjckurr6uolsc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BrvzIM82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7k8smmbjckurr6uolsc.png" alt="async await code poster"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just a wrapper around Promise. Async-Await use Promises in the background.&lt;br&gt;
Why was this done?&lt;br&gt;
Because sometimes developers tend to nest things up. Nesting Promises makes it difficult to write, read, follow &amp;amp; understand at one look.&lt;/p&gt;

&lt;p&gt;So why not make it easy to read &amp;amp; understand.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const fun = async () =&amp;gt; {
  await functionToPerformAsynchronously();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That easy. You can easily make any function run asynchronously, by appending a &lt;code&gt;await&lt;/code&gt; before it. Just remember that &lt;code&gt;await&lt;/code&gt; statement must be in a function declared as &lt;code&gt;async&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And you know what! &lt;code&gt;async&lt;/code&gt; functions are nothing but promises (well not really; they return promises).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don't confuse yourself, just read along and find more detail in the links mentioned at the end.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Which is why you can do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const fun = async () =&amp;gt; {
  await functionToPerformAsynchronously();
}

fun()
  .then(&amp;lt;whatever you want to do here&amp;gt;) //runs when fun() has run successfully and did not encounter any issue while it ran
  .catch(errorMsg =&amp;gt; console.log(errorMsg)); // runs when fun() had some problem running. We can display the problem as an error message is returned &amp;amp; can be displayed like in this example.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7kQ5a6-b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/80tkfa8o1c43obodzfjc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7kQ5a6-b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/80tkfa8o1c43obodzfjc.png" alt="Want to know more"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#want-to-dig-deeper"&gt;
  &lt;/a&gt;
  Want to dig deeper?
&lt;/h2&gt;

&lt;p&gt;Here are one of the best &amp;amp; easy to follow official Node documentation on each one of the three:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nodejs.dev/learn/javascript-asynchronous-programming-and-callbacks"&gt;JavaScript Asynchronous Programming and Callbacks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.dev/learn/understanding-javascript-promises"&gt;Understanding JavaScript Promises&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.dev/learn/modern-asynchronous-javascript-with-async-and-await"&gt;Modern Asynchronous JavaScript with Async and Await&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Tips That Made My Site More Accessible</title>
      <author>Timothy Foster</author>
      <pubDate>Sat, 28 Aug 2021 21:47:02 +0000</pubDate>
      <link>https://dev.to/auroratide/tips-that-made-my-site-more-accessible-1omj</link>
      <guid>https://dev.to/auroratide/tips-that-made-my-site-more-accessible-1omj</guid>
      <description>&lt;p&gt;If you want to learn more about creating accessible content, I highly recommend giving this article by &lt;a class="mentioned-user" href="https://dev.to/inhuofficial"&gt;@inhuofficial&lt;/a&gt;
 a read:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/101-digital-accessibility-tips-and-tricks-4728" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;101 Digital Accessibility (a11y) tips and tricks&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Jul 30 ・ 68 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;
  &lt;small&gt;What is &lt;strong&gt;accessibility&lt;/strong&gt;?&lt;/small&gt;
  &lt;small&gt;Accessibility is a way of making things usable by &lt;em&gt;as many people as possible&lt;/em&gt;, regardless of ability or disability. I like to call it "universal design".&lt;/small&gt; 

&lt;/p&gt;

&lt;p&gt;The article may look daunting at first, and indeed it took me some hours over the course of a few days to read through and digest everything, but it's worth every minute!&lt;/p&gt;

&lt;p&gt;I like this article for taking the enormity of accessibility and condensing it into quick wins applicable to a many different cases. It's a great entry point, providing a list of topics into which you can dig deeper over time.&lt;/p&gt;

&lt;p&gt;Although I had already been making accessibility improvements to my website, I was still able to find some valuable action items for myself. Here are the &lt;strong&gt;top five ways&lt;/strong&gt; I was able to improve my website!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-12-one-h1-per-page"&gt;
  &lt;/a&gt;
  Tip 12: One h1 per page
&lt;/h2&gt;

&lt;p&gt;The principle is simple: each page should have one and only one &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; heading!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Of the many pages on your site, the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; heading tells your visitors exactly where they are.&lt;/li&gt;
&lt;li&gt;Assistive technology such as &lt;strong&gt;screen readers&lt;/strong&gt; rely on this heading to announce that location.&lt;/li&gt;
&lt;li&gt;And usually, this heading demarks the start of the main content, after all the navigation at the top.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A screen reader is capable of reading the content of a site out loud to those who either can't or would rather not read the text. As a feature, they allow people to look at all the headings on a page to jump to where they want to go.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JFQW7B0x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mliikm2ftch7dmog7ek2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JFQW7B0x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mliikm2ftch7dmog7ek2.png" alt="The page's headings are shown as a list on a menu."&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The headings menu for Mac's VoiceOver tool&lt;/p&gt;



&lt;p&gt;Well, each of the pages on my site use to have &lt;em&gt;two&lt;/em&gt; level one headings: one was the page title, but the other was the &lt;em&gt;website's&lt;/em&gt; title, "Auroratide". And that website title was the same on every single page. That would be pretty annoying to someone using a screen reader!&lt;/p&gt;

&lt;p&gt;The change? Instead of using an &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;, the site's title no longer uses a heading at all and is simply styled to look like one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"page-title"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Auroratide&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#tip-29-alt-attributes"&gt;
  &lt;/a&gt;
  Tip 29: alt attributes
&lt;/h2&gt;

&lt;p&gt;Images are fantastic, but not everyone can see them. Therefore, it is important each image has a suitable &lt;strong&gt;text replacement&lt;/strong&gt; which can either be shown to someone or read aloud by a screen reader. This is called an image's &lt;code&gt;alt&lt;/code&gt; attribute.&lt;/p&gt;

&lt;p&gt;Before finding this article, I had already audited every single image on my website to give them suitable text alternatives, but this point is so important I decided to bring it up anyway.&lt;/p&gt;

&lt;p&gt;To write good alt text, imagine you are sharing an article with someone over the phone and need to describe the image to them with words. What you say is generally good alt text! For more on that, here's an article I had recently written:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/auroratide" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IQGc9Jrb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--yRZgsqjz--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/176563/df2440ff-8bcb-4662-bdd6-c1f1a5c06c0d.png" alt="auroratide"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/auroratide/image-alt-text-the-way-the-spec-intended-it-360i" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Image Alt Text, the Way the Spec Intended It&lt;/h2&gt;
      &lt;h3&gt;Timothy Foster ・ Jul 16 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#tip-43-include-a-skip-link-to-bypass-site-navigation"&gt;
  &lt;/a&gt;
  Tip 43: Include a skip link to bypass site navigation
&lt;/h2&gt;

&lt;p&gt;Some people prefer to navigate a website entirely with a keyboard, pressing Tab to go from landmark to landmark.&lt;/p&gt;

&lt;p&gt;Usually, pressing Tab on a page for the first time takes you to the very first link, which might be the site's title.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tab&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After the site's title are the navigation links.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tab&lt;/li&gt;
  &lt;li&gt;Tab&lt;/li&gt;
  &lt;li&gt;Tab&lt;/li&gt;
  &lt;li&gt;Tab&lt;/li&gt;
  &lt;li&gt;Tab&lt;/li&gt;
  &lt;li&gt;Tab&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And after &lt;em&gt;that&lt;/em&gt; is the actual page's content.&lt;/p&gt;

&lt;p&gt;Now imagine hopping from page to page on a site, and &lt;em&gt;every single time&lt;/em&gt; a new page is loaded you have to Tab through the entire navigation just to get to the content. Hence the skip link!&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;skip link&lt;/strong&gt; allows someone to bypass the navigation and get directly to the content. As such, it is generally the first focusable item.&lt;/p&gt;

&lt;p&gt;A basic implementation links to a main element in the document, hiding the link off-screen until it becomes focused:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"skip-link"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#main"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Skip to Content&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;main&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"main"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class="nc"&gt;.skip-link&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-9999px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.skip-link&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;small&gt;Here is &lt;a href="https://github.com/Auroratide/auroratide.com/blob/master/src/client/layout/SkipLink/SkipLink.svelte"&gt;my implementation of skip link&lt;/a&gt; on Github.&lt;/small&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tip-52-font-size"&gt;
  &lt;/a&gt;
  Tip 52: Font Size
&lt;/h2&gt;

&lt;p&gt;I remember the early 2000s where websites had tiny Times New Roman fonts. At the time I was also tiny and could read those fonts; nowadays, any time I encounter one of these relics of the past &lt;small&gt;(almost always some .edu site)&lt;/small&gt;, I struggle severely!&lt;/p&gt;

&lt;p&gt;Today, the standard &lt;strong&gt;minimum&lt;/strong&gt; font size is 16px.&lt;/p&gt;

&lt;p&gt;Before reading the accessibility tips, my website had a base font size of 18px, which is actually bigger than the minimum. However, I often make use of &lt;strong&gt;side text&lt;/strong&gt;, stuff tangential to the main content but I feel is worth including. This side text uses a smaller font, which dipped it into a range smaller than 16px. Yikes!&lt;/p&gt;

&lt;p&gt;As a result, I universally bumped &lt;em&gt;all&lt;/em&gt; font sizes up so that now the smallest font possible is 16px, and the usual font is 20px. In fact, the universal increase was necessary since I like the aesthetic of a &lt;em&gt;thin&lt;/em&gt; font, but using a thin font raises the size threshold in order to remain accessible.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;The code change for this was not very bad since I make liberal use of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties"&gt;CSS variables&lt;/a&gt;. Here is a &lt;a href="https://github.com/Auroratide/auroratide.com/commit/11336edde42be011d2eeae18f115953cf1f3250b"&gt;full diff of the font change&lt;/a&gt; for those interested.&lt;/small&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tip-85-dont-forget-the-visited-state"&gt;
  &lt;/a&gt;
  Tip 85: Don't forget the :visited state
&lt;/h2&gt;

&lt;p&gt;You've probably seen this before if you've used the Google search engine: links you have been to are a different color from those that are new.&lt;/p&gt;


&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qVmqomjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfgr1n1vsurgesitr88a.png" alt="One search result is purple and the other is blue."&gt;&lt;p&gt;Don't ask why I was researching multiple time dimensions&lt;/p&gt;



&lt;p&gt;Turns out I rely on this feature &lt;small&gt;(more than I care to admit)&lt;/small&gt; to re-find pages I should have bookmarked! From an accessibility standpoint, differentiating visited links is especially important for those with memory impairment. And thankfully, all it takes is a couple lines of CSS!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:visited&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--skin-text-visited&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Prior, I had deliberately made all my links the same out of aesthetic preference. However, learning how this simple change could benefit a lot of people convinced me to apply the difference, and honestly I quite like it now.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#bonus-tip-101-people-are-not-users"&gt;
  &lt;/a&gt;
  Bonus Tip 101: People are not users
&lt;/h2&gt;

&lt;p&gt;And finally, my favorite tip: Do not call people "users"!&lt;/p&gt;

&lt;p&gt;At least for me, I get very different mental images when I think of users versus people. It's the difference between thinking of the website, or thinking of the &lt;em&gt;face&lt;/em&gt; behind the website. I develop far more empathy for the latter, and ultimately &lt;strong&gt;empathy is at the core of accessibility&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-other-95-tips"&gt;
  &lt;/a&gt;
  The Other 95 Tips
&lt;/h2&gt;

&lt;p&gt;This was just a list of five improvements I was able to make to my website from a list of 101 tips. I highly encourage you to bookmark &lt;a class="mentioned-user" href="https://dev.to/inhuofficial"&gt;@inhuofficial&lt;/a&gt;
 's article to reference when needed!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/101-digital-accessibility-tips-and-tricks-4728" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;101 Digital Accessibility (a11y) tips and tricks&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Jul 30 ・ 68 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



</description>
      <category>a11y</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
