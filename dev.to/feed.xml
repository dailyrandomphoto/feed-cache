<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Learn Cypress in 3 Hours | Full Cypress Tutorial | Cypress Automation</title>
      <author>LambdaTest</author>
      <pubDate>Wed, 19 Jan 2022 14:45:12 +0000</pubDate>
      <link>https://dev.to/lambdatest/learn-cypress-in-3-hours-full-cypress-tutorial-cypress-automation-1hk3</link>
      <guid>https://dev.to/lambdatest/learn-cypress-in-3-hours-full-cypress-tutorial-cypress-automation-1hk3</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jX3v3N6oN5M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Cypress Testing Tutorial series for beginners and experienced QA engineers helps you understand what is Cypress testing, how to install the Cypress plugin, and set environment variables. In addition, this tutorial walks you through the Cypress Async commands, non-Async promises, get and find commands, custom commands, and much more. Further, you will learn about Cypress fixtures, Cypress Hooks, Cypress actions, and what are assertions in Cypress. By the end of this video, you will be comfortable about how to write tests with Cypress commands, and how to perform Cypress cross-browser testing on the cloud.&lt;/p&gt;

&lt;p&gt;You will also learn üé´ -: &lt;br&gt;
üîπWhat are Cypress actions?&lt;br&gt;
üîπWhat are Cypress fixtures?&lt;br&gt;
üîπWhat are Cypress hooks?&lt;br&gt;
üîπWhat are Cypress mouse commands?&lt;br&gt;
üîπHow to perform cross browser testing on Cypress cloud Grid?&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Become a better Fronted Developer in 2022! üéÜ</title>
      <author>Brandon</author>
      <pubDate>Wed, 19 Jan 2022 14:30:22 +0000</pubDate>
      <link>https://dev.to/brandonkylebailey/become-a-better-fronted-developer-in-2022-39pb</link>
      <guid>https://dev.to/brandonkylebailey/become-a-better-fronted-developer-in-2022-39pb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;No matter where you are in your software development journey, It‚Äôs always helpful to have a reference guide to help keep you on track!&lt;/p&gt;

&lt;p&gt;A community effort by the name of &lt;a href="https://roadmap.sh/"&gt;roadmap.sh&lt;/a&gt; has an exhaustive list of guides for multiple different paths into the software development world.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hojBwRAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/668vl93u040rcmfsrggs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hojBwRAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/668vl93u040rcmfsrggs.png" alt="image of the different learning paths for developers in twenty twenty two. from left to right: frontend, backend, devops, react, angular, android, python, go, java, DBA" width="782" height="491"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#becoming-a-better-frontend-developer"&gt;
  &lt;/a&gt;
  Becoming a better Frontend Developer
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs talk about the Frontend guide!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wo2TNb-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yn9pdsare0ln7iq22anu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wo2TNb-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yn9pdsare0ln7iq22anu.png" alt="Image of the frontend developer roadmap" width="880" height="2498"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This guide can be broken down in to three main sections:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Core knowledge&lt;/li&gt;
&lt;li&gt;Tools and frameworks&lt;/li&gt;
&lt;li&gt;Native&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Core knowledge covers topics such as knowledge of the web, HTML, CSS and Javascript. As well as other important topics such as web security and version control.&lt;/p&gt;

&lt;p&gt;Tools and frameworks covers things like build tools, linters, frameworks such as ReactJS and NextJS.&lt;/p&gt;

&lt;p&gt;Lastly, the Native section covers things like mobile and desktop applications.&lt;/p&gt;

&lt;p&gt;Learning is subjective, especially with something as nuanced as web development. However, ideally, you should aim to work through each section in order, consolidating your knowledge into projects as you go. &lt;/p&gt;

&lt;p&gt;This way, by the end of this roadmap, you will have an awesome skillset AND a portfolio to go along with it!&lt;/p&gt;

&lt;p&gt;If you liked this post don't forget to hit me up on üê¶ at &lt;a href="%5Bhttps://twitter.com/brandonkpbailey%5D(https://twitter.com/brandonkpbailey)"&gt;brandonkpbailey&lt;/a&gt; or GitHub at &lt;a href="%5Bhttps://github.com/brandon-kyle-bailey%5D(https://github.com/brandon-kyle-bailey)"&gt;brandon-kyle-bailey&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Build your own personal job application tracker in 10 minutes</title>
      <author>Shubhendra Singh Chauhan</author>
      <pubDate>Wed, 19 Jan 2022 14:01:30 +0000</pubDate>
      <link>https://dev.to/tooljet/build-your-own-personal-job-application-tracker-in-10-minutes-2m0j</link>
      <guid>https://dev.to/tooljet/build-your-own-personal-job-application-tracker-in-10-minutes-2m0j</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;In this article, you'll learn to build an app that will let you manage all your job applications right from your own personal dashboard.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Go2D9fXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qb0vz0f1tv741a6pi7k1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Go2D9fXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qb0vz0f1tv741a6pi7k1.png" alt="app" width="880" height="532"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this tutorial, we will be building a CRUD app that will let you create, read, update, and delete the data from the datasource (here Google Sheets). For building this app, I have broken the workflow into four steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Authenticating the datasource&lt;/li&gt;
&lt;li&gt;Building the UI&lt;/li&gt;
&lt;li&gt;Creating the CRUD queries&lt;/li&gt;
&lt;li&gt;Linking the queries to the UI&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° ToolJet‚Äôs &lt;strong&gt;Import App&lt;/strong&gt; feature allows you to import the app into your ToolJet account using the exported source code. Here‚Äôs the &lt;a href="https://gist.github.com/withshubh/37eddb26c5e16d7543a3c32e44090550"&gt;exported source code&lt;/a&gt; in case you need to import the app.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#authenticating-the-datasource"&gt;
  &lt;/a&gt;
  Authenticating the datasource
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs start by creating a new application in ToolJet (&lt;a href="https://github.com/ToolJet/ToolJet"&gt;https://github.com/ToolJet/ToolJet&lt;/a&gt;) and giving this app a name from the top left corner.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XUCUjv7V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkcyo6l7fcz582v10e8v.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XUCUjv7V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkcyo6l7fcz582v10e8v.gif" alt="creating-new-app-tooljet" width="880" height="431"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, connect Google Sheets to the app as the datasource by clicking ‚Äú&lt;strong&gt;add or edit datasource&lt;/strong&gt;‚Äù and then selecting Google Sheets from the list of available datasources. We need to authenticate with ‚Äú&lt;strong&gt;read and write&lt;/strong&gt;‚Äù permissions so that our app is able to perform CRUD operations. Once authenticated, close the tab and select ‚Äú&lt;strong&gt;save datasource&lt;/strong&gt;‚Äù.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#building-the-ui"&gt;
  &lt;/a&gt;
  Building the UI
&lt;/h2&gt;

&lt;p&gt;So now that we have added the datasource let's go ahead build the user interface of our app. We will drag the components from the right sidebar i.e. &lt;strong&gt;widget manager&lt;/strong&gt; onto the canvas. To give our app a header and description use the Text widgets. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° You can use HTML within widgets to customize the text.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KiI4ijCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o2dycnnfleqnjuor7gf2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KiI4ijCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o2dycnnfleqnjuor7gf2.gif" alt="adding-text" width="880" height="431"&gt;&lt;/a&gt;&lt;br&gt;
Let‚Äôs use two container widgets - one for showing all the applications and the other for building the ‚Äú&lt;strong&gt;Modify Applications‚Äù&lt;/strong&gt; section. For showing all the applications we will use the &lt;strong&gt;Table widget&lt;/strong&gt; and for &lt;strong&gt;Modify Applications&lt;/strong&gt; section we will need widgets like &lt;strong&gt;Text Input, Dropdown, Date Picker, and Buttons&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° Check the¬†&lt;a href="https://docs.tooljet.com/docs/widgets/text"&gt;documentation&lt;/a&gt;¬†to learn more about customizing the widgets and making the UI more beautiful. üåü&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once added the widgets, the final version of the app‚Äôs user interface should look similar to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IKO5nEM9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gs7ixsloff8l0fis42n7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IKO5nEM9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gs7ixsloff8l0fis42n7.png" alt="ui" width="880" height="579"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#creating-the-crud-queries"&gt;
  &lt;/a&gt;
  Creating the CRUD queries
&lt;/h2&gt;

&lt;p&gt;So now that we have built the user interface of the application, let‚Äôs create queries that will perform the &lt;strong&gt;create, read, update and delete&lt;/strong&gt; operations on the table.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reading-data-from-the-spreadsheet"&gt;
  &lt;/a&gt;
  Reading data from the spreadsheet
&lt;/h3&gt;

&lt;p&gt;So, the first thing that we need to do now is to create a query that will populate the table with the existing data in the Google Sheet. To do this, go to¬†the query editor at the bottom and then click on &lt;code&gt;+&lt;/code&gt; button to create a new query. Select the &lt;strong&gt;Google Sheets&lt;/strong&gt; from the &lt;strong&gt;Datasource&lt;/strong&gt; dropdown. In the &lt;strong&gt;Operations&lt;/strong&gt; dropdown, select ‚Äú&lt;strong&gt;Read data from a spreadsheet&lt;/strong&gt;‚Äù. Enter the &lt;strong&gt;Spreadsheet ID&lt;/strong&gt; and then click on the &lt;strong&gt;Preview&lt;/strong&gt; button to quickly test the query. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° You'll find the Spreadsheet ID in the URL of your Google Sheet.&lt;br&gt;
Let say the URL of Google Sheet is:&lt;br&gt;
&lt;a href="https://docs.google.com/spreadsheets/d/1gIfeXMmgJAKrWmm_MtivOj68zZM_H9D8qR5mzVvzo6c/edit?usp=sharing"&gt;https://docs.google.com/spreadsheets/d/1gIfeXMmgJAKrWmm_MtivOj68zZM_H9D8qR5mzVvzo6c/edit?usp=sharing&lt;/a&gt;&lt;br&gt;
In this URL, &lt;strong&gt;1gIfeXMmgJAKrWmm_MtivOj68zZM_H9D8qR5mzVvzo6c&lt;/strong&gt; is the Spreadsheet ID&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v0mcKLgW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvxgk2h74m1xgp08q0v1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v0mcKLgW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvxgk2h74m1xgp08q0v1.gif" alt="reading-data" width="880" height="432"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see the query has successfully fetched the data from the Google Sheet in the form of JSON. Now, go to the &lt;strong&gt;Advanced&lt;/strong&gt; tab and toggle ‚Äú&lt;strong&gt;Run this query on page load?&lt;/strong&gt;‚Äù to enable the query to automatically run every time you load the app. You can rename the query from the center and click on the &lt;strong&gt;Create&lt;/strong&gt; button at the top-right corner to save the query.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-data-to-the-spreadsheet"&gt;
  &lt;/a&gt;
  Adding data to the spreadsheet
&lt;/h3&gt;

&lt;p&gt;Now for adding new rows to the spreadsheet, we‚Äôll create a new query in exactly the same way we created above for reading the data. All we need to do is just set the Operation to ‚Äú&lt;strong&gt;Append data to a spreadsheet&lt;/strong&gt;‚Äù. In the Rows field, enter &lt;code&gt;[{"id": "{{components.textinput4.value ?? ''}}", "company": "{{components.textinput1.value ?? ''}}", "position": "{{components.textinput2.value ?? ''}}", "date-applied": "{{components.datepicker1.value ?? ''}}", "status": "{{components.dropdown1.value ?? ''}}"}]&lt;/code&gt; - here we are using JavaScript to get the dynamic data from the widgets like text input, date-picker, and dropdown. Everytime a user will input a new data in these widgets, the query will use the data to add new row to the linked spreadsheet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FPrgXuJy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwfvzhqkb6btk8tdtlqc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FPrgXuJy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwfvzhqkb6btk8tdtlqc.png" alt="append" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once entered the details, rename the query and click &lt;strong&gt;Create&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#updating-a-row-in-the-spreadsheet"&gt;
  &lt;/a&gt;
  Updating a row in the spreadsheet
&lt;/h3&gt;

&lt;p&gt;Create a new query, select &lt;strong&gt;Google Sheets&lt;/strong&gt; as the datasource from the dropdown. Enter the following details in their respective fields:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Operation&lt;/strong&gt;: &lt;code&gt;Update data to a spreadsheet&lt;/code&gt; for updating the data&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Spreadsheet&lt;/strong&gt; &lt;strong&gt;ID&lt;/strong&gt;: ID from the URL of Google Spreadsheet&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Where&lt;/strong&gt;, &lt;strong&gt;Operator&lt;/strong&gt;, and &lt;strong&gt;Value:&lt;/strong&gt; For &lt;strong&gt;Where&lt;/strong&gt; we will use the id which is the key of a column, for Operator we will use &lt;code&gt;===&lt;/code&gt; (used to check equality), and for &lt;strong&gt;Value&lt;/strong&gt; we will use &lt;code&gt;{{components.dropdown2.value}}&lt;/code&gt; i.e the value from the dropdown including row numbers.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Body&lt;/strong&gt;: &lt;code&gt;{{({id: components.textinput4.value, company: components.textinput1.value, position: components.textinput2.value, url: components.textinput3.value, 'date-applied': components.datepicker1.value, status: components.dropdown1.value})}}&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IiOgUyXb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s78oyi44vdll2lf7imuq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IiOgUyXb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s78oyi44vdll2lf7imuq.png" alt="update" width="880" height="420"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deleting-a-row-from-the-spreadsheet"&gt;
  &lt;/a&gt;
  Deleting a row from the spreadsheet
&lt;/h3&gt;

&lt;p&gt;Now finally create our last query for deleting the row from the table. Just follow the same steps mentioned above to create a new query for the Google Sheet datasource and enter the Spreadsheet ID. For deleting a row in the table we just need the row number, that we will take as an input from the user using the dropdown widget. So, we will use JavaScript to get the value from the dropdown widget. Just enter &lt;code&gt;{{components.dropdown2.value}}&lt;/code&gt; in the &lt;strong&gt;Delete row number&lt;/strong&gt; field.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Dg4ggfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohv1v6o53br9whccss2l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Dg4ggfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohv1v6o53br9whccss2l.png" alt="delete" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, we have successfully created the four queries to perform the CRUD operations.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° You can add the event handler from the &lt;strong&gt;Advanced&lt;/strong&gt; tab to perform an action whenever the query is successful. Like for example, you can create an event handler in each of the &lt;strong&gt;Append, Update and Delete&lt;/strong&gt; queries to run the &lt;strong&gt;Read&lt;/strong&gt; query - this will reload the table with the new data every time the user adds, deletes, or updates data.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#linking-the-queries-to-the-ui"&gt;
  &lt;/a&gt;
  Linking the queries to the UI
&lt;/h2&gt;

&lt;p&gt;So now that we have built the user interface and are done creating the CRUD queries, we will now link the queries to the user interface to make our application fully functional. To do this, we just need to make changes to the properties of all the widgets that we have added. Let‚Äôs do this:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-the-table-to-display-the-data"&gt;
  &lt;/a&gt;
  Configuring the table to display the data
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Click anywhere on the table to open the inspect panel on the right sidebar.&lt;/li&gt;
&lt;li&gt;In the &lt;strong&gt;Table data&lt;/strong&gt; property, input &lt;code&gt;{{queries.googlesheets1.data}}&lt;/code&gt; - this will use the data that we are getting from the query &lt;code&gt;googlesheets1&lt;/code&gt; and will populate into the table.&lt;/li&gt;
&lt;li&gt;We have six columns in our &lt;a href="https://docs.google.com/spreadsheets/d/1xugVYEkwDZui5ogTtsUGmesRB4QOWAAGuIoKn-lEk1w/edit#gid=0"&gt;Google Sheet&lt;/a&gt;(mock data), so we will create 5 new columns to our table for &lt;strong&gt;Id, Company, Position, Date Applied, and Status&lt;/strong&gt;. For the &lt;strong&gt;URL&lt;/strong&gt; column, we can add an action button to open the URL. For every column, we need to provide a &lt;strong&gt;Column Name&lt;/strong&gt; which is the name of the column that will be displayed on the UI, and the &lt;strong&gt;Key&lt;/strong&gt; which is the name of the column from the google sheet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ulTSlTjH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65u156qt7k5acnnmj8up.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ulTSlTjH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65u156qt7k5acnnmj8up.png" alt="column" width="508" height="439"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create an &lt;strong&gt;Action button&lt;/strong&gt;, add the button text, and set the position of the button. Create an &lt;strong&gt;On Click&lt;/strong&gt; handler for this button and set &lt;strong&gt;Open webpage&lt;/strong&gt; as the action. In the URL field, enter &lt;code&gt;{{components.table1.selectedRow.url}}&lt;/code&gt; which will get the URL from the selected row in the table.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lfCA1ySV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/akn8e20rblyzv1qzbru5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lfCA1ySV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/akn8e20rblyzv1qzbru5.png" alt="url" width="502" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, run the first query to perform the read operation and it will populate the data into the table. ‚ú®&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GHYZ-C1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acme3z3yf9cmz4nv6uwf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GHYZ-C1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acme3z3yf9cmz4nv6uwf.gif" alt="populate" width="880" height="432"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-the-widgets-to-add-update-or-delete-row"&gt;
  &lt;/a&gt;
  Configuring the widgets to add, update or delete row
&lt;/h3&gt;

&lt;p&gt;While building the user interface, we built a sidebar for &lt;strong&gt;Creating, Updating, or Deleting&lt;/strong&gt; rows. We used widgets like &lt;strong&gt;text-input, date-picker, dropdown,&lt;/strong&gt; and &lt;strong&gt;buttons&lt;/strong&gt; for this section. Since we have six columns in our table, we need six components to get the user input. We used four text-inputs for &lt;strong&gt;Row ID, Company Name, Position, and Application URL&lt;/strong&gt; respectively. For &lt;strong&gt;Date Applied&lt;/strong&gt; we used the date-picker widget and for the &lt;strong&gt;Status&lt;/strong&gt; column, we used the dropdown widget. We used an extra dropdown for selecting the row number if we want to update or delete the specific row.&lt;/p&gt;

&lt;p&gt;Let‚Äôs configure these widgets:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Text-inputs:&lt;/strong&gt; For all the &lt;strong&gt;four text-inputs&lt;/strong&gt; (Row ID, Company Name, Position, URL) we need to just click on them to open the inspect panel and enter the placeholder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E0Rz8NNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8gazilu84f5o0kkmi8j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E0Rz8NNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8gazilu84f5o0kkmi8j.png" alt="placeholder" width="696" height="571"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Date-picker(Date Applied)&lt;/strong&gt;: You can keep it with its default settings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dropdown (Status):&lt;/strong&gt; Add the &lt;strong&gt;Option values&lt;/strong&gt; and &lt;strong&gt;Option label&lt;/strong&gt; - &lt;code&gt;{{["wishlist", "applied", "interview", "offer", "rejected"]}}&lt;/code&gt;. These are the values that will be taken by the &lt;strong&gt;update and append queries&lt;/strong&gt; to update the &lt;strong&gt;Status&lt;/strong&gt; column in the table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--93Tl-SZu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1slm0zohjsltusey86b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--93Tl-SZu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1slm0zohjsltusey86b.png" alt="dropdown" width="693" height="567"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dropdown(For updating or deleting the row):&lt;/strong&gt; Enter the &lt;strong&gt;Option values&lt;/strong&gt; and &lt;strong&gt;Option label&lt;/strong&gt; -  ****&lt;code&gt;{{queries.googlesheets1.data.map((datum) =&amp;gt; datum["id"])}}&lt;/code&gt;. This will use the map JS function to populate dropdown options with the row numbers fetched by the &lt;code&gt;googlesheets1&lt;/code&gt; query.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hsuwYQke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa7qfq2twodcmnt6oaxh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hsuwYQke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa7qfq2twodcmnt6oaxh.png" alt="rowdrop" width="680" height="564"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Button1 (for appending the row):&lt;/strong&gt; We will add an On Click handler to this button so that &lt;code&gt;googlesheetsAppend&lt;/code&gt; query is run every time the button is clicked.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uLB9Dr6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0v5slfjpa4mbz1339rp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uLB9Dr6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0v5slfjpa4mbz1339rp.png" alt="appendbutton" width="682" height="534"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Button2 (for updating the row):&lt;/strong&gt; Just like the button for appending the row we will add the On Click handler to this button and link the &lt;code&gt;googlesheetsUpdate&lt;/code&gt; query.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HS8HCPu5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvd32jbe8ounrhk0bgqk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HS8HCPu5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvd32jbe8ounrhk0bgqk.png" alt="updatebutton" width="685" height="524"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Button3 (for deleting the row):&lt;/strong&gt; Lastly, we will add the event handler to this button and link it to &lt;code&gt;googlesheetsDelete&lt;/code&gt; query.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° You can always customize the widgets from the &lt;strong&gt;Style&lt;/strong&gt; tab in inspect panel.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kYX2Xf4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8149oha7l4hqam2kn24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kYX2Xf4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8149oha7l4hqam2kn24.png" alt="deletebutton" width="690" height="509"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great! you just built your own personal job application tracker app. You can click on the &lt;strong&gt;Deploy&lt;/strong&gt; button on the top right corner, save a version and deploy it.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>All About ArgoCD, A Beginner's Guide</title>
      <author>Abhinav Dubey</author>
      <pubDate>Wed, 19 Jan 2022 13:58:29 +0000</pubDate>
      <link>https://dev.to/abhinavd26/all-about-argocd-a-beginners-guide-33c9</link>
      <guid>https://dev.to/abhinavd26/all-about-argocd-a-beginners-guide-33c9</guid>
      <description>&lt;p&gt;ArgoCD, being one of their 1st in the market known for having a declarative GitOps based deployment over Kubernetes is one of the most adopted Continuous Delivery tool. It has been known for its excellent application deployment and management over Kubernetes and features such as auto healing clusters, user-access management, status check, etc. It is &lt;a href="https://github.com/argoproj/argo-cd"&gt;open-sourced on github&lt;/a&gt;  under Apache 2.0 License.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#argocd-existence-why-"&gt;
  &lt;/a&gt;
  ArgoCD Existence, Why ü§î?
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--znpQN1v---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec6gjcpw7vvlrkj88cvs.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--znpQN1v---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec6gjcpw7vvlrkj88cvs.jpeg" alt="but-why" width="510" height="264"&gt;&lt;/a&gt;&lt;br&gt;
There are already hell lots of tools in the market, so why do we need another one? To justify the existence of ArgoCD, let's try to understand the workflow for application deployment before-and-after ArgoCD.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#workflow-before-argocd"&gt;
  &lt;/a&gt;
  Workflow Before ArgoCD
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mIrM_-vr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9dxi44lpvq97pkg03al.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mIrM_-vr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9dxi44lpvq97pkg03al.jpg" alt="before-argocd" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before the existence of ArgoCD, the pipeline seems something like the image above. A common ci-cd tool is used for both the Continuous Integration and Continuous Deployment.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;once the code is being pushed to version-control let's say Github, the tool triggers the other jobs&lt;/li&gt;
&lt;li&gt;it runs the test-cases, build images, push the image to respective container registry&lt;/li&gt;
&lt;li&gt;then changes the deployment manifests as per the new image build, and then deploy the new manifest using &lt;code&gt;kubectl&lt;/code&gt; commands&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All these jobs/tasks are being performed by a ci-cd tool. This is how traditional ci-cd workflow works before the existence of ArgoCD. However there are some challenges in this workflow.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We need to install and configure tools like kubectl, helm, etc in the ci-cd tools&lt;/li&gt;
&lt;li&gt;We will have to provide access to k8s cluster and cloud providers if using managed services like eks to the respective ci-cd tool&lt;/li&gt;
&lt;li&gt;It may lead to security loopholes as credentials are provided to external tools&lt;/li&gt;
&lt;li&gt;There's no visibility of deployment metrics, your ci-cd tools doesn't know the status of deployed application once they apply the manifests&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#workflow-after-argocd"&gt;
  &lt;/a&gt;
  Workflow After ArgoCD
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SlS9e6iJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6pnk2lfu0hixq09avgj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SlS9e6iJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6pnk2lfu0hixq09avgj.jpg" alt="after-argocd" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the ArgoCD was launched in the market, the complete workflow has been changed. As you can see in the image, the Continuous Integration and Continuous Deployment has been separated now. ArgoCD uses declarative GitOps based deployment which states that the best practices is to have two different git repositories, one for application source code and another for deployment manifest files. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;once the code has been pushed to version, the CI pipeline trigger the job&lt;/li&gt;
&lt;li&gt;starts to run test cases, build images, push images to respective container registry and then update the manifest according and push manifests to its respective git repository&lt;/li&gt;
&lt;li&gt;once the updated manifests is pushed to its respective repository be it Github, Gitlab, etc as shown in the image, ArgoCD installed within the cluster automatically checks for the updates and apply within the cluster.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is how, the respective ci-cd tool is limited to CI and ArgoCD handles the CD part and thus separating both the operations. There are many different advantages of using this workflow, some of them are -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it uses git as a single source of truth, thus incorporating GitOps principles for the deployment&lt;/li&gt;
&lt;li&gt;since ArgoCD is installed within the cluster and is the only one that makes changes within the cluster, it doesn't require any extra credentials unlike the case of a ci-cd tool&lt;/li&gt;
&lt;li&gt;ArgoCD provides a dashboard to manage all the deployed applications hence enables you to get the status of application being deployed or not which we doesn't get in case of previous workflow&lt;/li&gt;
&lt;li&gt;easy rollback, as the cluster is synced with a separate git repository so we just need to revert the changes in git and the cluster will be automatically synced with the git repository&lt;/li&gt;
&lt;li&gt;disaster recovery, as in case of any disaster you just need to point the git repository to the newly created cluster and it will have all the configurations of the previous cluster&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, these are some of the major advantages of the Workflow after ArgoCD. Now let's dive into ArgoCD and do some practical stuffs.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#argocd-getting-started"&gt;
  &lt;/a&gt;
  ArgoCD Getting Started
&lt;/h1&gt;

&lt;p&gt;As we have seen some background concepts of ArgoCD and its need, let dive into some hands-on part. There are two different ways to install and setup ArgoCD in you cluster, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install using script&lt;/li&gt;
&lt;li&gt;Install using helm chart&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's look into each of these.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Note: kubectl command must be installed and kubeconfig file should be at the default location(~/.kube/config) before installing argocd]&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installation-by-script"&gt;
  &lt;/a&gt;
  Installation by script
&lt;/h2&gt;

&lt;p&gt;Just with few commands you can have your ArgoCD installed in your cluster and ready to deploy an application over it. Please execute the below commands for installation - &lt;/p&gt;

&lt;p&gt;Create a namespace &lt;code&gt;argocd&lt;/code&gt; where all ArgoCD resources will be installed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl create namespace argocd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install all resources in the created namespace&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl apply &lt;span class="nt"&gt;-n&lt;/span&gt; argocd &lt;span class="nt"&gt;-f&lt;/span&gt; https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After installation, you need to access the dashboard. There are different methods given in their &lt;a href="https://argo-cd.readthedocs.io/en/stable/getting_started/#3-access-the-argo-cd-api-server"&gt;documentation&lt;/a&gt; for accessing the dashboard. We will be using port-forward as we are installing in our local machine. Please execute the command below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl port-forward svc/argocd-server &lt;span class="nt"&gt;-n&lt;/span&gt; argocd 8080:443
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now your ArgoCD dashboard can be accessed in &lt;code&gt;127.0.0.1:8080&lt;/code&gt; as you can see in the image below.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lEu5-bhW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nofuzua4039l96mekfna.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lEu5-bhW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nofuzua4039l96mekfna.png" alt="argocd-dashboard" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the credentials to login, the username is &lt;code&gt;admin&lt;/code&gt; and for password, execute the following command -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl &lt;span class="nt"&gt;-n&lt;/span&gt; argocd get secret argocd-initial-admin-secret &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="nv"&gt;jsonpath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"{.data.password}"&lt;/span&gt; | &lt;span class="nb"&gt;base64&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Congratulation ü•≥ You have successfully logged into the argocd dashboard. &lt;br&gt;
Now, this was one of the method. It can also be installed using helm chart. Let's see how.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installation-by-helm"&gt;
  &lt;/a&gt;
  Installation by helm
&lt;/h2&gt;

&lt;p&gt;Recently argo-project has launched their official helm-chart support for ArgoCD, which enables us to install it with helm as well. Please execute the following command to install ArgoCD with helm -&lt;/p&gt;

&lt;p&gt;Add the helm repository in your system&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm repo add argo https://argoproj.github.io/argo-helm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now install the ArgoCD helm chart&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm &lt;span class="nb"&gt;install &lt;/span&gt;my-release argo/argo-cd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The advantage of installing with helm chart is that, you can easily provide the configuration as you want during the installation. For details of the parameters support by ArgoCD helm chart, please have a look at this detailed &lt;a href="https://github.com/argoproj/argo-helm/tree/master/charts/argo-cd#general-parameters"&gt;README&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After installation, to access the dashboard and credentials, you can follow the same commands as we did earlier. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Note: Make sure to remove namespace i.e, &lt;code&gt;-n argocd&lt;/code&gt; if you have not provided any namespace during the installation from commands to access dashboard &amp;amp; credentials. To provide the namespace, append this with helm install command &lt;code&gt;--create-namespace --namespace argocd&lt;/code&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is how easily you can install ArgoCD with the two different methods. For detailed documentation of getting started with ArgoCD, please have a &lt;a href="https://argo-cd.readthedocs.io/en/stable/getting_started/#getting-started"&gt;look at this&lt;/a&gt;. Now, lets deploy a simple application and configure it to manage by ArgoCD.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#application-deployment"&gt;
  &lt;/a&gt;
  Application Deployment
&lt;/h1&gt;

&lt;p&gt;For any application to be deployed and managed by ArgoCD, we need to create a config file say, &lt;code&gt;application.yaml&lt;/code&gt; which will have all the configurations required by ArgoCD containing the repository URL to sync with, Path where all manifests are being stored which needs to be deployed, namespace, and other configs. Here's a &lt;a href="https://github.com/Abhinav-26/ArgoCD-Config-Test"&gt;demo project&lt;/a&gt; which we will deploy in our cluster having all &lt;code&gt;yamls&lt;/code&gt; and &lt;code&gt;application.yaml&lt;/code&gt; file with bare minimum configs.&lt;/p&gt;

&lt;p&gt;Let's deploy our application. Please follow along with the following steps.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First, we need to store all the config files, including the &lt;code&gt;application.yaml&lt;/code&gt; in a separate gitHub (gitlab, bitbucket, etc) repository as you &lt;a href="https://github.com/Abhinav-26/ArgoCD-Config-Test"&gt;can see here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then we just need to deploy the &lt;code&gt;application.yaml&lt;/code&gt; which consists config required by ArgoCD in the cluster by using the following command -&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; application.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nkp3HXNG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jctvbkokfrlqazr975ho.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nkp3HXNG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jctvbkokfrlqazr975ho.png" alt="kubectl-apply" width="880" height="197"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now only just by applying the ArgoCD application config file, all other k8s yamls will automatically gets deployed and synced with the cluster. In the below image you can see that, the application, &lt;code&gt;go-app-argo-config&lt;/code&gt; is responsible for creating all other resources.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ocu67w-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brglesoh6gl1155uaifw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ocu67w-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brglesoh6gl1155uaifw.png" alt="argo-config" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we want to update the deployment, service or add any other k8s manifests (yamls), we simply need to makes the changes and push in the github repository synced with it and rest will be taken care ArgoCD.&lt;/p&gt;

&lt;p&gt;So, this was all about ArgoCD which you need to kick-start and play around it. If you have any doubts or suggestions, please feel free to comment it down, I would be happy enough to answer all your queries.&lt;/p&gt;

&lt;p&gt;For more details about ArgoCD please feel to check out their &lt;a href="https://github.com/argoproj/argo-cd/"&gt;Github Repository&lt;/a&gt;&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>We Tested the Best Serverless Monitoring Solutions so You Don‚Äôt Have To</title>
      <author>Guillaume Lagrange</author>
      <pubDate>Wed, 19 Jan 2022 13:53:39 +0000</pubDate>
      <link>https://dev.to/kumo/we-tested-the-best-serverless-monitoring-solutions-so-you-dont-have-to-121m</link>
      <guid>https://dev.to/kumo/we-tested-the-best-serverless-monitoring-solutions-so-you-dont-have-to-121m</guid>
      <description>&lt;p&gt;&lt;em&gt;Written by Charles G√©ry and Guillaume Lagrange&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Go beyond AWS alerts with these monitoring tools for your serverless application&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live. ‚Äî John F. Woods&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#%C2%A0introduction"&gt;
  &lt;/a&gt;
  üìâ¬†Introduction
&lt;/h3&gt;

&lt;p&gt;The ultimate goal of monitoring is to create quality software for your users. Indeed, monitoring is a key element in providing insights into the health of your application. It helps you find the cause of your bugs, provide a performance overview and get custom metrics. &lt;/p&gt;

&lt;p&gt;Serverless applications don't escape this need. However, in a serverless context your architecture is distributed across multiple different services. You therefore need to use &lt;strong&gt;specific monitoring techniques&lt;/strong&gt; to aggregate the distributed data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tldr-we-liked-epsagon"&gt;
  &lt;/a&gt;
  TLDR: We liked Epsagon
&lt;/h3&gt;

&lt;p&gt;For those who want a quick answer, here is our conclusion:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you only need to monitor a serverless backend, &lt;strong&gt;we highly recommend Epsagon&lt;/strong&gt;. &lt;strong&gt;Lumigo is a pricey but good alternative&lt;/strong&gt; if you want an even quicker to setup solution.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;If you already use Bugsnag or Sentry&lt;/strong&gt; to monitor some part of your app, &lt;strong&gt;their serverless integration is the way to go&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If you need to use the &lt;strong&gt;Datadog&lt;/strong&gt; ecosystem, you can. However &lt;strong&gt;their serverless offer is not up to the standard&lt;/strong&gt; of their other monitoring services.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lets-talk-about-what-matters"&gt;
  &lt;/a&gt;
  Let's talk about what matters
&lt;/h3&gt;

&lt;p&gt;Here's a list of the aspects we deem important in a monitoring software.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Finding the origin of a bug as fast as possible.&lt;/li&gt;
&lt;li&gt;Alert notification channels: slack and teams are a must-have.&lt;/li&gt;
&lt;li&gt;Alert triggers customization, as well as the alert notification content itself.&lt;/li&gt;
&lt;li&gt;AWS services which can be monitored, with a particular emphasis on Lambda, DynamoDB, API Gateway, EventBridge and Stepfunctions.

&lt;ul&gt;
&lt;li&gt;Any service outside of AWS is also a bonus, the more the merrier.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Ability to monitor custom metrics and to classify errors.&lt;/li&gt;
&lt;li&gt;Pricing üí∏&lt;/li&gt;
&lt;li&gt;The overall UX and intuitivity of the monitoring solution dashboard.&lt;/li&gt;
&lt;li&gt;Ease of installation and documentation.&lt;/li&gt;
&lt;li&gt;Funds and number of clients: we do not want the service provider to cease activity when we need it most!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We first tested the different solutions on a small proof of concept project, which generates various errors, available here &lt;a href="https://github.com/theodo/monitoring-serverless"&gt;https://github.com/theodo/monitoring-serverless&lt;/a&gt;. From this first test, we selected our favorite services and tested them on larger existing projects. This gave us a shortlist of usable solutions, as well as a few bad experiences.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%EF%B8%8F-but-first-why-do-we-not-use-cloudwatch-and-get-on-with-our-day-"&gt;
  &lt;/a&gt;
  ‚åöÔ∏è But first, why do we not use Cloudwatch and get on with our day ?
&lt;/h3&gt;

&lt;p&gt;Our story begins when we received an email with an alert from AWS Cloudwatch. It was telling us one of the Lambda function execution in our project had failed. Finding the origin and the cause of the bug proved to be a complicated task. The message we received not only did was missing the error stack trace, but we could not even know which Lambda threw the error! To find the origin of the bug we had to go to AWS Cloudwatch, investigate to find which Lambda had an error, find the logs of this lambda, and &lt;em&gt;finally&lt;/em&gt; browse through them to find the error stack trace. To cut down on the research, you could set an AWS alarm up for each lambda, but it quickly gets expensive. In both cases, it is a gruesome and tiresome process.&lt;/p&gt;

&lt;p&gt;That's when we asked ourselves: is there a better solution? Our cognitive time could be used to create value instead of playing hide-and-seek with every bug. We decided to test the different monitoring solutions the market had to offer to shortlist the ones that were the most suited to our needs.&lt;/p&gt;

&lt;p&gt;Our main goal was to be able to &lt;strong&gt;find the origin of bugs as fast as possible&lt;/strong&gt;. To achieve that we needed to be &lt;strong&gt;informed of errors on relevant notification channels&lt;/strong&gt; (e.g. Slack, Teams...) and to &lt;strong&gt;have the origin and stack trace of the errors easily available&lt;/strong&gt;. Starting from this objective, we listed a set of criteria to compare the existing Serverless monitoring solutions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0epsagon"&gt;
  &lt;/a&gt;
  üê∞¬†&lt;a href="https://epsagon.com/"&gt;Epsagon&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Let's be real, &lt;strong&gt;Epsagon is the winner&lt;/strong&gt;. It ticked all the boxes of our checklist. &lt;strong&gt;The installation could not be simpler&lt;/strong&gt;. Deploying the CloudFormation stack and selecting the AWS resources we wanted to trace was a matter of minutes. &lt;strong&gt;The only drawback is the out-of-the-box dashboard experience&lt;/strong&gt;. While some services provided an excellent default dashboard, Epsagon gives you an empty dashboard you have to configure by yourself. Fortunately, some templates are available to start, depending on your application specificities. A better default dashboard would have been appreciated. Other than that, the experience has been absolutely stellar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--flszToS8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j38ig5f36lnjezg43xii.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--flszToS8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j38ig5f36lnjezg43xii.png" alt="One of the default dashboards available" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We were able to do everything we wanted with Epsagon, and more:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Set up instant alerts&lt;/strong&gt; via mail/slack/teams/telegram triggered by customizable filters&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Custom metrics&lt;/strong&gt; using the provided Epsagon SDK&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Trace requests&lt;/strong&gt; across multiple AWS services&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Customize our dashboard&lt;/strong&gt; with very flexible widgets&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wjZ6jqHc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7s1vdtsn6jhbndgrlk4b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wjZ6jqHc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7s1vdtsn6jhbndgrlk4b.png" alt="Epsagon Slack notification example" width="620" height="211"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By passively using the app and having the events traced, Epsagon was able to &lt;strong&gt;build an up-to-date Service Map&lt;/strong&gt;. From this map, you can access each traced invocation of monitored services. This makes Epsagon not only an excellent monitoring service, but &lt;strong&gt;also a nice tool to visualize what actually happens in your application.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JM1ZGET9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uedy4otx33rh9e599u39.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JM1ZGET9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uedy4otx33rh9e599u39.png" alt="Exported view of an Epsagon's Service map" width="880" height="513"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Exported view of an application through Epsagon's Service map. Names have been hidden for privacy.&lt;/p&gt;

&lt;p&gt;Epsagon was &lt;a href="https://www.cisco.com/c/en/us/about/corporate-strategy-office/acquisitions/epsagon.html"&gt;acquired by Cisco in last October&lt;/a&gt;, and &lt;a href="https://epsagon.com/announcements/extended-free-tier/"&gt;&lt;strong&gt;extended its free tier to 10M monthly traces&lt;/strong&gt;&lt;/a&gt;. This makes Epsagon the &lt;strong&gt;most financially interesting solution we tested out by far&lt;/strong&gt;. We can only recommend you to join the hype and try it out! Keep in mind that the Epsagon stack uses CloudTrail, which can add costs to your project.&lt;/p&gt;

&lt;p&gt;Because everything cannot be perfect, we have to mention we had issues inviting team members while using Google SSO. This was resolved by creating an account explicitly with Epsagon, but there's definitely room for improvement here.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Extensive and very customizable filters&lt;/td&gt;
&lt;td&gt;Dashboard can be painful to set up&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Very generous free tier&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Out of the box tracing is very performant&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Service map view&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;If you want to monitor your AWS serverless app with highly customizable alerts and are willing to spend the time configuring the tool, we highly recommend Epsagon.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0lumigo"&gt;
  &lt;/a&gt;
  ‚òÑÔ∏è¬†&lt;a href="https://lumigo.io/"&gt;Lumigo&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Lumigo started out as our favorite since the initial experience was better than Epsagon. &lt;strong&gt;The installation process is perfect&lt;/strong&gt;, and Lumigo can be set up in a matter of minutes. &lt;strong&gt;The default dashboard is functionna&lt;/strong&gt;l. However, &lt;strong&gt;the default widgets are not removable,&lt;/strong&gt; and in our opinion forcing them on everyone is not a good idea.&lt;/p&gt;

&lt;p&gt;In terms of features however, Lumigo is &lt;strong&gt;packed with useful monitoring tools for your serverless application&lt;/strong&gt;. You can quickly &lt;strong&gt;access logs related to alerts, trace a request through your different service, access occurrences of categorized errors...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S71kCX0o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cb3bdk1mlcwhcd8fg2dp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S71kCX0o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cb3bdk1mlcwhcd8fg2dp.png" alt="Lumigo's default dashboard" width="880" height="499"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Where Lumigo is the least competitive, is its pricing. &lt;strong&gt;Its free tier is limited to 150K traces a month.&lt;/strong&gt; To put the pricing in perspective, its $300 a month plan only offers half as many traces than Epsagon's free tier.&lt;/p&gt;

&lt;p&gt;Lumigo also provides a live view of your lambdas, so you can track what is happening on your application at all time!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--THHteibc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k952td0pp7zfdr92ez87.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--THHteibc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k952td0pp7zfdr92ez87.png" alt="Lumigo's latest Live Tail feature is still in beta" width="880" height="118"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Easy installation&lt;/td&gt;
&lt;td&gt;Quickly expensive&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Default dashboard is already satisfactory&lt;/td&gt;
&lt;td&gt;Default widgets cannot be removed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Live view of lambda invocations&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;If you want to quickly setup a monitoring tool for your serverless application, and you want to make use of features like Live Tail, we would recommend Lumigo. While pricier than Epsagon, it will definitely save you debugging time.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0sentry"&gt;
  &lt;/a&gt;
  üî∫¬†&lt;a href="https://sentry.io"&gt;Sentry&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The next two services both offer great experiences, but lack specific features for serverless monitoring.&lt;/strong&gt; The first one, &lt;strong&gt;Sentry, is a great generalist monitoring solution&lt;/strong&gt;. It is &lt;strong&gt;easy to set up and the UX feels smooth&lt;/strong&gt;. It offers a few options to monitor your lambdas and get notified quickly when one of them fails (we received error notifications in ~30s during our tests). Yet, &lt;strong&gt;the range of options offered for serverless monitoring are limited compared to our main challengers&lt;/strong&gt;. You can only monitor Lambda functions, and you can't add custom metrics inside your lambdas for instance. The range of notification integration options was also quite limited (at least with the free tier) compared to its competitors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--An67Kpd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pomb8fg26fb7iow2bp3t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--An67Kpd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pomb8fg26fb7iow2bp3t.png" alt="An error inside the Sentry dashboard" width="880" height="253"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But &lt;strong&gt;Sentry really shines when you have to monitor applications with many technologies&lt;/strong&gt; : it integrates with a great deal of technologies. Overall, we recommend using Sentry if you want an easy-to-use monitoring solution and serverless monitoring is not your main concern.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XJc6upqk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvl9pcvqhlweqfdhx3pb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XJc6upqk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvl9pcvqhlweqfdhx3pb.png" alt="Sentry's default email alert" width="880" height="669"&gt;&lt;/a&gt;&lt;br&gt;
Sentry's default email alert contains information about the Lambda that caused the error and its stack trace&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Lightweight installation&lt;/td&gt;
&lt;td&gt;Limited Options for Serverless monitoring&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Smooth UX&lt;/td&gt;
&lt;td&gt;Limited notification channels in free tier&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Great when you need to monitor services that are not serverless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Great to quickly find the origin and the cause of errors&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0bugsnag"&gt;
  &lt;/a&gt;
  üåÄ¬†&lt;a href="https://www.bugsnag.com/"&gt;Bugsnag&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Bugsnag offers a clean and functional experience.&lt;/strong&gt; You just need to wrap your lambdas with Bugsnag code, and you are good to go. &lt;strong&gt;Error notification is lightning fast&lt;/strong&gt; (we received Slack notifications for errors in ~1s during some of our tests), and it &lt;strong&gt;integrates with dozens of other apps&lt;/strong&gt;. The website looks awesome (even though you can't create custom dashboards) and the documentation is crystal clear.&lt;/p&gt;

&lt;p&gt;However, &lt;strong&gt;Bugsnag was not developed with serverless in mind&lt;/strong&gt;. Lambda monitoring is added through a plugin, and has limited options compared to the rest of the framework (you can't use custom metrics, and you can't filter errors by lambda for instance). Serverless services outside of Lambda are not available through Bugsnag.&lt;/p&gt;

&lt;p&gt;All in one, Bugsnag is a cool tool but has limited customization options and was not thought with serverless in mind.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Lightweight installation&lt;/td&gt;
&lt;td&gt;Limited Options for Serverless monitoring&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Smooth UX&lt;/td&gt;
&lt;td&gt;No customizable dashboard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Great when you need to monitor services that are not serverless (but a little worse than Sentry)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Great to quickly find the origin and the cause of errors&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#the-bad-students"&gt;
  &lt;/a&gt;
  The bad students
&lt;/h2&gt;

&lt;p&gt;Let's be honest, the services that follow were not all that bad. They just did not suit the set of criteria that we had, but still might be adapted for your project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#datadog"&gt;
  &lt;/a&gt;
  üê∂ &lt;a href="https://www.datadoghq.com/"&gt;Datadog&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Our experience with Datadog was kind of a surprise. &lt;strong&gt;Setting it up to monitor a serverless application was complex and the documentation didn't help&lt;/strong&gt;. Once set up, the classification of the errors and the notification system proved to be limited for our specific serverless needs. For instance, you cannot trigger a Slack notification with the name and error message whenever you get a new error out-of-the-box; you have to manually set-up a monitor for this. Yet, on the bright side, &lt;strong&gt;Datadog offers tons of integrations with different services, the possibility to get custom metrics, and many options to monitor about every existing system.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While we don't recommend the use of Datadog on a fully serverless project, it &lt;strong&gt;might be interesting on a project that is a mix of serverless and other technologies.&lt;/strong&gt; Datadog remains a excellent monitoring solution if you know you are not going to use serverless !&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Market leaders, which the widest monitoring offer available out there&lt;/td&gt;
&lt;td&gt;Limited Options for Serverless monitoring&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A lot of potential with Datadog's track record&lt;/td&gt;
&lt;td&gt;Cumbersome installation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Documentation could be clearer, and is sometimes outdated&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-serverless-dashboard"&gt;
  &lt;/a&gt;
  ‚ö°Ô∏è &lt;a href="https://www.serverless.com/"&gt;Serverless Dashboard&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The developers behind the famous Serverless Framework also offer a monitoring service which easily integrates with their framework. While &lt;strong&gt;it is super easy to integrate with your project&lt;/strong&gt; (you literally have between one and three lines of code to add in your serverless.yml and that's all) and the interface of the dashboard is very neat, &lt;strong&gt;the monitoring options it offered were more limited than its rivals.&lt;/strong&gt; In particular, the notification and error classifications options were not as good as their counterparts. We also did not find a way to create custom metrics. As its name indicates, Serverless dashboard is limited to serverless monitoring. &lt;/p&gt;

&lt;p&gt;As a side note, we encountered a few issues when using Serverless Dashboard with Typescript that prevented us from getting the monitoring insights.&lt;/p&gt;

&lt;p&gt;Serverless Dashboard &lt;strong&gt;might be the solution for you if you need a simple and easy-to-set-up dashboard when using the Serverless Framework.&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Super easy installation&lt;/td&gt;
&lt;td&gt;Limited Monitoring Options&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Beautiful UI&lt;/td&gt;
&lt;td&gt;No customizable dashboard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;We had a few issues when using TypeScript&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#%F0%9F%95%8A-dashbird"&gt;
  &lt;/a&gt;
  üïä &lt;a href="https://dashbird.io/"&gt;Dashbird&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Dashbird is the penultimate service on our list. While &lt;strong&gt;its interface is pretty, and it integrates with many AWS services, we found its UX pretty poor and the options available for serverless monitoring were limited.&lt;/strong&gt; There was no custom metrics, the classification of errors was limited, and we had troubles getting notified for errors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2cZCsez1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bf4y7t7yqbsdgptvgzs1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2cZCsez1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bf4y7t7yqbsdgptvgzs1.png" alt="Dashbird dashboard" width="880" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Nice UI&lt;/td&gt;
&lt;td&gt;Poor UX&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Integrates with many AWS services&lt;/td&gt;
&lt;td&gt;Limited Monitoring Options&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;A few issues when trying to get notified&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#new-relic"&gt;
  &lt;/a&gt;
  üßø &lt;a href="https://newrelic.com/"&gt;New Relic&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Unfortunately, we were not able to test New Relic. We got errors during the account creation and the setup was too cumbersome. Hopefully, we will be able to test it in the future!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;While &lt;strong&gt;Epsagon is the winner of our comparison&lt;/strong&gt;, we want to remind that &lt;strong&gt;all the solutions presented here were compared in light of our specific set of criteria&lt;/strong&gt;. We wanted a monitoring solution that fitted perfectly in the serverless ecosystem, that integrated well with existing notification channels, and that helped retrieve the origin and stack traces of errors quickly and effectively.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Charles G√©ry &amp;amp; Guillaume Lagrange are software engineers at Kumo, serverless expertise by &lt;a href="https://www.theodo.fr/"&gt;Theodo&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>monitoring</category>
      <category>aws</category>
    </item>
    <item>
      <title>Svelte All The Things</title>
      <author>Mikhail Karan</author>
      <pubDate>Wed, 19 Jan 2022 13:47:57 +0000</pubDate>
      <link>https://dev.to/mikhailkaran/svelte-all-the-things-2m45</link>
      <guid>https://dev.to/mikhailkaran/svelte-all-the-things-2m45</guid>
      <description>&lt;p&gt;&lt;iframe src="https://open.spotify.com/embed/episode/5lowpcmzemrINvoezMWCM1" width="100%" height="232px"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-html-all-the-things"&gt;
  &lt;/a&gt;
  What is HTML All The Things
&lt;/h2&gt;

&lt;p&gt;HTML All The Things is a &lt;a href="https://podcast.htmlallthethings.com/"&gt;web development podcast&lt;/a&gt; and &lt;a href="https://discord.com/invite/jweMCx9"&gt;discord community&lt;/a&gt; which was started by Matt and Mike, developers based in Ontario, Canada. &lt;/p&gt;

&lt;p&gt;The podcast speaks to web development topics as well as running a small business, self-employment and time management. You can join them for both their successes and their struggles as they try to manage expanding their Web Development business without stretching themselves too thin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#announcements"&gt;
  &lt;/a&gt;
  Announcements
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Svelte for Beginners&lt;/strong&gt; Udemy course is now live! Mike took his experience in teaching and learning Svelte and created a course. &lt;/p&gt;

&lt;p&gt;This course will teach you the fundamentals of JavaScript frameworks. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get it now on Udemy!&lt;/strong&gt; üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/svelte-for-beginners/?couponCode=HATTSALE"&gt;Svelte For Beginners&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-this-one-about"&gt;
  &lt;/a&gt;
  What's This One About?
&lt;/h2&gt;

&lt;p&gt;In this episode Matt and Mike discuss Svelte, a framework that Mike has recently switched almost entirely to from Vue. The duo discuss what features of Svelte they enjoy using, some recent milestones in the world of Svelte, and go over some interesting community projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#show-notes"&gt;
  &lt;/a&gt;
  Show Notes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-svelte"&gt;
  &lt;/a&gt;
  What Is Svelte?
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#why-svelte-is-awesome"&gt;
  &lt;/a&gt;
  Why Svelte is Awesome
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;No boilerplate&lt;/li&gt;
&lt;li&gt;No virtual DOM&lt;/li&gt;
&lt;li&gt;Fast dev server because of vite and HMR&lt;/li&gt;
&lt;li&gt;Small package size because it compiles away&lt;/li&gt;
&lt;li&gt;Great developer tooling across all major IDEs&lt;/li&gt;
&lt;li&gt;SvelteKit is an enhancement and not a whole different paradigm&lt;/li&gt;
&lt;li&gt;Feature parity with major frameworks for the web*&lt;/li&gt;
&lt;li&gt;Great way to learn about JavaScript frameworks (plug svelte for beginners course)&lt;/li&gt;
&lt;li&gt;Sveltekit:prefetch&lt;/li&gt;
&lt;li&gt;Svelte stores are easy to setup and use but also extremely extensible &lt;/li&gt;
&lt;li&gt;Animations are super powerful&lt;/li&gt;
&lt;li&gt;Takes a backseat to actual logic writing&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#major-svelte-milestones"&gt;
  &lt;/a&gt;
  Major Svelte Milestones
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;SvelteKit beta - March 2021&lt;/li&gt;
&lt;li&gt;Rich harris joins Vercel - November 2021&lt;/li&gt;
&lt;li&gt;Svelte voted top in dev satisfaction by StackOverflow users&lt;/li&gt;
&lt;li&gt;StackBlitz adds SvelteKit container&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#community-spotlight"&gt;
  &lt;/a&gt;
  Community Spotlight
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/puruvj"&gt;@puruvj&lt;/a&gt; &lt;a href="https://twitter.com/puruvjdev"&gt;Twitter&lt;/a&gt; builds MacOS with svelte &lt;a href="https://macos-web.app/"&gt;https://macos-web.app/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/spences10"&gt;@spences10&lt;/a&gt; &lt;a href="https://twitter.com/spences10"&gt;Twitter&lt;/a&gt; rebuilds HTML All The Things with SvelteKit &lt;a href="https://html-all-the-things.vercel.app/"&gt;https://html-all-the-things.vercel.app/&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/saadeghi"&gt;@saadeghi&lt;/a&gt; &lt;a href="https://twitter.com/Saadeghi"&gt;Twitter&lt;/a&gt; builds DaisyUI for Svelte + Tailwind - &lt;a href="https://daisyui.com/"&gt;https://daisyui.com/&lt;/a&gt; 
&lt;a href="https://twitter.com/SvelteSirens"&gt;Svelte Sirens&lt;/a&gt; Community launched by &lt;a href="https://twitter.com/BrittneyPostma"&gt;Brittney Postma&lt;/a&gt; - A svelte society for women, non-binary people and allies&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#svelte-links"&gt;
  &lt;/a&gt;
  Svelte Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://svelte.dev/"&gt;https://svelte.dev/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kit.svelte.dev/"&gt;https://kit.svelte.dev/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank you!
&lt;/h2&gt;

&lt;p&gt;If you're enjoying the podcast consider giving us a review on &lt;a href="https://podcasts.apple.com/us/podcast/html-all-things-web-development-web-design-small-business/id1412209136"&gt;Apple Podcasts&lt;/a&gt; or checking out our Patreon to get a shoutout on the podcast. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.patreon.com/htmlallthethings"&gt;Support us on Patreon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can find us on all the podcast platforms out there as well as&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/htmlallthethings/"&gt;Instagram (@htmlallthethings)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/htmleverything"&gt;Twitter (@htmleverything)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.tiktok.com/@htmlallthethings"&gt;TikTok (Html All The Things)&lt;/a&gt;&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>podcast</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>25 Places Where You Can Get Free Tailwind CSS Components</title>
      <author>Davide Pacilio</author>
      <pubDate>Wed, 19 Jan 2022 13:45:34 +0000</pubDate>
      <link>https://dev.to/cruip/25-places-where-you-can-get-free-tailwind-css-components-47lm</link>
      <guid>https://dev.to/cruip/25-places-where-you-can-get-free-tailwind-css-components-47lm</guid>
      <description>&lt;p&gt;As the Tailwind CSS ecosystem grows (Adam Wathan recently reported that Tailwind broke 2 million downloads per week), more and more people are creating resources to help you make neat stuff with this awesome framework.&lt;/p&gt;

&lt;p&gt;One of the most popular resources for Tailwind CSS are the component libraries (e.g., Tailwind UI), which can help you speed up the development process by providing ready-made elements that you can drop directly into your Tailwind projects. &lt;/p&gt;

&lt;p&gt;Component libraries like Tailwind UI are a great time-saver, but they can also be expensive for many, so, to help you find some great alternatives without breaking the bank, I've put together a list of my favorite free options, all of which I've tried and tested, and some of which I even use in my projects.&lt;/p&gt;

&lt;p&gt;Ready to dive in? Let's take a look at the list!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#cruip-free-components"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://codepen.io/cruip"&gt;Cruip Free Components&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jKn8EFLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3knxcyc9qvyrk9v0mptn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jKn8EFLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3knxcyc9qvyrk9v0mptn.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Cruip Free Components is a library of free Tailwind CSS templates and code experiments created by the team behind &lt;a href="https://cruip.com/"&gt;Cruip.com&lt;/a&gt;! The gallery includes an extended variety of snippets from various premium templates, such as application dashboards, landing pages, and websites. These are fully functional pieces of code that can be used in any project or app.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-design"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://tailwindesign.com/"&gt;Tailwind Design&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kJAGCTzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x24v1py0lcd4ltc1t5c7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJAGCTzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x24v1py0lcd4ltc1t5c7.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Tailwind Design is a gorgeous UI Kit pack that includes custom components and elements to create responsive web apps. Tailwind Design is unique because it's scalable, easy to use, follows Tailwind's principles, has beautiful layout and it's made with modern development best practices in mind.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ghost-ui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.gustui.com/"&gt;Ghost UI&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hyrrtvdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/is7jgacgznbjjirh8nb8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hyrrtvdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/is7jgacgznbjjirh8nb8.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Can't find the perfect storm of styles for your next web app? Make it yourself with Gust UI. Gust UI is a Tailwind CSS gallery, showcasing responsive components, elements, and example pages. Quickly apply existing styles to your app without getting overwhelmed by a massive quantity of unrelated styles all thrown together. Remove what you don't need, change what you do need, and create an app that's just right for you.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#floatui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.floatui.com/"&gt;FloatUI&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uR47ykkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqprpoy3srlqmpnwd43s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uR47ykkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqprpoy3srlqmpnwd43s.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Float UI is a collection of interactive UI components and elements that allow you to rapidly develop websites and web applications with React. Float UI is built from the ground up using pure React, React Router, and Tailwind CSS to provide everything you need to build a beautiful website. No jQuery or third-party plugins required.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-awesome"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.tailwindawesome.com/"&gt;Tailwind Awesome&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NTeh_yGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/twh3a0bsfk62nhv10pkb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NTeh_yGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/twh3a0bsfk62nhv10pkb.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Looking for the coolest new templates and UI kits for a website or web app? Tailwind Awesome is a hand-picked collection of the best free resources on the internet. The team behind this project is constantly on the lookout for new themes, templates, modules, and UI kits; so that you'll never run out of awesome things to use with Tailwind CSS.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#hyperui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://hyperui.dev/"&gt;HyperUI&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hs_ZlRuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w63mw9nn0dfnix7j8q4r.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hs_ZlRuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w63mw9nn0dfnix7j8q4r.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
HyperUI is a free, open source library of Tailwind CSS components. They are all customisable and ready to use out of the box. Get access to the source code for free, and copy/paste, or download your favorite components for easy integration into your own web project. Change colors, font sizes, content and much more.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#a17t"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://a17t.miles.land/"&gt;a17t&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U2mUahom--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29foy2ah1fdbo98flvq3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U2mUahom--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29foy2ah1fdbo98flvq3.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
a17t was created out of the need to have an extensible, atomic and design agnostic way to create UI components. This plugin is the culmination of several months of work, and a result of many discussions between two passionate individuals who argue over the ideal approach to CSS. You'll find this plugin makes creating Tailwind utility classes a breeze.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#kometa-ui-kit"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://kitwind.io/products/kometa/"&gt;Kometa UI Kit&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5XH_tqGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kt6v7lha2kzl55qumv8e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5XH_tqGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kt6v7lha2kzl55qumv8e.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Kometa UI kit is a set of TailwindCSS-based UI components. You can use them as Tailwind sections, or simply as a handy set of elements to spice up your app. It doesn't matter if you're building an admin dashboard, a SPA, or just some website - these sections will become an essential part of your toolkit and, they will make your workflow way better.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-toolbox"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.tailwindtoolbox.com/"&gt;Tailwind Toolbox&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wZWsMYud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vp66gu69xv5a519uquew.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZWsMYud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vp66gu69xv5a519uquew.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Tailwind Toolbox is a collection of useful open-source starter templates, components, handy building kits, generators, plugins, and tools to kick start any Tailwind CSS project. Almost everything on this site is open-source and available for you to use in your projects, so if you want to build something with Tailwind that needs a custom template to guide you then this is the site for you.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#headless-ui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://headlessui.dev/"&gt;Headless UI&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G_gCc0YH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsp89kgyual05sgpfwej.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G_gCc0YH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsp89kgyual05sgpfwej.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Need something simple, fast, and flat? Headless UI is a gallery of completely unstyled, fully accessible UI components that you can use in any way you choose. With everything from buttons and headers to menus, radios, and transitions, there's a little bit of everything for everyone. These are unchained components‚Äîjust add your own flair to make them your own!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-ui-kit"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://tailwinduikit.com/"&gt;Tailwind UI Kit&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BqPQrYMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yb9ihp1cpcwma27ss77u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BqPQrYMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yb9ihp1cpcwma27ss77u.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Tailwind UI Kit is a powerful library of accessible, fully responsive, drop-in-ready Tailwind CSS components to fast track your workflow and make sure your latest project looks beautiful on all devices. With easy to implement styles, functional animations and handy utilities like the responsive menu bar, typography presets and more ‚Äì you'll be able to get started with a handful of lines of code.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#daisyui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://daisyui.com/"&gt;DaisyUI&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--glc4JH2i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vexs5pel7kndiitmyinu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--glc4JH2i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vexs5pel7kndiitmyinu.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
DaisyUI is a collection of popular Tailwind CSS components with over 7K stars on Github and thousands of followers on Twitter. This repository contains a flexible set of widgets that can be used with Tailwind's component-based approach to component styling. Helpful for quickly creating custom UI in development as well as engaging design in production.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-components"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://tailwindcomponents.com/"&gt;Tailwind Components&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0T0PADfT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gp6wpa398q9g2hsacni.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0T0PADfT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gp6wpa398q9g2hsacni.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Tailwind Components is the perfect place if you're looking to begin building your next site or web app with Tailwind CSS. This popular website comes as an open-source repository of free UI components made for the Tailwind CSS framework. It includes templates, demos, and documentation to help you kick-start your next web project by providing a start point for your new site or app.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#treact"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://treact.owaiskhan.me/"&gt;Treact&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7XnK5QTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/46mdpbmw43twqyw7c2rc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7XnK5QTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/46mdpbmw43twqyw7c2rc.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Treact is a modern gallery of React UI templates and components built using TailwindCSS. This product comes with a ton of cool CSS animations and a lot of useful structure to set up your next project super simple. All components are modular and fully responsive for a great mobile experience as well as big desktop screens. All the resources in Treact are constantly updated and 100%  free for personal and commercial use.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailkit"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.tailwind-kit.com/"&gt;Tail-Kit&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Scd4ZjqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ks59oqf237r3oiyo5rld.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Scd4ZjqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ks59oqf237r3oiyo5rld.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Tail-Kit is a set of the 250+ most common components and the most popular component templates, followed by an extensive customisation guide. The goal is to speed up your development workflow and help you achieve the best experience possible when using Tailwind CSS. So stop coding CSS yourself and start Tail-Kitting!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lofi-ui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://lofiui.co/"&gt;Lofi UI&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BepQcgeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxjaix92lu94dpvqa8iq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BepQcgeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxjaix92lu94dpvqa8iq.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Lofi UI was created as a fun (but still functional) gallery of re-usable, re-workable, and just plain beautiful Tailwind CSS components. This product wanted to make a space that allowed both experienced frontend developers and beginners alike to learn from others, experiment with different components, and create something awesome in no time. No need to fork or modify this code, just build your own!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#meraki-ui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://merakiui.com/"&gt;Meraki UI&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_xzjbKLU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcp2iu1vkclq5hotwuwk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_xzjbKLU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcp2iu1vkclq5hotwuwk.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Meraki UI is a collection of beautiful, handcrafted, and manually composed Tailwind CSS components that support RTL languages &amp;amp; fully responsive based on Flexbox &amp;amp; CSS Grid with elegant dark mode. Packed with tons of accessible UI elements, contextual iconography, and sensible web typography Meraki UI is an ideal destination for anyone looking to start building web apps with awesome components built with utilities.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#vechaiui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.vechaiui.com/"&gt;VechaiUI&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2dszKbNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oe6tqp6earln2605af36.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2dszKbNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oe6tqp6earln2605af36.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
VechaiUI is a CSS library that works out of the box with create-react-app (including TypeScript version), Preact cli (with compat), Next.js, Gatsby, and any other environment. VechaiUI was made for people who like to write the styles for their app rather than rely on an already-made theme. Using this library, you can make your app look great and be accessible with beautiful styles and accessible UIs.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mamba-ui"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://mambaui.com/"&gt;Mamba UI&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6qfWEN2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/11q9q8qqebujpzrrjftd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6qfWEN2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/11q9q8qqebujpzrrjftd.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Mamba UI is designed to help you build beautiful user interfaces that look great on any screen size. It's a library of Tailwind CSS compliant components and templates covering a wide range of interface styles -- from simpler, component-based design to complex data table layouts that work out of the box&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flowbite"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://flowbite.com/"&gt;Flowbite&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WDodBy9T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jz2qwcbk25uccuz3gl1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WDodBy9T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jz2qwcbk25uccuz3gl1.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Start developing your next project with Flowbite - A growing library of over 400 free web components and interactive elements built with the utility classes from Tailwind CSS. Each element can be easily dropped into any Tailwind project to add a fresh new styling and branding. From common layout elements to more niche UIs this library is an invaluable resource for quickly building out any app or website.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-starter-kit"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.creative-tim.com/learning-lab/tailwind-starter-kit/presentation"&gt;Tailwind Starter Kit&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jd8kBdtr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4iaykge8nue81d8ufeyw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jd8kBdtr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4iaykge8nue81d8ufeyw.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Tailwind Starter Kit is free solution for Tailwind users that want to start using Tailwind for end to end styling of their projects, but are not comfortable installing CSS that is not officially released. It also comes with multiple components that can be used in any HTML document and is ready to use on React, Angular and Vue based projects. Everyone can take this CSS files from GitHub repository and start using Tailwind on their websites.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#kutty"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://kutty.netlify.app/"&gt;Kutty&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oJ9qalkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ursdv016ihyj23uyst2g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oJ9qalkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ursdv016ihyj23uyst2g.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Kutty is a Tailwind plugin for building modern and responsive web applications. It has a set of accessible and reusable components that are commonly used in web applications, such as dropdown, input groups and tabs. Kutty also provides common interface patterns like fixed header, sticky footer, centered navigation and full-screen layouts without navigation.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#postsrc"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://postsrc.com/components"&gt;PostSrc&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oxdf4m0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vvtfmfo4rz3uf0tifpwg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oxdf4m0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vvtfmfo4rz3uf0tifpwg.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
PostSrc is a collection of Tailwind CSS components for everyone. Browse all components in the collection, which are right for your project. Hint: you can use the search below the page to filter what you're looking for and view the results of individual components. Please note, the page is updated and posted daily so you might have to refresh to see new posts. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailblocks"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://tailblocks.cc/"&gt;Tailblocks&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gR-L7mv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzpvymuwd9sy3ybeg7ve.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gR-L7mv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzpvymuwd9sy3ybeg7ve.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Tailblocks is a powerful page builder that combines the best of Tailwind CSS with pre-built templates and sections, which you can use to build an entire website with only hand-picked Google Fonts. With over 120+ ready-to-use blocks and 10+ templates to choose from, you can create any type of website or landing page without the need of creating anything from scratch.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#components-collection"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://github.com/unlight/tailwind-components"&gt;Components Collection&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J2uXClh9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gngndyqgsmlj1fblpnc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J2uXClh9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gngndyqgsmlj1fblpnc.jpg" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;br&gt;
Looking for rare and uncommon Tailwind CSS components? We've got you covered! This repository includes all the best Tailwind CSS components and elements found on the internet. Everything is divided into a table of contents to allow you to easily access and grab what you need without the need of visiting multiple component libraries when searching for anything.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Thanks for reading, and please feel free to share your picks for other free component libraries in the comments below!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>Introducing Almost Netflix: Netflix clone built with Vue and Appwrite</title>
      <author>Matej Baƒço</author>
      <pubDate>Wed, 19 Jan 2022 13:34:35 +0000</pubDate>
      <link>https://dev.to/appwrite/introducing-almost-netflix-a-netflix-clone-built-with-vue-and-appwrite-34nb</link>
      <guid>https://dev.to/appwrite/introducing-almost-netflix-a-netflix-clone-built-with-vue-and-appwrite-34nb</guid>
      <description>&lt;p&gt;&lt;a href="https://appwrite.io/"&gt;Appwrite&lt;/a&gt; is an open source backend-as-a-service that abstracts all the complexity involved in building a modern application by providing you with a set of REST APIs for your core backend needs. Appwrite handles user authentication and authorization, databases, file storage, cloud functions, webhooks, and much more! If anything is missing, you can extend Appwrite using your favorite backend language.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ILIuIEN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rxtoesph4ojozd9wcxwy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ILIuIEN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rxtoesph4ojozd9wcxwy.png" alt="Cover image" width="880" height="495"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;We have used Appwrite 0.12 to build a Netflix clone for Web, Flutter, Android, and iOS. We will be gradually releasing articles for each platform that show how to code a front-end for a specific platform. In this post, we will take a closer look at building the clone for &lt;strong&gt;web platform&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It would be impossible to write every piece of code in this article üò¨ You will read about all essential concepts, components, and communication with Appwrite. Still, if you want to check out every corner of our Almost Netflix web application, you can check out the &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web"&gt;GitHub Source Code&lt;/a&gt; that holds the whole application.&lt;/p&gt;

&lt;p&gt;I decided to host the project on Vercel! You can check out the preview of &lt;a href="https://almost-netflix.vercel.app/app/movies"&gt;Netflix Clone live demo&lt;/a&gt;. You can also check out a few screenshots to see what we are building today:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  üìÉ Requirements
&lt;/h2&gt;

&lt;p&gt;Before we begin, we should have the Appwrite instance up and running, with the Almost Netflix project set up. If you haven't setup the project yet, you can refer to &lt;a href="https://dev.to/appwrite/did-we-just-build-a-netflix-clone-with-appwrite-28ok"&gt;our previous blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To build Almost Netflix, we will use &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt; because of its decent simplicity and forced structure. I believe reading Vue components is straightforward, and any web developer can understand what the code is trying to achieve.&lt;/p&gt;

&lt;p&gt;To manage routing, importing, and folder structure, we will stick to &lt;a href="https://nuxtjs.org/"&gt;NuxtJS&lt;/a&gt;, an intuitive Vue framework.&lt;/p&gt;

&lt;p&gt;Last but not least, we will use &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt; to style the components. Tailwind CSS makes it a bit harder to read HTML code but allows speedy prototyping, allowing us to recreate the Netflix UI in a blink of an eye.&lt;/p&gt;

&lt;p&gt;No more, I promise! If you don't know some technologies used in this project, this might be the best moment to continue the article to start learning them. All in all, we are developers, and we need to learn every day üòé Fun fact, I learned NuxtJS with this project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-nuxt-project"&gt;
  &lt;/a&gt;
  üõ†Ô∏è Create Nuxt project
&lt;/h2&gt;

&lt;p&gt;Thanks to fantastic Tailwind CSS documentation, we can visit their &lt;a href="https://tailwindcss.com/docs/guides/nuxtjs"&gt;Install Tailwind CSS with Nuxt.js&lt;/a&gt; docs that will take us step-by-step creating the NuxtJS project and adding Tailwind CSS.&lt;/p&gt;

&lt;p&gt;Once we have the project set up, we remove all files from the &lt;code&gt;components&lt;/code&gt; and &lt;code&gt;pages&lt;/code&gt; folders. These contain templates to get us started, but we won't need that üòè To see our setup working, let's create file &lt;code&gt;pages/index.vue&lt;/code&gt; and put simple HTML in it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-blue-500 text-4xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Almost Netflix üé¨
  &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure the &lt;code&gt;npm run dev&lt;/code&gt; is still running in the background. We can visit &lt;code&gt;http://localhost:3000/&lt;/code&gt; and see our big blue title if everything works well.&lt;/p&gt;

&lt;p&gt;Let's customize our project a little by using custom fonts. I decided to use &lt;a href="https://fonts.google.com/specimen/Inter?query=Inter"&gt;Inter&lt;/a&gt; font as it's pretty close to Netflix one. Thanks to Google Fonts, we can do tiny changes to our &lt;code&gt;assets/css/main.css&lt;/code&gt; to update all fonts on our website:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Inter'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, let's prepare all assets in our project by copying them from &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web/tree/master/static"&gt;static folder&lt;/a&gt; on GitHub. All we need to do is download them and place them into our &lt;code&gt;static&lt;/code&gt; folder. This will ensure we have all logos, icons, and backgrounds ready to be used in HTML later.&lt;/p&gt;

&lt;p&gt;Great, the project is ready! Let's continue by preparing Appwrite services to communicate with the Appwrite server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#appwrite-service"&gt;
  &lt;/a&gt;
  ü§ñ Appwrite Service
&lt;/h2&gt;

&lt;p&gt;We create the file &lt;code&gt;services/appwrite.ts&lt;/code&gt; and prepare a few functions to get the hang of it. We will use this file for direct communication with Appwrite SDK. By doing this, we separate server-communication logic from the rest of the application logic, resulting in more readable code.&lt;/p&gt;

&lt;p&gt;Let's start by preparing the Appwrite SDK variable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Models&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Query&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;sdk&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost/v1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;almostNetflix&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Make sure to use your own endpoint and project ID. Please don't ask what happened to &lt;code&gt;almostNetfix1&lt;/code&gt;. I am not proud of that üòÖ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since we are using &lt;a href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt;, let's also add definitions, so we can use them later to describe what data we are getting from Appwrite:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;AppwriteMovie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;durationMinutes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;thumbnailImageId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;releaseDate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;ageRestriction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="nx"&gt;relationId&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;Models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Document&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;AppwriteWatchlist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;movieId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;Models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Document&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have types and SDK ready let's create and export &lt;code&gt;AppwriteService&lt;/code&gt; itself. Inside, let's also add a few functions for authentication, so we have a starting point for upcoming authentication components:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Register new user into Appwrite&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;unique()&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="c1"&gt;// Login existing user into his account&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="c1"&gt;// Logout from server removing the session on backend&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleteSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;current&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// If error occured, we should not redirect to login page&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="c1"&gt;// Figure out if user is logged in or not&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;getAuthStatus&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// If there is error, user is not logged in&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;  
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Perfect! Now we have our AppwriteService ready to be used by the Vue application and a few authentication functions already set up. We can revisit this file any time in the future and add more functions to make sure this file is our "gateway" to Appwrite.&lt;/p&gt;

&lt;p&gt;With AppwriteService ready for authentication, we should implement Vue components for that, right?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  üîê Authentication
&lt;/h2&gt;

&lt;p&gt;Before we start, let's update our &lt;code&gt;pages/index.vue&lt;/code&gt; to have a welcome message and buttons to redirect a visitor to login and register pages. Since I don't want to make this article about HTML and Tailwind CSS, you can check out the &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web/blob/master/pages/index.vue"&gt;Index file&lt;/a&gt; on GitHub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SNVt6CGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jt1ayfr5r3qu8heqi1kl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SNVt6CGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jt1ayfr5r3qu8heqi1kl.png" alt="Index page" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can copy &lt;code&gt;pages/login.vue&lt;/code&gt; from &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web/blob/master/pages/login.vue"&gt;login file&lt;/a&gt; and &lt;code&gt;pages/register.vue&lt;/code&gt; from &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web/blob/master/pages/register.vue"&gt;register file&lt;/a&gt; exactly the same way, although we will take a closer look at these two.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When copying index, login, and register files, &lt;code&gt;middleware&lt;/code&gt; is already configured on them. You might need to temporarily remove those for pages to load correctly. We will be creating middlewares in upcoming sections.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In &lt;code&gt;pages/login.vue&lt;/code&gt;, we create a form and listen to its submission:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;submit.prevent=&lt;/span&gt;&lt;span class="s"&gt;"onLogin()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;v-model=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;v-model=&lt;/span&gt;&lt;span class="s"&gt;"pass"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Sign In&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We then create the &lt;code&gt;onLogin&lt;/code&gt; method where we talk to AppwriteService and redirect to the application after successful login:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;onLogin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also notice we use data for in-component state management, and thanks to the &lt;code&gt;v-model&lt;/code&gt; Vue attribute, the value from the input is automatically stored in the variable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zlBHCzdv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1b67ucg7769pk0zllx5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zlBHCzdv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1b67ucg7769pk0zllx5.png" alt="Login page" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking at &lt;code&gt;pages/register.vue&lt;/code&gt;, we do the same process with different values. The only main difference is in our &lt;code&gt;onRegister&lt;/code&gt; function (alternative to &lt;code&gt;onLogin&lt;/code&gt;), which also validates if passwords match and if the user agrees with terms:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;passAgain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;agreeTerms&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;onRegister&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pass&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;passAgain&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Passwords need to match.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;agreeTerms&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You have to agree to our terms.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that right after we register, we also login the user with the same credentials. This allows us to redirect the user directly to the application instead of asking them to login.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9EG48bOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4twebf913s38cudu8mb8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9EG48bOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4twebf913s38cudu8mb8.png" alt="Register page" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To finish the login process, we need to create &lt;code&gt;pages/app/index.vue&lt;/code&gt;, the first page the user sees when they log in. Actually, let me show you a trick here...&lt;/p&gt;

&lt;p&gt;When a user logs in, I want them to see a list of all movies, but I also want to URL to be &lt;code&gt;app/movies&lt;/code&gt;. This will allow me to make pages like &lt;code&gt;app/watchlist&lt;/code&gt;, &lt;code&gt;app/profiles&lt;/code&gt; or &lt;code&gt;app/tv-shows&lt;/code&gt; in the future.&lt;/p&gt;

&lt;p&gt;We create a really simple &lt;code&gt;pages/app/index.vue&lt;/code&gt; component to achieve this. The only thing this component will do is redirect to the new path &lt;code&gt;app/movies&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;redirect&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/app/movies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we create a new file called &lt;code&gt;pages/app/movies.vue&lt;/code&gt; and put movies logic in there. In summary, after successful login, you will be redirected to &lt;code&gt;/app&lt;/code&gt;, but you won't even see this page because you will be redirected to &lt;code&gt;/app/movies&lt;/code&gt; straight away.&lt;/p&gt;

&lt;p&gt;For now, let's put a simple greeting text into our &lt;code&gt;pages/app/movies.vue&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome logged in user üëã&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are done with authentication! Oh, wait... As I am playing with the website, I noticed I can manually change the URL in by browser to &lt;code&gt;/app&lt;/code&gt; and the application allows me to see movies page üò¨ Let's look how we can use middleware to force redirects on specific pages depending on if user is logged in or not.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#authentication-middlewares"&gt;
  &lt;/a&gt;
  Authentication middlewares
&lt;/h3&gt;

&lt;p&gt;Middleware can be used to restrict a user from visiting a specific pages. In our scenario, we don't want to allow the user to visit the movies page if they are not logged in. First, let's create &lt;code&gt;middleware/only-authenticated.ts&lt;/code&gt; with a simple logic that checks current user status and redirects to login if the user is not logged in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Middleware&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@nuxt/types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../services/appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Middleware&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;redirect&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isLoggedIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAuthStatus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isLoggedIn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// OK&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks to this middleware, the user will be allowed to visit the route if they are logged in but will be redirected if they are not. But what route? ü§î&lt;/p&gt;

&lt;p&gt;To use this middleware, we need to apply it to a specific page. Since we don't want to allow a user to visit the movies page, we update &lt;code&gt;pages/app/movies.ts&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome logged in user üëã&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;only-authenticated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just like that ‚ú® we protected our page, and we only allow logged-in users to view our movies page. Real quick, let's do the exact opposite for the rest of the pages we currently have - let's redirect the user to the application if they are already logged in. We do this to prevent the user from getting to the login page if they are already logged in.&lt;/p&gt;

&lt;p&gt;To achieve this, we create one more middleware in &lt;code&gt;middleware/only-unauthenticated.ts&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Middleware&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@nuxt/types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../services/appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Middleware&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;redirect&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isLoggedIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAuthStatus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isLoggedIn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// OK&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice, we did the exact opposite in this component. If a user is not logged-in, it's OK, but we forcefully redirect to the application page if they are.&lt;/p&gt;

&lt;p&gt;Now, let's add this &lt;code&gt;only-unauthenticated&lt;/code&gt; middleware to all the 3 pages &lt;code&gt;pages/index.vue&lt;/code&gt;, &lt;code&gt;pages/login.vue&lt;/code&gt; and &lt;code&gt;pages/register.vue&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's try it! If we are logged in and try to visit &lt;code&gt;/login&lt;/code&gt;, we will jump back to the movies page. Great! We have successfully implemented middleware to protect our application's specific pages from unauthenticated users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%F0%9F%8F%97-application-layout"&gt;
  &lt;/a&gt;
  üèó Application layout
&lt;/h2&gt;

&lt;p&gt;In every application, some parts repeat on all pages. In most cases, it's header and footer, but it could also be a hero section or live chat bubble. To prevent repeating this part of code, we can create a layout out of it and use layout on our pages, similar to how we used middleware. First, let's create a simple layout and use it on our movies page. To do that, we create &lt;code&gt;layouts/app.vue&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Header&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Nuxt&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Footer&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We used a special HTML tag &lt;code&gt;&amp;lt;Nuxt /&amp;gt;&lt;/code&gt;, which means, if a page is using this layout, the page's content will be placed exactly where we put our &lt;code&gt;&amp;lt;Nuxt /&amp;gt;&lt;/code&gt; tag. This is really handy if we want to place a page in between the header and footer.&lt;/p&gt;

&lt;p&gt;To use our &lt;code&gt;app&lt;/code&gt; layout, we mention it on our movie page. We simply update &lt;code&gt;pages/app/movies.vue&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now see our header and footer wrap our movies page. Awesome! Let's create an actual Netflix layout, shall we?&lt;/p&gt;

&lt;p&gt;First, let's update our AppwriteService since we will need to show the user's profile picture in the header. The header should also include a trending movie if we are on the landing page. To begin, let's create a function that gives us the user's profile picture:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="c1"&gt;// Generate profile photo from initials&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;getProfilePhoto&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Anonymous&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;account&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// If we have name, use that for initials&lt;/span&gt;
                &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// If not, use email. That is 100% available always&lt;/span&gt;
                &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Means we don't have account, fallback to anonymous image&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Generate URL from previously picked keyword (name)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;avatars&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getInitials&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We should also prepare a function to preview the cover image of the movie. We will need a separate function for this because this main trending movie is covering the whole website with one huge image:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="c1"&gt;// Same as above. Generates URL, setting some limits on size and format&lt;/span&gt;
    &lt;span class="nx"&gt;getMainThumbnail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;imageId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;storage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFilePreview&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;top&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, let's implement a method to get featured movies from our database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="c1"&gt;// Simple query to get the most trading movie&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;getMainMovie&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AppwriteMovie&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AppwriteMovie&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;trendingIndex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With all of these methods ready, we can start using them in our layout. Let's visit &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web/blob/master/layouts/app.vue"&gt;app layout file&lt;/a&gt; on GitHub and copy its content to our page. Our layout looks lovely, and we have already got our first movie! This is starting to look almost like Netflix üéâ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#movies-page"&gt;
  &lt;/a&gt;
  üé¨ Movies page
&lt;/h2&gt;

&lt;p&gt;We need to show rows of movies for different categories on our movies page, such as &lt;code&gt;Popular this week&lt;/code&gt; or &lt;code&gt;New releases&lt;/code&gt;. Before implementing this into our page, we will need methods to fetch data from Appwrite.&lt;/p&gt;

&lt;p&gt;First of all, let's create categories configuration in one variable inside of our AppwriteService, that we can re-use later:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;AppwriteCategory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="nl"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="nl"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="nl"&gt;collectionName&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AppwriteMovieCategories&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AppwriteCategory&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Popular this week&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
    &lt;span class="na"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;trendingIndex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Only on Almost Netflix&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;isOriginal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;trendingIndex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;New releases&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greaterEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;releaseDate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2018&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;releaseDate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Movies longer than 2 hours&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greaterEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;durationMinutes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;durationMinutes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Love is in the air&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;genres&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Romance&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;trendingIndex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Animated worlds&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;genres&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Animation&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;trendingIndex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;It's getting scarry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;genres&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Horror&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;trendingIndex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sci-Fi awaits...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;genres&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Science Fiction&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;trendingIndex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Anime?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tags&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;anime&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;trendingIndex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Thriller!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;genres&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Thriller&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;trendingIndex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We just configured all the different categories we want to show on our homepage, each having a title, queries, and sorting configuration. Let's also prepare a function to get a list of movies where input is one of these categories:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="c1"&gt;// List movies. Most important function&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;getMovies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;perPage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AppwriteCategory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;cursorDirection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;before&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;after&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;after&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AppwriteMovie&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;
        &lt;span class="na"&gt;hasNext&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Get queries from category configuration. Used so this function is generic and can be easily re-used&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;queries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;collectionName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collectionName&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collectionName&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;documents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

        &lt;span class="c1"&gt;// Fetch data with configuration from category&lt;/span&gt;
        &lt;span class="c1"&gt;// Limit increased +1 on purpose so we know if there is next page&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="na"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DocumentList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AppwriteMovie&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;AppwriteWatchlist&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collectionName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;perPage&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cursorDirection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// Create clone of documents we got, but depeding on cursor direction, remove additional document we fetched by setting limit to +1&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cursorDirection&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;after&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;_d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dIndex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;dIndex&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;perPage&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;_d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dIndex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;dIndex&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;perPage&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collectionName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nestedResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AppwriteMovie&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;movies&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;$id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movieId&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="nx"&gt;documents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nestedResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;relationId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;d2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;d2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movieId&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;aIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movieId&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movieId&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;aIndex&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;bIndex&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Return documents, but also figure out if there was this +1 document we requested. If yes, there is next page. If not, there is not&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;documents&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;AppwriteMovie&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;
            &lt;span class="na"&gt;hasNext&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;perPage&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we accept per-page limit and cursor into our function to allow proper pagination. We also return the &lt;code&gt;hasNext&lt;/code&gt; boolean, which says if the next page exists or not. All of that will come into place once we start implementing the movies page, as there we will need this pagination system.&lt;/p&gt;

&lt;p&gt;Before we leave our AppwriteService, we implement one more function to allow us to preview movie covers. This one will be similar to the one we created for the trending movie, but we can adjust the configuration to a smaller width, as this will not cover as much of the screen as the trending movie does:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="c1"&gt;// Generate URL that will resize image to 500px from original potemtially 4k image&lt;/span&gt;
    &lt;span class="c1"&gt;// Also, use webp format for better performance&lt;/span&gt;
    &lt;span class="nx"&gt;getThumbnail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;imageId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;storage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFilePreview&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;top&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yey, ApprwiteService is ready! üòé Let's update our movies page in &lt;code&gt;pages/app/movies.vue&lt;/code&gt;, and let's look through app categories, showing movie list for each of them:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex flex-col space-y-20"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;movie-list&lt;/span&gt;
        &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"category in categories"&lt;/span&gt;
        &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"category.title"&lt;/span&gt;
        &lt;span class="na"&gt;:category=&lt;/span&gt;&lt;span class="s"&gt;"category"&lt;/span&gt;
      &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;AppwriteMovieCategories&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;~/services/appwrite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AppwriteMovieCategories&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, the complex part... We need to create this &lt;code&gt;&amp;lt;movie-list&amp;gt;&lt;/code&gt; we just used. Such a component should use our AppwriteService to get a list of movies inside the category and manage pagination to allow us to scroll through the category.&lt;/p&gt;

&lt;p&gt;First, let's create the component and write HTML that will loop through a list of movies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-4xl text-zinc-200"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ category.title }}&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
      &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"movies.length &amp;gt; 0"&lt;/span&gt;
      &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"relative grid grid-cols-2 gap-4 mt-6  sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6"&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;Movie&lt;/span&gt;
        &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"(movie, index) in movies"&lt;/span&gt;

        &lt;span class="na"&gt;:isPaginationEnabled=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;
        &lt;span class="na"&gt;:onPageChange=&lt;/span&gt;&lt;span class="s"&gt;"onPageChange"&lt;/span&gt;
        &lt;span class="na"&gt;:moviesLength=&lt;/span&gt;&lt;span class="s"&gt;"movies.length"&lt;/span&gt;
        &lt;span class="na"&gt;:isLoading=&lt;/span&gt;&lt;span class="s"&gt;"isLoading"&lt;/span&gt;
        &lt;span class="na"&gt;:isCursorAllowed=&lt;/span&gt;&lt;span class="s"&gt;"isCursorAllowed"&lt;/span&gt;
        &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-span-1"&lt;/span&gt;
        &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"movie.$id"&lt;/span&gt;
        &lt;span class="na"&gt;:appwrite-id=&lt;/span&gt;&lt;span class="s"&gt;"movie.$id"&lt;/span&gt;
        &lt;span class="na"&gt;:movie=&lt;/span&gt;&lt;span class="s"&gt;"movie"&lt;/span&gt;
        &lt;span class="na"&gt;:index=&lt;/span&gt;&lt;span class="s"&gt;"index"&lt;/span&gt;
      &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"movies.length &amp;lt;= 0"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"relative mt-6 text-zinc-500"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This list is empty at the moment...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;category&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's implement logic to prepare this movies array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="na"&gt;perPage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;

        &lt;span class="c1"&gt;// Depending on the device size, use different page size&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;perPage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;perPage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;perPage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1280&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;perPage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;perPage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;perPage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;isBeforeAllowed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;isAfterAllowed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;movies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;AppwriteMovie&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;

            &lt;span class="na"&gt;lastCursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;lastDirection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;before&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;after&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;created&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// When component loads, fetch movie list with defaults for pagination (no cursor)&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMovies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;perPage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;// Store fetched data into component variables&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAfterAllowed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasNext&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, let's add methods that will allow us to paginate over the category:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="nx"&gt;isCursorAllowed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Simply use variables we fill during fetching data from API&lt;/span&gt;
        &lt;span class="c1"&gt;// Depending on index (direction) we want to return different variables&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isBeforeAllowed&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAfterAllowed&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;onPageChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;before&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;after&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Show spinners instead of arrows&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

        &lt;span class="c1"&gt;// Use relation ID if provided&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastRelationId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
            &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;before&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
                &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movies&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;relationId&lt;/span&gt;
                &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movies&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;relationId&lt;/span&gt;

        &lt;span class="c1"&gt;// Depending on direction, get ID of last document we have&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lastId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lastRelationId&lt;/span&gt;
            &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;lastRelationId&lt;/span&gt;
            &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;before&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
                &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movies&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;
                &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movies&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;

        &lt;span class="c1"&gt;// Fetch new list of movies using direction and last document ID&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newMovies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMovies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;perPage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;lastId&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;// Fetch status if movie is on My List or not&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LOAD_FAVOURITE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newMovies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="c1"&gt;// Now lets figure out if we have previous and next page...&lt;/span&gt;
        &lt;span class="c1"&gt;// Let's start with saying we have them both, then we will set it to false if we are sure there isnt any&lt;/span&gt;
        &lt;span class="c1"&gt;// By setting default to true, we never hide it when we shouldnt.. Worst case scenario, we show it when we shoulding, resulsing in you seing the arrow, but taking no effect and then dissapearing&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isBeforeAllowed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAfterAllowed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

        &lt;span class="c1"&gt;// If we dont get any documents, it means we got to edge-case when we thought there is next/previous page, but there isnt&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newMovies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Depending on direction, set that arrow to disabled&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;before&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isBeforeAllowed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAfterAllowed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// If we got some documents, store them to component variable and keep both arrows enabled&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newMovies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// If our Appwrite service says there isn' next page, then...&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;newMovies&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasNext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Depnding on direction, set that specific direction to disabled&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;before&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isBeforeAllowed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAfterAllowed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Store cursor and direction if I ever need to refresh the current page&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastDirection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;direction&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastCursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lastId&lt;/span&gt;

        &lt;span class="c1"&gt;// Hide spinners, show arrows again&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You can find the whole component in &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web/blob/master/components/MovieList.vue"&gt;movie list component file&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Woah, that was a ride ü•µ Let's finish off by creating &lt;code&gt;&amp;lt;Movie&amp;gt;&lt;/code&gt; component in &lt;code&gt;components/Movie.vue&lt;/code&gt; to render one specific movie. We can use &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web/blob/master/components/Movie.vue"&gt;movie component file&lt;/a&gt; as a reference.&lt;/p&gt;

&lt;p&gt;Perfect, we have our movie lists ready! We are missing one last feature to allow users to click a movie to see details. To get that working, you can copy &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web/blob/master/components/MovieModal.vue"&gt;movie modal file&lt;/a&gt;, &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web/blob/master/components/FilterModal.vue"&gt;filter modal file&lt;/a&gt;, and &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web/blob/master/store/modal.ts"&gt;modal store file&lt;/a&gt;. Since these files are only related to HTML, Tailwind CSS, and Vue state management, it would be off-topic to go through them one by one. Don't worry, nothing too interesting is happening in there üòÖ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0oUef9SR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zpyt0f7koeyyt84fzx22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0oUef9SR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zpyt0f7koeyyt84fzx22.png" alt="Modal" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2qMVivO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0i0tw0ysb72533j7sw2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2qMVivO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0i0tw0ysb72533j7sw2.png" alt="Filter modal" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The only missing piece of our puzzle is the watchlist. Let's implement it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#watchlist-page"&gt;
  &lt;/a&gt;
  üîñ Watchlist page
&lt;/h2&gt;

&lt;p&gt;As always, let's start by preparing backend communication in our AppwriteService. We will need two functions to update our watchlist - one for removing, one for adding new movies to my watchlist:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;addToMyList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;movieId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;watchlists&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;unique()&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;movieId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;deleteFromMyList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;movieId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;watchlistResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AppwriteWatchlist&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;watchlists&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;movieId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;movieId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;watchlistId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;watchlistResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleteDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;watchlists&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;watchlistId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To achieve proper state management in the future, we need one more function, so when we have a list of movies, we can figure out which ones are already on the user's watchlist:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AppwriteService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;getOnlyMyList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;movieIds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;watchlistResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AppwriteWatchlist&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;watchlists&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;userId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;movieId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;movieIds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;movieIds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;watchlistResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movieId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's create a page &lt;code&gt;/app/my-list&lt;/code&gt; where people can see their watchlist. To do that, we create &lt;code&gt;/pages/app/my-list.vue&lt;/code&gt; file. Thankfully, we can re-use our category logic to render a list of movies properly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;movie-list&lt;/span&gt; &lt;span class="na"&gt;:category=&lt;/span&gt;&lt;span class="s"&gt;"category"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppwriteCategory&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../services/appwrite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;middleware&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;only-authenticated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AppwriteCategory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;collectionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;watchlists&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Movies in My List&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
      &lt;span class="na"&gt;orderAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
      &lt;span class="na"&gt;orderTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, let's setup state management which will be the source of truth for the whole application about whether the movie is already on the watchlist or not. To do that, we can copy the &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web/blob/master/store/myList.ts"&gt;my list store file&lt;/a&gt; from GitHub.&lt;/p&gt;

&lt;p&gt;Finally, we define a component that will serve as a button to add/remove the movie from the watchlist. We can find this component in &lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web/blob/master/components/AddToMyList.vue"&gt;watchlist component file&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U9V5DL3P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5rtfsq95orf1fp0s20r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U9V5DL3P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5rtfsq95orf1fp0s20r.png" alt="Watchlist button component" width="206" height="78"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Believe it or not, the Netflix clone is ready! ü•≥ We should host it so anyone can see it, right?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  üöÄ Deployment
&lt;/h2&gt;

&lt;p&gt;We will deploy our Nuxt project on &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt;. I fell in love with this platform thanks to the ease of deployment, and the fact this platform is free for pretty-much all of your side projects.&lt;/p&gt;

&lt;p&gt;After creating a repository for our project in GitHub, we create a new project on Vercel pointing to this repository. We configure the build process to use &lt;code&gt;npm run generate&lt;/code&gt; for building, &lt;code&gt;dist&lt;/code&gt; as output folder, and &lt;code&gt;npm install&lt;/code&gt; as installation command. We wait for Vercel to finish the build, and we will be presented with a custom Vercel subdomain that contains our website.&lt;/p&gt;

&lt;p&gt;When we visit it, we notice we start getting network errors üò¨ We look at the console and notice a CORS error from Appwrite... But why? ü§î&lt;/p&gt;

&lt;p&gt;So far, we have only been developing a website locally, meaning we used hostname &lt;code&gt;localhost&lt;/code&gt;. Thankfully, Appwrite allows all communication from &lt;code&gt;localhost&lt;/code&gt; to allow ease of development. Since we are now on Vercel hostname, Appwrite no longer trusts it, and we need to configure this as a production platform. To do it, we visit the Appwrite Console website and enter our project. If we scroll down a little in our dashboard, we will notice the &lt;code&gt;Platforms&lt;/code&gt; section. In here, we need to add a new web platform with the hostname Vercel assigned to you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d3oM-RZg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xpmwyvd9jc7nfqlx0jws.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d3oM-RZg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xpmwyvd9jc7nfqlx0jws.png" alt="Appwrite platform modal" width="861" height="599"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--twDQ6H7u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ayq15o6l1zdso7rxuqm0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--twDQ6H7u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ayq15o6l1zdso7rxuqm0.png" alt="Appwrite platform list" width="880" height="181"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After adding the platform, Appwrite now trusts our deployment on Vercel, and we can start using it! ü•≥ Believe it or not, we just created a Netflix clone using Appwrite ( Almost ) .&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  üë®‚Äçüéì Conclusion
&lt;/h2&gt;

&lt;p&gt;We have successfully cloned Netflix movies using Appwrite. As you can see, your imagination is your limit with Appwrite! To become part of the Appwrite community, you can join our &lt;a href="https://appwrite.io/discord"&gt;Discord&lt;/a&gt; community server. I can't wait to see you around and look at what you build with Appwrite ü§©&lt;/p&gt;

&lt;p&gt;This project is not over! üòé With upcoming Appwrite releases, we will be improving this Netflix clone and adding more features. You can get ready for video streaming, custom changes to the backend, and much more!&lt;/p&gt;

&lt;p&gt;Here are some handy links and resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite/demo-almost-netflix-for-web"&gt;Almost Netflix for Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite"&gt;Appwrite Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/docs"&gt;Appwrite Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  üîó Learn more
&lt;/h2&gt;

&lt;p&gt;You can use the following resources to learn more and get help regarding Appwrite and its services&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;üöÄ &lt;a href="https://github.com/appwrite"&gt;Appwrite Github&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üìú &lt;a href="https://appwrite.io/docs"&gt;Appwrite Docs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üí¨ &lt;a href="https://appwrite.io/discord"&gt;Discord Community&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>opensource</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Best E-Scooter Apps ‚Äì Features And Cost To Develop An App</title>
      <author>SNEHA RAWAT</author>
      <pubDate>Wed, 19 Jan 2022 13:16:51 +0000</pubDate>
      <link>https://dev.to/sneharawat/best-e-scooter-apps-features-and-cost-to-develop-an-app-m3m</link>
      <guid>https://dev.to/sneharawat/best-e-scooter-apps-features-and-cost-to-develop-an-app-m3m</guid>
      <description>&lt;p&gt;Numerous advancements and improvements have changed the worldwide economy in this day and age. There has been a worldwide pattern for a considerable length of time patterns like &lt;strong&gt;&lt;a href="https://www.orangemantra.com/services/mobile-application-development/"&gt;Mobile App Development&lt;/a&gt;&lt;/strong&gt;, automated reasoning, IoT, or digital money. This bike-sharing assistance has additionally spoken to the worldwide local area.&lt;/p&gt;

&lt;p&gt;Riding an e-bike gives a better and more reasonable method for moving around than pushing a cruiser. They have been presented as electric bikes (e-bikes). Additionally, the greatest advantage is that they are standing out enough to be noticed and prevalent. When in the commercial center, partners have upheld the ride mode to incorporate transportation choices for the whole metropolitan populace.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-escooter-sharing"&gt;
  &lt;/a&gt;
  What is e-Scooter Sharing?
&lt;/h2&gt;

&lt;p&gt;Shared versatility has been filling in noticeable quality throughout recent years. These &lt;strong&gt;&lt;a href="https://www.orangemantra.com/services/android-application-development/"&gt;android app development companies in Gurgaon&lt;/a&gt;&lt;/strong&gt; have fast term rentals for bikes. While e-Scooter Sharing Mobile App Development is equivalent to vehicle and bicycle sharing, they are more affordable and are appropriate for more limited excursions.&lt;/p&gt;

&lt;p&gt;Like different types of shared transportation, bike and bicycle sharing tackle different issues like stopping and mileage.&lt;/p&gt;

&lt;p&gt;Sharing bikes for the last mile is a helpful option also. The main mile relates to how much time from the beginning of an excursion is like a transport terminal. The last stretch is the hole between the transport terminal and the objective. Suburbanites can seek after less expensive methods of transportation to get to work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-an-eescooter-sharing-apps"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Features Of An E-e-Scooter Sharing Apps&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;How about we have a more critical gander at the rundown of fundamental elements that you should have in your electric bike application:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Enrollment and on-boarding&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
After enrolling yourself in the Mobile App Development, be it Android or &lt;strong&gt;&lt;a href="https://www.orangemantra.com/services/iphone-application-development/"&gt;iPhone app development services&lt;/a&gt;&lt;/strong&gt;, enlisted clients can flawlessly utilize the application. This highlight execution in your electric bike assists with discovering its working.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Map joining&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Maps joining empowers clients to search for the accessibility of e-bikes and electric bicycles in adjacent spots. This astonishing component allows clients to track down the most straightforward and briefest course to arrive at their objective.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;QR Code Scanner&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
QR code scanner is one of the extraordinary highlights to execute in your e-bike application for your client's comfort. Utilizing QR code scanners clients can begin and end their excursion most securely. Clients need to examine the QR code to open or lock the electric bike. Lime involves scanner SDKs for iOS and Android stages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Payment System&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
An underlying payment framework empowers clients to pay for e-bikes safely. You can coordinate any payment modes like Stripe, PayPal, Braintree, and so forth.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;GPS Tracking System&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
The continuous following allows clients to find electric bikes. It empowers the administrator to follow bikes and gather those which require upkeep.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Smart Locks&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
To open bikes using QR codes, add an IoT-empowered locking framework. The bikes should be coordinated with miniature regulators.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ride History&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
This component empowers clients to follow rides. Ride details are expected to quantify the proficiency of client rides.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Booking&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
To book an electric bike, coordinating a booking framework empowers clients. You can likewise book an e-Scooter Sharing application for your family, companions, family members, and so forth.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Social Media Integration&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
A combination of social media accounts is perhaps the most effective way to draw in your clients and the clients' base. This element empowers clients to share the subtleties and feelings of their rides.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Push Notifications&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Message pop-ups are extremely useful for the accomplishment of any application. Adding pop-up messages feature in your application, you can send warnings to your application clients about limits, offers and exceptional occasions, and so on, and it likewise facilitates correspondence.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cost Of Developing a Scooter Sharing App?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thus, we are at the most anticipated segment of our article - the expense of e-Scooter Sharing application advancement. As per the several Android app development companies in Gurgaon,  the expense of fostering an e-Scooter Sharing application likewise relies upon numerous pivotal elements. To give some examples, we have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Project Management Cost&lt;/li&gt;
&lt;li&gt;UI/UX Cost&lt;/li&gt;
&lt;li&gt;Advancement Cost&lt;/li&gt;
&lt;li&gt;Intricacy and Size of Project&lt;/li&gt;
&lt;li&gt;Upgradation and Post-Sales Services&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Aside from every one of those referenced above, there are a lot more factors that straightforwardly or by implication influence the general expense of e-Scooter Sharing application advancement. To find out about your undertaking, you can always visit our group.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
Since you are familiar with the best electric bike applications that are doing amazingly well on the lookout, the elements you want to coordinate into your application, how to adapt your application, and its development cost, you can likewise start with developing your bike application.&lt;/p&gt;

&lt;p&gt;Along these lines, if you have any concerns about fostering your own electric e-Scooter Sharing startup, then, we suggest you Hire Mobile App Developer now. Our group dominates in creating applications like Bird or Lime. We guarantee to create your creative mind in the real world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;&lt;br&gt;
There is a lot of demand for scooter sharing business growth due to the low startup costs and the rise in compact and quicker modes of transportation. One should work to build an e-scooter software that functions like Bird or Lime. Check out the latest and must-have features with the cost of developing an e-scooter sharing application. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>reactnative</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>15+ Spectacular Web Design Trends 2022ü§©</title>
      <author>ThemeSelection</author>
      <pubDate>Wed, 19 Jan 2022 13:02:28 +0000</pubDate>
      <link>https://dev.to/theme_selection/15-spectacular-web-design-trends-2022-3eb</link>
      <guid>https://dev.to/theme_selection/15-spectacular-web-design-trends-2022-3eb</guid>
      <description>&lt;h1&gt;
  &lt;a href="#web-design-trends-2022"&gt;
  &lt;/a&gt;
  Web Design Trends 2022
&lt;/h1&gt;

&lt;p&gt;Well, web design trends are something that changes continuously. Thus it is a constantly developing field. It is all about creating and bringing revolution while looking to the future, or we can say be in that future. The web design field shares a relationship with technology, it can be a showcase for new ideas and innovations. You can execute your imagination through animation, interaction, and overall immersion.&lt;/p&gt;

&lt;p&gt;In this article  &lt;strong&gt;Rocking Web Design Trends 2022&lt;/strong&gt;, we are going to discuss some of the path-breaking design trends. Such as behavioral design that triggers engaging behavior of visitors,  Claymorphism which is an absolutely new one, and awesome web design trend in the list, the Memphis design which combines both the retro touch with minimal design, talking about some established trends like Retro look, it is something considered by the majority of designers in 2021 and it is not slowing down in 2022 as well. Typography is again taking a lead and many more.&lt;/p&gt;

&lt;p&gt;There is a possibility we might have missed some as it‚Äôs a vast world..!! So if you feel that we should add any, then do let us know in the comment section below.üëç&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Also, check the previous year‚Äôs trends here:  &lt;a href="https://medium.com/quick-code/coolest-25-web-design-trends-in-2021-thatll-rock-the-world-388eb1144b7e"&gt;&lt;strong&gt;25+Coolest web design trends 2021&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now let‚Äôs take a look at the top 15+ innovative  &lt;strong&gt;web design trends&lt;/strong&gt;  coming up in 2022.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z2PGvLsv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tkyhfl9mz583287phjmf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z2PGvLsv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tkyhfl9mz583287phjmf.gif" alt="let's get started gif" width="600" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://tenor.com/view/despicable-me-minions-lets-get-started-happy-excited-gif-4767352"&gt;Tenor&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-complex-gradients"&gt;
  &lt;/a&gt;
  1. Complex Gradients
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WfTS5cE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0f9njxz1rfng0nrlbms.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WfTS5cE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0f9njxz1rfng0nrlbms.png" alt="web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Credit:  &lt;a href="https://monopo.london/"&gt;https://monopo.london/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first one in the list of web design trends 2022 is Complex gradients. Well, gradients are not a completely new trend, as they‚Äôve certainly come a long way over time. Although, with time,  Complex gradients are becoming one of the vibrant web design trends as it is being used in modern web design and are often used to add depth to flat images.&lt;/p&gt;

&lt;p&gt;As per the web designers and experts, it is gaining more and more popularity. So this web design trend should not be ignored. Gradients made a comeback in 2018, with Instagram‚Äôs gradient logo. Since then, it has set up new standards in terms of creativity and interactivity.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3OWdbrKH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sz1vcng3fmzqn4gz022r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3OWdbrKH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sz1vcng3fmzqn4gz022r.png" alt="Complex gradients Web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://juliebonnemoy.com/"&gt;https://juliebonnemoy.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reason behind the popularity of this trend is, it offers more space for creativity. Secondly, the user is uncertain. On one side, they prefer minimalism and on the second side, they tend to think that designer did not put work on the design if he sees just two colors.&lt;/p&gt;

&lt;p&gt;In this case, the gradient can be helpful as it creates an illusion of movement while keeping the minimal design. That‚Äôs the reason this web design trend‚Äôs popularity. In other words, you can call it an analog of motion design, without using animation.‚Ä¶!!&lt;/p&gt;

&lt;p&gt;So, using complex gradients is a very good option even if you are designing a minimalistic design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Websites using Complex Gradients:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.winamp.com/"&gt;https://www.winamp.com/&lt;/a&gt;  (Oldie but goldie üòÇ)&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://sarahguo.com/"&gt;https://sarahguo.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://vitaarchitecture.com/"&gt;https://vitaarchitecture.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.richardsancho.com/"&gt;https://www.richardsancho.com/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Following are some useful Gradient sources and generators:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://webgradients.com/"&gt;Web Gradients&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://gradienta.io/"&gt;Gradienta&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://uigradients.com/#SweetMorning"&gt;UI Gradients&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://cssgradient.io/"&gt;CSS Gradient&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;For more Color Gradient generators check the collection of  &lt;a href="https://dev.to/theme_selection/best-free-color-palette-generator-ready-to-use-or-generate-your-own-3hoo"&gt;&lt;strong&gt;Free color palette generators and Gradient generators&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A few tips for creating gradients:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Do not choose colors randomly. It must serve the mood of a particular element of the page or product. If you are unsure of what to pick, use the  &lt;a href="https://color.adobe.com/en/create"&gt;Adobe Color Wheel&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt; Use the colors of nature. Green, Yellow, Blue, etc. It attracts the eye of any person. Seeing such colors on the product, the user will be surely impressed.&lt;/li&gt;
&lt;li&gt; Check the gradient generators&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#2-claymorphism"&gt;
  &lt;/a&gt;
  2. Claymorphism
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aqx2elho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sb0fictg96ip2u33gybg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aqx2elho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sb0fictg96ip2u33gybg.png" alt="Humans" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Credit:  &lt;a href="https://humans.wannathis.one/"&gt;https://humans.wannathis.one/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Claymorphism is one of the fresh and newest web design trends. Friendly, Engaging 3D hands/humans/ or you name any other illustration, you can use this emerging fresh and new web design trend to give a very interactive look to your website. It blends well in the minimalist design world.&lt;/p&gt;

&lt;p&gt;Claymorphism is made by blending four styles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Light, pastel, and vivid colors&lt;/li&gt;
&lt;li&gt;  Big rounded corners&lt;/li&gt;
&lt;li&gt;  Double inner shadow&lt;/li&gt;
&lt;li&gt;  Outer shadow&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/products/materio-vuetify-vuejs-admin-template/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UyNFysDi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0eowtxb3285h7w36r8xy.png" alt="Materio VueJS Admin Template" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://themeselection.com/products/materio-vuetify-vuejs-admin-template/"&gt;Materio Vuetify VueJS Admin Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check some websites that use 3d content:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://christmas.wannathis.one/"&gt;https://christmas.wannathis.one/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tolia.ge/"&gt;https://tolia.ge/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://matterapp.com/"&gt;https://matterapp.com/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Also, don‚Äôt forget to watch Adrian Twarogs‚Äôs YouTube Video:&lt;/strong&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DeXCdMwAHZ0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#3-behavioral-design"&gt;
  &lt;/a&gt;
  3. Behavioral Design
&lt;/h3&gt;

&lt;p&gt;Admit that you were lazy before the fitness apps made an appearance.üòâ&lt;/p&gt;

&lt;p&gt;You started walking, keeping an eye on how many calories you burnt by walking and you do feel good seeing that numbers. It motivates you to maintain that habit by giving you amazing badges and rewards. That‚Äôs an example of behavioral design.  It makes the user experience interesting enough to trigger certain behavior.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gvMGCYBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca7iy9idb1ttfoqfwkvo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gvMGCYBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca7iy9idb1ttfoqfwkvo.png" alt="Impact App" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Credit:&lt;a href="https://impactapp.in/"&gt;https://impactapp.in/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You see when you interact with such an app or site you take a certain action, develop habits, do things be it walking, cycling, painting, meditation, etc.  That‚Äôs what behavioral design is about. It combines Psychology, Design, Technology, and Creative Methods to find out why people do the things they do and to figure out through experimentation how to activate them to change their behavior.&lt;/p&gt;

&lt;p&gt;Many products have adopted behavioral design thinking, for example, the popular meditation app Headspace. The platform‚Äôs success is because of its ability to keep users active, by encouraging them to meditate every day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SUsxKocL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kszaamk8wlb8183levgy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SUsxKocL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kszaamk8wlb8183levgy.png" alt="web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:&lt;a href="https://www.headspace.com/"&gt;Headspace&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This web design trend 2022, is basically a  process of ideas, techniques, and principles for changing behaviors. It is all about using visual cues to trigger user behavior. You can check some of the web apps that execute this amazing web design trend in a creative way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Web apps examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="http://weavesilk.com/"&gt;http://weavesilk.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://impactapp.in/"&gt;https://impactapp.in/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.stepsetgo.com/"&gt;https://www.stepsetgo.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://stickers.evrone.com/"&gt;https://stickers.evrone.com/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-memphis-design"&gt;
  &lt;/a&gt;
  4. Memphis Design
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rliRHxCW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AKz9zUNdNEmFNPsLmhrQ_ig.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rliRHxCW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AKz9zUNdNEmFNPsLmhrQ_ig.jpeg" alt="web design trends 2022" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúRemember how we laughed away the hours&lt;br&gt;&lt;br&gt;
And think of all the great things we would do&lt;/p&gt;

&lt;p&gt;Those were the days my friend&lt;br&gt;&lt;br&gt;
We thought they‚Äôd never end‚Äù ‚Äî Mary Hopkin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nostalgia‚Äî We all feel it often, right? Well, even the web design field is not an exception here‚Ä¶!! Another one in the list of web design trends 2022 is Memphis design. It is more of an 80‚Äôs thing but making a comeback as a web design trend in 2022. Yes, you heard it right. The ‚Äô80s are back‚Ä¶!!&lt;/p&gt;

&lt;p&gt;It is becoming more popular than ever.  Although, unlike the ‚ÄòMillennial Pink‚Äô trend, the current version of Memphis we see on Pinterest and Instagram has evolved since the original‚Äôs debut. Modern web designers are giving their designs a more modern feel, with the same core foundation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XwaeCFvd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AupjqFJNLIvRveR4QJh1sQw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XwaeCFvd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AupjqFJNLIvRveR4QJh1sQw.png" alt="Web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://www.cartoonnetworkstudios.com/"&gt;https://www.cartoonnetworkstudios.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Memphis is much more than just a design trend, it breaks the typical norm and encourages freshness, creativity, and uniqueness through the design. Also, it motivates boldness and bravery, not just in design but in life, and reminds us that our time on this earth should be fun. Thus, it can actually help you deliver the best impression.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Websites Examples Using Memphis Design:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://upperquad.com/"&gt;https://upperquad.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://shapefarm.net/"&gt;https://shapefarm.net/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.cartoonnetworkstudios.com/"&gt;https://www.cartoonnetworkstudios.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.orchestredeparis.com/resonance/"&gt;https://www.orchestredeparis.com/resonance/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-visible-borders"&gt;
  &lt;/a&gt;
  5. Visible Borders:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iClToLDh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AGuSGq_p9zAokBgLsygSNDQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iClToLDh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AGuSGq_p9zAokBgLsygSNDQ.png" alt="web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://www.physioasten.at/"&gt;https://www.physioasten.at/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;‚ÄúNeatly arranged and placed exactly where it should be.‚Äù&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Knowing the fact that websites are actually built on a strict grid and held together with the code, what can make them look real? Like, floating in a space within the limits, like neatly arranged by hand. Well, borders don‚Äôt just separate if they are used properly. They gave a realistic touch to the website and can create a clean impression of your website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DgVbyOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AHxa1HQmGB-PC2QiaGh-T2Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DgVbyOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AHxa1HQmGB-PC2QiaGh-T2Q.png" alt="web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://gumroad.com/"&gt;https://gumroad.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That‚Äôs the reason why in 2022, web designers are preferring this trend. They try to make it a little more real with layouts that reveal their foundation just by using simple borders and frames. A visible border obviously has the benefit of separating two sections from one another. This makes an easy browsing experience for the visitor as well as you can show more content without making it crowded.&lt;/p&gt;

&lt;p&gt;These simple borders also give websites a subtle touch that pairs well with other 90s-adjacent trends (such as Memphis) making a comeback. Thus, keep this web design trend in mind while designing your website, if you don‚Äôt want to lose your uniqueness.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website Examples Using This Web Design Trend:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.devrandogaroglu.com/"&gt;https://www.devrandogaroglu.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://shopify.supply/"&gt;https://shopify.supply/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://v-a-c.org/en"&gt;https://v-a-c.org/en&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#6-moving-type"&gt;
  &lt;/a&gt;
  6. Moving Type
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--POjH72Au--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/550/1%2ATszOD_U3MiD4yv_4IO2f4g.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--POjH72Au--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/550/1%2ATszOD_U3MiD4yv_4IO2f4g.gif" alt="web design trends 2022" width="500" height="281"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Floating, animated letters‚Ä¶ Seems like a Harry Potter thing‚Ä¶!!üòÄ&lt;/p&gt;

&lt;p&gt;Well, this is one of the fresh and new web design trends in 2022. Combining animation with typos is the best way to make your website engaging and interesting. Typography is no more just a way to convey information or massage. You can show your creativity with it and make it interactive by animating them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4bd0VmUN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/660/1%2Ac9Z_j350hwiQ6lV_7f9gzQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4bd0VmUN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/660/1%2Ac9Z_j350hwiQ6lV_7f9gzQ.gif" alt="web design trends 2022" width="600" height="338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://www.papertiger.com/"&gt;https://www.papertiger.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Animation is usually reserved for illustrated graphics, UI elements, and page transitions. Besides, animated or let‚Äôs say a moving text/typo can create a fresh and unique experience for the visitors. Even if the basic animations such as circular rotations can make a difference while browsing. Now, modern designers have broken this stereotype by mixing it with typography.&lt;/p&gt;

&lt;p&gt;Such small touches allow the typography to be in the spotlight without overwhelming the reader with unnecessary animation. Although, it is advised not to over animate the typos. Make them move in a creative way while keeping one thing in mind: Avoid over-animated typos as they can be overwhelming for visitors and may distract them from the website‚Äôs main motive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website Examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://atypikal.co/"&gt;https://atypikal.co/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.jomor.design/"&gt;https://www.jomor.design/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.thegreat.agency/"&gt;http://www.thegreat.agency/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://zoomanity.land/en/"&gt;http://zoomanity.land/en/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#7-oversized-typographic-hero-image"&gt;
  &lt;/a&gt;
  7. Oversized Typographic Hero Image
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hj-2i6q---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AGft15x-JZ9BFOt8H4p0DJQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hj-2i6q---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AGft15x-JZ9BFOt8H4p0DJQ.png" alt="web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://aluminium.index.studio/"&gt;https://aluminium.index.studio/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚ÄúFirst impression is the last impression.‚Äù&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It matters the most how your website page is going to make an impression on your visitors.&lt;/p&gt;

&lt;p&gt;Well,  the top of a page, known as the ‚Äúhero section‚Äù, is a crucial part of your website. It is the first thing your visitors gonna see. If it is not designed well, the visitor may not find it interesting enough to scroll further. Last year it was more about having an image in the hero section, now in the coming year, the scenario has changed. Images are now being replaced with eye-catching and oversized typography.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iX7w-K44--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AtbMBU2aP-Ac_PdyqoQTTyw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iX7w-K44--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AtbMBU2aP-Ac_PdyqoQTTyw.png" alt="web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://choreograffiti.com/"&gt;https://choreograffiti.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Big, fat, bold typography, with no videos and photography, used in a monochromatic color scheme is enough to get a user‚Äôs attention quickly. As the first part of a website that visitors see, the hero image must make a statement. That‚Äôs why modern designers are considering this web design trend in 2022.&lt;/p&gt;

&lt;p&gt;Typography of unusual size is a fresh trend. Thus, opting for a bigger size of text can be great for creating a striking first impression, and also for tying other design elements together. This is a very unique technique that can be used in minimalist or maximalist designs effectively and can blend with many different styles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Websites With Oversized Typographic Hero Image&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.azzerad.com/"&gt;https://www.azzerad.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://perturbator.com/"&gt;https://perturbator.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://kirifuda.co.jp/"&gt;https://kirifuda.co.jp/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.dariaizbash.com/"&gt;https://www.dariaizbash.com/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Check the collection of  &lt;a href="https://dev.to/theme_selection/best-typography-resources-tools-for-every-developers-and-designer-49hp"&gt;&lt;strong&gt;Best Typography Resources Tools For Developers and Designers&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#8-engaging-interactives"&gt;
  &lt;/a&gt;
  8. Engaging Interactives
&lt;/h3&gt;

&lt;p&gt;Interactive web design is not just a trend, but it is one of the crucial requirements as it not just attracts the visitors but adds value and elaborates your goal as well. Besides, it is a very vital factor for every designer. The main job of a web designer is to deliver an interactive and engaging website to make sure visitors don‚Äôt abandon the website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vxjr6g5L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2ArvO7aTVnP1IejSRBYgOPtA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vxjr6g5L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2ArvO7aTVnP1IejSRBYgOPtA.png" alt="web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit: &lt;a href="https://www.mobia.io/"&gt;https://www.mobia.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A visitor tends to leave your website the moment he finds it too straight and simple. Simplicity is good but too much of anything can make it unattractive. Thus using engaging interactives is a good idea.&lt;/p&gt;

&lt;p&gt;The motive of an interactive web design is to keep visitors on the site as much as it is possible. You can make your website more engaging by using interactive such as 3D animation, Videos, Graphics, etc. to attract the attention of your visitors. Using engaging interactives motivates a meaningful engagement with the page, such as clicking, scrolling, swiping, and dragging.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jyZuh5vP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Aft6APHyDZpwyuUibVQLTjg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jyZuh5vP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Aft6APHyDZpwyuUibVQLTjg.png" alt="web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit: &lt;a href="https://matterapp.com/"&gt;https://matterapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This web design trend is also helpful to reduce the bounce rate as well, as visitors are more likely to stay on your site. It is one of the best ways to provide value for visitors, get them engaged with your website, and learn more about them.&lt;/p&gt;

&lt;p&gt;If your design is interactive it will automatically create curiosity as well as interest for your company as well. So, keep this web design trend in mind while designing your website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website Examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.moooi.com/en/a-life-extraordinary#tokyo-blue"&gt;https://www.moooi.com/en/a-life-extraordinary#tokyo-blue&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.thegreat.agency/"&gt;http://www.thegreat.agency/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#9-interactive-fonts"&gt;
  &lt;/a&gt;
  9. Interactive Fonts:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--laPtu8yD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Azk59pX-7TJ4C2uD5TO_bXA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--laPtu8yD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Azk59pX-7TJ4C2uD5TO_bXA.png" alt="Fonts web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit: &lt;a href="https://smartupvisuals.com/"&gt;https://smartupvisuals.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fonts are no anymore ‚ÄúJust Simple Thing‚Äù in modern times. They can impact the website's performance. Fonts leave an impression on visitors. Thus, it is necessary to choose proper fonts and use them creatively. In current times, with highly advanced technology and the availability of sources, one can use their full creativity and imagination with Fonts.&lt;/p&gt;

&lt;p&gt;For example, have a look at the website Dillinger. It uses a font that changes its weight when the cursor moves over the text. Note that, here the shrinking effect on text against the black background makes the selected text more readable, a great addition for usability.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DzrP56tF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2AMjknsHx4-zfb5uYvXLp5sg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DzrP56tF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1400/1%2AMjknsHx4-zfb5uYvXLp5sg.gif" alt="web design trends 2022" width="720" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit: &lt;a href="https://www.dillinger.tv/"&gt;https://www.dillinger.tv/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unlike the previous times, it is now even easier to create more elaborate effects using modern no-code platforms. Although, while applying interactivity to fonts, it‚Äôs important to keep one thing in mind, some people get distracted by moving characters. So, do not overuse it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website Examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.jomor.design/"&gt;https://www.jomor.design/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://dearworldleaders.org/"&gt;https://dearworldleaders.org/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#10-creative-scrolling-experiences-parallax-scrolling"&gt;
  &lt;/a&gt;
  10. Creative Scrolling Experiences/ Parallax Scrolling:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nJRGc-l8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/770/1%2ASWWh4UzEafIcntowWAr3Cw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nJRGc-l8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/770/1%2ASWWh4UzEafIcntowWAr3Cw.gif" alt="web design trends 2022" width="720" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://drinkcann.com/"&gt;https://drinkcann.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once it was recommended that sites should include as much information above the fold as possible in order to avoid the user having to scroll. But in this modern era, scrolling is considered as one of the IMP factors as visitors want to engage in a way where they can get information about the website in a tasteful way.&lt;/p&gt;

&lt;p&gt;Parallax scrolling introduced a new way of allowing designers to break the stereotype by making the act of scrolling itself engaging for the user. Being the most common type of engagement a user makes with a page, scrolling is a constant opportunity for animated interactive feedback. By 2022, scrolling experiences are getting bigger and better than ever by taking visitors on imaginative journeys.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QervC2Zz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2A4a9_YfCGOw0ptfJ712abBA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QervC2Zz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2A4a9_YfCGOw0ptfJ712abBA.png" alt="web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="http://okkapi.agency/en/"&gt;http://okkapi.agency/en/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nowadays, pages are transforming into living worlds through cool parallax effects. As scrolling animations are not new, the main key to this trend is to surprise the visitor with a creative and meaningful experience.&lt;/p&gt;

&lt;p&gt;This can be one of the most path-breaking  &lt;strong&gt;web design trends&lt;/strong&gt;  &lt;strong&gt;2022&lt;/strong&gt;. So, make sure you consider this while designing a website. Note that, use this trend to entertain your visitor in a meaningful way. It should be beneficial to both the visitor and the website.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website Examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://admireamaze.debijenkorf.nl/"&gt;https://admireamaze.debijenkorf.nl/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://waltersophia.com/"&gt;https://waltersophia.com/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#11-handmade-graphics"&gt;
  &lt;/a&gt;
  &lt;strong&gt;11. Handmade Graphics&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uuGcWRd4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AlmO9cdBUEkVSt2nbKNZ7hw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uuGcWRd4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AlmO9cdBUEkVSt2nbKNZ7hw.png" alt="web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://www.oatly.com/"&gt;https://www.oatly.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hand-drawn art is one of the most unique and different web design trends. It is becoming one of the popular styles and it is adopted by web designers quite well. Using these hand-designed elements to attract visitors is surely a good idea.&lt;/p&gt;

&lt;p&gt;Well, a web designer‚Äôs main motive is to design and present the site in an interesting and fashionable way to attract users. To do so, web designers try fresh and unique ideas in their projects. Eventually this urge to stand out differently, lead to the use of hand-drawn elements in the website.&lt;/p&gt;

&lt;p&gt;Now, Hand-drawing is one of the most commonly used features of designers, graphic artists, and illustrators. Web designers are considering this web design trend 2022 as it offers the opportunity to experiment with design and show creativity and inspiration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website Examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.sweetmagnoliagelato.com/"&gt;https://www.sweetmagnoliagelato.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://waltersophia.com/"&gt;https://waltersophia.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.danieldiggle.com/"&gt;http://www.danieldiggle.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://themanyfacesof.com/leonardo-dicaprio/"&gt;http://themanyfacesof.com/leonardo-dicaprio/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#12-more-glassmorphism"&gt;
  &lt;/a&gt;
  12. More Glassmorphism
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FpI-aWV9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AzUkE0Z_CLfDHTBF_NbONww.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FpI-aWV9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AzUkE0Z_CLfDHTBF_NbONww.png" alt="glassmorphism web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://decimalchain.com/"&gt;https://decimalchain.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Glassmorphism&lt;/strong&gt; ‚Äî A combination of transparency, blur, and translucent frosted glass-like effect. That gives a glassy effect. Glassmorphism adds depth and visual hierarchy to your UI. Also, it can be effectively utilized to put focus on the content you want to highlight in a unique way.&lt;/p&gt;

&lt;p&gt;This technique is used in logos, illustrations, or even full sections. From website landing pages, mobile app interfaces, and dashboards, to UI components such as cards, onboarding screens, and login screens, designers are using the Glassmorphic effect in creative ways to add visual interest to the interface.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ER8U2SCs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AxpoBCWgsgKnbykq8Mu8aRA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ER8U2SCs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AxpoBCWgsgKnbykq8Mu8aRA.png" alt="" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:&lt;a href="https://digital.vtb.ru/digest/2021-jul/"&gt;https://digital.vtb.ru/digest/2021-jul/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: Glassmorphic elements work well when layered on top of Vibrant backgrounds, colorful shapes, and images. It gives a very rich look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Websites using Glassmorphism&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://weareodyssey.com/"&gt;https://weareodyssey.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://ventus.health/"&gt;https://ventus.health/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#13-illustrations"&gt;
  &lt;/a&gt;
  13. Illustrations
&lt;/h3&gt;

&lt;p&gt;Well, Illustrations are considered as one of the best ways to hold the visitors to your website. It has been an established trend in the web design world and will remain the same in 2022 as well. Web designers are experimenting with every possible way to stand out from the crowd and they are doing it in a very unique style. They have now introduced illustrations in 2 different styles: Collage Style and Abstract style.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-collage-style"&gt;
  &lt;/a&gt;
  1. Collage Style
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WD3FAysf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AiUT_nbJ3BtqPUXrnPBppDw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WD3FAysf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AiUT_nbJ3BtqPUXrnPBppDw.png" alt="web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="http://titanichistory.tilda.ws/"&gt;http://titanichistory.tilda.ws/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Collage style&lt;/strong&gt;  graphics can give site illustrations a tactile feel, open up more white space in a design, and allow you to incorporate images without focusing the entire design around a photograph. Make sure you blend shapes, colors, and patterns within a collage. You can add a monochrome effect, tint, or filter to photographs to help them blend with the overall design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.vanta.com/careers"&gt;https://www.vanta.com/careers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://anotherdei.com/"&gt;https://anotherdei.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://paperly.shop/"&gt;https://paperly.shop/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#2-abstract-illustration"&gt;
  &lt;/a&gt;
  2. Abstract Illustration:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s0d2j9L1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AB_AW9a1MwAMNfdwo6AGt7Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s0d2j9L1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AB_AW9a1MwAMNfdwo6AGt7Q.png" alt="web design trends 2022" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://marketwise.io/"&gt;https://marketwise.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, &lt;strong&gt;Abstract&lt;/strong&gt; illustrations that have a more organic texture and a sense of the human hand creating them are becoming more popular. While clean, poppy vector graphics and cute illustrations of humans and objects have ruled web design for a few years now, perhaps people are looking for something that feels a little more natural and sophisticated.&lt;/p&gt;

&lt;p&gt;This sort of illustration can be created with ink and paper and scanned or created in illustration software. The key is incorporating various textures and natural irregularities like watercolor, ink, paint, silkscreen effects, or the texture of the paper. Lines can also be softer, mimicking variations in line weight that come from using graphite or ink.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website Illustration:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://designmodo.com/"&gt;https://designmodo.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://howmanyplants.com/"&gt;https://howmanyplants.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://chrono.fund/"&gt;https://chrono.fund/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#14-less-neumorphism"&gt;
  &lt;/a&gt;
  14. Less Neumorphism
&lt;/h3&gt;

&lt;p&gt;Neumorphism was one of the top 2020/2021 UI design trends and for fair reason. It is fresh, creative, and attractive as well. You may check  &lt;a href="https://dribbble.com/tags/neumorphism"&gt;Dribbble shots&lt;/a&gt;  for examples. It is realistic, modern, futuristic, visually appealing, and extremely breathtaking due to its soft shadow and overall appearance.&lt;/p&gt;

&lt;p&gt;Although, most web designers are now dropping this.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Reason&lt;/strong&gt;: Accecibilty issue‚Ä¶!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CTcbrqYX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2ALxe2pXWSCiIa5ARt9i0SIA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTcbrqYX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2ALxe2pXWSCiIa5ARt9i0SIA.png" alt="Web design trends 2022" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://dribbble.com/shots/10494800-Nespresso-Light"&gt;https://dribbble.com/shots/10494800-Nespresso-Light&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Neumorphism looks good because it‚Äôs different from most web designs, but it doesn‚Äôt mean that you focus just on look as a website should design in a standard way because it just works better. One should keep in mind Accessibility first as it is one of the crucial parts of web design,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;For more details on this topic check&lt;/strong&gt; &lt;a href="https://uxdesign.cc/lets-talk-neumorphism-and-accessibility-44a48a6ace72"&gt;&lt;strong&gt;Neuomorphism and accessibility&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Neuomorphism creates situational vision difficulties at some point, like bright environments that interfere with screen visibility, and neumorphism is hard to read in environments like that.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mjbcNaWK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Au_m9GgNnJO-XaR5uuprTwg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mjbcNaWK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Au_m9GgNnJO-XaR5uuprTwg.png" alt="" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:&lt;a href="https://www.pfando.de/"&gt;https://www.pfando.de/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The lack of contrast and clear differentiation makes sites in this style very hard to navigate for anyone with reduced vision. Apart from this, the shadowed elements can make it hard for the user to decide which button they are pressing.&lt;/p&gt;

&lt;p&gt;While using any web design trend one should know that the main purpose is not just attracting visitors but also providing an easy and meaningful browsing experience and accessibility. Thus, using neumorphism is not a bad idea but use it wisely where it is needed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#16-material-design"&gt;
  &lt;/a&gt;
  16. Material Design
&lt;/h3&gt;

&lt;p&gt;Well, it is not old yet‚Ä¶!! Material design still remains on the list of  &lt;strong&gt;Web design trends 2022&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wt7qRZLk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AXnjfJsX8nGyKpI-OzXkvSQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wt7qRZLk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AXnjfJsX8nGyKpI-OzXkvSQ.png" alt="Vuexy VueJS Admin template" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://pixinvent.com/demo/vuexy-vuejs-admin-dashboard-template/landing/"&gt;Vuexy VueJS Admin Template&lt;/a&gt;  by  &lt;a href="https://pixinvent.com/"&gt;Pixinvent&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://material.io/design/"&gt;&lt;strong&gt;Material design&lt;/strong&gt;&lt;/a&gt;  is a design language that was introduced by Google back in 2014. Well, most of the time traditional web design looks simple and flat. That‚Äôs where the Material design comes to help. It allows using color and shadows to generate the effect of textures.&lt;/p&gt;

&lt;p&gt;It‚Äôs basically a continuation of the biggest trend in the design world during the past few years: flat design. Also, Material can do things that flat design can‚Äôt. It can add enough embellishment to enhance user experience and usability. Instead of taking everything away to favor visual appeal, the aim of Material Design is usability.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MSXnEpf5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2A2TjBMWj3GlWCAaNvrrQzRw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MSXnEpf5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2A2TjBMWj3GlWCAaNvrrQzRw.png" alt="Materialize Admin Template" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://pixinvent.com/materialize-material-design-admin-template/landing/"&gt;Materialize Admin Template&lt;/a&gt;  by  &lt;a href="https://pixinvent.com/"&gt;Pixinvent&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#17-retro-design-in-ui-retro-futurism"&gt;
  &lt;/a&gt;
  17. Retro Design in UI / Retro Futurism
&lt;/h3&gt;

&lt;p&gt;‚ÄúOld is gold‚Äù ‚Äî Indeed‚Ä¶!!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Retro design&lt;/strong&gt; has been one of the very popular web design trends. They are a great way to make your designs stand out. Retro design ‚Äî It is a style that brings on a sense of nostalgia. It is s one of the most effective web designs when it comes to connecting sites with users.&lt;/p&gt;

&lt;p&gt;When futuristic elements blend with retro design style there‚Äôs definitely going to be an out-of-the-box experience for the visitors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QL6CjQP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AyTPVoQ3TkKrzjC4JB6wy8A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QL6CjQP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AyTPVoQ3TkKrzjC4JB6wy8A.png" alt="" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Credit:  &lt;a href="https://www.exclusiveprs.com/"&gt;https://www.exclusiveprs.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Designers are applying retro and vintage style elements to online shops, portfolios, corporate design, and blogs on large and small scales. If implemented well, retro designs can be creative, appealing, make websites stand out, and look very unique.&lt;/p&gt;

&lt;p&gt;Be it Movies or Design, some old styles remain evergreen. In the web design world, retro style is often used to stand out from the regular design. Be it Movies or Design, some old styles remain evergreen. In the web design world, retro style is often used to stand out from the regular design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Website Examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.dayln.design/"&gt;https://www.dayln.design/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://basement.studio/"&gt;https://basement.studio/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.bulleitgroup.com/"&gt;https://www.bulleitgroup.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://harvardfilmarchive.org/"&gt;https://harvardfilmarchive.org/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;So, we have mentioned some of the path-breaking and out-of-the-box  &lt;strong&gt;Web design Trends 2022&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Designers this year are more likely to have an approach of delivering different web designs but with keeping accessibility and seamless navigation in mind that engages with visitors in a unique yet meaningful way.&lt;/p&gt;

&lt;p&gt;In 2022, we can expect to see more innovative and experimental design trends to enhance engagement with visitors and improvise their user experience.&lt;/p&gt;

&lt;p&gt;Do tell us which web design trends 2022 are your favorite? Also, suggest any web design trend that you think we can add here in the comment section below. Also, don‚Äôt forget to share.üéâ&lt;/p&gt;

&lt;p&gt;Happy Designing‚Ä¶!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-us"&gt;
  &lt;/a&gt;
  About Us:
&lt;/h3&gt;

&lt;p&gt;We at  &lt;a href="https://themeselection.com/"&gt;Themeselection&lt;/a&gt;, provide selected high-quality, modern design, professional, and easy-to-use Free Admin Dashboard Template, HTML Themes, and UI Kits to create your applications faster!&lt;/p&gt;

&lt;p&gt;If you want to try out the mentioned trends above then do use the  &lt;a href="https://themeselection.com/products/category/bootstrap-admin-templates/"&gt;Bootstrap Admin Templates&lt;/a&gt;  and  &lt;a href="https://themeselection.com/products/category/vuejs-admin-templates/"&gt;VueJS Admin Templates&lt;/a&gt;. It will help you get a better idea.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>How To Learning JavaScript Faster</title>
      <author>Danish Saleem</author>
      <pubDate>Wed, 19 Jan 2022 12:59:30 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/how-to-learning-javascript-faster-1cj5</link>
      <guid>https://dev.to/mrdanishsaleem/how-to-learning-javascript-faster-1cj5</guid>
      <description>&lt;h3&gt;
  &lt;a href="#1-follow-the-2080-rule"&gt;
  &lt;/a&gt;
  1. Follow the 20/80 Rule
&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;Pareto Principle,&lt;/strong&gt; or the &lt;strong&gt;20/80 rule,&lt;/strong&gt; states that 80% of results come from 20% of the effort.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You might be wondering, How does this apply to JavaScript?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well, it means that in order to build good applications you have to first focus on mastering the most important parts of the language.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Variables&lt;/li&gt;
&lt;li&gt;Conditionals&lt;/li&gt;
&lt;li&gt;Arrays&lt;/li&gt;
&lt;li&gt;Objects&lt;/li&gt;
&lt;li&gt;The DOM&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-practice-actively"&gt;
  &lt;/a&gt;
  2. Practice Actively
&lt;/h3&gt;

&lt;p&gt;Afraid of Tutorial Hell? Just get out of it! In order to get better, you need to spend more time writing code than just watching or reading tutorials. Here‚Äôs what you need to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write code for at least one hour per day&lt;/li&gt;
&lt;li&gt;Don‚Äôt follow tutorials if you‚Äôre not also writing the code&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-build-lots-of-projects"&gt;
  &lt;/a&gt;
  3. Build Lots of Projects
&lt;/h3&gt;

&lt;p&gt;Projects, no matter how small or big, will help you solidify your knowledge and give you hands-on practice. To learn faster, do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Come up with a list of projects, from simple to complex&lt;/li&gt;
&lt;li&gt;Build your project one at a time and learn by doing so&lt;/li&gt;
&lt;li&gt;Don‚Äôt forget to upload all your projects to GitHub&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-learn-how-to-debug"&gt;
  &lt;/a&gt;
  4. Learn how to Debug
&lt;/h3&gt;

&lt;p&gt;Debugging is the developer‚Äôs best friend, your projects will surely have bugs, so you will need to be able to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Learn how to read error messages properly&lt;/li&gt;
&lt;li&gt;Get good at searching your problems on Google&lt;/li&gt;
&lt;li&gt;Learn how to use your IDE and Browser for debugging&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect üíú
&lt;/h3&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.instagram.com/mrdanishsaleem/"&gt;Instagram&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" alt="Buy Me a Coffee" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Youtube channels you should follow for web development</title>
      <author>Modern Web</author>
      <pubDate>Wed, 19 Jan 2022 12:57:06 +0000</pubDate>
      <link>https://dev.to/kunaal438/youtube-channels-you-should-follow-for-web-development-4330</link>
      <guid>https://dev.to/kunaal438/youtube-channels-you-should-follow-for-web-development-4330</guid>
      <description>&lt;p&gt;Hey, Welcome here. Today, we'll see some of the best youtube channel that you should consider following for web development. They are my favourite ones. And I guess they are amazing.&lt;/p&gt;

&lt;p&gt;Without wasting more time, let's jump right into it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-clever-programmer"&gt;
  &lt;/a&gt;
  1 Clever Programmer
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a8H0aoKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtnsjijoifza532z0kdm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a8H0aoKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtnsjijoifza532z0kdm.png" alt="clever programmer" width="728" height="198"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clever programmer is best channel to follow for react. He makes very good tutorial using react. He made netflix clone, slack clone, amazon clone, instagram clone and what not. Its amazing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-online-tutorials"&gt;
  &lt;/a&gt;
  2 Online Tutorials
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pFzVdEFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8anzg294ya5i64t5ppea.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pFzVdEFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8anzg294ya5i64t5ppea.png" alt="Online tutorials" width="648" height="198"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the best channel on youtube for CSS tricks. Like he made so much interesting and amazing only using CSS. I learnt most of my CSS skills from him.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-codewithharry"&gt;
  &lt;/a&gt;
  3 Codewithharry
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dVP1EQ4a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/loib993bzp84rjmtt29r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dVP1EQ4a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/loib993bzp84rjmtt29r.png" alt="Code with harry" width="690" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This channel is all rounder. He makes tutorial on web development, python, c and all other programming languages. He explains very well. You can find full web development courses on this channel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-traversy-media"&gt;
  &lt;/a&gt;
  4 Traversy media
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Isktk2Dy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gj1x2tikxos5ne3tnbsh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Isktk2Dy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gj1x2tikxos5ne3tnbsh.png" alt="Traversy media" width="640" height="172"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Traversy media, oh he is also great. He make tutorial on web development covering whole front end and backend. Its good for full stack development.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-modern-web"&gt;
  &lt;/a&gt;
  5 Modern Web
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nWEaZG2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gzxt7tz7i23k9m9u2yo5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nWEaZG2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gzxt7tz7i23k9m9u2yo5.png" alt="Modern web" width="584" height="196"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Well this channel is mine. I am not a big youtuber. I feel my content is awesome. Anyway why don't you check out my &lt;a href="https://www.youtube.com/c/ModernWeb"&gt;channel&lt;/a&gt; give me feedback is it good or not. I know it don't deserve a place in this list but why not let me promote my self a bit also üòÖ.&lt;/p&gt;

&lt;p&gt;Modern web makes awesome tutorials covering front end and backend and what not. You can find a lot of interesting tutorials on my channel. Below are some of my videos are &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hmEpkRVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60c6bzndfxkptqmnr7r5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hmEpkRVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60c6bzndfxkptqmnr7r5.png" alt="Videos" width="664" height="765"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you do like my content or any others channels content. Make sure you follow them. &lt;/p&gt;

&lt;p&gt;If you can subscribe and give me a feedback about my channel that will be very appreciable. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5gs5zBA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jeitpawvax07cx7r9yoa.png" width="334" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

</description>
      <category>css</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
