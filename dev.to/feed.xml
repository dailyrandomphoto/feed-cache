<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 Cool Animated Buttons Using CSS and JS</title>
      <author>Sumeet Yadav</author>
      <pubDate>Thu, 24 Jun 2021 19:00:49 +0000</pubDate>
      <link>https://dev.to/sumeet16/5-cool-animated-button-using-css-and-js-1mpd</link>
      <guid>https://dev.to/sumeet16/5-cool-animated-button-using-css-and-js-1mpd</guid>
      <description>&lt;p&gt;Hey folks, today in this blog we are going to see some cool animated button which can make your website more interactive and look modern.&lt;/p&gt;

&lt;p&gt;The attention span of the audience has become very low, and to grab their attention it is really mandatory to make interactive buttons and looks more appealing, so let's get started.&lt;br&gt;
 &lt;br&gt;
&lt;strong&gt;1. Social Media Button&lt;/strong&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/sumeet1610/embed/xxqvOvz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
 &lt;br&gt;
&lt;strong&gt;2. RGB Button&lt;/strong&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/sumeet1610/embed/MWpNjgo?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
 &lt;br&gt;
&lt;strong&gt;3. Cool Submit Button&lt;/strong&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/sumeet1610/embed/abJeZXq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
 &lt;br&gt;
&lt;strong&gt;4. Ripple Button&lt;/strong&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/sumeet1610/embed/LYWwRPg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
 &lt;br&gt;
&lt;strong&gt;5. Image Button&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;background: url('');&lt;/code&gt; This CSS property was not working in CodePen hence I have inserted this video with the code below.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iQeMfSQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fyz4okqcp1qyw2l2ds2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQeMfSQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fyz4okqcp1qyw2l2ds2.gif" alt="image-button-google-chrome-2021-06-24-23-56-25-trim_aIxqKV9f_1LZQ (1)"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Image Button&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"./btn5.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;Read More&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;Read More&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Poppins'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;75px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;::before&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url('./images/btn-bg1.png')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nd"&gt;::before&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url('./images/btn-bg2.png')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover:before&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-blogs-topic"&gt;
  &lt;/a&gt;
  Next Blog's Topic:
&lt;/h2&gt;

&lt;p&gt;Walkthrough with Box-shadow Property in CSS, and with the help of box-shadow we are going to create a effect called Neomorphism isn't it sound's good??&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank You for visiting this blog&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>vscode</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Pushing and running Docker images</title>
      <author>Ujjwal Goyal</author>
      <pubDate>Thu, 24 Jun 2021 18:54:47 +0000</pubDate>
      <link>https://dev.to/importhuman/pushing-and-running-docker-images-3hmp</link>
      <guid>https://dev.to/importhuman/pushing-and-running-docker-images-3hmp</guid>
      <description>&lt;p&gt;&lt;em&gt;(This post assumes you have a DockerHub account.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the previous post, we built a Docker image. Now, we're going to "push", or upload it to DockerHub, and also see how to run it in a container!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dockerhub"&gt;
  &lt;/a&gt;
  DockerHub
&lt;/h2&gt;

&lt;p&gt;DockerHub is a library for container images. By pushing our image (with an appropriate tag), we can make our image available to others (or keep it private if we so require), or use the same image on different systems.&lt;/p&gt;

&lt;p&gt;Before we can push our image, we need to give a proper name to it. This name will include our DockerHub username, the image name, and a version tag. &lt;br&gt;
Consider a local image named "python-helloworld". We run the following command.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker tag python-helloworld importhuman/python-helloworld:v1.0.0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's break this down. With the &lt;code&gt;docker tag&lt;/code&gt; command, we take our local image, &lt;code&gt;python-helloworld&lt;/code&gt;, and give it the name &lt;code&gt;importhuman/python-helloworld:v1.0.0&lt;/code&gt;. Here,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;importhuman&lt;/code&gt; is the name of my DockerHub account. This is needed to decide which account the image is pushed to. &lt;strong&gt;Replace this with your account name.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;python-helloworld&lt;/code&gt; is the image I want to push. This is also the name that will be given to the DockerHub repository. Replace this with the name you gave your image (see &lt;a href="https://dev.to/importhuman/writing-dockerfiles-for-python-application-ln6"&gt;previous post in this series&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;v1.0.0&lt;/code&gt; is the tag name. Tags are used to version images.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, if we run &lt;code&gt;docker images&lt;/code&gt;, we should see both our local image and the newly tagged image.&lt;/p&gt;

&lt;p&gt;(If you haven't logged in to DockerHub in the terminal, run &lt;code&gt;docker login&lt;/code&gt;, and input your username and password.)&lt;/p&gt;

&lt;p&gt;To push the image, we simply run&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker push importhuman/python-helloworld:v1.0.0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and we should have a new repository on DockerHub with our newly tagged image!&lt;/p&gt;

&lt;p&gt;To pull this image to our system, we would simply run&lt;br&gt;
&lt;code&gt;docker pull importhuman/python-helloworld:v1.0.0&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#running-the-image"&gt;
  &lt;/a&gt;
  Running the image
&lt;/h2&gt;

&lt;p&gt;Let's see the command to run our image in a container, and then we'll break it down.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker run -d -p 8080:5000 importhuman/python-helloworld:v1.0.0&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;-d&lt;/code&gt; runs the container in "detached mode". This essentially starts the container while leaving you free to run other commands in the terminal window. Without this flag (foreground mode), the terminal attaches to the process’s standard input, output, and standard error. (Source: &lt;a href="https://docs.docker.com/engine/reference/run/"&gt;Docker&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-p 8080:5000&lt;/code&gt; specifies that host port 8080 is connected to container port 5000. The container port here is 5000 as it is the default port exposed by Flask. Thus, if we open "localhost:8080" in a browser, we'll see the expected "Hello World!" output.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;importhuman/python-helloworld:v1.0.0&lt;/code&gt; is the image we want to run in a container (a local image can be used rather than the tagged version as well).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(For more information on the above explanation, or on running images in Docker containers, please &lt;a href="https://docs.docker.com/engine/reference/run/"&gt;see here&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;To see more information about currently running containers, run&lt;br&gt;
&lt;code&gt;docker ps&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To stop a running container, run the command&lt;br&gt;
&lt;code&gt;docker stop &amp;lt;container-id&amp;gt;&lt;/code&gt; &lt;br&gt;
OR&lt;br&gt;
&lt;code&gt;docker stop &amp;lt;container-name&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Congratulations! You now know how to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tag Docker images&lt;/li&gt;
&lt;li&gt;push and pull Docker images from DockerHub&lt;/li&gt;
&lt;li&gt;run Docker images in containers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please feel free to ask any questions you have in the comments or on &lt;a href="https://twitter.com/ImportHuman"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>tutorial</category>
      <category>python</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Desenvolva um código melhor com Object Calisthenics</title>
      <author>Marcelo Augusto</author>
      <pubDate>Thu, 24 Jun 2021 18:35:36 +0000</pubDate>
      <link>https://dev.to/pixelwolfhq/desenvolva-um-codigo-melhor-com-object-calisthenics-efe</link>
      <guid>https://dev.to/pixelwolfhq/desenvolva-um-codigo-melhor-com-object-calisthenics-efe</guid>
      <description>&lt;h3&gt;
  &lt;a href="#o-famoso-c%C3%B3digo-hadouken"&gt;
  &lt;/a&gt;
  O famoso código Hadouken
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2KtdUBTc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ord38gsx267in4ej1vk6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2KtdUBTc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ord38gsx267in4ej1vk6.jpg" alt="Baixo, frente + soco = Hadouken"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;18 horas em plena sexta-feira, você doido para jogar um game e se depara com um código desse.&lt;br&gt;
A vontade é de sair gritando, mas você como uma ótimo profissional, vai refatorar o código e deixar ele brilhando o/ o/&lt;/p&gt;

&lt;p&gt;Eis que eu te apresento o Object Calisthenics&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/1AdZgkFXp5Ybrj6dZ1/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/1AdZgkFXp5Ybrj6dZ1/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#o-que-%C3%A9-object-calisthenics"&gt;
  &lt;/a&gt;
  O que é Object Calisthenics?
&lt;/h1&gt;

&lt;p&gt;É um conjunto de boas práticas e regras criado pelos desenvolvedores Java, mas que servem para as demais linguagens.&lt;br&gt;
Ao todo são 9 regras, vou explicar as mais simples e eficientes.&lt;/p&gt;

&lt;p&gt;Essas regras vão ajudar na manutenção do código, nos testes e até mesmo na compreensão.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#regras"&gt;
  &lt;/a&gt;
  Regras
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;OBS: A linguagem utilizada é JavaScript, mas nada impede que você aplique os conceitos em outras linguagens.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#um-n%C3%ADvel-de-identa%C3%A7%C3%A3o-por-m%C3%A9todo"&gt;
  &lt;/a&gt;
  Um nível de identação por método
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;displayPyramid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numberOfLine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;numberOfLine&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numberOfLine&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;secondIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;secondIndex&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;secondIndex&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;thirdIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;thirdIndex&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;thirdIndex&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#podemos-extrair-os-dois-la%C3%A7os-for-por-duas-fun%C3%A7%C3%B5es-separadas"&gt;
  &lt;/a&gt;
  Podemos extrair os dois laços for por duas funções separadas.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getBlankSpace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numberOfLine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currentLineIndex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numberOfLine&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;currentLineIndex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getFilledPyramid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentLineIndex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;currentLineIndex&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;displayPyramid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numberOfLine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;numberOfLine&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;getBlankSpace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numberOfLine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;getFilledPyramid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#n%C3%A3o-use-else"&gt;
  &lt;/a&gt;
  Não use ELSE
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printSeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ticketCode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ticketCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;ticketCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;B&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;printVipSeat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;printBasicSeat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#fa%C3%A7a-um-retorno-antecipado"&gt;
  &lt;/a&gt;
  Faça um retorno antecipado
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printSeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ticketCode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ticketCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;ticketCode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;B&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;printVipSeat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;printBasicSeat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#benef%C3%ADcios"&gt;
  &lt;/a&gt;
  Benefícios:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Reduz a complexidade e aumenta a legibilidade do fluxo lógico&lt;/li&gt;
&lt;li&gt;Reduz a duplicação de validações mais complexas, te forçando a criar métodos para determinada validação&lt;/li&gt;
&lt;li&gt;Te força a pensar em um código mais limpo&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#n%C3%A3o-use-abrevia%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Não use abreviações
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;! = &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#deixe-seu-c%C3%B3digo-mais-claro-uma-mudan%C3%A7a-simples-dessa-evita-que-o-seu-colega-perca-horas-tentando-adivinhar-o-que-cada-vari%C3%A1vel-faz"&gt;
  &lt;/a&gt;
  Deixe seu código mais claro, uma mudança simples dessa evita que o seu colega perca horas tentando adivinhar o que cada variável faz
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;temporary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;temporary&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;! = &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;temporary&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#benef%C3%ADcios"&gt;
  &lt;/a&gt;
  Benefícios:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Revelar a intenção da variável&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#refer%C3%AAncias"&gt;
  &lt;/a&gt;
  Referências
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://medium.com/@davidsen/clean-code-object-calisthenics-f6f4dec07c8b"&gt;Clean Code — Object Calisthenics in Javascript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://imasters.com.br/desenvolvimento/desenvolva-um-codigo-melhor-com-object-calisthenics"&gt;Desenvolva um código melhor com Object Calisthenics&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/pbouillon/writing-cleaner-code-with-object-calisthenics-1ea0"&gt;Writing cleaner code with Object Calisthenics&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://williamdurand.fr/2013/06/03/object-calisthenics/"&gt;Object Calisthenics&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclusão
&lt;/h2&gt;

&lt;p&gt;Quando falamos de um código limpo o que não falta é material disponível sobre o assunto. O que passei aqui foi só a ponta do ‘iceberg’, para vermos que pequenas mudanças no processo de escrita do código já podemos obter melhorias significativas na qualidade do que é produzido. Se ainda têm interesse sobre o assunto, pesquise mais sobre Object Calisthenics.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Run Scripts on websites using this simple technique</title>
      <author>BIKASH MISHRA</author>
      <pubDate>Thu, 24 Jun 2021 18:12:58 +0000</pubDate>
      <link>https://dev.to/forkbikash/run-scripts-on-websites-using-this-simple-technique-lpn</link>
      <guid>https://dev.to/forkbikash/run-scripts-on-websites-using-this-simple-technique-lpn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-are-bookmarklets"&gt;
  &lt;/a&gt;
  What are bookmarklets?
&lt;/h2&gt;

&lt;p&gt;A bookmarklet is a bookmark stored in a web browser that contains JavaScript commands that add new features to the browser.&lt;/p&gt;

&lt;p&gt;Developing a bookmarklet is simple and easy to use.&lt;/p&gt;

&lt;p&gt;They can even make a post request with the fetch api.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-develop-one"&gt;
  &lt;/a&gt;
  How to develop one
&lt;/h2&gt;

&lt;p&gt;Use javascript in &lt;code&gt;href&lt;/code&gt; attribute of &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags in HTML.&lt;br&gt;
An example would be&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="javascript: alert('hello world');"&amp;gt;click me&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make that in HTML and drag it into your bookmarks bar, you have just added a bookmarklet to your browser. Isn't it simple?&lt;/p&gt;

&lt;p&gt;All the javascript in your bookmarklet has to be minified.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="javascript: fetch('https://api.website.com/endpoint').then((data) =&amp;gt; { alert('data'); })"&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bookmarklet can be used to modify(or filter) the content of a website.&lt;br&gt;
Below is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a href="javascript: document.body.innerHTML = '&amp;lt;h1&amp;gt;yeah!&amp;lt;/h1&amp;gt;' })"&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Main reason you should consider developing or using a bookmarklet is for productivity.&lt;/p&gt;

&lt;p&gt;You can find many pre-built bookmarklets on internet.&lt;/p&gt;

&lt;p&gt;I hope this helps someone out there.&lt;/p&gt;

&lt;p&gt;Don't forget to mention what you've made in the comments below!&lt;/p&gt;

</description>
      <category>bookmarklet</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>What is serverless PHP and how does it work?</title>
      <author>Carl Alexander</author>
      <pubDate>Thu, 24 Jun 2021 17:53:34 +0000</pubDate>
      <link>https://dev.to/carlalexander/what-is-serverless-php-and-how-does-it-work-4m5b</link>
      <guid>https://dev.to/carlalexander/what-is-serverless-php-and-how-does-it-work-4m5b</guid>
      <description>&lt;p&gt;Serverless computing is a new cloud computing model centred on &lt;a href="https://en.wikipedia.org/wiki/Function_as_a_service"&gt;Functions as a Service&lt;/a&gt; (FaaS). A serverless PHP application is simply a PHP application that runs on one of those serverless computing platforms. But what's so special about it, and why is there interest in using it instead of a regular server for PHP?&lt;/p&gt;

&lt;p&gt;Well, as web developers, we always have to consider where we host our code. It doesn't matter whether we're using &lt;a href="https://en.wikipedia.org/wiki/JavaScript"&gt;JavaScript&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/PHP"&gt;PHP&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Python_(programming_language)"&gt;Python&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Ruby_(programming_language)"&gt;Ruby&lt;/a&gt;. (Just to name a few.) They all need a hosting service where that code can run and render the HTML sent to the browser.&lt;/p&gt;

&lt;p&gt;There are a lot of different hosting services. You can pay for a server on &lt;a href="https://www.digitalocean.com/"&gt;DigitalOcean&lt;/a&gt; or some other some other &lt;a href="https://en.wikipedia.org/wiki/Cloud_computing"&gt;cloud&lt;/a&gt; provider. This is often the cheapest option, but then you have a server to manage.&lt;/p&gt;

&lt;p&gt;If you don't want to do that, you can use a &lt;a href="https://en.wikipedia.org/wiki/Platform_as_a_service"&gt;Platform as a Service&lt;/a&gt; (PaaS) like &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt;. You tell them how big of a server you want and they take care of the rest. On your end, you just need to deploy your code and that's it. &lt;a href="https://en.wikipedia.org/wiki/WordPress"&gt;WordPress&lt;/a&gt; hosting works similarly.&lt;/p&gt;

&lt;p&gt;While platforms as a service help you worry less about your server, they don't completely remove all server issues. You still have to wonder if you can handle spikes in traffic. That's because most of these services won't scale automatically to handle these scenarios.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Serverless_computing"&gt;Serverless computing&lt;/a&gt; offers a solution to this problem. It distills your cloud computing needs to its barest essence. Your cloud provider will run your code on-demand and only charge you for that.&lt;/p&gt;

&lt;p&gt;This lets you only pay for what you use. (If your site receives no traffic, you pay nothing.) This architecture also lets you scale infinitely. In fact, serverless computing can scale to handle thousands of visitors almost instantly.&lt;/p&gt;

&lt;p&gt;This is a transformative change for all programming languages. But even more so for PHP, since it's a language uniquely positioned to leverage the benefits of serverless. Let's explore why that is.&lt;/p&gt;

&lt;h1&gt;How does a traditional PHP application work?&lt;/h1&gt;

&lt;p&gt;PHP differs from most other programming languages because it's an &lt;a href="https://en.wikipedia.org/wiki/Interpreted_language"&gt;interpreted language&lt;/a&gt;. You don't need to compile your code. You can just upload your PHP files to a web server, and that's it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1-uwwSI---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.ymirapp.com/uploads/2021/04/server-php-architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1-uwwSI---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.ymirapp.com/uploads/2021/04/server-php-architecture.png" alt="PHP server architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The web server (&lt;a href="https://en.wikipedia.org/wiki/Nginx"&gt;nginx&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Apache_HTTP_Server"&gt;apache&lt;/a&gt; most of the time) does all the magic. It figures out what PHP file you're trying to access. Often, it's just the &lt;code&gt;index.php&lt;/code&gt; file in the root directory which then loads other PHP files. (Fun fact: &lt;a href="https://twitter.com/levelsio/status/1381709793769979906"&gt;Pieter Levels makes $100k/month from a single index.php file!&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The web server then sends this PHP file to the PHP interpreter. The interpreter reads the file, parses it and then executes it. Once the execution completes, it'll return some output. That output is the generated HTML that the web server sends back to your browser as an HTTP response.&lt;/p&gt;

&lt;h1&gt;What happens when you use serverless PHP&lt;/h1&gt;

&lt;p&gt;Now that we've gotten a basic idea of how a PHP application works, we can look at what happens to it when you use serverless PHP. First, serverless computing is &lt;a href="https://en.wikipedia.org/wiki/Event-driven_programming"&gt;event-driven&lt;/a&gt;. Your serverless PHP interpreter awaits for an event, and this triggers the PHP code to run.&lt;/p&gt;

&lt;p&gt;In a way, it’s similar to how things work with a web server. Your web server receives an &lt;a href="https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_message"&gt;HTTP request&lt;/a&gt; (an event) and this event would cause the web server to tell the PHP interpreter to process your code. This is the primary reason serverless computing works so well with PHP.&lt;/p&gt;

&lt;p&gt;So what's different about serverless PHP then? The big change is that, not only do you not have a server with serverless PHP, you don't have a web server anymore either. Instead of a web server, you use an API gateway which is a special service offered by the cloud provider. Let's look at what that looks like in more detail.&lt;/p&gt;

&lt;h2&gt;The life of a serverless PHP request&lt;/h2&gt;

&lt;p&gt;Below is a diagram showing what happens when you make a request to a serverless PHP application. As you can see, it looks very similar to what we had before.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WDRLyiCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.ymirapp.com/uploads/2021/04/serverless-php-architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WDRLyiCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.ymirapp.com/uploads/2021/04/serverless-php-architecture.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The browser sends the HTTP request to the API gateway. The gateway receives the HTTP request, converts it to an event, and forwards it to the serverless PHP application. It reads, parses, and executes the requested PHP file and returns the result to the API gateway. The gateway generates the HTTP response and sends it back to the browser.&lt;/p&gt;

&lt;p&gt;Of note is the serverless PHP application. It has two parts: the PHP runtime and your PHP code.&lt;/p&gt;

&lt;p&gt;The PHP runtime contains the PHP interpreter. But it also has code to process the event sent by the API gateway and return it the response from the interpreter. Your PHP application code is the same PHP code you’d deploy to a regular server.&lt;/p&gt;

&lt;p&gt;These two parts get packaged together as a function (this is where the name Function as a Service comes from) when you deploy your serverless PHP application to the cloud provider. This function is what the API gateway sends an event to whenever it receives a request.&lt;/p&gt;

&lt;h1&gt;What's the advantage of this?&lt;/h1&gt;

&lt;p&gt;Now that we've seen how serverless PHP application works, you might wonder, "Why would I want to use this instead of my trusty Linux server?"&lt;/p&gt;

&lt;h2&gt;Near infinite scaling&lt;/h2&gt;

&lt;p&gt;Once you've deployed a new version of your serverless PHP application, the cloud provider can create as many copies of it as necessary. It can also create these copies almost instantly. This allows your PHP application to handle large spikes of traffic without breaking a sweat. (For example, &lt;a href="https://blog.ymirapp.com/why-serverless-perfect-hosting-woocommerce/"&gt;Ymir can help your WooCommerce site scale to handle hundreds of customers instantly&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;With a normal server setup, you need to have the server capacity already provisioned and ready to go. Otherwise, you need to have a &lt;a href="https://en.wikipedia.org/wiki/Horizontal_scalability"&gt;horizontally scaling&lt;/a&gt; setup ready to handle these traffic spikes. But these types of setup take a few minutes to scale which can make the application unavailable until then.&lt;/p&gt;

&lt;h2&gt;No need to manage servers&lt;/h2&gt;

&lt;p&gt;This is a good way to bring up the next advantage of using serverless. You don't have a server to manage anymore. If you've ever had to manage servers, you know the responsibilities that come with managing one. (Being on call when it goes down, handling updates, keeping it secure, etc.)&lt;/p&gt;

&lt;p&gt;With serverless, all that you have to do is deploy your PHP code to your serverless platform and you're good to go! This gives you a peace of mind that's hard to put a price on. But once you've experienced it, it's hard to go back. (It's why I built &lt;a href="https://ymirapp.com"&gt;Ymir&lt;/a&gt;.)&lt;/p&gt;

&lt;h2&gt;Pay per use&lt;/h2&gt;

&lt;p&gt;The server doesn't just change how we host our code. It's also changes how we pay for hosting it. Before you'd pay for a server that had to stay on at all times. This was true regardless that you had a droplet on DigitalOcean or code deployed to a Heroku dyno.&lt;/p&gt;

&lt;p&gt;With serverless, you only pay when your code runs. (For example, &lt;a href="https://en.wikipedia.org/wiki/AWS_Lambda"&gt;AWS Lambda&lt;/a&gt; charges you by the millisecond!) In a lot of cases, this offers significant cost saving. &lt;a href="https://mnapoli.fr/serverless-case-study-externals/"&gt;One case study&lt;/a&gt; shows how &lt;a href="https://externals.io/"&gt;external.io&lt;/a&gt; went from paying $50/month on &lt;a href="https://platform.sh"&gt;platform.sh&lt;/a&gt; to ~$17/month on &lt;a href="https://en.wikipedia.org/wiki/Amazon_Web_Services"&gt;AWS&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;The tradeoffs&lt;/h1&gt;

&lt;p&gt;If serverless sounds too good to be true, that's because it generally is! That said, it's not the ideal solution in all situations. Here are some the tradeoffs you have to consider if you're looking to use serverless,&lt;/p&gt;

&lt;h2&gt;Harder to predict costs&lt;/h2&gt;

&lt;p&gt;When you pay for a server, you know it'll be $X/month. It's simple and easy to plan for. If you need a larger server, you know you'll go from paying $X/month to $Y/month.&lt;/p&gt;

&lt;p&gt;With serverless that whole cost calculation is more complicated, you have to think, "How many requests do I get? How long do they last on average?" So while pay per use pricing model offers great cost saving potential, you might prefer the predictability of regular hosting costs. Even if you might pay 2-3 times more for it.&lt;/p&gt;

&lt;h2&gt;Not cheaper than a low-end VPS&lt;/h2&gt;

&lt;p&gt;If you're running your PHP application on a $5/month &lt;a href="https://en.wikipedia.org/wiki/Virtual_private_server"&gt;VPS&lt;/a&gt;, serverless won't offer any cost saving. In general, serverless PHP becomes cost competitive when you're paying $25/month for hosting. $25/month isn't that expensive for hosting, but a lot of us just host projects on smaller VPCs.&lt;/p&gt;

&lt;p&gt;That said, &lt;a href="https://twitter.com/JackEllis/status/1337425341103521792"&gt;it's also disingenuous to just compare server costs like this&lt;/a&gt;. You should also consider how much it costs to manage that server. Either it costs your time or you have to pay someone to do it.&lt;/p&gt;

&lt;h2&gt;Generally limited to AWS&lt;/h2&gt;

&lt;p&gt;While serverless computing exists on all the major cloud providers, your serverless architecture is very provider dependent. An API gateway on &lt;a href="https://en.wikipedia.org/wiki/Microsoft_Azure"&gt;Microsoft Azure&lt;/a&gt; won't work the same as the one on &lt;a href="https://en.wikipedia.org/wiki/Google_Cloud_Platform"&gt;Google Cloud&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The reality is that, at this time, most of the energy around serverless PHP is focused on one provider: AWS. Not everyone can use AWS for a wide range of reasons. That said, if you can't use AWS, you're going to have a harder time finding resources or services (&lt;a href="http://vapor.laravel.com/"&gt;Laravel Vapor&lt;/a&gt; and Ymir are both AWS only) to create a serverless PHP application.&lt;/p&gt;

&lt;h1&gt;A great alternative to servers&lt;/h1&gt;

&lt;p&gt;The point of this article wasn't necessarily to show you you shouldn't host a PHP application on a server. Hosting a PHP application on a server still has a bright future ahead of it. It's sometimes more cost effective to do so. You can choose which provider you want to use, and there are countless resources and tools to help you manage one.&lt;/p&gt;

&lt;p&gt;But if you're using an expensive hosting provider or a platform as a service or some complex horizontally scaling setup, serverless might be the thing you're waiting for. It's easier to manage and deploy to while often costing less.&lt;/p&gt;

&lt;p&gt;And that's something to be excited about.&lt;/p&gt;

</description>
      <category>php</category>
      <category>serverless</category>
    </item>
    <item>
      <title>💡 Quick Tips: Make your DEV.TO home feed better with "Anti-follow" Tag Weightings </title>
      <author>InHuOfficial</author>
      <pubDate>Thu, 24 Jun 2021 17:45:43 +0000</pubDate>
      <link>https://dev.to/inhuofficial/quick-tips-make-your-dev-to-home-feed-better-with-anti-follow-weightings-3kpi</link>
      <guid>https://dev.to/inhuofficial/quick-tips-make-your-dev-to-home-feed-better-with-anti-follow-weightings-3kpi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;In a rush? This article two sentences: Set a higher value on your tags weighting so they appear higher up your home feed. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add a negative value&lt;/strong&gt; to a tag weighting to suppress that tag and make it appear lower down your home feed. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;Maybe you are new to dev.to, maybe you have been here a while, but one thing is for sure you will probably spend most of your time looking at your home feed for new and interesting articles to read.&lt;/p&gt;

&lt;p&gt;But do you find yourself getting loads of random things that aren't relevant to your interests on your dev.to feed? We can fix this with tag weightings and in-particular "anti-follow" weightings. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tag-weightings"&gt;
  &lt;/a&gt;
  Tag weightings
&lt;/h2&gt;

&lt;p&gt;If you are on a PC viewing dev.to you will see the main navigation on the left.&lt;/p&gt;

&lt;p&gt;Below that are the tags you follow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iuT7Z1L5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eovv0weiy7az4aqfxgxy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iuT7Z1L5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eovv0weiy7az4aqfxgxy.jpg" alt="My Tags section located below main navigation on dev.to"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will notice next to the title "My Tags" there is an icon that looks a little bit like a nut (as in nut and bolt).&lt;/p&gt;

&lt;p&gt;Clicking on that will take you to the "Following Tags" page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adjusting-your-weightings"&gt;
  &lt;/a&gt;
  Adjusting your weightings
&lt;/h2&gt;

&lt;p&gt;Now this is really straight forward. &lt;/p&gt;

&lt;p&gt;If you want a particular subject to appear more often in your feed just increase the number in the input under that tag.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Co4LjFF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6rmo52v5bm0n1vh44zi2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Co4LjFF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6rmo52v5bm0n1vh44zi2.jpg" alt="location of the weightings input underneath each tag you follow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Obviously if you give a tag a higher number than another tag it has a higher priority. &lt;/p&gt;

&lt;p&gt;I am sure you are already aware of this, but there is something most people aren't aware of.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#antifollow"&gt;
  &lt;/a&gt;
  Anti-follow
&lt;/h2&gt;

&lt;p&gt;Yet again really straight forward but maybe not immediately obvious.&lt;/p&gt;

&lt;p&gt;Lets say you are like me and want to have accessibility (a11y) have a high priority. But you have been in the accessibility game for years so the last thing you need are a load of "beginner" posts cluttering up your feed and telling you the same information you have seen before.&lt;/p&gt;

&lt;p&gt;You can set an "anti-follow" on the "beginner" tag in this instance. That way anything with the "beginner" tag will get less priority in your feed.&lt;/p&gt;

&lt;p&gt;To set this all you need to do is set a &lt;strong&gt;negative&lt;/strong&gt; number of the weighting for a tag.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;So although it seems a little counter intuitive you first head to the &lt;a href="https://dev.to/tags"&gt;tags page&lt;/a&gt; and follow a tag you want to suppress ("beginner")&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gFparxXD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rbnjwwd72swisdch37a0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gFparxXD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rbnjwwd72swisdch37a0.jpg" alt="top tags page - followed the beginner tag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;Now just head to &lt;a href="https://dev.to/dashboard/following"&gt;your followed tags&lt;/a&gt; via the URL or using the nut icon discussed earlier.&lt;/p&gt;

&lt;p&gt;Locate your newly followed tag (which will have a weighting of 1 initially) and then simply set a negative number.&lt;/p&gt;

&lt;p&gt;Finally click "Update Weights" button below all of your tags.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CMH89kG8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnbw5fjgnr62u573003r.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CMH89kG8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnbw5fjgnr62u573003r.jpg" alt="Beginners tag set to minus one and location of update weights button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#all-done"&gt;
  &lt;/a&gt;
  All Done!
&lt;/h3&gt;

&lt;p&gt;Once you press "Update Weights" you will see the page reload and the tag(s) you gave a negative value to will now have the "anti-follow" badge attached.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DmlGwStd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18wte0rc645xpnbdxnm6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DmlGwStd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18wte0rc645xpnbdxnm6.jpg" alt='beginner tag now with an "anti follow" badge next to it'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now go back to your home page and notice that items you aren't interested in are lower down your feed!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Just a super simple trick to help you get the articles you want to see in your feed (or more accurately supress topics you don't want to see).&lt;/p&gt;

&lt;p&gt;Using tag weightings and "anti-follow" weightings for tags on dev.to helps make your home feed even better, start using them today!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/intent/tweet?url=https://dev.to/inhuofficial/quick-tips-make-your-dev-to-home-feed-better-with-anti-follow-and-weightings-4g0k-temp-slug-5798594&amp;amp;text=%22Using%20tag%20weightings%20and%20%22anti-follow%22%20weightings%20for%20tags%20on%20dev.to%20helps%20make%20your%20home%20feed%20even%20better,%20start%20using%20them%20today!%22%20-%20@InHuOfficial%20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9MNncMyb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2tpr2x1d2r8tto04nlz.jpg" alt='Click to Tweet: "Using tag weightings and "anti-follow" weightings for tags on dev.to helps make your home feed even better, start using them today!"'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let me know if you find this useful or if you already knew this and have managed to fine tune your home feed to perfection!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Tailwind CSS User? Read this!</title>
      <author>Saad Irfan</author>
      <pubDate>Thu, 24 Jun 2021 17:30:00 +0000</pubDate>
      <link>https://dev.to/msaaddev/tailwind-css-user-read-this-488n</link>
      <guid>https://dev.to/msaaddev/tailwind-css-user-read-this-488n</guid>
      <description>&lt;p&gt;So, if you are like me, a frontend developer who loves to work with Tailwind CSS, then this article may just save you a minute or two in the future. You see folks when I started my journey with Tailwind, I went to the place where all the secrets lie when it comes to any framework or library. And yeah! you guessed it right. The holy documentation. 👨🏻‍💻&lt;/p&gt;

&lt;p&gt;I opened the Next.js Tailwind set up guide and found out that that there are a bunch of steps that I needed to perform in order to get started with this beauty. And just like you, I did all the steps and voila! I had Tailwind integrated with my project.&lt;/p&gt;

&lt;p&gt;After this, I started reading documentation and found out that the setting up process of Tailwind varies from framework to framework. So now, if you want to use Tailwind with your React.js project after using it with Next.js, the same set up steps won't do the trick.&lt;/p&gt;

&lt;p&gt;Turns out I really hate when I have to spend an extra minute or two to get started with something. So like any other developer, I used my magic prowess to automate the crap out of it. And voila! Here comes the era of &lt;a href="https://github.com/msaaddev/new-tailwind-app"&gt;new-tailwind-app&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-newtailwindapp"&gt;
  &lt;/a&gt;
  ⚡️ new-tailwind-app
&lt;/h2&gt;

&lt;p&gt;So, &lt;a href="https://github.com/msaaddev/new-tailwind-app"&gt;new-tailwind-app&lt;/a&gt; is a zero-configuration cross-platform tool that can integrate Tailwind with six different kinds of web frameworks using a single command. Yeah! I know. Magic, right?!&lt;/p&gt;

&lt;p&gt;All you need to do is have Node installed in your computer and from there I got you covered. Just run the following in your terminal, and you are good to go:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx new-tailwind-app@latest 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see all the supported frameworks by typing the following command in the terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# see all the features you get with the CLI&lt;/span&gt;
npx new-tailwind-app@latest &lt;span class="nt"&gt;--help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://github.com/msaaddev/new-tailwind-app"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kp9Kk_1l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/inm56vhnxzjm4m9539rn.png" alt="help"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's a wrap, folks! If you find this tool useful, don't forget to star it. Now go ahead and utilise the power of open-source to do good and save yourself some time. &lt;/p&gt;

&lt;p&gt;Cheerios 🤞🏻&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Front End Testing Types And Tools</title>
      <author>AmiraArafa</author>
      <pubDate>Thu, 24 Jun 2021 17:27:40 +0000</pubDate>
      <link>https://dev.to/amiraarafa/front-end-testing-types-and-tools-4a0l</link>
      <guid>https://dev.to/amiraarafa/front-end-testing-types-and-tools-4a0l</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-front-end-testing"&gt;
  &lt;/a&gt;
  What is Front End Testing?
&lt;/h3&gt;

&lt;p&gt;Front End Testing is a testing technique in which Graphical User Interface (GUI), functionality and usability of web applications or a software are tested. The goal of Front end testing is testing overall functionalities to ensure the presentation layer of web applications or a software is defect free with successive updates.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-front-end-testing-is-needed"&gt;
  &lt;/a&gt;
  Why Front End Testing Is Needed
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Detecting Client-Side Performance Issues.&lt;/li&gt;
&lt;li&gt;Validating Application Behavior on Different Browsers and Systems.&lt;/li&gt;
&lt;li&gt;Improving Quality of User Interaction and Experience.&lt;/li&gt;
&lt;li&gt;Detect changing in features which depends on each other.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#types-of-front-end-testing"&gt;
  &lt;/a&gt;
  Types Of Front End Testing
&lt;/h3&gt;

&lt;p&gt;Essentially, testing Front-End testing can be divided into 3 categories:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JzKnIGdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0x3b1ftucnpi75xamsr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JzKnIGdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0x3b1ftucnpi75xamsr.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-e2e-testing"&gt;
  &lt;/a&gt;
  1) E2E Testing
&lt;/h3&gt;

&lt;p&gt;E2E Testing or end-to-end testing, is the practice of testing if the execution of an application is performing as designed from start to finish. The entire application is tested in real-world scenarios, which includes testing the communication between components such as the database, network, APIs etc. and executing your code in a diversity of browsers. Basically testing everything. It takes a lot of time to set up and costs the most.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-integration-testing"&gt;
  &lt;/a&gt;
  2) Integration Testing
&lt;/h3&gt;

&lt;p&gt;Integration Testing consists of testing the interaction between elements of your application, for example, communication between your UI and an API. It takes a shorter amount of time to set up, and isn't too expensive.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-unit-testing"&gt;
  &lt;/a&gt;
  3) Unit Testing
&lt;/h3&gt;

&lt;p&gt;Unit Testing is different as it consists of testing isolated parts of the code, as units. These units usually take the form of methods, properties, UI element actions etc. It is the fastest and cheapest to implement.&lt;/p&gt;

&lt;p&gt;You've probably noted that the higher you go in our pyramid, the more time and money it takes to set up our tests. That's why a lot of projects tend to focus on unit tests as they can help you know if your code truly works by covering most scenarios, save time, and simplify deployment processes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#recommended-testing-tools"&gt;
  &lt;/a&gt;
  Recommended Testing Tools
&lt;/h3&gt;

&lt;p&gt;There are many types of testing tools , We can refer to two of most important types of testing in React.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-jest"&gt;
  &lt;/a&gt;
  1) Jest
&lt;/h3&gt;

&lt;p&gt;Jest is a JavaScript test runner that lets you access the DOM via jsdom. While jsdom is only an approximation of how the browser works, it is often good enough for testing React components. Jest provides a great iteration speed combined with powerful features like mocking modules and timers so you can have more control over how the code executes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-react-testing-library"&gt;
  &lt;/a&gt;
  2) React Testing Library
&lt;/h3&gt;

&lt;p&gt;React Testing Library is a set of helpers that let you test React components without relying on their implementation details. This approach makes refactoring a breeze and also nudges you towards best practices for accessibility. Although it doesn’t provide a way to “shallowly” render a component without its children.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-create-a-frontend-website-testing-plan"&gt;
  &lt;/a&gt;
  How To Create A Frontend Website Testing Plan?
&lt;/h3&gt;

&lt;p&gt;Creating Frontend testing plan is a simple 4 step process.&lt;/p&gt;

&lt;p&gt;Step 1) Find out tools for Managing Your Test Plan.&lt;/p&gt;

&lt;p&gt;Step 2) Decide the budget for Front End Testing.&lt;/p&gt;

&lt;p&gt;Step 3) Set the timeline for the entire process.&lt;/p&gt;

&lt;p&gt;Step 4) Decide the entire scope of the project. The scope includes the following items.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OS and browsers used by users ISP plans of your audience.&lt;/li&gt;
&lt;li&gt;Popular devices used by audience.&lt;/li&gt;
&lt;li&gt;Proficiency of your audience.&lt;/li&gt;
&lt;li&gt;Internet correction speed of the audience.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/testing.html"&gt;https://reactjs.org/docs/testing.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.guru99.com/frontend-testing.html#1"&gt;https://www.guru99.com/frontend-testing.html#1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/christopherkade/introduction-to-front-end-unit-testing-510n"&gt;https://dev.to/christopherkade/introduction-to-front-end-unit-testing-510n&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.testim.io/blog/front-end-testing-complete-overview/"&gt;https://www.testim.io/blog/front-end-testing-complete-overview/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.perfecto.io/blog/comprehensive-guide-front-end-testing#frontendtestingchallenges"&gt;https://www.perfecto.io/blog/comprehensive-guide-front-end-testing#frontendtestingchallenges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>testing</category>
      <category>react</category>
      <category>test</category>
      <category>testdev</category>
    </item>
    <item>
      <title>Getting Started with NodeJS</title>
      <author>Christopher Glikpo</author>
      <pubDate>Thu, 24 Jun 2021 17:25:29 +0000</pubDate>
      <link>https://dev.to/cglikpo/getting-started-with-nodejs-130h</link>
      <guid>https://dev.to/cglikpo/getting-started-with-nodejs-130h</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this article, I am going to introduce NodeJS with Node Package Module (NPM), step-by-step basic implementation and explanation.&lt;/p&gt;

&lt;p&gt;This article covers the following areas of NodeJS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Introduction of NodeJS&lt;/li&gt;
&lt;li&gt;Installation of NodeJS and NPM&lt;/li&gt;
&lt;li&gt;Node Package Module (NPM)&lt;/li&gt;
&lt;li&gt;Package.json&lt;/li&gt;
&lt;li&gt;Basic Example&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#nodejs"&gt;
  &lt;/a&gt;
  NodeJS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://nodejs.org/en/"&gt;NodeJS&lt;/a&gt; is an open-source, cross-platform runtime environment for developing server-side web applications. NodeJS also has an event-driven architecture capable of &lt;a href="https://en.wikipedia.org/wiki/Asynchronous_I/O"&gt;asynchronous I/O&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;NodeJS uses an event-driven, non-blocking I/O model that makes it lightweight and efficient&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation-of-nodejs-and-npm"&gt;
  &lt;/a&gt;
  Installation of NodeJS and NPM
&lt;/h2&gt;

&lt;p&gt;Installation of NodeJS and NPM is straightforward using the installer package available at NodeJS official web site.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download the installer from &lt;a href="https://nodejs.org/en/"&gt;NodeJS WebSite.&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Run the installer.&lt;/li&gt;
&lt;li&gt;Follow the installer steps, agree the license agreement and click the next button.&lt;/li&gt;
&lt;li&gt;Restart your system/machine.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, test NodeJS by printing its version using the following command in Command Prompt:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; 1. &amp;gt; node -v
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and test npm by printing its version using command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; 1. &amp;gt; npm -v
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Simple way to test nodeJS work in your system is to create a javascript file which print a message.&lt;/p&gt;

&lt;p&gt;Lets create app.js file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/* app.js file */
console.log("Node is working");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the app.js file using Node command &amp;gt; node app.js in command prompt.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; E:\&amp;gt; node -v
 v14.16.0
 E:\&amp;gt; npm -v
 v6.14.11
 E:\&amp;gt; node app.js
 Node is working
 E:\&amp;gt; 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You are done with installation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#node-package-module"&gt;
  &lt;/a&gt;
  Node Package Module
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/"&gt;NPM&lt;/a&gt; is the package module which helps javascript developers load dependencies effectively. To load dependencies we just have to run a command in command prompt:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1 &amp;gt; npm install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command is finding a json file named as &lt;code&gt;package.json&lt;/code&gt; in root directory to install all dependencies defined in the file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#packagejson"&gt;
  &lt;/a&gt;
  Package.json
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json"&gt;Package.json&lt;/a&gt; looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "name": "ApplicationName",
  "version": "0.0.1",
  "description": "Application Description",
  "main": "app.js",
  "scripts": {
    "start": "node app.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/npm/npm.git"
  },
  "dependencies": {
    "express": "~3.0.1",
    "sequelize": "latest",
    "q": "latest",
    "tedious": "latest",
    "angular": "latest",
    "angular-ui-router": "~0.2.11",
    "path": "latest",
    "dat-gui": "latest"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The most important things in your package.json are name and version. Those are actually required, and your package won't install without them. The name and version together form an identifier that is assumed to be completely unique. Changes to the package should come along with changes to the version.&lt;/p&gt;

&lt;p&gt;Repository&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "repository": {
    "type": "git",
    "url": "https://github.com/npm/npm.git"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Specify the place where your code lives. Through this repository, developers can reach out and contribute to your application. If the git repository is not GitHub, then the &lt;code&gt;npm docs&lt;/code&gt; command will be able to find you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scripts"&gt;
  &lt;/a&gt;
  Scripts
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
 "scripts": {
    "start": "node app.js"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;NPM provide many useful &lt;a href="https://docs.npmjs.com/cli/v7/using-npm/scripts"&gt;Scripts&lt;/a&gt; like &lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;npm start&lt;/code&gt;, &lt;code&gt;npm stop&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;Some default script values are based on package contents.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1 "start": "node server.js"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If there is a app.js file in the root of your package, then npm will default the start command to node app.js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dependencies"&gt;
  &lt;/a&gt;
  Dependencies
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
"dependencies": {
    "express": "~3.0.1",
    "sequelize":"latest",
    "q":"latest",
    "tedious":"latest",
    "angular":"latest",
    "angular-ui-router": "~0.2.11",
    "path":"latest",
    "dat-gui":"latest"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json#dependencies"&gt;Dependencies&lt;/a&gt; are specified in a simple object that maps a package name to a version range. Version Name must be Version exactly.&lt;/p&gt;

&lt;p&gt;If you want to install the &lt;code&gt;latest&lt;/code&gt; version of a file, you just have to put latest in place of the version name.&lt;/p&gt;

&lt;p&gt;Tilde(~) is used to tell "Approximately equivalent to version".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-example"&gt;
  &lt;/a&gt;
  Basic Example
&lt;/h2&gt;

&lt;p&gt;Create a app.js javascript file with following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/*app.js*/

const http = require('http');

const hostname = '127.0.0.1';
const port = 3000;

const server = http.createServer(function(req, res) {
  res.statusCode = 200;
  res.setHeader('Content-Type', 'text/plain');
  res.end('Hello World\n');
});

server.listen(port, hostname, function() {
  console.log('Server running at http://'+ hostname + ':' + port + '/');
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we need &lt;code&gt;http&lt;/code&gt; to create an http server we use &lt;code&gt;require('http')&lt;/code&gt; and pass it to a variable named &lt;code&gt;http&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1 var http = require('http');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to defined hostname and port number, here we use &lt;code&gt;localHost&lt;/code&gt; i.e &lt;code&gt;127.0.0.1&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; number &lt;code&gt;3000&lt;/code&gt; and assign this to the variables &lt;code&gt;hostname&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt;, respectively.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var hostname = '127.0.0.1';
var port = 3000;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we create the http server using the &lt;code&gt;createServer&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var server = http.createServer(function(req, res){
    res.statusCode = 200;
    res.setHeader('Content-Type', 'text/plain');
    res.end('Hello World\n');
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This created the server as well as a response having &lt;code&gt;statusCode: 200&lt;/code&gt;, &lt;code&gt;Content-Type&lt;/code&gt; header of plain text and and ends with the string &lt;code&gt;Hello World&lt;/code&gt;. This is the response that the server can send to browser.&lt;/p&gt;

&lt;p&gt;the function has two parameters &lt;code&gt;req&lt;/code&gt; and &lt;code&gt;res&lt;/code&gt; which is the &lt;code&gt;request&lt;/code&gt; from and &lt;code&gt;response&lt;/code&gt; to the server, respectively.&lt;/p&gt;

&lt;p&gt;In our example we are creating responses.&lt;/p&gt;

&lt;p&gt;We created the server, now we have to assign it a hostname and port number.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;server.listen(port, hostname, function() {
  console.log('Server running at http://'+ hostname + ':' + port + '/');
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the server listens to localhost on port 3000 and prints "Server running at &lt;a href="http://127.0.0.1:3000/"&gt;http://127.0.0.1:3000/&lt;/a&gt;" in command prompt.&lt;/p&gt;

&lt;p&gt;Now Run app.js file un node using command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open a browser and enter url &lt;a href="http://127.0.0.1:3000/"&gt;http://127.0.0.1:3000/&lt;/a&gt;. The browser will display Hello World message on the screen.&lt;/p&gt;

&lt;p&gt;Now Run server.js file un node using command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;E:\ &amp;gt;node app.js
Server running at http://127.0.0.1:3000/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WCOIBPuT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0xe7esph7qqe7d3g7jnv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WCOIBPuT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0xe7esph7qqe7d3g7jnv.png" alt="Browser"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you guys for reading my posts.If you  want to learn more about Web Development, feel free to &lt;a href="https://www.youtube.com/c/ChristopherGlikpo/featured"&gt;follow me on Youtube!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>HTML Tags: the main tags to create your HTML page</title>
      <author>Marcio</author>
      <pubDate>Thu, 24 Jun 2021 16:39:29 +0000</pubDate>
      <link>https://dev.to/marcio75586864/html-tags-the-main-tags-to-create-your-html-page-4o74</link>
      <guid>https://dev.to/marcio75586864/html-tags-the-main-tags-to-create-your-html-page-4o74</guid>
      <description>&lt;p&gt;In this article, we'll look at some of the most important tags that HTML uses in its structure. For a start it is important to understand that HTML is a hypertext markup language, and its main function is to mark and define the structure of a web page. Learn more about HTML in this article. For this tutorial, we will use HTML5, the latest version of HTML, as the basis.&lt;/p&gt;

&lt;p&gt;Therefore, in this article you will find:&lt;/p&gt;

&lt;p&gt;What are HTML tags?&lt;br&gt;
Basic structure of an HTML document&lt;br&gt;
HTML Comment Tags&lt;br&gt;
Structural HTML Tags&lt;br&gt;
A content HTML tags&lt;br&gt;
Style and Script Tags&lt;br&gt;
Create your page in HTML&lt;br&gt;
O que são tags HTML?&lt;/p&gt;

&lt;h2&gt;What are HTML tags?&lt;/h2&gt;

&lt;p&gt;Tags are used to inform the browser of the structure of the website. In other words: when writing code in HTML, the tags will be interpreted by the browser, thus producing the structure and visual content of the page.&lt;/p&gt;

&lt;p&gt;The main characteristic of the tags is that they are always inside the chevron signs ("greater than" and "less than" sign), ie: &amp;lt; &amp;gt;.&lt;/p&gt;

&lt;p&gt;HTML tags are divided into two types: those that need closing and those that don't. Tags that need closing have the syntax  , whereas those that do not need closing have a  structure.&lt;/p&gt;

&lt;p&gt;Furthermore, the same tag can receive one or more attributes, which will have a value that modifies its structure or functionality.&lt;/p&gt;

&lt;h3&gt;attributes&lt;/h3&gt;

&lt;p&gt;Attributes are used to customize tags, modifying their structure or functionality. Likewise, attributes are used to assign a class or id to an element.&lt;/p&gt;

&lt;p&gt;Most tags have their own attributes. However, there are some generic attributes that can be used in most HTML tags, let's study them:&lt;/p&gt;

&lt;p&gt;class=”…“ – Assigns a class to the element (a class can be used for one or more elements);&lt;br&gt;
id=”…“ – Assigns an id to the element (an id must be unique, ie assigned to a single element);&lt;br&gt;
style=”…” – Allows you to include CSS elements (styles) inside the tag;&lt;br&gt;
lang=”…” – Defines the main language of the element;&lt;br&gt;
title=”…” – Defines the title of the element;&lt;br&gt;
alt=”…” – Defines an alternative text and, therefore, is often used in images, it helps in SEO practices;&lt;br&gt;
hidden – Hides the element;&lt;br&gt;
align=”…” – Allows you to define the alignment pattern of this element, such as: right, center, left and justify;&lt;br&gt;
width=”…” – Defines a width for the element;&lt;br&gt;
height=”…” – Defines a height for the element.&lt;br&gt;
These are the main attributes, but there are several others that should be studied and can be used in your code.&lt;/p&gt;

&lt;h2&gt;Basic structure of an HTML document&lt;/h2&gt;

&lt;p&gt;An HTML document receives some tags that form its basic structure. In HTML5, the default document receives the following structure:&lt;/p&gt;

&lt;p&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;br&gt;
&lt;br&gt;
&lt;/p&gt;
&lt;br&gt;
    Page Title&lt;br&gt;
    &lt;br&gt;
&lt;br&gt;


&lt;p&gt;&lt;br&gt;
&lt;br&gt;
First, let's now understand what each of these tags is for:&lt;/p&gt;

&lt;p&gt;&amp;lt;!DOCTYPE html&amp;gt; – The !DOCTYPE tag tells the browser the version of HTML being used in the document. For example: in HTML5, just include !DOCTYPE html, and then the browser will already know that it is a document in the HTML5 version;&lt;br&gt;
 – This tag is the basic element of the HTML structure. As such, it will contain all the elements of your document. Every HTML document must start and end with this tag;&lt;br&gt;
&lt;/p&gt; – This tag delimits the header of the document. It does not have any visible value, but it is capable of transmitting to the browser several very useful and essential information for a good presentation of your HTML document;&lt;br&gt;
 – This tag defines the title of your page, the name that will appear in your tab, window or tab. For this reason, the &amp;gt;title&amp;gt; tag is of great importance for SEO;&lt;br&gt;
 – This tag allows inserting metadata to your document, in the case above, the information charset=”UTF-8″, which guarantees the code's compatibility with the Latin American standard characters;&lt;br&gt;
 – Finally, the tag that represents the body of the document. In summary, it is in this tag that all visible elements of your website must be inserted.&lt;br&gt;
Now that we know the HTML tags that form the basic structure of a page, we can now study the various tags that will include the document.

&lt;h2&gt;HTML Comment Tags&lt;/h2&gt;

&lt;p&gt;Within a document, we often need to make comments, to facilitate development. With this, the code is more organized and we can leave important notes for possible changes, or just to guide the code. This way, in the comments tag (which is opened with &amp;lt;!– and closed with –&amp;gt; ), all elements included within it will be just comments, that is, they will not be visible in the browser.&lt;/p&gt;

&lt;p&gt;ex:&lt;/p&gt;


&lt;p&gt;Hello World&lt;/p&gt; &amp;lt;!-- here is my paragraph--&amp;gt;&lt;br&gt;
As a final result in the browser, we will have:

&lt;p&gt;Hello World&lt;/p&gt;

&lt;p&gt;Note that all content in the comment tags will not appear, being restricted only to those reading your HTML code. Practice using comments in your code, this is a good practice and highly recommended within the development world.&lt;/p&gt;

&lt;h2&gt;Structural HTML Tags&lt;/h2&gt;

&lt;p&gt;The tags below are used in HTML5 documents, and have a structural function in your code. Therefore, these tags are of great importance in the semantic issue of your page, knowing how to use them can adapt your code for a better visualization by the browser and the user, in addition to providing an optimization for the SEO processes.&lt;/p&gt;

&lt;p&gt; – These tags define a header. Therefore, all content that is inside it is part of a header, which can be&lt;/p&gt;

</description>
      <category>beginners</category>
    </item>
    <item>
      <title>13+ Free Development Certification to get in 2021</title>
      <author>programmer-list</author>
      <pubDate>Thu, 24 Jun 2021 16:35:08 +0000</pubDate>
      <link>https://dev.to/programmerlist/13-free-development-certification-to-get-in-2021-23j9</link>
      <guid>https://dev.to/programmerlist/13-free-development-certification-to-get-in-2021-23j9</guid>
      <description>&lt;p&gt;Certification Course helps a person to grandstand his capability, responsibility for the calling, construct aptitude in his expert branch of knowledge, and assists with work progression. It's anything but an assignment procured by an individual giving a sort of confirmation to the organization of his abilities of playing out a task.&lt;/p&gt;

&lt;p&gt;So here in this post I am bringing 19 free certification you can earn in 2021.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/learn/"&gt;Responsive webdesign Certification - FreeCodeCamp&lt;/a&gt; : HTML, CSS, Applied Visual Design, Accessibility, WebDesign Principles, Projects&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/learn/front-end-libraries"&gt;Front End Development Libraries Certification - FreeCodeCamp&lt;/a&gt; :  Bootstrap, jQuery, SASS, React, Redux, React and Redux, Projects. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.hackerrank.com/skills-verification/react_basic"&gt;React Basics Certification - Hackerrank&lt;/a&gt; : Prove your skills and get certified by Hackerrank&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/learn/apis-and-microservices/"&gt;APIs and MicroServices&lt;/a&gt; : NPM, Node and Express, MongoDB and Mongoose, projects. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/"&gt;JS Data Structures adn Algorithms&lt;/a&gt; : Basics JS, ES6, RegEx, Debugging, Basic DS, Basic Alogorithm Scripting, OOP, Functional Programming, Intermediate Alogorithm Scripting, Projects. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/"&gt;Scientific Computing with Python&lt;/a&gt; : Python for everybody and Projects. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/"&gt;Data Analysis with Python&lt;/a&gt; : Data Analysis with Python, NumPY, Projects. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/"&gt;Machine Learning with Python&lt;/a&gt; : Tensorflow, Neural Network, ML Projects. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/learn/data-visualization/"&gt;Data Visualization&lt;/a&gt; : D3, JSON APIs, DataVisualization Projects. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.hackerrank.com/skills-verification/javascript_basic"&gt;JavaScript certification - Hackerrank&lt;/a&gt; : Prove your skills and get certified by Hackerrank&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cognitiveclass.ai/courses/deep-learning-tensorflow"&gt;DeepLearning&lt;/a&gt; : Deep Learning Fundamentals&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.elementsofai.com/"&gt;Introduction to AI and Building AI&lt;/a&gt; : Free course to build and understand AI&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.hackerrank.com/skills-verification/rest_api_intermediate"&gt;REST API Skills certification&lt;/a&gt; : Prove your skills and get certified by Hackerrank&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://university.mongodb.com/courses/M220P/about"&gt;MongoDB for Python Developers&lt;/a&gt; : Learn the essentials of Python application development with MongoDB&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cognitiveclass.ai/learn/containers-k8s-and-istio-on-ibm-cloud"&gt;Containers, microservices, Kubernetes, and Istio on the Cloud&lt;/a&gt; : Learn DevOPS&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://university.mongodb.com/courses/M001/about"&gt;MongoDB Basics&lt;/a&gt; : Learn the fundamentals of MongoDB&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://university.mongodb.com/courses/M100/about"&gt;MongoDB for SQL pros&lt;/a&gt; : Learn how to map your relational databases knowledge to MongoDB&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cognitiveclass.ai/courses/ibm-blockchain-foundation-dev"&gt;IBM Blockchain Foundation Developer&lt;/a&gt; : Developers who have basic experience with blockchain business networks&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Abiove were some free certification you can earn in 2021 for free. Alternatively I will ask you to visit the below websites to see a range of free certification in mane other fields too. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/"&gt;Hackerrank&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cognitiveclass.ai/"&gt;IBM and CognitiveAI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freecodecamp.org"&gt;FreeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://university.mongodb.com/"&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Thanks for Reading&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>python</category>
      <category>machinelearning</category>
      <category>programming</category>
    </item>
    <item>
      <title>Instrumenting Your Node.js Apps with OpenTelemetry</title>
      <author>Daniel Kim</author>
      <pubDate>Thu, 24 Jun 2021 16:21:26 +0000</pubDate>
      <link>https://dev.to/newrelic/instrumenting-your-node-js-apps-with-opentelemetry-5flb</link>
      <guid>https://dev.to/newrelic/instrumenting-your-node-js-apps-with-opentelemetry-5flb</guid>
      <description>&lt;p&gt;As systems become increasingly complex, it’s increasingly important to get visibility into the inner workings of systems to increase performance and reliability. Distributed tracing shows how each request passes through the application, giving developers context to resolve incidents, showing what parts of their system are slow or broken. &lt;/p&gt;

&lt;p&gt;A single trace shows the path a request makes, from the browser or mobile device down to the database. By looking at traces as a whole, developers can quickly discover which parts of their application is having the biggest impact on performance as it affects your users’ experiences.&lt;/p&gt;

&lt;p&gt;That’s pretty abstract, right? So let’s zero in on a specific example to help clarify things. We’ll use OpenTelemetry to generate and view traces from a small sample application.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/r8UvWSX3KA8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spinning-up-our-movies-app"&gt;
  &lt;/a&gt;
  Spinning up our Movies App
&lt;/h2&gt;

&lt;p&gt;We have written a simple application consisting of two microservices, movies and dashboard. The &lt;code&gt;movies&lt;/code&gt; service provides the name of movies and their genre in JSON format, while the &lt;code&gt;dashboard&lt;/code&gt; service returns the results from the movies service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/lazyplatypus/Open-Telemetry-Demo"&gt;👉 Clone the repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To spin up the app, run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm i
$ node dashboard.js
$ node movies.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice the variable &lt;code&gt;delay&lt;/code&gt;, built into the movies microservice that causes random delays returning the JSON.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;const express = require('express')
const app = express()
const port = 3000
&lt;/span&gt;
app.get('/movies', async function (req, res) {
   res.type('json')
&lt;span class="gi"&gt;+  var delay = Math.floor( ( Math.random() * 2000 ) + 100);
+  setTimeout((() =&amp;gt; {
&lt;/span&gt;      res.send(({movies: [
         { name: 'Jaws', genre: 'Thriller'},
         { name: 'Annie', genre: 'Family'},
         { name: 'Jurassic Park', genre: 'Action'},
      ]}))
&lt;span class="gi"&gt;+  }), delay)
&lt;/span&gt;&lt;span class="err"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#tracing-http-requests-with-open-telemetry"&gt;
  &lt;/a&gt;
  Tracing HTTP Requests with Open Telemetry
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry traces incoming and outgoing HTTP requests by attaching IDs. To do this, we need to &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Instantiate a trace provider&lt;/strong&gt; to get data flowing. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Configure that trace provider with an exporter&lt;/strong&gt; to send telemetry data to another system where you can view, store, and analyze it.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Install OpenTelemetry plugins&lt;/strong&gt; to instrument specific node module(s) to automatically instrument various frameworks&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-1-create-our-trace-provider-and-configuring-it-with-an-exporter"&gt;
  &lt;/a&gt;
  Step 1: Create our trace provider and configuring it with an exporter
&lt;/h3&gt;

&lt;p&gt;We’ll start by creating our trace provider and configuring it with an exporter. To do this, we’ll need to install&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm install @opentelemetry/node
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#opentelemetry-auto-instrumentation-package-for-nodejs"&gt;
  &lt;/a&gt;
  OpenTelemetry auto instrumentation package for NodeJS
&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;@opentelemetry/node&lt;/code&gt; module provides auto-instrumentation for Node.js applications, which automatically identifies frameworks (Express), common protocols (HTTP), databases, and other libraries within your application. This module uses other community-contributed plugins to automatically instrument your application to automatically produce spans and provide end-to-end tracing with just a few lines of code.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#opentelemetry-plugins"&gt;
  &lt;/a&gt;
  OpenTelemetry Plugins
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm install @opentelemetry/plugin-http
$ npm install @opentelemetry/plugin-express
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;@opentelemetry/plugin-http&lt;/code&gt; plugin generates trace data from NodeJS’s underlying HTTP handling APIs that both send, and handle requests. The &lt;code&gt;@opentelemetry/plugin-express&lt;/code&gt; plugin generates trace data from requests sent through the express framework. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-adding-the-trace-provider-and-the-span-processor"&gt;
  &lt;/a&gt;
  Step 2: Adding the Trace Provider and the Span Processor
&lt;/h3&gt;

&lt;p&gt;Add this code snippet to &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create a trace provider&lt;/li&gt;
&lt;li&gt;adds a span processor to the trace provider&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This code gets data out of your local application and exports into your console!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NodeTracerProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@opentelemetry/node&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ConsoleSpanExporter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SimpleSpanProcessor&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@opentelemetry/tracing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;NodeTracerProvider&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;consoleExporter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ConsoleSpanExporter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;spanProcessor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SimpleSpanProcessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;consoleExporter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addSpanProcessor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;spanProcessor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we add this code snippet, whenever we reload &lt;code&gt;http://localhost:3001/dashboard&lt;/code&gt;, we should get something like this - beautiful things on the console. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VfuBUj0X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fklulsur2tviyd32wlnf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VfuBUj0X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fklulsur2tviyd32wlnf.gif" alt="giphy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3a-spinning-up-zipkin"&gt;
  &lt;/a&gt;
  Step 3a: Spinning up Zipkin
&lt;/h3&gt;

&lt;p&gt;Let's spin up a Zipkin instance with the &lt;a href="https://hub.docker.com/r/openzipkin/zipkin/"&gt;Docker Hub Image&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker run -d -p 9411:9411 openzipkin/zipkin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and you’ll have a Zipkin instance up and running. You’ll be able to load it by pointing your web browser to &lt;a href="http://localhost:9411"&gt;http://localhost:9411&lt;/a&gt;. You’ll see something like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k-w60WYa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xs7db7lo5gck3i2ty12e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k-w60WYa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xs7db7lo5gck3i2ty12e.png" alt="Screenshot of Zipkin"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-exporting-to-zipkin"&gt;
  &lt;/a&gt;
  Step 3: Exporting to Zipkin
&lt;/h3&gt;

&lt;p&gt;While it’s neat, spans in a terminal window are a poor way to have visibility into a service. In our code above, the following lines are what added a console exporter to our system. Let's now ship this data to Zipkin. &lt;/p&gt;

&lt;p&gt;In this code snippet, we are instantiating a Zipkin exporter, and then adding it to the trace provider. The great thing about OpenTelemetry is that it's backend agnostic, meaning you can have as many different exporters configured as you like,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;const { NodeTracerProvider } = require('@opentelemetry/node')
const { ConsoleSpanExporter, SimpleSpanProcessor } = require('@opentelemetry/tracing')
&lt;/span&gt;&lt;span class="gi"&gt;+ const { ZipkinExporter } = require('@opentelemetry/exporter-zipkin')
&lt;/span&gt;&lt;span class="p"&gt;const provider = new NodeTracerProvider()
const consoleExporter = new ConsoleSpanExporter()
const spanProcessor = new SimpleSpanProcessor(consoleExporter)
provider.addSpanProcessor(spanProcessor)
provider.register()
&lt;/span&gt;
+ const zipkinExporter = new ZipkinExporter({
&lt;span class="gi"&gt;+  url: 'http://localhost:9411/api/v2/spans',
+  serviceName: 'movies-service'
&lt;/span&gt;&lt;span class="err"&gt;})&lt;/span&gt;

&lt;span class="gi"&gt;+ const zipkinProcessor = new SimpleSpanProcessor(zipkinExporter)
+ provider.addSpanProcessor(zipkinProcessor)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After you make these changes, let's visit our Zipkin instance at localhost:9411, start our application back up and request some URLs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nlXR2uQO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/scuaqg2k6y3zwwzospt4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nlXR2uQO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/scuaqg2k6y3zwwzospt4.png" alt="Screen Shot 2021-06-23 at 3.54.32 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-using-the-opentelemetry-collector-to-export-the-data-into-new-relic"&gt;
  &lt;/a&gt;
  Step 4: Using the OpenTelemetry Collector to export the data into New Relic
&lt;/h3&gt;

&lt;p&gt;What happens if we want to send the OpenTelemetry data to another backend where you didn't have to manage all of your own telemetry data? &lt;/p&gt;

&lt;p&gt;Well, the amazing contributors to OpenTelemetry have come up with a solution to fix this!  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W5mfwoZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p2o98se1kb01bsjni2j6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W5mfwoZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p2o98se1kb01bsjni2j6.png" alt="Group 1792"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The OpenTelemetry Collector is a way for developers to receive, process and export telemetry data to multiple backends. It supports multiple open-source observability data formats like Zipkin, Jaeger, Prometheus, Fluent Bit sending it to one or more open-source or commercial back-ends. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#new-relic"&gt;
  &lt;/a&gt;
  New Relic
&lt;/h4&gt;

&lt;p&gt;New Relic is a platform for you to analyze, store, and use your telemetry data for Free, forever. &lt;a href="https://newrelic.com/signup?utm_campaign=fy20-q1-amer-obsv-video-free_code_camp-video-&amp;amp;utm_medium=video&amp;amp;utm_source=free_code_camp&amp;amp;utm_content=video&amp;amp;fiscal_year=fy20&amp;amp;quarter=q1&amp;amp;program=obsv&amp;amp;audience=none&amp;amp;creative=none&amp;amp;placement=none&amp;amp;targeting=none&amp;amp;ad_type=none&amp;amp;geo=amer"&gt;Sign up now!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BCEZEo2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/692fiew3ync926gcfuw1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BCEZEo2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/692fiew3ync926gcfuw1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#configuring-the-opentelemetry-collector-with-new-relic"&gt;
  &lt;/a&gt;
  Configuring the OpenTelemetry Collector with New Relic
&lt;/h4&gt;

&lt;p&gt;Clone the &lt;a href="https://github.com/lazyplatypus/OpenTelemetry-NR-Exporter"&gt;OpenTelemetry Collector with New Relic Exporter&lt;/a&gt; and spin up the docker container, making sure to export the New Relic API key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export NEW_RELIC_API_KEY=&amp;lt;INSERT-API-KEY-HERE&amp;gt;
docker-compose -f docker-compose.yaml up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;💡 Make sure to change the reporting URL from &lt;code&gt;http://localhost:9411/api/v2/spans&lt;/code&gt; to &lt;code&gt;http://localhost:9411/&lt;/code&gt; in both &lt;code&gt;dashboard.js&lt;/code&gt; and &lt;code&gt;movies.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;const zipkinExporter = new ZipkinExporter({
&lt;/span&gt;&lt;span class="gd"&gt;- url: 'http://localhost:9411/api/v2/spans',
&lt;/span&gt;&lt;span class="gi"&gt;+ url: 'http://localhost:9411',
&lt;/span&gt;  serviceName: 'movies-service'
&lt;span class="err"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-5-look-at-your-beautiful-data"&gt;
  &lt;/a&gt;
  Step 5: Look at your ✨ beautiful data ✨
&lt;/h1&gt;

&lt;p&gt;Navigate to the "Explorer" tab on &lt;a href="https://one.newrelic.com"&gt;New Relic One&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8IMOhPDv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/im53j8pdag4sl034us77.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8IMOhPDv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/im53j8pdag4sl034us77.png" alt="New Relic One Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you click on the service, you should be able to see some ✨beautiful✨ traces!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--csNPyIiA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fati4q1acf3pqn675yhz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--csNPyIiA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fati4q1acf3pqn675yhz.png" alt="OTel Traces"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h3&gt;

&lt;p&gt;Instrumenting your app with Open Telemetry makes it easy to figure out what is going wrong when parts of your application is slow, broken, or both. With the collector, you can forward your data anywhere, so you are never locked into a vendor. You can choose to spin up an open source backend, use a proprietary backend like New Relic, or just roll your own backend! Whatever you choose, I wish you well you in journey to instrument EVERYTHING! &lt;/p&gt;

</description>
      <category>opentelemetry</category>
      <category>observability</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
