<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Google Drive Beginners Guide: Tips and Tutorials</title>
      <author>Dome Poh</author>
      <pubDate>Fri, 21 Jan 2022 04:54:03 +0000</pubDate>
      <link>https://dev.to/domepoh/google-drive-beginners-guide-tips-and-tutorials-1j8l</link>
      <guid>https://dev.to/domepoh/google-drive-beginners-guide-tips-and-tutorials-1j8l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-google-drive"&gt;
  &lt;/a&gt;
  What is Google Drive?
&lt;/h2&gt;

&lt;p&gt;Google Drive is a popular cloud storage service that is powerful and easy to use. However, if you're new to cloud storage and haven't used competitors like Dropbox or Box, learning how to use Google Drive can be overwhelming. This guide will help make it easy. If you don't already have it on your phone, also click the download buttons below to download the app for Android or iOS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-google-drive-works"&gt;
  &lt;/a&gt;
  How Google Drive works?
&lt;/h2&gt;

&lt;p&gt;To get started with Google Drive, first the end user must create or sign in to a Google account. The end user then types &lt;a href="//drive.google.com"&gt;drive.google.com&lt;/a&gt; into his or her browser. Then, he or she clicks My Drive and sees all of his or her Drive folders. Then, the user can either upload files from his or her computer or create files in Google Drive. Alternatively, the end user can download an app to his or her device. Once the device is connected to the internet, the user can access his or her Drive from within the app. Files that the user adds to one Google Drive folder are available through the Google Drive web app or the Google Drive folder on each device.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-docs-slides-and-sheets"&gt;
  &lt;/a&gt;
  What are Docs, Slides and Sheets?
&lt;/h2&gt;

&lt;p&gt;Google Drive's suite of office applications comprises Google Docs, Google Slides and Google Sheets. The suite can be compared to Microsoft Office's word processor, presentation and spreadsheet programs. However, Google Docs lacks some features that those Microsoft Office programs have. The suite is simple, collaborative, and free. Each application enables users to create and edit documents, presentations and spreadsheets that they can store in Google Drive. Users can access the apps on the web using browsers including Google Chrome, Microsoft Internet Explorer, Edge, Mozilla Firefox, Apple Safari and Opera. There are also mobile apps for Google Android and Apple iOS. Each application also enables users to save, edit and share files in Microsoft Office formats.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-supported-files"&gt;
  &lt;/a&gt;
  Types of supported files
&lt;/h2&gt;

&lt;p&gt;As an online storage service, the primary concern for most cloud storage solutions is space, but the type of files supported may be significant to your users. Thankfully, Google Drive supports a lot of file types, including.jpg,.png,.gif, MPEG,.mov, and.avi - Learn more here.&lt;/p&gt;

&lt;p&gt;There are no file size limits on Google Drive. However, there may be limits on what can be stored depending on the type of file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documents:&lt;/strong&gt; Up to 1.02 million characters. If you convert a text document to Google Docs format, it can be up to 50 MB.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spreadsheets:&lt;/strong&gt; Up to five million cells for spreadsheets that are created in or converted to Google Sheets.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Presentations:&lt;/strong&gt; Up to 100MB for presentations converted to Google Slides.&lt;/p&gt;

&lt;p&gt;All other files: Up to 5TB.&lt;/p&gt;

&lt;p&gt;This is all we have to get started using Google Drive. Follow this &lt;a href="https://gdrivetips.com"&gt;gdrivetips.com&lt;/a&gt; to learn more about google drive tips and tutorials.&lt;/p&gt;

</description>
      <category>googledrive</category>
      <category>tips</category>
      <category>cloudstorage</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Fixing my BF1942 woes with Win32 APIs</title>
      <author>James Turner</author>
      <pubDate>Fri, 21 Jan 2022 03:40:44 +0000</pubDate>
      <link>https://dev.to/turnerj/fixing-my-bf1942-woes-with-win32-apis-48bh</link>
      <guid>https://dev.to/turnerj/fixing-my-bf1942-woes-with-win32-apis-48bh</guid>
      <description>&lt;p&gt;Battlefield 1942 was one of a number of great games I played when I was growing up. I was first introduced to the game through a demo disc on a magazine - it was the expansion "Secret Weapons of WWII". I spent many hours playing that demo and eventually managed to snag the complete set of the game with both expansions. It was game that ran pretty well on old hardware and have a lot of fun memories playing it.&lt;/p&gt;

&lt;p&gt;Jumping forward &lt;em&gt;several&lt;/em&gt; years, I wanted to give the old game another play. I knew the graphics wouldn't hold up but to play in its nostalgic sandbox would more than overcome that. I installed the game and the various patches, modified configuration files to use my monitor's native resolution (1080p) and tried to launch it. Unfortunately, it wouldn't launch at all.&lt;/p&gt;

&lt;p&gt;Some people online suggest it was issues with SecureROM as &lt;a href="https://www.rockpapershotgun.com/windows-10-safedisc-securom-drm"&gt;that no longer works with Windows 10&lt;/a&gt; while others suggest it is an issue with Direct Play. What ultimately solved it for me was an unofficial patch by a group called &lt;a href="https://team-simple.org/"&gt;Team Simple&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now with the game launching, I start to hear &lt;a href="https://www.youtube.com/watch?v=kaopMpvMZbg"&gt;the classic BF1942 main menu music&lt;/a&gt;. Sped through the profile setup, jumped to instant battle, picked my favourite level (Hellendoorn) and pressed start. The music changes to, in my opinion, &lt;a href="https://www.youtube.com/watch?v=IPMnEmkoPFs"&gt;an even more iconic piece when the level is loading&lt;/a&gt;. The progress bar moves maybe a quarter of the way and then... I'm back on my desktop.&lt;/p&gt;

&lt;p&gt;After going back and forth with settings and the resolution changes I made, I found it just didn't want to work in full screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DCr1QM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://turnerj.com/blog/images/fixing-bf1942-initial-window-mode.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DCr1QM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://turnerj.com/blog/images/fixing-bf1942-initial-window-mode.jpg" alt="Battlefield 1942 in Window mode" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For the sharp-eyed individuals, you might notice that this is actually playing through &lt;a href="https://parsec.app/"&gt;Parsec&lt;/a&gt; - this is part of &lt;a href="https://turnerj.com/blog/remote-desktop-experience-part-1-planning"&gt;my vision for a remote desktop experience&lt;/a&gt;. It actually plays great (no noticeable input lag) via Parsec, over Wi-Fi, from my desktop to my laptop. That said, I did try the game directly on that machine and it still crashed so something else was to blame.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While I could play in window mode, I couldn't actually move the window so I could see the whole screen. Anytime I attempted to drag the window, it would just bring the cursor back in the game. Tried shortcuts to maximise the window but none of those worked either.&lt;/p&gt;

&lt;p&gt;So what would any good programmer do? &lt;del&gt;Search for an existing solution online.&lt;/del&gt; Write their own program to fix it!&lt;/p&gt;

&lt;p&gt;Seemed like the fun thing to do anyway.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-plan"&gt;
  &lt;/a&gt;
  The Plan
&lt;/h2&gt;

&lt;p&gt;This is what I wanted to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get rid of the game's window border as it was just taking space&lt;/li&gt;
&lt;li&gt;Position the window so it is centered to the monitor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The second point is important - the menu displays at 800x600 but the game when loading and playing is at whatever resolution I configured in window mode. My plan was to build a launcher that would bootstrap the main game.&lt;/p&gt;

&lt;p&gt;I've messed around with removing borders from applications years back when I wanted to run a console application in the background. The way I achieved it back then was to invoke Win32 APIs from .NET and figured that would be a good starting place. My initial task was to find the APIs I need to use.&lt;/p&gt;

&lt;p&gt;Fortunately &lt;a href="https://github.com/dtgDTGdtg/SRWE/blob/b439859e15ca44b6c4715fdb015c321a49ef634a/SRWE/Window.cs"&gt;someone already found the APIs to use to remove borders and reposition the window&lt;/a&gt;. My job then was to work out how to bring that into my application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;//A snippet of the code that helped me with the Win32 APIs from the Simple Runtime Window Editor (SRWE)&lt;/span&gt;
&lt;span class="c1"&gt;//Source: https://github.com/dtgDTGdtg/SRWE/blob/b439859e15ca44b6c4715fdb015c321a49ef634a/SRWE/Window.cs&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;RemoveBorders&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;uint&lt;/span&gt; &lt;span class="n"&gt;nStyle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m_hWnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_STYLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;nStyle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nStyle&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_THICKFRAME&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_DLGFRAME&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_BORDER&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;^&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_THICKFRAME&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_DLGFRAME&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_BORDER&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m_hWnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_STYLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nStyle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;nStyle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m_hWnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_EXSTYLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;nStyle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nStyle&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_DLGMODALFRAME&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_WINDOWEDGE&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_CLIENTEDGE&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_STATICEDGE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;^&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_DLGMODALFRAME&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_WINDOWEDGE&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_CLIENTEDGE&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_STATICEDGE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m_hWnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_EXSTYLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nStyle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kt"&gt;uint&lt;/span&gt; &lt;span class="n"&gt;uFlags&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOSIZE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOMOVE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOZORDER&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOACTIVATE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOOWNERZORDER&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOSENDCHANGING&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_FRAMECHANGED&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowPos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m_hWnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uFlags&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I put together bits and pieces from that codebase like the remove border and window positioning code and combined it with additional API calls for monitor information. I needed the following Win32 APIs to do everything I wanted:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getwindowinfo"&gt;GetWindowInfo&lt;/a&gt; (for the current window bounds)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-MonitorFromWindow"&gt;MonitorFromWindow&lt;/a&gt; (getting the monitor handle the window is on)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-GetMonitorInfoW"&gt;GetMonitorInfoW&lt;/a&gt; (getting the monitor bounds)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-SetWindowPos"&gt;SetWindowPos&lt;/a&gt; (setting the window position)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-SendMessageW"&gt;SendMessageW&lt;/a&gt; (to send &lt;code&gt;WM_EXITSIZEMOVE&lt;/code&gt; to the window, a tip from &lt;a href="https://github.com/dtgDTGdtg/SRWE#exitsizemove"&gt;SRWE&lt;/a&gt; - never checked if it was strictly necessary for BF1942 though)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getwindowlongw"&gt;GetWindowLongW&lt;/a&gt; (getting window settings)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setwindowlongw"&gt;SetWindowLongW&lt;/a&gt; (updating window settings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After doing a rough integration with pieces from that codebase, I gave it a run and... my application crashed. I was using &lt;code&gt;process.MainWindowHandle&lt;/code&gt; to get BF1942's game window. Turns out that it isn't set till, well, there is a main window available. So I wrote some code to wait for that and bingo - it launched the game and worked!&lt;/p&gt;

&lt;p&gt;Well, it mostly worked - see BF1942 has an interesting quirk where it launches a new process when you end a match and go back to the main menu. This required me to write logic to track when processes changed while also still allowing it to exit when BF1942 is closed properly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#improving-the-win32-apis"&gt;
  &lt;/a&gt;
  Improving the Win32 APIs
&lt;/h2&gt;

&lt;p&gt;While my prototype worked, cobbled together from bits of SRWE and my own bits, I wasn't entirely happy with how I integrated the Win32 APIs. Below is the snippet of code I had that takes a window handle, gets the window's size, the monitor's size, calculates the position and finally sets it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;unsafe&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;UpdateWindowPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;WINDOWINFO&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetWindowInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;ref&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;windowDimensions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcWindow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;monitorHandle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MonitorFromWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;monitorInfo&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LPMONITORINFO&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;cbSize&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPMONITORINFO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetMonitorInfoA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;monitorHandle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;ref&lt;/span&gt; &lt;span class="n"&gt;monitorInfo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;monitorDimensions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;monitorInfo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcMonitor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;monitorDimensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Width&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;windowDimensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Width&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;monitorDimensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Height&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;windowDimensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Height&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nf"&gt;SetPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SetPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;uint&lt;/span&gt; &lt;span class="n"&gt;uFlags&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOSIZE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOZORDER&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOACTIVATE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOOWNERZORDER&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOSENDCHANGING&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_FRAMECHANGED&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowPos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HWND_TOPMOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uFlags&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WM_EXITSIZEMOVE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What I would prefer is to actually have it feel more like a typical .NET API, something more like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;UpdateWindowPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Window&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;monitorBounds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetCurrentMonitor&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;GetBounds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;windowBounds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetBounds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;monitorBounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Width&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;windowBounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Width&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;monitorBounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Height&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;windowBounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Height&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All I'm doing is abstracting away the Win32 APIs but it makes my "business logic" here far cleaner. While doing this, I also decided to remove the pieces of SRWE and replace it with a more maintainable interface to the APIs.&lt;/p&gt;

&lt;p&gt;I tried out both &lt;a href="https://github.com/terrafx/terrafx.interop.windows"&gt;TerraFX.Interop.Windows&lt;/a&gt; and &lt;a href="https://github.com/microsoft/CsWin32"&gt;CsWin32&lt;/a&gt;, ultimately settling on the latter. CsWin32 was a little less intimidating as the API is generated based on strings in a text file rather than containing everything at once. Also I like jumping to definition of types to read more and explore APIs etc and doing that to one of the types in the TerraFX library crashed Visual Studio. That's more of a VS problem than a TerraFX library but still - CsWin32 would work great for what I'm doing.&lt;/p&gt;

&lt;p&gt;The way I went about achieving my desired interface to the Win32 APIs I needed was via creating record-struct wrappers around the various native handles and having instance methods wrap the API calls themselves. For example, below is my &lt;code&gt;Window&lt;/code&gt; type that I have most of my functionality hanging off of.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Window&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nint&lt;/span&gt; &lt;span class="n"&gt;Handle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;Win32Handle&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Handle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Monitor&lt;/span&gt; &lt;span class="nf"&gt;GetCurrentMonitor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;nint&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MonitorFromWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SetPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SET_WINDOW_POS_FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOSIZE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SET_WINDOW_POS_FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOZORDER&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SET_WINDOW_POS_FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOACTIVATE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
            &lt;span class="n"&gt;SET_WINDOW_POS_FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOOWNERZORDER&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SET_WINDOW_POS_FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOSENDCHANGING&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SET_WINDOW_POS_FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_FRAMECHANGED&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowPos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HWND_TOPMOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WM_EXITSIZEMOVE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Rectangle&lt;/span&gt; &lt;span class="nf"&gt;GetBounds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;windowInfo&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;WINDOWINFO&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetWindowInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;ref&lt;/span&gt; &lt;span class="n"&gt;windowInfo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Rectangle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;From&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;windowInfo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcWindow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;RemoveBorders&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WINDOW_LONG_PTR_INDEX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_STYLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="p"&gt;~(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;WINDOW_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_THICKFRAME&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WINDOW_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_DLGFRAME&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WINDOW_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_BORDER&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WINDOW_LONG_PTR_INDEX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_STYLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WINDOW_LONG_PTR_INDEX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_EXSTYLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="p"&gt;~(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;WINDOW_EX_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_DLGMODALFRAME&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WINDOW_EX_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_WINDOWEDGE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WINDOW_EX_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_CLIENTEDGE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WINDOW_EX_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_STATICEDGE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WINDOW_LONG_PTR_INDEX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_EXSTYLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WM_EXITSIZEMOVE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-end-result"&gt;
  &lt;/a&gt;
  The End Result
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mR3JsVcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://turnerj.com/blog/images/fixing-bf1942-menu-window.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mR3JsVcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://turnerj.com/blog/images/fixing-bf1942-menu-window.jpg" alt="BF1942 in a borderless window for the intro cinematics" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9togV0ai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://turnerj.com/blog/images/fixing-bf1942-borderless-fullscreen.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9togV0ai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://turnerj.com/blog/images/fixing-bf1942-borderless-fullscreen.jpg" alt="BF1942 in a borderless window at fullscreen" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I called my project &lt;em&gt;Borderless 1942&lt;/em&gt; and &lt;a href="https://github.com/Turnerj/Borderless1942"&gt;is available on GitHub&lt;/a&gt;. It is a self-contained, single-file .NET 6 application. Because it is self-contained, you don't need .NET 6 installed to run it.&lt;/p&gt;

&lt;p&gt;I'm quite happy that I got this working and could enjoy the game again. In terms of the code, the main thing I'd want to change is to move from a constant loop resetting the window position to something that listens on window resize events. This is possible via the Win32 APIs but has its own complications which I haven't got around to addressing yet.&lt;/p&gt;

&lt;p&gt;I'm also looking at turning the style of wrapper I wrote into a dedicated library. There seems to be &lt;a href="https://www.reddit.com/r/dotnet/comments/r1pz3x/would_you_wantuse_an_improved_interface_to_native/"&gt;some interest&lt;/a&gt; in improved access to the Win32 APIs. I don't know how far I'd go with it (what Win32 APIs I'd support) but I think it could make this a lot easier for developers in certain situations.&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>win32</category>
    </item>
    <item>
      <title>Learning Flexbox's flex-direction</title>
      <author>NguyenD-Nam</author>
      <pubDate>Fri, 21 Jan 2022 03:01:02 +0000</pubDate>
      <link>https://dev.to/namnguyen0320/learning-flexboxs-flex-direction-kgf</link>
      <guid>https://dev.to/namnguyen0320/learning-flexboxs-flex-direction-kgf</guid>
      <description>&lt;p&gt;Simple illustration for CSS flexbox's flex-direction.&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/nguyend-nam/embed/bGrYjrO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>css</category>
      <category>flexbox</category>
      <category>webdev</category>
    </item>
    <item>
      <title>My Personal site</title>
      <author>NguyenD-Nam</author>
      <pubDate>Fri, 21 Jan 2022 02:39:03 +0000</pubDate>
      <link>https://dev.to/namnguyen0320/my-personal-site-1lpl</link>
      <guid>https://dev.to/namnguyen0320/my-personal-site-1lpl</guid>
      <description>&lt;p&gt;&lt;a href="//nguyend-nam.github.io"&gt;&lt;strong&gt;View site&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/NguyenD-Nam/NguyenD-Nam.github.io"&gt;&lt;strong&gt;View source&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
My simple website developed using just HTML, CSS and Javascript and hosted dynamically with GitHub Pages. Hope you like it.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>portfolio</category>
      <category>css</category>
    </item>
    <item>
      <title>Why I Started The Odin Project and You Should Too.</title>
      <author>MD Jannatin Naim</author>
      <pubDate>Fri, 21 Jan 2022 02:10:35 +0000</pubDate>
      <link>https://dev.to/jannatinnaim/why-i-started-the-odin-project-and-you-should-too-3do6</link>
      <guid>https://dev.to/jannatinnaim/why-i-started-the-odin-project-and-you-should-too-3do6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-the-odin-project"&gt;
  &lt;/a&gt;
  What is The Odin Project?
&lt;/h2&gt;

&lt;p&gt;If I were to quote directly from their &lt;a href="https://theodinproject.com/"&gt;website&lt;/a&gt;, it would be something that goes,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Odin Project is one of those "What I wish I had when I was learning" resources. Not everyone has access to a computer science education or the funds to attend an intensive coding school and neither of those is right for everyone anyway. This project is designed to fill in the gap for people who are trying to hack it on their own but still want a high quality education.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Whereas if I were to have a short introduction to their service, it would be in a sentence,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Odin Project is for the developers that lost their track due to overabundance of resources.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-the-odin-project"&gt;
  &lt;/a&gt;
  Why The Odin Project?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EztO-rJD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdnk5vc9mkysj19su4ws.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EztO-rJD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdnk5vc9mkysj19su4ws.jpg" alt="Choose Your Battles" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TOP (The Odin Project) is not the only curriculum out there. There are lots more like &lt;a href="https://freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt;, &lt;a href="https://codeacademy.com/"&gt;CodeAcademy&lt;/a&gt;, &lt;a href="https://sololearn.com/"&gt;SoloLearn&lt;/a&gt;, etc. But the reason TOP stands out from the others is that they give you a much more practical and hands on experience with the &lt;em&gt;Developer Workflow&lt;/em&gt; early on which gives you a taste of what you're getting yourself into.&lt;/p&gt;

&lt;p&gt;Unlike the other sites, TOP doesn't just start teaching you languages or technologies, but their entire introduction section is just what being a developer is and how it's going to affect your life. &lt;/p&gt;

&lt;p&gt;One of the &lt;a href="https://www.thinkful.com/blog/why-learning-to-code-is-so-damn-hard/"&gt;most inspiring blog post&lt;/a&gt; that I've read in my life comes from their introduction page.&lt;/p&gt;

&lt;p&gt;Knowing what you'll be doing once you get into the industry helps a lot in setting the proper &lt;em&gt;mindset&lt;/em&gt; which I really didn't see any other platforms emphasize on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hows-the-odin-project"&gt;
  &lt;/a&gt;
  How's The Odin Project?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R6tyEIQg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s82vqh80rqzmya83pawz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R6tyEIQg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s82vqh80rqzmya83pawz.jpg" alt="Question Mark" width="880" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's time to talk about how it is to work with TOP. Like I mentioned before, TOP takes a different approach to learning that is similar to how you'd learn while working for real.&lt;/p&gt;

&lt;p&gt;They don't just have a bunch of lessons that you just code and speed-run through and get a certificate at the end. No, they don't quite do that. What they will do is introduce you to a topic, have links to several articles about them and have you practice them. What this does is builds up that habit of &lt;strong&gt;reading documentation&lt;/strong&gt; and picking out the important information you need.&lt;/p&gt;

&lt;p&gt;And after you're done with gathering the information you need, they have questions that you should be able to answer at the end to assess your understanding on that topic. &lt;/p&gt;

&lt;p&gt;I really found this useful as I would often just read documentation and forget what I learnt immediately after. Sitting there trying to properly answer the questions really helped me in solidifying my knowledge.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UkkVDef---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpyg48snajb63vus83bs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UkkVDef---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bpyg48snajb63vus83bs.jpg" alt="Web Dev Projects" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The most important thing to take away from TOP is the projects that you build while going through the curriculum. There are a bunch of them and each challenge you in a different set of ways. You'll constantly keep finding new and interesting things to make something work and TOP really gives you the chance to do that.&lt;/p&gt;

&lt;p&gt;Overall, the close to &lt;em&gt;real world&lt;/em&gt; experience with coding, the well structured curriculum and the projects built are what makes TOP so great.&lt;/p&gt;

&lt;p&gt;On top of all this, The Odin Project is an Open Source initiative and one of their mottos is,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By the developers, for the developers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-you-should-use-it-too"&gt;
  &lt;/a&gt;
  Why You Should Use It Too
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AdEKolU4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7hbi3d2ugp0cqgilj5e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AdEKolU4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7hbi3d2ugp0cqgilj5e.jpg" alt="Group Design Project" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All this time I was explaining why TOP is so great and all, but I never really touched on why some of you should use it too.&lt;/p&gt;

&lt;p&gt;Once I was a lost developer too. I didn't know where to learn things from and there were just too many options to choose from. With the little knowledge I had, I went and did many of the platforms mentioned before, but none of them clicked with me.&lt;/p&gt;

&lt;p&gt;TOP came in at a time where I lacked motivation, a clear path and the most of all, support. TOP greatly focuses on why &lt;strong&gt;community support&lt;/strong&gt; is important and their &lt;a href="https://https://discord.com/invite/fbFCkYabZB"&gt;Discord&lt;/a&gt; server really shows how powerful it can be when you can have someone guide you through.&lt;/p&gt;

&lt;p&gt;One thing needs to be kept in mind no matter if you choose TOP or not is that, you need to be consistent. A great resource like TOP would mean nothing if you're not consistent enough. There's a proverb that goes,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Consistency is key.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I'm a strong believer in that and you need to be too if you want to make any progress in this industry.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Learning to code is a journey that can have too many roads to follow. Some are bad, some are good but, what really matters is if you choose to see the end of it. TOP is one of those resources and I'll say it might not be for you. But if you are willing to commit to something, TOP will give you the 'missing puzzle piece' which you might just be needing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://theodinproject.com/"&gt;TheOdinProject&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#socials"&gt;
  &lt;/a&gt;
  Socials
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JannatinNaim/"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Jannatin__Naim/"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/KskcSs8Nb8"&gt;Discord&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Catch error when using SQLite in Golang</title>
      <author>Bo</author>
      <pubDate>Fri, 21 Jan 2022 02:00:54 +0000</pubDate>
      <link>https://dev.to/0xbf/catch-error-when-using-sqlite-in-golang-58nn</link>
      <guid>https://dev.to/0xbf/catch-error-when-using-sqlite-in-golang-58nn</guid>
      <description>&lt;p&gt;I was working on a project using Go and SQLite. For the driver part, I tried 2 libraries:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mattn/go-sqlite3"&gt;mattn go-sqlite3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pkg.go.dev/modernc.org/sqlite"&gt;modernc.org/sqlite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below are examples to how to catch "primary key conflict" and "no row found" errors:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#with-mattn-sqlite-library"&gt;
  &lt;/a&gt;
  With mattn sqlite library:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"database/sql"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/mattn/go-sqlite3"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;ErrDup&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;New&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"record already exists"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ErrNoRecord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;New&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"record not found"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;wrapDBError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;sqliteErr&lt;/span&gt; &lt;span class="n"&gt;sqlite3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;As&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;sqliteErr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Is&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sqliteErr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sqlite3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ErrConstraint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ErrDup&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Is&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ErrNoRows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ErrNoRecord&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The problem is that it is using CGO, and I am using Macbook M1 for my development. I want to build a release for linux amd64, if I just use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ GOOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linux &lt;span class="nv"&gt;GOARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;amd64 go build &lt;span class="nt"&gt;-o&lt;/span&gt; app-linux
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will throw some errors that can't find some symbol. The library suggest to &lt;a href="https://github.com/mattn/go-sqlite3#cross-compile"&gt;use xgo to cross build&lt;/a&gt;, but I still got some errors when I was doing so. Without having time to search and find the problem, I fell back to compile the linux binary with a docker image:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# I am developing on mac m1, so this can be directly built&lt;/span&gt;
&lt;span class="nv"&gt;GOOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;darwin &lt;span class="nv"&gt;GOARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;arm64 go build &lt;span class="nt"&gt;-o&lt;/span&gt; build/myapp-darwin
&lt;span class="c"&gt;# for linux, using docker to build it&lt;/span&gt;
docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;PWD&lt;span class="si"&gt;)&lt;/span&gt;:/myapp &lt;span class="nt"&gt;-w&lt;/span&gt; /myapp amd64/golang:bullseye go build &lt;span class="nt"&gt;-o&lt;/span&gt; build/myapp-linux &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This works, both &lt;code&gt;myapp-darwin&lt;/code&gt; and &lt;code&gt;myapp-linux&lt;/code&gt; will be compiled and generated under the &lt;code&gt;build&lt;/code&gt; folder. However, the second build with docker would take much longer time than I thought, approximately 1~2 minutes.&lt;/p&gt;

&lt;p&gt;So I start to looking for other libraries that doesn't require CGO.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#with-moderncorgsqlite-library"&gt;
  &lt;/a&gt;
  With modernc.org/sqlite library
&lt;/h2&gt;

&lt;p&gt;This library doesn't need CGO, and I am able to find the way how to catch the "primary key conflict" and "no rows found" error by looking the &lt;a href="https://gitlab.com/cznic/sqlite"&gt;source code&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"database/sql"&lt;/span&gt;
    &lt;span class="s"&gt;"modernc.org/sqlite"&lt;/span&gt;
    &lt;span class="n"&gt;sqlite3&lt;/span&gt; &lt;span class="s"&gt;"modernc.org/sqlite/lib"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;wrapDBError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Is&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ErrNoRows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ErrNoRecord&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;liteErr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ok&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sqlite&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;ok&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;liteErr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;sqlite3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SQLITE_CONSTRAINT_PRIMARYKEY&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ErrDup&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since this lib doesn't use CGO, cross-build is easy and fast:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;GOOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;darwin &lt;span class="nv"&gt;GOARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;arm64 go build &lt;span class="nt"&gt;-o&lt;/span&gt; build/myapp-darwin
&lt;span class="nv"&gt;GOOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linux &lt;span class="nv"&gt;GOARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;amd64 go build &lt;span class="nt"&gt;-o&lt;/span&gt; build/myapp-linux
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It only takes seconds to finish the compilation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;For now I will stick to the second library which doesn't require CGO. Other than catching the errors part, there are basically no difference between those 2 libraries when writing sql (CRUD) operations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gosamples.dev/sqlite-intro/"&gt;https://gosamples.dev/sqlite-intro/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattn/go-sqlite3"&gt;https://github.com/mattn/go-sqlite3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattn/go-sqlite3/blob/master/_example/simple/simple.go"&gt;https://github.com/mattn/go-sqlite3/blob/master/_example/simple/simple.go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pkg.go.dev/modernc.org/sqlite"&gt;https://pkg.go.dev/modernc.org/sqlite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>go</category>
      <category>sqlite</category>
    </item>
    <item>
      <title>January  20th, 2022: What did you learn this week?</title>
      <author>Nick Taylor</author>
      <pubDate>Fri, 21 Jan 2022 01:25:04 +0000</pubDate>
      <link>https://dev.to/nickytonline/january-20th-2022-what-did-you-learn-this-week-odl</link>
      <guid>https://dev.to/nickytonline/january-20th-2022-what-did-you-learn-this-week-odl</guid>
      <description>&lt;p&gt;It's that time of the week again. So wonderful devs, what did you learn this week? It could be programming tips, career advice etc.&lt;/p&gt;


&lt;center&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/W1ecIq4sEofza/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/W1ecIq4sEofza/giphy.gif" alt="Hackerman from Kung Fury putting on a Nintendo Power glove" width="500" height="281"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/center&gt;

&lt;p&gt;Feel free to comment with what you learnt and/or reference your TIL post to give it some more exposure.&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__5305"&gt;
  
    .ltag__tag__id__5305 .follow-action-button{
      background-color: #ffedc9 !important;
      color: #820000 !important;
      border-color: #ffedc9 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/todayilearned" class="ltag__tag__link"&gt;todayilearned&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        Summarize a concept that is new to you.
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>weeklylearn</category>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Design Patterns of Event-driven Architecture</title>
      <author>ChunTing Wu</author>
      <pubDate>Fri, 21 Jan 2022 01:16:18 +0000</pubDate>
      <link>https://dev.to/lazypro/design-patterns-of-event-driven-architecture-3a79</link>
      <guid>https://dev.to/lazypro/design-patterns-of-event-driven-architecture-3a79</guid>
      <description>&lt;p&gt;According to the &lt;a href="https://www.gartner.com/ngw/globalassets/en/information-technology/documents/top-10-strategic-technology-trends-for-2018.pdf"&gt;report&lt;/a&gt;, we can see the event-driven model is a hot topic for the system design. However, designing a good event-driven architecture is quite challenging. We are familiar with the synchronization model, which request and response directly, but the stories are totally different in the asynchronization scheme. Nevertheless, here are some architecture patterns for reference.&lt;/p&gt;

&lt;p&gt;The blueprint comes from the &lt;a href="https://youtu.be/dc20BQ9izs8"&gt;video&lt;/a&gt; and shows the whole vision on a well-defined event-driven architecture. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jkS1nSge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/aWW2ybH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jkS1nSge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/aWW2ybH.png" alt="" width="880" height="548"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will briefly introduce those terminologies in the later sections.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#channel-monitoring-pattern"&gt;
  &lt;/a&gt;
  Channel monitoring pattern
&lt;/h2&gt;

&lt;p&gt;The channel monitoring pattern define a role called channel monitor to watch the usage and utilization of the main queue. It monitors some metrics like the amount of pending messages, the amount of consumers and the consuming rate.&lt;/p&gt;

&lt;p&gt;Having those metrics helps to understand the workload and the healthy of the system. Moreover, the information can let the system be able to self-healing by adjusting the amount of consumers and throttle the producer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consumer-supervisor-pattern"&gt;
  &lt;/a&gt;
  Consumer supervisor pattern
&lt;/h2&gt;

&lt;p&gt;This supervisor is responsible for adjusting the amount of consumers. It listens to the channel monitor and determines if the current consumers can handle the events. If the supervisor thinks the throughput of consumers is not enough, it will call more consumers to help, and vise versa.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#producer-control-flow-pattern"&gt;
  &lt;/a&gt;
  Producer control flow pattern
&lt;/h2&gt;

&lt;p&gt;In the previous section, the supervisor improves the throughput by making more consumers. However, if the cost is a concern, using more consumers obviously is infeasible.&lt;/p&gt;

&lt;p&gt;Therefore, there is another approach, producer control flow pattern. When the consuming rate cannot align to the producing rate, a controller will send a signal to the producer to slow down the event generation. After the pending events are processed, the producer can disable the throttling to restore the normal state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thread-delegate-pattern"&gt;
  &lt;/a&gt;
  Thread delegate pattern
&lt;/h2&gt;

&lt;p&gt;The thread delegate pattern is a useful pattern not only in the event-driven architecture but the other types of the system design.&lt;/p&gt;

&lt;p&gt;The pattern has two purposes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Preserve the message order&lt;/li&gt;
&lt;li&gt;Track the metrics of event processing, ex. response time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I-b5VuoL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/8Yk7qAz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I-b5VuoL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/8Yk7qAz.png" alt="" width="880" height="631"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's begin from the first purpose. When a huge amounts of events enter the queue, we are used to bring up more consumers to handle them, aka scale-out. This method is common in the stateless scenarios. But, some kind of events are stateful, the order of events must be addressed. For instance,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Put some items in the cart&lt;/li&gt;
&lt;li&gt;Clean up the cart&lt;/li&gt;
&lt;li&gt;Put other items in the same cart&lt;/li&gt;
&lt;li&gt;Charge it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The event order must be kept; otherwise, you may buy the wrong items. Thus, how to handle the events on multiple consumers? In thread delegate pattern, it introduces a new role, event dispatcher, and the dispatcher dispatch an event to the corresponding consumer based on the event type. In other words, all events with the same type will be in the same place, and the order can be ensured.&lt;/p&gt;

&lt;p&gt;So, the dispatcher maintains a mapping table to record which type of event belongs to who. After the consumer finishes an event, it callback to the dispatcher. The dispatcher knows all processing results of consumers, i.e., it can track the response time as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#workflow-event-pattern"&gt;
  &lt;/a&gt;
  Workflow event pattern
&lt;/h2&gt;

&lt;p&gt;When event consumer encounter an error while processing, it may not fix the error due to many reasons like the malformed event, transaction conflicts, etc. Hence, the consumer emit this event to another queue handled by workflow processor. The processor will either fix the event or store the event in the storage. In addition, the processor can display the event on the dashboard and inform the human to take over the case. The human can fix the situation manually and resend this event to the queue.&lt;/p&gt;

&lt;p&gt;It is worth to mention that if the event is resent to the queue, the order cannot be guaranteed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requestresponse-model"&gt;
  &lt;/a&gt;
  Request-response Model
&lt;/h2&gt;

&lt;p&gt;Wait, we are designing an event-driven architecture which is asynchronized definitely. Why we are talking about the synchronized model here? In my opinion, the request-response models is very classic way to start up a project. We used to request a response through the restful APIs. This implementation can reduce the development effort and give a straightforward view. However, we don’t want to lose the flexibility of event-driven architectures. The solution is we implement a request-response models upon an event system.&lt;/p&gt;

&lt;p&gt;The sequential diagram is shown as the following figure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yDQyBpMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0j97hfhyqf9ewhmgdja.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yDQyBpMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0j97hfhyqf9ewhmgdja.png" alt="Image description" width="606" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The server is a traditional HTTP server with some synchronized Restful APIs, and the client requests the server as usual. Nevertheless, the server doesn't handle this request directly; instead, he delegate this job to the event worker and wait for the response at the agreed place which is another queue. After using this pattern, we can enjoy not only the benefits of the event-driven architecture but also the simplicity between clients and servers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ambulance-pattern"&gt;
  &lt;/a&gt;
  Ambulance Pattern
&lt;/h2&gt;

&lt;p&gt;The ambulance pattern is used to handle the message priority correctly. The simple design for an emergency event is always put this event to the head of a queue, so that workers can process those high-priority events Immediately. Well, this implementation has some drawbacks, especially, the starvation of the low-priority events. Those normal events might not be processed at all, because there are always emergency events come in.&lt;/p&gt;

&lt;p&gt;In order to handle events evenly, we can separate emergency events from ordinary events and submit to a new queue like the follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OUgrnewP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iou2o797xhjykgdcuial.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OUgrnewP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iou2o797xhjykgdcuial.png" alt="Image description" width="449" height="162"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The workers can pick events from those queues to avoid the starvation. There can be a weight to determine the ratio of the two sides, or simply use round-robin to handle those events sequentially.&lt;/p&gt;

&lt;p&gt;Furthermore, you can dedicate a worker focus on the emergency events.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zE0_r7RV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/peqh154mc0as3mbz5fqy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zE0_r7RV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/peqh154mc0as3mbz5fqy.png" alt="Image description" width="449" height="162"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;We walk through several design patterns of an event-driven architecture. We can design a self-monitoring and self-healing system leverage those patterns. The system is scalable, robust, efficient, and fault-tolerant.&lt;/p&gt;

&lt;p&gt;In order to make the client more easily, we can leverage the request-response model. If we encounter a scenario is to distinguish the event priority, we can use the ambulance pattern.&lt;/p&gt;

&lt;p&gt;The trend of using event-driven architecture has become apparent. However, until now, there is no one-size-fits-all solution can design a well architecture for events. We have to find the corresponding solution according to various situations. Hope this article are helpful to you.   &lt;/p&gt;

</description>
      <category>eventdriven</category>
      <category>architecture</category>
      <category>design</category>
    </item>
    <item>
      <title>Use VS Code snippets to generate Markdown front matter</title>
      <author>Cecelia Martinez</author>
      <pubDate>Thu, 20 Jan 2022 23:57:31 +0000</pubDate>
      <link>https://dev.to/ceceliacreates/use-vs-code-snippets-to-generate-markdown-front-matter-fpc</link>
      <guid>https://dev.to/ceceliacreates/use-vs-code-snippets-to-generate-markdown-front-matter-fpc</guid>
      <description>&lt;p&gt;Many modern blogging platforms and frameworks for content-focused web apps use Markdown to manage individual content files. Markdown front matter makes it easy to add metadata to your content with information like tags, publish date, title, description, and more. Dev.to for example, uses Jekyll front matter for blog posts written on the platform.&lt;/p&gt;

&lt;p&gt;If you're using a framework like &lt;a href="https://nuxtjs.org/"&gt;Nuxt&lt;/a&gt; for Vue or &lt;a href="https://www.gatsbyjs.com/"&gt;Gatsby&lt;/a&gt; for React, you may have very specific properties you need in you front matter to ensure content renders the right way on your site. There are likely many ways to do this, but I've found that using VS Code snippets to store the block of front matter is an easy way to generate markdown files that are consistent with what my front end expects.&lt;/p&gt;

&lt;p&gt;Here is an example of the front matter for an event markdown file for my &lt;a href="https://ceceliacreates.com"&gt;personal website&lt;/a&gt;, built with Nuxt:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Effective Testing Approaches for your Application&lt;/span&gt;
&lt;span class="na"&gt;org&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Refactr.TECH&lt;/span&gt;
&lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;2021-10-03T00:00:00&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Talk&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;In this talk, we'll define the different types of testing and cover their use cases, as well as provide some guidelines for deciding which approach to use for your application.&lt;/span&gt;
&lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;embed&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;-MUqhmhjt1I&lt;/span&gt;
&lt;span class="na"&gt;slides&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://slides.com/ceceliamartinez/effective-testing-approaches&lt;/span&gt;
&lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;testing&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;conference&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;test strategy&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This would be a lot of properties to remember every time I want to add an event to my site. This is why I let snippets remember for me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vs-code-snippets"&gt;
  &lt;/a&gt;
  VS Code Snippets
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets#_create-your-own-snippets"&gt;Snippets in VS Code&lt;/a&gt; are templates for repeated code that you can use throughout files in your code editor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=l66s-Ju_QRk&amp;amp;ab_channel=JuriStrumpflohner"&gt;This great video&lt;/a&gt; by Juri Strumpflohner walks through the process of creating a VS Code snippet using a &lt;a href="https://snippet-generator.app/"&gt;snippet generator&lt;/a&gt;. This is the process I'll use to create my markdown front matter snippets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-your-vs-code-snippets-file"&gt;
  &lt;/a&gt;
  Setting up your VS Code snippets file
&lt;/h2&gt;

&lt;p&gt;First we need to create the file to store our snippets.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Press &lt;code&gt;cmd+shift+p&lt;/code&gt; (Mac) or &lt;code&gt;ctrl+shift+p&lt;/code&gt; (Windows) to open the Command Palette in VS Code. Type 'snippet' and select 'Preferences: Configure User Snippets.' You can also click Code &amp;gt; Preferences &amp;gt; User Snippets from the menu bar.&lt;/li&gt;
&lt;li&gt;You can either create a global snippets file, or one specific to the workspace for your project. I'd recommend creating a local file unless you have multiple projects that need the same front matter snippets.&lt;/li&gt;
&lt;li&gt;Select which option you prefer to create the file. It will prompt you to name the file, then click Save. This creates a file with a .code-snippets suffix within the .vscode directory for your project.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The generated file will have instructions for creating snippets, as well as an example of the syntax. You can use this documentation to write your own, but we'll make things easier and use a snippet generator.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-snippet"&gt;
  &lt;/a&gt;
  Creating a snippet
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://snippet-generator.app/"&gt;snippet generator app&lt;/a&gt; converts the snippet information and body and converts it to the syntax needed by VS Code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pxx18MR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5mqq6qn4puag2ihvi5b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pxx18MR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5mqq6qn4puag2ihvi5b.png" alt="Screenshot of snippet generator app" width="880" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Description...&lt;/code&gt; field is the name of the snippet. Following the example of the event front matter above, I'll name mine 'event frontmatter'.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Tab trigger...&lt;/code&gt; field corresponds to the &lt;code&gt;prefix&lt;/code&gt; property in the VS Code snippet syntax. This is the name that will show up in VS Code when you open the snippet menu and select which one to use, like in the screenshot below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iW7RQ0c8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoy01q7uytj8zsrywpaw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iW7RQ0c8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoy01q7uytj8zsrywpaw.png" alt="snippet menu" width="880" height="474"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I named mine &lt;code&gt;eventFrontmatter&lt;/code&gt;, but the format is up to you.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Your snippet...&lt;/code&gt; field is where you enter the front matter you'd like to generate with the snippet. This is my example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;embed&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;slides&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[]&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#adding-tabstops-and-placeholders"&gt;
  &lt;/a&gt;
  Adding tabstops and placeholders
&lt;/h2&gt;

&lt;p&gt;So far, this snippet saves me some typing, but does not provide the best experience because I'll have to click through each line to update the values for these fields.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets#_tabstops"&gt;Tabstops&lt;/a&gt; to the rescue! Tabstops are stopping points in your snippet where you can enter text and then &lt;code&gt;tab&lt;/code&gt; to the next location. Use a $n to enter them in your snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$1&lt;/span&gt;
&lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$2&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$3&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$4&lt;/span&gt;
&lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$5&lt;/span&gt;
&lt;span class="na"&gt;embed&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$6&lt;/span&gt;
&lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$7&lt;/span&gt;
&lt;span class="na"&gt;slides&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$8&lt;/span&gt;
&lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$9&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I can also add default values at a tabstop with a &lt;a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets#_placeholders"&gt;placeholder&lt;/a&gt;. A placeholder is auto-set and highlighted when tabbed so you can update easily if needed. You can even set multiple choices for a placeholder. Because I have only a few set event types, I'm going to use placeholder choices for that field in my snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$1&lt;/span&gt;
&lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$2&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${3|Workshop,Talk,Interview,Podcast,Stream|}&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$4&lt;/span&gt;
&lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$5&lt;/span&gt;
&lt;span class="na"&gt;embed&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$6&lt;/span&gt;
&lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$7&lt;/span&gt;
&lt;span class="na"&gt;slides&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$8&lt;/span&gt;
&lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$9&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when I go to use my snippet, I can tab through these options. Neat!&lt;/p&gt;

&lt;p&gt;Now that we have our snippet, we can copy it from the generator and add to our &lt;code&gt;.code-snippets&lt;/code&gt; file back in VS Code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--re7dKQjD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6g15fic8gnqvwmxprlt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--re7dKQjD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6g15fic8gnqvwmxprlt.png" alt="Screenshot of generated snippet" width="880" height="813"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure you paste your snippet &lt;strong&gt;inside&lt;/strong&gt; the object in the file. Multiple snippets should be comma separated just like with JSON.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MLvLBAh5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0x5gw99jfto9lhrtr6kn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MLvLBAh5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0x5gw99jfto9lhrtr6kn.png" alt="Screenshot of snippets file in VS Code" width="880" height="849"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#snippets-for-front-matter"&gt;
  &lt;/a&gt;
  Snippets for front matter
&lt;/h2&gt;

&lt;p&gt;Snippets can be used for any type of code, but there are a few things to keep in mind when using for front matter specifically.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Triple dashes.&lt;/strong&gt; Don't forget to add these at the beginning and end of your snippet so the front matter is parsed correctly.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Be careful with quotes.&lt;/strong&gt; If you use quotes, make sure not to mix single and double quotes in your placeholder values, otherwise you'll get errors. For most frameworks or platforms you don't need them, so leave them out unless you do.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Escape characters.&lt;/strong&gt; The snippet generator will automatically escape quotes in your placeholders, but be careful not to remove them when editing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#using-the-snippet"&gt;
  &lt;/a&gt;
  Using the snippet
&lt;/h2&gt;

&lt;p&gt;Now that our snippet is saved, we can use it in any file in VS Code either globally or in our project, depending on which type of snippets file you created.&lt;/p&gt;

&lt;p&gt;To open the snippets menu, type &lt;code&gt;ctrl+spacebar&lt;/code&gt; in your editor. This will bring up the available snippets. You can arrow down to select and then &lt;code&gt;Enter&lt;/code&gt; to insert the snippet in your file. Now you can &lt;code&gt;tab&lt;/code&gt; through your tabstops and enter the values for your file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8XjL7r5n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/faq25nblwtztdvzerxf7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8XjL7r5n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/faq25nblwtztdvzerxf7.gif" alt="Selecting a choice placeholder with a snippet" width="642" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No more manually generating front matter for your content!&lt;/p&gt;

&lt;p&gt;I hope you found this a helpful introduction to using snippets in VS Code. For more information, check out &lt;a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets#_create-your-own-snippets"&gt;the official documentation&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>markdown</category>
      <category>vscode</category>
      <category>snippets</category>
      <category>nuxt</category>
    </item>
    <item>
      <title>Running A Youtube Channel - 10 Ways Developers Make Money Working from Home - E01</title>
      <author>Dan Fleser</author>
      <pubDate>Thu, 20 Jan 2022 23:10:46 +0000</pubDate>
      <link>https://dev.to/danfleser/running-a-youtube-channel-10-ways-developers-make-money-working-from-home-e01-2h05</link>
      <guid>https://dev.to/danfleser/running-a-youtube-channel-10-ways-developers-make-money-working-from-home-e01-2h05</guid>
      <description>&lt;p&gt;I recently switched from working at a company to freelancing and had a lot of my friends asking me: how's that going.&lt;/p&gt;

&lt;p&gt;I'll tell you what I told everyone: It's going great, and I am really surprised I succeeded in this. The minimum salary I've got till now is $500/day.&lt;/p&gt;

&lt;p&gt;You have to be good in order to switch to freelancing and get to those numbers, but is not that hard, so don't overthink, just start.&lt;/p&gt;

&lt;p&gt;Because I successfully managed to convert 2 of my friend from 8–5 jobs to freelancing, and more of my friends want me to help them, I decided to create a video series about that later this year. It will be free on YouTube, so be sure you Subscribe here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Running A Youtube Channel - 10 Ways Developers Make Money Working from Home - E01&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/MMbp6eNk4Q8"&gt;YouTube video here&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/MMbp6eNk4Q8"&gt;https://youtu.be/MMbp6eNk4Q8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;YouTube is a great platform where you can make money by making videos on different topics or about things that you know or are passionate about.&lt;/p&gt;

&lt;p&gt;If you're a web developer and know how to educate others on how to build websites, then it's time for you to start earning money by running a Youtube Channel.&lt;/p&gt;

&lt;p&gt;The process is simple:&lt;br&gt;
Create interesting content for the viewers.&lt;br&gt;
Post your videos regularly &amp;amp; share them with your audience on social media.&lt;br&gt;
Once, you'll start getting love from the audience in the shape of subscribers, likes &amp;amp; views. You can then monetize your channel from google AdSense, bring sponsors &amp;amp; do affiliate marketing.&lt;/p&gt;

&lt;p&gt;In this video series, I share the best ways and how to increase your money income as a web developer while working from home.&lt;/p&gt;

&lt;p&gt;👉 Subscribe to Dan Later - &lt;a href="https://bit.ly/31SdiZv"&gt;https://bit.ly/31SdiZv&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Timeline - Running A Youtube Channel&lt;br&gt;
00:00 Intro&lt;br&gt;
00:24 Running A Youtube Channel&lt;br&gt;
00:58 Live Coding &amp;amp; Streaming&lt;br&gt;
01:21 Courses&lt;br&gt;
01:44 Digital Products&lt;br&gt;
01:57 Software-as-a-service&lt;br&gt;
02:41 Why&amp;amp;how To Blog&lt;br&gt;
03:17 Freelancing&lt;br&gt;
04:40 Working As A Professional Developer&lt;br&gt;
05:13 Mentoring&lt;br&gt;
05:18 Contributing To Open Source&lt;br&gt;
05:26 Outro&lt;/p&gt;

&lt;p&gt;Other parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Running A Youtube Channel - &lt;a href="https://youtu.be/MMbp6eNk4Q8"&gt;https://youtu.be/MMbp6eNk4Q8&lt;/a&gt;&lt;br&gt;
How did I start YouTube?&lt;br&gt;
MrBeast YouTube Growth Success&lt;br&gt;
YouTube Niches&lt;br&gt;
Recording software for YouTube videos - Obs is free&lt;br&gt;
Video editing software for YouTube videos - Davinci Resolve is Free&lt;br&gt;
Increase YouTube content engagement&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Live Coding &amp;amp; Streaming - &lt;a href="https://youtu.be/d7jczFpBKl0"&gt;https://youtu.be/d7jczFpBKl0&lt;/a&gt;&lt;br&gt;
Make money coding live&lt;br&gt;
Set goals for your audience&lt;br&gt;
Mentoring sessions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Courses - &lt;a href="https://youtu.be/zs4abEW9nNk"&gt;https://youtu.be/zs4abEW9nNk&lt;/a&gt;&lt;br&gt;
Why create a course?&lt;br&gt;
Youtube videos&lt;br&gt;
How to create a course?&lt;br&gt;
Create a course outline&lt;br&gt;
Grow an audience&lt;br&gt;
Platforms to sell a course&lt;br&gt;
Publish course to your own website&lt;br&gt;
Create your own Newsletter&lt;br&gt;
Ways to Get People to Buy Your Products&lt;br&gt;
Post-launch Discounts&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Digital Products - &lt;a href="https://youtu.be/ORbLO2rjHaQ"&gt;https://youtu.be/ORbLO2rjHaQ&lt;/a&gt;&lt;br&gt;
What products to create?&lt;br&gt;
Why digital products?&lt;br&gt;
Instant access&lt;br&gt;
Where to sell?&lt;br&gt;
How to create a product?&lt;br&gt;
How to write a book Google Docs&lt;br&gt;
Create page templates/Create page themes&lt;br&gt;
What to do when you don’t have ideas? - boost ideas&lt;br&gt;
Build an MVP&lt;br&gt;
Create your own Newsletter&lt;br&gt;
Growing Your Audience&lt;br&gt;
Sell anything by Creating a Bundle&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Software-as-a-service - &lt;a href="https://youtu.be/lnwifUqJ7HU"&gt;https://youtu.be/lnwifUqJ7HU&lt;/a&gt;&lt;br&gt;
What the hell is SaaS?&lt;br&gt;
How to build a SaaS?&lt;br&gt;
Ways to start&lt;br&gt;
How to deal with competitors&lt;br&gt;
Lean thinking&lt;br&gt;
Build features that people actually use&lt;br&gt;
How to Validate Feature and Product Ideas Before You Build&lt;br&gt;
Choosing the Right Tech Stack for Your Project&lt;br&gt;
Scaling tips&lt;br&gt;
Trending Tech Stack&lt;br&gt;
Choosing the Pricing model for your business&lt;br&gt;
A typical validated learning process&lt;br&gt;
Analysis Data&lt;br&gt;
What is User testing?&lt;br&gt;
What is Split testing?&lt;br&gt;
Saas Marketing Examples&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Why&amp;amp;how To Blog - &lt;a href="https://youtu.be/E5XNUr04p7k"&gt;https://youtu.be/E5XNUr04p7k&lt;/a&gt;&lt;br&gt;
Why start blogging?&lt;br&gt;
Write articles&lt;br&gt;
How to increase Motivation as a Blogger&lt;br&gt;
Stop thinking and start doing&lt;br&gt;
Find your audience&lt;br&gt;
What do you need to start blogging?&lt;br&gt;
How to create a blog?&lt;br&gt;
How to grow an audience&lt;br&gt;
Create an email newsletter&lt;br&gt;
How to make money blogging?&lt;br&gt;
How to add Ads on the blog&lt;br&gt;
How to Affiliate and Market a blog?&lt;br&gt;
Make money via Sponsored posts&lt;br&gt;
How to promote services and products?&lt;br&gt;
Create content and get paid&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Freelancing - &lt;a href="https://youtu.be/JjGTrdJkiJs"&gt;https://youtu.be/JjGTrdJkiJs&lt;/a&gt;&lt;br&gt;
How to create a website&lt;br&gt;
Be Professional - Register an LLC&lt;br&gt;
Why choose Freelancing?&lt;br&gt;
How to start freelancing&lt;br&gt;
Outsourcing&lt;br&gt;
How to create a good portfolio&lt;br&gt;
What a great portfolio should contain&lt;br&gt;
How to charge for a website&lt;br&gt;
Hourly Pricing&lt;br&gt;
Project-based Pricing&lt;br&gt;
Value-based Pricing&lt;br&gt;
How to get clients?&lt;br&gt;
Tips - how to get more clients&lt;br&gt;
What are Google Ads&lt;br&gt;
Keywords to bid as a freelancer&lt;br&gt;
How to get more sales/conversions&lt;br&gt;
Linkedin Ads Tips&lt;br&gt;
Linkedin InMail Ads Tips&lt;br&gt;
Build your own website&lt;br&gt;
Freelancing platforms&lt;br&gt;
Get clients fast as a freelancer&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Working As A Professional Developer - &lt;a href="https://youtu.be/uJKVk7cv3Dw"&gt;https://youtu.be/uJKVk7cv3Dw&lt;/a&gt;&lt;br&gt;
Opportunities When Starting Out&lt;br&gt;
How to Prepare for a Job&lt;br&gt;
Take Online Courses?&lt;br&gt;
What College Taught Me&lt;br&gt;
How to Learn Faster&lt;br&gt;
Make Your Free Time Count&lt;br&gt;
Effective Way to Improve Your Code by Reviewing Open Source Code&lt;br&gt;
Start Creating an Mvp&lt;br&gt;
Get Others Opinions&lt;br&gt;
Find a Mentor&lt;br&gt;
Create a Portfolio&lt;br&gt;
Portfolio Website Checklist&lt;br&gt;
Think Outside the Box&lt;br&gt;
Be Professional&lt;br&gt;
Job Application Tips&lt;br&gt;
Tips for Great Job Interviews&lt;br&gt;
Make Linkedin Profile Impressive&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mentoring - &lt;a href="https://youtu.be/Ni6Jlkj4Xuo"&gt;https://youtu.be/Ni6Jlkj4Xuo&lt;/a&gt;&lt;br&gt;
Monetize tutoring&lt;br&gt;
Practice your skills&lt;br&gt;
How much to Charge for online mentoring?&lt;br&gt;
Provide value mentoring and people will come like a stream&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Contributing To Open Source - &lt;a href="https://youtu.be/qVN9FIY0j4Y"&gt;https://youtu.be/qVN9FIY0j4Y&lt;/a&gt;&lt;br&gt;
What is Open Source?&lt;br&gt;
Can you make money with Open Source?&lt;br&gt;
Github Sponsors&lt;br&gt;
How to Engage people to Finance your work?&lt;br&gt;
Start a Patreon&lt;br&gt;
Set monthly audience goals&lt;br&gt;
Benefits of Open Source as a web developer&lt;br&gt;
Create a premium version of the Open Source project&lt;br&gt;
What is Freemium software&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#programming-buildinpublic-career"&gt;
  &lt;/a&gt;
  programming #buildinpublic #career
&lt;/h1&gt;

</description>
      <category>career</category>
      <category>programming</category>
      <category>leadership</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Kafka da Neden Partition Oluştururuz? 💫 🌌 ✨</title>
      <author>Gülsen 🦋</author>
      <pubDate>Thu, 20 Jan 2022 22:52:47 +0000</pubDate>
      <link>https://dev.to/gulsenkeskin/kafka-da-neden-partition-olustururuz-4fog</link>
      <guid>https://dev.to/gulsenkeskin/kafka-da-neden-partition-olustururuz-4fog</guid>
      <description>&lt;p&gt;&lt;strong&gt;Aggrigation yapabiliriz&lt;/strong&gt;: yani yazılan verilerin belli özelliklere göre toplanması. Producer'lerin verilerinin belirlenen özelliklerine göre toplanmasıdır.&lt;br&gt;
Verilerin sıralı bir şekilde toplanması (sorting - event sourcing)&lt;br&gt;
Daha hızlı okumak (parallelism)&lt;br&gt;
Verileri daha verimli saklamak (efficiency)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Round robin:&lt;/strong&gt; Gelen mesajları sırasıyla partitionlara bölüştürmek&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Aggregation:&lt;/strong&gt; Örneğin key değerini category olarak verirsek mesajlar kategoriye göre gruplandırılıp öyle gönderilir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sorting- event sourcing:&lt;/strong&gt; Örneğin customerId'yi key olarak verirsek login, add to cart, purchase (giriş yap, sepete ekle, satın alma) gibi kullanıcıların yaptığı işlemleri arka arkaya sıralar.&lt;/p&gt;

&lt;p&gt;Bir partition olsaydı okuma ve yazma performansı çok kötü olurdu yani paralelizm yapamazdık.&lt;/p&gt;

&lt;p&gt;Bir partition'dan aynı anda aynı kimliğe sahip sadece bir consumer okuyabilir.&lt;br&gt;
Partition kullanarak büyük boyutlu mesajları istediğimiz şekilde yönlendirebiliriz.&lt;br&gt;
Mesela büyük mesajları belli bir partition'a küçük mesajları belli bir partition'a yönlendirebiliriz.&lt;/p&gt;

&lt;p&gt;Leader partition : her partitionun replication kopyalarından biri lider olarak atanır bizde bu lider partitiona yazarız. Bu yazdığımız partition da diğer replication kopyalarına bu bilgiyi gönderip senkronize eder.&lt;br&gt;
Eğer bir nedenden dolayı lider olan partition çökerse kafka hemen yeni bir partition'u lider olarak seçer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kafkaya veri yazımı üç safhadan oluşur:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Kafkaya veri göndermek&lt;/li&gt;
&lt;li&gt;Verinin lider olan partition'a gönderilip saklanması&lt;/li&gt;
&lt;li&gt;Lider olan partition'un bu veriyi diğer kopya olan partition'lara aktarması&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Producer Acknowledgement:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Kafkaya veri gönderdiğimizde bu üç safhanın hangilerinin bitmesini veya tastik etmesi gerektiğini belirleyebiliyoruz buna &lt;strong&gt;acknowledgement&lt;/strong&gt; deniliyor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acks=0&lt;/strong&gt; (en hızlı ve riskli olan mesaj kaybolma şansı yüksek)&lt;br&gt;
Kafkaya gönder ve cevabı beklemeden devam et&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acks=1&lt;/strong&gt; (orta derece hızlı ve güvenli, Mesaj kaybolma şansı çok az)&lt;br&gt;
Kafkaya gönder ve sadece leader yazana kadar bekle&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acks= all, -1&lt;/strong&gt; (en yavaşı ve en güvenlisi , mesaj kaybolma şansı yok)&lt;br&gt;
Kafkaya gönder, leader yazmasını ve leader'in diğer partition'lara yazmasını bekle&lt;/p&gt;

</description>
      <category>kafka</category>
      <category>partition</category>
      <category>pubsub</category>
      <category>apache</category>
    </item>
    <item>
      <title>Understanding DNS (Domain Name Servers)</title>
      <author>Chris Benjamin</author>
      <pubDate>Thu, 20 Jan 2022 22:52:26 +0000</pubDate>
      <link>https://dev.to/chrisbenjamin/understanding-dns-domain-name-servers-34ph</link>
      <guid>https://dev.to/chrisbenjamin/understanding-dns-domain-name-servers-34ph</guid>
      <description>&lt;p&gt;Domain Name Servers (DNS) is a critical service that is part of every network and website in the world. DNS is crucial to how internet functions and allows your computer to find and access other computers and services across the world!&lt;/p&gt;

&lt;p&gt;If you have ever visited a website or sent an email, you are using DNS! In most cases, it just works!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lUm1A_kg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642718584257/sIXt4A_6B.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUm1A_kg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642718584257/sIXt4A_6B.png" alt="boxes showing common domain name extensions like .com .org" width="640" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-dns"&gt;
  &lt;/a&gt;
  What is DNS?
&lt;/h2&gt;

&lt;p&gt;DNS is like the Postal address system for the internet and local networks. For example, if you want to visit Twitter on your PC, you would type in Twitter.com in your favorite browser and will be almost instantly connected to Twitter's website. &lt;/p&gt;

&lt;p&gt;How does your computer know that when you type in Twitter.com to take you to the right computer and server out of the millions across the world? &lt;/p&gt;

&lt;p&gt;When you send emails, how does your computer know where the recipient is?  &lt;/p&gt;

&lt;p&gt;When you want to print to your wireless printer, how does your computer know where to send the print job? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The answer is DNS&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#analogy-postal-system"&gt;
  &lt;/a&gt;
  Analogy - Postal System
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uPFdDSBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642718644401/7MYkjAsSX.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uPFdDSBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642718644401/7MYkjAsSX.jpeg" alt="a picture of mailboxes" width="640" height="404"&gt;&lt;/a&gt;&lt;br&gt;
Imagine you are sending a letter in the mail from your house in Seattle, WA to your friend in Nashville, TN 📬.  When you mail that letter, your letter is carried by the postman back to the mail facility, it is then sent out with the rest of the outgoing mail to a sorting facility. These letters are then sorted and transferred to the next station, this happens multiple times until your letter finally arrives at your friends city. Your letter then is handed to a mail carrier who will bring it to your house. This whole process takes a matter of days. You don't have to understand how the layers of the postal routing system work to mail your letter and you can rest assured that it will reach the right place. &lt;/p&gt;

&lt;p&gt;This same philosophy applies when you are visiting a website. You type in the name of a service you wish to visit such as Twitter.com. Your computer makes a connection behind the scenes to your Router, your Modem, then your Internet Service Provider, then a root name server to determine which server has the address information, then another request is made to the root hint server to get the actual IP address of the service. This serve has the address in the form of an IP address which is a series of numbers. &lt;/p&gt;

&lt;p&gt;At this point, DNS has finished it's job and got the final address of the destination, routing kicks in and your computer makes a connection to the IP address that it received, your computer is connected to this numerical address behind the scenes where computer will perform a Get request to the web server and request the content on that server which you will see in your browser. &lt;/p&gt;

&lt;p&gt;As an example, one of the IP addresses that resolves from Twitter.com is 104.244.42.193. Could you imagine having to memorize the IP address number for each website that you wanted to visit?  &lt;/p&gt;

&lt;p&gt;Say you wanted to go to Facebook.com but you had to know the IP of 157.240.3.35, you could open your browser and type in &lt;a href="http://157.240.3.35"&gt;http://157.240.3.35&lt;/a&gt; and it would connect you to Facebook.com (go ahead, try it!). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h3&gt;

&lt;p&gt;Your computer makes several connections behind the scenes when you visit a website, and all of this happens almost instantly. The very first time you access a website, your computer has to load all of the content but it saves the DNS information, route information, and some of the content in various caches on your computer so that subsequent requests happen much faster.  In the below example. you can see what is called a trace report showing that there was 15 separate connections that it took to reach my website! It's incredible that all of this happens magically in the background for you. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kjbqLEfs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717778283/lnTiolF7F.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kjbqLEfs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717778283/lnTiolF7F.png" alt="MXtoolbox trace report for chrisbenjamin.dev" width="580" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#email-uses-dns"&gt;
  &lt;/a&gt;
  Email uses DNS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_y7LLDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642718656849/AoAxRz94x.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_y7LLDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642718656849/AoAxRz94x.jpeg" alt="showing emails leaving a mobile device and flying into the air" width="640" height="329"&gt;&lt;/a&gt;&lt;br&gt;
Email 📧 is the electronic version of a letter that we use to mail. Thankfully this service also uses DNS to route your email and ensure that it ends up in the right mailbox. It takes a similar journey as your physical mailed letter.  Have you ever sent an email and received back a Postmaster rejection error that your email wasn't delivered? That's the same as getting a returned letter in the mail. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#business-networks-use-dns"&gt;
  &lt;/a&gt;
  Business Networks use DNS
&lt;/h3&gt;

&lt;p&gt;All business networks use DNS the same way that the internet does for finding information. For example. if your company has a central file storage where you may save or access information. Your computer uses DNS to find the server that has the requested information and then connects your computer to that server or resource and provides the information. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dns-inventor"&gt;
  &lt;/a&gt;
  DNS Inventor
&lt;/h3&gt;

&lt;p&gt;We can thank Paul Mockapetris (@svnr2000) for the invention of DNS and the fact that we don't have to remember these IP addresses to visit the websites that services that we use every day. Source: &lt;a href="https://internethalloffame.org/inductees/paul-mockapetris"&gt;Internet Hall Of Fame&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dns-record-types"&gt;
  &lt;/a&gt;
  DNS Record Types
&lt;/h3&gt;

&lt;p&gt;DNS also handles the routing for everything with the domain name using different types of records. Every domain has DNS settings, which is how root hint servers get their information for your website. These settings can route your website, your email, sub-domains, and multiple other services. Some of the most common ones are listed below along with the services that they are used for. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;A Record&lt;/strong&gt; - This is used to tell DNS root servers the IP address for your domain. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;C Name Record&lt;/strong&gt; - This is used for subdomains. Say you own example.com but you also want to have blog.example.com. the "blog" portion of this address is a CName record which can point this part of the website to a different IP address in the event your blog is hosted somewhere other than your website. I use this for my own domain (chrisbenjamin.dev and blog.chrisbenjamin.dev) &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;MX Record&lt;/strong&gt; - This is used for mail routing. When someone sends you an email to your domain such as (&lt;a href="mailto:user@example.com"&gt;user@example.com&lt;/a&gt;) then DNS is used by the email servers to determine where to send that email&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TXT Record&lt;/strong&gt; - Text record, typically used for administrative notes, validation, or other security features for the domain. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;NS Record&lt;/strong&gt; - Name Server Record lets DNS servers know which server is responsible for resolving records on your domain name. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#testing-dns"&gt;
  &lt;/a&gt;
  Testing DNS
&lt;/h3&gt;

&lt;p&gt;You can check out DNS information for any website, it's all publicly accessible information. You can use built in tools on your computer such as &lt;strong&gt;nslookup&lt;/strong&gt; to find information from a command line, but if you prefer the graphical approach then my recommendation is MXToolbox SuperTool available &lt;a href="https://mxtoolbox.com/supertool.aspx"&gt;here&lt;/a&gt;. You can use the drop down to search through all available records for a domain and see what you can learn! &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NSLookup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4m7SjW1t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717232953/4qqENNvuB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4m7SjW1t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717232953/4qqENNvuB.png" alt="windows command prompt showing the command line version of nslookup and resolving twitter.com and facebook.com" width="428" height="351"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MXToolBox&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zqDgp_2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642716811742/vc4C-ROcs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zqDgp_2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642716811742/vc4C-ROcs.png" alt="Showing the mxtoolbox website resolving DNS records for chrisbenjamin.dev" width="740" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changing-dns-records"&gt;
  &lt;/a&gt;
  Changing DNS Records
&lt;/h3&gt;

&lt;p&gt;When a DNS record is changed, such as moving your website from one hosting provider to another, or simply adding a new C Name record for your blog site. These changes go through a process called propagation. During this time, many DNS root servers will still be pointing to old records because of DNS caching, or may not have the record yet. This process can take up to 72 hours to propagate around the whole world so it's important to plan your changes wisely. Some servers will pick up the change as soon as 5 minutes, while others will take several hours. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dns-problems"&gt;
  &lt;/a&gt;
  DNS Problems
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fclDquEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717934013/zYzyZHitO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fclDquEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717934013/zYzyZHitO.png" alt="A meme about dns, &amp;quot;it's not dns&amp;quot;, &amp;quot;there's no way it's dns&amp;quot;, &amp;quot;it was dns&amp;quot;" width="500" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When DNS problems occur, there is usually a failure along one of the many paths that the computer uses to resolve the domain name. When troubleshooting DNS it's best to follow the chain and see where the problem occurs. There are numerous errors caused by DNS since it's the heart of almost all network communication between computers and servers around the world. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;My goal was for you to learn at least one thing new in this article regarding DNS. This article has covered some of the basics of what DNS is, why it's important, the basic principals of how it works, and how to check DNS records yourself.  If you are a web developer, spend some time familiarizing yourself with DNS if you are not conformable with it, it will be important when it comes time to deploying your website on the internet. &lt;/p&gt;

&lt;p&gt;I’m on @buymeacoffee. If you like my work, you can buy me a taco and share your thoughts 🎉🌮&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/ChrisBenjamin"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee" width="545" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>computerscience</category>
    </item>
  </channel>
</rss>
