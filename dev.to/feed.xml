<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Enabling Quake Mode on Windows Terminal</title>
      <author>Michael Crump</author>
      <pubDate>Wed, 26 May 2021 03:59:10 +0000</pubDate>
      <link>https://dev.to/mbcrump/enabling-quake-mode-on-windows-terminal-161i</link>
      <guid>https://dev.to/mbcrump/enabling-quake-mode-on-windows-terminal-161i</guid>
      <description>&lt;p&gt;Hello everyone, &lt;/p&gt;

&lt;p&gt;I just got my hands on the new Windows Terminal preview and wanted to share how to enable "Quake Mode" which allows you to open a new terminal instance from anywhere in Windows by pressing the Win + ` key. &lt;/p&gt;

&lt;p&gt;You must be using the latest version of Windows Terminal Preview.  &lt;/p&gt;

&lt;p&gt;Just place this code in your "actions" section: &lt;/p&gt;

&lt;p&gt;{ "command": { "action": "globalSummon", "name": "_quake", "dropdownDuration": 200, "toggleVisibility": true, "monitor": "any", "desktop": "toCurrent" }, "keys": "win+`" },&lt;/p&gt;

&lt;p&gt;Read the &lt;a href="https://docs.microsoft.com/en-us/windows/terminal/customize-settings/actions#global-commands"&gt;docs&lt;/a&gt; for more information on the Global Commands that you can use.&lt;/p&gt;

&lt;p&gt;Or you can watch the video below and hopefully you'll find it helpful! &lt;/p&gt;

&lt;p&gt;Video (6 mins)&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vVy8XnDnslU"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;Conclusion&lt;/p&gt;

&lt;p&gt;Feel free to checkout my &lt;a href="https://twitch.tv/mbcrump"&gt;Twitch streams&lt;/a&gt; as we learn about security and app development or you can watch the condensed version of all of my streams by subscribing to my &lt;a href="https://youtube.com/mbcrump"&gt;YouTube&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Stay connected with me on social platforms for daily software development news.&lt;/p&gt;

&lt;p&gt;-&lt;a href="https://twitter.com/intent/follow?screen_name=mbcrump"&gt;Twitter&lt;/a&gt; | &lt;a href="https://twitch.tv/mbcrump"&gt;Twitch&lt;/a&gt; | &lt;a href="https://instagram.com/mbcrump"&gt;Instagram&lt;/a&gt; | &lt;a href="https://youtube.com/mbcrump"&gt;YouTube&lt;/a&gt; | &lt;a href="https://github.com/mbcrump"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.michaelcrump.net"&gt;Website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>productivity</category>
      <category>terminal</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What is Null Safety Operator in PHP 8 and why is it next big thing in PHP</title>
      <author>Lakhveer Bawa</author>
      <pubDate>Wed, 26 May 2021 02:40:44 +0000</pubDate>
      <link>https://dev.to/bawa_geek/what-is-null-safety-operator-in-php-8-and-why-is-it-next-big-thing-in-php-377b</link>
      <guid>https://dev.to/bawa_geek/what-is-null-safety-operator-in-php-8-and-why-is-it-next-big-thing-in-php-377b</guid>
      <description>&lt;p&gt;PHP is known to have a very bad reputation among developers because of its loose type system and little weak technical design.&lt;br&gt;
However with every new version, PHP is changing the perception of developers.&lt;br&gt;
Recent improvements in PHP 7 and then PHP 8 brought many features that you would only see in languages like Java, C++, Dart etc.&lt;/p&gt;

&lt;p&gt;One of those features/improvement brought by PHP 8 is easier Null Safety.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#null-safety-has-lot-of-significance-in-programming-as-program-crashes-caused-by-null-values-are-highly-popular"&gt;
  &lt;/a&gt;
  Null Safety has lot of significance in programming as, Program Crashes caused by Null Values are highly popular.
&lt;/h5&gt;
&lt;h2&gt;
  &lt;a href="#what-is-null-safety-operator"&gt;
  &lt;/a&gt;
  What is Null Safety Operator:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/Xepskm6YoEEifd1rb7/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Xepskm6YoEEifd1rb7/giphy.gif" alt="wondering"&gt;&lt;/a&gt;&lt;br&gt;
Null-safe operator is a new syntax in PHP 8.0, that provides optional chaining feature to PHP.&lt;/p&gt;

&lt;p&gt;The null-safe operator allows reading the value of property and method return value chaining, where the null-safe operator short-circuits the retrieval if the value is null, without causing any errors.&lt;/p&gt;

&lt;p&gt;The syntax is similar to the property/method access operator (-&amp;gt;), and following the nullable type pattern, the null-safe operator is ?-&amp;gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$foo&lt;/span&gt;&lt;span class="o"&gt;?-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="o"&gt;?-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Null safe operator silently returns null if the expression to the left side evaluates to null.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getAddress&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;?Address&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getCountry&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nv"&gt;$country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$customer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getAddress&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getCountry&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the snippet above, the Customer::getAddress() method return value is nullable; It can return a null value, or an object of Address class.&lt;/p&gt;

&lt;p&gt;The $customer-&amp;gt;getAddress()-&amp;gt;getCountry() chain is not "null safe", because the return value of getAddress can be null, and PHP throws an error when it tries to call getCountry() method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Fatal&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Uncaught&lt;/span&gt; &lt;span class="nc"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Call&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;member&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getCountry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kt"&gt;on&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="o"&gt;:...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To safely access the address, it was necessary to check the null return values before further accessing the return value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$customer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getAddress&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$address&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$address&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getCountry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$customer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getAddress&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$address&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$address&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getCountry&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The null-safe operator solves this by short-circuiting the property/method access, and returning null immediately if the left side of the operator is null, without executing the rest of the expression.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://php.watch/versions/8.0"&gt;PHP 8 new Features&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/QEIC6GZIEGStO/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/QEIC6GZIEGStO/giphy.gif" alt="bye"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>php</category>
    </item>
    <item>
      <title>Stripe Goes No-Code — Stripe Payment Links Explained</title>
      <author>swyx</author>
      <pubDate>Wed, 26 May 2021 02:17:37 +0000</pubDate>
      <link>https://dev.to/swyx/stripe-goes-no-code-stripe-payment-links-explained-4im</link>
      <guid>https://dev.to/swyx/stripe-goes-no-code-stripe-payment-links-explained-4im</guid>
      <description>&lt;p&gt;It's official: With the new &lt;a href="https://stripe.com/en-sg/payments/payment-links"&gt;Payment Links&lt;/a&gt; feature, Stripe has entered the No Code market.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bLNFJNoL9e8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-its-a-big-deal"&gt;
  &lt;/a&gt;
  Why It's a Big Deal
&lt;/h2&gt;

&lt;p&gt;You can think of the process of getting money from your customers to yourself in 3 stages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Running a Server for backend logic and secrets&lt;/li&gt;
&lt;li&gt;Building a Frontend UI for customers to enter in their payment details and complete their purchase&lt;/li&gt;
&lt;li&gt;Creating a &lt;a href="https://stripe.com/docs/payments/payment-intents#:~:text=Each%20PaymentIntent%20typically%20correlates%20with,collect%2C%20and%20the%20desired%20currency."&gt;&lt;code&gt;PaymentIntent&lt;/code&gt;&lt;/a&gt; to track a single customer session from end to end. These must be created uniquely for each transaction.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these stages are immensely technical. &lt;br&gt;
Stripe's recent product releases have progressively eliminated each one of these stages, opening Stripe up to the 99.6% of humanity that doesn't code!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#towards-stripe-checkout"&gt;
  &lt;/a&gt;
  Towards Stripe Checkout
&lt;/h2&gt;

&lt;p&gt;Stripe's roots are famously developer centric. The default approach was to only offer a serverside SDK, and let you &lt;a href="https://stripe.com/docs/payments/integration-builder"&gt;wire everything else up yourself&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This gives you maximum control, but it can mean a lot of code to write and maintain. You not only have to code up an attractive, reassuring UI for people to enter their credit card details (though &lt;a href="https://stripe.com/en-sg/payments/elements"&gt;Stripe Elements&lt;/a&gt; makes that easier), you also have to continually run a server just to take even a small one-off payment. If your server goes down , or you screw up some JavaScript, there goes your money!&lt;/p&gt;

&lt;p&gt;So along comes &lt;a href="https://stripe.com/en-sg/payments/elements"&gt;Stripe Checkout&lt;/a&gt;, where Stripe hosts your UI:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EMzAeaWh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://b.stripecdn.com/docs/assets/overview.6a4ea4b380bea93a5be8a820f3eb7c35.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EMzAeaWh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://b.stripecdn.com/docs/assets/overview.6a4ea4b380bea93a5be8a820f3eb7c35.gif" alt="https://b.stripecdn.com/docs/assets/overview.6a4ea4b380bea93a5be8a820f3eb7c35.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wonderful! You not only don't have to code the UI or host it, Stripe is continually improving the checkout page on your behalf. It is even hosting it &lt;strong&gt;on their domain&lt;/strong&gt;, and most people will trust a Stripe domain over your own when entering in their credit card details.&lt;/p&gt;

&lt;p&gt;But.&lt;/p&gt;

&lt;p&gt;Look upon &lt;a href="https://stripe.com/docs/payments/accept-a-payment?platform=web&amp;amp;ui=checkout#create-a-checkout-session"&gt;the Stripe Checkout docs&lt;/a&gt; and realize that the &lt;code&gt;PaymentIntent&lt;/code&gt; section is not handled at all - you STILL have to write some code and run at least a serverless function to get this thing working!&lt;/p&gt;

&lt;p&gt;I know this all too well because I spent a day learning and debugging this when I was &lt;a href="https://dev.to/swyx/lessons-and-regrets-from-my-25000-launch-3aaa"&gt;launching my self published book&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stripe-payment-links"&gt;
  &lt;/a&gt;
  Stripe Payment Links
&lt;/h2&gt;

&lt;p&gt;Since everyone was writing little serverless functions to coordinate all the &lt;code&gt;PaymentIntent&lt;/code&gt; creation and offer a nice URL for all this, the natural next step is for Stripe to do it for you instead!&lt;/p&gt;

&lt;p&gt;You can think of &lt;a href="https://stripe.com/en-sg/payments/payment-links"&gt;Stripe Payment Links&lt;/a&gt; as a thin layer atop of Stripe Checkout:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---CU1_WGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ald99mra5o9qjjt1xui5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---CU1_WGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ald99mra5o9qjjt1xui5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the interface between your user and your business is just a simple URL - the web's firstborn API. &lt;/p&gt;

&lt;p&gt;Getting started with it could not be easier.&lt;/p&gt;

&lt;p&gt;Assuming you have some &lt;a href="https://stripe.com/docs/billing/prices-guide"&gt;products and prices already set up&lt;/a&gt; in Stripe, head to your Stripe Dashboard and look for "Payment links" under the Products section. &lt;a href="https://dashboard.stripe.com/payment-links"&gt;Here is a direct link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From here you can create a New link for each product, in seconds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gy43-o5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j91nd0eohyyrpika39dw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gy43-o5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j91nd0eohyyrpika39dw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The final Payment link will just look like this: &lt;a href="https://buy.stripe.com/4gwcQB0I9dVpeIw5km"&gt;https://buy.stripe.com/4gwcQB0I9dVpeIw5km&lt;/a&gt; (yes, that's a real Payment link URL!). You can now use it inside of low and no code setups like HTML, Wordpress, or WebFlow.&lt;/p&gt;

&lt;p&gt;But perhaps the biggest 🤯 of all is that &lt;strong&gt;you don't even need a website to take the money over the Internet anymore&lt;/strong&gt;. You can now drop that link over a Discord or Slack app, or even place it as your "link in bio". &lt;/p&gt;

&lt;p&gt;That's the beauty of the URL - it's accepted everywhere. As all the best payment solutions should be.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparisons"&gt;
  &lt;/a&gt;
  Comparisons
&lt;/h2&gt;

&lt;p&gt;Now that Stripe is handling all three stages of the ecommerce process for the first time, it is inevitable to start comparing it to other vendors that have done the same since forever. Before Stripe, you could easily have spun up a Shopify or Gumroad site and taken payments that way. Is Stripe now going for their lunch?&lt;/p&gt;

&lt;p&gt;I don't have any inside info on this, but my intuition is: No. People hire Gumroad and Shopify to do very different jobs. &lt;/p&gt;

&lt;p&gt;For example, Gumroad: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;acts as a &lt;a href="https://www.digitalocean.com/blog/starter-apps-for-any-indie-business/#:~:text=Gumroad%20had%20the%20features%20Adam,him%20of%20those%20burdens%20too."&gt;Merchant of Record&lt;/a&gt; (to drastically simplify tax collection and compliance)&lt;/li&gt;
&lt;li&gt;provides social proof (in the form of customer reviews)&lt;/li&gt;
&lt;li&gt;platform traffic and revenue via &lt;a href="https://gumroad.com/discover"&gt;its Discover marketplace&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;fulfilment (aka if you are selling digital content, it hosts your files for your customers to download)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In exchange for all that, it takes &lt;a href="https://sacra.com/research/gumroad-android-creator-economy/"&gt;6.5% of your sales&lt;/a&gt;. Stripe Payment Links are available for no extra charge on Stripe's standard &lt;a href="https://stripe.com/en-sg/pricing"&gt;integrated pricing&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tech</category>
      <category>stripe</category>
      <category>creators</category>
    </item>
    <item>
      <title>Top 10 sites / extensions you should use if you are a Frontend Developer 😎</title>
      <author>Luis Cutiopala</author>
      <pubDate>Wed, 26 May 2021 02:10:04 +0000</pubDate>
      <link>https://dev.to/cutioluis/top-10-sites-extensions-you-should-use-if-you-are-a-frontend-developer-1110</link>
      <guid>https://dev.to/cutioluis/top-10-sites-extensions-you-should-use-if-you-are-a-frontend-developer-1110</guid>
      <description>&lt;h1&gt;
  &lt;a href="#cssgradient-%F0%9F%96%8C"&gt;
  &lt;/a&gt;
  &lt;a href="https://cssgradient.io/gradient-backgrounds/"&gt;CssGradient&lt;/a&gt; 🖌
&lt;/h1&gt;

&lt;p&gt;Here you will find gradients of all types so that your website is at another level&lt;br&gt;
&lt;a href="https://dev.toIMAGEN"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yyLkCGlV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG%3Ftoken%3DAOR56HJDVC54H2RGL3F4BDTAVWRFS" alt="IMAGEN" title="IMAGEN"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#color-picker"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/color-picker/clkoagfbjkilljcajbbielofkeokbhma/related?hl=es"&gt;Color Picker&lt;/a&gt;🎈
&lt;/h1&gt;

&lt;p&gt;Look for that color that you like from your favorite website&lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG?token=AOR56HJBTRRO2MVF3RMNX4LAVWSLA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6jbKw-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG%3Ftoken%3DAOR56HJBTRRO2MVF3RMNX4LAVWSLA" alt="Imagen" title="Imagen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#glyphy"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.glyphy.io/?ref=blog.moeminmamdouh.com"&gt; Glyphy&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Glyphy es una sencilla herramienta en línea que te permite copiar fácilmente caracteres y símbolos especiales (también conocidos como glifos) al portapapeles de tu dispositivo para que luego puedas pegarlos en cualquier documento o aplicación que desees.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG?token=AOR56HLQXTPZ5YWWOPRZFTLAVWTBW"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--plkq2Koi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG%3Ftoken%3DAOR56HLQXTPZ5YWWOPRZFTLAVWTBW" alt="Imagen" title="Imagen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#haikeiapp"&gt;
  &lt;/a&gt;
  &lt;a href="https://app.haikei.app/"&gt;Haikei.app &lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This is my favorite, you can generate patterns like: globs, waves, Blurry Gradients etc.&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/3.PNG?token=AOR56HKMZHSUYME5LCK746TAVWVV2"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRyYDbrP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/3.PNG%3Ftoken%3DAOR56HKMZHSUYME5LCK746TAVWVV2" alt="asd" title="asd"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rayso"&gt;
  &lt;/a&gt;
  &lt;a href="https://ray.so/"&gt;Ray.so&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Transform your code to an impressive and very colorful card&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/2.PNG?token=AOR56HIG2KJX4TJSBDS3JILAVWVOQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8lt351Xz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/2.PNG%3Ftoken%3DAOR56HIG2KJX4TJSBDS3JILAVWVOQ" alt="g" title="g"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#icomoon"&gt;
  &lt;/a&gt;
  &lt;a href="https://icomoon.io/"&gt;IcoMoon&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Find all the icons for your website in svg, png and even imported css formats&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG?token=AOR56HL5RCR22FFVAT3JG2TAVWUWW"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yrAwSbNa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/Capture.PNG%3Ftoken%3DAOR56HL5RCR22FFVAT3JG2TAVWUWW" alt="img" title="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#neumorphismio"&gt;
  &lt;/a&gt;
  &lt;a href="https://neumorphism.io/#e0e0e0"&gt;Neumorphism.io &lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Create awesome shadows ready to implement in all your Css&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/cutioluis/images/main/4.PNG?token=AOR56HPENEK7OKZJRTTVD6TAVWWZM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VjNEBQa3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cutioluis/images/main/4.PNG%3Ftoken%3DAOR56HPENEK7OKZJRTTVD6TAVWWZM" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#andi"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.ssa.gov/accessibility/andi/help/install.html"&gt;ANDI&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;ANDI is like having an expert at your side, helping you ensure your website is meeting accessibility standards. Include ANDI in screenshots during your manual accessibility review. Use ANDI during development to help you build accessible websites.&lt;/p&gt;

&lt;p&gt;Whether you're an accessibility expert or you're new to Section 508 compliance, ADA compliance, or WCAG standards, you should definitely check out ANDI.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#editormd"&gt;
  &lt;/a&gt;
  &lt;a href="https://pandao.github.io/editor.md/en.html"&gt;Editor.md&lt;/a&gt;  🍳
&lt;/h1&gt;

&lt;p&gt;Editor.md is a markdown Editor if you don't know much about md this tool will help you, it will be used to make descriptions of your GitHub file or make notes&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-developer-tools"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?utm_source=chrome-ntp-icon"&gt;React Developer Tools&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;React Developer Tools is a Chrome DevTools extension for the open-source React JavaScript library. It allows you to inspect the React component hierarchies in the Chrome Developer Tools.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>@okikio/animate - animejs but built on the Web Animation API.</title>
      <author>Okiki</author>
      <pubDate>Wed, 26 May 2021 01:17:57 +0000</pubDate>
      <link>https://dev.to/okikio/okikio-animate-animejs-but-built-on-the-web-animation-api-nin</link>
      <guid>https://dev.to/okikio/okikio-animate-animejs-but-built-on-the-web-animation-api-nin</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-is-the-web-animation-api"&gt;What is the Web Animation API?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-does-okikioanimate-fit-in"&gt;How does @okikio/animate fit in?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples--demos"&gt;Examples &amp;amp; Demos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;TLDR&lt;/strong&gt; &lt;code&gt;@okikio/animate&lt;/code&gt; is basically &lt;code&gt;animejs&lt;/code&gt; but built on the Web Animation API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@okikio/animate"&gt;&lt;code&gt;@okikio/animate&lt;/code&gt;&lt;/a&gt; is an animation library for the modern web. It was inspired by animate plus, and animejs; &lt;a href="https://www.npmjs.com/package/@okikio/animate"&gt;@okikio/animate&lt;/a&gt; is a Javascript animation library focused on performance and ease of use. It  utilizes the Web Animation API to deliver butter smooth animations at a small size, it weighs &lt;strong&gt;~5.36 KB&lt;/strong&gt; (minified and gzipped).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-web-animation-api"&gt;
  &lt;/a&gt;
  What is the Web Animation API?
&lt;/h2&gt;

&lt;p&gt;The Web Animations API lets us construct animations and control their playback with JavaScript. The Web Animations API opens the browser’s animation engine to developers and manipulation by JavaScript. This API was designed to underlie implementations of both CSS Animations and CSS Transitions, and leaves the door open to future animation effects. It is one of the most performant ways to animate on the Web, letting the browser make its own internal optimizations without hacks, coercion, or Window.requestAnimationFrame().&lt;/p&gt;

&lt;p&gt;With the Web Animations API, we can move interactive animations from stylesheets to JavaScript, separating presentation from behavior. We no longer need to rely on DOM-heavy techniques such as writing CSS properties and scoping classes onto elements to control playback direction. And unlike pure, declarative CSS, JavaScript also lets us dynamically set values from properties to durations. For building custom animation libraries and creating interactive animations, the Web Animations API might be the perfect tool for the job. Let's see what it can do! &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API"&gt;MDN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The API hooks into right into the browsers CSS Animations &amp;amp; Transitions in order to produce highly efficient animations, it is by far the most efficient way to create animataions on the Web.&lt;/p&gt;

&lt;p&gt;For the rest of this article I will be refering to the Web Animation API as WAAPI.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-okikioanimate-fit-in"&gt;
  &lt;/a&gt;
  How does &lt;a class="mentioned-user" href="https://dev.to/okikio"&gt;@okikio&lt;/a&gt;
/animate fit in?
&lt;/h2&gt;

&lt;p&gt;The WAAPI is very open in design it is functional on it's own but it's not the most developer friendly or intuitive API, so, I developed &lt;code&gt;@okikio/animate&lt;/code&gt; to act as an efficient wrapper around the WAAPI, to introduce the features you know and love from other more mature animation libraries with some added features to the high performance nature of the WAAPI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/okikio/native/tree/master/packages/animate#readme"&gt;Read more...&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;@okikio/animate&lt;/code&gt; is heavily inspired by &lt;a href="https://animejs.com/"&gt;animejs&lt;/a&gt; and &lt;a href="https://github.com/bendc/animateplus"&gt;animateplus&lt;/a&gt;, as such it uses very similar API's and formats.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@okikio/animate&lt;/code&gt; create animations by creating instances of &lt;code&gt;Animate&lt;/code&gt;, a class that acts as a wrapper around the Web Animation API. To create new instances of the &lt;code&gt;Animate&lt;/code&gt; class, you can either import the &lt;code&gt;Animate&lt;/code&gt; class and do this, &lt;code&gt;new Animate({ ... })&lt;/code&gt; or import the &lt;code&gt;animate&lt;/code&gt; (lowercase) method and do this, &lt;code&gt;animate({ ... })&lt;/code&gt;. The &lt;code&gt;animate&lt;/code&gt; method creates new instances of the &lt;code&gt;Animate&lt;/code&gt; class and passes the options it recieves as arguments to the &lt;code&gt;Animate&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Animate&lt;/code&gt; class recieves a set of targets to animate, it then creates a list of Web Animation API &lt;code&gt;Animation&lt;/code&gt; instances, along side a main animation, which is small &lt;code&gt;Animation&lt;/code&gt; instance that is set to animate the opacity of a non visible element, the &lt;code&gt;Animate&lt;/code&gt; class then plays each &lt;code&gt;Animation&lt;/code&gt; instances keyframes including the main animation.&lt;/p&gt;

&lt;p&gt;The main animation is there to ensure accuracy in different browser vendor implementation of the Web Animation API. The main animation is stored in &lt;code&gt;Animate.prototype.mainAnimation: Animation&lt;/code&gt;, the other &lt;code&gt;Animation&lt;/code&gt; instances are stored in a &lt;code&gt;Manager&lt;/code&gt; (from &lt;a href="https://www.npmjs.com/package/@okikio/manager"&gt;@okikio/manager&lt;/a&gt;) &lt;code&gt;Animate.prototype.animations: Manager&amp;lt;HTMLElement, Animation&amp;gt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@okikio/animate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Do note, on the web you need to do this, if you installed it via the script tag:&lt;/span&gt;
&lt;span class="c1"&gt;// const { animate } = window.animate;&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="c1"&gt;// Units are added automatically for transform CSS Properties&lt;/span&gt;
        &lt;span class="na"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// In miliseconds&lt;/span&gt;
        &lt;span class="na"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The Animation is done...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/okikio/embed/mdPwNbJ?height=600&amp;amp;default-tab=js,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can basically port all your code from &lt;code&gt;animejs&lt;/code&gt; to &lt;code&gt;@okikio/animate&lt;/code&gt; with little to no issues.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;@okikio/animate&lt;/code&gt; only supports automatic units on transform functions e.g. translateX, translate, scale, skew, etc..., it also supports the &lt;code&gt;targets&lt;/code&gt; keyword for settings targets and functions as animation options.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.el&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;

    &lt;span class="c1"&gt;// You need to put units on CSS properties that are not transforms&lt;/span&gt;
    &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;500px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;total&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// ...&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#examples-amp-demos"&gt;
  &lt;/a&gt;
  Examples &amp;amp; Demos
&lt;/h2&gt;

&lt;p&gt;You can check out some more complex examples at &lt;a href="https://okikio.github.io/native/demo/animate"&gt;okikio.github.io/native/demo/animate&lt;/a&gt;, and &lt;a href="https://codepen.io/collection/rxOEBO"&gt;codepen.io/collection/rxOEBO&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;@okikio/animate&lt;/code&gt; is a wrapper around the Web Animation API that allows uou to use all the features you love from &lt;code&gt;animejs&lt;/code&gt; and other animation libraries, in a small and concise package.&lt;/p&gt;

&lt;p&gt;Read more about it on &lt;a href="https://npmjs.com/package/@okikio/animate"&gt;npm&lt;/a&gt; or &lt;a href="https://github.com/okikio/native/tree/master/packages/animate#readme"&gt;Github&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>webanimation</category>
      <category>typescript</category>
      <category>webperf</category>
    </item>
    <item>
      <title>5 Steps to become Frontend Developer</title>
      <author>Chadi</author>
      <pubDate>Wed, 26 May 2021 00:13:26 +0000</pubDate>
      <link>https://dev.to/chadi/5-steps-to-become-frontend-developer-5151</link>
      <guid>https://dev.to/chadi/5-steps-to-become-frontend-developer-5151</guid>
      <description>&lt;p&gt;1- you should learn Html and Css basics.&lt;br&gt;
2- You have an idea about Responsive Web Designs&lt;br&gt;
3- You learn Css framework &lt;br&gt;
4- Take a look at UI/UX&lt;br&gt;
5- Learn javascript&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How can you send automated messages via WhatsApp with Node.js</title>
      <author>Carlos Sánchez</author>
      <pubDate>Tue, 25 May 2021 23:36:03 +0000</pubDate>
      <link>https://dev.to/carlosvldz/how-can-you-send-automated-messages-via-whatsapp-with-node-js-5387</link>
      <guid>https://dev.to/carlosvldz/how-can-you-send-automated-messages-via-whatsapp-with-node-js-5387</guid>
      <description>&lt;h1&gt;
  &lt;a href="#how-you-can-use-nodejs-to-send-messages-via-whatsapp-with-twilios-api"&gt;
  &lt;/a&gt;
  How you can use Node.js to send messages via WhatsApp with Twilio's API.
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#first-here-the-things-that-you-need"&gt;
  &lt;/a&gt;
  First, here the things that you need:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Node and npm installed&lt;/li&gt;
&lt;li&gt;Create an account with  &lt;a href="https://www.twilio.com/try-twilio"&gt;Twilio&lt;/a&gt;  (it's free)&lt;/li&gt;
&lt;li&gt;And finally, Twilio and dotenv library&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you sign up for the Twilio account, activate the Sandbox for Whatsapp. This enable you a shared phone number and allows you to test with WhatsApp service. &lt;/p&gt;

&lt;p&gt;Then you have to opt in sending a message to the phone number provided from the sandbox. The message should say "join mass-there", if everything is ok you will receive a confirmation response. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sMULpDVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7iqeiows90zf0mrx8n6d.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sMULpDVD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7iqeiows90zf0mrx8n6d.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-lets-start-with-nodejs"&gt;
  &lt;/a&gt;
  Now let's start with Node.js
&lt;/h2&gt;

&lt;p&gt;Once you are in the directory where is created the project, in the terminal run the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install twilio@3.30.0 dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first one to iniciate a &lt;strong&gt;package.json&lt;/strong&gt; and the second one for install the dependencies.&lt;/p&gt;

&lt;p&gt;The next step is create the file &lt;strong&gt;index.js&lt;/strong&gt; with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { config } = require('./config');

const accountSid = config.sid;
const authToken = config.token;
const client = require('twilio') (accountSid, authToken);

client.messages.create({
    from: 'whatsapp:+14155238886',
    body: 'Hello world this is CarlosVldz!!!',
    to: 'whatsapp:+5215555555555'
}).then(message =&amp;gt; console.log(message.sid));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(Don't forget replace the phone numbers in this example with your sandbox number and a personal number.)&lt;/p&gt;

&lt;p&gt;Finally I used &lt;strong&gt;dotenv&lt;/strong&gt; to configure the environment variables &lt;strong&gt;TWILIO_ACCOUNT_SID&lt;/strong&gt; and &lt;strong&gt;TWILIO_AUTH_TOKEN&lt;/strong&gt; with their values from the account credentials. You can find both in your Twilio console. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;.env.example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TWILIO_ACCOUNT_SID = "Your account sid"

TWILIO_AUTH_TOKEN = "Your auth token"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your terminal run this last command to send the WhatsApp message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your phone check WhatsApp and you should have a new chat like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eQapZqlu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gk54d2el2ysovnwx6h7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eQapZqlu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gk54d2el2ysovnwx6h7.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you liked! (:&lt;/p&gt;

</description>
      <category>node</category>
      <category>twilio</category>
      <category>whatsapp</category>
      <category>automated</category>
    </item>
    <item>
      <title>Entendendo as funções Map, reduce e filter</title>
      <author>Keren Arielle</author>
      <pubDate>Tue, 25 May 2021 23:30:09 +0000</pubDate>
      <link>https://dev.to/kerenarielle/entendendo-as-funcoes-map-reduce-e-filter-hj7</link>
      <guid>https://dev.to/kerenarielle/entendendo-as-funcoes-map-reduce-e-filter-hj7</guid>
      <description>&lt;p&gt;A vida de um programador é baseada em alterar um array quase todos os dias. Quem nunca precisou extrair um dado de alguma API que retorna um array gigante?. &lt;/p&gt;

&lt;p&gt;No post de hoje vou contar um pouco de cada função de manipulação de array.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#map"&gt;
  &lt;/a&gt;
  MAP
&lt;/h2&gt;

&lt;p&gt;É possível percorrer todos os item do array, executar alguma transformação nesses itens e retornar um novo array sem modificar o atual.&lt;/p&gt;

&lt;p&gt;VAMOS AO EXEMPLO:&lt;/p&gt;

&lt;p&gt;Você tem um array de número:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fyVzRWbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp4jcsnklh7je6svil6f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fyVzRWbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp4jcsnklh7je6svil6f.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eu quero que nesse array todos os número sejam multiplicado por 2, então você faria um &lt;strong&gt;MAP&lt;/strong&gt; desse array, pegando o item e multiplicando por dois. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_AIlpHkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hx2huv7whlqbvio8b6t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_AIlpHkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hx2huv7whlqbvio8b6t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Porém o map sempre retorna um array &lt;em&gt;novo&lt;/em&gt;, ele não modifica o atual, por conta disso atribui esse novo retorno na variável &lt;strong&gt;resultArray&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#filter"&gt;
  &lt;/a&gt;
  Filter
&lt;/h2&gt;

&lt;p&gt;Como o próprio nome já diz filtro! Ele é usado para quando precisamos fazer um filtro dentro do array. &lt;/p&gt;

&lt;p&gt;Também retorna um novo array, porém dessa vez só com elementos selecionados. &lt;/p&gt;

&lt;p&gt;VAMOS AO EXEMPLO:&lt;/p&gt;

&lt;p&gt;Dessa vez teremos um array com número de 1 até 10.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtRDKUiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebg0rh5g5uz199yujecu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtRDKUiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebg0rh5g5uz199yujecu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pensando em usar o filtre, eu quero que ele filtre por números que sejam pares. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;O resultado seria:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v3FysLrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sidsuloezc1555hfroi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v3FysLrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sidsuloezc1555hfroi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reduce"&gt;
  &lt;/a&gt;
  Reduce
&lt;/h2&gt;

&lt;p&gt;O Reduce muito das vezes parece ser o mais complicado de entender, mas a ideia de usar ele é para retornar um único valor. &lt;/p&gt;

&lt;p&gt;VAMOS AO EXEMPLO:&lt;/p&gt;

&lt;p&gt;Abaixo vou ter um array com diversos número e vou utilizar o reduce para fazer a soma de todos eles e me retornar somente um dados. &lt;/p&gt;

&lt;p&gt;O retorno desse array será 41. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vkv28tia--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qerrucc68ldc6gigfcp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vkv28tia--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qerrucc68ldc6gigfcp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Building a Simple Secure API REST with Node.js</title>
      <author>Carlos Sánchez</author>
      <pubDate>Tue, 25 May 2021 23:18:18 +0000</pubDate>
      <link>https://dev.to/carlosvldz/building-a-simple-secure-api-rest-with-node-js-3576</link>
      <guid>https://dev.to/carlosvldz/building-a-simple-secure-api-rest-with-node-js-3576</guid>
      <description>&lt;p&gt;This time we learn to create a secure API REST with CRUD operations like Create, Read, Update and Delete.&lt;/p&gt;

&lt;p&gt;This development include a public and private API, for security we use JWT for authentication and Bcrypt for hashing our passwords. The database engine is run by MongoDB.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#first-lets-go-over-the-basics"&gt;
  &lt;/a&gt;
  First let's go over the basics.
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#what-is-rest-api-nodejs-jwt-bcrypt-mongodb-and-express"&gt;
  &lt;/a&gt;
  What is REST API, Node.Js, JWT, Bcrypt, MongoDB and Express?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;REST API:&lt;/strong&gt; it's an interface between systems that use HTTP protocol for obtain data and perform operations. In this case we will use the most important operations: POST, GET, PUT and DELETE.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Node.Js:&lt;/strong&gt; it's a runtime environment based in JavaScript for the server side, is asynchronous and event oriented architecture. Based on Google's V8 engine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JWT:&lt;/strong&gt; it's an open standard ( &lt;a href="https://tools.ietf.org/html/rfc7519"&gt;RFC-7519&lt;/a&gt; ) based in JSON to create a token that serves to send data between applications and services, guaranteeing that is authentic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bcrypt:&lt;/strong&gt; is a password hashing function, based on Blowfish encryption and incorporates a salt fragment to generate the hash associated with each password, preventing two identical passwords generating the same hash.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MongoDB:&lt;/strong&gt; it's a document-oriented NoSQL database, storing BSON data structures.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Express.Js:&lt;/strong&gt; is a framework designed for Node.Js, it helps us to create web applications more efficiently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-we-going-to-do"&gt;
  &lt;/a&gt;
  What are we going to do?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;User registry through a form, the required data: Name, Email and Password.&lt;/li&gt;
&lt;li&gt;The user must authenticate with email and password.&lt;/li&gt;
&lt;li&gt;To consume the protected routes, the user must send the token in the header.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lets-start"&gt;
  &lt;/a&gt;
  Let's start!!
&lt;/h2&gt;

&lt;p&gt;First we gonna create the directory where we saved the project and then we run the command &lt;strong&gt;npm init&lt;/strong&gt; for start the project&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zCi5BZh1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrlb5ork73mrlk0sx70v.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zCi5BZh1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrlb5ork73mrlk0sx70v.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once run this command it creates a new file with the name &lt;strong&gt;package.json&lt;/strong&gt;. This file contains the project configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "name": "simplesecureapirest",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;amp;&amp;amp; exit 1"
  },
  "author": "",
  "license": "MIT"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install the following dependencies with the command: &lt;strong&gt;npm install&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install express mongoose bcryptjs jsonwebtoken morgan
npm install nodemon -D
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After install the dependencies the file &lt;strong&gt;package.json&lt;/strong&gt; will contain the list of dependencies and devDependencies (as we specified for nodemon).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"dependencies": {
    "bcryptjs": "^2.4.3",
    "express": "^4.17.1",
    "jsonwebtoken": "^8.5.1",
    "mongoose": "^5.11.8",
    "morgan": "^1.10.0"
  },
  "devDependencies": {
    "nodemon": "^2.0.6"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#mvc-pattern-model-view-controller"&gt;
  &lt;/a&gt;
  MVC Pattern (Model View Controller)
&lt;/h2&gt;

&lt;p&gt;It's a style of software architecture that separates components into objects, one for the application data, another for the user view and control logic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-server"&gt;
  &lt;/a&gt;
  Creating the server
&lt;/h2&gt;

&lt;p&gt;Inside the directory that we created at the beginning, create a new file &lt;strong&gt;server.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');
const morgan = require('morgan');
const pkg = require('./package.json');


const app = express();


// Settings
app.set('pkg', pkg);


// Middleware
app.use(morgan('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));


// Routes


// Welcome Route
app.get('/', (req, res) =&amp;gt; {
    res.json({
        author: app.get('pkg').author,
        name: app.get('pkg').name,
        description: app.get('pkg').description,
        version:app.get('pkg').version
    })
})


app.listen(3000, () =&amp;gt; {
    console.log('Server running on port: 3000')
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And to validate that everything is correct, start the server with command:&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;npm run dev&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i7FamkhO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v63t3eefoguk3mgkyj95.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i7FamkhO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v63t3eefoguk3mgkyj95.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then we access the following address from any browser &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; it should answer the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// 20201224010027
// http://localhost:3000/


{
  "author": "CarlosVldz",
  "name": "simplesecureapirest",
  "description": "A simple API REST",
  "version": "1.0.0"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-models-and-entities-with-nodejs"&gt;
  &lt;/a&gt;
  Creating models and entities with Node.Js
&lt;/h2&gt;

&lt;p&gt;Models are representations of the database and will represent a single record/document. In this case and a practical example we will use a collection to save the information of our users and another collection for books information.&lt;/p&gt;

&lt;p&gt;Create the User model with its respective fields (when we create a new User we're creating an instance of that model).&lt;/p&gt;

&lt;p&gt;In the project directory we create the &lt;strong&gt;models&lt;/strong&gt; folder and the &lt;strong&gt;User.js&lt;/strong&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');


// Define Schema
const userSchema = new mongoose.Schema({
    name: {
        type: String,
        required: true,
        trim: true
    },
    email: {
        type: String,
        required: true,
        trim: true
    },
    password: {
        type: String,
        required: true,
        trim: true
    }
});


// Hash password before save in DB
userSchema.statics.encryptPassword = async (password) =&amp;gt; {
    const salt = await bcrypt.genSalt(10)
    return await bcrypt.hash(password, salt)
};


// Compare password 
userSchema.statics.comparePassword = async (password, receivedPassword) =&amp;gt; {
    return await bcrypt.compare(password, receivedPassword)
};


module.exports = mongoose.model('User', userSchema);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-controllers"&gt;
  &lt;/a&gt;
  Creating controllers
&lt;/h2&gt;

&lt;p&gt;In the directory of our project create the folder &lt;strong&gt;controllers&lt;/strong&gt; and inside the controller for the model created in the previous step &lt;strong&gt;auth.controller.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this controller we will define two methods to create or register users &lt;strong&gt;"signUp"&lt;/strong&gt; and to authenticate or start session &lt;strong&gt;"logIn"&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const User = require('../models/User');
const jwt = require('jsonwebtoken');


exports.signUp = async (req, res) =&amp;gt; {
    const { name, email, password } = req.body;


    const newUser = new User({
        name, email, password: await User.encryptPassword(password)
    })


    const savedUser = await newUser.save();
    console.log(savedUser);


    const newToken = jwt.sign({ id: savedUser._id }, 'secretKey', {
        expiresIn: 86400 // one day
    })


    res.status(200).json({ newToken })
}


exports.logIn = async (req, res) =&amp;gt; {
    const userExist = await User.findOne({ email: req.body.email });


    if (!userExist) return res.status(400).json({
        message: 'User not exists'
    })


    const matchPassword = await User.comparePassword(req.body.password, userExist.password)


    if (!matchPassword) return res.status(401).json({
        token: null,
        message: 'Invalid password'
    })
    console.log(userExist)


    const token = jwt.sign({ id: userExist._id }, 'secretKey', {
        expiresIn: 86400
    })


    return res.json({
        _id: userExist._id,
        name: userExist._id,
        message: 'Auth Succesful',
        token: token
    })

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-routes"&gt;
  &lt;/a&gt;
  Creating routes
&lt;/h2&gt;

&lt;p&gt;We will proceed with the creation of the routes for the methods of the previous step, within our directory create the folder &lt;strong&gt;routes&lt;/strong&gt; and the file &lt;strong&gt;auth.routes.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');


const router = express.Router();


const authCtrl = require('../controllers/auth.controller');


router.post('/signup', authCtrl.signUp);


router.post('/login', authCtrl.logIn);



module.exports = router;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-the-crud-for-books-collection"&gt;
  &lt;/a&gt;
  Creating the CRUD for books collection
&lt;/h2&gt;

&lt;p&gt;With this we can &lt;strong&gt;create&lt;/strong&gt;, &lt;strong&gt;read&lt;/strong&gt;, &lt;strong&gt;update&lt;/strong&gt; and &lt;strong&gt;delete&lt;/strong&gt; data, inside the &lt;strong&gt;controllers&lt;/strong&gt; folder create the file &lt;strong&gt;book.controller.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const Book = require('../models/Book');


exports.findAllBooks = async (req, res) =&amp;gt; {
    try {
        const books = await Book.find();
        res.json(books)
    } catch (error) {
        res.status(500).json({
            message: error.message || "Something goes wrong retieving the tasks"
        })
    }
};


exports.createBook = async (req, res) =&amp;gt; {
    try {
        const newBook = new Book({
            name: req.body.name,
            author: req.body.author,
            status: req.body.status ? req.body.status : false
        });
        const bookSaved = await newBook.save();
        res.json(bookSaved)
    } catch (error) {
        res.status(500).json({
            message: error.message || "Something goes wrong creating a book"
        })
    }
};


exports.findOneBook = async (req, res) =&amp;gt; {
    const { id } = req.params;
    try {
        const book = await Book.findById(id)
        if(!book) return res.status(404).json({
            message: `Book with id ${id} does not exists!`
        });
        res.json(book)
    } catch (error) {
        res.status(500).json({
            message: error.message || `Error retrieving book with id: ${id}`
        })
    }
};


exports.deleteBook = async (req, res) =&amp;gt; {
    const { id } = req.params;
    try {
        const data = await Book.findByIdAndDelete(id)
        res.json({
            message: `${data.name} - Book were deleted successfully!`
        })
    } catch (error) {
        res.status(500).json({
            message: `Cannot delete book with id ${id}`
        })
    }
}


exports.updateBook = async (req, res) =&amp;gt; {
    const {id} = req.params;
    try {
        await Book.findByIdAndUpdate(id, req.body)
    res.json({
        message: "Book was updated successfully"
    })
    } catch (error) {
        res.status(500).json({
            message: `Cannot update book with id: ${id}`
        })
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create the model for books &lt;strong&gt;Book.js&lt;/strong&gt; inside the folder &lt;strong&gt;models&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const mongoose = require('mongoose');


// Define schema
const bookSchema = new mongoose.Schema({
    name: {
        type: String,
        required: true,
        trim: true
    },
    author: {
        type: String,
        required: true,
        trim: true
    },
    status: {
        type: Boolean,
        default: false
    }
});

module.exports = mongoose.model('Book', bookSchema);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the route handler for the records of the books &lt;strong&gt;book.routes.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');


const router = express.Router();


const bookCtrl = require('../controllers/book.controller');


router.get('/', bookCtrl.findAllBooks);


router.get('/:id', bookCtrl.findOneBook);


router.post('/', bookCtrl.createBook);


router.put('/:id', bookCtrl.updateBook);


router.delete('/:id', bookCtrl.deleteBook);


module.exports = router;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Modify the &lt;strong&gt;server.js&lt;/strong&gt; file to add the new routes that we create in the last steps.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');
const morgan = require('morgan');
const mongoose = require('./config/database');
const pkg = require('../package.json');


const authRoutes = require('./routes/auth.routes');
const bookRoutes = require('./routes/book.routes');


const app = express();


// DB settings
mongoose.connection.on('error', console.error.bind(console, 'DB Connection Errror'));


// Settings
app.set('pkg', pkg);


// Middleware
app.use(morgan('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));


// Routes
app.use('/api/auth', authRoutes);
app.use('/api/books', bookRoutes);


// Welcome Route
app.get('/', (req, res) =&amp;gt; {
    res.json({
        author: app.get('pkg').author,
        name: app.get('pkg').name,
        description: app.get('pkg').description,
        version:app.get('pkg').version
    })
})


app.listen(3000, () =&amp;gt; { console.log('Server running on port: 3000')

});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the configuration file for our database connection and one middleware to validate our JWT, which will authorize us to create, modify and delete any book in our records. &lt;br&gt;
The routes to list one or all the books it's not necessary provide a token to consult.&lt;/p&gt;

&lt;p&gt;Inside the root directory create the &lt;strong&gt;config&lt;/strong&gt; folder and &lt;strong&gt;database.js&lt;/strong&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const mongoose = require('mongoose');


// Config DB Connection
const mongoDB = 'mongodb://localhost/secureAPI';

mongoose.connect(mongoDB, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
    useFindAndModify: false,
    useCreateIndex: true
});
mongoose.Promise = global.Promise;


module.exports = mongoose;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create the &lt;strong&gt;middleware&lt;/strong&gt; folder and inside the &lt;strong&gt;authToken.js&lt;/strong&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const jwt = require('jsonwebtoken');
const User = require('../models/User');


exports.verifyToken = async (req, res, next) =&amp;gt; {
    try {
        const token = req.headers["x-access-token"];
    if (!token) return res.status(403).json({
        message: "No token provided"
    })
        const decoded = jwt.verify(token, 'secretKey')
        req.userId = decoded.id;


        const user = await User.findById(req.userId, { password: 0 })
        if (!user) return res.status(404).json({
            message: "No user found"
        })
        next();
    } catch (error) {
        return res.status(401).json({
            message: "Unauthorized"
        })
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally we modify our &lt;strong&gt;book.routes.js&lt;/strong&gt; file to specify the protected routes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express');


const router = express.Router();


const bookCtrl = require('../controllers/book.controller');
const authToken = require('../middleware/authToken');


router.get('/', bookCtrl.findAllBooks);


router.get('/:id', bookCtrl.findOneBook);


router.post('/', [authToken.verifyToken], bookCtrl.createBook);


router.put('/:id', [authToken.verifyToken], bookCtrl.updateBook);


router.delete('/:id', [authToken.verifyToken], bookCtrl.deleteBook);



module.exports = router;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Testing our API&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In my case I use Postman, but you can use Insomnia or any other tool that allows you to test REST services.&lt;/p&gt;

&lt;p&gt;Let's see some operations:&lt;/p&gt;

&lt;p&gt;To list all the books&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--urTV06TO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4uxqagx9b5r2njsooa4s.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--urTV06TO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4uxqagx9b5r2njsooa4s.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In case to provide an invalid token&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LfUQsTdz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5lr7ephj7wndt5vtfz0t.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LfUQsTdz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5lr7ephj7wndt5vtfz0t.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In case to not provide any token&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZKuR27L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yrserexocskepy8vq9do.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZKuR27L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yrserexocskepy8vq9do.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the following link you can find the &lt;strong&gt;API&lt;/strong&gt; documentation, which contains all the routes of our CRUD for books and login and registry of new users.&lt;br&gt;
 &lt;a href="https://documenter.getpostman.com/view/12403851/TVsxBRaR"&gt;https://documenter.getpostman.com/view/12403851/TVsxBRaR&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You can find the full code on my  &lt;a href="https://github.com/carlosvldz/simpleSecureAPIREST"&gt;GitHub&lt;/a&gt; .&lt;/p&gt;

</description>
      <category>node</category>
      <category>express</category>
      <category>mongodb</category>
      <category>restapi</category>
    </item>
    <item>
      <title>Big Data + MySQL = Mission InnoPossible?</title>
      <author>Arctype Team</author>
      <pubDate>Tue, 25 May 2021 22:39:14 +0000</pubDate>
      <link>https://dev.to/arctype/big-data-mysql-mission-innopossible-573</link>
      <guid>https://dev.to/arctype/big-data-mysql-mission-innopossible-573</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cGaqMKzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1750/2021/05/Big-Data-MySQL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGaqMKzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1750/2021/05/Big-Data-MySQL.png" alt="Featured Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preface"&gt;
  &lt;/a&gt;
  Preface
&lt;/h2&gt;

&lt;p&gt;​&lt;br&gt;
If you’re a MySQL DBA or a developer that deals with MySQL instances daily, it will probably not come as a surprise if you hear that you should not run big data sets on MySQL. Ask almost any MySQL DBA, and you will hear something like:&lt;br&gt;
​&lt;br&gt;
● “MySQL is not a fit!”&lt;br&gt;
​&lt;br&gt;
● “Have you looked into NoSQL?”&lt;br&gt;
​&lt;br&gt;
● “Use MongoDB”&lt;br&gt;
​&lt;br&gt;
Some of these responses indeed have merit—for example, NoSQL— based database management systems such as MongoDB can certainly be useful when dealing with big data sets. However, contrary to popular belief, MySQL shouldn’t be so quickly ruled out—in some scenarios, MySQL (or MariaDB) might prove to be even better options for big data than their NoSQL counterparts! In this article, we will explore the things you should consider when answering the question: “Is MySQL a good option for my big data project?”&lt;br&gt;
​&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-mysql-an-option-for-big-data"&gt;
  &lt;/a&gt;
  Is MySQL an Option for Big Data?
&lt;/h2&gt;

&lt;p&gt;​&lt;br&gt;
Some of the problems that DBAs usually face—as far as any amount of data is concerned—are related to reliability and performance. The largesse of these problems is typically proportionate to the size of a dataset, so is MySQL even an option in this case? The short answer is yes—it may very well be. Here’s an abridged list of reasons why that might be the case:&lt;br&gt;
​&lt;br&gt;
● One of MySQL’s storage engines, InnoDB, is both a high-performance and a high-reliability storage engine.&lt;br&gt;
​&lt;br&gt;
● InnoDB has specific parameters that allow developers dealing with MySQL or MySQL DBAs to push the engine to its limits—for example, allocating 60-80% of RAM available on the server to InnoDB alone.&lt;br&gt;
​&lt;br&gt;
● InnoDB can also be made ACID compliant. ACID compliance can prove helpful for mitigating database corruption that can result from power outages or related hiccups.&lt;/p&gt;

&lt;p&gt;If you’ve read this far, the chances are that you can probably tell that you should be able to experiment with big data on MySQL, Percona Server, or MariaDB—but how? First and foremost, you should probably decide what kind of storage engine you need for your project(s).&lt;br&gt;
​&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mysql-storage-engines-which-ones-a-fit"&gt;
  &lt;/a&gt;
  MySQL Storage Engines: Which One’s a Fit?
&lt;/h2&gt;

&lt;p&gt;​&lt;br&gt;
MySQL, Percona Server, and MariaDB all have a number of storage engines from which you can choose. We won’t go into every detail regarding MySQL’s storage engines in this blog post, but you should know that:&lt;br&gt;
​&lt;br&gt;
● MyISAM was the default MySQL storage engine up until MySQL 5.5.&lt;br&gt;
​&lt;br&gt;
● When MySQL 5.5 was released in 2010, InnoDB replaced MyISAM, and isnow the default storage engine offered by MySQL. It is also the primary storage engine for most MySQL engineers or developers dealing with MySQL, Percona Server, or MariaDB.&lt;br&gt;
​&lt;br&gt;
● MySQL also offers other engines, some of which might be useful when archiving data or performing test operations. Still, since InnoDB and MyISAM are the most frequently-used storage engines in the MySQL world, we are going to focus on them.&lt;br&gt;
​&lt;br&gt;
As per the above, the two main MySQL database engines are InnoDB and MyISAM, which coincidentally (or not) are also the engines most relevant to the scope of this article.&lt;br&gt;
​&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#innodb-vs-myisam-for-storing-big-data"&gt;
  &lt;/a&gt;
  InnoDB vs. MyISAM for Storing [Big] Data
&lt;/h2&gt;

&lt;p&gt;​&lt;br&gt;
Having established that InnoDB and MyISAM are both potentially good fits for big data storage, now we can begin to determine which engine is the best fit for your project.&lt;br&gt;
​&lt;br&gt;
So, do you choose MyISAM or InnoDB? To answer this question, we have to look into what both of those storage engines can offer. Let’s dig into them and find out.&lt;br&gt;
​&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#innodb-for-big-data"&gt;
  &lt;/a&gt;
  InnoDB for Big Data
&lt;/h3&gt;

&lt;p&gt;​&lt;br&gt;
As we mentioned earlier, InnoDB is currently the default MySQL engine and supports the ACID model, along with row-level locking and foreign keys too. Since MySQL 5.6, InnoDB supports full-text indexes and portable tablespaces, and, since version 5.7, also spatial indexes and last-update times for tables.&lt;br&gt;
​&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#innodb-acid-compliance"&gt;
  &lt;/a&gt;
  InnoDB ACID Compliance
&lt;/h3&gt;

&lt;p&gt;​&lt;br&gt;
If you deal with big data (or any amount of data, really), your primary criteria for a database product are probably related to reliability and speed. &lt;br&gt;
​&lt;br&gt;
InnoDB can offer both—just make it follow the ACID model, optimize a few settings inside of &lt;code&gt;my.cnf&lt;/code&gt;, restart the server, and you should be good to go. Obviously, everything isn’t so simple, but don’t fret – we will explain everything you need to know in a second.&lt;br&gt;
​&lt;br&gt;
The ACID model stands for &lt;strong&gt;A&lt;/strong&gt;tomicity, &lt;strong&gt;C&lt;/strong&gt;onsistency, &lt;strong&gt;I&lt;/strong&gt;solation, and &lt;strong&gt;D&lt;/strong&gt;urability—basically, a set of database properties intended to warrant data validity despite errors, power outages, or any such failures. Here’s how it works in InnoDB:&lt;br&gt;
​&lt;br&gt;
● &lt;strong&gt;A&lt;/strong&gt;tomicity ensures that all SQL statements operate as an indivisible unit.&lt;br&gt;
​&lt;br&gt;
● &lt;strong&gt;C&lt;/strong&gt;onsistency makes sure that the data is consistent by using the logging mechanisms available in InnoDB.&lt;br&gt;
​&lt;br&gt;
● &lt;strong&gt;I&lt;/strong&gt;solation refers to InnoDB’s row-level locking (we will get into that a little bit later)&lt;br&gt;
​&lt;br&gt;
● &lt;strong&gt;D&lt;/strong&gt;urability refers to InnoDB’s ability to maintain a log file.&lt;br&gt;
​&lt;br&gt;
The ACID model can be enabled (or disabled) by modifying the value of the &lt;code&gt;innodb_flush_log_at_trx_commit&lt;/code&gt; variable inside of &lt;code&gt;my.cnf&lt;/code&gt;. If you want to deal with big data in MySQL, it is important to keep in mind that this variable has three available options. &lt;br&gt;
​&lt;br&gt;
The default option, 1, makes InnoDB ACID compliant, whereas 0 and 2 render InnoDB no longer ACID compliant, but also substantially increase write speeds. If you want to use MySQL for your big data project, it’s probably best to keep the default option. &lt;br&gt;
​&lt;br&gt;
But wait, don’t we need both reliability and speed? Of course! &lt;strong&gt;Configuring other variables such as &lt;code&gt;innodb_buffer_pool_size&lt;/code&gt;,  can also achieve the desired speed increase.&lt;/strong&gt; Keep reading—we will tell you how in a second.&lt;br&gt;
​&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-innodb-parameters-to-optimize-mysql-database-speeds"&gt;
  &lt;/a&gt;
  Use InnoDB Parameters to Optimize MySQL Database Speeds
&lt;/h3&gt;

&lt;p&gt;​&lt;br&gt;
The &lt;code&gt;innodb_buffer_pool_size&lt;/code&gt; is one of the most important parameters in InnoDB’s architecture.  The critical task of this buffer is to cache data and indexes in InnoDB tables. The larger this buffer is, the more data and indexes it can cache, which is especially important when dealing with big data sets. &lt;br&gt;
​&lt;br&gt;
Obviously, RAM is still inherently finite, and thus, it is necessary to leave some amount of space for other system processes—the recommended optimal value for &lt;code&gt;innodb_buffer_pool_size&lt;/code&gt; is roughly 60-80% of a system’s available memory.&lt;br&gt;
​&lt;br&gt;
&lt;code&gt;innodb_buffer_pool_size&lt;/code&gt; is also closely related to the &lt;code&gt;innodb_log_file_size&lt;/code&gt; parameter.  The more extensive your log files are, the less recovery time you need in case of a crash, so &lt;strong&gt;for optimal performance with big data, set this parameter to about a quarter of the value of &lt;code&gt;innodb_buffer_pool_size&lt;/code&gt;.&lt;/strong&gt;&lt;br&gt;
​&lt;br&gt;
As far as the InnoDB buffer pool is concerned, the buffer pool can also be split into multiple instances using the &lt;code&gt;innodb_buffer_pool_instances&lt;/code&gt; parameter. Doing so can improve disk I/O—the default value of which is 8, starting from MariaDB 10. &lt;br&gt;
​&lt;br&gt;
Each InnoDB buffer pool instance manages its own data structures and takes a portion of the total buffer pool size, meaning that if you have, say, 8GB of available RAM in your system, you could set the &lt;code&gt;innodb_buffer_pool_size&lt;/code&gt; up to 6GB. Divide the InnoDB buffer pool into six instances and each instance should be of 1GB in size.&lt;br&gt;
​&lt;br&gt;
Keep in mind that this parameter, along with some other parameters, is deprecated as of MariaDB 10.5.1—according to the MariaDB team, the original reasons for splitting the buffer pool are no longer relevant.&lt;br&gt;
​&lt;br&gt;
Writing to the log files is also very important.  The &lt;code&gt;innodb_log_buffer_size&lt;/code&gt; defines the size in bytes of the buffer that InnoDB uses to write to those files. The default value of this parameter is 8MB. &lt;br&gt;
​&lt;br&gt;
In this case, a larger log buffer enables large transactions to run without writing the logs to the disk before transactions commit.&lt;br&gt;
​&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-innodb-features-that-enhance-performance"&gt;
  &lt;/a&gt;
  Other InnoDB Features that Enhance Performance
&lt;/h3&gt;

&lt;p&gt;​&lt;br&gt;
InnoDB also allows you to choose a flush method, some of which are used for internal performance testing, and therefore unsupported. Most importantly, however, flush methods determine what InnoDB uses to open data files and how it flushes the data and log files to disk.&lt;br&gt;&lt;br&gt;
​&lt;br&gt;
Each method has distinct advantages and disadvantages, but for optimal performance—especially with big data — &lt;code&gt;O_DSYNC&lt;/code&gt; and &lt;code&gt;O_DIRECT&lt;/code&gt; are the best options.&lt;br&gt;
​&lt;br&gt;
When &lt;code&gt;O_DSYNC&lt;/code&gt; is in use, data may or may not be consistent, but the upside is that &lt;code&gt;O_DSYNC&lt;/code&gt; is faster than &lt;code&gt;O_DIRECT&lt;/code&gt;. &lt;code&gt;O_DIRECT&lt;/code&gt;, on the other hand, makes InnoDB more stable and data-consistent— essentially a hint that you want your I/O to bypass the Linux kernel’s caches. It is worth noting that some of these parameters (for example, &lt;code&gt;O_DIRECT&lt;/code&gt;) are only available on Linux systems and are not compatible with Windows.&lt;br&gt;
​&lt;br&gt;
InnoDB also supports row-level locking, which, put simply, means that only the row accessed by a transaction will be locked. For comparison, MyISAM only supports table-level locking, meaning that only one session can update tables at any given moment. This is potentially useful for, amongst other things, importing vast amounts of data into your database servers.&lt;br&gt;
​&lt;br&gt;
With that being said, you can also use &lt;a href="https://severalnines.com/product/clustercontrol"&gt;ClusterControl&lt;/a&gt; developed by database experts over at Severalnines to achieve your performance goals.&lt;br&gt;
​&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#innodb-and-big-data-the-quirks"&gt;
  &lt;/a&gt;
  InnoDB and Big Data: The Quirks
&lt;/h3&gt;

&lt;p&gt;​&lt;br&gt;
Having used the tips above to optimize InnoDB settings in your &lt;code&gt;my.cnf&lt;/code&gt; file, we should be good to go, right? Not so fast!&lt;br&gt;
​&lt;br&gt;
InnoDB has quite a few files crucial to its performance. For example, &lt;code&gt;/var/lib/mysql/data&lt;/code&gt; contains folders named after databases and also three files: &lt;code&gt;ib_logfile0&lt;/code&gt;, &lt;code&gt;ib_logfile1&lt;/code&gt;, &lt;code&gt;and ibdata1&lt;/code&gt;.&lt;br&gt;
​&lt;br&gt;
ibdata1 is where all of the data that pertains to InnoDB is stored. When dealing with big data, this file can cause problems because, by default, its size cannot shrink—it can only grow. Inevitably, simply shutting down MySQL and deleting this file will eliminate any data stored in InnoDB—not exactly ideal. &lt;code&gt;ibdata1&lt;/code&gt; stores multiple classes of information, including the data and indexes of InnoDB tables, InnoDB table metadata, MVCC data, and also the insert and doublewrite buffers—meaning that this file can get extremely large. The best way to avoid headaches when dealing with this file in MySQL is to perform a cleanup:&lt;br&gt;
​&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Take a copy of the data stored in InnoDB.&lt;/li&gt;
&lt;li&gt;Drop all databases except &lt;code&gt;mysql&lt;/code&gt;, &lt;code&gt;information_schema&lt;/code&gt;, and &lt;code&gt;performance_schema&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Stop MySQL.&lt;/li&gt;
&lt;li&gt;Enable &lt;code&gt;innodb_file_per_table&lt;/code&gt;, set the &lt;code&gt;innodb_flush_method&lt;/code&gt; to &lt;code&gt;O_DIRECT&lt;/code&gt; and set the &lt;code&gt;innodb_buffer_pool_size&lt;/code&gt; and &lt;code&gt;innodb_log_file_size&lt;/code&gt; to appropriate values per the advice above.&lt;/li&gt;
&lt;li&gt;Delete the &lt;code&gt;ibdata1&lt;/code&gt; file and the log files and restart MySQL.
​&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When you have performed the steps above, the &lt;code&gt;ibdata1&lt;/code&gt; and the log files will be recreated. The catch? The &lt;code&gt;ibdata1&lt;/code&gt; will no longer contain the data from InnoDB tables themselves—only metadata relevant to InnoDB. This makes storing and managing enormous data sets inside of InnoDB much easier.&lt;br&gt;
​&lt;br&gt;
After performing the steps above, keep an eye on indexes and normalize data wherever possible—at this point, MySQL instance(s) should be ready to deal with big data sets.&lt;br&gt;
​&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-about-myisam"&gt;
  &lt;/a&gt;
  What About MyISAM?
&lt;/h3&gt;

&lt;p&gt;​&lt;br&gt;
Despite being one of the most popular MySQL storage engines—and the default until MySQL 5.5—we have not yet touched upon MyISAM, so we should probably cover it too, right?&lt;br&gt;
​&lt;br&gt;
Here’s the catch with MyISAM: while it certainly used to offer functionalities lacked by its newer counterpart, as MySQL has continued to develop, most of these features have become available in InnoDB. For example, InnoDB has supported full-text indexes and portable tablespaces since MySQL 5.6, spatial indexes since MySQL 5.7, and so on.  As a result, today, &lt;strong&gt;MyISAM is effectively only a valid alternative to InnoDB when the primary—if not the only—query being run is a simple &lt;code&gt;COUNT(*)&lt;/code&gt;.&lt;/strong&gt; Because MyISAM stores the number in the table metadata(and InnoDB does not), &lt;code&gt;COUNT(*)&lt;/code&gt; queries should generally complete faster on MyISAM.&lt;br&gt;
​&lt;br&gt;
So should we use MyISAM to deal with data (or big data) in MySQL?&lt;br&gt;
​&lt;br&gt;
Well, short answer? No. MyISAM has a reputation for being an unreliable storage engine due to the fact that it has poor data integrity, poor crash recovery and table-level locking. It also does not support ACID (exclusive to InnoDB in this space), and MyISAM tables are frequently corrupted following a crash.&lt;br&gt;
​&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;​&lt;br&gt;
To summarize:&lt;br&gt;
​&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MySQL is perfectly capable of running big data sets—it all depends on how the server (and MySQL instances) are configured.
​&lt;/li&gt;
&lt;li&gt;InnoDB is the optimal data storage engine for pushing MySQL to the next level when dealing with big data sets, as it can be configured to provide ACID compliance and high performance at the same time.
​&lt;/li&gt;
&lt;li&gt;Using InnoDB to deal with big data (or any kind of data, for that matter) in MySQL can cause issues because the engine stores all related data in an un-shrinkable file called ibdata1, but InnoDB can be configured to store only metadata inside of the file, thus preventing it from becoming too large.
​&lt;/li&gt;
&lt;li&gt;MyISAM has poor data integrity and poor crash recovery. Unlike InnoDB, it also has table-level locking, meaning that MySQL only permits one session to update certain tables at a time—it’s probably not a fit for applications that require data integrity and high performance at the same time. Stick with InnoDB.
​
Also, when dealing with data (or big data) in MySQL your queries might become complex.  If you find yourself looking for an easy-to-use SQL client, give &lt;a href="https://arctype.com"&gt;Arctype&lt;/a&gt; a try!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lukas is an ethical hacker, a MySQL database administrator and a frequent conference speaker. Since 2014 Lukas has found and responsibly disclosed security flaws in some of the most visited websites in Lithuania and abroad including advertising, gift-buying, gaming, hosting websites as well as some websites of government institutions. Lukas runs one of the biggest &amp;amp; fastest data breach search engines in the world &lt;br&gt;
—&lt;a href="https://breachdirectory.com/"&gt;BreachDirectory.com&lt;/a&gt; and frequently blogs in multiple places educating people about information security and other topics. He also runs his own blog over at &lt;a href="https://www.lukasvileikis.com/"&gt;lukasvileikis.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>mysql</category>
      <category>bigdata</category>
      <category>innodb</category>
    </item>
    <item>
      <title>Add sign in with google to react app using firebase</title>
      <author>Cody Snell</author>
      <pubDate>Tue, 25 May 2021 22:35:15 +0000</pubDate>
      <link>https://dev.to/decibullz/add-sign-in-with-google-to-react-app-using-firebase-2c4p</link>
      <guid>https://dev.to/decibullz/add-sign-in-with-google-to-react-app-using-firebase-2c4p</guid>
      <description>&lt;p&gt;&lt;strong&gt;Firebase is a great way to set up authentication on your react applications, and with just a few steps it can be implemented very easy&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create react app&lt;/li&gt;
&lt;li&gt;Yarn add / npm install firebase&lt;/li&gt;
&lt;li&gt;Create firebase project&lt;/li&gt;
&lt;li&gt;Enable sign in with google in firebase console&lt;/li&gt;
&lt;li&gt;Initialize firebase settings in react&lt;/li&gt;
&lt;li&gt;Initialize state&lt;/li&gt;
&lt;li&gt;Create sign in/out functions&lt;/li&gt;
&lt;li&gt;Be a Pro&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As with any project we're going to start in our terminal. Create a folder with any name you want, for this lesson I used firebase-practice.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I3yNh2og--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hlt69lwqw03jo13c7ai.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I3yNh2og--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hlt69lwqw03jo13c7ai.png" alt="Screen Shot 2021-05-25 at 3.30.12 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;cd into your newly made folder and type the command&lt;br&gt;
 &lt;em&gt;npx create-react-app .&lt;/em&gt; &lt;br&gt;
This will create the react app inside the current folder. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QdWgKn5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmcbkudj0bi9bd05iete.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QdWgKn5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmcbkudj0bi9bd05iete.png" alt="Screen Shot 2021-05-25 at 3.32.05 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's open it in VSCode.&lt;/p&gt;

&lt;p&gt;You should have the basic React app setup.&lt;br&gt;
Lets clean up that App.js file. &lt;br&gt;
Delete everything inside the return except for the App div.&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gkt2snbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96qxfy4emltdy5met5jz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gkt2snbt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96qxfy4emltdy5met5jz.png" alt="Screen Shot 2021-05-25 at 4.30.19 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open your built in terminal (control + `)&lt;/p&gt;

&lt;p&gt;Now were going to add the firebase package.&lt;br&gt;
For this you can use &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;npm install firebase &lt;/li&gt;
&lt;li&gt;yarn add firebase&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point we need firebase set up online so let's head there. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After signing into Firebase click &lt;strong&gt;Go to console&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qBtRtntV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xljptp0qrus2cj1c8rju.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qBtRtntV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xljptp0qrus2cj1c8rju.png" alt="Screen Shot 2021-05-25 at 3.36.30 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the consoles main page you're going to want to add a new project &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pPDITqht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9kq5ad23c4jqukohkos.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pPDITqht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9kq5ad23c4jqukohkos.png" alt="Screen Shot 2021-05-25 at 3.36.41 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give your project a name&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NYUf5CmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzcjv6xe4dmysdn6betk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NYUf5CmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzcjv6xe4dmysdn6betk.png" alt="Screen Shot 2021-05-25 at 4.40.23 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;** Turn off analytics (this is optional)** &lt;/p&gt;

&lt;p&gt;After your project is created you'll be redirected to the project's main page. Here we're going to add a web app. It is the &amp;lt;/&amp;gt; symbol.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c_UU9fDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3hw4ik1qr6210pc1qtz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c_UU9fDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3hw4ik1qr6210pc1qtz.png" alt="Screen Shot 2021-05-25 at 3.40.01 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give your App a nickname and click Register App&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L-ZsfuOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5yowlj5sua6u38qupaw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L-ZsfuOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5yowlj5sua6u38qupaw.png" alt="Screen Shot 2021-05-25 at 4.46.49 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the App is registered it will give you multiple scripts , we only need what's inside the second script.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BzoEfH_K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osyzn6fa4ak8svodzfhr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BzoEfH_K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osyzn6fa4ak8svodzfhr.png" alt="Screen Shot 2021-05-25 at 3.40.48 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy what yours gives you as every project is different and you'll need your specific keys for this to work.&lt;/p&gt;

&lt;p&gt;Last step here is to enable signing in with google for your app. Go back to the projects main page and select Authentication&amp;gt; Sign-in Method and then edit the option for google.&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R8r9rc_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er1ovyisyg9j7xfrp6fw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R8r9rc_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er1ovyisyg9j7xfrp6fw.png" alt="Screen Shot 2021-05-25 at 3.42.20 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select Enable and enter your email address then hit Save.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bY7RPBEs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ocsl3m0o5rneds3gtqk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bY7RPBEs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ocsl3m0o5rneds3gtqk.png" alt="Screen Shot 2021-05-25 at 3.42.40 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#congrats-were-done-in-the-firebase-console"&gt;
  &lt;/a&gt;
  Congrats we're done in the firebase console!
&lt;/h2&gt;

&lt;p&gt;Head back on over to your VSCode and react app.&lt;/p&gt;

&lt;p&gt;Create a new file under the src folder named firebase.js&lt;/p&gt;

&lt;p&gt;Inside firebase.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;on Line 1 import firebase from 'firebase'&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;on Line 3 paste your firebase configuration you just copied. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZX-WIobc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0lh03rf7sijv378trwd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZX-WIobc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0lh03rf7sijv378trwd.png" alt="Screen Shot 2021-05-25 at 4.53.40 PM"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now Were going to set up a few variables inside firebase.js&lt;/p&gt;

&lt;p&gt;first initialize firebase&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;const firebaseApp=firebase.initializeApp(firebaseConfig)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Set database,auth, and provider&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;const db = firebaseApp.firestore()&lt;/li&gt;
&lt;li&gt;const auth = firebase.auth()&lt;/li&gt;
&lt;li&gt;const provider = new firebase.auth.GoogleAuthProvider()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With that were done setting up variables, time to export!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;export { auth, provider }&lt;/li&gt;
&lt;li&gt;export default db&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;firebase.js is now complete, don't forget to save!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ud8yh-7C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4ipi58ojkt5lvbxj12p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ud8yh-7C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4ipi58ojkt5lvbxj12p.png" alt="Screen Shot 2021-05-25 at 3.52.07 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Back to App.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lets start in App.js with the imports were going to need&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;import { useState } from 'react'&lt;/li&gt;
&lt;li&gt;import { auth, provider } from './firebase'&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Under Function App(){ and above return( is where we're going to be working&lt;/p&gt;

&lt;p&gt;First things first let's initialize state with useState().&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;const [user,setUser] = useState()
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vaGIhkFr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogpopgste9idek4qxi5l.png" alt="Screen Shot 2021-05-25 at 4.08.16 PM"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then we'll create our sign in function. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  const signIn = () =&amp;gt; {
auth
  .signInWithPopup(provider)
  .then((payload) =&amp;gt; {
    setUser(payload.user.displayName)
  })
  .catch((err) =&amp;gt; console.log(err))
}
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s3Tdqh4o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2snm0ze324l6tnshihmz.png" alt="Screen Shot 2021-05-25 at 4.10.02 PM"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Here you can chain a .then((payload) =&amp;gt;{console.log(payload)) so you can view the object you get back from firebase when signing in. This is how we would know to use payload.user.displayName&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now for our sign out function. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; const signOut = () =&amp;gt; {
auth.signOut().then(setUser(null))
}
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d0uQBLoc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gvinaitj33k8t5w5s3qk.png" alt="Screen Shot 2021-05-25 at 4.10.15 PM"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's it for our functions, we're on the home stretch!!&lt;/p&gt;

&lt;p&gt;Inside of our &lt;/p&gt; we're going to make two buttons. You guessed in, one for sign in, and one for sign out.

&lt;ul&gt;
&lt;li&gt;&amp;lt; button onClick={signIn}&amp;gt;Sign in&lt;/li&gt;
&lt;li&gt;&amp;lt; button onClick={signOut}&amp;gt;Sign out
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwutW10X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2b126jnhyg8uap6mwg57.png" alt="Screen Shot 2021-05-25 at 4.10.32 PM"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Under those buttons were going to use a ternary operator based on state that displays the user if you're signed in or "No user" if you're not. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;{user ? &amp;lt; div&amp;gt; {user}&amp;lt; /div&amp;gt; : &amp;lt; div&amp;gt; No user&amp;lt; /div&amp;gt;}
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6TzHzNBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5vmykl89n06dk73af7b.png" alt="Screen Shot 2021-05-25 at 4.10.40 PM"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And with that we're done!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mo1R6pxo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrj3pl08k3u9ct6wf8qb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mo1R6pxo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrj3pl08k3u9ct6wf8qb.png" alt="Screen Shot 2021-05-25 at 4.11.09 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save your files and npm start/yarn start in your terminal and you should see &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DyoioAHq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wtus2d7s7keodj350ja.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DyoioAHq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wtus2d7s7keodj350ja.png" alt="Screen Shot 2021-05-25 at 4.11.23 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click the sign in button and your App component will update and show the user's name.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mIAtXClF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x87g5urz0r2hzkv0oy8s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mIAtXClF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x87g5urz0r2hzkv0oy8s.png" alt="Screen Shot 2021-05-25 at 4.11.29 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#congratulations-you-did-it"&gt;
  &lt;/a&gt;
  Congratulations you did it!!
&lt;/h1&gt;

</description>
      <category>firebase</category>
      <category>react</category>
      <category>authentication</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How To Add Prettier and ESLint Automation to a React Codebase</title>
      <author>swyx</author>
      <pubDate>Tue, 25 May 2021 22:32:58 +0000</pubDate>
      <link>https://dev.to/swyx/how-to-add-prettier-and-eslint-automation-to-a-react-codebase-2gk1</link>
      <guid>https://dev.to/swyx/how-to-add-prettier-and-eslint-automation-to-a-react-codebase-2gk1</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;"Civilization advances by extending the number of important operations which we can perform without thinking about them." — Alfred North Whitehead&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I've just implemented Prettier + ESLint on my React codebase &lt;a href="https://github.com/temporalio/documentation/pull/451/commits/cae25e5ee08ef6ba840596679b7d37e79585ce4b"&gt;at work&lt;/a&gt; and figured I'd better share my notes in case others need to figure this out.&lt;/p&gt;

&lt;p&gt;My setup includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;See lint violations inline in VSCode&lt;/li&gt;
&lt;li&gt;Prettify after PR merge with GitHub actions&lt;/li&gt;
&lt;li&gt;Prettify before git commit (some folks dislike this)&lt;/li&gt;
&lt;li&gt;Ability to manually run checks locally&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even if you use TypeScript, you'll want BOTH Prettier and ESLint in your codebase. Prettier &lt;a href="https://twitter.com/swyx/status/1191452690930376705"&gt;sometimes breaks your code&lt;/a&gt; and ESLint checks things that Prettier doesn't. For historical reasons, this codebase doesn't use TypeScript, don't @ me, my love for &lt;a href="https://react-typescript-cheatsheet.netlify.app/"&gt;TypeScript is well documented&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-dependencies"&gt;
  &lt;/a&gt;
  Step 1: Dependencies
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add &lt;span class="nt"&gt;-D&lt;/span&gt; eslint eslint-plugin-react husky lint-staged prettier
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;as of time of writing these are the versions I am working with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^7.27.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint-plugin-react"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^7.23.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"husky"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^6.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lint-staged"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^11.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"prettier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.3.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2-scripts"&gt;
  &lt;/a&gt;
  Step 2: Scripts
&lt;/h2&gt;

&lt;p&gt;add stuff to package.json...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;  
    &lt;/span&gt;&lt;span class="nl"&gt;"format"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prettier --write ."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"prepare"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"husky install"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"lint-staged"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"**/*"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"prettier --write --ignore-unknown"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can now run &lt;code&gt;npm run format&lt;/code&gt; to prettify your existing codebase as a oneoff.&lt;/p&gt;

&lt;p&gt;In case you were wondering:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://typicode.github.io/husky/#/"&gt;Husky&lt;/a&gt; adds a git commit hook so that...&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/okonet/lint-staged"&gt;&lt;code&gt;Lint-staged&lt;/code&gt;&lt;/a&gt; only runs Prettier on new stuff that you stage in git&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#step-3-prettier-settings"&gt;
  &lt;/a&gt;
  Step 3: Prettier Settings
&lt;/h2&gt;

&lt;p&gt;Commence bikeshedding! Use the &lt;a href="https://prettier.io/playground/#N4Igxg9gdgLgprEAuEAzArlMMCW0AEAEnADYkQDqEATiQCYAUwA5tXHLlM-gLz4A6IABalyggDT5W7eHV74A5IKq06ghZIDOOEghjzUAQxKa4k6AFkI6UwHkAbnGriAvgEp8wflG-58OVAYAQmkOHC43YDYYdGoofCh0MhcAbm9fPz8Aeiz8ABVbABFbJHxC6AV9Gzh8akMoOggAW394tganDN19RJa+C0MYIQA6VHIafAYBoeG6huaGDwAqfABGAFEAagB2N2GYCABlGGpw5kXZuAAHEkMwOAYs-n5h57pNrJxmSUFBN3T4rUOLF4gAeOg4ez4MC3TSaAByhiacB4CmIZEoNHoCnwuBguh4wAABgBNaz4QxsfD2HDaA7UBLoJoAIyc+AAJMBGS0XESXPhLNY7I5qITBdUHE4XAA+AGZfCgzQnaDMaVc0KcZjDTQkHD3Bj4AAMklW+D2BwAqlcrk4AMKGUyLfCbKRsMJcbW6-Wrc0QAAyEAA7naHQ8PC5QVkldQVbLAX4WG7NcMEHRNBQcEMGBI-vgAPwCECF-ClRVXer4JUATwJwGAkHI1FKSn40irChcMokhcjmnLUGl+BcGT8oLgTTj-Bg6qTcDkw58MEj47j8q5DG0ulg-3jmQLgleIBHmVKgiCggXx8jEPs0rSPigLhA4hAECuuGgmmQoEpMcDAAVKQQL8UGMQNDCrL8X2ZOowAAaw4Q5yzAM5kCMEwzBAcdWToOg5z9epmHQQxmDgAAxGgmkGTVkBAQx0AOZ9hBgJoSAoIRMzgPs7jgQ5gMzSFMyrWiwDhJjwlMagYH-OpmCotDjFMF8ACtNAADwAIVghCYEOJE4D9cI4AUjCVPUw4zl0ABFdAIHgEylJActqEk2jmUMVkSCYq5TlgDM6CGZAAA5jScmNTAoOorlonyuKcRwmIAR1s+AZLfEC6M0ABaKB2DwugmLYZKcDYGSSPkpB0Mc0wmhwBzMO0LhrJS4ykBOdBMJgDz-MCpAACYXxOQwdDOW1mgqrDNAAViY6o8g8kCqsw+wOoASQ6WBDjAU53wAQQaY4a1apbOyAA"&gt;Prettier Playground&lt;/a&gt; to decide on what settings your team wants.&lt;/p&gt;

&lt;p&gt;Put this in &lt;code&gt;.prettierrc.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"arrowParens"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"always"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"bracketSpacing"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"embeddedLanguageFormatting"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"auto"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"htmlWhitespaceSensitivity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"css"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"insertPragma"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"jsxBracketSameLine"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"jsxSingleQuote"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"printWidth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"proseWrap"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"preserve"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"quoteProps"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"as-needed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"requirePragma"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"semi"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"singleQuote"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"tabWidth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"trailingComma"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"es5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"useTabs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 4: ESLint&lt;/p&gt;

&lt;p&gt;You know you gotta...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;env&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;browser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;es2021&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;extends&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eslint:recommended&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;plugin:react/recommended&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;parserOptions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ecmaFeatures&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ecmaVersion&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sourceType&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;plugins&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rules&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react/prop-types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{}],&lt;/span&gt; &lt;span class="c1"&gt;// this is dumb, why is this still recommended&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react/no-unescaped-entities&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{}],&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;no-unused-vars&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{}],&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Recommended: also enable the &lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;ESLint VSCode plugin&lt;/a&gt; to see the eslint feedback in your editor!!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Step 5: Automate&lt;/p&gt;

&lt;p&gt;We'll just add a nifty little GitHub Action in &lt;code&gt;.github/workflows/autoformat.yml&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Continuous Integration&lt;/span&gt;

&lt;span class="c1"&gt;# This action works with pull requests and pushes&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;master&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;prettier&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# Make sure the actual branch is checked out when running on pull requests&lt;/span&gt;
          &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.head_ref }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Prettify code&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;creyD/prettier_action@v3.3&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# This part is also where you can pass other options, for example:&lt;/span&gt;
          &lt;span class="na"&gt;prettier_options&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;--write **/*.{js,md}&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
