<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Kubernetes Hands-On Self-Paced Course (Free)</title>
      <author>Meir Gabay</author>
      <pubDate>Tue, 13 Apr 2021 17:11:14 +0000</pubDate>
      <link>https://dev.to/unfor19/kubernetes-hands-on-self-paced-course-free-111b</link>
      <guid>https://dev.to/unfor19/kubernetes-hands-on-self-paced-course-free-111b</guid>
      <description>&lt;p&gt;Create a local Kubernetes development environment on Windows and WSL2. In future versions, I'll add the relevant steps for macOS.&lt;/p&gt;

&lt;p&gt;Throughout this self-paced course, you'll gain hands-on experience with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating a local Kubernetes cluster with &lt;a href="https://minikube.sigs.k8s.io/docs/start/"&gt;minikube&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Deploying applications in Kubernetes using &lt;a href="https://kubernetes.io/docs/reference/kubectl/kubectl/"&gt;kubectl&lt;/a&gt; and this project's YAML files&lt;/li&gt;
&lt;li&gt;Serving an applications securely via HTTPS with &lt;a href="https://github.com/kubernetes/ingress-nginx/"&gt;NGINX Ingress Controller&lt;/a&gt; (LoadBalancer) and &lt;a href="https://github.com/jetstack/cert-manager"&gt;cert-manager&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Managing Kubernetes resources as packages using &lt;a href="https://helm.sh/"&gt;Helm v3&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Authenticating users with Google as an Identity Provider (IdP), implementing both &lt;a href="https://oauth.net/2/"&gt;OAuth2&lt;/a&gt; and &lt;a href="https://openid.net/connect/"&gt;OAuth2+OIDC&lt;/a&gt; using &lt;a href="https://github.com/oauth2-proxy/oauth2-proxy"&gt;oauth2-proxy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Building the containerized web-server application &lt;a href="https://github.com/unfor19/docker-cats"&gt;docker-cats&lt;/a&gt; and deploying it to the Kubernetes cluster with &lt;a href="https://kubernetes.io/docs/reference/kubectl/cheatsheet/#updating-resources"&gt;kubectl rollout&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#link-to-course"&gt;
  &lt;/a&gt;
  Link To Course
&lt;/h2&gt;

&lt;p&gt;Open-source project @ &lt;a href="https://github.com/unfor19/kubernetes-localdev"&gt;GitHub unfor19/kubernetes-localdev&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sneak-peek-of-the-architecture"&gt;
  &lt;/a&gt;
  Sneak Peek Of The Architecture
&lt;/h2&gt;

&lt;p&gt;By the end of this course, you'll deploy the below architecture on your local machine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SM4-ttq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d33vo9sj4p3nyc.cloudfront.net/kubernetes-localdev/kubernetes-localdev-architecture.png%3Fdummy%3Dnull" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SM4-ttq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d33vo9sj4p3nyc.cloudfront.net/kubernetes-localdev/kubernetes-localdev-architecture.png%3Fdummy%3Dnull" alt="kubernetes-localdev-architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#create-a-kubernetes-cluster"&gt;Create a Kubernetes Cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#enable-secured-https-access-from-windows-to-wsl2"&gt;Enable secured HTTPS access from Windows to WSL2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#configure-lens"&gt;Configure LENS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#nginx-ingress-controller"&gt;NGINX Ingress Controller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#support-dns-resolution-in-windows-host"&gt;Support DNS resolution in Windows host&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#http"&gt;HTTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unfor19/kubernetes-localdev#https"&gt;HTTPS&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#create-a-certificate-authority-ca-certificate-and-key"&gt;Create A Certificate Authority (CA) Certificate And Key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#load-ca-certificates-to-a-kubernetes-secret"&gt;Load CA Certificates To A Kubernetes Secret&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#install-cert-manager-and-issue-a-self-signed-certificate"&gt;Install Cert-Manager And Issue A Self-Signed Certificate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unfor19/kubernetes-localdev#authentication---oauth2"&gt;Authentication - OAuth2&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#create-googles-credentials"&gt;Create Google's Credentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#create-kubernetes-secrets-for-googles-credentials"&gt;Create Kubernetes Secrets For Google's Credentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploy-oauth2-proxy-and-protect-an-application"&gt;Deploy OAuth2-Proxy And Protect An Application&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unfor19/kubernetes-localdev#authentication---oidc"&gt;Authentication - OIDC&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#deploy-oauth2-proxy-and-use-oidc"&gt;Deploy OAuth2-Proxy And Use OIDC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#authentication-summary"&gt;Authentication Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unfor19/kubernetes-localdev#local-development-ci-and-deployment-cd"&gt;Local Development (CI) And Deployment (CD)&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#build-the-application-ci"&gt;Build The Application (CI)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploy-the-application-cd"&gt;Deploy The Application (CD)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#cleanup"&gt;Cleanup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>kubernetes</category>
      <category>docker</category>
      <category>devops</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Twitter Tweet Box with Character Limit Highlighting in HTML CSS &amp; JavaScript</title>
      <author>CodingNepal</author>
      <pubDate>Tue, 13 Apr 2021 17:03:26 +0000</pubDate>
      <link>https://dev.to/codingnepal/twitter-tweet-box-with-character-limit-highlighting-in-html-css-javascript-2ai8</link>
      <guid>https://dev.to/codingnepal/twitter-tweet-box-with-character-limit-highlighting-in-html-css-javascript-2ai8</guid>
      <description>&lt;p&gt;Hey friends, today in this blog you'll learn how to create a Twitter Tweet Box with Character Limit Highlighting using HTML CSS &amp;amp; JavaScript. In the earlier blog, I have shared &lt;a href="https://www.codingnepalweb.com/2021/03/limit-input-characters-using-javascript.html"&gt;how to Easily Limit Input Characters in JavaScript&lt;/a&gt;, and in this blog, you'll also learn to limit input characters but it will be more advanced than the previous one because in this Twitter tweet box there is a feature of character limit highlighting which was not in the previous project.&lt;/p&gt;

&lt;p&gt;If you have a Twitter account then you definitely know what is tweet box and how it looks like. In this project [Twitter Post Share Box or Tweet Box], on the webpage, there is a tweet box as you can see in the preview image. In this box, there is a typing area, some media icons, a characters limit counter, and a tweet button. At first, the counter will be hidden and the tweet button also disabled but once you start typing then there is visible the counter and the button also active/clickable.&lt;/p&gt;

&lt;p&gt;In this tweet box, there is a limit of 100 characters which means you can type 1-100 length/numbers of characters. Once you crossed the limit then the over characters will start highlighting, the tweet button is again disabled and the counter color is also charged into red and it shows you how many characters that you have to remove to tweet or proceed.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#video-tutorial-of-tweet-box-with-character-limit-highlighting"&gt;
  &lt;/a&gt;
  Video Tutorial of Tweet Box with Character Limit Highlighting
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=_pbuwzly6xA&amp;amp;ab_channel=CodingNepal"&gt;Click here to Watch Full Video on YouTube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can copy the codes from the given boxes or download the code files from the given link but I recommend you download the source code files instead of copying codes. &lt;a href="https://www.codingnepalweb.com/2021/04/twitter-tweet-box-with-character-limit.html"&gt;Click here to download code files.&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#html-code"&gt;
  &lt;/a&gt;
  HTML CODE:
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;!-- Created By CodingNepal - www.codingnepalweb.com --&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset="UTF-8"&amp;gt;
  &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
  &amp;lt;title&amp;gt;Twitter Tweet Box UI Design | CodingNepal&amp;lt;/title&amp;gt;
  &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
  &amp;lt;link rel="stylesheet" href="https://unicons.iconscout.com/release/v3.0.6/css/line.css"&amp;gt;
  &amp;lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;div class="wrapper"&amp;gt;
    &amp;lt;div class="input-box"&amp;gt;
      &amp;lt;div class="tweet-area"&amp;gt;
        &amp;lt;span class="placeholder"&amp;gt;What's happening?&amp;lt;/span&amp;gt;
        &amp;lt;div class="input editable" contenteditable="true" spellcheck="false"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="input readonly" contenteditable="true" spellcheck="false"&amp;gt;&amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;div class="privacy"&amp;gt;
        &amp;lt;i class="fas fa-globe-asia"&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;span&amp;gt;Everyone can reply&amp;lt;/span&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="bottom"&amp;gt;
      &amp;lt;ul class="icons"&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;i class="uil uil-capture"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;i class="far fa-file-image"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;i class="fas fa-map-marker-alt"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;i class="far fa-grin"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;i class="far fa-user"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;
      &amp;lt;/ul&amp;gt;
      &amp;lt;div class="content"&amp;gt;
        &amp;lt;span class="counter"&amp;gt;100&amp;lt;/span&amp;gt;
        &amp;lt;button&amp;gt;Tweet&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;

  &amp;lt;script src="script.js"&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#css-code"&gt;
  &lt;/a&gt;
  CSS CODE
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&amp;amp;display=swap');
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Open Sans', sans-serif;
}
body{
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background: #1da1f2;
}
::selection{
  color: #fff;
  background: #1da1f2;
}
.wrapper{
  background: #fff;
  max-width: 475px;
  width: 100%;
  border-radius: 15px;
  padding: 25px 25px 15px 25px;
  box-shadow: 0px 10px 15px rgba(0,0,0,0.1);
}
.input-box{
  padding-top: 10px;
  border-bottom: 1px solid #e6e6e6;
}
.input-box .tweet-area{
  position: relative;
  min-height: 130px;
  max-height: 170px;
  overflow-y: auto;
}
.tweet-area::-webkit-scrollbar{
  width: 0px;
}
.tweet-area .placeholder{
  position: absolute;
  margin-top: -3px;
  font-size: 22px;
  color: #98A5B1;
  pointer-events: none;
}
.tweet-area .input{
  outline: none;
  font-size: 17px;
  min-height: inherit;
  word-wrap: break-word;
  word-break: break-all;
}
.tweet-area .editable{
  position: relative;
  z-index: 5;
}
.tweet-area .readonly{
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  color: transparent;
  background: transparent;
}
.readonly .highlight{
  background: #fd9bb0;
}
.input-box .privacy{
  color: #1da1f2;
  margin: 15px 0;
  display: inline-flex;
  align-items: center;
  padding: 7px 10px;
  border-radius: 50px;
  cursor: pointer;
  transition: background 0.2s ease;
}
.privacy:hover, .icons li:hover{
  background: #e7f5fe;
}
.privacy i{
  font-size: 18px;
}
.privacy span{
  font-size: 15px;
  font-weight: 600;
  margin-left: 7px;
}
.bottom{
  display: flex;
  margin-top: 13px;
  align-items: center;
  justify-content: space-between;
}
.bottom .icons{
  display: inline-flex;
}
.icons li{
  list-style: none;
  color: #1da1f2;
  font-size: 20px;
  margin: 0 2px;
  height: 38px;
  width: 38px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background 0.2s ease;
}
.bottom .content{
  display: flex;
  align-items: center;
  justify-content: center;
}
.bottom .counter{
  color: #333;
  display: none;
  font-weight: 500;
  margin-right: 15px;
  padding-right: 15px;
  border-right: 1px solid #aab8c2;
}
.bottom button{
  padding: 9px 18px;
  border: none;
  outline: none;
  border-radius: 50px;
  font-size: 16px;
  font-weight: 700;
  background: #1da1f2;
  color: #fff;
  cursor: pointer;
  opacity: 0.5;
  pointer-events: none;
  transition: background 0.2s ease;
}
.bottom button.active{
  opacity: 1;
  pointer-events: auto;
}
.bottom button:hover{
  background: #0d8bd9;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  JavaScript CODE
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const wrapper = document.querySelector(".wrapper"),
editableInput = wrapper.querySelector(".editable"),
readonlyInput = wrapper.querySelector(".readonly"),
placeholder = wrapper.querySelector(".placeholder"),
counter = wrapper.querySelector(".counter"),
button = wrapper.querySelector("button");

editableInput.onfocus = ()=&amp;gt;{
  placeholder.style.color = "#c5ccd3";
}
editableInput.onblur = ()=&amp;gt;{
  placeholder.style.color = "#98a5b1";
}

editableInput.onkeyup = (e)=&amp;gt;{
  let element = e.target;
  validated(element);
}
editableInput.onkeypress = (e)=&amp;gt;{
  let element = e.target;
  validated(element);
  placeholder.style.display = "none";
}

function validated(element){
  let text;
  let maxLength = 100;
  let currentlength = element.innerText.length;

  if(currentlength &amp;lt;= 0){
    placeholder.style.display = "block";
    counter.style.display = "none";
    button.classList.remove("active");
  }else{
    placeholder.style.display = "none";
    counter.style.display = "block";
    button.classList.add("active");
  }

  counter.innerText = maxLength - currentlength;

  if(currentlength &amp;gt; maxLength){
    let overText = element.innerText.substr(maxLength); //extracting over texts
    overText = `&amp;lt;span class="highlight"&amp;gt;${overText}&amp;lt;/span&amp;gt;`; //creating new span and passing over texts
    text = element.innerText.substr(0, maxLength) + overText; //passing overText value in textTag variable
    readonlyInput.style.zIndex = "1";
    counter.style.color = "#e0245e";
    button.classList.remove("active");
  }else{
    readonlyInput.style.zIndex = "-1";
    counter.style.color = "#333";
  }
  readonlyInput.innerHTML = text; //replacing innerHTML of readonly div with textTag value
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>tweetbox</category>
      <category>postbox</category>
      <category>css</category>
    </item>
    <item>
      <title>The 7 Most Popular DEV Posts from the Past Week</title>
      <author>Jess Lee (she/her)</author>
      <pubDate>Tue, 13 Apr 2021 17:00:03 +0000</pubDate>
      <link>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-4njl</link>
      <guid>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-4njl</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week. ❤️&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-is-of-the-essence"&gt;
  &lt;/a&gt;
  Time is of the essence
&lt;/h2&gt;

&lt;p&gt;"Despite being a failure at managing my own time, I can still give some advice and tips," writes &lt;a class="comment-mentioned-user" href="https://dev.to/technoglot"&gt;@technoglot&lt;/a&gt;
. You sure can! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/technoglot" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFu_rAsi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--tY0BDOkD--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/430182/bd897f8a-247e-44b6-bac8-db79fbe1a55b.jpeg" alt="technoglot image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/technoglot/time-management-productivity-tips-for-devs-4d33" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Time management &amp;amp; productivity tips for devs ⏳&lt;/h2&gt;
      &lt;h3&gt;Amelia Vieira Rosado ・ Apr  6 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#writing&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-real-work%E2%84%A2-of-programming"&gt;
  &lt;/a&gt;
  The Real Work™ of programming
&lt;/h2&gt;

&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/adamcoster"&gt;@adamcoster&lt;/a&gt;
 explains that the Real Work™ of programming mostly consists of things that aren't directly writing code. And documentation is certainly one of them!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/adamcoster" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--epoNOXRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mBKsVSo---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/247112/15b3ffee-601f-4e00-95ff-c31ce8abe39f.jpg" alt="adamcoster image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/adamcoster/documentation-as-code-40a7" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;💻 Documentation as code&lt;/h2&gt;
      &lt;h3&gt;Adam Coster ・ Apr  8 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#try-to-have-a-wonderful-weekend"&gt;
  &lt;/a&gt;
  Try to have a wonderful weekend
&lt;/h2&gt;

&lt;p&gt;As &lt;a class="comment-mentioned-user" href="https://dev.to/poudyal_rabin"&gt;@poudyal_rabin&lt;/a&gt;
 says, weekends are precious. As developers, we often but our personal time on the back-burner since it's especially easy for work to follow us home these days. If you need some inspiration for your weekend, this post is for you.   &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/poudyal_rabin" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nPwVCQo1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--up4pUmiT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/414902/b395dac8-f6f1-4742-95c4-dc48540553be.jpg" alt="poudyal_rabin image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/poudyal_rabin/how-to-spend-a-meaningful-weekend-as-a-programmer-353j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to have a meaningful weekend as a programmer?&lt;/h2&gt;
      &lt;h3&gt;poudyal_rabin ・ Apr 11 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#spring-cleaning"&gt;
  &lt;/a&gt;
  Spring cleaning
&lt;/h2&gt;

&lt;p&gt;Need some unit testing tips and tricks for clean code? &lt;a class="comment-mentioned-user" href="https://dev.to/thawkin3"&gt;@thawkin3&lt;/a&gt;
 has you covered.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thawkin3" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wssFpIs9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--sWSbd6o1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/344735/70749f3f-334b-4414-a6e2-ca8dd8a89f3a.jpeg" alt="thawkin3 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thawkin3/clean-code-with-unit-tests-tips-and-tricks-for-keeping-your-test-suites-clean-483l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Clean Code with Unit Tests: Tips and tricks for keeping your test suites clean&lt;/h2&gt;
      &lt;h3&gt;Tyler Hawkins ・ Apr  7 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#testing&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#a-uniquely-portable-magic"&gt;
  &lt;/a&gt;
  A uniquely portable magic
&lt;/h2&gt;

&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/jordienr"&gt;@jordienr&lt;/a&gt;
 shares a short but sweet list of books that aren't directly related to programming, but are enriching for developers, nonetheless. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/jordienr" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1HugYJoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--l2Al9lUn--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/164268/b4366937-11ed-40ff-aca2-82155ee8de9c.jpg" alt="jordienr image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jordienr/4-books-that-are-not-about-computers-that-made-me-a-good-software-developer-2hac" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;4 Books that are not about computers that made me a good Software Developer&lt;/h2&gt;
      &lt;h3&gt;Jordi Enric ・ Apr 10 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#create-build-and-publish-a-package-to-npm-in-es6"&gt;
  &lt;/a&gt;
  Create, build and publish a package to npm in ES6
&lt;/h2&gt;

&lt;p&gt;"The npm ecosystem is a great way to distribute useful blocks of reusable code," says &lt;a class="comment-mentioned-user" href="https://dev.to/whitep4nth3r"&gt;@whitep4nth3r&lt;/a&gt;
. "Through learning how to build and publish packages to npm, I feel like I’ve really levelled up my web dev skills." Congrats! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/whitep4nth3r" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gFhxX9YI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--89x-qD1I--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/492757/d64f2cf8-616d-4a73-af1c-17273b0c8545.png" alt="whitep4nth3r image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/whitep4nth3r/how-to-build-test-and-release-a-node-module-in-es6-296b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to build, test and release a node module in ES6&lt;/h2&gt;
      &lt;h3&gt;Salma Alam-Naylor ・ Apr 11 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#npm&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#youve-got-mail"&gt;
  &lt;/a&gt;
  You've got mail
&lt;/h2&gt;

&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/aahnik"&gt;@aahnik&lt;/a&gt;
 explains how you can easily send an email using a Python script. If everything goes right, there will be no output in the terminal, and you will see the email sitting right in the recipient's inbox!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/aahnik" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--28COnZ56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--xJdF-Ep6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/453833/0d554f6d-073a-47e0-b356-bbdf3de4f171.jpeg" alt="aahnik image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aahnik/how-to-send-emails-with-python-simply-explained-for-beginners-hea" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to send emails with Python? Simply explained for beginners&lt;/h2&gt;
      &lt;h3&gt;Aahnik Daw ・ Apr  7 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#email&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>Tech Talk: "Accessibility is a Requirement" (RailsConf 2021)
</title>
      <author>Sylwia Vargas</author>
      <pubDate>Tue, 13 Apr 2021 16:50:32 +0000</pubDate>
      <link>https://dev.to/sylwiavargas/tech-talk-accessibility-is-a-requirement-railsconf-2021-2d9j</link>
      <guid>https://dev.to/sylwiavargas/tech-talk-accessibility-is-a-requirement-railsconf-2021-2d9j</guid>
      <description>&lt;p&gt;✨ &lt;strong&gt;What is this post about&lt;/strong&gt;: As a part of my professional growth, I make time to watch conference talks on Ruby, Rails, JS, React, tech writing, and tech trivia. Previously, I'd just watch them but now I will take and publish notes for future reference. This talk was a part of RailsConf 2021 that I'm participating at the time of writing. &lt;/p&gt;

&lt;p&gt;✨ &lt;strong&gt;Talk:&lt;/strong&gt; "Accessibility is a Requirement" by &lt;a href="https://twitter.com/therealboone"&gt;Ryan Boone&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;✨ &lt;strong&gt;One-sentence summary&lt;/strong&gt;: Accessible web applications reach wider audiences, ensure businesses are in compliance with the law, and, most importantly, remove barriers for the one in seven worldwide living with a permanent disability. But limited time, lack of knowledge, and even good intentions get in the way of building them.&lt;/p&gt;

&lt;p&gt;✨ &lt;strong&gt;Impression&lt;/strong&gt;: I loved how tips-packed this talk was!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wcag"&gt;WCAG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#side-notes"&gt;Side Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#read-more"&gt;Read more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;accessibility&lt;/strong&gt; is a measure of how simply a person can participate in an activity&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;why bother&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;Title III [of the Americans with Disabilities Act] prohibits discrimination on the basis of disability in the activities of places of public accommodations" (ADA 1990, Title III)&lt;/li&gt;
&lt;li&gt;"Across the top one million home pages, 60,090,278 distinct accessibility errors were detected -- an average of 60.9 errors per page" (&lt;a href="https://webaim.ors/projects/million"&gt;https://webaim.ors/projects/million&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;there are more and more virtual a11y lawsuits in recent years (35% spike since the last year)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;61 million Americans have a disability&lt;/strong&gt; that impacts major life activities (Centers for Disease Control and Prevention)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#wcag"&gt;
  &lt;/a&gt;
  WCAG
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Web Content Accessibility Guidelines&lt;/li&gt;
&lt;li&gt;Content should be POUR: perceivable, operable, understandable, robust&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/sylwiavargas/checklist-web-accessibility-3abl"&gt;I wrote a checklist for those here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Perceivable&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;everything that's on the screen should be recognizable by the senses (hearing, seeing, and even feeling if necessary)&lt;/li&gt;
&lt;li&gt;color contrast can be checked in your browser console - please notice the two white lines in the color picker -- they indicate the colors that will meet the contrast ratio
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qEyjYaxt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ek78dgqfzh8uhxcp7n9.png" alt="Chrome console's color picker"&gt;
&lt;/li&gt;
&lt;li&gt;include &lt;a href="https://accessibility.huit.harvard.edu/describe-content-images"&gt;alt text&lt;/a&gt; (if the image is decorative, still keep the alt text tag with a value of "")&lt;/li&gt;
&lt;li&gt;use hidden text on svg icons (e.g. &lt;code&gt;&amp;lt;span class="sr-only&amp;gt; Navigation Menu &amp;lt;/span&amp;gt;&lt;/code&gt;) and aria labels to make sure that the icon is easy to understand &lt;/li&gt;
&lt;li&gt;SVGs are focusable and so you need to disable focus on them (anything that's focusable should be interactive)&lt;/li&gt;
&lt;li&gt;use semantic html&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Operable&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;people should be able to interact with the content in a variety of ways (mouse, keyboard, voice, etc.)&lt;/li&gt;
&lt;li&gt;include "skip to content" hidden menu that pops up when you use keyboard navigation&lt;/li&gt;
&lt;li&gt;keep the focus style visible!&lt;/li&gt;
&lt;li&gt;don't skip header levels&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Understandable&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;include the &lt;code&gt;lang&lt;/code&gt; attribute on your website so the screenreaders will pronounce the words correctly&lt;/li&gt;
&lt;li&gt;provide clear errors (explicit, rightly-placed with an aria description)&lt;/li&gt;
&lt;li&gt;use labels on the forms&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Robust&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;usable on a variety of technologies and contexts, and remain accessible in the future&lt;/li&gt;
&lt;li&gt;use &lt;a href="https://validator.w3.org/"&gt;html validator&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;use &lt;a href="https://madebymike.github.io/html5-periodic-table/"&gt;semantic html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;output&lt;/code&gt; element to inform the screen reader of the changes on the website&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#tools"&gt;
  &lt;/a&gt;
  Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Integrate &lt;a href="https://www.deque.com/blog/writing-automated-tests-accessibility/"&gt;automated testing&lt;/a&gt; in your CICD pipeline&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Testing tools&lt;/strong&gt;: 

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.deque.com/blog/how-to-test-for-accessibility-with-cypress/"&gt;Cypress&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dequelabs/axe-core"&gt;axe-core&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developers.google.com/web/tools/lighthouse"&gt;lighthouse&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/lighthouse-ci/"&gt;lighthouse CI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Chrome extensions&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://chrome.google.com/webstore/detail/axe-devtools-web-accessib/lhdoppojpmngadmnindnejefpokejbdd?hl=en-US"&gt;axe DevTools&lt;/a&gt; - detecting 57% of accessibility errors; there's also a pro version that detects 84% with guided tests&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/accessibility-insights-fo/pbjjkligggfmakdaogkfomddhfmpjeni?hl=en"&gt;Accessibility Insights for Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://bradfrost.com/blog/post/atomic-web-design/"&gt;Atomic Web Design&lt;/a&gt; - a component methodology that breaks pages down into a hierarchy of composition (simples and simpler components) until you can't break them down anymore.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components"&gt;Web components&lt;/a&gt; - a suite of different technologies allowing you to create reusable custom elements — with their functionality encapsulated away from the rest of your code — and utilize them in your web apps&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;RAILS specifically&lt;/strong&gt;: &lt;a href="https://github.com/trailblazer/cells"&gt;cells gem&lt;/a&gt; - encapsulating parts of your UI into components into view models; view models, or cells, are simple ruby classes that can render templates&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Screen readers&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.nvaccess.org/"&gt;NVDA&lt;/a&gt; for Windows&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.apple.com/accessibility/vision/"&gt;Apple's voiceover&lt;/a&gt;, a Mac built-in &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#side-notes"&gt;
  &lt;/a&gt;
  Side notes:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;"The web is for everyone" &lt;a href="https://www.w3.org/People/Berners-Lee/"&gt;Sir Tim Berners-Lee&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;"The power of the web is in its universality. Access by everyone regardless of disability is an essential aspect" Sir Tim Berners-Lee&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#read-more"&gt;
  &lt;/a&gt;
  Read more
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.microsoft.com/design/inclusive/"&gt;Inclusive Design&lt;/a&gt; by Microsoft&lt;/li&gt;
&lt;li&gt;More on &lt;a href="https://accessibility.huit.harvard.edu/describe-content-images"&gt;alt text&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/WAI/standards-guidelines/wcag/"&gt;WCAG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/fundamentals/accessibility/semantics-aria"&gt;ARIA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.deque.com/blog/writing-automated-tests-accessibility/"&gt;automated testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getflywheel.com/layout/how-to-build-ui-components-in-rails/"&gt;How we build UI components in Rails at Flywheel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>techtalks</category>
      <category>a11y</category>
      <category>rails</category>
    </item>
    <item>
      <title>Beginners guide to Promises in Javascript</title>
      <author>Ashok Naik</author>
      <pubDate>Tue, 13 Apr 2021 16:45:58 +0000</pubDate>
      <link>https://dev.to/a_shokn/beginners-guide-to-promises-in-javascript-5efp</link>
      <guid>https://dev.to/a_shokn/beginners-guide-to-promises-in-javascript-5efp</guid>
      <description>&lt;p&gt;A Promise in JavaScript is an object which holds the completion status of an asynchronous operation. The completion status can be &lt;em&gt;Resolved, Rejected, Pending&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4_1i5UDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rywxmm88tzejejqhr8pg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4_1i5UDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rywxmm88tzejejqhr8pg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#states-of-promises"&gt;
  &lt;/a&gt;
  States of Promises
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Resolved:&lt;/strong&gt; A promise is resolved state when there are no errors returned during the execution of the promise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rejected:&lt;/strong&gt; A promise is rejected state when errors occur during the execution of the promise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pending:&lt;/strong&gt; A promise is pending state when the result is not&lt;br&gt;
ready. &lt;/p&gt;

&lt;p&gt;Promises are used to carry out asynchronous tasks like network requests. Using Promises we can write clean and understandable code. Promises were meant to avoid the nesting of callbacks.&lt;/p&gt;

&lt;p&gt;Let's look at an example that will help us understand Promises in a better way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const promise = new Promise((resolve, reject) =&amp;gt; {
 let allWell = true;
  if(allWell) {
    resolve('Promise Resolved!');
  } else {
    reject('Promise Rejected');
  }
});
promise.then((result)=&amp;gt;{
    console.log(result) 
}).catch((result) =&amp;gt; {
    console.log(result)
});
//Output:  "Promise Resolved!"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, the &lt;code&gt;promise&lt;/code&gt; variable holds the response of the completion status rejected, resolved, pending. As the value is &lt;code&gt;allWell&lt;/code&gt; is true the promise is resolved and the message &lt;code&gt;Promise Resolved!&lt;/code&gt; is returned. &lt;/p&gt;

&lt;p&gt;Promises are really great when something is going to take a long time in the background like fetching information from a database table we can resolve and carry on with execution and handle if something goes wrong by returning an error message.&lt;/p&gt;

&lt;p&gt;Let's look at another example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const promise1 = new Promise((resolve, reject) =&amp;gt; {
    resolve('Promise1  Resolved!');
});

const promise2 = new Promise((resolve, reject) =&amp;gt; {
    resolve('Promise2  Resolved!');
});

const promise3 = new Promise((resolve, reject) =&amp;gt; {
    resolve('Promise3  Resolved!');
});


Promise.all([promise1,promise2,promise3]).then((result)=&amp;gt;{
console.log(result);
})

//Output:  ["Promise1  Resolved!", "Promise2  Resolved!", "Promise3  Resolved!"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we have 3 simple promises which are always resolved and they all return a single message.&lt;br&gt;
By Using &lt;code&gt;Promise.all&lt;/code&gt; we can run all promises in parallel, As soon as all the promises are executed &lt;code&gt;.then&lt;/code&gt; method is called. &lt;code&gt;.then&lt;/code&gt; will return an array of all the successful messages.&lt;/p&gt;

&lt;p&gt;Thank you for your time. That's All folks &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Speech Recognition and Voice Activity Detection for your Apps</title>
      <author>Spurwing</author>
      <pubDate>Tue, 13 Apr 2021 16:17:55 +0000</pubDate>
      <link>https://dev.to/spurwing/speech-recognition-and-voice-activity-detection-for-your-apps-3je8</link>
      <guid>https://dev.to/spurwing/speech-recognition-and-voice-activity-detection-for-your-apps-3je8</guid>
      <description>&lt;p&gt;Have you ever wanted to dive into the future and use advanced &lt;strong&gt;AI technologies&lt;/strong&gt;? Today you can, thanks to our simple library! In this post we showcase our easy and simple Speech Recognition library for adding &lt;strong&gt;Voice Commands and Controls&lt;/strong&gt; to any application.&lt;/p&gt;

&lt;p&gt;Whether you are building web apps, native apps or desktop apps, this technology can be integrated into any system with an internet connection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#full-demo"&gt;
  &lt;/a&gt;
  Full Demo
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=60llvnv3nDA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YTY0N0DJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25m9k0p2am8qhvw5uksc.png" alt="voice activity detection library"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;YouTube: &lt;a href="https://www.youtube.com/watch?v=60llvnv3nDA"&gt;https://www.youtube.com/watch?v=60llvnv3nDA&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source Code
&lt;/h2&gt;

&lt;p&gt;GitHub: &lt;a href="https://github.com/Spurwing/Speech-Recognition"&gt;https://github.com/Spurwing/Speech-Recognition&lt;/a&gt; &lt;br&gt;
This is our simple yet powerful server-client implementation with Speech Recognition in the browser. It works on any device that uses a modern up-to-date web browser (FireFox or Chrome recommended).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#architecture"&gt;
  &lt;/a&gt;
  Architecture
&lt;/h2&gt;

&lt;p&gt;The architecture is straightforward. The library contains the implementation of the Spurwing Socket Server, which is also connected to a Speech-to-Text provider. For the latter we use WitAI (by Facebook), it's a completely free service and easy to use. Alternatively you can easily integrate any other STT provider (Google, IBM Watson, Bing, ...) but these may come at a price.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tO_TLLmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxhlps4ohi06xg3jc6o8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tO_TLLmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxhlps4ohi06xg3jc6o8.png" alt="speech to text architecture"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;This is a NodeJS implementation, you need node (with npm) v12+. Check your version using &lt;code&gt;node -v&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Clone or download this respository.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to make it download all necessary dependencies. (If it fails you may need to install C++ Build Tools).&lt;/li&gt;
&lt;li&gt;We use WitAI as a free STT provider. You need to sign up and create an app here &lt;a href="https://wit.ai/apps"&gt;https://wit.ai/apps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Under settings you'll find your "Server Access Token".&lt;/li&gt;
&lt;li&gt;Copy &lt;code&gt;config.sample.json&lt;/code&gt; to &lt;code&gt;config.json&lt;/code&gt; and edit it.&lt;/li&gt;
&lt;li&gt;You have to provide a value for &lt;code&gt;WITAPIKEY&lt;/code&gt; which is your "Server Access Token".&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;node index.js&lt;/code&gt; to launch the Socket Server.&lt;/li&gt;
&lt;li&gt;Visit &lt;a href="http://localhost:8002/Spurwing/audio/"&gt;http://localhost:8002/Spurwing/audio/&lt;/a&gt; to start testing.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;The Socket Server runs on port &lt;code&gt;8002&lt;/code&gt; which you can change in &lt;code&gt;index.js&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#client-implementation"&gt;
  &lt;/a&gt;
  Client implementation
&lt;/h3&gt;

&lt;p&gt;The code snippets below show how you can add this Speech Recognition library to your web apps.&lt;/p&gt;

&lt;p&gt;Inside your html's &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://spurwing.github.io/Speech-Recognition/public/VAD.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;     &lt;span class="c"&gt;&amp;lt;!-- Required: VAD algorithm --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://spurwing.github.io/Speech-Recognition/public/audio.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;   &lt;span class="c"&gt;&amp;lt;!-- Required: Speech Recognition Library --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"demo.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;    &lt;span class="c"&gt;&amp;lt;!-- Your implementation --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside &lt;code&gt;demo.js&lt;/code&gt; you have:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;spa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SpurwingAudio&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// on user click start mic:&lt;/span&gt;
&lt;span class="nx"&gt;spa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// ask user for microphone access&lt;/span&gt;
    &lt;span class="nx"&gt;processStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You must allow your microphone.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// on user click stop mic:&lt;/span&gt;
&lt;span class="c1"&gt;// spa.end();&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;processStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// start Voice Activity Detection&lt;/span&gt;
  &lt;span class="nx"&gt;spa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startVAD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;recording&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// function: on speech start&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         &lt;span class="c1"&gt;// function: on speech end&lt;/span&gt;
        &lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="c1"&gt;// send audio/speech fragment to server (optional custom id of fragment)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// create socket connection to server&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;localhost:8002&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// server domain&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/Spurwing/audio/socket.io&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;// server endpoint&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// capture "text" event from server (containing data)&lt;/span&gt;
&lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// do something with the transcribed audio text&lt;/span&gt;

    &lt;span class="c1"&gt;// data structure: { raw: "hello", nlp: null, id: 0 }&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With just a few lines of code, this opens up countless of possibilities and opportunities in Business Automation, Time Management and many other areas.&lt;/p&gt;

&lt;p&gt;I'm eager to see which solutions you'll build with this, let us know in the comments below! :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-us"&gt;
  &lt;/a&gt;
  About us
&lt;/h2&gt;

&lt;p&gt;Spurwing provides an enterprise grade &lt;a href="https://www.spurwing.io/"&gt;Appointment Scheduling API&lt;/a&gt; and Calendar Management Solutions for your business and projects. Easy to customize and effortless to integrate. We provide software teams with Time Management Solutions thanks to our enterprise grade Appointment Scheduling API. In addition we are building a completely free and open source marketplace containing widgets, chat bots, dashboards and integration solutions.&lt;/p&gt;

&lt;p&gt;For more projects make sure to follow our blog and on GitHub &lt;a href="https://github.com/Spurwing/"&gt;https://github.com/Spurwing/&lt;/a&gt; &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>algorithms</category>
      <category>javascript</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Hello World</title>
      <author>Lee Jian Howe</author>
      <pubDate>Tue, 13 Apr 2021 16:05:57 +0000</pubDate>
      <link>https://dev.to/leejianhowe/hello-world-38pa</link>
      <guid>https://dev.to/leejianhowe/hello-world-38pa</guid>
      <description>&lt;p&gt;Today, I found out about dev. to. &lt;/p&gt;

&lt;p&gt;A great place for tech enthusiasts. It has a great community of developers from different backgrounds. Many articles to read for new developers like myself and for experienced developers to share their knowledge. &lt;/p&gt;

&lt;p&gt;I will share with you my journey in coming from a non-tech background into tech. I think many of you here are in the same shoes as I am. &lt;/p&gt;

&lt;p&gt;Join me in my journey as I share my experiences. hope you like my articles. would love to hear your thoughts and experiences.❤️&lt;/p&gt;

</description>
      <category>inthirtyseconds</category>
    </item>
    <item>
      <title>Writing a CSS-in-JS library to rapidly create reusable designs</title>
      <author>Tom Lienard</author>
      <pubDate>Tue, 13 Apr 2021 16:02:16 +0000</pubDate>
      <link>https://dev.to/quiibz/writing-a-css-in-js-library-to-rapidly-create-reusable-designs-39ap</link>
      <guid>https://dev.to/quiibz/writing-a-css-in-js-library-to-rapidly-create-reusable-designs-39ap</guid>
      <description>&lt;p&gt;Hello, today I'm going to talk about my CSS-in-JS library called &lt;a href="https://github.com/QuiiBz/niftycss"&gt;NiftyCSS&lt;/a&gt;. I developed few very cool ideas and wanted to get some &lt;strong&gt;feedback and thoughts&lt;/strong&gt; from the community.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-writing-css-in-js"&gt;
  &lt;/a&gt;
  Why writing CSS in JS?
&lt;/h2&gt;

&lt;p&gt;Good question. If you never tried any CSS-in-JS library, you might be wondering why and how you can write your CSS in your JavaScript (or TypeScript of course).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-class-name-conflicts"&gt;
  &lt;/a&gt;
  No class name conflicts
&lt;/h3&gt;

&lt;p&gt;Since the class name is generated automatically by the library, you don't have to think about it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deadcode-elimination"&gt;
  &lt;/a&gt;
  Dead-code elimination
&lt;/h3&gt;

&lt;p&gt;If a class is not used, the CSS will not be injected (or server-side renderer for the libraries which support it) and you will never have extra CSS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-js-in-your-css"&gt;
  &lt;/a&gt;
  Use JS in your CSS
&lt;/h3&gt;

&lt;p&gt;It seems logical, but you can actually use ANY feature from your JavaScript code, like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Variables&lt;/li&gt;
&lt;li&gt;Calling functions to get code&lt;/li&gt;
&lt;li&gt;Reusing styles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And there are much more pros to use CSS-in-JS. Of course, there are also some &lt;a href="https://www.freecodecamp.org/news/you-dont-need-css-in-js-why-i-use-stylesheets/"&gt;draw-backs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#niftycss-cool-features"&gt;
  &lt;/a&gt;
  NiftyCSS cool features
&lt;/h2&gt;

&lt;p&gt;First of all, let me show you what an example code looks like:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5HBQPUGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/GtDXQur.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5HBQPUGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/GtDXQur.png" alt=""&gt;&lt;/a&gt;&lt;br&gt;
As you can see, I wrote the CSS in a JavaScript file (actually it was TypeScript), and used some strange techniques. The &lt;code&gt;css&lt;/code&gt; function returns me a unique class name, so I can include it everywhere I want.&lt;br&gt;
At the right, you can see the generated and injected CSS. Let's go more in-depth about few features used:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#directives-for-automatic-code-generation"&gt;
  &lt;/a&gt;
  Directives for automatic code generation
&lt;/h3&gt;

&lt;p&gt;Writing media queries declaration is boring, isn't it? To solve this, I created something called &lt;strong&gt;Directives&lt;/strong&gt;. They are simple properties in the &lt;code&gt;css&lt;/code&gt; object, which can hold anything.&lt;br&gt;
For instance, NiftyCSS contains &lt;strong&gt;breakpoints&lt;/strong&gt; to replace the fastidious &lt;code&gt;@media (min-width...)&lt;/code&gt; declarations. Here, I used the &lt;code&gt;$sm&lt;/code&gt; directive, which tells that all the CSS rules inside this directive will be inside a pre-defined breakpoint. The best is that it's automatically transformed by Nifty! (and you can also define custom breakpoints and custom directives via plugins, but that will be for the next time)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#css-utilities"&gt;
  &lt;/a&gt;
  CSS Utilities
&lt;/h3&gt;

&lt;p&gt;You might notice that I used some functions and variables called &lt;code&gt;flexCenter&lt;/code&gt; and &lt;code&gt;paddingX&lt;/code&gt;. Since we are in a JavaScript file, we can use the spread operator. These functions and variables are coming from the &lt;code&gt;@niftycss/css&lt;/code&gt; package and return many CSS rules from one single property.&lt;br&gt;
For instance, the &lt;code&gt;flexCenter&lt;/code&gt; variable returns an object with these 3 rules:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;flex&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;justify-content&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;center&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;align-items&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;center&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whenever I want to create an element with these properties, I only need to spread this variable, instead of writing everything myself!&lt;br&gt;
The &lt;code&gt;paddingX&lt;/code&gt; works the same but returns the &lt;code&gt;padding-left&lt;/code&gt; and &lt;code&gt;padding-right&lt;/code&gt; with the passed value.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#theming"&gt;
  &lt;/a&gt;
  Theming
&lt;/h3&gt;

&lt;p&gt;Did you notice that in the code above, I used a custom theme object? That allows implementing a white and dark theme in seconds, by just calling &lt;code&gt;setTheme&lt;/code&gt; later on. And the best is that you automatically get auto-completion from your theme keys!&lt;/p&gt;

&lt;p&gt;That's it for this first article about &lt;a href="https://github.com/QuiiBz/niftycss"&gt;NiftyCSS&lt;/a&gt;, thanks for reading it.&lt;br&gt;
Feel free to comment below your thoughts on these features, and to visit (maybe star if you enjoyed) the GitHub repo: &lt;a href="https://github.com/QuiiBz/niftycss"&gt;https://github.com/QuiiBz/niftycss&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Patterns in Usage Equal Happy Users</title>
      <author>Will Newmarch</author>
      <pubDate>Tue, 13 Apr 2021 16:00:30 +0000</pubDate>
      <link>https://dev.to/mrwillington/patterns-in-usage-equal-happy-users-3db1</link>
      <guid>https://dev.to/mrwillington/patterns-in-usage-equal-happy-users-3db1</guid>
      <description>&lt;p&gt;Throughout my career I've built various web-apps. These include short life projects (e.g. online brand campaigns) and long life projects (e.g. websites, various SAAS products etc.). Through it all I've noticed one thing...&lt;/p&gt;

&lt;p&gt;A happy user is a regular user, and a regular user often exhibits patterns in their usage of a product.&lt;/p&gt;

&lt;p&gt;If you can spot patterns in your users' usage then you can often spot your happy users! &lt;/p&gt;

&lt;p&gt;Now "why would I want to know which of my users is happy with my product?" I hear you ask!&lt;/p&gt;

&lt;p&gt;Well, imagine this, you have a happy user exhibiting a pattern, but suddenly the pattern stops, the user disappears and you're one user down on your user base.&lt;/p&gt;

&lt;p&gt;What if you could, spot the patterns, and when they stop? Then you could encourage the user to continue back into their pattern.&lt;/p&gt;

&lt;p&gt;But why sit trawling through usage data when you can get AI to spot the patterns for you!&lt;/p&gt;

&lt;p&gt;I've built a little service to help people do just that...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://binarystripes.io"&gt;https://binarystripes.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(...oh, and it's serverless!)&lt;/p&gt;

&lt;p&gt;Let's consider an example!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-company"&gt;
  &lt;/a&gt;
  The Company
&lt;/h2&gt;

&lt;p&gt;A coffee chain is interested in seeing whether there are patterns in their customers purchasing habits so that they can autonomously trigger incentives to encourage them to carry on as a regular customer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-customer"&gt;
  &lt;/a&gt;
  The Customer
&lt;/h2&gt;

&lt;p&gt;Their first customer being analysed is Charlie...&lt;/p&gt;

&lt;p&gt;We can represent Charlie’s daily coffee buying habits in binary, one being a day they bought a coffee, zero being a day they did not.&lt;/p&gt;

&lt;p&gt;Here's the last 4 weeks of data:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-analysis"&gt;
  &lt;/a&gt;
  The Analysis
&lt;/h2&gt;

&lt;p&gt;We want to discover if Charlie has a weekly habit of coffee buying...&lt;/p&gt;

&lt;p&gt;Charlie buys a coffee on a Monday and a Wednesday every week as we can see from the binary.&lt;/p&gt;

&lt;p&gt;We can discover this by asking the algorithm to calculate patterns with intervals of 7.&lt;/p&gt;

&lt;p&gt;We send Charlie’s data up to the API with the instructions to interval at 7...&lt;/p&gt;

&lt;p&gt;The resulting JSON is returned...&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[{&lt;br&gt;
    start: 0, // The index the pattern starts&lt;br&gt;
    end: 21, // The index the pattern ends&lt;br&gt;
    pattern: [1, 0, 1, 0, 0, 0, 0], // The pattern&lt;br&gt;
    trailingPattern: [1, 0, 0, 0, 0, 0, 0], // Binary found when the pattern ceased&lt;br&gt;
    count: 3, // The length of the pattern&lt;br&gt;
}]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can clearly see that there is one pattern in Charlie’s weekly coffee buying!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-reaction"&gt;
  &lt;/a&gt;
  The Reaction
&lt;/h2&gt;

&lt;p&gt;But oh no! It looks like Charlie's coffee buying habit changed after 3 weeks.&lt;/p&gt;

&lt;p&gt;The algorithm has told us when it changed and we can see from the trailing pattern that Charlie did not return on Wednesday for their second coffee of the week.&lt;/p&gt;

&lt;p&gt;In Charlie's case we can now send them an email or show them a subtle advert saying "We missed you last Wednesday! Have 20% off your coffee next Wednesday!"&lt;/p&gt;

&lt;p&gt;Powerful stuff eh?&lt;/p&gt;

&lt;p&gt;So you don't run a coffee chain? Why not apply this technique to your web app, or mobile app. Instead of buying a coffee maybe they're logging in, or using a specific part of your service or website!&lt;/p&gt;

&lt;p&gt;The possibilities are endless!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>analytics</category>
      <category>serverless</category>
      <category>api</category>
    </item>
    <item>
      <title>How to prepare for Oracle's Java Certification in 2021, and My New Udemy course.</title>
      <author>javinpaul</author>
      <pubDate>Tue, 13 Apr 2021 15:56:26 +0000</pubDate>
      <link>https://dev.to/javinpaul/how-to-prepare-for-oracle-s-java-certification-in-2021-and-my-new-udemy-course-20ma</link>
      <guid>https://dev.to/javinpaul/how-to-prepare-for-oracle-s-java-certification-in-2021-and-my-new-udemy-course-20ma</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hello devs, I am very excited to announce the release of my new Udemy course, &lt;strong&gt;&lt;a href="https://www.udemy.com/course/java-se-11-certification-exam-1z0-819-practice-tests/?couponCode=LAUNCH"&gt;2021 Java SE 11 Certification Practice Tests&lt;/a&gt;&lt;/strong&gt; for the 1Z0-819 exam.&lt;/p&gt;

&lt;p&gt;This is one of my dream projects which I have been working on since last year and one of the 3 goals I had set up for this year, along with &lt;a href="https://gumroad.com/l/hrUXKY"&gt;Grokking the Spring Boot Interview&lt;/a&gt; and &lt;a href="https://www.amazon.com/dp/B08P55JZBX/?tag=javamysqlanta-20"&gt;Grokking the Java Interview&lt;/a&gt;. This is also my first Java course on Udemy. &lt;/p&gt;

&lt;p&gt;The course is a practice test that contains more than 250+ practice questions to prepare for Java SE 11 Developer certification or 1Z0-819 exam. If you are preparing for this certification then you can use these practice tests to check your preparation level, find your strong and weak areas and work upon them.&lt;/p&gt;

&lt;p&gt;Java Developer certification is one of the prestigious certifications but this is very difficult to compare to previous Java certification like Java SE 8 Programmer I (OCAJP 8 - 1Z0-808) and Java SE 8 Programmer II (OCPJP 8 - 1Z0-809) and even if you are an experienced Java developer, it's very difficult to crack this exam without practice.&lt;/p&gt;

&lt;p&gt;Not only it requires good knowledge of tricky topics like Modules and Concurrency but also you need to have speed and accuracy to solve all question on given time and that's where this Udemy course will help you.&lt;/p&gt;

&lt;p&gt;This course contains 5 full-length, real exam-like practice tests, each containing 50 questions. You can take these practice tests in exam-like scenarios, I mean quiet room, timed test with no Google for help. &lt;/p&gt;

&lt;p&gt;That's how I have used practice tests in the past and it certainly helps to gauge your preparation level, and here is the link to join my course for just $9.9 for the next 3 days - &lt;strong&gt;&lt;a href="https://www.udemy.com/course/java-se-11-certification-exam-1z0-819-practice-tests/?couponCode=LAUNCH"&gt;2021 Java SE 11 Certification Practice Tests&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/java-se-11-certification-exam-1z0-819-practice-tests/?couponCode=LAUNCH"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9iqEl99y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-QilG-0yJTWI/YHLOKgln-VI/AAAAAAAAnF8/LIDp6n1T-PARL1LPKwPcTqVvg5lTftVcgCLcBGAsYHQ/w435-h245/Java%252BSE%252B11%252BDeveloper%252Bcertification%252BExam%252B1Z0-819%252BPractice%252Btest.jpg" alt="250+ Questions for Java SE 11 Developer Certification [1Z0-819]  - My New Udemy Course"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-prepare-for-java-se-11-developer-certification-in-2021"&gt;
  &lt;/a&gt;
  How to prepare for Java SE 11 Developer Certification in 2021
&lt;/h2&gt;

&lt;p&gt;I have always said that passing an IT certification requires three things, a good course, a good book, and a nice practice test, and Java SE 11 certification (1Z0-819) is no different. If you want to pass this in-demand and prestigious Java certification on the first attempt, here are my recommended books, courses, and practice tests.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-java-se-11-developer-1z0819-ocp-course-part-1-and-part-2"&gt;
  &lt;/a&gt;
  1.  &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fjava-se-11-developer-1z0-819-ocp-course-part-1%2F"&gt;Java SE 11 Developer 1Z0-819 OCP Course - Part 1 and Part 2&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is an excellent preparatory course for Java programmers aiming for Java SE 11 Developer certification on Udemy. Created by Tim Buchalaka, one of my favorite Udemy instructors and author of the famous, The Complete Java Masterclass course, this course is specially prepared for the 1Z0-819 exam.&lt;/p&gt;

&lt;p&gt;The course is divided into two parts and it is very well structured and covers all exam topics in good detail. Tim has also added quizzes after each module which is good to revise the exam topic and whatever you have learned in this section.&lt;/p&gt;

&lt;p&gt;If you are preparing for the 1Z0-819 exam and need a complete course then I highly recommend this one, especially if you have worked in Java before and know Java basics. You can also buy this course for $10 or slightly more in Udemy sales which happen every now and then.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to join this course -&lt;/strong&gt;  &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fjava-se-11-developer-1z0-819-ocp-course-part-1%2F"&gt;Java SE 11 Developer 1Z0-819 OCP Course - Part 1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fjava-se-11-developer-1z0-819-ocp-course-part-1%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hRA30Pax--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-0AciKGjyPOo/YHLN1Gaz74I/AAAAAAAAnFs/74xsTVOvYcM3yAZv3Auo9TeGqs2vfifCgCLcBGAsYHQ/w414-h233/Java%252BSE%252B11%252BDeveloper%252B1Z0-819%252BOCP%252BCourse%252B-%252BPart%252B1%252Band%252BPart%252B2.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-ocp-oracle-certified-professional-java-se-11-developer-complete-study-guide"&gt;
  &lt;/a&gt;
  2. OCP Oracle Certified Professional Java SE 11 Developer Complete Study Guide
&lt;/h3&gt;

&lt;p&gt;I didn't find any Java certification book which is especially covering Java SE 11 Developer certification with code 1Z0-819 but this book is the closest I got.&lt;/p&gt;

&lt;p&gt;This book covers the previous version of this exam when you needed to pass two exams OCAJP and OCPJP to become a certified Java developer.&lt;/p&gt;

&lt;p&gt;This book is still very good and covers most of the exam topics and if you go through the book you will be in good shape for this exam.&lt;/p&gt;

&lt;p&gt;Here is the link to buy this book on Amazon - &lt;a href="https://www.amazon.com/gp/product/1119619130/?tag=javamysqlanta-20"&gt;&lt;strong&gt;OCP Oracle Certified Professional Java SE 11 Developer Complete Study Guide&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/1119619130/?tag=javamysqlanta-20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sne4t6pd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-4W1N_RagixE/YHLNiEONcKI/AAAAAAAAnFY/0OC1DxyvfYoJ8GrDi1Soa-E3S3F1ZUSXQCLcBGAsYHQ/s320/OCP%252BOracle%252BCertified%252BProfessional%252BJava%252BSE%252B11%252BDeveloper%252BComplete%252BStudy%252BGuide.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-my-java-se-11-practice-test"&gt;
  &lt;/a&gt;
  3. My Java SE 11 Practice Test
&lt;/h3&gt;

&lt;p&gt;You can combine both this book and course with my  2021 Java SE 11 Certification Practice Test udemy course to build the speed and accuracy required to pass the exam on the first attempt. Here is what you will get in my course&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  250+ Unique Questions for practice&lt;/li&gt;
&lt;li&gt;  5 Full-length practice tests&lt;/li&gt;
&lt;li&gt;  Answers and Explanation of each question&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, here is the $9.9 coupon to buy my course on Udemy -  &lt;strong&gt;&lt;a href="https://www.udemy.com/course/java-se-11-certification-exam-1z0-819-practice-tests/?couponCode=LAUNCH"&gt;2021 Java SE 11 Certification Practice Tests&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/java-se-11-certification-exam-1z0-819-practice-tests/?couponCode=LAUNCH"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3XVYU7LQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-AOMQCrj89z8/YHLNnNjrOSI/AAAAAAAAnFc/56fx2NUKQZoztqWUF2IOS6hoe50CNz9-ACLcBGAsYHQ/w415-h234/Java%252BSE%252B11%252BDeveloper%252Bcertification%252BExam%252B1Z0-819%252BPractice%252Btest.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all about &lt;strong&gt;my Java Certification course on Udemy.&lt;/strong&gt; I have put a lot of effort into this practice test to make this one of the best practice tests for Java SE 11 certification and I would really appreciate your support. If you join my course then please provide your feedback by rating and reviewing the course as this is the only way I can find whether the course met your expectation or not and whether it's worth your time and money.&lt;/p&gt;

&lt;p&gt;My other &lt;strong&gt;Books and Courses&lt;/strong&gt; you may like&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://www.udemy.com/course/spring-professional-practice-test-questions-vmware-edu-certification/?couponCode=5DAYPROMO"&gt;Spring Certification Practice Test on Udemy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://gumroad.com/l/QqjGH"&gt;Grokking the Java Interview&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://gumroad.com/l/hrUXKY"&gt;Grokking the Spring Boot Interview&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once again, thank you all for your love and support. I really appreciate the response you gave to my first book. If you have any feedback or doubt feel free to ask.&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>certification</category>
      <category>resources</category>
    </item>
    <item>
      <title>RCB GM Simulator : Running an EDA on the IPL Dataset</title>
      <author>Dulaj Prabasha</author>
      <pubDate>Tue, 13 Apr 2021 15:43:14 +0000</pubDate>
      <link>https://dev.to/jdprabasha/rcb-gm-simulator-running-an-eda-on-the-ipl-dataset-57jb</link>
      <guid>https://dev.to/jdprabasha/rcb-gm-simulator-running-an-eda-on-the-ipl-dataset-57jb</guid>
      <description>&lt;p&gt;Remember how in the movie Moneyball (2011), Okland A's General Manager Billy Beane hires Economist Peter Brand to use data to change how the game's played? (Seriously though, if you haven't actually watched it, I strongly suggest you do so and come back!) Well, we're about to do the same thing - although operating in the realm of cricket this time. &lt;/p&gt;

&lt;p&gt;What we're about to do is called an Exploratory Data Analysis - EDA for short - a process of analysing datasets to summarise their main characteristics. To do this, we will be using &lt;a href="https://github.com/JDPrabasha/scikit/blob/main/matches.csv"&gt;this IPL Dataset&lt;/a&gt;. First off, let's see what we have shall we?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pandas as pd 
import numpy as np
df=pd.read_csv("matches.csv")
df.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wsdLmj2a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ubnzendv3j67ce6kp4s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wsdLmj2a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ubnzendv3j67ce6kp4s.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, that's a lot of information! Let's break it down using the Pandas Dataframe info() method :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df.info()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vhtv3EMn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w02tah3qgbjmyhukyg5p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vhtv3EMn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w02tah3qgbjmyhukyg5p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As General Manager of the RCB, your job is to extract as much information you can from the data available. And that involves asking the right questions. Looking closely at our dataset, how much of the data is actually useful? Certainly not the umpires. Let's drop 'em out shall we?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df.drop(["umpire1", "umpire2", "umpire3"], inplace=True, axis=1)
df.head()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--alvAAJ_q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2escddn63ouplkxrva4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--alvAAJ_q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2escddn63ouplkxrva4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that is something we can work with! The thing about being the GM (and Data Science in general) however, is that no-one tells you what questions you need to ask. And asking the right questions can often to be tougher than answering them. Here's a list of five questions that I think this dataset may be able to answer : &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Is it more advantageous to bat or field first in a given venue?&lt;/li&gt;
&lt;li&gt;Which venue is each team most strongest at?&lt;/li&gt;
&lt;li&gt;Does the chasing team really have the edge in a match affected by rain?&lt;/li&gt;
&lt;li&gt;How crucial is winning the toss at a given venue?&lt;/li&gt;
&lt;li&gt;How is our track record versus different teams?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now then, let's explore our data on a question-by-question basis! (although not necessarily in that exact order 👻)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#q1-how-crucial-is-winning-the-toss-at-a-given-venue"&gt;
  &lt;/a&gt;
  Q1) How crucial is winning the toss at a given venue?
&lt;/h1&gt;

&lt;p&gt;The cool thing about Pandas is how you can chain together logic to get your desired output in a less verbose way than say SQL. Our dataset gives us the winner of each match. We also know who won the toss at every match. Putting 2 and 2 together, these two things must be equal if the team that won the toss won the match as well. Finally, we need this data on a by-venue basis. Another point is that a percentage would be more useful to us than a raw number.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df[df["toss_winner"]==df["winner"]].value_counts("venue")/df.value_counts("venue")*100
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BiszXyK6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c95up0pwrn2axvaql1b6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BiszXyK6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c95up0pwrn2axvaql1b6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See how easy that was? Note that we used the value_counts() method to group our data after filtration, and then divided it by the total matches played in that venue. This is another intuitive feature of Panads - in that it can detect similar data objects using indices. &lt;/p&gt;

&lt;p&gt;We see that certain venues give a 100 percent dependancy on the toss. However, if we look at how many matches were played in these venues, we have a much clearer picture. The more matches played, the closer that number aproaches 50.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#q2-is-it-more-advantageous-to-bat-or-field-first-in-a-given-venue"&gt;
  &lt;/a&gt;
  Q2) Is it more advantageous to bat or field first in a given venue?
&lt;/h1&gt;

&lt;p&gt;Now, the process of answering this question follows the same intuition as the first. Although this time, we have to perform a few tweaks to obtain the data in the format we want.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fielding_wins=df[((df["toss_winner"]==df["winner"]) &amp;amp; (df["toss_decision"]=="field")) | ((df["toss_winner"]!=df["winner"]) &amp;amp; (df["toss_decision"]=="bat"))].value_counts("venue")
fielding_wins.sort_index(inplace=True)

batting_wins=df[((df["toss_winner"]==df["winner"]) &amp;amp; (df["toss_decision"]=="bat")) | ((df["toss_winner"]!=df["winner"]) &amp;amp; (df["toss_decision"]=="field"))].value_counts("venue")
missing_rows=pd.Series([0,0],index=["Green Park", "Holkar Cricket Stadium"])
batting_wins=batting_wins.append(missing_rows)
batting_wins.sort_index(inplace=True)

choices=fielding_wins&amp;gt;batting_wins

encoder={True:"Field", False:"Bat"}
choices.map(encoder)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pJMwwhPY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/butq4b66al91jdqzosg4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pJMwwhPY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/butq4b66al91jdqzosg4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there's our results! Although that seemed like a lot of code, the logic isn't that hard to follow. Following a top-down approach, we had to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compare the fielding team wins to the batting team wins&lt;/li&gt;
&lt;li&gt;Ensure that the indices of both these sets lined up and had the same number of elements&lt;/li&gt;
&lt;li&gt;Save both subsets in different variables to perform operations on them&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And finally, we mapped the truth values to "Bat" and "Field" to make our lives easier. &lt;br&gt;
&lt;em&gt;( Confession: I did not do any of this in one go. Everything you see here packaged into one neat block of code was preceded by a lot of warnings, a lot of head-scratching and plenty of trial and error)&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#q3-does-the-chasing-team-really-have-the-edge-in-a-match-affected-by-rain"&gt;
  &lt;/a&gt;
  Q3) Does the chasing team really have the edge in a match affected by rain?
&lt;/h1&gt;

&lt;p&gt;Let's use the power of Pandas to answer this question in one line of code! If you've been following along with the code so far, this one should be a cakewalk!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df[(((df["toss_winner"]==df["winner"]) &amp;amp; (df["toss_decision"]=="field")) | ((df["toss_winner"]!=df["winner"]) &amp;amp; (df["toss_decision"]=="bat")))&amp;amp; (df["dl_applied"]==1)].size/df[df["dl_applied"]==1].size*100
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--56uMChLk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5dbb8u9q7vi9wt81a45k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--56uMChLk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5dbb8u9q7vi9wt81a45k.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well there we go - the chasing team wins a whooping 81 percent of rain-affected matches!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#q4-which-venue-is-each-team-most-strongest-at"&gt;
  &lt;/a&gt;
  Q4) Which venue is each team most strongest at?
&lt;/h1&gt;

&lt;p&gt;Now this one takes a bit of thinking, as well as some domain knowledge. First off, what we require is a count of winner-venue pairs. Naturally, we know that each team will perform best in one given venue - most commonly their Home Stadium. Counts of these pairs should be expected to appear at the top of a sorted list (barring anomalies such as teams that have rebranded multiple times). Using this intuition, we may answer our question with the following code snippet :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;team_venue_counts=df.groupby(["winner", "venue"]).agg("count")["id"]
team_venue_counts=team_venue_counts.sort_values(ascending=False)
team_venue_counts.head(9)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Q1xQtiU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8402bz1rqmoxk2rhyxav.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Q1xQtiU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8402bz1rqmoxk2rhyxav.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We see that teams do indeed have the largest number of wins at their Home Stadium. However, a percentage would be a much better indicator of how strong teams perform at home. This would require some splicing, appending and rearranging - both with the winner-venue pairs and the venue counts. Unfortunately, the complexity of that process lies outside the purpose of this post. Moving on!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#q5-how-is-our-track-record-versus-different-teams"&gt;
  &lt;/a&gt;
  Q5) How is our track record versus different teams?
&lt;/h1&gt;

&lt;p&gt;This one includes a few convoluted steps - primarily because our team appears both in the "team1" and "team2" columns. But all in all, the code is again pretty straightforward :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;as_team1_wins=df[(df["team1"]=="Royal Challengers Bangalore") &amp;amp; (df["winner"]=="Royal Challengers Bangalore")].value_counts("team2")
as_team1_games=df[(df["team1"]=="Royal Challengers Bangalore")].value_counts("team2")

as_team2_wins=df[(df["team2"]=="Royal Challengers Bangalore") &amp;amp; (df["winner"]=="Royal Challengers Bangalore")].value_counts("team1")
as_team2_games=df[(df["team2"]=="Royal Challengers Bangalore")].value_counts("team1")

(as_team1_wins+as_team2_wins)/(as_team1_games+as_team2_games)*100
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ETkV6P3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwiculag5mbsu4le43pq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ETkV6P3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwiculag5mbsu4le43pq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, I have to admit that that was a bit of a hack. The different variables used to store data weren't exactly the same size - leading to those NaNs in-between. However, it's still impressive that Pandas knew what to do with the rest of it!&lt;/p&gt;

&lt;p&gt;Secondly, we see that there's two separate entries for "Rising Pune Supergiant" and "Rising Pune Supergiants" respectively. This certainly deserves some cleaning up!&lt;/p&gt;

&lt;p&gt;Now it's your turn! Think you can fix those errors? As GM, what other insights might you obtain with this dataset? What other data may you need to augment it with in order to derive better insights? And last but not least, what may be the best methods to visualise our findings? &lt;/p&gt;

&lt;p&gt;Any questions? Anything you think I might have done differently? Do feel free to let me know and I'd be more than happy to respond!&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>python</category>
    </item>
    <item>
      <title>CSS Scroll Down Animated Button | Scroll More Button</title>
      <author>pawanbhayde</author>
      <pubDate>Tue, 13 Apr 2021 15:39:13 +0000</pubDate>
      <link>https://dev.to/pawanbhayde/css-scroll-down-animated-button-scroll-more-button-1nmg</link>
      <guid>https://dev.to/pawanbhayde/css-scroll-down-animated-button-scroll-more-button-1nmg</guid>
      <description>&lt;p&gt;Learn Build CSS Scroll Down Animated Button with HTML and CSS Tutorial. Add a Glass Effects on your website using HTML and CSS. Easy way to learn HTML for beginners. You will easily make this CSS Scroll Down Animated Button by following my Youtube video tutorial. I also provide you HTML, CSS Code which helps you to understand this Tutorial.&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Uax2fYDB6ZM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Read Blog Post(Download Source Code File) :- &lt;a href="https://www.websitemakers.xyz/2021/04/css-scroll-down-animated-button-scroll.html"&gt;https://www.websitemakers.xyz/2021/04/css-scroll-down-animated-button-scroll.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML Code&lt;/strong&gt;&lt;br&gt;
This is the basic HTML which is important for all HTML files. I import Poppins in this HTML file using Styling from google because most people do not have Poppins font on their devices.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;CSS code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Related Post&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/pawanbhayde" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mZZZpr0s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--zCOCaAYW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/610655/1a00c3e4-b6ea-4f09-9824-27097fba9b7e.jpg" alt="pawanbhayde image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pawanbhayde/build-glass-website-with-html-and-css-tutorial-567i" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build Glass Website with HTML and CSS Tutorial&lt;/h2&gt;
      &lt;h3&gt;pawanbhayde ・ Apr 13 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
  </channel>
</rss>
