<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>HTML &amp; CSS Smiley Face.</title>
      <author>cehoer</author>
      <pubDate>Sun, 12 Dec 2021 16:27:32 +0000</pubDate>
      <link>https://dev.to/cehoer/html-css-smiley-face-2jc6</link>
      <guid>https://dev.to/cehoer/html-css-smiley-face-2jc6</guid>
      <description>&lt;p&gt;&lt;br&gt;
```I decided to give myself a challenge and create a smiley face using only HTML and CSS. First I used HTML to create 6 divs. Then I used CSS to create the shapes and positions of the divs. The circles and ovals where made using the border radius property. All the positioning was done using margins and position properties. The most difficult part was creating the curve for the mouth, my solution was to use two overlapping circles and moving one slightly higher and changing the color to yellow to blend in with the face circle.&lt;br&gt;
 Below is the code I used to accomplish this. &lt;/p&gt;

&lt;p&gt;HTML&lt;br&gt;
&amp;lt;!DOCTYPE html&amp;gt;&lt;/p&gt;


&lt;br&gt;
        &lt;br&gt;
        &lt;br&gt;
        SMILE&lt;br&gt;
        &lt;br&gt;
        &lt;br&gt;
        &lt;br&gt;
    &lt;br&gt;
    
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   &amp;lt;h1&amp;gt;Smile!&amp;lt;/h1&amp;gt; 

   &amp;lt;div class="grid"&amp;gt;
        &amp;lt;div class="face"&amp;gt;
       &amp;lt;div class="left"&amp;gt;&amp;lt;/div&amp;gt;
       &amp;lt;div  class="right"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;

       &amp;lt;div class="mouth"&amp;gt;&amp;lt;/div&amp;gt;
       &amp;lt;div class="mouth2"&amp;gt;&amp;lt;/div&amp;gt;


&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

CSS
* {
    margin: 0;
    padding: 0;
}

box {
    display: flex;
    justify-content: center;
    justify-items: center;
    width: 1024px;
    height: 768px;
}

body {
    background-image: url("images/bomb-g3fdef4030_1280.jpg");
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
   max-height: 1000px;
   flex-shrink: 1;
}
h1 {
    margin: 0 auto;
    text-align: center;
    font-size: 150px;
    color: white;
    flex-shrink: 1;
}


.face {
    background-color: yellow;
    height: 600px;
    width: 600px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
   margin-top: 80px;
   margin-left: 30%;
   flex-shrink: 1;
}

.left{
    background-color: black;
    height: 100px;
    width: 50px;
    border-radius: 50%;
    margin-top: 25%;
    margin-left: 25%;
    margin-right: auto;
   z-index: 100;
   flex-shrink: 1;
}

.right{
    background-color: black;
    height: 100px;
    width: 50px;
    border-radius: 50%;
    margin-top: 25%;
    margin-right: 25%;
    z-index: 100;
}

.mouth { 
   height: 450px;
   width: 450px;
   background-color: black;
   border-radius: 100%;
   position:relative; top: -550px; left: 495px
}

.mouth2 { 
    z-index: 5;
    height: 455px;
    width: 455px;
    background-color: yellow;
    border-radius: 100%;
    position:relative; top: -1050px; left: 495px
 }


&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

&lt;/code&gt;&lt;/pre&gt;

</description>
      <category>html</category>
      <category>beginners</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Install Fedora 35 Linux with Windows 11/10 (Dual Boot)</title>
      <author>Sandeep Valpasani</author>
      <pubDate>Sun, 12 Dec 2021 16:14:17 +0000</pubDate>
      <link>https://dev.to/sandeepv1404/install-fedora-35-linux-with-windows-1110-dual-boot-2ic0</link>
      <guid>https://dev.to/sandeepv1404/install-fedora-35-linux-with-windows-1110-dual-boot-2ic0</guid>
      <description>&lt;p&gt;Are you curious to work with the Linux Operating System inside your PC/Laptop? Then you're at the right place. This guide helps you in the hassle-free installation of Fedora Linux on your System. &lt;/p&gt;

&lt;p&gt;Now, we are going to install Fedora Workstation v35 on our system. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-fedora"&gt;
  &lt;/a&gt;
  What is Fedora?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://getfedora.org/"&gt;Fedora Linux&lt;/a&gt; is a Linux distribution developed by the community-supported Fedora Project which is sponsored primarily by Red Hat, a subsidiary of IBM, with additional support from other companies.&lt;/p&gt;

&lt;p&gt;If you want to know more about Linux and its distributions, check it out &lt;a href="https://www.linux.com/what-is-linux/"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;35GB+ free space in HDD/SSD&lt;/li&gt;
&lt;li&gt;8/16GB Pen drive&lt;/li&gt;
&lt;li&gt;Windows 11/10&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This guide is only for the system which has &lt;strong&gt;UEFI BIOS&lt;/strong&gt; and the type of SSD/HDD is &lt;strong&gt;GPT&lt;/strong&gt; and System Type is &lt;strong&gt;x64-based&lt;/strong&gt;.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-check-the-bios-mode-of-your-system"&gt;
  &lt;/a&gt;
  How to check the BIOS Mode of your system?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Click Start Button&lt;/li&gt;
&lt;li&gt;Search msinfo32 (or) System Information in the search bar&lt;/li&gt;
&lt;li&gt;Check BIOS Mode Property&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nekc-t8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2bxwt7ayooxu50ggjdbn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nekc-t8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2bxwt7ayooxu50ggjdbn.png" alt="System Information" width="880" height="872"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If it's UEFI, you're good to go.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-check-the-ssdhdd-mode-of-your-system"&gt;
  &lt;/a&gt;
  How to check the SSD/HDD Mode of your system?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Click Start Button&lt;/li&gt;
&lt;li&gt;Search for &lt;code&gt;cmd&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;cmd&lt;/code&gt; as administartor&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;diskpart&lt;/code&gt; and press enter.&lt;/li&gt;
&lt;li&gt;Next, type &lt;code&gt;list disk&lt;/code&gt; and press enter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bsvO3mx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd40iezzs4ayl5xmeebz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bsvO3mx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd40iezzs4ayl5xmeebz.png" alt="CMD Info" width="880" height="504"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you see &lt;code&gt;*&lt;/code&gt; under GPT of Disk 0, you're ready for installation of Fedora Linux in your System.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#softwares-required"&gt;
  &lt;/a&gt;
  Softwares Required
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://getfedora.org/en/workstation/download/"&gt;Fedora Workstation ISO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M0glellY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42prt5st62h8540v00w6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M0glellY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42prt5st62h8540v00w6.png" alt="Fedora Image" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/pbatard/rufus/releases/download/v3.17/rufus-3.17.exe"&gt;Rufus&lt;/a&gt; for making USB bootable. Click &lt;a href="https://rufus.ie/"&gt;here&lt;/a&gt; to know more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, it's time to create a bootable USB. So, format your USB beforehand. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-bootable-usb-using-rufus"&gt;
  &lt;/a&gt;
  Create a Bootable USB using Rufus
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Open Rufus and plug your clean USB stick into your computer.&lt;/li&gt;
&lt;li&gt;Rufus will automatically detect your USB. Click on Device and choose the USB you want to use from the drop-down menu.&lt;/li&gt;
&lt;li&gt;Make sure the Boot Selection option is set to Disk or ISO image then click Select. Rufus will open a file explorer browser window, locate the ISO image which you downloaded named &lt;code&gt;Fedora-Workstation-Live-x86_64-XX-X.X.iso&lt;/code&gt; to burn onto the USB, and select it.&lt;/li&gt;
&lt;li&gt;Leave other options as default and click &lt;code&gt;Start&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You’ll get a warning saying that any data on the USB will be destroyed (this is normal). Click OK and Rufus will start creating the ISO image on the USB.&lt;/li&gt;
&lt;li&gt;Let it run in the background, jump to the next section.&lt;/li&gt;
&lt;li&gt;Once Rufus has finished creating the ISO image on the USB, you can close it and your bootable USB is ready to go!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#make-a-new-unallocated-partition"&gt;
  &lt;/a&gt;
  Make a new Unallocated Partition.
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Press the &lt;code&gt;Windows key + R&lt;/code&gt; on your keyboard to open the Run utility, or search for it in the Start menu.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Type &lt;code&gt;diskmgmt.msc&lt;/code&gt; and press &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A menu will appear with a list of all your hard drives. Right-click on the drive you want to partition and select "Shrink Volume."&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You'll be asked how much you want the drive to shrink. The amount you enter will be the amount of space left for your new partition. The "total size after shrink" will be the space left in the original partition.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enter a value and Click &lt;code&gt;Shrink&lt;/code&gt;. (&lt;strong&gt;Note&lt;/strong&gt;: If you want 50GB partition, the value is 50 x 1024 = 51200).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, you'll find a new Unallocated Partition under Disk 0. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/5fj814bmdspTmfBuJa/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/5fj814bmdspTmfBuJa/giphy.gif" alt="Half Job Done" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reboot-your-system-into-bios-mode"&gt;
  &lt;/a&gt;
  Reboot your system into BIOS Mode.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;To boot into BIOS, Press the below keys before OEM Logo (Brand Logo) appears. the key may be &lt;code&gt;ESC&lt;/code&gt;, &lt;code&gt;Del&lt;/code&gt;, &lt;code&gt;F1&lt;/code&gt;, &lt;code&gt;F2&lt;/code&gt;, &lt;code&gt;F10&lt;/code&gt;, &lt;code&gt;F12&lt;/code&gt;. If still, it's not booting into BIOS, Check the below step.&lt;/li&gt;
&lt;li&gt;Google your system model with BIOS mode at the end. You'll find the solution.
&lt;/li&gt;
&lt;li&gt;After booting into BIOS, disable &lt;code&gt;Secure Boot&lt;/code&gt; and Change the Boot Drive priority to &lt;code&gt;USB&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Save the Changes and Reboot.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#boot-into-fedora"&gt;
  &lt;/a&gt;
  Boot into Fedora
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If all steps have been performed correctly, you will see the below image. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2JssMfA6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mcr6tmtob4jsw0jp1bj9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2JssMfA6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mcr6tmtob4jsw0jp1bj9.jpg" alt="GRUB" width="880" height="196"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Select &lt;code&gt;Test this media &amp;amp; start Fedora Workstation-Live XX&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Wait for some time, you'll see a window with two options. &lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Install to Hard Drive&lt;/code&gt;. Again, wait for &amp;lt; 1 min.&lt;/li&gt;
&lt;li&gt;You will land on the below Window.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OMWTVt9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c9pb1xduxot0dxytt7qi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OMWTVt9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c9pb1xduxot0dxytt7qi.png" alt="Main Window" width="880" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Click on the &lt;code&gt;Keyboard&lt;/code&gt; option, Select your Keyboard Language and Click &lt;code&gt;Continue&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Similarly, Click on the &lt;code&gt;Date &amp;amp; Time&lt;/code&gt; option, Select your Time Zone and Click &lt;code&gt;Done&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Now, Click &lt;code&gt;Installation Destination&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v87tzDY7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nh7b5m4y3fv6uixreqdx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v87tzDY7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nh7b5m4y3fv6uixreqdx.png" alt="Installation Drive 1" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Select your disk, Choose &lt;code&gt;Custom&lt;/code&gt; under Storage Configuration and Click on &lt;code&gt;Done&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B8-Ze_x4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4engz9izhbpfxorxvvo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8-Ze_x4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4engz9izhbpfxorxvvo.png" alt="Disk 2" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You'll be in the below window and also verify the Available Space which is your Unallocated Partition Space.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q1jc2JfM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vc3udgij5vlbbogjmlos.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q1jc2JfM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vc3udgij5vlbbogjmlos.png" alt="Disk Verify 3" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on the &lt;strong&gt;+&lt;/strong&gt; icon, You'll get a Popup, Choose &lt;code&gt;/boot/efi&lt;/code&gt; Under Mounting Point which is System's EFI partition. Enter &lt;code&gt;1024MiB&lt;/code&gt; in Desired capacity. Click on &lt;strong&gt;Add mount Point&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_scZiySV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xw8voryta8p5yawanfk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_scZiySV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xw8voryta8p5yawanfk.png" alt="EFI 4" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Similarly, Click on the &lt;strong&gt;+&lt;/strong&gt; icon again, In Pop up, Choose &lt;code&gt;/&lt;/code&gt; Under Mounting Point which is called Root Partition. Subtract 5GiB from Available Space and Enter remaining space in Desired capacity (Ex: 50 GiB). Click on &lt;strong&gt;Add mount Point&lt;/strong&gt;. And Verify it's &lt;code&gt;Device Type&lt;/code&gt; which is &lt;strong&gt;Btrfs&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sAweo4YD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/803kl8vio6vdk7e1lq1w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sAweo4YD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/803kl8vio6vdk7e1lq1w.png" alt="Root 5" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Similarly, Click on the &lt;strong&gt;+&lt;/strong&gt; icon again, In Pop up, Choose &lt;code&gt;swap&lt;/code&gt; Under Mounting Point, which is swap memory, Enter the remaining space in Desired capacity (Ex: 5 GiB). Click on &lt;strong&gt;Add mount Point&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ljY64IJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtf7fdd8ji45bil117m9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ljY64IJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtf7fdd8ji45bil117m9.png" alt="Swap 6" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Finally, you'll see all the partitions created. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VKHm_KEx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzflc644wrcu37rmzks7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VKHm_KEx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzflc644wrcu37rmzks7.png" alt="Partitions 7" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now, click on Done. Verify the Summary of Changes. And click on &lt;strong&gt;Accept Changes&lt;/strong&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ASefIJHw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oirh7ulou92kifj9b62g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ASefIJHw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oirh7ulou92kifj9b62g.png" alt="Summary 8" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You'll see the below window, now click on &lt;strong&gt;Begin Installation&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dlZwaxmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0awnw8247ihof0wgj8a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dlZwaxmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0awnw8247ihof0wgj8a.png" alt="Main Page 9" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Relax for 10-15 mins.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on &lt;strong&gt;Finish Installation&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;The system will restart automatically and you'll see the GRUB Bootloader, Select Fedora, and Press &lt;strong&gt;Enter&lt;/strong&gt;.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Enter your details and You're finally booted into Fedora Linux.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/uw20jL7BMnQRJUTxqR/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/uw20jL7BMnQRJUTxqR/giphy.gif" alt="You Made it" width="480" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for following the guide. Hope this helps you in some way :)&lt;/em&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>opensource</category>
      <category>devjournal</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to Reach Out to a Recruiter</title>
      <author>Danish Saleem</author>
      <pubDate>Sun, 12 Dec 2021 16:08:49 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/how-to-reach-out-to-a-recruiter-3e26</link>
      <guid>https://dev.to/mrdanishsaleem/how-to-reach-out-to-a-recruiter-3e26</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-be-realistic-about-how-recruiters-work"&gt;
  &lt;/a&gt;
  1. Be realistic about how recruiters work
&lt;/h2&gt;

&lt;p&gt;Most recruiters are managing more than 50 candidates at a time. If recruiters responded to every random inquiry, they wouldn't have time to fill jobs. That's why it's critical to reach out to them with a targeted approach.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-know-what-type-of-recruiter-youre-targeting"&gt;
  &lt;/a&gt;
  2. Know what type of recruiter you're targeting.
&lt;/h2&gt;

&lt;p&gt;You need to understand exactly which type of recruiter - internal, external, or executive - you're reaching out to so you can position yourself properly. Make sure that the recruiter you're approaching is appropriate for your desire role and needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-prepare-for-your-approach"&gt;
  &lt;/a&gt;
  3. Prepare for your approach
&lt;/h2&gt;

&lt;p&gt;Before you reach out to the recruiter, update your LinkedIn profile and resume, do your research about the organization and role in question, and prepare to send any materials that they might want to screen before an interview.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-explain-the-why"&gt;
  &lt;/a&gt;
  4. Explain the "Why"
&lt;/h2&gt;

&lt;p&gt;There are two reasons to approach a recruiter: to help them fill an existing opening or to make them aware that you're interested in future openings.&lt;/p&gt;

&lt;p&gt;Explain what you're interested in and why. If you're a good fit for an existing role, you could get some immediate traction. If not, they may enter your information into their database for future openings.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect 💜
&lt;/h3&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.instagram.com/mrdanishsaleem/"&gt;Instagram&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" alt="Buy Me a Coffee" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>22nd weekly post, remaining ratio. Also, Log4Shell.</title>
      <author>LongYC</author>
      <pubDate>Sun, 12 Dec 2021 15:58:43 +0000</pubDate>
      <link>https://dev.to/longyc/22nd-weekly-post-remaining-ratio-also-log4shell-1hh8</link>
      <guid>https://dev.to/longyc/22nd-weekly-post-remaining-ratio-also-log4shell-1hh8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#items-of-the-week"&gt;
  &lt;/a&gt;
  Items of the week
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt; - &lt;code&gt;aspect-ratio&lt;/code&gt; can be used to set a preferred width-to-height ratio of a box, it accepts values of &lt;code&gt;&amp;lt;ratio&amp;gt;&lt;/code&gt; data type, e.g. &lt;code&gt;16/9&lt;/code&gt;. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Media/images/aspect_ratio_mapping"&gt;More about this CSS property is explained on MDN Web Docs&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AWS Lambda&lt;/strong&gt; - the context object passed to a handler function includes a method &lt;code&gt;getRemainingTimeInMillis()&lt;/code&gt; which returns the approximate remaining execution time before timeout. Picked that up from chapter 6 of &lt;a href="https://www.goodreads.com/en/book/show/29970427"&gt;Serverless Architectures on AWS&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;On the week 49 of 2021&lt;/strong&gt;, we saw a remote code execution vulnerability on the popular Java logging library - Apache Log4j. Now also known as Log4Shell, the exploit allows arbitrary Java code to be executed, &lt;a href="https://www.lunasec.io/docs/blog/log4j-zero-day/"&gt;more details about this on LunaSec blog&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a weekly bite-sized post on web app development from JavaScript to UX and technology in general. Thank you for reading and have a nice day!&lt;/p&gt;

</description>
      <category>css</category>
      <category>aws</category>
      <category>java</category>
    </item>
    <item>
      <title>Starting my App Startup Journey!</title>
      <author>AasharWahla</author>
      <pubDate>Sun, 12 Dec 2021 15:43:55 +0000</pubDate>
      <link>https://dev.to/aasharwahla/starting-my-app-startup-journey-336k</link>
      <guid>https://dev.to/aasharwahla/starting-my-app-startup-journey-336k</guid>
      <description>&lt;p&gt;Hi, welcome to my blog. It will hopefully be one of many blogs to come in the future. It is all about the project, which I will build from the ground up. In my Flutter mobile app development career of over two years, I have developed 50+ apps. But there's something different for me this time.&lt;/p&gt;

&lt;p&gt;This time I will not be building an app for my client. But I will be developing it for myself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#general-idea"&gt;
  &lt;/a&gt;
  General Idea
&lt;/h2&gt;

&lt;p&gt;Uptime - A productivity App&lt;/p&gt;

&lt;p&gt;Uptime is an app that will focus on productivity. It will be implementing the Pomodoro productivity technique with schedule features.&lt;/p&gt;

&lt;p&gt;The point of this app will be its beautiful user interface. It will have a minimal layout and smooth animations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#current-status"&gt;
  &lt;/a&gt;
  Current Status
&lt;/h2&gt;

&lt;p&gt;Currently, I have finalized the UI along the side of the architecture, but I still haven't started the development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#timeline"&gt;
  &lt;/a&gt;
  Timeline
&lt;/h2&gt;

&lt;p&gt;I am giving myself 30 days from starting from today to build the app and publish it on both google play store and Apple AppStore.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-get-public-before-release"&gt;
  &lt;/a&gt;
  Why get public before release?
&lt;/h2&gt;

&lt;p&gt;I am sharing my story with people who want to see a developer like them start an app from scratch. Alongside that, I also want to document my journey and look at it in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#future"&gt;
  &lt;/a&gt;
  Future
&lt;/h2&gt;

&lt;p&gt;I will be writing one or two blogs every day regarding this project, so I would recommend you to follow me to stay updated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-me"&gt;
  &lt;/a&gt;
  Follow Me:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/aasharwahla/"&gt;On LinkedIn&lt;/a&gt; -&amp;gt; &lt;a href="https://www.linkedin.com/in/aasharwahla/"&gt;https://www.linkedin.com/in/aasharwahla/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://instagram.com/aashar.wahla"&gt;On Instagram&lt;/a&gt; -&amp;gt; &lt;a href="https://instagram.com/aashar.wahla"&gt;https://instagram.com/aashar.wahla&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>startup</category>
      <category>business</category>
      <category>mobileapp</category>
    </item>
    <item>
      <title>What's the Deal with Activation Functions in Neural Networks?</title>
      <author>images.cv</author>
      <pubDate>Sun, 12 Dec 2021 15:36:47 +0000</pubDate>
      <link>https://dev.to/imagescv/whats-the-deal-with-activation-functions-in-neural-networks-16i8</link>
      <guid>https://dev.to/imagescv/whats-the-deal-with-activation-functions-in-neural-networks-16i8</guid>
      <description>&lt;p&gt;&lt;strong&gt;Even though activation functions are not the most exciting topic in machine learning, they are an important component of neural networks. This blog post will cover what activation functions are and how to choose one. There is also a bonus section on common mistakes with activation functions!&lt;br&gt;
Activation Functions: A Neural Network's "On" Switch  When you build a neural network, each neuron has two inputs - its own weight multiplied by its corresponding input value from another neuron - and then it sums those values up with an activation function that turns the sum into either 0 or 1. The out&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-the-activation-function-work-in-a-neural-network"&gt;
  &lt;/a&gt;
  How does the activation function work in a neural network?
&lt;/h2&gt;

&lt;p&gt;The activation function is responsible for turning the sum of the weighted input values into either 0 or a positive number. If the summed value is greater than 0, then the output of the neuron will be set to a positive number. If the summed value is equal to or less than 0, then the neuron's output will be set to 0.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-purpose-of-an-activation-function"&gt;
  &lt;/a&gt;
  What is the purpose of an activation function?
&lt;/h2&gt;

&lt;p&gt;The basic reason for having an activation function in a neural network is that it makes sure that you don't accidentally activate every neuron, which would result in overfitting. This means training your model as many times as possible on as much data as possible and making sure its prediction error+the difference between the prediction it makes and the real value is as low as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-common-activation-functions"&gt;
  &lt;/a&gt;
  What are common activation functions?
&lt;/h2&gt;

&lt;p&gt;There are many commonly used activation functions in neural networks: sigmoid, hyperbolic tangent (tanh), ReLU, leaky ReLu, softmax and others.&lt;/p&gt;

&lt;p&gt;There's even a library for recurrent neural networks, called PyBrain which implements a variety of different activation functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sigmoid activation function&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sigmoid is the simplest - it's just a step function with an offset: &lt;/p&gt;

&lt;p&gt;f(x)=max(-0.01, 0.01+exp(-abs(x))).&lt;/p&gt;

&lt;p&gt;Yes, you read that right! &lt;/p&gt;

&lt;p&gt;It takes your input value and transforms it into a number between -0.01 and 0.01, which is then used to decide whether or not the neuron should be activated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hyperbolic tangent (tanh) activation function&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tanh is a little more complicated than the sigmoid function, but not by much. &lt;/p&gt;

&lt;p&gt;It's what you get when you apply two hyperbolic tangents to your input: &lt;/p&gt;

&lt;p&gt;f(x)=max(-0.01, 0.99+exp(-abs(x))- exp(-abs(x)).&lt;/p&gt;

&lt;p&gt;It has been proven to work better when training neural networks than sigmoid or ReLU (see here for more information).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReLU (rectified linear unit) activation function&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The ReLU activation function is one of the most popular functions in use today: &lt;/p&gt;

&lt;p&gt;f(x)=max(0, x), for all x.&lt;/p&gt;

&lt;p&gt;It's a very simple function - all it does is set any negative number to 0 and then return them input values that are always positive, like in images or text data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Leaky ReLU activation function&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Leaky ReLU is similar to the regular ReLU activation function, but with a small "leakiness" factor:&lt;/p&gt;

&lt;p&gt;f(x)=max(0, x)+alpha*(x-min(0, x)).&lt;/p&gt;

&lt;p&gt;This allows for some values to be negative and activates the neuron if the input value is above 0. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Softmax activation function&lt;/strong&gt;&lt;br&gt;
The softmax activation function is used for multi-class classification problems: &lt;/p&gt;

&lt;p&gt;f(x)=exp(x)/sum_i exp(xi), for all x.&lt;/p&gt;

&lt;p&gt;This ensures that the sum of all outputs from the neuron is always equal to one and that the probability of each class is represented in proportion.&lt;/p&gt;




&lt;p&gt;There are many different activation functions in use today, but the most popular ones are sigmoid, ReLU and Tanh. It's important to choose an activation function that will work best for your specific problem. For more information on how to choose the right one, check out this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#common-mistakes-with-activation-functions"&gt;
  &lt;/a&gt;
  Common mistakes with activation functions:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Forgetting to add an activation function&lt;/li&gt;
&lt;li&gt;Using the wrong activation functions for your problem (sigmoid is not a good choice if you're working with images, and ReLU isn't great when training recurrent neural networks)&lt;/li&gt;
&lt;li&gt;Not understanding how the activation function works and what it does to your data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Be sure to do your research before choosing an activation function, so you can be sure you're using the right one for your problem!&lt;/p&gt;




&lt;p&gt;I hope you found this blog post interesting and informative. If you did, please share it with your friends so more people can learn about neural networks! Thanks for reading.&lt;/p&gt;




&lt;p&gt;images.cv provide you with an easy way to build image datasets.&lt;br&gt;
15K+ categories to choose from&lt;br&gt;
Consistent folders structure for easy parsing&lt;br&gt;
Advanced tools for dataset pre-processing: image format, data split, image size, and data augmentation.&lt;br&gt;
👉Visit images.cv to learn more&lt;/p&gt;

</description>
      <category>deeplearning</category>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>python</category>
    </item>
    <item>
      <title>Operator overloading in python</title>
      <author>SaptakBhoumik</author>
      <pubDate>Sun, 12 Dec 2021 15:33:35 +0000</pubDate>
      <link>https://dev.to/saptakbhoumik/operator-overloading-in-python-4k09</link>
      <guid>https://dev.to/saptakbhoumik/operator-overloading-in-python-4k09</guid>
      <description>&lt;p&gt;Hi everyone, &lt;br&gt;
In this post I want to explain the concept of operator overloading in python. &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-is-operator-overloading"&gt;
  &lt;/a&gt;
  What is operator overloading?
&lt;/h1&gt;

&lt;p&gt;In simple terms, it allows you to define what an operator does depending on it's argument. &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#implementing-it-in-python"&gt;
  &lt;/a&gt;
  Implementing it in python
&lt;/h1&gt;

&lt;p&gt;Let's say that you are implementing a library to perform matrix operation. Instead of implementing a function to add 2 matrix you can overload a &lt;code&gt;+&lt;/code&gt; operator instead. This will make your library much easier to use. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__add__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
        &lt;span class="c1"&gt;# iterate through rows
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;   
            &lt;span class="c1"&gt;# iterate through columns
&lt;/span&gt;            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])):&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;        
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Breaking it down&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;__init__&lt;/code&gt;- It initializes the object. Nothing special&lt;br&gt;
&lt;code&gt;__add__&lt;/code&gt;-This is where the overloading of the &lt;code&gt;+&lt;/code&gt; operator occurs. Within this function you have to implement how to add those numbers and that's it. It is how you overload operator in python.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Operator that can be overloaded&lt;/strong&gt;&lt;br&gt;
Binary Operators:&lt;br&gt;
&lt;code&gt;+&lt;/code&gt; = &lt;code&gt;__add__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;–&lt;/code&gt; = &lt;code&gt;__sub__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;*&lt;/code&gt; = &lt;code&gt;__mul__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/&lt;/code&gt; = &lt;code&gt;__truediv__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;//&lt;/code&gt; = &lt;code&gt;__floordiv__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;%&lt;/code&gt; = &lt;code&gt;__mod__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;**&lt;/code&gt; = &lt;code&gt;__pow__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; = &lt;code&gt;__rshift__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; = &lt;code&gt;__lshift__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;amp;&lt;/code&gt; = &lt;code&gt;__and__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;|&lt;/code&gt; = &lt;code&gt;__or__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;^&lt;/code&gt; = &lt;code&gt;__xor__(self, other)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Comparison Operators :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;&lt;/code&gt; = &lt;code&gt;__lt__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt;&lt;/code&gt; = &lt;code&gt;__gt__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;lt;=&lt;/code&gt; = &lt;code&gt;__le__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt;=&lt;/code&gt; = &lt;code&gt;__ge__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;==&lt;/code&gt; = &lt;code&gt;__eq__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;!=&lt;/code&gt; = &lt;code&gt;__ne__(self, other)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Assignment Operators :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-=&lt;/code&gt; = &lt;code&gt;__isub__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;+=&lt;/code&gt; = &lt;code&gt;__iadd__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;*=&lt;/code&gt; = &lt;code&gt;__imul__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;/=&lt;/code&gt; = &lt;code&gt;__idiv__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;//=&lt;/code&gt; = &lt;code&gt;__ifloordev__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;%=&lt;/code&gt; = &lt;code&gt;__imod__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;**=&lt;/code&gt; = &lt;code&gt;__ipow__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; = &lt;code&gt;__irshift__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt; = &lt;code&gt;__ilshift__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;amp;=&lt;/code&gt; = &lt;code&gt;__iand__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;|=&lt;/code&gt; = &lt;code&gt;__ior__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;^=&lt;/code&gt; = &lt;code&gt;__ixor__(self, other)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Unary Operators:&lt;br&gt;
&lt;code&gt;–&lt;/code&gt; = &lt;code&gt;__neg__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;+&lt;/code&gt; = &lt;code&gt;__pos__(self, other)&lt;/code&gt;&lt;br&gt;
&lt;code&gt;~&lt;/code&gt; = &lt;code&gt;__invert__(self, other)&lt;/code&gt; &lt;br&gt;
This is the list of operators you can overload in python along with the name of the method you have to use&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Operator overloading is a powerful feature of python and can be very useful however you should not misuse it because it can create confusing code that is hard to read. I hope you learned something new. If you have enjoyed this one, make sure to read my &lt;a href="https://dev.to/saptakbhoumik/peregrine-update-the-python-like-language-thats-as-fast-as-c-43pb"&gt;previous post&lt;/a&gt;&lt;br&gt;
Thanks for reading &amp;lt;3&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>Server side events using nodeJS</title>
      <author>devashishSarmah</author>
      <pubDate>Sun, 12 Dec 2021 15:27:37 +0000</pubDate>
      <link>https://dev.to/devashishsarmah/server-side-events-using-nodejs-4j53</link>
      <guid>https://dev.to/devashishsarmah/server-side-events-using-nodejs-4j53</guid>
      <description>&lt;p&gt;Server-Sent Events (SSE) is a technology based on HTTP. On the client-side, it provides an API called EventSource (part of the HTML5 standard) that allows us to connect to the server and receive updates from it.&lt;/p&gt;

&lt;p&gt;Let's create a simple chat system&lt;/p&gt;

&lt;p&gt;First, we are gonna create a new nodeJS project&lt;/p&gt;

&lt;p&gt;Let's name it &lt;strong&gt;sse-server&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, let's initiate npm to install some dependencies&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Exi4eqy7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7e9b1bzu4k3twc155klt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Exi4eqy7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7e9b1bzu4k3twc155klt.png" alt="Initiate NPM" width="880" height="208"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are gonna add &lt;code&gt;express&lt;/code&gt;, &lt;code&gt;body-parser&lt;/code&gt; and &lt;code&gt;cors&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JkbSJyfX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o6tabfduz2o6y2ynv4k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JkbSJyfX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o6tabfduz2o6y2ynv4k.png" alt="NPM Install command" width="880" height="208"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;index.ts&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Configure the middleware
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import express from 'express';
import bodyParser from 'body-parser';
import cors from 'cors';

const app = express();

app.use(cors());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Specify the PORT
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const PORT = 3000;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Declare and initialise the required variables
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Contains the connected clients info
let clients: any[] = []; 
// Contains the messages of the network
const messages: any[] = [];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a endpoint where the clients will subscribe to events
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.get('/messages', (request: any, response: any) =&amp;gt; {
  const headers: any = {
    'Content-Type': 'text/event-stream',
    Connection: 'keep-alive',
    'Cache-Control': 'no-cache'
  };

  response.writeHead(200, headers);

  const data: string = `data: ${JSON.stringify(messages)}\n\n`;

  response.write(data);

  const clientId = (request.query.id ?? 'guest') + '_' + Date.now();

  const newClient: any = {
    id: clientId,
    response
  };

  clients.push(newClient);

  request.on('close', () =&amp;gt; {
    console.log(`${clientId} Connection closed`);
    clients = clients.filter((client: any) =&amp;gt; client.id !== clientId);
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A function to notify whenever a new message arrives in the network
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const notifyMessageToAllUsers = (userIdWithoutUnderscore: string) =&amp;gt; {
  clients
    .filter(
      (client: any) =&amp;gt;
        String(client.id).split('_')[0] != userIdWithoutUnderscore
    )
    .forEach((client: any) =&amp;gt; {
      client.response.write(`data: ${JSON.stringify(messages)}\n\n`);
    });
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Finally an endpoint to push messages to the network
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.post('/message', (request, response) =&amp;gt; {
  if (
    request.query.id &amp;amp;&amp;amp;
    request.body &amp;amp;&amp;amp;
    request.body.message &amp;amp;&amp;amp;
    String(request.body.message).trim()
  ) {
    messages.push({
      user_id: request.query.id,
      message: request.body.message.trim()
    });
    notifyMessageToAllUsers(String(request.query.id));
    response.send({ status: 200, error: 'Message Sent Succesfully' });
  } else {
    response.send({ status: 400, error: 'Bad Request' });
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;let's start the server
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.listen(PORT, () =&amp;gt; {
  console.log(`Server is listening at http://localhost:${PORT}`);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Server console&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ Server is listening at http://localhost:3000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For pushing a message to the network&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ curl --location --request POST 'http://localhost:3000/message?id=1234' \
--header 'Content-Type: application/json' \
--data-raw '{
    "message": "Hi"
}'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To listen to the messages&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl --location --request GET 'http://localhost:3000/messages' \
--header 'Accept: text/event-stream'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After subscribing to the endpoint, we should be able to see the message that was pushed earlier&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ data: [{"user_id":"1234","message":"Hi"}]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;SSE is very powerful in terms of receiving &lt;strong&gt;events&lt;/strong&gt; from the server to achieve real-time behaviour in the client. But it can get very expensive if it's not implemented efficiently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for Reading!
&lt;/h2&gt;

&lt;p&gt;Thanks for reading, I hope you enjoyed it!&lt;/p&gt;

</description>
      <category>node</category>
      <category>typescript</category>
    </item>
    <item>
      <title>GitHub Repositories Developers should know</title>
      <author>CHP</author>
      <pubDate>Sun, 12 Dec 2021 15:08:00 +0000</pubDate>
      <link>https://dev.to/chp/github-repositories-developers-should-know-lci</link>
      <guid>https://dev.to/chp/github-repositories-developers-should-know-lci</guid>
      <description>&lt;p&gt;GitHub repos are an amazing way to learn programming and leadership skills. In a long run, It’s a worthy skill to get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1free-programming-books"&gt;
  &lt;/a&gt;
  1.Free Programming Books
&lt;/h2&gt;

&lt;p&gt;Free online classes, interactive programming materials, problem sets and competitive programming, programming playgrounds and podcasts, and cheat sheets for practically every programming language are all included in &lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;🌟: 215K+&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2developer-roadmap"&gt;
  &lt;/a&gt;
  2.Developer Roadmap
&lt;/h2&gt;

&lt;p&gt;If you want to work as a Frontend, Backend, or DevOps Engineer, this &lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;repository&lt;/a&gt; offers all you need to know. It features a variety of different technologies from which you may select the one that best meets your needs or provides the most comfort.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;🌟: 180K+&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3awesome"&gt;
  &lt;/a&gt;
  3.Awesome
&lt;/h2&gt;

&lt;p&gt;This &lt;a href="https://github.com/sindresorhus/awesome"&gt;repository&lt;/a&gt; contains information on a wide range of topics, including computer science, media, gaming, business, and so on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;🌟: 179K+&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4coding-interview-university"&gt;
  &lt;/a&gt;
  4.Coding Interview University
&lt;/h2&gt;

&lt;p&gt;This &lt;a href="https://github.com/jwasham/coding-interview-university"&gt;repository&lt;/a&gt; provides guidance on how to prepare for a career as a reliability engineer or an operations engineer. It also includes links to flashcards made by the repository's creator, who earned a position at Amazon, for fast brushing up on your expertise and staying current.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;🌟: 210K+&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5public-apis"&gt;
  &lt;/a&gt;
  5.Public APIs
&lt;/h2&gt;

&lt;p&gt;This &lt;a href="https://github.com/public-apis/public-apis"&gt;repository&lt;/a&gt; includes a variety of Application Programming Interfaces (APIs) for business, anime, animals, news, finance, gaming, and other topics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;🌟: 171K+&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;That's a wrap!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading this article. I also write regularly on my newsletter '&lt;a href="https://thelearners.substack.com/"&gt;The Learners&lt;/a&gt;', you can signup directly from &lt;a href="https://thelearners.substack.com/"&gt;this link&lt;/a&gt;. 💡💡&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quote-of-the-day"&gt;
  &lt;/a&gt;
  Quote of the day:
&lt;/h3&gt;

&lt;p&gt;"We cannot solve our problems with the same thinking we used when we created them." - Albert Einstein&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Advent of Code 2021 - Day 12</title>
      <author>Daniel Persson</author>
      <pubDate>Sun, 12 Dec 2021 15:03:00 +0000</pubDate>
      <link>https://dev.to/kalaspuffar/advent-of-code-2021-day-12-4ln2</link>
      <guid>https://dev.to/kalaspuffar/advent-of-code-2021-day-12-4ln2</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/w0d8Wvagzmo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this video series, I try to challenge myself with the Advent of Code trials. Each solution will be published to Github, and I hope you will learn something from my coding mistakes and perhaps send some code my way on how you have done these challenges. I know by reading code, so this is such an exciting thing for me.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Free resource from Harvard Stanford and Yale to target your resume for American companies</title>
      <author>Dina Kazakevich</author>
      <pubDate>Sun, 12 Dec 2021 15:02:27 +0000</pubDate>
      <link>https://dev.to/dinakazakevich/free-resource-from-harvard-stanford-and-yale-to-target-your-resume-for-american-companies-3bhf</link>
      <guid>https://dev.to/dinakazakevich/free-resource-from-harvard-stanford-and-yale-to-target-your-resume-for-american-companies-3bhf</guid>
      <description>&lt;p&gt;I'd spent over two year sending out applications and not getting any response from American remote-first companies before I had landed my first remote job back in 2016. I figured out a working version of my resume intuitively. &lt;/p&gt;

&lt;p&gt;I wanna help you reduce the time you spend on tailoring your resume by sharing these free resources from Harvard, Yale and Stanford that have some meaningful advice that helped me cut down the jobs search time to two months. &lt;/p&gt;

&lt;p&gt;In these guides you will find general guidance, formatting, and common mistakes. There are also sample resume templates that you can use and some action verbs to help you improve the wording. This is my curated list tha I use for myself and I'm gonna update it as I come across more resources. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resume-and-cover-letter-examples-and-tips-by-top-american-universities"&gt;
  &lt;/a&gt;
  Resume and cover letter examples and tips by top American universities:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ocs.yale.edu/channels/resumes/"&gt;Resumes by Yale&lt;/a&gt;&lt;br&gt;
&lt;a href="https://beam.stanford.edu/sites/g/files/sbiybj10676/f/resume_and_cover_letter_examples.pdf"&gt;Resume and Cover Letter Examples by Stanford&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ocs.fas.harvard.edu/files/ocs/files/undergrad_resumes_and_cover_letters.pdf"&gt;Resume and Cover Letter Guide by Harvard&lt;/a&gt;&lt;br&gt;
&lt;a href="https://students.wustl.edu/wp-content/uploads/2018/12/Transitional-Resumes-17-Accessible-PDF.pdf"&gt;Transitional Resume by Washington University&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#action-verbs-to-help-you-reword-and-unpack-your-experience"&gt;
  &lt;/a&gt;
  Action Verbs to help you reword and unpack your experience
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.gsb.stanford.edu/sites/gsb/files/action-verbs.pdf"&gt;Action Verbs by Stanford&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cdn.uconnectlabs.com/wp-content/uploads/sites/77/2020/05/2016_Resume_Action_Verbs-1.pdf"&gt;Action Verbs by Yale&lt;/a&gt;&lt;br&gt;
&lt;a href="https://students.wustl.edu/wp-content/uploads/2018/12/Resume-Words-17-Accessible.pdf"&gt;Action Verbs by Washington University&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Resume tells your story and these guides can be used to tailor your story to any kind of position or company be it technical or non-technical one, one at startup or a large corporation. The format is universally accepted including positions at remote-first companies. &lt;/p&gt;

&lt;p&gt;Let me know if this is helpful and if you know any other resources I should include in the list! Good luck! &lt;/p&gt;

</description>
      <category>resume</category>
      <category>cv</category>
      <category>javascript</category>
      <category>engineer</category>
    </item>
    <item>
      <title>Getting Started with Amazon SageMaker Studio Lab</title>
      <author>Jia Wei Teh</author>
      <pubDate>Sun, 12 Dec 2021 14:55:43 +0000</pubDate>
      <link>https://dev.to/aws-builders/getting-started-with-amazon-sagemaker-studio-lab-ok</link>
      <guid>https://dev.to/aws-builders/getting-started-with-amazon-sagemaker-studio-lab-ok</guid>
      <description>&lt;p&gt;The best way to learn data science and machine learning is with hands-on labs, tutorials and experimentations. Unfortunately, there are common pain points that add a layer of friction to get aspiring data scientists started.&lt;/p&gt;

&lt;p&gt;These struggles include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;setting up hardware like GPU or frameworks installation on personal laptops&lt;/li&gt;
&lt;li&gt;cloud-hosted ML environments are easy to set up but expensive&lt;/li&gt;
&lt;li&gt;lack persistent storage on free options (i.e. your data and environment will reset after the session expires)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In the latest AWS &lt;a href="https://reinvent.awsevents.com"&gt;re:Invent 2021&lt;/a&gt;, the AWS team announced the launch of SageMaker Studio Lab (currently in preview) to address these challenges and eliminate the setup hassle.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Amazon Sagemaker Studio is a free, no-configuration service that allows developers, academics and data scientist to learn and experiment with machine learning.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Unlike SageMaker Notebook Instances or SageMaker Studio, where you need to set up an AWS account (and the need for a credit card), you now &lt;strong&gt;only need&lt;/strong&gt; a valid &lt;strong&gt;email address&lt;/strong&gt; to register for an account and start experimenting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h3&gt;

&lt;p&gt;AWS SageMaker Studio Lab is free (yes, FREE!). You can even choose between CPU or GPU, depending on your project needs.&lt;br&gt;
Your account is allocated &lt;strong&gt;15 GB&lt;/strong&gt; of persistent storage, and 16GB of RAM. What this means is you can save your project and dataset in the cloud (no need to start from scratch every time)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For those who are familiar with AWS, the underlying resources are as follow — &lt;code&gt;G4dn.xlarge&lt;/code&gt; for GPU and &lt;code&gt;T3.xlarge&lt;/code&gt; for CPU instances (subject to change)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#account-registration-and-creation"&gt;
  &lt;/a&gt;
  Account Registration and Creation
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Visit &lt;a href="https://studiolab.sagemaker.aws/"&gt;https://studiolab.sagemaker.aws/&lt;/a&gt; and request an account. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fill up the form with your details&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BZSi7tOq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aano9abth0npn69xxpeo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BZSi7tOq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aano9abth0npn69xxpeo.png" alt="Request Form (screenshot from author)" width="623" height="923"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wait for request approval (AWS claimed the process is &lt;em&gt;within 1 to 5 business days&lt;/em&gt;. I have gotten my account approved the next day after my request)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Upon receiving your approval email, you can follow the account creation instruction, proceed with the sign-up link from the email.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cuGbOivX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzen1944a62mmij6mvd6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cuGbOivX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzen1944a62mmij6mvd6.png" alt="Account Creation (screenshot from author)" width="678" height="612"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#exploring-the-interface"&gt;
  &lt;/a&gt;
  Exploring the Interface
&lt;/h2&gt;

&lt;p&gt;Upon reaching the landing page, you will need to start your project runtime. You’ll need to select between CPU and GPU runtime, and the sessions last from 12 (CPU) and 4 (GPU) respectively.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TSMKYC1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cql1mahupp0w9jafof17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TSMKYC1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cql1mahupp0w9jafof17.png" alt="Home/Welcome page of SageMaker Studio Lab (screenshot from author)" width="678" height="528"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the session is timed out, you will have to restart the project runtime again. Don’t worry, all your files will be saved on the persistent project storage.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--at_hQylM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sl7yv7opwul8ccwyxnlr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--at_hQylM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sl7yv7opwul8ccwyxnlr.png" alt="Check your remaining time for your session" width="686" height="188"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#learn-and-experiment"&gt;
  &lt;/a&gt;
  Learn and Experiment
&lt;/h2&gt;
&lt;h4&gt;
  &lt;a href="#aws-machine-learning-university-mlu"&gt;
  &lt;/a&gt;
  AWS Machine Learning University (MLU)
&lt;/h4&gt;

&lt;p&gt;MLU notebooks contain materials used to train Amazon’s own developers on machine learning. Courses include&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Natural Language Processing&lt;/li&gt;
&lt;li&gt;Tabular Data&lt;/li&gt;
&lt;li&gt;Computer Vision&lt;/li&gt;
&lt;li&gt;Decision Trees and Ensemble Methods&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#dive-into-deeplearning-d2l"&gt;
  &lt;/a&gt;
  Dive Into DeepLearning (D2L)
&lt;/h4&gt;

&lt;p&gt;Interactive notebooks (over 150 Jupyter Notebooks) that teach the fundamentals of machine learning, adopted from 300 universities, including Stanford, MIT, Harvard and Cambridge.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#hugging-face"&gt;
  &lt;/a&gt;
  Hugging Face
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://huggingface.co"&gt;Hugging Face&lt;/a&gt; is the home of the Transformers library and the latest NLP, speech and computer vision models. Here, you can explore and learn from the notebooks in this &lt;a href="https://github.com/huggingface/notebooks"&gt;repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#jupyter-lab-interface"&gt;
  &lt;/a&gt;
  Jupyter Lab Interface
&lt;/h2&gt;

&lt;p&gt;Since it is based on the open-source JupyterLab, you can take advantage of open-source Jupyter extensions to run your Jupyter notebooks.&lt;/p&gt;

&lt;p&gt;You can also have full control with your (virtual) environment to leverage frameworks such as PyTorch, TensorFlow, MxNet, Hugging Face and libraries such as Scikit Learn, Pandas and NumPy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P3h_dnvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u63mn37csihreeej7s74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P3h_dnvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u63mn37csihreeej7s74.png" alt="A typical Jupyter Lab interface on SageMaker Studio Lab (screenshot from author)" width="686" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can clone your own Github repository and work on SageMaker Studio Lab as it has integration to Github and to Git for version control.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QreIeI4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dolf0eil9anop0anui8m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QreIeI4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dolf0eil9anop0anui8m.png" alt="Cloning your own repo to work on SageMaker Studio Lab (screenshot from author)" width="682" height="283"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Furthermore, if you have a public Github repo with Jupyter Notebook, you can make it easy for others to open your notebooks in SageMaker Studio Lab.&lt;/p&gt;

&lt;p&gt;All you need to do is to add the &lt;code&gt;Open in Studio Lab&lt;/code&gt; link (badge) to your &lt;code&gt;README.md&lt;/code&gt; file or notebook. The markdown to be included is as follow:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[![Open In Studio Lab]
(https://studiolab.sagemaker.aws/studiolab.svg)]
(https://studiolab.sagemaker.aws/import/github/org/repo/blob/master/path/to/notebook.ipynb)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The created badge will look like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YXrcA5XF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zrabcn4z56pw5l374h7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YXrcA5XF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zrabcn4z56pw5l374h7.png" alt="“Open in Studio Lab” badge" width="671" height="137"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-hackathon"&gt;
  &lt;/a&gt;
  Bonus: Hackathon
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aE42rvYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0865upbqzyoocpye2yt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aE42rvYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0865upbqzyoocpye2yt.png" alt="AWS Disaster Response Hackathon" width="691" height="137"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the time of writing (December 2021), there’s an ongoing hackathon (AWS Disaster Response Hackathon) where you can explore and train your models in SageMaker Studio Lab. The deadline is 7 Feb 2022, 5:00 pm EST.&lt;/p&gt;

&lt;p&gt;Read more:&lt;br&gt;
&lt;a href="https://awsdisasterresponse.devpost.com"&gt;https://awsdisasterresponse.devpost.com&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Thank you for reading this article and I hope you will find it insightful. Get your SageMaker Studio Lab before the waitlist is getting longer.&lt;/p&gt;

&lt;p&gt;Happy learning everyone.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>python</category>
      <category>machinelearning</category>
      <category>deeplearning</category>
    </item>
  </channel>
</rss>
