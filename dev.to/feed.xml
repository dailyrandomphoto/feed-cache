<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What is a Database(DB)?</title>
      <author>Archit Sharma</author>
      <pubDate>Thu, 02 Sep 2021 14:53:23 +0000</pubDate>
      <link>https://dev.to/iarchitsharma/what-is-a-database-db-pok</link>
      <guid>https://dev.to/iarchitsharma/what-is-a-database-db-pok</guid>
      <description>&lt;p&gt;&lt;code&gt;This is the article if you want to understand in simple terms about Databases.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Database&lt;/strong&gt; &lt;em&gt;is a Collection of related information&lt;/em&gt;, For Example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Todo List&lt;/li&gt;
&lt;li&gt;Shopping list&lt;/li&gt;
&lt;li&gt;Phone Book&lt;/li&gt;
&lt;li&gt;Name of your 10 friends&lt;/li&gt;
&lt;li&gt;Twitter User Base&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Database can be stored in different ways, For Ex. :-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On a book&lt;/li&gt;
&lt;li&gt;In a Computer&lt;/li&gt;
&lt;li&gt;In your mind&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In computing term, a database is an organized collection of &lt;strong&gt;data&lt;/strong&gt; stored and accessed from a computer system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-data"&gt;
  &lt;/a&gt;
  What is Data?
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;In simple words, data can be facts related to any object in consideration. For example, your name, age, height, weight, etc. are some data related to you. A picture, image, file, pdf, etc. can also be considered data.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-database-management-system-dbms"&gt;
  &lt;/a&gt;
  What is a Database Management System (DBMS)?
&lt;/h2&gt;

&lt;p&gt;It is a special software program that helps users create and maintain a database.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Makes it easy to Handle Security&lt;/li&gt;
&lt;li&gt;Interacts with software applications&lt;/li&gt;
&lt;li&gt;Backups&lt;/li&gt;
&lt;li&gt;manage large amount of Information&lt;/li&gt;
&lt;li&gt;Import/export Data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Here is a Diagram showing how a website interact with Database Management System (DBMS) :&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ollCK7cF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wq0k6q12r15fr9dbh5kz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ollCK7cF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wq0k6q12r15fr9dbh5kz.jpg" alt="Twitter Database Diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are two types of Databases :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Relational Database (SQL): Organize Data into one or more tables&lt;/li&gt;
&lt;li&gt;Each table has rows and columns.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A unique key identifies each row.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Non-Relation Database (noSQL/ not just SQL): Organize Data can be anything but a traditional table&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A key value is stored&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Documents (Pdf,xml etc)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Graphs and flexible trees&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-are-database-queries"&gt;
  &lt;/a&gt;
  What are Database Queries?
&lt;/h2&gt;

&lt;p&gt;Queries are request made to DBMS for a specific information. For example, A google search is a query.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Follow me because in my next Article I will explain Tables &amp;amp; Keys in DBMS.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>mysql</category>
      <category>database</category>
      <category>sql</category>
      <category>programming</category>
    </item>
    <item>
      <title>Warehouse Management Software Development: All-Inclusive Guide </title>
      <author>AscendixTech</author>
      <pubDate>Thu, 02 Sep 2021 14:51:49 +0000</pubDate>
      <link>https://dev.to/ascendixtech/warehouse-management-software-development-all-inclusive-guide-2iii</link>
      <guid>https://dev.to/ascendixtech/warehouse-management-software-development-all-inclusive-guide-2iii</guid>
      <description>&lt;p&gt;&lt;em&gt;The article was originally published on &lt;a href="https://ascendixtech.com/how-to-choose-a-warehouse-management-system-buy-vs-build-comparison/"&gt;Ascendix Tech Blog &lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Markets and Markets states that the warehouse management  software market was valued at $2.4 bln in 2020 and is forecasted to reach over $5 bln by 2025. &lt;/p&gt;

&lt;p&gt;So, more and more companies are looking for a custom or out-of-the-box warehouse management software and here the question emerges: ‘how to build a warehouse management system?’ &lt;/p&gt;

&lt;p&gt;For these reasons, we decided to share the all-inclusive guide on warehouse management software development covering the following aspects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;What is warehouse management software &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Warehouse management system market statistics &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The core types of warehouse management systems &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Key features of warehouse management system &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to build a warehouse management system. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, let’s get down to business and start with the definition. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-warehouse-management-system"&gt;
  &lt;/a&gt;
  What is Warehouse Management System
&lt;/h3&gt;

&lt;p&gt;A warehouse management system is a technology solution designed specifically to help e-commerce and other B2B/B2C businesses automate, optimize, and support internal warehouse workflows and processes. &lt;/p&gt;

&lt;p&gt;Warehouse management software empowers entrepreneurs to take an automated control of the entire supply chain management process from receiving to shipping. &lt;/p&gt;

&lt;p&gt;What are the key types of warehouse management software (WMS)? &lt;/p&gt;

&lt;p&gt;Briefly speaking, there are 4 key types of warehouse management systems that help solve multiple different challenges and tasks depending on specific business demands. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Standalone Warehouse Management System &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Supply Chain Execution Modules &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Integrated ERP Systems &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cloud-Based Warehouse Management Systems &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4FqGNSqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9d5m9bx9ov9h0ytz9m3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4FqGNSqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9d5m9bx9ov9h0ytz9m3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the following passages, we will cover the key aspects you should cosnider to answer the question ‘how to choose a warehouse management system’ that will fit your business needs the best way possible. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-top-wms-software-providers"&gt;
  &lt;/a&gt;
  What are the top WMS software providers?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;NetSuite WMS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tln7Kj63--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10276hwa9nzjrazb9ue4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tln7Kj63--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10276hwa9nzjrazb9ue4.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NetSuite Warehouse Management System is one of the leading WMS software providers offering a cutting-edge web-based product by Oracle.  &lt;/p&gt;

&lt;p&gt;The software solution was created exactly to assist companies in streamlining and automating warehouse operations from receiving to shipping. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Softeon&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8pz1bDmi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc3jq6lc0ixim7kyrh1l.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8pz1bDmi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc3jq6lc0ixim7kyrh1l.jpeg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Being one of the leading WMS software providers, Softeon offers a warehouse management system designed specifically to help optimize and automate most supply chain operations from receiving to shipping. &lt;/p&gt;

&lt;p&gt;The company offers both a web-based cloud solution and on-premises deployment system up to your challenges and goals. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3PL Warehouse Manager&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KBMxdQLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stv231gygq9f49qumnuk.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KBMxdQLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stv231gygq9f49qumnuk.jpeg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3PL Warehouse Manager is one of the flourishing cloud-based WMS software by 3PL Central designed to help operations managers and 3PL owners automate daily routine workflows and transform paper-based operations into powerful, automated, and centralized software. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fishbowl Inventory&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZYnjV1gB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5tc8qsvtxbetc1bw3ft.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZYnjV1gB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5tc8qsvtxbetc1bw3ft.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fishbowl Inventory is a warehouse management system application created to bring high automation for inventory and manufacturing workflows. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#top-features-of-warehouse-management-systems"&gt;
  &lt;/a&gt;
  Top Features of Warehouse Management Systems
&lt;/h3&gt;

&lt;p&gt;Now we want to discuss 5 features of warehouse management systems that are a must-have in 2021 to meet your business needs and requirements. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Predictive Analytics with Insightful Dashboards &amp;amp; Charts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First, top predictive data analysis algorithms provide a wide range of smart techniques like AI data mining, modeling, statistics, and others that allow you to leverage the receiving data in the best way possible. &lt;/p&gt;

&lt;p&gt;So, the best warehouse management systems provide predictive analytics which empowers you to transform the quantity of data into quality. The more qualitative insights you get from analysis, the better your decision-making becomes. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pHYxHJ2t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wj54k152wo9tlic00s3c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pHYxHJ2t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wj54k152wo9tlic00s3c.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Inventory Management &amp;amp; Tracking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shortly, it allows you to automate and streamline the inventory management processes. So, you get accurate data-driven insights into your warehouse business and know wen and what items you should order, what vendors you’ve worked with, and the latest rates you’ve been charged. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtKA0z3f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yuqzie9agt600hajo5ck.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtKA0z3f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yuqzie9agt600hajo5ck.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Advanced Picking, Replenishment, Shipping Functionality&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Picking, packing, replenishing, and shipping are among the most important and yet challenging operations for companies while scaling.  &lt;/p&gt;

&lt;p&gt;This way, this solution type offers the following benefits to market-specific companies: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Enhanced order accuracy rate &lt;/li&gt;
&lt;li&gt;Efficiency boost &lt;/li&gt;
&lt;li&gt;Streamlined supply chain &lt;/li&gt;
&lt;li&gt;Decreased error ratio &lt;/li&gt;
&lt;li&gt;Cost-effective shipping. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---su8O2R---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/79m22y6zqg9sukh8j4he.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---su8O2R---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/79m22y6zqg9sukh8j4he.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Order Fulfillment &amp;amp; Management&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another crucial business component for any market-specific company is order fulfillment. For this reason, warehouse management software with order fulfillment and management features is a must-have in 2021. &lt;/p&gt;

&lt;p&gt;Simply put, warehouse fulfillment software fully automates and streamlines the entire inventory management processes from receiving to final product shipping. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oNyV4a_A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/whibglzs27f2jdwn56bn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oNyV4a_A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/whibglzs27f2jdwn56bn.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-build-a-warehouse-management-system-key-steps"&gt;
  &lt;/a&gt;
  How to Build a Warehouse Management System: Key Steps
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-define-your-goals"&gt;
  &lt;/a&gt;
  1. Define your goals
&lt;/h3&gt;

&lt;p&gt;It’s an open secret that the first thing you should do before choosing any solution type is to define your key business goals you want to achieve. This way, you will surely know what type of technology solutions you need so that it will perfectly help you solve any challenges and reach your goals. &lt;/p&gt;

&lt;p&gt;For instance, if case you want to advance warehouse inventory management and tracking processes to achieve highly automated paperless workflows and reduced labor costs, then consider warehouse management system applications that provide all-inclusive inventory management features. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-choose-outofthebox-vs-custom-warehouse-management-systems"&gt;
  &lt;/a&gt;
  2. Choose out-of-the-box vs custom warehouse management systems
&lt;/h3&gt;

&lt;p&gt;Now we want to discuss how to choose a warehouse management system comparing off-the-shelf vs custom warehouse management software. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Implementation and setup time&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Off-the-shelf WMS software providers mostly offer a faster and easier implementation and setup, but they fully depend on the project complexity and may vary from $200,000 to $750,000 as implementation costs (by Softeon). &lt;/p&gt;

&lt;p&gt;Custom warehouse management software development is about a long-term, tailor-made process, and costly process, but you will save much funds in the long run. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scalability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ready-made warehouse management system applications offer limited scalability opportunities for your business.  &lt;/p&gt;

&lt;p&gt;Building a warehouse management system from scratch, you can embed the needed level of scalability in terms of the employees count, number of warehouses, and other aspects during the development process. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On-demand functionality&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ready-made WMS software providers offer an exact list of features that you cannot expand or reduce. This way, custom warehouse management systems are a perfect choice if you want to save much funds on building only the exact functionality. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of integrations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Off-the-shelf warehouse stock software offer a fixed number of integrations available out-of-the-box. So, it’s both a great opportunity to integrate with other tools quickly and a limited functionality which does not allow you to add custom integrations. &lt;/p&gt;

&lt;p&gt;At opposite, building a warehouse management system from scratch gives you an opportunity to integrate with hundreds of products by embedding the required API connections. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hQZdo_ra--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39ollvmk38pzjabc1zw0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hQZdo_ra--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39ollvmk38pzjabc1zw0.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-choose-a-development-option"&gt;
  &lt;/a&gt;
  3. Choose a development option
&lt;/h3&gt;

&lt;p&gt;In case you want to build warehouse management systems tailored to your specific business needs from scratch, you should define the most relevant development option. &lt;/p&gt;

&lt;p&gt;Specifically, there are 3 key development options: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Find a CTO/technical partner &lt;/li&gt;
&lt;li&gt;Hire a team of freelance developers &lt;/li&gt;
&lt;li&gt;Outsource to a custom software development partner.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each option has its pros and cons, but all of them worth your attention. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words
&lt;/h2&gt;

&lt;p&gt;We hope our post will help you get a better understanding of warehouse management system development. If you want to learn the full guide, please check the full blog post &lt;strong&gt;&lt;a href="https://ascendixtech.com/how-to-choose-a-warehouse-management-system-buy-vs-build-comparison/"&gt;Warehouse Management Software Development: All-Inclusive Guide&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>startup</category>
      <category>todayilearned</category>
      <category>software</category>
    </item>
    <item>
      <title>Automatic Mail Campaign Creation</title>
      <author>Leonidas Costas</author>
      <pubDate>Thu, 02 Sep 2021 14:37:57 +0000</pubDate>
      <link>https://dev.to/leonidascostas/automatic-mailjet-campaign-creation-1d6k</link>
      <guid>https://dev.to/leonidascostas/automatic-mailjet-campaign-creation-1d6k</guid>
      <description>&lt;p&gt;Hi Sparta!&lt;/p&gt;

&lt;p&gt;In this article I will share with you how to create marketing campaigns, newsletters... automatically in your NestJS backend 💌&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The full source code and the documentation is available &lt;a href="https://github.com/arthurPrvst/automatic-campaign-mailjet"&gt;on GitHub&lt;/a&gt; or &lt;a href="https://fast-modular-project.com/modules/automatic-campaign-creation-mailjet"&gt;on FMP&lt;/a&gt;&lt;/strong&gt; 🙂&lt;/p&gt;

&lt;p&gt;This newsletter / marketing campaign module will be added top of the React/Node/MySQL starter. This starter has already been presented to you in &lt;a href="https://dev.to/fastmodularproject/web-starter-react-nestjs-mysql-3o9i"&gt;this article&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-does-it-work-"&gt;
  &lt;/a&gt;
  How does it work ?
&lt;/h1&gt;

&lt;p&gt;We'll use Mailjet's API in order to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a "Contact" for every user of your app&lt;/li&gt;
&lt;li&gt;Add them to an already existing ContactList created on Mailjet side&lt;/li&gt;
&lt;li&gt;Update their metadatas (whether or not their profil are verified)&lt;/li&gt;
&lt;li&gt;Create campaign draft&lt;/li&gt;
&lt;li&gt;Send a test mail to a dev adress in order to preview the futur campaign that will be sent&lt;/li&gt;
&lt;li&gt;Schedule the campaign for all user's missing the verification of their profil&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#high-picture-of-the-workflow"&gt;
  &lt;/a&gt;
  High picture of the workflow
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;A user sign up to your web app.&lt;/li&gt;
&lt;li&gt;A user is created in databse and on Mailjet side as a "Contact" (name, email, hasVerifiedProfil)&lt;/li&gt;
&lt;li&gt;Every day a 6pm05 we generate automatically a campaign draft to ask for the verification of their account (for user's who haven't done it before).&lt;/li&gt;
&lt;li&gt;The campaign is scheduled for 6pm35.&lt;/li&gt;
&lt;li&gt;The draft is sent to you, in order to verify their is no issue in content that will be sent to your user. If an issue occurs, you can delete the scheduled campaign in your Mailjet account. You could then retrigger the campaign generation with Postman once the content is corrected.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#step-by-step-guide"&gt;
  &lt;/a&gt;
  Step by step guide
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;1 - Account creation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create a MailJet account &lt;a href="https://fr.mailjet.com"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step 2 - Install mailjet dependency&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Install the &lt;code&gt;node-mailjet&lt;/code&gt; dependency in the &lt;code&gt;backend&lt;/code&gt; directory of your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install node-mailjet@3.3.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Step 3 - Mailjet credentials&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Add your mailjet API credentials in your environments files (DEV, STAGING &amp;amp; PROD) found in the &lt;code&gt;backend/src/environments&lt;/code&gt; directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const environment = {
  ...,
  mailjet: {
    apiKey: '%YOUR_API_KEY%',
    secretKey: '%YOUR_SECRET_KEY%',
    contactListID: TODO_LATER,
  },
  ...
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your credentials can be found using &lt;a href="https://app.mailjet.com/account/api_keys"&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step 4 - Contact lists config
Create two contact lists in your Mailjet account. One will be used in dev env &lt;code&gt;mylist_dev&lt;/code&gt; and the other one will be used for production &lt;code&gt;mylist_prod&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To do so, in your Mailjet account : "Contact" &amp;gt; "Contact List" &amp;gt; "Create a contact a list".&lt;/p&gt;

&lt;p&gt;Properties of your user should contains at least "email" (string), "name" (string) and hasVerified (boolean).&lt;/p&gt;

&lt;p&gt;Once created, the the contactListID in &lt;code&gt;backend/src/environments&lt;/code&gt; in the mailjet config.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 5 - Segment config&lt;br&gt;
A segment is a subset of contacts from a contact list that matchs your condition on the metadatas of the contact.&lt;br&gt;
In our case, we'll create a segment "verification_not_done" that will contains all contact from &lt;code&gt;mylist_prod&lt;/code&gt; having &lt;code&gt;hasVerified&lt;/code&gt; properties equal to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 6 - Mail template config&lt;br&gt;
Create your campaign template with your Mailjet account : "Models" &amp;gt; "My Marketing Models" &amp;gt; "Create a new model". &lt;br&gt;
Once created, copy the ID of the template and set it as value of &lt;code&gt;ACCOUNT_VERIFICATION_TEMPLATE&lt;/code&gt; in &lt;code&gt;campaign-templates.enum.ts&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-7-back"&gt;
  &lt;/a&gt;
  Step 7 - Back
&lt;/h3&gt;

&lt;p&gt;Add folder &lt;code&gt;backend/campaign&lt;/code&gt; in your &lt;code&gt;backend/src/api&lt;/code&gt;. &lt;br&gt;
Don't forget to add &lt;code&gt;CampaignModule&lt;/code&gt; in the imports of the &lt;code&gt;app.module&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Add folder &lt;code&gt;backend/mailer&lt;/code&gt; in your &lt;code&gt;backend/src/shared&lt;/code&gt;. &lt;br&gt;
Don't forget to add &lt;code&gt;MailerModule&lt;/code&gt; in the imports of the &lt;code&gt;app.module&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-8-contact-creation-on-sign-up"&gt;
  &lt;/a&gt;
  Step 8 - Contact creation on sign up
&lt;/h3&gt;

&lt;p&gt;When your user sign up, you should create a contact on mailjet side.&lt;/p&gt;

&lt;p&gt;To do so, in file &lt;code&gt;backend/src/api/auth.controller.ts&lt;/code&gt; add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { MailerService } from '../../shared/mailer/mailer.service';

...

    @Post('signup')
    async signUp(@Body() createUserDto: CreateUserDto): Promise&amp;lt;{ success: boolean, token?: string, id?: number }&amp;gt; {

        ...

        const mailjetContact = await this.mailService.createContact(user);

        if (mailjetContact.body.Data[0].ID) {
            console.log("Mailjet contactID", mailjetContact.body.Data[0].ID);
            await this.mailService.addContactToContactList(mailjetContact.body.Data[0].ID);

            await this.usersService.update(user, { contactId: mailjetContact.body.Data[0].ID });
            await this.mailService.updateDefaultContactMetadatas(mailjetContact.body.Data[0].ID, createUserDto.firstname);
        }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can then verify in your contactList on your mailjet acccount the new user created on sign up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-9-automatic-campaign-creation"&gt;
  &lt;/a&gt;
  Step 9 - Automatic campaign creation
&lt;/h3&gt;

&lt;p&gt;Every friday at 6pm05, your campaign will be created, and scheduled at 6pm35 on all users that did not verify their account.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    // Every friday at 6pm05
    @Cron('0 5 18 * * 5', {
        name: 'sendMarketingCampaignVerifyAccount',
        timeZone: 'Europe/Paris',
    })
    async sendMarketingCampaignVerifyAccount() {
        ...
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To make the &lt;a href="https://docs.nestjs.com/techniques/task-scheduling"&gt;NestJS cron&lt;/a&gt; work, please install following dependencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    npm install --save @nestjs/schedule
    npm install --save-dev @types/cron
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h3&gt;

&lt;p&gt;To avoid any issue being categorized as "SPAM" you should configure the SPF and DKIM configuration for your sending mail address and your domain : Mailjet profil &amp;gt; "Preferences" &amp;gt; "Domains" &amp;gt; "DKIM/SPF authentication".&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope this module will help you ! Do not hesitate to &lt;strong&gt;pin and star on GitHub&lt;/strong&gt; if you appreciated the article ❤️&lt;/p&gt;

&lt;p&gt;Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The platform sharing the starter and it's modules: &lt;a href="https://fast-modular-project.com"&gt;Fast Modular Project&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Module "Automatic campaign Mailjet" on &lt;a href="https://github.com/arthurPrvst/automatic-campaign-mailjet"&gt;GitHub&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>newsletter</category>
      <category>mailjet</category>
      <category>campaign</category>
      <category>nestjs</category>
    </item>
    <item>
      <title>Node.js - login with Facebook SDK</title>
      <author>popoola Temitope</author>
      <pubDate>Thu, 02 Sep 2021 14:27:03 +0000</pubDate>
      <link>https://dev.to/popoolatopzy/node-js-facebook-sdk-cl6</link>
      <guid>https://dev.to/popoolatopzy/node-js-facebook-sdk-cl6</guid>
      <description>&lt;p&gt;Install the SDK with the command below&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;npm install facebook-sdk&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Visit &lt;a href="https://developer.facebook.com"&gt;developer.facebook.com&lt;/a&gt;login and register your APP ID &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uXndd7BZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://twilio-cms-prod.s3.amazonaws.com/images/E87JmVg3aeIhHTfbwwumBGio4RV4AIpPUTZX8GSKZXUYm.width-1600.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uXndd7BZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://twilio-cms-prod.s3.amazonaws.com/images/E87JmVg3aeIhHTfbwwumBGio4RV4AIpPUTZX8GSKZXUYm.width-1600.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;on the dashboard click Facebook login and fill the followed form&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nz2UBCYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://twilio-cms-prod.s3.amazonaws.com/images/AnR9M-IYPA0uXuIXV2pCqpmbRZl4qsj9X8yQqCtClPYqq.width-1600.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nz2UBCYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://twilio-cms-prod.s3.amazonaws.com/images/AnR9M-IYPA0uXuIXV2pCqpmbRZl4qsj9X8yQqCtClPYqq.width-1600.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;add  the code below to your app.js file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;connect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;connect&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;fbsdk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;facebook-sdk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookieParser&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bodyParser&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fbsdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;facebook&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;appId&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;YOUR APP ID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;secret&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;YOUR API SECRET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;facebook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSession&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;a href="&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;facebook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getLogoutUrl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;"&amp;gt;Logout&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="c1"&gt;// get my graph api information&lt;/span&gt;
      &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;facebook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/me&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;a href="&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;facebook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getLoginUrl&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;"&amp;gt;Login&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;replace APP ID and APP SECRET  with the one you generated.&lt;/code&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>facebook</category>
    </item>
    <item>
      <title>Showdev: deploy apps to edge devices and servers with Synpse</title>
      <author>Karolis</author>
      <pubDate>Thu, 02 Sep 2021 14:07:39 +0000</pubDate>
      <link>https://dev.to/krusenas/showdev-deploy-apps-to-edge-devices-and-servers-with-synpse-43k4</link>
      <guid>https://dev.to/krusenas/showdev-deploy-apps-to-edge-devices-and-servers-with-synpse-43k4</guid>
      <description>&lt;p&gt;Hey dev.to! I wanted to share our project &lt;a href="https://synpse.net"&gt;Synpse&lt;/a&gt; that my friend and I have been working on for quite some time. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Registration is now open at &lt;a href="https://cloud.synpse.net"&gt;https://cloud.synpse.net&lt;/a&gt;. Free for up to 5 devices forever. We can increase your quotas if requested. Self-hosted version available as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Synpse provides tooling and services to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Prepare machine images that you can burn into SD cards to quickly bootstrap hundreds or thousands of devices.&lt;/li&gt;
&lt;li&gt;Generated simple installation script for one-off device/server bootstrap.&lt;/li&gt;
&lt;li&gt;Group devices based on labels (used for both filtering and scheduling applications).&lt;/li&gt;
&lt;li&gt;Automated device naming (based on hostname, random names, etc.).&lt;/li&gt;
&lt;li&gt;Deploy containerized applications (Docker Compose/K8s Pod style).&lt;/li&gt;
&lt;li&gt;Automated device software updates.&lt;/li&gt;
&lt;li&gt;Easily scale to tens or hundreds of thousands of devices.&lt;/li&gt;
&lt;li&gt;SSH into any of your devices through &lt;code&gt;synpse&lt;/code&gt; CLI or web UI.&lt;/li&gt;
&lt;li&gt;Kubectl style port-forward command to open up TCP tunnels.&lt;/li&gt;
&lt;li&gt;CPU/RAM utilization metrics from device.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#problem"&gt;
  &lt;/a&gt;
  Problem
&lt;/h2&gt;

&lt;p&gt;While it's easy to configure a systemd or some other init service in an OS image to launch your application on device boot - it won't help much for fast updates or gradual rollout. It will also not help much if during the rollout you need to collect some data from applications (logs, SSH access to check some files).&lt;/p&gt;

&lt;p&gt;We had a need to deploy quite complex piece of software to ~1200 devices. After looking into a bunch of alternatives like Mender, Balena, Deviceplane we came to a conclusion that it's either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Can't use my own image (we had a manufacturer that could only use their own Linux distro, new custom OS was not an option).&lt;/li&gt;
&lt;li&gt;Self-hosting is too complicated.&lt;/li&gt;
&lt;li&gt;Not scaleable (started considerably slowing down with very few devices).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;p&gt;What our testing gave us was the understanding that the ideal solution would be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simple self-hosting, a horizontally scaleable controller and a managed database (we chose Postgres) without disrupting your bank balance. &lt;/li&gt;
&lt;li&gt;Must support any Linux OS.&lt;/li&gt;
&lt;li&gt;Don't try to be compatible with neither Kubernetes or Docker Compose in the API/config manifests. These systems require different semantics so it's fine to be similar but 1:1 mapping will just damage the UX.&lt;/li&gt;
&lt;li&gt;SSH and application logs are a must if you have an outage and you need a fast way to debug.&lt;/li&gt;
&lt;li&gt;Everything belongs to a project. Project can have multiple users but the projects should be able to survive multiple generations of users as these systems will last longer than many individual employees.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-feel"&gt;
  &lt;/a&gt;
  The feel
&lt;/h2&gt;

&lt;p&gt;So, one-off device provisioning script + execution parameters can be found in either "devices" or "provisioning" pages:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X3T2Gdp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lt11lafuq1tzght0o61e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X3T2Gdp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lt11lafuq1tzght0o61e.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once devices are added, they appear in your dashboard for SSH access, monitoring:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nJp1ulwK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cex7nhs50e23afnecwtx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nJp1ulwK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cex7nhs50e23afnecwtx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can read more about device management here: &lt;a href="https://docs.synpse.net/synpse-core/devices"&gt;https://docs.synpse.net/synpse-core/devices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can add various labels and then use them in the application deployment:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SykbSl4Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0fsg4c1ya8gossdogy40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SykbSl4Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0fsg4c1ya8gossdogy40.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;View application docs here: &lt;a href="https://docs.synpse.net/synpse-core/applications"&gt;https://docs.synpse.net/synpse-core/applications&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most applications have some shared or private configuration, luckily Synpse provides secrets (similar to Kubernetes ones) where you can reference to them from your application spec:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CNQLL8zt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dmk4skzoreobgylahel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CNQLL8zt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dmk4skzoreobgylahel.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And when things go south, view your application logs on any of the devices:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tXKa8ttn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lb4hzqlqqic8qs3o5bzg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tXKa8ttn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lb4hzqlqqic8qs3o5bzg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-cases"&gt;
  &lt;/a&gt;
  Use cases
&lt;/h2&gt;

&lt;p&gt;As mentioned in the first paragraph, we built Synpse for a medium size fleet of ~1200 IoT devices and a bunch of large servers as it appears that the UX can be much nicer than Docker Compose or Kubernetes. All of those devices are actually card readers in a large bus/trolleybus fleet in Lithuania :) &lt;/p&gt;

&lt;p&gt;We would recommend using Synpse for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Home lab deployments (up to 5 devices free forever).&lt;/li&gt;
&lt;li&gt;PoS deployments.&lt;/li&gt;
&lt;li&gt;Public transport fleets.&lt;/li&gt;
&lt;li&gt;ML on edge (packaging and running ML inference through Docker containers).&lt;/li&gt;
&lt;li&gt;Any kind of industrial applications where devices can be offline for a prolonged time. Synpse will work well without internet access.&lt;/li&gt;
&lt;li&gt;Normal VMs on cloud providers that don't provide good application deployment UX (most smaller ones like Vultr, DO, Packer, etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h2&gt;

&lt;p&gt;If you run software yourself or in a company, you should definitely check it out. &lt;/p&gt;

&lt;p&gt;Useful links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Docs: &lt;a href="https://docs.synpse.net/"&gt;https://docs.synpse.net/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Website: &lt;a href="https://synpse.net"&gt;https://synpse.net&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Our Discord channel: &lt;a href="https://discord.gg/dkgN4vVNdm"&gt;https://discord.gg/dkgN4vVNdm&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>showdev</category>
      <category>productivity</category>
      <category>tooling</category>
      <category>iot</category>
    </item>
    <item>
      <title>How to Optimize Database Queries in Laravel?</title>
      <author>Chetan Rohilla</author>
      <pubDate>Thu, 02 Sep 2021 14:03:30 +0000</pubDate>
      <link>https://dev.to/readymadecode/how-to-optimize-database-queries-in-laravel-3726</link>
      <guid>https://dev.to/readymadecode/how-to-optimize-database-queries-in-laravel-3726</guid>
      <description>&lt;p&gt;Some times to run larger laravel applications smoothly we needs to optimize our laravel application. One of these tasks here is how to optimize database queries in laravel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-retrieving-large-data-records"&gt;
  &lt;/a&gt;
  1. Retrieving Large Data Records
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#option-1-using-chunk"&gt;
  &lt;/a&gt;
  Option 1: Using chunk
&lt;/h3&gt;

&lt;p&gt;If your application required to process larger number of records. Then you should get the records in chunks. The below example retrieves 100 records from the posts table, processes them, retrieves another 100 records, and processes them. Chunk retrieves based on offset and limit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// when using eloquent&lt;/span&gt;
&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="c1"&gt;// Process posts&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// when using query builder&lt;/span&gt;
&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'posts'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="c1"&gt;// Process posts&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#option-2-using-chunkbyid"&gt;
  &lt;/a&gt;
  Option 2: Using chunkById
&lt;/h3&gt;

&lt;p&gt;You can also use chunkById. As chunkById is using the id field which is an integer, and the query is using a where clause, the query will be much faster.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// when using eloquent&lt;/span&gt;
&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;chunkById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="c1"&gt;// Process posts&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// when using query builder&lt;/span&gt;
&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'posts'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;chunkById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="c1"&gt;// Process posts&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#option-3-using-cursor"&gt;
  &lt;/a&gt;
  Option 3: Using cursor
&lt;/h3&gt;

&lt;p&gt;It will make a single database query, retrieve all the records from the table, and saturate the Eloquent models one by one. Since we are retrieving all the entries from a table, the memory usage on the database instance will still be higher. You can use a cursor If your web app running your application has less memory, and the database instance has more memory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// when using eloquent&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="c1"&gt;// Process a single post&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// when using query builder&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'posts'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="c1"&gt;// Process a single post&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-select-only-the-columns-which-you-need"&gt;
  &lt;/a&gt;
  2. Select only the columns which you need
&lt;/h2&gt;

&lt;p&gt;You should use select keyword in your query to select only specific columns instead of fetching all.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;select&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//When using eloquent&lt;/span&gt;

&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'posts'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'='&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;select&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//When using query builder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-use-pluck-when-you-need-exactly-one-or-two-columns-from-the-database"&gt;
  &lt;/a&gt;
  3. Use pluck when you need exactly one or two columns from the database
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;pluck&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'slug'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//When using eloquent&lt;/span&gt;

&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'posts'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;pluck&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'slug'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//When using query builder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above code is executed, it does the following behind the scenes.&lt;/p&gt;

&lt;p&gt;Executes select title, slug from posts query on the database&lt;br&gt;
Creates an array with title as array value and slug as array key.&lt;br&gt;
Returns the array(array format: [ slug =&amp;gt; title, slug =&amp;gt; title ])&lt;/p&gt;

&lt;p&gt;Now, to access the results, we would do&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$slug&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$title&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;// $title is the title of a post&lt;/span&gt;
    &lt;span class="c1"&gt;// $slug is the slug of a post&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to retrieve only one column, you can do&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;pluck&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//When using eloquent&lt;/span&gt;
&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'posts'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;pluck&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//When using query builder&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt;  &lt;span class="nv"&gt;$title&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;// $title is the title of a post&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-count-rows-using-a-query-instead-of-a-collection"&gt;
  &lt;/a&gt;
  4. Count rows using a query instead of a collection
&lt;/h2&gt;

&lt;p&gt;Using this approach we can directly count the total no of rows on the database itself.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//When using eloquent&lt;/span&gt;
&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'posts'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//When using query builder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-using-with-in-relationships"&gt;
  &lt;/a&gt;
  5. Using with in relationships
&lt;/h2&gt;

&lt;p&gt;If you are using relationships in your eloquent mode then you should use with method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Do this instead&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similarly, if you are using nested relationship then you can use this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'author.team'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-do-not-call-unnecessary-relationship"&gt;
  &lt;/a&gt;
  6. Do not call unnecessary relationship
&lt;/h2&gt;

&lt;p&gt;Do not call relationship If you are sure the id of the relationship is present in table.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;To get the author id of a post, we would normally do&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;findOrFail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead, you can directly get the author id by doing the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;findOrFail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;author_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// posts table has a column author_id which stores id of the author&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But always sure that a row always exists in authors table if it is referenced in posts table.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-add-index-to-frequently-queried-columns"&gt;
  &lt;/a&gt;
  7. Add index to frequently queried columns
&lt;/h2&gt;

&lt;p&gt;If you are quering a record on where condition to column. Then you can add index to that column. Queries are much faster when querying rows with an index column.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-use-simplepaginate-instead-of-paginate"&gt;
  &lt;/a&gt;
  8. Use simplePaginate instead of Paginate
&lt;/h2&gt;

&lt;p&gt;Paginate Generates pagination links for all the pages. And simplePaginate Generates only next and previous pagination links.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;paginate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Generates pagination links for all the pages&lt;/span&gt;

&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;simplePaginate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Generates only next and previous pagination links&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#9-avoid-using-leading-wildcardslike-keyword"&gt;
  &lt;/a&gt;
  9. Avoid using leading wildcards(LIKE keyword)
&lt;/h2&gt;

&lt;p&gt;If We know the keyword occurs at the beginning of the column value, We can query the results as below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;table_name&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="n"&gt;keyword&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#10-avoid-using-sql-functions-in-where-clause"&gt;
  &lt;/a&gt;
  10. Avoid using SQL functions in where clause
&lt;/h2&gt;

&lt;p&gt;Simply use where on date columns as well like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt;='&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//Use this&lt;/span&gt;

&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;POST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;whereDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt;='&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//Not this&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#11-avoid-adding-too-many-columns-to-a-table"&gt;
  &lt;/a&gt;
  11. Avoid adding too many columns to a table
&lt;/h2&gt;

&lt;p&gt;Adding too many columns to a table will increase the individual record length and will slow down the table scan. When you are doing a select *  query, you will end up retrieving a bunch of columns which you really do not need.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-separate-columns-with-text-data-type-into-their-own-table"&gt;
  &lt;/a&gt;
  12. Separate columns with text data type into their own table
&lt;/h2&gt;

&lt;p&gt;Consider a case where you have a table called posts with a column of content which stores the blog post content.&lt;br&gt;
The content for blog post will be really huge and often times, you need this data only if a person is viewing this&lt;br&gt;
particular blog post.&lt;/p&gt;

&lt;p&gt;So separating this column from the posts table will drastically improve the query performance when there are too many posts.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#13-better-way-to-retrieve-latest-rows-from-a-table"&gt;
  &lt;/a&gt;
  13. Better way to retrieve latest rows from a table
&lt;/h2&gt;

&lt;p&gt;So the better way to retrieve latest rows is as below. Because it is ordering the records based on id field as compared to string field.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#14-inspect-and-optimize-queries"&gt;
  &lt;/a&gt;
  14. Inspect and optimize queries
&lt;/h2&gt;

&lt;p&gt;There is no one universal solution when optimizing queries in laravel. Only you know what your application is doing, how many queries it is making, how many of them are actually in use.&lt;/p&gt;

&lt;p&gt;To do this you can use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;enableQueryLog&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nf"&gt;dd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;getQueryLog&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Laravel Debugbar&lt;/strong&gt; - Laravel debugbar has a tab called database which will display all the queries executed when you visit a page. Visit all the pages in your application and look at the queries executed on each page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Clockwork&lt;/strong&gt; - Clockwork is same as laravel debugbar. But instead of injecting a toolbar into your website, it will display the debug information in developer tools window or as a standalone UI by visiting yourappurl/clockwork.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Laravel Telescope&lt;/strong&gt; - Laravel telescope is a wonderful debug companion while developing laravel applications locally. Once Telescope is installed, you can access the dashboard by visiting yourappurl/telescope. In the telescope dashboard, head over to queries tab, and it will display all the queries being executed by your application.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#15-optimize-mysql-inserts"&gt;
  &lt;/a&gt;
  15. Optimize MySQL inserts
&lt;/h2&gt;

&lt;h5&gt;
  &lt;a href="#use-a-server-backed-by-performant-ssd-storage"&gt;
  &lt;/a&gt;
  Use a server backed by performant SSD storage
&lt;/h5&gt;

&lt;p&gt;Make sure the disk for your server is as fast as possible.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#increase-the-log-file-size-limit"&gt;
  &lt;/a&gt;
  Increase the log file size limit
&lt;/h5&gt;

&lt;p&gt;The default innodb_log_file_size limit is set to just 128M, which isn't great for insert heavy environments. Increasing this to something larger, like 500M will reduce log flushes (which are slow, as you're writing to the disk). This is particularly important if you're inserting large payloads.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#defer-disk-writes-by-flushing-the-log-less-frequently"&gt;
  &lt;/a&gt;
  Defer disk writes by flushing the log less frequently
&lt;/h5&gt;

&lt;p&gt;By setting innodb_flush_log_at_trx_commit to 2, we were able to drop the insert time average from over 200ms to under 50ms.&lt;/p&gt;

&lt;p&gt;You can increase the flush interval by setting innodb_flush_log_at_timeout to your desired interval (in seconds).&lt;/p&gt;




&lt;p&gt;Thanks For Reading :)&lt;br&gt;
Please give your opinion in comments :)&lt;br&gt;
This is my website where you can Find More &lt;a href="https://www.readymadecode.com/"&gt;ReadyMadeCode&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>mysql</category>
      <category>php</category>
    </item>
    <item>
      <title>How to be successful as a self taught developer</title>
      <author>Andrew Baisden</author>
      <pubDate>Thu, 02 Sep 2021 13:58:13 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/how-to-be-successful-as-a-self-taught-developer-4ofk</link>
      <guid>https://dev.to/andrewbaisden/how-to-be-successful-as-a-self-taught-developer-4ofk</guid>
      <description>&lt;p&gt;The game has changed. You don't need a College or University Degree to be a developer anymore. I am not saying that you should drop out however if you are studying then continue to do so! But regardless of your results the road does not end after you have studied and picked up your qualifications. If you did not get good grades don't think that its over you can always teach yourself to code at home or in a bootcamp and still get yourself into the world of tech.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aspiring-to-be-a-developer"&gt;
  &lt;/a&gt;
  Aspiring to be a developer
&lt;/h2&gt;

&lt;p&gt;For those of you who don't come from a tech background this is going to be a brave new world! It is so easy to become completely overwhelmed with all of the content and information that is out there. I might have studied in University but my most recent and &lt;strong&gt;BEST&lt;/strong&gt; skills are self taught. If I can do it then anyone can.&lt;/p&gt;

&lt;p&gt;The road to success is going to be long and bumpy but should you survive the ride (most do) then you will be on your way to a new career path.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-road-to-success"&gt;
  &lt;/a&gt;
  The Road to success
&lt;/h2&gt;

&lt;p&gt;The first thing that you should do is join the top platforms with the biggest developer followings.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#programming"&gt;
  &lt;/a&gt;
  Programming
&lt;/h3&gt;

&lt;p&gt;You will need GitHub account to upload your projects to and you should create an account on freeCodeCamp and join the &lt;a href="https://www.100daysofcode.com/"&gt;100 days of code challenge&lt;/a&gt; so that you can create a timeline for your learning and also to keep yourself accountable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.freecodecamp.org/"&gt;freeCodeCamp&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blogs"&gt;
  &lt;/a&gt;
  Blogs
&lt;/h3&gt;

&lt;p&gt;Blogging is extremely important it is not only a learning tool but it's a way for you to keep track of your progress as you develop. Plus if you are really lucky it could turn into a side hustle or passive income stream.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hashnode.com/"&gt;Hashnode&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/"&gt;DEV&lt;/a&gt;&lt;br&gt;
&lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#social-media"&gt;
  &lt;/a&gt;
  Social Media
&lt;/h3&gt;

&lt;p&gt;This one is non negotiable if you are serious about becoming a developer then you need to be using social media. This is how you are going to connect with other likeminded and aspiring developers like yourself. This will give you so much motivation and ensure that you never give up. There are thousands of developers on Twitter so you will never run out of content to consume or struggle to find developers who will mentor you.&lt;/p&gt;

&lt;p&gt;Obviously you are going to need LinkedIn for finding work and connecting with recruiters and other developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#products"&gt;
  &lt;/a&gt;
  Products
&lt;/h3&gt;

&lt;p&gt;Once you have gained some confidence in your skills now is the time to create some products. Doing this will open up some passive income streams and as an added bonus your reputation will increases leading to more job opportunities and collaborations with other developers that you could never have imagined.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.producthunt.com/"&gt;ProductHunt&lt;/a&gt;&lt;br&gt;
&lt;a href="https://gumroad.com/"&gt;GumRoad&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I really hope that you enjoyed reading this article and learned something from it. As a content creator and technical writer I am passionate about sharing my knowledge and helping other people reach their goals. Let's connect across social media you can find all of my social media profiles and blogs on &lt;a href="https://linktr.ee/andrewbaisden"&gt;linktree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Peace ✌️&lt;/p&gt;

</description>
      <category>career</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The ephemeral miniconf - Tentative planning</title>
      <author>Tib</author>
      <pubDate>Thu, 02 Sep 2021 13:58:12 +0000</pubDate>
      <link>https://dev.to/thibaultduponchelle/the-ephemeral-miniconf-tentative-planning-aom</link>
      <guid>https://dev.to/thibaultduponchelle/the-ephemeral-miniconf-tentative-planning-aom</guid>
      <description>&lt;h1&gt;
  &lt;a href="#planning"&gt;
  &lt;/a&gt;
  Planning
&lt;/h1&gt;

&lt;p&gt;This is the (tentative) planning of &lt;a href="https://thibaultduponchelle.github.io/the-ephemeral-miniconf/"&gt;the ephemeral miniconf&lt;/a&gt;, it can change a bit since we are still more than 2 months before the event 😀&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h6iYj78S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1u69gieuwidd609fzsz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h6iYj78S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1u69gieuwidd609fzsz.png" alt="The ephemeral miniconf planning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(The timezone is Paris)&lt;/p&gt;

&lt;p&gt;I hope you like it, I personally love it! ❤️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z5OfVc9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eq8z0nov3tc29lidwwen.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z5OfVc9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eq8z0nov3tc29lidwwen.gif" alt="Patrick in love"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lightning-talks"&gt;
  &lt;/a&gt;
  Lightning talks
&lt;/h2&gt;

&lt;p&gt;There is still a place for you, I'm looking for lightning talks speakers:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dg2GGPKR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/orc36gfscxu6b0ek2t2d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dg2GGPKR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/orc36gfscxu6b0ek2t2d.png" alt="Lightning talks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Come one! Become a speaker!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#attendees"&gt;
  &lt;/a&gt;
  Attendees
&lt;/h2&gt;

&lt;p&gt;More infos on the miniconf organization will come soon 😃 👍&lt;/p&gt;

</description>
      <category>perl</category>
      <category>raku</category>
    </item>
    <item>
      <title>Understanding Next.js Data Fetching (CSR, SSR, SSG, ISR)</title>
      <author>Theodorus Clarence</author>
      <pubDate>Thu, 02 Sep 2021 13:53:51 +0000</pubDate>
      <link>https://dev.to/theodorusclarence/understanding-next-js-data-fetching-csr-ssr-ssg-isr-1nff</link>
      <guid>https://dev.to/theodorusclarence/understanding-next-js-data-fetching-csr-ssr-ssg-isr-1nff</guid>
      <description>&lt;p&gt;When I started to learn Next.js, I got overwhelmed with the list of abbreviations that looks similar, I didn't know what it is and what is the difference. It is quite confusing because when using Create React App, we usually only use 1 strategy to fetch data from API which is using &lt;code&gt;useEffect&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next.js has many data fetching strategies. Although initially Next.js was well known to be a Server-Side Rendering Framework, it turns out that Next.js has 4 methods of Data Fetching. Here is the short explanation each so you get familiar with the abbreviation of CSR, SSR, SSG, ISR.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSR - Client-Side Rendering, this is the usual kind of data fetching using &lt;code&gt;useEffect&lt;/code&gt;, it will fetch the data from the API every single page request on the &lt;strong&gt;client-side&lt;/strong&gt; (after the page is rendered, then the function will run).&lt;/li&gt;
&lt;li&gt;SSR - Server-Side Rendering, will run a &lt;strong&gt;special function&lt;/strong&gt; to fetch data from API every page request on the &lt;strong&gt;server-side&lt;/strong&gt; (before the page is loaded, that special function will run first, creating a delay, then after that, it will serve the page).&lt;/li&gt;
&lt;li&gt;SSG - Static Site Generation, will run a &lt;strong&gt;special function&lt;/strong&gt; to fetch data &lt;strong&gt;once&lt;/strong&gt; when that page builds.&lt;/li&gt;
&lt;li&gt;ISR – Incremental Static Regeneration, this is a new thing, shortly put, a combination of SSG, and SSR, where it served statically, but at a &lt;strong&gt;certain time and certain condition&lt;/strong&gt; that page will rebuild and fetch the data from the API again.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don't worry if you didn't get that, because I will be explaining it thoroughly, just familiarize the words first.&lt;/p&gt;




&lt;p&gt;I mentioned before that there is a special function that will run when using a specific data fetching method. Keep that in mind as I will show you what is that special function.&lt;/p&gt;

&lt;p&gt;This code example will fetch a date-time from an API using axios, then render it on the page. It is useful to see the date-time so we can truly know when the API is hit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clientside-rendering-csr"&gt;
  &lt;/a&gt;
  Client-Side Rendering (CSR)
&lt;/h2&gt;

&lt;p&gt;Special Function: &lt;code&gt;useEffect&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://next-render.theodorusclarence.com/render/csr"&gt;Demo Site&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-example"&gt;
  &lt;/a&gt;
  Code Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;CSRPage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dateTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setDateTime&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;axios&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://worldtimeapi.org/api/ip&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setDateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TimeSection&lt;/span&gt; &lt;span class="na"&gt;dateTime&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;dateTime&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SPdCRv3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6xnmxlvw6jro0alwfgq5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SPdCRv3S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6xnmxlvw6jro0alwfgq5.gif" alt="CSR"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Terms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PT → Preview Time, the time shown when the API is hit. Can be seen in the middle.&lt;/li&gt;
&lt;li&gt;RT → Real-Time, the real ticking time updating every second, can be seen on the right bottom corner&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Video Description:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Page reloads on 15:46:03 Real-Time (RT), then a LOADING indicator is shown&lt;/li&gt;
&lt;li&gt;After about 1s, Preview Time is showing 15:46:04(PT)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#keys-to-emphasize"&gt;
  &lt;/a&gt;
  Keys to Emphasize
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;useEffect function&lt;/strong&gt;, this function is the key indicator that a page is using Client-Side Rendering.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;LOADING indicator&lt;/strong&gt;, because the data fetching runs after the page is rendered, the data is not fetched instantly, therefore showing a loading state.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data is fetched on every page request&lt;/strong&gt;, which is why the time shown is different for each reloads.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IpfIp4zb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlfrny1vq3hx9gcv3djz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IpfIp4zb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlfrny1vq3hx9gcv3djz.png" alt="0-csr-illustration"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#server-side-rendering-ssr"&gt;
  &lt;/a&gt;
  Server Side Rendering (SSR)
&lt;/h2&gt;

&lt;p&gt;Special Function: &lt;code&gt;getServerSideProps&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://next-render.theodorusclarence.com/render/ssr"&gt;Demo Site&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-example"&gt;
  &lt;/a&gt;
  Code Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SSRPage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;dateTime&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;SSRPageProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TimeSection&lt;/span&gt; &lt;span class="na"&gt;dateTime&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;dateTime&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getServerSideProps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;GetServerSideProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://worldtimeapi.org/api/ip&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;dateTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;datetime&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ORFCbgXg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36kbv9j6d5y7b2y1eqr2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ORFCbgXg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36kbv9j6d5y7b2y1eqr2.gif" alt="SSR"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Video Description:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clicked the link on 16:32:38(RT), a slight pause for 2s, then page loads showing 16:02:40(PT)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#keys-to-emphasize"&gt;
  &lt;/a&gt;
  Keys to Emphasize
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;getServerSideProps function&lt;/strong&gt;, this function is the key indicator that a page is using Server-Side Rendering.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;DELAY before render, and no LOADING indicator&lt;/strong&gt;, the data is fetched before the page is rendered, so there will be a slight &lt;strong&gt;delay&lt;/strong&gt; where the &lt;strong&gt;API is being hit&lt;/strong&gt; at the moment, then it will show the page without loading indicator&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data is fetched on every page request&lt;/strong&gt;, which is why the time shown is different for each reloads.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lX7MJ__F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9m35yuat5eyz5h20noh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lX7MJ__F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9m35yuat5eyz5h20noh.png" alt="1-ssr-illustration"&gt;&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#csr-vs-ssr"&gt;
  &lt;/a&gt;
  CSR vs SSR
&lt;/h2&gt;

&lt;p&gt;Here is the difference between CSR vs SSR, keep an eye on &lt;strong&gt;delay&lt;/strong&gt; and &lt;strong&gt;loading&lt;/strong&gt; indicators.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BbERG7cY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/be9xqwr7lzv0x60878gv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BbERG7cY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/be9xqwr7lzv0x60878gv.gif" alt="CSRvsSSR"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video Description:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When clicking CSR, with no delay a LOADING text is visible for a second, then the Preview Time loads.&lt;/li&gt;
&lt;li&gt;When clicking SSR, a slight delay happened, then the page loads.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#keys-to-emphasize"&gt;
  &lt;/a&gt;
  Keys to Emphasize
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;CSR hit the API after the page loads.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSR hit the API before the page loads.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g77jlYep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkye8ahmbvuocgzge8x3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g77jlYep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkye8ahmbvuocgzge8x3.png" alt="2-csr-vs-ssr"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#short-addition"&gt;
  &lt;/a&gt;
  Short addition
&lt;/h3&gt;

&lt;p&gt;I will probably create a new post about the pros and cons of each method, but when using &lt;strong&gt;CSR&lt;/strong&gt; the SEO is not really great because the data is only fetched after the page renders. This is useful and convenient when we are creating a page with a gated authentication, as you don't really need SEO for pages like the dashboard, edit profile page, etc.&lt;/p&gt;

&lt;p&gt;But, for the SSR, although it creates a delay, data that was fetched is injected and helps SEO. This is quite useful for a thread or post that we need to get traffic into, like Reddit or some sort.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#static-site-generation-ssg"&gt;
  &lt;/a&gt;
  Static Site Generation (SSG)
&lt;/h2&gt;

&lt;p&gt;Special function: &lt;code&gt;getStaticProps&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://next-render.theodorusclarence.com/render/ssg"&gt;Demo Site&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-example"&gt;
  &lt;/a&gt;
  Code Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SSGPage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;dateTime&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;SSGPageProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TimeSection&lt;/span&gt; &lt;span class="na"&gt;dateTime&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;dateTime&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getStaticProps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;GetStaticProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://worldtimeapi.org/api/ip&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;dateTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;datetime&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AKYZ7LRt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkdkdffky1lxb5yguuem.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AKYZ7LRt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkdkdffky1lxb5yguuem.gif" alt="SSG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video Description:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Preview Time is showing 13:39:36(PT). But the real-time is 16:16:59(RT), about 3 hours late.&lt;/li&gt;
&lt;li&gt;Reloading and going back and forth to the home page did not change anything. &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#keys-to-emphasize"&gt;
  &lt;/a&gt;
  Keys to Emphasize
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;getStaticProps function&lt;/strong&gt;, this function is the key indicator that a page is using Static Site Generation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fetched when running&lt;/strong&gt; &lt;code&gt;yarn build&lt;/code&gt;, the API will be hit &lt;strong&gt;ONLY&lt;/strong&gt; when the application is building. This is why the time is at 13:39, while the real-time is 16:17.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data will not change because no further fetch&lt;/strong&gt;, which is why the time shown is the same for each reloads.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f-jcLLE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62x0vmtmey8khh6nhja3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f-jcLLE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62x0vmtmey8khh6nhja3.png" alt="3-ssg-illustration"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#incremental-static-regeneration"&gt;
  &lt;/a&gt;
  Incremental Static Regeneration
&lt;/h2&gt;

&lt;p&gt;Special function: &lt;code&gt;getStaticProps&lt;/code&gt; + &lt;code&gt;revalidate&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://next-render.theodorusclarence.com/render/isr-20"&gt;Demo Site&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-example"&gt;
  &lt;/a&gt;
  Code Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ISR20Page&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;dateTime&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;ISR20PageProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TimeSection&lt;/span&gt; &lt;span class="na"&gt;dateTime&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;dateTime&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getStaticProps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;GetStaticProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://worldtimeapi.org/api/ip&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;dateTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;datetime&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OmjnEcHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/koq4o1ohev85i4xas2ue.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OmjnEcHn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/koq4o1ohev85i4xas2ue.gif" alt="ISR"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Disclaimer: Revalidate time is set to 20 seconds.&lt;/p&gt;

&lt;p&gt;Video Description:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;At first, it was 16:40:12(PT), and real-time when reloading is 16:40:25(RT) and 16:40:29(RT). In those 2 reload, Preview Time (PT) did not change.&lt;/li&gt;
&lt;li&gt;Then, when 16:40:32(RT) (20s after initial), reload is done twice, the first time on 16:40:36(RT) and 16:40:40(RT). The Preview Time change to 16:40:37(PT) after the &lt;strong&gt;second reload.&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#keys-to-emphasize"&gt;
  &lt;/a&gt;
  Keys to Emphasize
&lt;/h3&gt;

&lt;p&gt;Now, this is might be confusing for you, but here is the key I want you to look at.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;When in a 20-second cooldown span–16:40:12(RT) - 16:40:32(RT),&lt;/strong&gt; reloading doesn't trigger changes. This is because the page is in a &lt;strong&gt;cooldown&lt;/strong&gt; state, as we set on the &lt;code&gt;revalidate&lt;/code&gt; key.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;After the 20-second cooldown–16:40:32(RT),&lt;/strong&gt; we did 2 reloads.

&lt;ol&gt;
&lt;li&gt;First Reload at 16:40:36(RT), we know that it is not on the cooldown state anymore. The first visit after the cooldown state is &lt;strong&gt;off,&lt;/strong&gt; is going to trigger &lt;strong&gt;page rebuild&lt;/strong&gt;. Page rebuild meaning, only this certain page is going to be rebuild. Not the whole application. The fetch API will run in the background, but there will be &lt;strong&gt;no changes&lt;/strong&gt; on the Preview Time&lt;/li&gt;
&lt;li&gt;Second Full Reload at 16:40:40(RT), the Preview Time change to 16:40:37(PT). Exactly a second after the page rebuild (which means the rebuild takes about 1s). This second reload is going to serve that rebuilt page from the previous reload.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1LvH_k7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hk9z4stuebigj8hhqpsv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1LvH_k7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hk9z4stuebigj8hhqpsv.png" alt="4-cooldown-on-isr"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mCLeamcg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1dxm9x93cve5844h1do.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mCLeamcg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1dxm9x93cve5844h1do.png" alt="5-cooldown-off-isr"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#revisiting-page-vs-full-reload"&gt;
  &lt;/a&gt;
  Revisiting Page vs Full Reload
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zR_8PEQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5tw6uu94jt9b449jaqnf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zR_8PEQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5tw6uu94jt9b449jaqnf.gif" alt="isr-revisit-reload"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Terms:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Revisiting pages → navigating using next/link (going back to home, then to that page again)&lt;/li&gt;
&lt;li&gt;Full reload → doing reload at a website (command+r)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Video Description:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Revisiting pages at the first time 18:38:45(RT), will &lt;strong&gt;trigger rebuild,&lt;/strong&gt; but after the &lt;strong&gt;second&lt;/strong&gt; revisit, the Preview Time &lt;strong&gt;did not change&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;After a &lt;strong&gt;full reload,&lt;/strong&gt; then Preview Time is changed to 18:38:45(PT)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;The first reload does not have to be a full reload&lt;/strong&gt;, we can go back to the home page, then to that page again (revisit), it will trigger the rebuild as long as we are not in the cooldown state.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;But, the second reload must be a full reload.&lt;/strong&gt; Going back to the home page, then to the page again won't change the new Preview Time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, this is a case where we are assuming that only 1 person is accessing the website. But, that reloads will happen &lt;strong&gt;every person&lt;/strong&gt; visit while still respecting the cooldown state.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-it-going-to-be-rebuilt-every-20s-then"&gt;
  &lt;/a&gt;
  Is it going to be rebuilt every 20s then?
&lt;/h3&gt;

&lt;p&gt;No.&lt;/p&gt;

&lt;p&gt;When the cooldown is off, if no one visits the page, then that page &lt;strong&gt;will not rebuild&lt;/strong&gt;, even after long past the 20s.&lt;/p&gt;

&lt;p&gt;But, the &lt;strong&gt;first&lt;/strong&gt; person that visits when the &lt;strong&gt;cooldown state is off&lt;/strong&gt;, is going to &lt;strong&gt;trigger a rebuild.&lt;/strong&gt; That person won't be seeing changes. But, the changes will be served for &lt;strong&gt;the next full reload&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WV1Y1UjB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8une4um2qtp7pr9r85xu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WV1Y1UjB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8une4um2qtp7pr9r85xu.png" alt="6-cooldown-illustration"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's all, I'll eventually make blog about each method pros and cons, and also some use cases. So stay tuned!&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Originally posted on &lt;a href="https://theodorusclarence.com/?ref=devto"&gt;my personal site&lt;/a&gt;, find more &lt;a href="https://theodorusclarence.com/blog?ref=devto"&gt;blog posts&lt;/a&gt; and &lt;a href="https://theodorusclarence.com/library?ref=devto"&gt;code snippets library&lt;/a&gt; I put up for easy access on my site 🚀&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
      <category>tutorial</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Installing my "new" Mac</title>
      <author>Alvaro Montoro</author>
      <pubDate>Thu, 02 Sep 2021 13:24:50 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/installing-my-new-mac-3918</link>
      <guid>https://dev.to/alvaromontoro/installing-my-new-mac-3918</guid>
      <description>&lt;p&gt;Last week, I had to take the laptop to the tech support and, when I got it back, the hard drive had been swept clean. No files, no apps, no anything. I knew that was a possibility and had done a backup of the most important files (but not all of them 😭).&lt;/p&gt;

&lt;p&gt;Now, I had to get everything ready again. These are the steps I followed and the applications I installed. I will install more apps later, but these are the ones I &lt;em&gt;needed&lt;/em&gt; to hit the road and start doing what I wanted. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you have any recommendations for apps/plugins/extensions I should check out and install, drop them in the comments&lt;/strong&gt;.&lt;/p&gt;




&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Updated the OS and apps&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;This may take a while, but I prefer to do it first, just in case there's a compatibility issue with an app later.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cleared the taskbar&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Too many default apps in the taskbar, plus I needed to make space for my apps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Installed browsers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I do web development, so I like testing with multiple browsers and tools.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Brave&lt;/li&gt;
&lt;li&gt;Chrome&lt;/li&gt;
&lt;li&gt;Firefox&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;...and browser extensions&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;WebAIM Wave&lt;/li&gt;
&lt;li&gt;Accessibility Insights for Web&lt;/li&gt;
&lt;li&gt;aXe: for accessibility testing&lt;/li&gt;
&lt;li&gt;Chromevox / ScreenReader&lt;/li&gt;
&lt;li&gt;Grammarly&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Installed development apps &amp;amp; tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I installed different IDEs, although I plan on mostly using just one (Visual Studio Code). But, unfortunately, installing Android Studio/Xcode is the easiest way to get essential SDKs and tools for development. And I want to go back to developing for mobile... we'll see how that goes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Visual Studio Code + extensions&lt;/li&gt;
&lt;li&gt;Xcode + iOS 14 simulator&lt;/li&gt;
&lt;li&gt;Xcode Command Line Tools&lt;/li&gt;
&lt;li&gt;Android Studio&lt;/li&gt;
&lt;li&gt;NodeJS&lt;/li&gt;
&lt;li&gt;Git Desktop&lt;/li&gt;
&lt;li&gt;Cordova&lt;/li&gt;
&lt;li&gt;XAMPP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Installing utils&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This must be the first time I don't install Microsoft Office (I personally like that suite). So instead, I'll use Apple's default tools. Plus, adding some basic apps for photo and audio editions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GIMP&lt;/li&gt;
&lt;li&gt;Grammarly&lt;/li&gt;
&lt;li&gt;Audacity&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Communication tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I'm not a big fan of Zoom (and have strong opinions about why it should not exist)... but people use it for meetings. Slack is a common open-source project communication tool, and WhatsApp is convenient to talk to my family and friends.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Slack&lt;/li&gt;
&lt;li&gt;WhatsApp Desktop&lt;/li&gt;
&lt;li&gt;Zoom&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Updated the OS and apps (again)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After installing some of the tools, macOS realized that some of the apps were not updated and that the OS needed an update itself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Restored backed up files&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Old projects into the new computer, plus personal files. Here I realized that some of the files hadn't backed up correctly and were lost forever. When you do a backup, double-check the files 😢&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cleaned the desktop and emptied the Trash&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After installing everything, there were a bunch of files in the Downloads and Desktop folders. So I deleted them and emptied the trash. The computer was then clean and ready.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>watercooler</category>
    </item>
    <item>
      <title>Node.js - Deploying  to production</title>
      <author>popoola Temitope</author>
      <pubDate>Thu, 02 Sep 2021 13:20:28 +0000</pubDate>
      <link>https://dev.to/popoolatopzy/node-js-deploying-to-production-3p5p</link>
      <guid>https://dev.to/popoolatopzy/node-js-deploying-to-production-3p5p</guid>
      <description>&lt;p&gt;upgrading your node.js projects from a development (localhost) environment to a productive (live server) in cpanel is simple follow the steps below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pro-and-con"&gt;
  &lt;/a&gt;
  Pro and con
&lt;/h1&gt;

&lt;p&gt;You are familiar with node.js environment.&lt;br&gt;
You have installed node.js on your local computer.&lt;br&gt;
You have one or more node.js project(s).&lt;br&gt;
You have a registered hosting and domain name.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#activate-application-manager"&gt;
  &lt;/a&gt;
  activate application manager.
&lt;/h1&gt;

&lt;p&gt;application manager can be turn on from WHM’s Feature.&lt;/p&gt;

&lt;p&gt;Open Feature Manager, which is under Packages in the WHM sidebar menu. &lt;/p&gt;

&lt;p&gt;Click on Edit button under Manage Feature List with the Default list selected in the dropdown menu. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_eZI5qOZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/00-whm-feature-manager.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_eZI5qOZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/00-whm-feature-manager.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step2 search for application manager in the search field and check it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sjk2tIXn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/Screen-Shot-2020-10-21-at-10.38.01-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sjk2tIXn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/Screen-Shot-2020-10-21-at-10.38.01-AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you’ll need to install the software that allows cPanel to run and manage Node.js applications, which are mod_passenger app server and EasyApache4’s Node environment. You need to log in as root with SSH to install the software.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yum install ea-ruby24-mod_passenger
yum install ea-apache24-mod_env 
yum install ea-nodejs10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Application Manager is now enable and ready to host Node.js applications. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#now-let-create-our-nodejs-application"&gt;
  &lt;/a&gt;
  Now let create our node.js application
&lt;/h1&gt;

&lt;p&gt;Log in to cPanel with SSH as a  user and create a new directory in the home directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir nodejs_app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;nodejs_app folder will contain all your node.js files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next create app.js file in the nodejs_app folder&lt;br&gt;&lt;br&gt;
&lt;code&gt;Note if you have a project you want to host live you can upload it in the folder that you just created now.&lt;br&gt;
But I'll be using new project for example.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now copy the code below inside your app.js file and save it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hostname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;127.0.0.1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text/plain&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World! I am your NodeJS app! &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server running at http://&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
`&lt;/p&gt;

&lt;p&gt;The code sets up an HTTP server on port 3000. It responds to web requests with the message: “Hello World! I am your NodeJS app!”  &lt;/p&gt;

&lt;p&gt;Let Run our node.js code, by EasyApache’s Node.js that will installed before, run The following command yo executes our nodejs_app.&lt;/p&gt;

&lt;p&gt;`&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/opt/cpanel/ea-nodejs10/bin/node app.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
`&lt;/p&gt;

&lt;p&gt;you should see a message that says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Server running at &lt;a href="http://127.0.0.1:3000"&gt;http://127.0.0.1:3000&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;open a new terminal window and log in to your server as the same cPanel user.&lt;br&gt;
use the curl HTTP client to send the app a request. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;br&gt;
curl http://127.0.0.1:3000&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;br&gt;
You should get “’Hello World! I am a NodeJS app on cPanel&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#registering-your-nodejs-application"&gt;
  &lt;/a&gt;
  Registering Your Node.JS Application
&lt;/h1&gt;

&lt;p&gt;Registering tells the Passenger app manager and cPanel where to find your application and which domain you would like to use. &lt;/p&gt;

&lt;p&gt;In cPanel, open the Application Manager, which you’ll find under Software on the main page. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lXEC27Ie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/02-cpanel-application-manager.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lXEC27Ie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/02-cpanel-application-manager.png"&gt;&lt;/a&gt;&lt;br&gt;
 Click on Register Application button&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QRUHiOIc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/03-cpanel-register-nodejs-application.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QRUHiOIc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/03-cpanel-register-nodejs-application.png"&gt;&lt;/a&gt;&lt;br&gt;
Fill in the application configuration&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N_WVsSji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/Screen-Shot-2020-10-21-at-10.40.05-AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N_WVsSji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.cpanel.com/wp-content/uploads/2020/10/Screen-Shot-2020-10-21-at-10.40.05-AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Monitor your Python application with OpenTelemetry and SigNoz 📊🐍</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Thu, 02 Sep 2021 13:17:47 +0000</pubDate>
      <link>https://dev.to/signoz/monitor-your-python-application-with-opentelemetry-and-signoz-2gci</link>
      <guid>https://dev.to/signoz/monitor-your-python-application-with-opentelemetry-and-signoz-2gci</guid>
      <description>&lt;p&gt;OpenTelemetry is a vendor-agnostic instrumentation library under CNCF. It can be used to instrument your Python applications to generate telemetry data. Let's learn how it works and see how to visualize that data with SigNoz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The cost of a millisecond.&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
TABB Group, a financial services industry research firm, &lt;a href="https://research.tabbgroup.com/report/v06-007-value-millisecond-finding-optimal-speed-trading-infrastructure" rel="noopener noreferrer nofollow"&gt;estimates&lt;/a&gt; that if a broker's electronic trading platform is 5 milliseconds behind the competition, it could cost $4 million in revenue per millisecond.&lt;/p&gt;

&lt;p&gt;The cost of latency is too high in the financial services industry, and the same is true for almost any software-based business today. Half a second is enough to kill user satisfaction to a point where they abandon an app's service.&lt;/p&gt;

&lt;p&gt;Capturing and analyzing data about your production environment is critical. You need to proactively solve stability and performance issues in your web application to avoid system failures and ensure a smooth user experience.&lt;/p&gt;

&lt;p&gt;In a microservices architecture, the challenge is to solve availability and performance issues quickly. You need observability for your applications. And, observability is powered with telemetry data.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-opentelemetry"&gt;
  &lt;/a&gt;
  What is OpenTelemetry?
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry emerged as a single project after the merging of OpenCensus(from Google) and OpenTracing(from Uber) into a single project. The project aims to make telemetry data(logs, metrics, and traces) a built-in feature of cloud-native software applications.&lt;/p&gt;

&lt;p&gt;OpenTelemetry has laguage-specific implementation for generating telemetry data which includes OpenTelemetry Python libraries.&lt;/p&gt;

&lt;p&gt;You can check out the current releases of &lt;a href="https://github.com/open-telemetry/opentelemetry-python/releases" rel="noopener noreferrer nofollow"&gt;opentelemetry-python&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;OpenTelemetry only generates telemetry data and lets you decide where to send your data for analysis and visualization. In this article, we will be using &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; - an open-source full-stack application performance monitoring tool as our analysis backend.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps to get started with OpenTelemetry for a Python application:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installing SigNoz&lt;/li&gt;
&lt;li&gt;Installing sample Python app&lt;/li&gt;
&lt;li&gt;Instrumentation with OpenTelemetry and sending data to SigNoz&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#installing-signoz"&gt;
  &lt;/a&gt;
  Installing SigNoz
&lt;/h2&gt;

&lt;p&gt;You can get started with SigNoz using just three commands at your terminal if you have Docker installed. You can read about other deployment options from &lt;a href="https://signoz.io/docs/deployment/docker"&gt;SigNoz documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/SigNoz/signoz.git
cd signoz/deploy/
./install.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will have an option to choose between ClickHouse or Kafka + Druid as a storage option. Trying out SigNoz with ClickHouse database takes less than 1.5GB of memory, and for this tutorial, we will use that option.&lt;/p&gt;

&lt;p&gt;When you are done installing SigNoz, you can access the UI at: &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The application list shown in the dashboard is from a sample app called HOT R.O.D that comes bundled with the SigNoz installation package.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1v9GxruK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl95iwg3pyafx2jh3989.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1v9GxruK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl95iwg3pyafx2jh3989.png" alt="SigNoz dashboard"&gt;&lt;/a&gt;SigNoz dashboard&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-sample-python-app"&gt;
  &lt;/a&gt;
  Installing sample Python app
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Python 3.4 or newer&lt;br&gt;
If you do not have Python installed on your system, you can download it from the &lt;a href="https://www.python.org/downloads/" rel="noopener noreferrer nofollow"&gt;link&lt;/a&gt;. Check the version of Python using &lt;code&gt;python3 --version&lt;/code&gt; on your terminal to see if Python is properly installed or not.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MongoDB&lt;br&gt;
If you already have MongoDB services running on your system, you can skip this step.&lt;br&gt;
For macOS:&lt;br&gt;
Download link: &lt;a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/"&gt;https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Linux: &lt;a href="https://docs.mongodb.com/manual/administration/install-on-linux/"&gt;https://docs.mongodb.com/manual/administration/install-on-linux/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For Windows: &lt;a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/"&gt;https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On MacOS the installation is done using Homebrew's brew package manager. Once the installation is done, don't forget to start MongoDB services using &lt;code&gt;brew services start mongodb/brew/mongodb-community@4.4&lt;/code&gt;  on your macOS terminal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fY8AgjxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vahht5b6los4a0wo24ry.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fY8AgjxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vahht5b6los4a0wo24ry.png" alt="starting mongoDB services from mac terminal"&gt;&lt;/a&gt;start mongodb services&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps-to-get-the-python-app-up-and-running"&gt;
  &lt;/a&gt;
  Steps to get the Python app up and running
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Clone sample Flask app repository and go to the root folder
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   git clone https://github.com/SigNoz/sample-flask-app.git
   cd sample-flask-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Check if the app is running
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   python3 app.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k7gm1ry1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76nk53gvql5nrsec28i7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k7gm1ry1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76nk53gvql5nrsec28i7.png" alt="mac terminal commands for running a python app"&gt;&lt;/a&gt;Running Python app from terminal&lt;/p&gt;

&lt;p&gt;You can now access the UI of the app on your local host: &lt;a href="http://localhost:5000/"&gt;http://localhost:5000/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iidNEtKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5in6fxk1ddyh76ec1wg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iidNEtKG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5in6fxk1ddyh76ec1wg.png" alt="Python app UI"&gt;&lt;/a&gt;Python App UI accessed on port 5000&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#instrumentation-with-opentelemetry-and-sending-data-to-signoz"&gt;
  &lt;/a&gt;
  Instrumentation with OpenTelemetry and sending data to SigNoz
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Opentelemetry Python instrumentation installation
Your app folder contains a file called requirements.txt. This file contains all the necessary commands to set up OpenTelemetry Python instrumentation. All the mandatory packages required to start the instrumentation are installed with the help of this file. Make sure your path is updated to the root directory of your sample app and run the following command:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   pip3 install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If it hangs while installing &lt;code&gt;grpcio&lt;/code&gt; during &lt;strong&gt;pip3 install opentelemetry-exporter-otlp&lt;/strong&gt; then follow below steps as suggested in &lt;a href="https://stackoverflow.com/questions/56357794/unable-to-install-grpcio-using-pip-install-grpcio/62500932#62500932" rel="noopener noreferrer nofollow"&gt;this stackoverflow link&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pip3 install --upgrade pip&lt;/li&gt;
&lt;li&gt;python3 -m pip install --upgrade setuptools&lt;/li&gt;
&lt;li&gt;pip3 install --no-cache-dir --force-reinstall -Iv grpcio&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Install application specific packages
This step is required to install packages specific to the application. Make sure to run this command in the root directory of your installed application. This command figures out which instrumentation packages the user might want to install and installs it for them:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   opentelemetry-bootstrap --action=install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Configure a span exporter and run your application
You're almost done. In the last step, you just need to configure a few environment variables for your OTLP exporters. Environment variables that need to be configured:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;SERVICE_NAME &lt;strong&gt;-&lt;/strong&gt; application service name (you can name it as you like)&lt;/li&gt;
&lt;li&gt;ENDPOINT_ADDRESS &lt;strong&gt;-&lt;/strong&gt; OTLP gRPC collector endpoint address (IP of SigNoz)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After taking care of these environment variables, you only need to run your instrumented application.&lt;br&gt;
   Accomplish all these by using the following command at your terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   OTEL_RESOURCE_ATTRIBUTES=service.name=pythonApp OTEL_METRICS_EXPORTER=none OTEL_EXPORTER_OTLP_ENDPOINT="http://&amp;lt;IP of SigNoz&amp;gt;:4317" opentelemetry-instrument python3 app.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Ip of SigNoz&lt;/code&gt; can be replaced with localhost in this case. Hence, the final command becomes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   OTEL_RESOURCE_ATTRIBUTES=service.name=pythonApp OTEL_METRICS_EXPORTER=none OTEL_EXPORTER_OTLP_ENDPOINT="http://localhost:4317" opentelemetry-instrument python3 app.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And, congratulations! You have instrumented your sample Python app. You can now access the SigNoz dashboard at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to monitor your app for performance metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J2lMA0zG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubt9o5oo6ftze69x5v6i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J2lMA0zG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubt9o5oo6ftze69x5v6i.png" alt="SigNoz dashboard showing python app in its list of applicayions."&gt;&lt;/a&gt;Python app appearing in the list of applications&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#metrics-and-traces-of-the-python-application"&gt;
  &lt;/a&gt;
  Metrics and Traces of the Python application
&lt;/h2&gt;

&lt;p&gt;SigNoz makes it easy to visualize metrics and traces captured through OpenTelemetry instrumentation.&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box RED metrics charts and visualization. RED metrics stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rate of requests&lt;/li&gt;
&lt;li&gt;Error rate of requests&lt;/li&gt;
&lt;li&gt;Duration taken by requests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8fEE-jnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azk0yga369uv5nl8aw1c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8fEE-jnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azk0yga369uv5nl8aw1c.png" alt="SigNoz dashboard showing the popular RED metrics for application performance monitoring."&gt;&lt;/a&gt;Measure things like application latency, requests per sec, error percentage and see your top endpoints&lt;/p&gt;

&lt;p&gt;You can then choose a particular timestamp where latency is high to drill down to traces around that timestamp.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GniTLMj1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zu0vo47zl3qmelgyflcz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GniTLMj1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zu0vo47zl3qmelgyflcz.png" alt="See traces, and apply powerful filters on trace data"&gt;&lt;/a&gt;View of traces at a particular timestamp&lt;/p&gt;

&lt;p&gt;You can use flamegraphs to exactly identify the issue causing the latency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SFSQRtz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/od67mmtnz24o5fr9b3a5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SFSQRtz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/od67mmtnz24o5fr9b3a5.png" alt="Flamegraphs for distributed tracing"&gt;&lt;/a&gt;Flamegraphs showing exact duration taken by each spans - a concept of distributed tracing&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry makes it very convenient to instrument your Python application. You can then use an open-source APM tool like SigNoz to analyze the performance of your app. As SigNoz offers a full-stack observability tool, you don't have to use multiple tools for your monitoring needs.&lt;/p&gt;

&lt;p&gt;You can try out SigNoz by visiting its GitHub repo 👇&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you face any issues while trying out SigNoz, feel free to write to us at: &lt;a href="mailto:support@signoz.io"&gt;support@signoz.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to read more about SigNoz 👇&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/blog/monitoring-your-go-application-with-signoz/"&gt;Golang Application Performance Monitoring with SigNoz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/blog/nodejs-opensource-application-monitoring/"&gt;Nodejs Application Performance Monitoring with SigNoz&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>monitoring</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
  </channel>
</rss>
