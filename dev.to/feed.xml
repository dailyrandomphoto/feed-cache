<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>You are coding the wrong way in Python if you aren't using these two libraries</title>
      <author>Rohith Gilla</author>
      <pubDate>Sun, 27 Jun 2021 14:48:49 +0000</pubDate>
      <link>https://dev.to/gillarohith/you-are-coding-the-wrong-way-in-python-if-you-aren-t-using-these-two-libraries-42bi</link>
      <guid>https://dev.to/gillarohith/you-are-coding-the-wrong-way-in-python-if-you-aren-t-using-these-two-libraries-42bi</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/4OBq5v6J4pgJuZ2Cnj/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/4OBq5v6J4pgJuZ2Cnj/giphy.gif" alt="https://media.giphy.com/media/4OBq5v6J4pgJuZ2Cnj/giphy.gif"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Hello amazing developers&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Table of Contents&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Motivation&lt;/li&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Typing

&lt;ul&gt;
&lt;li&gt;Variables&lt;/li&gt;
&lt;li&gt;Lists&lt;/li&gt;
&lt;li&gt;Dictionary&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;li&gt;Resources&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;What makes people love (sometimes hate 😛) TypeScript more than JavaScript?&lt;/p&gt;

&lt;p&gt;It's the typing, the type safety. They know that there will be a safety net beneath them that catches many bugs and shouts at us if we do mistakes. &lt;/p&gt;

&lt;p&gt;It's not just that it's the auto-suggestion that matters too, it would feel amazing right when you get the best auto completes and the methods for the variable.&lt;/p&gt;

&lt;p&gt;Now what if I say we can you could kinda get it in python. It feels great right.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/aWPGuTlDqq2yc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/aWPGuTlDqq2yc/giphy.gif" alt="https://media.giphy.com/media/aWPGuTlDqq2yc/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now since we know python is an interpreted language and it doesn't have complier for itself so we can't entirely replicate typescript but at least try to use types wherever possible.&lt;/p&gt;

&lt;p&gt;TL;DR on how typescript works, it takes the entire entire script code complies it into a JavaScript file, the complier does all the type checking.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Python is a dynamically typed language&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;From python 3.5 we have this amazing library which is build inside python, it's the  &lt;code&gt;typing&lt;/code&gt; library. We can't cover entire library but applying Pareto principle (80-20 rule) I will try to cover a few important parts of the library.&lt;/p&gt;

&lt;p&gt;We use it along with a power type checking library &lt;code&gt;mypy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We will be sliding over the following topics in brief&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic Variables&lt;/li&gt;
&lt;li&gt;Lists&lt;/li&gt;
&lt;li&gt;Dictionary&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/cAhGmJPBqsXAlDTYHi/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/cAhGmJPBqsXAlDTYHi/giphy.gif" alt="https://media.giphy.com/media/cAhGmJPBqsXAlDTYHi/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start &lt;/p&gt;

&lt;p&gt;IDE Setup&lt;/p&gt;

&lt;p&gt;Please install the following extensions for VSCode&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=matangover.mypy"&gt;MyPy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=usernamehw.errorlens"&gt;Error Lens&lt;/a&gt; (Optional)&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#typing"&gt;
  &lt;/a&gt;
  Typing
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#variables"&gt;
  &lt;/a&gt;
  Variables
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Integer&lt;/li&gt;
&lt;li&gt;Float&lt;/li&gt;
&lt;li&gt;String
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;int_typed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;

&lt;span class="n"&gt;float_typed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;

&lt;span class="n"&gt;string_typed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"hello"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let us see what happens if we try to assign them a different value.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzxNqMF_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4rjz7dvmg9s3vtx23c6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzxNqMF_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u4rjz7dvmg9s3vtx23c6.png" alt="Int Error"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#lists"&gt;
  &lt;/a&gt;
  Lists
&lt;/h3&gt;

&lt;p&gt;To know more about Lists you have to know about &lt;code&gt;Sequence&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;Sequence&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In Python, sequence is the generic term for an ordered set. There are several types of sequences in Python, the following three are the most important.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lists&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lists are the most versatile sequence type. The elements of a list can be any object, and lists are mutable - they can be changed. Elements can be reassigned or removed, and new elements can be inserted.&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;
&lt;span class="n"&gt;int_typed_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oyfo765e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kuzvqcmwhbl6c34sg1og.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oyfo765e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kuzvqcmwhbl6c34sg1og.png" alt="List"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Shouts for type errors&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But but but but in &lt;code&gt;TypeScript&lt;/code&gt; we have &lt;code&gt;any&lt;/code&gt; keyword if we want dynamic array&lt;/p&gt;

&lt;p&gt;Yes the golden &lt;code&gt;Any&lt;/code&gt; even exists here too&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;

&lt;span class="n"&gt;int_typed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;

&lt;span class="n"&gt;float_typed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;

&lt;span class="n"&gt;string_typed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"hello"&lt;/span&gt;

&lt;span class="n"&gt;int_typed_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="n"&gt;int_typed_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int_typed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;any_typed_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;any_typed_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int_typed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;any_typed_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string_typed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;any_typed_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float_typed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;any_typed_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int_typed_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PmHcLNFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sz4sqqgzhn68en4oq472.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PmHcLNFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sz4sqqgzhn68en4oq472.png" alt="Power of any"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;No shouting 🤫&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#dictionary"&gt;
  &lt;/a&gt;
  Dictionary
&lt;/h3&gt;

&lt;p&gt;For this section &lt;em&gt;Picture speaks louder than words&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'followers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1110&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'abc'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B-p0kkWL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzf36nnr10i3ohw0p8zq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B-p0kkWL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzf36nnr10i3ohw0p8zq.png" alt="Overall"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;It reads the keys if we define in code and help us in auto complete&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GskJ_ikg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18l3x81x3k50nm2b8syd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GskJ_ikg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18l3x81x3k50nm2b8syd.png" alt="Keys"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Now we know that &lt;code&gt;keys()&lt;/code&gt; returns a list of &lt;code&gt;str&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WR5Bz7pz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rcs2gw6m3atd8yu0csaq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WR5Bz7pz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rcs2gw6m3atd8yu0csaq.png" alt="Values"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Now we know that &lt;code&gt;values()&lt;/code&gt; returns a list of &lt;code&gt;int&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#functions"&gt;
  &lt;/a&gt;
  Functions
&lt;/h3&gt;

&lt;p&gt;My all time favourite definition of function is depicted in the picture below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ccSILnIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5hr8nplxionk7ojmu8t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ccSILnIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5hr8nplxionk7ojmu8t.png" alt="Function"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_avg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="n"&gt;get_avg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rjcNZQ7E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hhzz1zcdgsv4lj1r1xa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rjcNZQ7E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hhzz1zcdgsv4lj1r1xa.png" alt="Function shouts"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Function shouts&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#classes"&gt;
  &lt;/a&gt;
  Classes
&lt;/h3&gt;

&lt;p&gt;We may need a solution when we require custom classes to hold and use our data. Then we could similar to this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;calculate_magnitude&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xcNYVAsI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v68cydwksox7ya2t8dja.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xcNYVAsI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v68cydwksox7ya2t8dja.png" alt="Vector Class"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You get the beautiful autocomplete again with details 💫&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PykP3MmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djulqav3533qk13c5021.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PykP3MmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djulqav3533qk13c5021.png" alt="With great power comes great responsibility"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As said in the picture, with great power comes great responsibility.&lt;br&gt;
Python dynamic types gives us very easy to get started with learning python but at the same time increases the chances to create bugs unintentionally.&lt;/p&gt;

&lt;p&gt;The typing gets even better in Python 3.9 and I hope it gets better and better as we progress.&lt;/p&gt;

&lt;p&gt;Small changes can great a huge impact in the code, so please start using types, MyPy and feel safe.&lt;/p&gt;

&lt;p&gt;I kept it brief but please do let me know if diving deeper helps, feedback is really appreciated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mypy.readthedocs.io/en/stable/index.html"&gt;MyPY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.python.org/3/library/typing.html"&gt;Typing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;P.S My &lt;a href="https://twitter.com/gillarohith"&gt;Twitter&lt;/a&gt; DMs are always open if you want to discuss collaboration opportunities or request on writing for a topic &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nT16isXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.tenor.com/images/40317e3f3b28d57c89edceb1d75832c2/tenor.gif%3Fitemid%3D16119732" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nT16isXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.tenor.com/images/40317e3f3b28d57c89edceb1d75832c2/tenor.gif%3Fitemid%3D16119732" alt="https://media1.tenor.com/images/40317e3f3b28d57c89edceb1d75832c2/tenor.gif?itemid=16119732"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks&lt;br&gt;
Rohith Gilla&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>todayilearned</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Is there a right way to learn to code?</title>
      <author>Saji Wang</author>
      <pubDate>Sun, 27 Jun 2021 14:48:16 +0000</pubDate>
      <link>https://dev.to/codesphere/is-there-a-right-way-to-learn-to-code-3fn4</link>
      <guid>https://dev.to/codesphere/is-there-a-right-way-to-learn-to-code-3fn4</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;A huge reason that we are so passionate about the developer community is there isn't a singular path that developers have taken to get where they are now. One might expect that a career as technical as software engineering requires the right CS degree and the right technical experience, but this couldn't be further from the truth.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;According to &lt;a href="https://insights.stackoverflow.com/survey/2020"&gt;Stack Overflow's 2020 Developer Survey&lt;/a&gt;, only about 60% of college-educated developers actually got their degree in Computer Science. However, over 80% of developers still think that some kind of formal education is at least somewhat important in your success as a software engineer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vb9zTMFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6n46e86uptg6w31zbab.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vb9zTMFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6n46e86uptg6w31zbab.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the same time, the internet is filled to the brim with informal development education, including youtube tutorials, forums, and personal portfolios.&lt;br&gt;
It is therefore worth taking a deeper look at the different ways developers learn, as well as the benefits and drawbacks of each.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#academia"&gt;
  &lt;/a&gt;
  Academia
&lt;/h3&gt;

&lt;p&gt;As stated before, despite all the different resources, the majority of professional developers still hold some kind of computer science degree. The Stack Overflow survey does in fact put to numbers what most developers know to be true: That academic classes can only teach you so much. Only about 10% of developers said that formal education was critical to their job.&lt;/p&gt;

&lt;p&gt;Among many developers, formal classes are generally regarded as a pretty strong way to learn theoretical CS concepts, but not necessarily the best method of learning to apply these concepts. For example, one can ideally expect a developer who comes from academia to have a very strong grasp of topics like algorithms, data structures, and time complexity. In addition, when it comes to constantly evolving subfields, like Artificial Intelligence and Cybersecurity, many CS students have the opportunity to conduct academic research.&lt;/p&gt;

&lt;p&gt;While academic experiences are obviously going to differ from institution to institution, there is generally a lack of real-world application of these concepts. A developer who exclusively learns through academia may therefore not be incredibly strong at building real software.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#online-courses-and-tutorials"&gt;
  &lt;/a&gt;
  Online Courses and Tutorials
&lt;/h3&gt;

&lt;p&gt;Those for whom academia is too costly or time prohibitive often turn to online tutorials and courses for the equivalent theoretical education. Sites like Youtube, Udemy, and Coursera offer thousands of different courses on the same sort of theoretical topics that one would study at a university. Though it may not have the same prestige to many hiring managers, these courses are almost always free or only cost the price of a nice dinner.&lt;/p&gt;

&lt;p&gt;In addition to these theoretical topics, online resources can teach programmers about new and specific languages, technologies, and frameworks that usually aren't covered in a college curriculum. Online courses and tutorials are therefore essential to keeping up to date with the latest trends in software engineering.&lt;/p&gt;

&lt;p&gt;As with Academia, there is a risk with online courses and tutorials of only being able to regurgitate what you learned, and not actually apply it to real projects. One should therefore not expect to be ready to code professionally with a technology after watching a two-hour course on it.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#bootcamps"&gt;
  &lt;/a&gt;
  Bootcamps
&lt;/h3&gt;

&lt;p&gt;A nice midpoint between the credibility of a degree and the accessibility of online resources is Coding Bootcamps. These programs are typically only a couple of months long and are a fraction of the price. In addition, they tend to focus more on teaching marketable tech stacks rather than theoretical concepts.&lt;/p&gt;

&lt;p&gt;Bootcamps are especially great for people looking to make a career switch without the full investment of an additional degree. The major drawback is that while it might help you land your first development job, by giving you a working proficiency in the most popular web framework or database technology, a Bootcamp alone won't necessarily help you keep that job.&lt;/p&gt;

&lt;p&gt;Being able to succeed in a development role often requires fundamentals that aren't hidden beneath the latest technology. For example, knowing how to use ReactJS without a strong foundation in HTML and CSS can only get you so far. While that certainly doesn't diminish the educational quality of a Bootcamp, you should just have realistic expectations of what you are going to get out of it.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#personal-projects"&gt;
  &lt;/a&gt;
  Personal Projects
&lt;/h3&gt;

&lt;p&gt;There are few professions where project-based learning is as accessible as it is for software engineering. One of the best ways to learn how to do something is to just do it. The issue is that if you want to be a doctor or a mechanical engineer, accountability and financial constraints are often going to prevent you from getting real-world experience. In contrast, all you need is a working computer and an internet connection to get real-world experience building software.&lt;/p&gt;

&lt;p&gt;Working on pet projects is an amazing way to work through the actual kinds of problems that you would encounter on a job. While its value may sometimes be harder to convey to a hiring manager than a GPA, that real-world experience is going to be instrumental to the value you can bring to a company. And hey, you never know, your next pet project might become the next billion-dollar company, like Github or Facebook.&lt;/p&gt;

&lt;p&gt;The one thing that people should be hesitant about when relying on personal projects is only programming in a way that gets the job done, and not necessarily in a way that gets the job done well. It's great that you made a cool Web App that works, but if all your code is inefficient, horribly documented, and riddled with security vulnerabilities, it might be worth learning some more fundamentals. This kind of coding style might be fine for your pet project, but it is probably going to make you a nightmare to work with.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#community-participation"&gt;
  &lt;/a&gt;
  Community Participation
&lt;/h3&gt;

&lt;p&gt;A huge way that programmers learn that often gets taken for granted is participation in developer communities. This can come in a number of forms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Asking and Answering questions on Stack Overflow&lt;/li&gt;
&lt;li&gt;Participating in Open Source projects&lt;/li&gt;
&lt;li&gt;Writing and Reading developer blogs on platforms like Medium and Dev.to&lt;/li&gt;
&lt;li&gt;Keeping up to date with the newest technologies and trends on Reddit, Twitter, and Hacker News&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even if you already landed your dream job, participating in the community is an important part of being a developer and an important part of sharpening your coding skills.&lt;/p&gt;

&lt;p&gt;As the Greek historian, Plutarch once said "Education is the kindling of a flame, not the filling of a vessel". Learning is a lifelong process, so staying active in the community through methods like these can make sure that you are always learning.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;So is there a singular right way to learn to code? Probably not, but there is certainly a wrong way. Relying on either exclusively theoretical education (Academia, Tutorials, Bootcamps) or exclusively application(Projects, Community Participation) is going to limit your success as a developer. A strong developer is someone who has both a good grasp of theoretical concepts and has the ability to apply these concepts to real-world software.&lt;/p&gt;

&lt;p&gt;Thanks for reading! What do you think? Is there a right way to learn to code? Is there a wrong way? How'd you learn?&lt;/p&gt;

&lt;p&gt;To learn about how Codesphere is revolutionizing cloud services, you can check out &lt;a href="https://link.codesphere.com/AN"&gt;Codesphere.com&lt;/a&gt;. :)&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

</description>
      <category>bootcamp</category>
      <category>learntocode</category>
      <category>discuss</category>
      <category>programming</category>
    </item>
    <item>
      <title>150+ users registered in 24 hours on website created for fun</title>
      <author>Naman vyas</author>
      <pubDate>Sun, 27 Jun 2021 14:43:41 +0000</pubDate>
      <link>https://dev.to/namanvyas/150-users-registered-in-24-hours-on-website-created-for-fun-f1a</link>
      <guid>https://dev.to/namanvyas/150-users-registered-in-24-hours-on-website-created-for-fun-f1a</guid>
      <description>&lt;p&gt;Hello everyone,&lt;/p&gt;

&lt;p&gt;for some days i was working on a simple social media website created using NextJS, TailwindCSS and firebase for learning and fun and yesterday created a Dev post about making that project(website) public to internet.&lt;br&gt;
Dev post Link : &lt;a href="https://dev.to/namanvyas/build-a-social-media-website-with-next-js-tailwindcss-and-firebase-in-8-days-2j65"&gt;Post&lt;/a&gt;&lt;br&gt;
Website Link : &lt;a href="https://noob.study"&gt;noob.study&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was not expecting much attention from that post so after writing i did go to sleep, after waking up i was checking my phone as normal and open that website to check how it is going and find out there was around 10-11 new posts which is amazing after that i rush to my Dev post and Firebase console and find out 69 peoples registered on website and 10 stars in my GitHub repo which was too amazing for me, got very good response.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lt6rKe0G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlszd83cdr9w0r3fc8mn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lt6rKe0G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlszd83cdr9w0r3fc8mn.gif" alt="wowww"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the end of day i got &lt;strong&gt;158 users&lt;/strong&gt; registered and also some bugs to fix&lt;/p&gt;

&lt;p&gt;now main challenge for me is to fix all bugs as fast as possible and optimize Firebase integration because i got around 22,000 read request which is not good for me if website grow like that maybe i will have to close that project because i can't afford to pay for this project right now.&lt;/p&gt;

&lt;p&gt;It is a great experience for me. Love Dev community.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/namanvyas" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9VZ0Zkbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6iUx5n2K--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/420414/11894cc1-249a-4c52-a119-9603e07eeca4.jpg" alt="namanvyas"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/namanvyas/build-a-social-media-website-with-next-js-tailwindcss-and-firebase-in-8-days-2j65" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a social media website with Next JS, TailwindCss and Firebase in 8 days&lt;/h2&gt;
      &lt;h3&gt;Naman vyas ・ Jun 26 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#nextjs&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tailwindcss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#firebase&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>nextjs</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>How I made a mini filter app with Vanilla JavaScript</title>
      <author>Raquel Santos | RS-coding</author>
      <pubDate>Sun, 27 Jun 2021 14:03:31 +0000</pubDate>
      <link>https://dev.to/raquelsartwork/how-i-made-a-mini-filter-app-with-vanilla-javascript-15kb</link>
      <guid>https://dev.to/raquelsartwork/how-i-made-a-mini-filter-app-with-vanilla-javascript-15kb</guid>
      <description>&lt;p&gt;I have been doing the JavaScript30 from Wes Bos and one of the challenges is to change CSS Variables using JS.&lt;br&gt;
I found the challenge so interesting that I decided to try myself and create a mini-filter image app by using the same concept that he used on the challenge.&lt;br&gt;
Also, I decided to go further and made functionality to display an uploaded image and then change it with the filters available.&lt;/p&gt;

&lt;p&gt;I will show you step by step what I did. You can check the &lt;a href="https://rs-coding.github.io/FilterImageApp/"&gt;Demo&lt;/a&gt; and full code here &lt;a href="https://github.com/RS-coding/FilterImageApp"&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First of all, I sketched what I wanted to look like in the end to help me trace a path.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3P23BQOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5i53g3lm2s1jaakqrpy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3P23BQOs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5i53g3lm2s1jaakqrpy.jpg" alt="sketch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Having the sketch done I created an HTML file with elements I wanted. As you can see I write a div container with 3 divs inside:   &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;header-container&lt;/strong&gt; - for the title and uploading  icon,&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;img-container&lt;/strong&gt; - for the displayed image,
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;controls&lt;/strong&gt; - for the filters controls.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UHM_PQhW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/apbo72ypk0xgcleqb9b9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UHM_PQhW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/apbo72ypk0xgcleqb9b9.jpg" alt="HTML structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-display-uploaded-image-in-html-using-javascript"&gt;
  &lt;/a&gt;
  How To Display Uploaded Image In Html Using Javascript
&lt;/h2&gt;

&lt;p&gt;Let's focus first on how to display an uploaded image. So let's take a look at the two first containers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XmEhvkBY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g93odyksokv0nd32qy5j.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XmEhvkBY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g93odyksokv0nd32qy5j.jpg" alt="HTML structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Inside &lt;strong&gt;header-container&lt;/strong&gt; I created a div called &lt;strong&gt;upload-img&lt;/strong&gt; that contains label and input elements. &lt;br&gt;
 The input has some attributes :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;type='file'&lt;/strong&gt; because we want to add a file&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;accept=' image/*'&lt;/strong&gt; that takes as a value all the type of files permitted to upload  (* - global). If we wanted only permit jpg files we would have to write accept='image/jpg'.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;style='display: none;'&lt;/strong&gt; because I wanted to show only the icon on the label instead of the input.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On the div &lt;strong&gt;img-container&lt;/strong&gt; I added an img HTML tag without a source attribute but an id named "output" that will retrieve the image source from javaScript.&lt;br&gt;
It's time to do JavaScript code to display the image in HTML element &lt;strong&gt;img&lt;/strong&gt; :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A7hYKjzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n517ddgs99p18gao4qkn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A7hYKjzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n517ddgs99p18gao4qkn.jpg" alt="JavaScript code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first thing I did was to get the element &lt;strong&gt;input&lt;/strong&gt; from the DOM and stored it in a variable named &lt;strong&gt;fileUpload&lt;/strong&gt;.&lt;br&gt;
Further, I added an event listener with event &lt;strong&gt;change&lt;/strong&gt; and a function called &lt;strong&gt;loadFile&lt;/strong&gt;.&lt;br&gt;
Inside the loadFile function, I  get the element &lt;strong&gt;img&lt;/strong&gt; from DOM and store it in a variable called  &lt;strong&gt;img&lt;/strong&gt; ( you could call it an image or something else. I decided to call the same name as the tag). &lt;br&gt;
After that, I created a source URL for that variable &lt;strong&gt;img&lt;/strong&gt; that by using &lt;strong&gt;URL.createObjectURL()&lt;/strong&gt;, a static method that creates a string containing URL representing the specific file inside the parameters that, in this case, is the selected file or files of the input:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;e.target&lt;/strong&gt; is the &lt;strong&gt;input type="file"&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;files[0]&lt;/strong&gt;  represents the file or the files that were selected&lt;/p&gt;

&lt;p&gt;This part is Done!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-change-css-variables-in-javascript"&gt;
  &lt;/a&gt;
  How to change CSS Variables in JavaScript
&lt;/h2&gt;

&lt;p&gt;Inside the third container &lt;strong&gt;controls&lt;/strong&gt; let's just focus on the construction of the &lt;strong&gt;input&lt;/strong&gt; element.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xLsfY4ec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bws0wp04fdgsmyd5oplb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xLsfY4ec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bws0wp04fdgsmyd5oplb.jpg" alt="HTML"&gt;&lt;/a&gt;&lt;br&gt;
As you can see in the image there are a couple of Attributes important that I added. let's talk about each one:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;id&lt;/strong&gt; - the id of the element (example id="sepia")&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;type ="range"&lt;/strong&gt; - it is the type of the input. in this case, I wanted a slider control&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;name&lt;/strong&gt; - it is the name of the specific filter which is the same as the id (example name="sepia")&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;min&lt;/strong&gt;, &lt;strong&gt;max&lt;/strong&gt; &lt;strong&gt;value&lt;/strong&gt; - min and max are the minima and maximum values the input range has and the value is the default value we want to point to at the beginning. To set the values for the min, max and value attributes for each filter control I researched here [filters characteristics]((&lt;a href="https://www.w3schools.com/cssref/css3_pr_filter.asp"&gt;https://www.w3schools.com/cssref/css3_pr_filter.asp&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;data-sizing="%"&lt;/strong&gt; - it is a custom attribute that has as value an % because all filters that I will use in CSS end with percentage.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's take a look at CSS file :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pBMUFV6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6cwrkv1uc0bugifkr1f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pBMUFV6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6cwrkv1uc0bugifkr1f.jpg" alt="CSS file"&gt;&lt;/a&gt;&lt;br&gt;
Here I created CSS variables in the : root pseudo-class and added those named variables in the img element.&lt;/p&gt;

&lt;p&gt;Now its time to code in JavaScript:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--467WWCyI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4lyruapcgvpgkiitkls.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--467WWCyI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4lyruapcgvpgkiitkls.jpg" alt="JavaScript"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First of all, I stored in a variable all the inputs(plural). &lt;br&gt;
Then I wanted to make an event listener for each input(individual) with change and input event.&lt;br&gt;
So I did a forEach loop at the 'inputs' variable to get each input and add the event listener.&lt;/p&gt;

&lt;p&gt;Why did I want to use two events and not just the first one &lt;strong&gt;change&lt;/strong&gt;? &lt;br&gt;
Because the &lt;strong&gt;change&lt;/strong&gt; event only updates the result when the movement ended, and I wanted also to show changes in the image while I move the input range.&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;updateStyle&lt;/strong&gt; function first, I made a variable called suffix that stores the value '%' of data-sizing or if there are none stores an empty string ' '.&lt;br&gt;
After that, I set a new property value for the root element that takes the value of the input.&lt;/p&gt;

&lt;p&gt;That is it!&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Add a 'Slider' to your Website using CSS and Javascript</title>
      <author>Devang Saklani</author>
      <pubDate>Sun, 27 Jun 2021 13:38:11 +0000</pubDate>
      <link>https://dev.to/devang/add-a-slider-to-your-website-using-css-and-javascript-238e</link>
      <guid>https://dev.to/devang/add-a-slider-to-your-website-using-css-and-javascript-238e</guid>
      <description>&lt;p&gt;In this article I will tell you several ways to &lt;strong&gt;add a Slider to your website&lt;/strong&gt; and how you can use these sliders to make your website look more &lt;strong&gt;Attractive&lt;/strong&gt; and more &lt;strong&gt;Functional&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-of-all-what-is-meant-by-slider"&gt;
  &lt;/a&gt;
  First of all, What is meant by slider?
&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;slider&lt;/strong&gt; is a term that refers to a slideshow on a website. An example of a &lt;strong&gt;slider&lt;/strong&gt; can be a revolving carousel that displays products or photos.&lt;/p&gt;

&lt;p&gt;Types of Sliders we are going to build:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;With plain CSS and JS (not recommended)&lt;/li&gt;
&lt;li&gt;Using CSS frameworks (like Bootstrap)&lt;/li&gt;
&lt;li&gt;Using JS libraries (best way)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#slider-using-plain-css-and-js"&gt;
  &lt;/a&gt;
  Slider using plain CSS and JS
&lt;/h1&gt;

&lt;p&gt;In this method we will use only CSS and a little bit of JS for making a slider. This is a simple demo of it :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MvUTcywa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/64rqh5qsc01hqumylg56.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MvUTcywa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/64rqh5qsc01hqumylg56.png" alt="W3Scchools slider example"&gt;&lt;/a&gt;&lt;br&gt;
Codepen example: &lt;a href="https://codepen.io/devang47/pen/OJmLELR"&gt;click here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can &lt;strong&gt;customize&lt;/strong&gt; it as much as you want (if you know how to).&lt;br&gt;
I won't do deeper into its working as it is already full explained by W3Schools in &lt;a href="https://www.w3schools.com/howto/howto_js_slideshow.asp"&gt;this article.&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;And a person Named &lt;a href="https://www.toptal.com/css/full-page-slider-css-and-javascript"&gt;Stefan Vitasovic&lt;/a&gt; has &lt;strong&gt;made  a cool slider&lt;/strong&gt; using plain CSS and JS. I would recommened you to check-out his method, If you are making it with plain JS. Check out what he made &lt;strong&gt;&lt;a href="http://stefan.lynxdev.io/projects/fullscreen-slider/"&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I would suggest not to use this method if you are a beginner as this method is most complicated. But it can be really helpful to you in some way! i.e. you will get deeper knowledge of It's working and I am sure you will learn many things from it.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#using-css-libraries-bootstrap"&gt;
  &lt;/a&gt;
  Using CSS libraries (Bootstrap)
&lt;/h1&gt;

&lt;p&gt;In this method we will use &lt;strong&gt;&lt;em&gt;Bootstrap&lt;/em&gt;&lt;/strong&gt; to make a Image slider.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pR3_-hJt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s48fjyhnt26vb5dc8gh0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pR3_-hJt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s48fjyhnt26vb5dc8gh0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First of all, import bootstrap CSS and JS files from any CDN network (for a quick setup).&lt;br&gt;
Then go to &lt;a href="https://getbootstrap.com/docs/5.0/components/carousel/"&gt;this page&lt;/a&gt; to get the HTML Markup or just copy this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel"&amp;gt;
  &amp;lt;div class="carousel-inner"&amp;gt;
    &amp;lt;div class="carousel-item active"&amp;gt;
      &amp;lt;img src="https://images.unsplash.com/photo-1623646230868-48e8e88b38e4?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=crop&amp;amp;fm=jpg&amp;amp;h=720&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=1280" class="d-block w-100" alt="..."&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="carousel-item"&amp;gt;
      &amp;lt;img src="https://images.unsplash.com/photo-1599636647429-8cbd70bead58?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=crop&amp;amp;fm=jpg&amp;amp;h=720&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=1280" class="d-block w-100" alt="..."&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="carousel-item"&amp;gt;
      &amp;lt;img src="https://images.unsplash.com/photo-1622556474520-59904a30f654?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=crop&amp;amp;fm=jpg&amp;amp;h=720&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=1280" class="d-block w-100" alt="..."&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev"&amp;gt;
    &amp;lt;span class="carousel-control-prev-icon" aria-hidden="true"&amp;gt;&amp;lt;/span&amp;gt;
    &amp;lt;span class="visually-hidden"&amp;gt;Previous&amp;lt;/span&amp;gt;
  &amp;lt;/button&amp;gt;
  &amp;lt;button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next"&amp;gt;
    &amp;lt;span class="carousel-control-next-icon" aria-hidden="true"&amp;gt;&amp;lt;/span&amp;gt;
    &amp;lt;span class="visually-hidden"&amp;gt;Next&amp;lt;/span&amp;gt;
  &amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;

// Bootstrap CSS and JS files 
&amp;lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"&amp;gt;
&amp;lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Codepen example: &lt;a href="https://codepen.io/devang47/pen/vYmBrXN"&gt;click here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can do many customizations like: add &lt;strong&gt;Controls&lt;/strong&gt;, &lt;strong&gt;Indicators&lt;/strong&gt;, &lt;strong&gt;Captions&lt;/strong&gt;, &lt;strong&gt;Custom Transition effects&lt;/strong&gt; etc. by reading their documentation &lt;a href="https://getbootstrap.com/docs/5.0/components/carousel/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All I have to say about this is that this is a really easy and fast way to add/make a slider in your Website without compromising anything. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#using-javascript-library-to-add-a-slider"&gt;
  &lt;/a&gt;
  Using Javascript library to add a slider
&lt;/h1&gt;

&lt;p&gt;This is (according to me) the best way to add a Image/Normal Slider with good Animations in your website.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cbd31G7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g4i3ntecjr5k8uubjur.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cbd31G7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g4i3ntecjr5k8uubjur.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
 In this we will use a JS library called &lt;strong&gt;&lt;a href="https://swiperjs.com/"&gt;SwiperJS&lt;/a&gt;&lt;/strong&gt;. You can use others too, but this one is &lt;strong&gt;maintained&lt;/strong&gt; and really &lt;strong&gt;popular&lt;/strong&gt; among developers. Also the things and &lt;strong&gt;customizations&lt;/strong&gt; you can do with it are just Amazing.&lt;/p&gt;

&lt;p&gt;Also, This library has support for Swipe gestures (which is a really difficult thing to make with plain JS). Check example &lt;a href="https://swiperjs.com/demos"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#but-how-to-make-it-work"&gt;
  &lt;/a&gt;
  &lt;strong&gt;But, How to make it work?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;First of all import it's CSS and JS files from any CDN network, or just copy these links:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;// Both are same (import any one)
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/swiper/swiper-bundle.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/swiper/swiper-bundle.min.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

// Same here (import any one)
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/swiper/swiper-bundle.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/swiper/swiper-bundle.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Basic HTML markup:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="swiper-container"&amp;gt;
  &amp;lt;!-- Additional required wrapper --&amp;gt;
  &amp;lt;div class="swiper-wrapper"&amp;gt;
    &amp;lt;!-- Slides --&amp;gt;
    &amp;lt;div class="swiper-slide"&amp;gt;  &amp;lt;img src="https://images.unsplash.com/photo-1623646230868-48e8e88b38e4?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=crop&amp;amp;fm=jpg&amp;amp;h=720&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=1280" style="width:100%"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class="swiper-slide"&amp;gt;  &amp;lt;img src="https://images.unsplash.com/photo-1599636647429-8cbd70bead58?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=crop&amp;amp;fm=jpg&amp;amp;h=720&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=1280" style="width:100%"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class="swiper-slide"&amp;gt;  &amp;lt;img src="https://images.unsplash.com/photo-1622556474520-59904a30f654?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=crop&amp;amp;fm=jpg&amp;amp;h=720&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=1280" style="width:100%"&amp;gt;&amp;lt;/div&amp;gt;
    ...
  &amp;lt;/div&amp;gt;
  &amp;lt;!-- If we need pagination --&amp;gt;
  &amp;lt;div class="swiper-pagination"&amp;gt;&amp;lt;/div&amp;gt;

  &amp;lt;!-- If we need navigation buttons --&amp;gt;
  &amp;lt;div class="swiper-button-prev"&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div class="swiper-button-next"&amp;gt;&amp;lt;/div&amp;gt;

  &amp;lt;!-- If we need scrollbar --&amp;gt;
  &amp;lt;div class="swiper-scrollbar"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These images in &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; are placeholders, you can change these.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Basic CSS:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
.swiper-container {
  width: calc(1280px/2);
  height: calc(720px/2);
}


//buttons
.swiper-button-next, .swiper-container-rtl .swiper-button-prev {
  color: white;
}
.swiper-button-prev, .swiper-container-rtl .swiper-button-next{
  color: white;
}

//swiper bullets
.swiper-pagination-bullet-active{
  background-color: white;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Basic JS:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const swiper = new Swiper('.swiper-container', {
  // Optional parameters
  direction: 'horizontal',
  loop: true,

  // If we need pagination
  pagination: {
    el: '.swiper-pagination',
  },

  // Navigation arrows
  navigation: {
    nextEl: '.swiper-button-next',
    prevEl: '.swiper-button-prev',
  },

  // And if we need scrollbar
  scrollbar: {
    el: '.swiper-scrollbar',
  },
});

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is really &lt;strong&gt;Easy to setup&lt;/strong&gt; and it is &lt;strong&gt;highly maintained&lt;/strong&gt; library. You can do many customizations in this library such as: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;turn off &lt;strong&gt;Preloading Images&lt;/strong&gt; to get &lt;strong&gt;Lazyload&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;use &lt;code&gt;swiper.activeIndex&lt;/code&gt; in JS to get current index of frame&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Add a slider inside a Slider&lt;/strong&gt; and many more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I would recommened you to read their &lt;strong&gt;Official Documentation&lt;/strong&gt; &lt;a href="https://github.com/nolimits4web/swiper"&gt;here&lt;/a&gt; or Check out some &lt;strong&gt;Examples&lt;/strong&gt; &lt;a href="https://swiperjs.com/demos"&gt;here&lt;/a&gt; to get more information about this Library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-implement-these-sliders-for-better-uiux"&gt;
  &lt;/a&gt;
  How to Implement these Sliders for better UI/UX:
&lt;/h2&gt;

&lt;p&gt;TBH I don't know much about Design, so I would recommened you to read these articles to get proper information about &lt;strong&gt;Where/How to use Sliders for better UI and UX&lt;/strong&gt; : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.shift4shop.com/sliders-web-design"&gt;https://blog.shift4shop.com/sliders-web-design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://smartslider3.com/blog/homepage-slider-examples/"&gt;https://smartslider3.com/blog/homepage-slider-examples/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A post by Devang. Hope it helps!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>Understanding Kubernetes in a visual way (in 🎥 video): part 18 – Pod &amp; Node (Anti) Affinities</title>
      <author>Aurélie Vache</author>
      <pubDate>Sun, 27 Jun 2021 13:19:24 +0000</pubDate>
      <link>https://dev.to/aurelievache/understanding-kubernetes-in-a-visual-way-in-video-part-18-pod-node-anti-affinities-1fa2</link>
      <guid>https://dev.to/aurelievache/understanding-kubernetes-in-a-visual-way-in-video-part-18-pod-node-anti-affinities-1fa2</guid>
      <description>&lt;p&gt;Understanding Kubernetes can be difficult or time-consuming. In order to spread knowledges about Cloud technologies I started to create sketchnotes about Kubernetes, then I've auto-published a book and since now I've started a new serie of video! :-)&lt;/p&gt;

&lt;p&gt;I imagined a serie of short videos with a mix of sketchnotes and speech.&lt;/p&gt;

&lt;p&gt;I think it could be a good way, more visual, with audio &amp;amp; video to explain Kubernetes (and others technologies).&lt;/p&gt;

&lt;p&gt;In this new episode, let's talk about Pod &amp;amp; Node Affinities and Anti Afinities.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/2_nQGrO6New"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The video is in French BUT I done the subtitles in english (and french too).&lt;/p&gt;

&lt;p&gt;If you liked the video and are interested to watch another ones, please give me some feedbacks (and you can also subscribe to &lt;a href="https://www.youtube.com/channel/UCrRk0kOP58lBMl9B8ZS8Vlg"&gt;my Youtube channel&lt;/a&gt;, if you want to ❤️).&lt;/p&gt;

&lt;p&gt;If you are interested, I published all the sketchnotes on Kubernetes (and new ones!) to make a "book" of 165 pages: &lt;a href="https://gumroad.com/aurelievache#uCxcr"&gt;"Understanding Kubernetes in a visual way"&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you like theses sketchnotes, you can follow me, I will publish others sketchs shortly :-).&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>docker</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Run creat-react-app with HTTPS</title>
      <author>Pranjal Jain</author>
      <pubDate>Sun, 27 Jun 2021 13:19:00 +0000</pubDate>
      <link>https://dev.to/pranjaljain0/run-creat-react-app-with-https-4ep6</link>
      <guid>https://dev.to/pranjaljain0/run-creat-react-app-with-https-4ep6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In current days we host websites on &lt;a href="https://vercel.com"&gt;Vercel&lt;/a&gt; and &lt;a href="https://www.netlify.com"&gt;Netlify&lt;/a&gt; and we are automatically assigned a generated SSL to provide with Secured connection(HTTPS), but in the development period we are unaware of the process to run it with HTTPS and we miss out on some testing which works only on HTTPS like google apis, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Configure creat-react-app project to handle https&lt;/li&gt;
&lt;li&gt;Generate SSL Certificates for localhost&lt;/li&gt;
&lt;li&gt;Add certificates to the project&lt;/li&gt;
&lt;li&gt;Trust certificate in browser&lt;/li&gt;
&lt;li&gt;Run the project secured&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#configure-creatreactapp-project-to-handle-https"&gt;
  &lt;/a&gt;
  Configure creat-react-app project to handle https
&lt;/h3&gt;

&lt;p&gt;Add a file &lt;code&gt;.env&lt;/code&gt; in the root directory of the project with the line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HTTPS=true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#generate-ssl-certificates-for-localhost"&gt;
  &lt;/a&gt;
  Generate SSL Certificates for localhost
&lt;/h3&gt;

&lt;p&gt;Follow this article to generate a SSL certificate for localhost. and place the certificates in the root directory.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/pranjaljain0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3T-ID9xX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--bxfA76Io--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/476007/fd6c70da-c0dc-434e-9956-fc722081b87c.png" alt="pranjaljain0"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pranjaljain0/generate-an-ssl-certificate-with-the-root-certificate-for-localhost-18je" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Generate an SSL Certificate With the Root Certificate for localhost&lt;/h2&gt;
      &lt;h3&gt;Pranjal Jain ・ Jun 24 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webassembly&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
after following this article you must have 8 new files in your directory, which are&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rootCA.key
rootCA.pem
rootCA.srl
server.crt
server.csr
server.csr.cnf
server.key
v3.ext
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-certificates-to-the-project"&gt;
  &lt;/a&gt;
  Add certificates to the project
&lt;/h3&gt;

&lt;p&gt;in the &lt;code&gt;.env&lt;/code&gt; file add these two properties and there paths.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SSL_CRT_FILE=server.crt
SSL_KEY_FILE=server.key
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you will be using the &lt;code&gt;server.crt&lt;/code&gt; as your certificate file &amp;amp; &lt;code&gt;server.key&lt;/code&gt; as your key for certificate.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#trust-certificate-in-browser"&gt;
  &lt;/a&gt;
  Trust certificate in browser
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.techrepublic.com/article/how-to-add-a-trusted-certificate-authority-certificate-to-chrome-and-firefox/"&gt;Follow this article&lt;/a&gt; to trust the certificate on your browser &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#run-the-project-secured"&gt;
  &lt;/a&gt;
  Run the project secured
&lt;/h3&gt;

&lt;p&gt;Hence you have HTTPS enabled for your project.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oBy64XZe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1310j6p88oh03b0nqrx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oBy64XZe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1310j6p88oh03b0nqrx.png" alt="HTTPS Enabled"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're stuck anywhere do leave a comment.&lt;/p&gt;

&lt;p&gt;Follow me on Twitter at &lt;a href="https://twitter.com/pranjaljain0"&gt;Twitter/pranjaljain0&lt;/a&gt;&lt;br&gt;
Follow me on Github at &lt;a href="https://github.com/pranjaljain0"&gt;github/pranjaljain0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy Hacking!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>webpack</category>
      <category>security</category>
    </item>
    <item>
      <title>LAUNCHING MATLAB MONDAYS💥, a Crash Course✨🌟</title>
      <author>Aatmaj</author>
      <pubDate>Sun, 27 Jun 2021 12:58:37 +0000</pubDate>
      <link>https://dev.to/aatmaj/launching-matlab-mondays-a-crash-course-nb1</link>
      <guid>https://dev.to/aatmaj/launching-matlab-mondays-a-crash-course-nb1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-everyone-get-ready-for-the-blast-launching-the-all-new-matlab-crash-course"&gt;
  &lt;/a&gt;
  Hello everyone⭐ Get ready for the blast💣❤️‍🔥 Launching the all new MATLAB crash course. 💎
&lt;/h2&gt;




&lt;p&gt;So dear friends ✔️ I have decided to launch a crash course 🧲 to cover all the basics of MATLAB 😇. This course will be launched on this platform every Monday😊 I will quickly 💨 cover all the basics required.🌤️ &lt;/p&gt;

&lt;p&gt;This is ideally a binge-course for fast-tracking through MATLAB.🏃‍♀️🏃 All the blogs are 2-3 minutes read. 🎲&lt;/p&gt;

&lt;p&gt;In case you want more advanced topics to be covered, please put them in the comment box below 👇 and I will cover them 💦 after the basics🎈🎈🎈&lt;/p&gt;




&lt;p&gt;Before learning MATLAB, I would like to share a few words of caution.😵 MATLAB is neither free nor open. 😞 Unless you are a student ✍️ affiliated to any university 🏫 MATLAB might not be the best fit for you. However, there are good alternatives to MATLAB as mentioned &lt;a href="https://perso.crans.org/besson/matlab-clones.en.html"&gt;here&lt;/a&gt;.😎&lt;br&gt;
Among these options, I would however advise two alternatives✋- Python (with scientific add-ons) and the Julia language. Julia is a better alternative 👌 to MATLAB with syntax very similar to it.🔆 You can read more about the benefits of Julia &lt;a href="https://www.linkedin.com/posts/wonderbiz-technologies_julia-programming-language-the-rising-star-activity-6812722852954017793-NDEd"&gt;here&lt;/a&gt;.👏 &lt;br&gt;
However one point of advantage 🪔 is that the syntax of MATLAB is very similar to that of GNU Octave 🌈, so in case you want to proceed your research there🥕, you might find this course of advantage.🌞&lt;/p&gt;

</description>
      <category>matlab</category>
    </item>
    <item>
      <title>I bought new Macbook Air M1 (one of my goals completed)</title>
      <author>Thu Htet Tun</author>
      <pubDate>Sun, 27 Jun 2021 12:36:56 +0000</pubDate>
      <link>https://dev.to/thuhtetdev/i-bought-new-macbook-air-m1-one-of-my-goals-completed-2kbb</link>
      <guid>https://dev.to/thuhtetdev/i-bought-new-macbook-air-m1-one-of-my-goals-completed-2kbb</guid>
      <description>&lt;p&gt;Hello Guys!&lt;/p&gt;

&lt;p&gt;Buying a new macbook is one of my goals in this year.&lt;br&gt;
And I got it. This is my very first macbook. &lt;br&gt;
I'm ready to use this for my educational &amp;amp; career purposes.&lt;/p&gt;

&lt;p&gt;I uploaded vlog on my YouTube Channel.&lt;br&gt;
If you want to see my happiness, please go for it. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#youtube-link"&gt;
  &lt;/a&gt;
  YouTube link
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=neagi_Pej1g"&gt;https://www.youtube.com/watch?v=neagi_Pej1g&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>webdev</category>
      <category>tooling</category>
    </item>
    <item>
      <title>My Dev Journey: Week 8</title>
      <author>Harry York</author>
      <pubDate>Sun, 27 Jun 2021 12:07:16 +0000</pubDate>
      <link>https://dev.to/harryyork97/my-dev-journey-week-8-4k8d</link>
      <guid>https://dev.to/harryyork97/my-dev-journey-week-8-4k8d</guid>
      <description>&lt;p&gt;This week was careers week on my coding bootcamp, and as such this week was a lot less new concept heavy as many of the previous weeks have been. Instead of new technologies we had a few lectures on CV writing, portfolio preparation, and technical tests.&lt;/p&gt;

&lt;p&gt;If you've enjoyed any of my blog series, then maybe consider following me on &lt;a href="https://twitter.com/grand_oldduke"&gt;Twitter&lt;/a&gt; and &lt;a href="https://github.com/harryyork97"&gt;GitHub&lt;/a&gt; 😁 and I'd also really appreciate if you all could check out my new &lt;a href="https://harryyork.dev/"&gt;portfolio site&lt;/a&gt; 🙏🏼 and maybe leave a few beginner project ideas in the comments to give me some inspiration!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-ive-done-this-week"&gt;
  &lt;/a&gt;
  What I've done this week
&lt;/h2&gt;

&lt;p&gt;Whilst I created my first development CV during this week the two most important things I've done this week were completing a back-end project I worked on during the back-end portion of the course, this involved a broad scope of unit and integration testing. And then once I was happy with the functionality of my API I hosted it on Heroku which what the first time I've hosted anything. And then I got to write my first README for the repo, and I wanted to make this one as good as I could becasue it's the first I've written and I've really enjoyed this project and didn't want to half-do the last thing 😁&lt;/p&gt;

&lt;p&gt;But by far the thing I'm most excited about this week, is buying my first domain for my &lt;a href="https://harryyork.dev/"&gt;portfolio site&lt;/a&gt;, and creating my first front-end project. We've not done the front end block of the course (this starts next week) but I wanted to complete a portfolio site that I could link to in my CV, for job applications (if any hiring managers are reading my blog still on week 8, then please hire me 😅) and socials too! My portfolio uses a bootstrap template but I went through and dipped my toes in the luke warm waters of HTML and CSS to make it match a style closer to my CV styling.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources-ive-found-useful-this-week"&gt;
  &lt;/a&gt;
  Resources I've found useful this week
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-google-domains-on-github-pages"&gt;
  &lt;/a&gt;
  Setting up google domains on GitHub pages
&lt;/h3&gt;

&lt;p&gt;This &lt;a href="https://dev.to/trentyang/how-to-setup-google-domain-for-github-pages-1p58"&gt;dev&lt;/a&gt; article was really useful in helping guide through setting up my newly minted domain, with github pages, as well as the &lt;a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site"&gt;GitHub Pages docs&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootstrap-docs"&gt;
  &lt;/a&gt;
  Bootstrap docs
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://getbootstrap.com/docs/5.0/getting-started/introduction/"&gt;bootstrap docs&lt;/a&gt; were crucial for my brief intro to HTML and CSS work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#design-inspiration"&gt;
  &lt;/a&gt;
  Design inspiration
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.canva.com/en/"&gt;Canva&lt;/a&gt; was pretty useful in getting design inspiration for structure of my CV, I then created my CV in Affinity Publisher, which took a fair bit of getting used to again, because I'm much more used to Adobe InDesign&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>bootcamp</category>
    </item>
    <item>
      <title>Getting Started with 'Git'</title>
      <author>BHAVIN VIRANI</author>
      <pubDate>Sun, 27 Jun 2021 11:49:29 +0000</pubDate>
      <link>https://dev.to/bhavinvirani/getting-started-with-git-1jlj</link>
      <guid>https://dev.to/bhavinvirani/getting-started-with-git-1jlj</guid>
      <description>&lt;p&gt;In this Blog i'll cover some basic commands of git, using that command you can easily work with git and Github as beginner.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Before starting this this blog I want to mention that &lt;code&gt;Git&lt;/code&gt; and &lt;code&gt;Github&lt;/code&gt; are not same. many people are understandably confused😕 between this two words at their beginning.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#github-is-a-website-for-hosting-projects-that-use-git-for-version-control"&gt;
  &lt;/a&gt;
  GitHub is a website for hosting projects that use git for version control.
&lt;/h4&gt;



&lt;h2&gt;
  &lt;a href="#what-is-raw-git-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;git&lt;/code&gt; ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Git is a version control system (VCS) that makes easier to track changes to files(code). For example, when you edit a file, git can help you to determine exactly what changed in your file, who changed that file, and why change that.&lt;/li&gt;
&lt;li&gt;Git is a command line tool. it is very useful when we are working on team project or multiple people working on same project&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#what-is-raw-github-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;github&lt;/code&gt; ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;GitHub is a Git repository hosting service, but it adds many of its own features. GitHub provides a Web-based graphical interface. It also provides access control and several collaboration features&lt;/li&gt;
&lt;li&gt;Git also helps us to store our code safe and secure🔐 and many people use git and github daily to track their daily work. It makes them different from others.

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To use git we'll need to download and install git on our system by using &lt;a href="https://git-scm.com/downloads"&gt;git&lt;/a&gt;. There are both options are available in market. command-line interface(CLI) and graphical user interface(GUI) as Github desktop but I recommend CLI for beginners.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After installation to check if git was installed properly or not execute the command:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#first-step-after-installing-git"&gt;
  &lt;/a&gt;
  First step after Installing Git
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The first thing you should do when you install Git is to set your user-name and email address. This is important because every Git commit uses this information&lt;/li&gt;
&lt;li&gt;you can set your user-name and email using this commands and  also change them at any time
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"&amp;lt;User-Name&amp;gt;"&lt;/span&gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &amp;lt;Email&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#create-local-git-repository"&gt;
  &lt;/a&gt;
  Create local git repository
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;We'll require git repository to use functionalities of git by using given command.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;This'll create hidden &lt;code&gt;.git&lt;/code&gt; folder in current directory. this is the "repository"(or repo) where git stores all of its internal tracking data. Any changes you make to any files within the original folder will now be possible to track.&lt;/li&gt;
&lt;li&gt;The original directory is now referred as working directory.

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#staging"&gt;
  &lt;/a&gt;
  Staging
&lt;/h2&gt;

&lt;p&gt;The staging area (aka index) is a container where git collects all changes which will be part of the next commit.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use below showen comannd to add individual files into staging area
&lt;code&gt;git add &amp;lt;File1 path&amp;gt; &amp;lt;File2 path&amp;gt;...&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add README.md app/&lt;span class="k"&gt;*&lt;/span&gt;.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;we also stage all changes together&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add -A
OR
git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#status"&gt;
  &lt;/a&gt;
  status
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;git staus&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Above command is very useful. It gives overall status of working git directory&lt;/li&gt;
&lt;li&gt;The git status command displays the state of the working directory and the staging area. It lets you see which changes have been staged, which haven't, and which files aren't being tracked by Git.

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#commit"&gt;
  &lt;/a&gt;
  Commit
&lt;/h2&gt;

&lt;p&gt;The "commit" command is used to save your changes to the local repository. we also need commit message it is important to help other people understand what was changed and why you changed it.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;" &amp;lt;Commit message&amp;gt; "&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#push"&gt;
  &lt;/a&gt;
  push
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;git push&lt;/code&gt; command is used to upload local repository content to a remote repository.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;But there is one problem. we can't push directly our local repository to remote repo. in Order to do that first we need create repository on githuib and configure that remote repository with local repository. let's see how&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git remote add &amp;lt;remote_name&amp;gt; &amp;lt;remote_repo_url&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote add origin https://github.com/bhavinvirani/my_repo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;after creatig a repository on the GitHub, You will find the link on that repository itself&lt;/p&gt;

&lt;p&gt;Now, we can push our data on remote repository using this command&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;git push &amp;lt;remote_name&amp;gt; &amp;lt;remote_branch_name&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;If you are pushinga local branch for the first time on a remote, the "-u" option is helpful. It makes sure that a tracking connection between the local and your remote branch.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;After having set tracking connection, you can perform future pushes without providing additional options - since the tracking connection provides default values for the push command.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3&gt;
  &lt;a href="#here-i-show-whole-flow-of-git-commands"&gt;
  &lt;/a&gt;
  Here i Show whole flow of git commands
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;
&lt;span class="c1"&gt;// make same changes in working directory&lt;/span&gt;
&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;A&lt;/span&gt;
&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;commit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;made some changes in working directory&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;remote&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;origin&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/bhavinvirani/my_repo.git&lt;/span&gt;
&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;push&lt;/span&gt; &lt;span class="nx"&gt;origin&lt;/span&gt; &lt;span class="nx"&gt;master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this blog we learned basic command of git and how to push our local repository to remote repository, It is good to use git and github daily to track our code or data.&lt;/p&gt;

&lt;p&gt;Stay tuned for some advanced git commands and topics like branches and operations with remote repository which I cover in next article of this series&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#checkout-my-raw-github-%F0%9F%91%81-endraw-"&gt;
  &lt;/a&gt;
  checkout my &lt;code&gt;Github 👁&lt;/code&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bhavinvirani"&gt;
        bhavinvirani
      &lt;/a&gt; / &lt;a href="https://github.com/bhavinvirani/bhavinvirani"&gt;
        bhavinvirani
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;

&lt;/div&gt;  

&lt;h1&gt;
Hi 👋, I'm Bhavin!&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
🌱 currently I'm &lt;code&gt;learning&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
🥅 2021 Goal: Contribute to Open Source stuff&lt;/li&gt;
&lt;li&gt;
👯 I’m looking to collaborate on JS project&lt;/li&gt;
&lt;li&gt;
📪 How to reach me: &lt;code&gt;bhavinvirani45@gmail.com&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
Connect with me&lt;/h3&gt;

&lt;p&gt;
&lt;a href="https://www.linkedin.com/in/bhavin-virani-2a14441b7/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e3d78e5310a41c0667e07077cf93596229de398b154b83885dc068874ed5365/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c696e6b6564696e2d2532333145373742352e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d6c696e6b6564696e266c6f676f436f6c6f723d7768697465" alt="[/in/bhavin-virani-2a14441b7/](https://www.linkedin.com/in/bhavin-virani-2a14441b7/)" height="30" width="120"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/BhavinVirani45" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/13039975938e719b60e38191d050a182c1615f0e64a87494792c510ee111917a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d2532333030616365652e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d74776974746572266c6f676f436f6c6f723d7768697465" alt="[BhavinVirani45](twitter.com/BhavinVirani45)" height="30" width="100"&gt;&lt;/a&gt;
&lt;a href="https://dev.to/bhavinvirani" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd31e3397cb63ddbff05c6cc2c20e40ea5f2764cb752980c7dc62e2e09edc72d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6465762d2532333234323932652e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d646576646f74746f266c6f676f436f6c6f723d7768697465" alt="[/bhavinvirani](https://dev.to/bhavinvirani)" height="30" width="100"&gt;&lt;/a&gt;
&lt;a href="https://discord.com/channels/bhavin_45#0852" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/8cdc282c3750da790f197e36002d577eeee4bf783e0be1f946a73eaf1340d6a9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646973636f72642d253233303042332e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d646973636f7264266c6f676f436f6c6f723d7768697465" alt="https://discord.com/channels/bhavin_45#0852" height="30" width="100"&gt;

&lt;/a&gt;
&lt;/p&gt;




&lt;h3&gt;
Languages and Tools&lt;/h3&gt;

&lt;p&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QG_b2spU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/javascript/javascript-original.svg" alt="javascript" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://nodejs.org/en/docs/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MbyWitP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/nodejs/nodejs-original.svg" alt="javascript" width="40" height="40"&gt; &lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/devicons/devicon/master/icons/react/react-original.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7B8eMcKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/react/react-original.svg" width="40" height="40"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/bhavinvirani/bhavinvirani/main/#"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V-ExagyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/mongodb/mongodb-original-wordmark.svg" alt="mongodb" width="40" height="40"&gt; &lt;/a&gt;

 &lt;a href="https://www.python.org" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ka8K9yX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg" alt="python" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://www.w3.org/html/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QXRvq6Ke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/html5/html5-original-wordmark.svg" alt="html5" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://git-scm.com/" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/fbfcb9e3dc648adc93bef37c718db16c52f617ad055a26de6dc3c21865c3321d/68747470733a2f2f7777772e766563746f726c6f676f2e7a6f6e652f6c6f676f732f6769742d73636d2f6769742d73636d2d69636f6e2e737667" alt="git" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://www.w3schools.com/css/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mHD1LdvX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/css3/css3-original-wordmark.svg" alt="css3" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://getbootstrap.com" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--38b8DYFn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/bootstrap/bootstrap-plain-wordmark.svg" alt="bootstrap" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://heroku.com" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/df12cb598044a3f38efc1f45e3580558c324cf8789b79487125044eeebcc4dee/68747470733a2f2f7777772e766563746f726c6f676f2e7a6f6e652f6c6f676f732f6865726f6b752f6865726f6b752d69636f6e2e737667" alt="heroku" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://www.mysql.com/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IfMZ2i4X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/mysql/mysql-original-wordmark.svg" alt="mysql" width="40" height="40"&gt; &lt;/a&gt;
&lt;a href="https://www.linux.org/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vSVMkLYQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/linux/linux-original.svg" alt="linux" width="40" height="40"&gt; &lt;/a&gt;
&lt;/p&gt;




&lt;div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/884e0d1886d6bf88350bbc1f4b0163c618ce8412fd378bfa53718748b0b4082b/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f746f702d6c616e67733f757365726e616d653d62686176696e766972616e69267468656d653d6461726b266c616e67735f636f756e743d36266c6f63616c653d656e266c61796f75743d636f6d70616374"&gt;&lt;img src="https://camo.githubusercontent.com/884e0d1886d6bf88350bbc1f4b0163c618ce8412fd378bfa53718748b0b4082b/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f746f702d6c616e67733f757365726e616d653d62686176696e766972616e69267468656d653d6461726b266c616e67735f636f756e743d36266c6f63616c653d656e266c61796f75743d636f6d70616374" alt="bhavinvirani"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/170978bac3ed2ee09947e74522f9fca4080a98d146f5d1544fa14299db390a13/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d62686176696e766972616e69267468656d653d6461726b2626636f756e745f707269766174653d7472756573686f775f69636f6e733d7472756526686964653d697373756573"&gt;&lt;img src="https://camo.githubusercontent.com/170978bac3ed2ee09947e74522f9fca4080a98d146f5d1544fa14299db390a13/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d62686176696e766972616e69267468656d653d6461726b2626636f756e745f707269766174653d7472756573686f775f69636f6e733d7472756526686964653d697373756573" alt="bhavinvirani"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1fe71c8ea351bccd471794d02679f8277357816c52c5fb454bfee7d08c865e5e/68747470733a2f2f6769746875622d726561646d652d73747265616b2d73746174732e6865726f6b756170702e636f6d2f3f757365723d62686176696e766972616e69267468656d653d6461726b"&gt;&lt;img src="https://camo.githubusercontent.com/1fe71c8ea351bccd471794d02679f8277357816c52c5fb454bfee7d08c865e5e/68747470733a2f2f6769746875622d726561646d652d73747265616b2d73746174732e6865726f6b756170702e636f6d2f3f757365723d62686176696e766972616e69267468656d653d6461726b" alt="bhavinvirani"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/029218399283d3a9edf6117b31cb75fde56adf885cfbbea312100f3793be6c49/68747470733a2f2f6b6f6d617265762e636f6d2f67687076632f3f757365726e616d653d62686176696e766972616e69266c6162656c3d50726f66696c65253230766965777326636f6c6f723d306537356236267374796c653d666c6174"&gt;&lt;img src="https://camo.githubusercontent.com/029218399283d3a9edf6117b31cb75fde56adf885cfbbea312100f3793be6c49/68747470733a2f2f6b6f6d617265762e636f6d2f67687076632f3f757365726e616d653d62686176696e766972616e69266c6162656c3d50726f66696c65253230766965777326636f6c6f723d306537356236267374796c653d666c6174" alt="bhavinvirani" width="130" height="25"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bhavinvirani/bhavinvirani"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>beginners</category>
      <category>github</category>
      <category>git</category>
    </item>
    <item>
      <title>How to create a smooth draggable list with react in 10 mins</title>
      <author>Augustus Otu</author>
      <pubDate>Sun, 27 Jun 2021 11:43:01 +0000</pubDate>
      <link>https://dev.to/augani/how-to-create-a-smooth-draggable-list-with-react-in-10-mins-2fbn</link>
      <guid>https://dev.to/augani/how-to-create-a-smooth-draggable-list-with-react-in-10-mins-2fbn</guid>
      <description>&lt;p&gt;Welcome to another tutorial!!&lt;/p&gt;

&lt;p&gt;Today, we are going to create a draggable list that you can use in your react applications with ease, using framer-motion. If you go to their examples page on  &lt;a href="https://codesandbox.io/s/framer-motion-2-drag-to-reorder-fc4rt"&gt;codesandbox&lt;/a&gt; , you will see this implemented. In case you want to know how you can do it yourself, read on.&lt;/p&gt;

&lt;p&gt;To start, if you have a list of items in a container or div that you want to have your users reorder by just dragging one item over another to swap positions, it's not a hustle since you are in the right place. This is what we are going to build in a few minutes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SRiw6JXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624633429677/_MvQHtavH.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRiw6JXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624633429677/_MvQHtavH.gif" alt="chrome-capture.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the code, my favorite part!!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./style.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Item&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a normal react app where you are exporting the main component called App. We have another component below that will be the item in the main we will be dragging. A list that we map to produce our six items in the main app.&lt;/p&gt;

&lt;p&gt;For now, our item component is just normal div with no properties to make it interactive, we add the framer motion package since that is what we will be using.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add framer-motion //or
npm i framer-motion
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When its done doing it magic, we import it into our file and get the &lt;strong&gt;motion&lt;/strong&gt; element from &lt;em&gt;'framer-motion'&lt;/em&gt;. Then change our normal div in the &lt;strong&gt;Item&lt;/strong&gt; component to &lt;em&gt;motion.div&lt;/em&gt;, so we have properties we can use to drag and reorder the item when rendered.&lt;/p&gt;

&lt;p&gt;Next, we will have to add the properties we want to use;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;drag&lt;/strong&gt;- this will allow us drag our div when rendered in the page. This takes in two types, a boolean and string(x or y). When set to true, we can drag the component in both direction, when set to &lt;strong&gt;y&lt;/strong&gt; we can only drag it up or down and &lt;strong&gt;x&lt;/strong&gt;, left or right. For this tutorial we only want our users dragging it either up or down, so we set it to &lt;strong&gt;y&lt;/strong&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;motion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;drag&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;motion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is what the code looks like now. If you dragged the element, you will realise it goes outside our container that the list rendered in. We don't want that, so we need to add constraints to make sure users can only drag within the container.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;dragConstraints&lt;/strong&gt; - this takes an object of the four sides of the area the item is in, top, bottom, left, right. These accept values as pixels. How far away from the top, bottom, left or right should be the limit, where the component can't be dragged across. If you give it a &lt;strong&gt;top&lt;/strong&gt; of &lt;strong&gt;0&lt;/strong&gt;, it means the element can only be dragged to the very edge of the top of the parent component, in this case, our container.
If you give it a &lt;strong&gt;10&lt;/strong&gt;, it means it can be dragged up to 10px from the top of the parent component. For our case, we want it to be able to reach the edges and since we are only dragging on the &lt;strong&gt;y&lt;/strong&gt; axis, we only need to take care of the top and bottom.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;dragListeners&lt;/strong&gt; - One thing we also need to take care of is to know when the item is being dragged and when it is dropped after dragging. This will help us be able to reorder the items very well. 
When dragging the item, we might want to help the users know by performing some form of animation on the item being dragged by either increasing it in size or decreasing it, just to differentiate that from the other items.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;layout&lt;/strong&gt; - We will add this property as well to help us animate the item when dragging as it will be changing position i n the list. Framer motion has done a lot of work for us to have these cool stuff. &lt;a href="https://www.framer.com/api/motion/animation/#layout-animations"&gt;Read more&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;animations&lt;/strong&gt; - We also might want to add a couple of animations to the item that will be dragged, in our case, we can add the whileHover and whileTap properties or leave it, I ill but you can check the docs later and add. I think the name gives a hint about what each does. When the item is hovered, do this, when the item is tapped or clicked, do that.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;controls&lt;/strong&gt; - We want to add the various functions that will be called to help us reorder our list when it is dragged from one position to the other. They are &lt;strong&gt;updateOrder&lt;/strong&gt; and &lt;strong&gt;updatePosition&lt;/strong&gt;, and we will use the &lt;a href="https://codesandbox.io/s/framer-motion-2-drag-to-reorder-fc4rt?file=/src/use-position-reorder.js:0-1772"&gt;usePositionReOrder&lt;/a&gt; and &lt;a href="https://codesandbox.io/s/framer-motion-2-drag-to-reorder-fc4rt?file=/src/use-measure-position.js"&gt;useMeasurePosition&lt;/a&gt; hooks. We don't need to rewrite our own.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What &lt;strong&gt;usePositionReorder&lt;/strong&gt; hook does is reorder our list that is rendered when we drag an item from one position to the other and also updates the position of the item given its new position after the drag event. Use measure position uses the ref of the item to determine its position from where it was dragged from and where it has been placed and its index in the list. This is what it uses to send the data to &lt;strong&gt;updatePosition&lt;/strong&gt; from the &lt;strong&gt;usePositionReOrder&lt;/strong&gt; hook. So it will take data from the item being dragged such as its dragoffset vertically, since we are only dragging along the y axis. This will help the hook swap the item that we are changing positions with the dragged item.&lt;/p&gt;

&lt;p&gt;When the item is being dragged, aside from letting the component itself know that it is in a dragging state, we have to let our &lt;strong&gt;usePositionReOrder&lt;/strong&gt; hook know, using another property which is the &lt;strong&gt;onViewBoxUpdate&lt;/strong&gt; prop. This property is a callback that will fire every time the viewport is updated due to a drag activity. And it sends the delta of the item and the index to &lt;strong&gt;updateOrder&lt;/strong&gt; from the &lt;strong&gt;usePositionReorder&lt;/strong&gt; hook. The list is reordered and sent back to us in the &lt;strong&gt;orderedList&lt;/strong&gt; and a new list is rendered into our view. &lt;/p&gt;

&lt;p&gt;Our code finally looks like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./style.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;motion&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;framer-motion&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;usePositionReorder&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./usePositionReorder&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useMeasurePosition&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./useMeasurePosition&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item One&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item Two&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item Three&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item Four&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;updatedList&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updatePosition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateOrder&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePositionReorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;updatedList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Item&lt;/span&gt;
          &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="na"&gt;ind&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="na"&gt;updateOrder&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;updateOrder&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="na"&gt;updatePosition&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;updatePosition&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateOrder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updatePosition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ind&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isdragged&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDragged&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;itemRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMeasurePosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;updatePosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;motion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
      &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;zIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;isdragged&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;dragConstraints&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;dragElastic&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;layout&lt;/span&gt;
      &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;itemRef&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;onDragStart&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsDragged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;onDragEnd&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsDragged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;isdragged&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mf"&gt;1.05&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;onViewportBoxUpdate&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;delta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;isdragged&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;updateOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;delta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;drag&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;motion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When clicking to drag the items in the list, you will realize they are a bit hard to drag from one end to the other. We can add the &lt;strong&gt;dragElastic&lt;/strong&gt; property of 1 to make it smoother.&lt;/p&gt;

&lt;p&gt;Now this is our look&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GOI_l7fK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624791455644/WYNY6AiNu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GOI_l7fK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624791455644/WYNY6AiNu.gif" alt="chrome-capture (1).gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The possibilities are endless, so go ahead and build something with it. A &lt;a href="https://github.com/Augani/react-draggable-list"&gt;link&lt;/a&gt; to the repo to view the entire code and &lt;a href="https://react-wt4hcq.stackblitz.io"&gt;live&lt;/a&gt;.&lt;br&gt;
And explore more with framer motion &lt;a href="https://www.framer.com/api/motion/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Till next time..&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
