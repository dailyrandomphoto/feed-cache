<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Docker Selenium Grid¬†Setup</title>
      <author>Dilpreet Johal</author>
      <pubDate>Wed, 14 Jul 2021 14:52:46 +0000</pubDate>
      <link>https://dev.to/automationbro/docker-selenium-grid-setup-1lg4</link>
      <guid>https://dev.to/automationbro/docker-selenium-grid-setup-1lg4</guid>
      <description>&lt;p&gt;In this tutorial, we will cover how to set up Selenium Grid with Docker and also go over why we should use Selenium Grid. We will also increase max instances and max sessions for the Selenium Grid in Docker to run tests in parallel. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-do-we-need-selenium%C2%A0grid"&gt;
  &lt;/a&gt;
  Why do we need Selenium¬†Grid?
&lt;/h3&gt;

&lt;p&gt;So before we set up Selenium Grid with Docker, let's first understand why we even need Selenium Grid in the first place?¬†&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Multiple browsers/devices&lt;/strong&gt;: Grid makes it much easier for us to run tests on multiple browsers/devices¬†&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Test execution time&lt;/strong&gt;: You can reduce overall test execution time by running tests in parallel in Grid&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Infrastructure&lt;/strong&gt;: Setting up the infrastructure to run tests on multiple browsers/devices on different OS is also possible to do with the help of Grid&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HgWA3yVh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2d6zpw6z94col7gpjvkt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HgWA3yVh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2d6zpw6z94col7gpjvkt.png" alt="Selenium Grid"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#setting-up-selenium-grid-with%C2%A0docker"&gt;
  &lt;/a&gt;
  Setting up Selenium Grid with¬†Docker
&lt;/h3&gt;

&lt;p&gt;We need to run through the following steps to get Selenium Grid setup with Docker‚Ää-‚Ää&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Setup a network (grid) to communicate between images&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;docker network create grid&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Run selenium/hub docker image for running a Selenium Hub&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;docker run -d -p 4444:4444 --net grid --name selenium-hub selenium/hub:3.141.59‚Äì20210422&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: the network name (grid) should be the same as what you provided when creating the network&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Run Chrome &amp;amp; Firefox images connecting with grid network &amp;amp; selenium/hub host&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;docker run -d --net grid -e HUB_HOST=selenium-hub -v /dev/shm:/dev/shm selenium/node-chrome-debug:3.141.59‚Äì20210422&lt;br&gt;
docker run -d --net grid -e HUB_HOST=selenium-hub -v /dev/shm:/dev/shm selenium/node-firefox-debug:3.141.59‚Äì20210422&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: the network name (grid) should be the same as what you provided when creating the network and the HUB_HOST name (selenium-hub) should be the same as what you provided when running the selenium/hub docker image&lt;/p&gt;

&lt;p&gt;Now, head over to port 4444 and you should see Grid setup with Chrome and Firefox‚Ää-‚Ää&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XvjwWeJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fp2def1741gaj5x1iobh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XvjwWeJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fp2def1741gaj5x1iobh.png" alt="Selenium Grid with Chrome &amp;amp;¬†Firefox"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#increasing-the-maxinstances-amp-maxsessions-for-the%C2%A0grid"&gt;
  &lt;/a&gt;
  Increasing the MAX_INSTANCES &amp;amp; MAX_SESSIONS for the¬†Grid
&lt;/h3&gt;

&lt;p&gt;So far we just have 1 instance of Chrome &amp;amp; Firefox, however, if you need to run multiple tests together, you'll need more instances spun up. You can do that quite easily by adding the parameters when running the docker container for Chrome and Firefox.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker run -d --net grid -e HUB_HOST=selenium-hub -e NODE_MAX_INSTANCES=3 -e NODE_MAX_SESSION=3  -v /dev/shm:/dev/shm selenium/node-chrome-debug:3.141.59‚Äì20210422&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;You can pass NODE_MAX_INSTANCES and NODE_MAX_SESSION environment variables to add multiple instances of the browsers.¬†&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;NODE_MAX_INSTANCES&lt;/strong&gt;: number of instances of the same version of the browser&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;NODE_MAX_SESSION&lt;/strong&gt;: number of browsers (any versions) that can run in parallel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you do that, you will see something like this below‚Ää-‚Ää&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6tHEmDtP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/syu8ic37qdns0nc1cl81.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6tHEmDtP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/syu8ic37qdns0nc1cl81.png" alt="Selenium Grid with max instances &amp;amp; max¬†sessions"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#check-out-the-video-below-to-learn-more-about-how-to-setup-selenium-grid-with-docker-"&gt;
  &lt;/a&gt;
  Check out the video below to learn more about how to setup Selenium Grid with Docker ‚Äì
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/GxktKTtnSfk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;üìß Subscribe to my &lt;a href="https://automationbro.com/mailing-list"&gt;mailing list&lt;/a&gt; to get access to more content like this as well as free access to a Private Facebook community&lt;/p&gt;

&lt;p&gt;üëç You can follow my content here as well - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/automationbro"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/company/automation-bro"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;I love coffees! And, if this post helped you out and you would like to support my work, you can do that by clicking on the button below and buying me a cup of coffee -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/automationbro"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUHFj71T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4aw2ub3f4qkyjk0ivwt4.png" alt="Buy me a coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also support me by liking and sharing this content.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>docker</category>
      <category>testing</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Building JavaScript Frameworks to Conquer eCommerce</title>
      <author>Ryan Carniato</author>
      <pubDate>Wed, 14 Jul 2021 14:42:07 +0000</pubDate>
      <link>https://dev.to/this-is-learning/building-javascript-frameworks-to-conquer-ecommerce-3glc</link>
      <guid>https://dev.to/this-is-learning/building-javascript-frameworks-to-conquer-ecommerce-3glc</guid>
      <description>&lt;p&gt;There was a time that I would have never imagined the need to write an article like this. If you were to ask someone how a website worked, even 10 years ago, the answer would have been pretty simple. A site consists of a collection of HTML documents that reside at locations (URLs), that each describe how a page is displayed and provide links to navigate to additional pages. A web browser is used to request and display these pages.&lt;/p&gt;

&lt;p&gt;But in the past 10 years how we build for web has evolved significantly. The paradigm has flipped so much that it is the traditional Multi-Page Application (MPA) that requires explanation now that Single Page Apps (SPA) are becoming the ubiquitous product.&lt;/p&gt;

&lt;p&gt;When I talk about this I find many JavaScript developers don't understand the difference and how profound an impact it has. How Frameworks like &lt;a href="https://markojs.com/"&gt;Marko&lt;/a&gt;, &lt;a href="https://astro.build/"&gt;Astro&lt;/a&gt;, &lt;a href="https://elderguide.com/tech/elderjs/"&gt;Elder&lt;/a&gt;, or &lt;a href="https://github.com/BuilderIO/qwik"&gt;Qwik&lt;/a&gt; are a completely different architecture than &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;, &lt;a href="https://nuxtjs.org/"&gt;Nuxt.js&lt;/a&gt;, or &lt;a href="https://kit.svelte.dev/"&gt;SvelteKit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While SPA's bring a lot to the table, I'm going to talk today about where they are the less optimizable solution, and how that has been the motivation for a whole different sort of JavaScript framework.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-state-of-frontend-javascript-in-2021"&gt;
  &lt;/a&gt;
  The State of Frontend JavaScript in 2021
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l-9LNBkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q1clxfov5freuwwforjp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l-9LNBkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q1clxfov5freuwwforjp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The vast majority of JavaScript Frameworks are designed to help you make what we call Single Page Apps(SPA). &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;, &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;, &lt;a href="https://emberjs.com/"&gt;Ember&lt;/a&gt;, &lt;a href="https://preactjs.com/"&gt;Preact&lt;/a&gt;, &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;, &lt;a href="https://solidjs.com/"&gt;Solid&lt;/a&gt;, you name it. A SPA is simple an app where the whole experience is served from a single page sent from the the server(or CDN). This characteristic carries on in Metaframeworks built on top of these like &lt;a href="https://nextjs.org/"&gt;Next&lt;/a&gt;, &lt;a href="https://nuxtjs.org/"&gt;Nuxt&lt;/a&gt;, &lt;a href="https://www.gatsbyjs.com/"&gt;Gatsby&lt;/a&gt;, &lt;a href="https://kit.svelte.dev/"&gt;SvelteKit&lt;/a&gt;, &lt;a href="https://remix.run/"&gt;Remix&lt;/a&gt;, &lt;a href="https://blitzjs.com/"&gt;Blitz&lt;/a&gt;, etc..&lt;/p&gt;

&lt;p&gt;The defining trait is that these are built around client-side routing. That is that the browser handles navigation after initial page load without sending the request to the server. The JavaScript then re-renders portions page. They can opt into using server-side routing but the application runs through a single entry.&lt;/p&gt;

&lt;p&gt;These frameworks are really amazing to use and their use case has grown from their origins in admin dashboards and highly interactive apps, to branching into things like blogs, content sites, and eCommerce.&lt;/p&gt;

&lt;p&gt;However, for these sites where SEO is important as well as initial page load we face a problem. We need to have the pages rendered on the Server so that content is present when the page first appears.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#server-side-rendering-to-the-rescue"&gt;
  &lt;/a&gt;
  Server Side Rendering to the Rescue?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W1RZeSCs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fw1irczg26qz0hhvqeys.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W1RZeSCs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fw1irczg26qz0hhvqeys.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes and no. Server Rendering is not free. No one wants to maintain multiple applications all of sudden because things are on the server now. Projects have been working at creating a universal JavaScript environment where your single application code base seamlessly works on both server and browser.&lt;/p&gt;

&lt;p&gt;It can also be complicated to configure and host for different deployment environments. One easy solution is Static Site Generation. We can use the frameworks server rendering to render static HTML pages ahead of time.&lt;/p&gt;

&lt;p&gt;Now when the user requests the page it can be send the already pre-generated page to the browser. Since it is static it can be hosted in a CDN and this loads really quickly. A lot of solutions in this space even advertise how they have this quick initial render and then afterwards the client navigation takes over.&lt;/p&gt;

&lt;p&gt;But there are still a couple problems. First Static Generation doesn't lend to dynamic content. Sure nothing beats a pre-rendered page but if the page is customizable per person, and involves testing different products etc.. the combinatorics get prohibitively expensive quickly. There are situations where this is fine, and solutions are looking at pre-rendering 10's of thousands of pages in parallel but for dynamic content it just can't keep up to date without great cost.&lt;/p&gt;

&lt;p&gt;Even if that doesn't apply to your site the bigger issue is, Frameworks and libraries require a lot of JavaScript and that is expensive to load and parse even when the application is server rendered. Additionally, in order to make the application interactive in the browser JavaScript Frameworks need to hydrate or walk over their component tree in the browser to create the initial framework scaffolding and wire up event listeners. This all takes time and directly impacts end user experience.&lt;/p&gt;

&lt;p&gt;Now we've seen these frameworks let you turn off JavaScript for certain pages but it's basically all or nothing. This is serviceable but we can do much better if we know that we are optimizing for First Paint and Time to Interactivity.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#return-of-multi-page-applications"&gt;
  &lt;/a&gt;
  Return of Multi Page Applications
&lt;/h2&gt;

&lt;p&gt;So what does viewing apps as a collection of separate pages have going for it? Most of the content on the page never needs to be rendered in the browser.&lt;/p&gt;

&lt;p&gt;How much of your page actually needs to be re-rendered? The answer is probably very little. How many points on the page can the user interact with? Probably not as many as you think, when you remove all navigation from from the picture. How about if you can remove all the async loading too?&lt;/p&gt;

&lt;p&gt;This isn't necessarily no JavaScript(although it can be), just way less of it. You can see this is difficult for an application written as if it were all one big application. Code splitting doesn't really save you here. If the page shares a single root that renders top-down how can we view this thing independently? We can prune unused branches but not the trunk.&lt;/p&gt;

&lt;p&gt;Very few frameworks optimize for this since they aren't setup to build this way. When you have chains of props running down through a component tree it's hard to break this apart. You really only have 3 options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Don't. Manually break your page into a bunch of micro-apps or Islands. (&lt;a href="https://astro.build/"&gt;Astro&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Do all data passing through dependency injection. Every part of your page is independent and ship as needed. (&lt;a href="https://github.com/BuilderIO/qwik"&gt;Qwik&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Have a compiler smart enough to understand the statefulness of your application and output optimized bundles. (&lt;a href="https://markojs.com/"&gt;Marko&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These all require special consideration. The first requires you to identify the islands and only scales as well as you are diligent. The second forces you to push state outside of your components which puts a lot of pressure on DX, like can you pass &lt;code&gt;props.children&lt;/code&gt;? Are there limits to what can be serialized? The 3rd is immensely complicated and requires specialized language and years of R&amp;amp;D to pull off. &lt;/p&gt;

&lt;p&gt;But the results are obvious. Here's a simple example of the impact the &lt;a href="https://markojs.com/"&gt;Marko&lt;/a&gt; team saw when toggling this optimization off some eBay pages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7v9bWwhb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xg72pekb8evfjgw93l9q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7v9bWwhb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xg72pekb8evfjgw93l9q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's 60%-84% savings. Why so much? Having components only on the server also means certain API wrappers, and formatters like Moment and Lodash just never need to reach the browser. &lt;a href="https://markojs.com/"&gt;Marko&lt;/a&gt; no-bundle Streaming also helps in this case since it can serve the page immediately without waiting for async calls. It can stream content into server rendered placeholders in real-time all without pulling the library in.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#to-the-point"&gt;
  &lt;/a&gt;
  To the Point
&lt;/h2&gt;

&lt;p&gt;If you need the cutthroat performance for that initial load like you do in eCommerce where milliseconds mean potential lost sales. Where you can't be guaranteed the network or the device power of your customers. You aren't reaching for a framework like &lt;a href="https://nextjs.org/"&gt;Next&lt;/a&gt;. It just isn't optimized for that. Even if you are using it with a smaller library like &lt;a href="https://preactjs.com/"&gt;Preact&lt;/a&gt; here you still are doing way too much in the browser.&lt;/p&gt;

&lt;p&gt;You might be thinking, what about things coming in React 18 like &lt;a href="https://reactjs.org/blog/2020/12/21/data-fetching-with-react-server-components.html"&gt;Server Components&lt;/a&gt; and Streaming SSR? These can help but they don't change the physics alone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3mOZoe3a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xox3r57ll2wtr8qz2l34.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3mOZoe3a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xox3r57ll2wtr8qz2l34.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Streaming SSR is incredibly powerful as seen already in &lt;a href="https://markojs.com/"&gt;Marko&lt;/a&gt; and &lt;a href="https://solidjs.com"&gt;Solid&lt;/a&gt; as it removes the initial delay on async data. You can remove most of the overhead over static site generation this way, but it alone doesn't reduce the amount of JavaScript sent.&lt;/p&gt;

&lt;p&gt;Server Components make it much easier to write customized APIs. This saves sending the Lodash and Moment to the browser, but you are still running client side diffs, the template is getting sent via API. You can view this as lazy loading/hydration of sorts, but it actually increases the core library size to handle it. If you think about it a different way, given Server Component rules these would just be the static parts an MPA would never be sending to the browser anyway!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Right tool for the job. Yada yada. In all seriousness though, while I dream of a point in the future where this is all the same thing today, MPA frameworks can optimize in ways that are just not available to those building with SPA architecture in mind.&lt;/p&gt;

&lt;p&gt;It doesn't take a different language or platform. I'm not saying pull out Rails or Django. You can still get that modern single application JavaScript execution and feel already with the tools available. But if you care about the greatest performance on your initial page loads you aren't going to find that with the likely candidates.&lt;/p&gt;

&lt;p&gt;Next time you come across a new solution for eCommerce that promotes its speed. Ask if it is optimized for MPAs, because most likely if not, it is more of the same.&lt;/p&gt;

&lt;p&gt;This isn't new but revisiting web foundations. But it's been a decade so maybe it's time. Don't get me wrong. I'm an author of one of those SPA frameworks. One that prides itself on being the &lt;a href="https://dev.to/ryansolid/introducing-the-solidjs-ui-library-4mck"&gt;fastest of them all on client and server&lt;/a&gt;. But architecture trumps raw speed almost every time when comes to delivering the best user experience. So depending on your use case &lt;a href="https://medium.com/@mlrawlings/maybe-you-dont-need-that-spa-f2c659bc7fec"&gt;Maybe you don't need that SPA?&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>marko</category>
      <category>astro</category>
    </item>
    <item>
      <title>Cut down your Webpack build times by half with esbuild-loader</title>
      <author>Burhanuddin Udaipurwala</author>
      <pubDate>Wed, 14 Jul 2021 14:35:36 +0000</pubDate>
      <link>https://dev.to/burhanuday/cut-down-your-webpack-build-times-by-half-2bh6</link>
      <guid>https://dev.to/burhanuday/cut-down-your-webpack-build-times-by-half-2bh6</guid>
      <description>&lt;p&gt;It's been a common practice in the web dev world to transpile Javascript code with tools built with... well Javascript. Webpack is a code bundler that takes in all your code along with dependencies from node_modules and spits out chunks of code depending on your configuration.&lt;/p&gt;

&lt;p&gt;The problem with Javascript is that it's slow and that is visible in tools like Webpack and Rollup. But there are new kids on the block, namely esbuild, Vite and Snowpack. Snowpack and Vite internally use esbuild. esbuild is written in Golang which offers significant performance boosts.&lt;/p&gt;

&lt;p&gt;There is one problem though: these tools are new and might not have all the plugins you need for your next project. Or, you just don't want to leave the Webpack world yet.&lt;/p&gt;

&lt;p&gt;As your project grows larger, your build times get longer. There is a need to reduce build times.&lt;/p&gt;

&lt;p&gt;When I say reduce build times, I also mean the time it takes to start your local dev server and the time taken for Hot Module Replacement. &lt;code&gt;esbuild-loader&lt;/code&gt; offers significant improvements in all these areas&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-comes-esbuildloader"&gt;
  &lt;/a&gt;
  In comes esbuild-loader
&lt;/h2&gt;

&lt;p&gt;What if you could harness the power of esbuild within webpack? Let's get started with a code example.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I will be using a &lt;a href="https://github.com/ReactJSResources/react-webpack-babel"&gt;React boilerplate&lt;/a&gt; that uses Webpack and Babel. Feel free to use this on any project of your choice&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Clone the repo on your machine with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/ReactJSResources/react-webpack-babel.git
&lt;span class="nb"&gt;cd &lt;/span&gt;react-webpack-babel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install dependencies with NPM&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's run &lt;code&gt;npm run build&lt;/code&gt; before adding &lt;code&gt;esbuild-loader&lt;/code&gt; to compare build times&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;webpack 5.4.0 compiled successfully in 6127 ms&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pKPjyc7T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cy8880hc3bx4v6abu37w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pKPjyc7T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cy8880hc3bx4v6abu37w.png" alt="before esbuild-loader"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add &lt;code&gt;esbuild-loader&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  npm i &lt;span class="nt"&gt;-D&lt;/span&gt; esbuild-loader
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change your &lt;code&gt;webpack.config.json&lt;/code&gt; file to replace &lt;code&gt;babel-loader&lt;/code&gt; with &lt;code&gt;esbuild-loader&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can find this file in the root of your project. For the boilerplate, it's in the config folder. If you are using &lt;code&gt;create-react-app&lt;/code&gt; you will have to eject.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;    module.exports = {
      module: {
        rules: [
  -       {
  -         test: /\.js$/,
  -         use: 'babel-loader',
  -       },
  +       {
  +         test: /\.js$/,
  +         loader: 'esbuild-loader',
  +         options: {
  +           loader: 'jsx',
  +           target: 'es2015'
  +         }
  +       },
          ...
        ],
      },
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Webpack uses Terser to minify JS and CSS. You can replace that with the &lt;code&gt;ESBuildMinifyPlugin&lt;/code&gt; for a much faster minification process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  + const { ESBuildMinifyPlugin } = require('esbuild-loader')
    module.exports = {
      ...,
  +   optimization: {
  +     minimizer: [
  +       new ESBuildMinifyPlugin({
  +         target: 'es2015',
  +         css: true 
  +       })
  +     ]
  +   },
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run &lt;code&gt;npm run build&lt;/code&gt; to test it again&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;webpack 5.4.0 compiled successfully in 1904 ms&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CLn_L2AJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8f0iy9sq8u8ahd2oj1jb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CLn_L2AJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8f0iy9sq8u8ahd2oj1jb.png" alt="After esbuild-loader"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-a-pretty-significant-boost"&gt;
  &lt;/a&gt;
  That's a pretty significant boost!
&lt;/h2&gt;

&lt;p&gt;For an empty project, we reduced the build times to a third of the original build time. For larger and more realistic projects, you can expect build times closer to half of that with &lt;code&gt;babel-loader&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The time taken to start the dev server was less than a second!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We can expect bundlers like Vite and Snowpack to grow in popularity with time. Till they become mainstream, &lt;code&gt;esbuild-loader&lt;/code&gt; offers a great way to speed up builds.&lt;/p&gt;

&lt;p&gt;Don't forget to star &lt;a href="https://github.com/privatenumber/esbuild-loader"&gt;privatenumber/esbuild-loader&lt;/a&gt; on Github&lt;/p&gt;

</description>
      <category>webpack</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>101 Guide on How to Write a Contract as a Developer</title>
      <author>C√©sar Rovira</author>
      <pubDate>Wed, 14 Jul 2021 14:33:54 +0000</pubDate>
      <link>https://dev.to/rovira_acm/101-guide-on-how-to-write-a-contract-as-a-developer-586</link>
      <guid>https://dev.to/rovira_acm/101-guide-on-how-to-write-a-contract-as-a-developer-586</guid>
      <description>&lt;h3&gt;
  &lt;a href="#the-type-of-contract-that-i-will-displaying-in-this-post-as-an-example-will-mostly-be-of-what-is-known-as-a-fixed-budget-contract"&gt;
  &lt;/a&gt;
  The type of contract that I will displaying in this post as an example will mostly be of what is known as a 'Fixed Budget' Contract
&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;So first off..&lt;/strong&gt;&lt;br&gt;
as it's being shown in the following image, you write up the title that will be representing the central purpose of the contract, then the date, on which all participating entities are supposed to be meeting up to come to an agreement, then you state the participating 'parties' or 'entities'.&lt;/p&gt;

&lt;p&gt;You will write and clarify how &lt;strong&gt;YOU&lt;/strong&gt; or &lt;strong&gt;YOUR COMPANY&lt;/strong&gt; will be addressed in the document, then you will also clarify how &lt;strong&gt;YOUR CLIENT&lt;/strong&gt; will also be addressed, and finally how the &lt;strong&gt;PRODUCT&lt;/strong&gt; or &lt;strong&gt;SERVICE&lt;/strong&gt; that you will be providing will be addressed.&lt;/p&gt;

&lt;p&gt;In this case, you would be naming yourself, in this example, as the &lt;strong&gt;'Service Provider'&lt;/strong&gt;, your client as the &lt;strong&gt;'Service Requestor'&lt;/strong&gt; and the service or product that you provide as the &lt;strong&gt;'Requested Product'&lt;/strong&gt;; you can name each entity with whatever name seems the most appropiate, as long as it's professional and it addresses all entities in a formal manner.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n5aoT5Ik--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwa2kf4ttlg3up2drr2y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n5aoT5Ik--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwa2kf4ttlg3up2drr2y.png" alt="Image 1"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Now, in the following section..&lt;/strong&gt;&lt;br&gt;
the &lt;strong&gt;'STATEMENTS'&lt;/strong&gt; &lt;em&gt;(each part, whether it's a subtitle or category, it has to be written in capital letters)&lt;/em&gt; you will first introduce your company's information and also your client will have to do the same, although depending on how your client will be represented, it will depend the structure of this part of the contract; as you will be able to see in the following images, there are 2 options for your client, to be represented by a &lt;strong&gt;'Moral Person'&lt;/strong&gt;, which is someone or a group of people that have a limited or restricted amount of responsibilities regarding anything that is related with the contract; whereas the &lt;strong&gt;'Physical Person'&lt;/strong&gt; could be an executive or the CEO itself that is acting directly and explicitly as the 'SERVICE REQUESTOR'.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(There are different concepts and definitions on what exactly is a Moral Person or a Physical Person; but for this sole case, just bear in mind these two)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M77XGZxJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wbwe6lurr7kx34yt03t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M77XGZxJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wbwe6lurr7kx34yt03t.png" alt="Image 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HLV449Zc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ud94qp9cqr4upccwk90.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HLV449Zc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ud94qp9cqr4upccwk90.png" alt="Image 3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V4xxYc0v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/51f0ri178vnhh1wuaaor.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4xxYc0v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/51f0ri178vnhh1wuaaor.png" alt="Image 4"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Now, here lies what is the main body of the contract,&lt;/strong&gt;&lt;br&gt;
which is clearly the most important part of it, depending on how you structure it, will depend how well the mutual treatment between you and your client will de during the entire duration of the provided service or project.&lt;/p&gt;

&lt;p&gt;You can write them up in any order the clauses of the contract &lt;em&gt;(obviously, that will depend on any manner that you will be wanting to structure it)&lt;/em&gt;, although the 'Laws related to the contract' section should always go at last.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;So, first off&lt;/strong&gt;, the &lt;u&gt;purposes of the provided service&lt;/u&gt;, &lt;em&gt;(it is something that &lt;strong&gt;SHOULD&lt;/strong&gt; and &lt;strong&gt;MUST&lt;/strong&gt; always be discussed prior to the declaration and reviewal of the contract, just as &lt;strong&gt;WHAT&lt;/strong&gt; is exactly that you will be developing and &lt;strong&gt;FOR WHAT&lt;/strong&gt;, these are always labeled as the 'prerequisites' of a piece of software, and evidently it is something that you have to discuss with your client before anything else)&lt;/em&gt; in this contract example I have written it in a manner that ensures that the client will not be using the 'Requested Product' for anything else that isn't related to what was discussed.&lt;/p&gt;

&lt;p&gt;Finally, you write up the delivery date, which clearly is &lt;strong&gt;WHEN&lt;/strong&gt; the project has to be brought to your client, and this is also something that is part of the prerequisites that you have to clarify with your client &lt;em&gt;(in other words, it's the deadline that you stablished on the estimation of time that you might take to fully finish the project).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BanqMOCm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99o5aa77rplc3799nbl8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BanqMOCm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99o5aa77rplc3799nbl8.png" alt="Image 5"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now, at this subsection, I reiterate that the &lt;strong&gt;'Requested Product'&lt;/strong&gt; will not be used, nor sold to anybody who is an external entity &lt;em&gt;(or third-party entity)&lt;/em&gt; to the contract and also not used on whatever purposes the product does not cover that were discussed with the client; &lt;strong&gt;&lt;u&gt;UNLESS&lt;/u&gt;&lt;/strong&gt; you are actually making a piece of software for an intermediary, then you have to clarify that what you developed MUST NOT be sold to anybody else that isn't related with your client's company or business.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n1xYVWy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pt1d7j37vd44bpnuw2bl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n1xYVWy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pt1d7j37vd44bpnuw2bl.png" alt="Image 6"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;So, now something that you must always be fair, but strict with your client: your well-deserved payment&lt;/strong&gt;&lt;br&gt;
First, you clarify the total amount of your payment, for what I wrote between the square brackets, you have to write it like this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;$30,000.00 (thirty thousand u.s. dollars 00/100 Ntl. Cur.)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(the &lt;strong&gt;Ntl. Cur. abbreviations mean National Currency&lt;/strong&gt;, and on the written part of such amount, you obviously have to write the currency that belongs to the country that you are currently residing at, in this example I just decided to write it as U.S. dollars, even though I currently do not live there).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Right after that, I decided to wrote in this example contract, that a &lt;u&gt;Payment In-Advance&lt;/u&gt; is required &lt;em&gt;(it is recommended for you to add this, as it is a warrant for you or you and your company for any inconvenients that may appear between you and your client)&lt;/em&gt; which is just a small portion of the total amount of the payment &lt;em&gt;(obviously, you have to discount such portion from the total amount once the client has paid it to you; otherwise due to obvious reasons it will seem like you have charged your client more than what had been stablished)&lt;/em&gt;, I decided it to be just 1/4 of the total final payment, but you can stablsih any quantity or percentage that you want &lt;em&gt;(and it clearly has to be an amount that seems fair with your client).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r8WdkJ5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6zxrb5gqx42fkyp93u4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r8WdkJ5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6zxrb5gqx42fkyp93u4.png" alt="Image 7"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now, you will discuss about the Payment In-Advance, about WHEN the client has to pay it and what sanctions will face if it is not paid in-time; in this example, the main sanction will be that for each day that passes after the stablished day for the payment in-advance, it will get acummulated a 25% of the final total payment, and such sanction will stop stop once the client has paid such amount with everything that got acummulated on it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E65yOQXq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3fjdtazmw8vylzpy8oy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E65yOQXq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3fjdtazmw8vylzpy8oy.png" alt="Image 8"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, what must be discussed in the following subsection is the quantity of business days that the client has to pay you for the 'Requested Product' and under what conditions the available business days that your client has to pay your start, and finally what sanctions your client would be facing in case it doesn't pay in-time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(In this example contract, I decided to stablish the same sort of sanction of the payment in-advance one).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vBwXiXv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0os6rba948br00edku4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vBwXiXv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0os6rba948br00edku4.png" alt="Image 9"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Now, the following section will tell about what sort of warrants you and your client have under certain conditions, such as when the client decides to cancel the development of the requested product, in this example, if the client cancels the project 1 day or 1 week before the stablished deadline, it would have to pay half of what the amount of the final payment is supposed to be and again, the corresponding sanction to not paying that amount in-time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KQ5VkwG2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jz5efirqg564kkb26a33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KQ5VkwG2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jz5efirqg564kkb26a33.png" alt="Image 10"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(As some extra info. about this part, the &lt;strong&gt;"DO NOT WRITE HERE"&lt;/strong&gt; watermark is there to let your client know that there will be nothing added there before nor after the contract is signed; because those blank areas might make it seem that there could be something added without letting your client know, and due to that, it might also leave a feeling of untrust on your client).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(This also applies for situations when you are the one that is mainly going to be affected in any manner by a contract, you should be wary and careful with anything that has any blank spaces, because as mentioned, anything could be added there without your consent and without ever letting you know about any changes on the contract).&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;In the following section, you have to tell your client of what you are responsible for, of what certain factors you are responsible for bringing to the client as part of what the 'Requested Product' IS and HAS TO BE, also you could let your client know that you have available the training of its employees &lt;em&gt;(you could add this only if necessary, also I described that I would chage an extra amount for each one of this employees that needs training for maintaining the source code of the project; and to clarify this, that wouldn't mean that you don't have to provide documentation for the source code, because &lt;strong&gt;you OBVIOUSLY HAVE TO write the docs of what you developed&lt;/strong&gt;).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then, in the following paragraph of the same section, you will tell your client that you will be responsible for preserving a backup copy of the source code of the project and that you will not ever sell nor distribute it to any external entities or parties that are not related with your client's company and especially not related with the contract.&lt;/p&gt;

&lt;p&gt;Right after that, you will tell your client that you will be responsible for fixing any found bugs after the project got delivered to it; but you will also tell your client that before doing so, you will be making a comparison with the backup copy of the source code to make sure that your client didn't spoil the source code in purpose in order for you to add more features for free.&lt;/p&gt;

&lt;p&gt;For making quick comparisons on 2 files, you could try out any Hashcode-generators and compare each file that was reported with a bug with the original one‚Ä¶ or you could just visually compare the files visually at the parts where bugs were reported.&lt;/p&gt;

&lt;p&gt;And again, all of this is necessary to ensure that your client didn't purposely disrupt the source code in order to get additional features in it for no cost at all.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zcri77DQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jn4rof465mwu3ic939lk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zcri77DQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jn4rof465mwu3ic939lk.png" alt="Image 11"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9mIZOIO_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwrntmz907d6gt5w047t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9mIZOIO_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwrntmz907d6gt5w047t.png" alt="Image 12"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pdNqBN-D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zx3ogtaj7su35gop4lvg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pdNqBN-D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zx3ogtaj7su35gop4lvg.png" alt="Image 13"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the next subsection, you will clarify to your client that no information of any of the participating entities/parties in the contract will be distributed nor sold to any external entity. In summarize, that there is nothing to worry about when it comes to your personal information and the client's personal information.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c2pBm1fu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp0lc83mvknydaufnkcd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c2pBm1fu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp0lc83mvknydaufnkcd.png" alt="Image 14"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the part that will mostly ensure that all statements are respected or the part that will avoid them from being disrupted or disrespected, the laws that the contract will be attachted to or related to; you can add whichever you need or feel to be necessary, although in this example I believe I added the ones that are the utmost necessary.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;(And, as an extra note, I decided to only include the title of each law, in order to summarize everything as possible, but I will be mentioning implicit references about which articles of those laws I included at the example contract).&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, first the Federal National Laws:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;"Federal National Copyright Law"&lt;/strong&gt; &lt;em&gt;(the name may vary depending on the country that you are currently residing at)&lt;/em&gt;, these will protect your source code from what previously got stated, the possible and &lt;em&gt;(obviously)&lt;/em&gt; non-allowed selling or distribution of the source code by your client to any external entities &lt;em&gt;(only if you were not developing a project for an intermediary).&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;(From this one I only included the ones related to Software or code).&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;"Mexican Federal Penal Code"&lt;/strong&gt;, right now you must be wondering why did I include the Penal Code of my country, well just liek the one mentioned previously, I just included the articles that are the most related to this situation, which would be:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;The suffered jeopardy from the selling or distribution of any personal information and the sanctions that it would have against the person that performed such action.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If any loss of data is provoked to your company or to your client's company due to anything that happens and that is obviously related to the stablished and discussed project.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And for many other things that could derivate from these 2 situations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;"Political Constitution of the Mexican United States"&lt;/strong&gt;, from which I only included the articles related to the protection of personal data, to ensure that both your client's and your personal data &lt;em&gt;(also your employees' data, if you have any)&lt;/em&gt; is protected from being distributed or sold by any participating parties in the contract; obviously you will have to include the ones from the country that you are currently residing at.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;"National Code for Criminal Procedures"&lt;/strong&gt;, which I included just to reinforce the previous laws subsection of the contract about the protection of personal data.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VwKhkm1y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tzgngbcm47jvw282ycq6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VwKhkm1y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tzgngbcm47jvw282ycq6.png" alt="Image 15"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, I wrote up the interntational laws that the contract could be related to, I only included the "Universal Declaration of Human Rights", from which I included the part that talks about the protection of oneself's own data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JcOAAxmv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2xriu9ff50cp9j69mpa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JcOAAxmv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2xriu9ff50cp9j69mpa.png" alt="Image 16"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And for the last subsection of this part of the contract I decided to include the laws of the state that I currently live at and that are related with the contract.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SLuU9k4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogtlvafgx5w72wc1e3ho.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SLuU9k4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogtlvafgx5w72wc1e3ho.png" alt="Image 17"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;And at last, the signatures section&lt;/strong&gt;, in here it doesn't matter if you leave any blank spaces below or after this one, as nothing that comes after it is applicable nor valid; evidently only everything that is above or went before this final section is what will always be valid until the very end of the project with the client.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;In here there should be not only your signature and your client's signature, but also the signatures of your witness and your client's witness&lt;/u&gt;; the witnesses of a contract are the ones that ensure that each entity/party has come to an agreement once each one of them has signed the contract, and due to that it is fully required for them to also sign it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Usually each party/entity has at least 2 witnesses, but in this example contract I just decided to add 1 for each party/entity).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Also, every participating party/entity has to write up its signature on each page of the contract.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p7cHkhCO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3e0fk37570hl4tabmhax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p7cHkhCO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3e0fk37570hl4tabmhax.png" alt="Image 18"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And that's it!&lt;/strong&gt;, you've just learnt how to make a good enough contract that is fair with your work condition, fair with the time that you will be spending on the project and making that time worth, and fair with your client &lt;em&gt;(but, as metioned at the start, strict when it comes to the payment that the client has to deliver to you).&lt;/em&gt;&lt;/p&gt;



&lt;p&gt;Originally published at:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="https://blog.devgenius.io/101-guide-on-how-to-write-a-contract-as-a-developer-f861bbc57193" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cd_spGKr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/fit/c/96/96/1%2A-D7mT4Q1DosYOTb9vrXd5w.jpeg" alt="C√©sar A. Rovira Montero"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://blog.devgenius.io/101-guide-on-how-to-write-a-contract-as-a-developer-f861bbc57193" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Write a Contract | by C√©sar A. Rovira Montero | Medium | Dev Genius&lt;/h2&gt;
      &lt;h3&gt;C√©sar A. Rovira Montero „Éª &lt;time&gt;Jul 13, 2021&lt;/time&gt; „Éª 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ze5yh_2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium_icon-90d5232a5da2369849f285fa499c8005e750a788fdbf34f5844d5f2201aae736.svg" alt="Medium Logo"&gt;
        blog.devgenius.io
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;If this post was any helpful and useful to you, consider supporting me:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ko-fi.com/R6R74C1KS"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KS7c42cU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.ko-fi.com/cdn/kofi1.png%3Fv%3D2" alt="Buy Me a Coffee at ko-fi.com"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How To Use Axios in an Optimized and Scalable Way With React</title>
      <author>Nilanth</author>
      <pubDate>Wed, 14 Jul 2021 14:22:46 +0000</pubDate>
      <link>https://dev.to/nilanth/how-to-use-axios-in-an-optimized-and-scalable-way-with-react-518n</link>
      <guid>https://dev.to/nilanth/how-to-use-axios-in-an-optimized-and-scalable-way-with-react-518n</guid>
      <description>&lt;p&gt;We can see how to use &lt;a href="https://axios-http.com/"&gt;Axios&lt;/a&gt; in an optimized and scalable way in a React app.&lt;/p&gt;

&lt;p&gt;When you are building an API-based React app, an HTTP client is the core service that needs to be added to the architecture. There are many HTTP client libraries for React. When deciding which to choose, Axios might be the first choice of most developers.&lt;/p&gt;

&lt;p&gt;Axios is an HTTP client library with many advantage features. It can be used in browsers and &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;. In this article, we will see how to utilize all the advanced Axios features in a scalable and optimized way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#axios-instance"&gt;
  &lt;/a&gt;
  Axios Instance
&lt;/h2&gt;

&lt;p&gt;Creating an Axios instance is more important for a large-scale app, as all the base configuration lies in a single file. A change in the base config can be done easily in a single file and will be reflected anywhere the Axios instance is used. Check out the below code snippet&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Based on the above code, we have configured all the base setup using default config, which will be applied to every request which uses the axiosClient instance, as shown in the below request.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#axios-verbs"&gt;
  &lt;/a&gt;
  Axios Verbs
&lt;/h2&gt;

&lt;p&gt;We can group the Axios HTTP verbs, like &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, and &lt;code&gt;PATCH&lt;/code&gt;, in the base config file, as below.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Now we can import the custom functions directly wherever we need to make an API request, as in the below code.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#timeout"&gt;
  &lt;/a&gt;
  Timeout
&lt;/h2&gt;

&lt;p&gt;The Axios timeout option allows setting the request timeout in milliseconds. It is easy to configure timeout in Axios. It can be defined in the base config itself, as we saw before.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timeout: 2000 // Request will be timeout after 2 seconds.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#intercept-request"&gt;
  &lt;/a&gt;
  Intercept Request
&lt;/h2&gt;

&lt;p&gt;Using a request intercept, you can write or execute before it is sent. Check out the below code snippet.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Here we have added the &lt;code&gt;contentType&lt;/code&gt; header before the request is made. Request interceptors are asynchronous by default, which might cause some delay in Axios request execution. To avoid this, we have used &lt;code&gt;synchronous: true&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intercept-response"&gt;
  &lt;/a&gt;
  Intercept Response
&lt;/h2&gt;

&lt;p&gt;Using Request intercept you can write or execute before the response reaches &lt;code&gt;then&lt;/code&gt;. Response interceptors can be used to log out the user on token expiry (401 status) or you can refresh the token and make the failed request again to make the user stay on the same page, for good UX.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#upload-progress"&gt;
  &lt;/a&gt;
  Upload Progress
&lt;/h2&gt;

&lt;p&gt;You can track upload progress in Axios very easily using the &lt;code&gt;onUploadProgress&lt;/code&gt; option. &lt;code&gt;onUploadProgress&lt;/code&gt; allows handling of progress events for uploads. This can be used to show the upload percentage live to the user, to acknowledge to them the upload is in progress. Check out the below code.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/axios/axios"&gt;Axios GitHub repository&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Axios is a great HTTP client package for React and its community. I hope you have found this useful. Thank you for reading.&lt;/p&gt;

&lt;p&gt;Need to learn more? Feel free to connect on &lt;a href="https://twitter.com/Nilanth"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Published my first npm package!</title>
      <author>Steven Rathbauer</author>
      <pubDate>Wed, 14 Jul 2021 14:03:20 +0000</pubDate>
      <link>https://dev.to/rathpc/published-my-first-npm-package-4f1f</link>
      <guid>https://dev.to/rathpc/published-my-first-npm-package-4f1f</guid>
      <description>&lt;h1&gt;
  &lt;a href="#as-the-title-suggests-i-published-my-very-first-npm-package-earlier-this-week"&gt;
  &lt;/a&gt;
  As the title suggests, I published &lt;a href="https://www.npmjs.com/package/@rathpc/zendesk-react"&gt;my very first npm package&lt;/a&gt; earlier this week!
&lt;/h1&gt;

&lt;p&gt;This is something that has definitely been long overdue, and I should have been doing for years. I have so many random code things I have done to simplify or abstract processes or components but have just never committed the time to actually sharing it out to the world. Well, now I have!!!&lt;/p&gt;

&lt;p&gt;I hope to continue this trend and publish more packages in the future, but in the meantime here is some info about the package:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rathpczendeskreact"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/@rathpc/zendesk-react"&gt;@rathpc/zendesk-react&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A minimal component based implementation to include Zendesk in your React application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you are using the Zendesk integration in your React application, you might find this useful. It essentially gives you a way to include the integration without explicitly needing to add the script yourself in an HTML file or template being passed into your bundler of choice.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This makes it a bit easier to consume and tweak usage based on environment.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#feel-free-to-try-it-out-and-let-me-know-if-there-is-anything-you-want-to-see-added-to-it-or-changed-i-plan-to-add-some-more-thorough-typing-of-the-raw-zendeskapi-endraw-function-usage-based-on-the-zendesk-docs-so-it-will-be-even-easier-to-use-and-have-auto-completion"&gt;
  &lt;/a&gt;
  Feel free to try it out and let me know if there is anything you want to see added to it or changed! I plan to add some more thorough typing of the &lt;code&gt;zendeskApi&lt;/code&gt; function usage based on the Zendesk docs so it will be even easier to use and have auto completion!!!
&lt;/h3&gt;




&lt;p&gt;&lt;em&gt;&lt;strong&gt;Sidenote&lt;/strong&gt;: This effort was definitely inspired by another package (react-zendesk) that is also available but it hasn't been maintained in quite some time. My intention was to build on that idea, update the logic to leverage newer React syntax and capabilities (16.8+) as well as write it purely in Typescript.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>npm</category>
    </item>
    <item>
      <title>I made an app that shows you your keyboard and mouse usage (with a keyboard heatmap)</title>
      <author>Virej Dasani</author>
      <pubDate>Wed, 14 Jul 2021 14:00:17 +0000</pubDate>
      <link>https://dev.to/virejdasani/i-made-an-app-that-shows-you-your-keyboard-and-mouse-usage-with-a-keyboard-heatmap-532l</link>
      <guid>https://dev.to/virejdasani/i-made-an-app-that-shows-you-your-keyboard-and-mouse-usage-with-a-keyboard-heatmap-532l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-keystroke-count"&gt;
  &lt;/a&gt;
  What is &lt;a href="https://virejdasani.github.io/KeystrokeCount/"&gt;Keystroke Count&lt;/a&gt;?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Keystroke Count is an open-source, desktop app that you can use to get data for your keystrokes!&lt;/li&gt;
&lt;li&gt;Keystroke Count keeps all your keystroke data locally stored and NO data including your keystrokes is ever collected.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rFWJ2cmRuBM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-is-what-the-app-looks-like"&gt;
  &lt;/a&gt;
  This is what the app looks like
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tiqIsMrw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0iawlo5pn5iow59rgh6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tiqIsMrw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0iawlo5pn5iow59rgh6g.png" alt="keystroke Count"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;After about 20 minutes of using it üëÜ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AkCVFqOz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgyh8szrzw3ha68yskik.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AkCVFqOz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgyh8szrzw3ha68yskik.png" alt="keystroke Count"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;After gaming on my laptop üëÜ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#how-is-it-made"&gt;
  &lt;/a&gt;
  How is it made?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Keystroke Count is made using ElectronJS&lt;/li&gt;
&lt;li&gt;It uses JavaScript, HTML and CSS&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#a-star-on-the-github-repo-would-be-much-appreciated"&gt;
  &lt;/a&gt;
  A star ‚≠ê on &lt;a href="https://github.com/virejdasani/KeystrokeCount"&gt;the GitHub repo&lt;/a&gt; would be much appreciated!
&lt;/h2&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Let's do some animations in native Javascript</title>
      <author>Romain Trotard</author>
      <pubDate>Wed, 14 Jul 2021 13:59:54 +0000</pubDate>
      <link>https://dev.to/romaintrotard/let-s-do-some-animations-in-native-javascript-23jl</link>
      <guid>https://dev.to/romaintrotard/let-s-do-some-animations-in-native-javascript-23jl</guid>
      <description>&lt;p&gt;Did you ever wanted to do some animation in your application but didn't know how to do it.&lt;/p&gt;

&lt;p&gt;In this article we are gonna see how to throw particles at click, like in the gif below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--56E_sHiY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58lztrjd94dn3iy0uoh9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--56E_sHiY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58lztrjd94dn3iy0uoh9.gif" alt="Firework animation at click"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#elementanimate-api"&gt;
  &lt;/a&gt;
  Element.animate API
&lt;/h2&gt;

&lt;p&gt;To animate a DOM element, we have to call the function &lt;code&gt;animate&lt;/code&gt;. The function signature is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;domElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keyframes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;keyframes&lt;/code&gt; are the parts of the animation. If you pass an array with a single Element, the initial position will be the actual position of the element. Otherwise it will be the first value in the &lt;code&gt;keyframes&lt;/code&gt; array.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; If the initial position of the animation is different from the position in the DOM, there will be a glitch at the beginning or at the end of the animation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qcl1CDTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsuex3l5asfgej41ccgx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qcl1CDTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsuex3l5asfgej41ccgx.gif" alt="Animation glitch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;options&lt;/code&gt; can be an integer that represents the duration of the animation or an object with multiple properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;duration&lt;/code&gt;: the duration of the animation&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;iterations&lt;/code&gt;: the number of iteration of the animation (Infinity for an endless animation)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;delay&lt;/code&gt;: to put some delay to the animation&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#infinity-square"&gt;
  &lt;/a&gt;
  Infinity square
&lt;/h2&gt;

&lt;p&gt;In this part, we are going to make a circle move on a square:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;point 1: the initial point&lt;/li&gt;
&lt;li&gt;point 2: translation by the axe y from the point 1&lt;/li&gt;
&lt;li&gt;point 3: translation by the axes x and y from the point 1&lt;/li&gt;
&lt;li&gt;point 4: translation by the axe x from the point 1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We finally get the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Let's get our circle element&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Knowing the square 150px sides&lt;/span&gt;
&lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="c1"&gt;// The initial position is the current one&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;translateY(150px)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;translate(150px, 150px)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;translateX(150px)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="c1"&gt;// The final position is the current one&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;iterations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;Infinity&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We finally get the following animation: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dZMR3gYK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5r1m3u9r9yye432g65y.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dZMR3gYK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5r1m3u9r9yye432g65y.gif" alt="Circle makes square animation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lets-code-the-click-firework"&gt;
  &lt;/a&gt;
  Let's code the click firework
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#add-element-dynamically"&gt;
  &lt;/a&gt;
  Add element dynamically
&lt;/h3&gt;

&lt;p&gt;For this example we will have to add element dynamically. Let's create a div on click:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we want to put some style on this element, we gonna add some inline styles with &lt;code&gt;element.style.myStyleProperty&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// A list of all possible colors&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;COLORS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pink&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;purple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Get the position of the cursor in the document&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;clientX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;clientY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;border&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px solid black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// The elements are in absolute position&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;absolute&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// We want our cursor to be centered in the square&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;translate(-50%, -50%)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// Get a color randomly&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nx"&gt;COLORS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;COLORS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#animation"&gt;
  &lt;/a&gt;
  Animation
&lt;/h3&gt;

&lt;p&gt;Aright, currently we have a square that spawns under the mouse on click.&lt;/p&gt;

&lt;p&gt;Let's add some random diagonal animation to this square.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Math.random() - 0.5 returns integer between -0.5 and 0.5&lt;/span&gt;
      &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`translate(&lt;/span&gt;&lt;span class="p"&gt;${(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px) rotate(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;520&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;deg)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="c1"&gt;// We want to reduce the opacity until 0&lt;/span&gt;
      &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="mi"&gt;1500&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nice, it's working, but actually it's not perfect, because the square stays visible at the end of the animation:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OuxfKF3Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hhxkzyhi504yt891bxr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OuxfKF3Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hhxkzyhi504yt891bxr.gif" alt="Problem of display at the end of animation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Actually, we could just change the initialization of the &lt;code&gt;div&lt;/code&gt; and the animation to add the &lt;code&gt;border&lt;/code&gt; and &lt;code&gt;background-color&lt;/code&gt; during the animation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;COLORS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;COLORS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
      &lt;span class="na"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px solid black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Math.random() - 0.5 returns integer between -0.5 and 0.5&lt;/span&gt;
      &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`translate(&lt;/span&gt;&lt;span class="p"&gt;${(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px) rotate(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;520&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;deg)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="c1"&gt;// We want to reduce the opacity until 0&lt;/span&gt;
      &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="mi"&gt;1500&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Well, there is no more, display's problem, but if you look at the DOM the div stays. It can be a problem when we are going to do the fireworks with a lot of &lt;code&gt;div&lt;/code&gt;, the DOM will at each click increases.&lt;/p&gt;

&lt;p&gt;Luckily, &lt;code&gt;domElement.animate&lt;/code&gt; returns an animation, on which we can get a Promise which is resolved when the animation is finished. Let's just remove the dom element when the animation is ended:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;finished&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;createdElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can also do this with an event handler &lt;code&gt;onfinish&lt;/code&gt; put on the animation:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onfinish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;createdElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#firework"&gt;
  &lt;/a&gt;
  Firework
&lt;/h3&gt;

&lt;p&gt;Now, let's code the easy part: create multiple particles (with a loop):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// A list of all possible colors&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;COLORS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pink&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;purple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// Defines the particle number&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PARTICLES_NUMBER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createParticle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;border&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px solid black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// The elements are in absolute position&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;absolute&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// We want our cursor to be centered in the square&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;translate(-50%, -50%)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// Get a color randomly&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nx"&gt;COLORS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;COLORS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;animation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Math.random() - 0.5 returns integer between -0.5 and 0.5&lt;/span&gt;
        &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`translate(&lt;/span&gt;&lt;span class="p"&gt;${(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px) rotate(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;520&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;deg)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="c1"&gt;// We want to reduce the opacity until 0&lt;/span&gt;
        &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="mi"&gt;1500&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Remove the particle at the end of animation&lt;/span&gt;
  &lt;span class="nx"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onfinish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Get the position of the cursor in the document&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;clientX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;clientY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Create multiple particles&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;PARTICLES_NUMBER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;createParticle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we go :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this little article, we've just seen how to do basic animations in javascript, with a nice firework animation on click, but the power is unlimited.&lt;/p&gt;

&lt;p&gt;Now it's your turn to play with animations :D&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/firework-animation-at-click-4ovk0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Want to see more ? Follow me on &lt;a href="https://twitter.com/romain_trotard"&gt;Twitter&lt;/a&gt; or go to my &lt;a href="https://rainbowapps.io/"&gt;Website&lt;/a&gt;. üêº&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>O que √© SCORM?</title>
      <author>meydele</author>
      <pubDate>Wed, 14 Jul 2021 13:47:32 +0000</pubDate>
      <link>https://dev.to/feygele/o-que-e-scorm-4il2</link>
      <guid>https://dev.to/feygele/o-que-e-scorm-4il2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-scorm"&gt;
  &lt;/a&gt;
  O que √© SCORM?
&lt;/h2&gt;

&lt;p&gt;SCORM √© um padr√£o internacional para e-cursos. Se o seu curso for publicado no formato SCORM, voc√™ pode ter certeza de que praticamente qualquer sistema de gerenciamento de aprendizagem (EaD) ir√° reconhec√™-lo.&lt;/p&gt;

&lt;p&gt;Padr√µes s√£o importantes em qualquer campo. Tomemos como exemplo a ind√∫stria cinematogr√°fica. Quando voc√™ compra um DVD, voc√™ tem certeza que ser√° capaz de assistir em qualquer DVD player: Toshiba ou Panasonic ‚Äî isso simplesmente n√£o importa. Isso √© poss√≠vel porque o DVD √© um padr√£o aceito; √© por isso que os est√∫dios de cinema n√£o t√™m que produzir diferentes tipos de discos para cada marca de player.&lt;/p&gt;

&lt;p&gt;Infelizmente, essa era a situa√ß√£o no e-learning no √≠nicio dos anos 2000: os cursos eram criados para uma plataforma. Um e-curso criado para um sistema n√£o funcionaria em outro. Se uma universidade mudasse o seu EaD, perderia toda a sua cole√ß√£o de cursos, bem como os milhares de d√≥lares gastos no seu desenvolvimento. Em 2001, o formato SCORM colocou o mercado de e-learning em ordem.&lt;/p&gt;

&lt;p&gt;De fato, SCORM √© uma lista de requisitos t√©cnicos. Esta lista nos diz como criar um curso que ir√° funcionar em qualquer plataforma ‚Äì h√° uma descri√ß√£o detalhada da estrutura do e-curso e dos princ√≠pios de sua intera√ß√£o com os EaDs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.ispringpro.com.br/blog/que-e-scorm"&gt;Ler mais&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>O que √© um LMS?</title>
      <author>meydele</author>
      <pubDate>Wed, 14 Jul 2021 13:42:25 +0000</pubDate>
      <link>https://dev.to/feygele/o-que-e-um-lms-28ce</link>
      <guid>https://dev.to/feygele/o-que-e-um-lms-28ce</guid>
      <description>&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-um-lms"&gt;
  &lt;/a&gt;
  O que √© um LMS?
&lt;/h2&gt;

&lt;p&gt;Um LMS √© uma plataforma para aprendizagem digital. Suas principais caracter√≠sticas podem ser encontradas na abrevia√ß√£o.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;L ‚Äî Learning (Aprendizado)&lt;/strong&gt;. Com um LMS, voc√™ pode criar uma √∫nica fonte de &lt;a href="https://www.ispringpro.com.br/blog/como-criar-um-curso-online"&gt;cursos online&lt;/a&gt; e materiais de treinamento. Isso se tornar√° uma fonte √∫nica de conhecimento em sua √°rea, para que voc√™ possa manter e aumentar a expertise interna de sua empresa.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;M ‚Äî Management (Gerenciamento)&lt;/strong&gt;. Voc√™ pode gerenciar cursos e alunos e at√© mesmo melhorar a sua pr√≥pria efici√™ncia.&lt;/p&gt;

&lt;p&gt;Ao contr√°rio dos servi√ßos de compartilhamento de arquivos, um LMS n√£o √© apenas um amontoado de arquivos; pelo contr√°rio, √© um sistema bem organizado onde voc√™ gerencia o processo de treinamento. Para iniciar o treinamento, basta adicionar colaboradores e atribuir cursos.&lt;/p&gt;

&lt;p&gt;Voc√™ contratou novos colaboradores recentemente? Envie-lhes convites para o curso de treinamento de integra√ß√£o. Est√° tendo problemas com vendas baixas? Pe√ßa a seus vendedores para praticar com clientes virtuais.&lt;/p&gt;

&lt;p&gt;Gra√ßas a fun√ß√µes como calend√°rio, voc√™ poder√° atribuir e gerenciar n√£o apenas o treinamento online, mas tamb√©m as sess√µes em &lt;a href="https://www.ispringpro.com.br/blog/sala-de-aula-invertida"&gt;sala de aula&lt;/a&gt;. Dessa forma, um LMS pode ser uma esp√©cie de app de tarefas projetado especialmente para alunos √† dist√¢ncia.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;S ‚Äî Sistema&lt;/strong&gt;. Sistema de computador, para ser exato. Um LMS automatiza o trabalho mais chato e tedioso, como atribuir notas, processar estat√≠sticas e preparar relat√≥rios. Al√©m disso, voc√™ pode treinar seus colaboradores sem sair do escrit√≥rio, gerenciando todos os processos diretamente do seu computador de trabalho.&lt;/p&gt;

&lt;p&gt;Em outras palavras, um LMS √© como sua pr√≥pria universidade online. O sistema permite que voc√™ armazene e crie cursos online, fornece aos alunos acesso ao conte√∫do e ajuda a avaliar os resultados.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.ispringpro.com.br/blog/o-que-e-lms"&gt;Ler mais&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Styled Components 101 üíÖ Lecture 1: Introduction + Setup in a React Environment ‚öõÔ∏è</title>
      <author>_CODE</author>
      <pubDate>Wed, 14 Jul 2021 13:36:15 +0000</pubDate>
      <link>https://dev.to/underscorecode/styled-components-101-lecture-1-introduction-setup-in-a-react-environment-476c</link>
      <guid>https://dev.to/underscorecode/styled-components-101-lecture-1-introduction-setup-in-a-react-environment-476c</guid>
      <description>&lt;p&gt;Hello, everybody! üëã&lt;br&gt;
And welcome to the first lecture of the &lt;strong&gt;Styled Components 101 series&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In this series, we will be thoroughly covering different topics related with Styled Components.&lt;/p&gt;

&lt;p&gt;Still don't know what Styled Components are? It seems like you're in luck because we start with the first lesson right now! üëá&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-are-styled-components"&gt;
  &lt;/a&gt;
  What are Styled Components? üíÖ
&lt;/h1&gt;

&lt;p&gt;Styled Components is a &lt;strong&gt;modern tool used to generate components&lt;/strong&gt; out of the most basic HTML elements, which also allows you to &lt;strong&gt;write your custom CSS styles&lt;/strong&gt; for them in JavaScript by making use of the &lt;em&gt;tagged template literals&lt;/em&gt; feature.&lt;/p&gt;

&lt;p&gt;Styled Components &lt;strong&gt;gets rid of the mapping between components and styles&lt;/strong&gt;, so, when declaring your CSS, what you're actually doing is creating a regular React component that has its own styles attached.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#installation-%F0%9F%96%A5"&gt;
  &lt;/a&gt;
  Installation üñ•
&lt;/h1&gt;

&lt;p&gt;If you use &lt;strong&gt;&lt;em&gt;npm&lt;/em&gt;&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;styled-components
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you use &lt;strong&gt;&lt;em&gt;yarn&lt;/em&gt;&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add styled-components
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#getting-styled-components-ready-to-work-with-react"&gt;
  &lt;/a&gt;
  Getting Styled Components ready to work with React ‚öõÔ∏è
&lt;/h1&gt;

&lt;p&gt;This is the best part: &lt;strong&gt;no extra configuration is needed to start using Styled Components with React&lt;/strong&gt;. In next lectures, we'll see how to configure Styled Components to get it to work with frameworks like Next.js and how to integrate them with SSR (&lt;em&gt;Server Side Rendering&lt;/em&gt;). But, for now, everything's ready on React side. Keep tuned to this series of Styled Components if you want to learn further üò∫&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-our-first-styled-component"&gt;
  &lt;/a&gt;
  Creating our first &lt;em&gt;styled&lt;/em&gt; component üê£
&lt;/h1&gt;

&lt;p&gt;There are a couple ways to define a &lt;em&gt;styled&lt;/em&gt; component. Personally, my favorite is to &lt;strong&gt;keep the component independent&lt;/strong&gt;, defined in its own file, as we regularly do with React components. But, although conceptually speaking, this is the best way of &lt;strong&gt;keeping an app properly modularized and making a good use of abstraction&lt;/strong&gt;, the approach of declaring a styled component within another component is widely extended as well. Not my favorite, but also valid. &lt;/p&gt;

&lt;p&gt;Our first &lt;em&gt;styled&lt;/em&gt; component will be a &lt;strong&gt;Button&lt;/strong&gt;. Let's see how we can define it using the Styled Components syntax:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;StyledButton.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`
   background-color: #7b4cd8;
   color: #fff;
   padding: 10px;
   border: none;
   border-radius: 5px;
   font-size: 1.25rem;
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in the example above, we're using plain CSS syntax inside of &lt;em&gt;backticks&lt;/em&gt; to make our styles understandable to JavaScript.&lt;/p&gt;

&lt;p&gt;And then, we just have to import our component wherever we want it to be rendered:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;StyledButton&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/StyledButton&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I am a styled button! üòº&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our first &lt;em&gt;styled&lt;/em&gt; button will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H4SrliOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/niao7kcx4r2e25f1vruo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H4SrliOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/niao7kcx4r2e25f1vruo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#styling-our-component-through-props"&gt;
  &lt;/a&gt;
  Styling our component through &lt;em&gt;props&lt;/em&gt; üíÅ‚Äç‚ôÇÔ∏è
&lt;/h1&gt;

&lt;p&gt;In the previous example, all the styles have been predefined by us and every rendered &lt;code&gt;StyledButton&lt;/code&gt; will have the exact same appearance. &lt;/p&gt;

&lt;p&gt;But, &lt;strong&gt;can we render the same type of component multiple times to create different components and apply different styles to them?&lt;/strong&gt; The answer is yes and what we're going to do to get this behavior is &lt;strong&gt;passing props&lt;/strong&gt; with custom values to our &lt;em&gt;styled&lt;/em&gt; button.&lt;/p&gt;

&lt;p&gt;Let's say we want to have three buttons with different background and text colors, but with the same padding, border radius and font size.&lt;/p&gt;

&lt;p&gt;Then, we're going to do something like this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;StyledButtonWithProps.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`
   background-color: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
   color: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
   padding: 10px;
   border: none;
   border-radius: 5px;
   font-size: 1.25rem;
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's now call our three buttons:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;StyledButtonWithProps&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/StyledButtonWithProps&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledButtonWithProps&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#ffc3c3"&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#b6201e"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Button üçì&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledButtonWithProps&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledButtonWithProps&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#ffdaca"&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#d85d16"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Button üçë&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledButtonWithProps&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledButtonWithProps&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#fff4c7"&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#bb9922"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Button üçã&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledButtonWithProps&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oqi4a-LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xj7jv428wwt4s4m2aj0l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oqi4a-LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xj7jv428wwt4s4m2aj0l.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#styling-our-component-conditionally"&gt;
  &lt;/a&gt;
  Styling our component conditionally üíÅ
&lt;/h1&gt;

&lt;p&gt;Let's now have a look at how we can style our button component by adding some conditions.&lt;/p&gt;

&lt;p&gt;This time, let's say we want to have a different background color for our button depending on its type value, which will be passed in to the component through the &lt;em&gt;prop&lt;/em&gt; &lt;strong&gt;&lt;em&gt;buttonType&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Then we should do the following:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;StyledButton.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`
   &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buttonType&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buttonType&lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;primary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;
   &lt;span class="s2"&gt;`background-color: #7b4cd8; color: #fff; font-size: 1.25rem;`&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="s2"&gt;`background-color: #ff31ca; color: #ffe6f9; font-size: 0.95rem;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
   padding: 10px;
   border: none;
   border-radius: 5px;
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the prop &lt;em&gt;buttonType&lt;/em&gt; exists and has a value of &lt;em&gt;primary&lt;/em&gt;, then the component will get the first set of style properties. Otherwise, the second.&lt;/p&gt;

&lt;p&gt;Note that the style properties defined outside the condition block, &lt;strong&gt;remain the same for all components&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let's now call our buttons:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;StyledButton&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/StyledButton&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledButton&lt;/span&gt; &lt;span class="na"&gt;buttonType&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"primary"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I am a Primary Button! üëÜ&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I am a different kind of button! üëá&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And there we are:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_jKjQjuV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl38wif2w5qtw4ztnpfs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_jKjQjuV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl38wif2w5qtw4ztnpfs.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#inheriting-styles-from-another-component"&gt;
  &lt;/a&gt;
  Inheriting styles from another component üë®‚Äçüëß‚Äçüë¶
&lt;/h1&gt;

&lt;p&gt;Even though the aforementioned method of passing style properties by using component props works well in every scenario, if our app starts to grow, we can find the process of creating components tedious and repetitive.&lt;/p&gt;

&lt;p&gt;And now's when &lt;strong&gt;&lt;em&gt;constructors&lt;/em&gt;&lt;/strong&gt; come to rescue: we can have a &lt;em&gt;supercomponent&lt;/em&gt;  (like a &lt;em&gt;superclass&lt;/em&gt;, making reference to inheritance in OOP ü§ì), which styles can be inherited by other components.&lt;/p&gt;

&lt;p&gt;This means that every &lt;em&gt;children&lt;/em&gt; component that inherit from the &lt;em&gt;supercomponent&lt;/em&gt; will have the supercomponent styles in addition to its own custom styles. &lt;/p&gt;

&lt;p&gt;Let's see how we can &lt;em&gt;connect&lt;/em&gt; them:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SuperButton.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`
   color: #fff;
   width: 200px;
   height: 50px;
   border: none;
   border-radius: 5px;
   font-size: 1.25rem;
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;ChildrenButton.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;SuperButton&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./SuperButton&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;SuperButton&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;`
   background-color: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ChildrenButton&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/ChildrenButton&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ChildrenButton&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"deeppink"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello! üëã &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ChildrenButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ChildrenButton&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"hotpink"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello! üëã &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ChildrenButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ChildrenButton&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"coral"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello! üëã &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ChildrenButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yOBt2k2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o74t82cubwt62d71qmr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yOBt2k2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o74t82cubwt62d71qmr3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#can-i-use-css-preprocessors-like-sass-or-less-to-write-my-styles-instead-of-plain-css"&gt;
  &lt;/a&gt;
  Can I use CSS preprocessors like SASS or LESS to write my styles instead of plain CSS?
&lt;/h1&gt;

&lt;p&gt;Not really. But you can still make use of their most common features. &lt;/p&gt;

&lt;p&gt;Styled Components is based on the paradigm &lt;strong&gt;&lt;em&gt;CSS-in-JS&lt;/em&gt;&lt;/strong&gt;, so, technically, we need to use plain CSS to define them. However, we can kinda &lt;em&gt;emulate&lt;/em&gt; the behavior of a preprocessor: Styled Components allows us to define variables or nest selectors, for example.&lt;/p&gt;

&lt;p&gt;The following snippet would be far correct in Styled Components:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;StyledDiv.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
   p{
      font-family: 'Arial', sans-serif;
      font-size: 1.5rem;
      color: deeppink;
      &amp;amp;.primary{
         font-weight: bold;
      }
   }
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And by calling it like this...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;StyledDiv&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/StyledDiv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledDiv&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"primary"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello from a Styled Div!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledDiv&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...this is what we get: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yk8VY4a_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsbcvd06qpg9ff9ex0kf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yk8VY4a_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsbcvd06qpg9ff9ex0kf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This behavior is doable because Styled Components uses a preprocessor, called &lt;strong&gt;&lt;em&gt;stylis&lt;/em&gt;&lt;/strong&gt;, under the hood, so it supports &lt;strong&gt;scss-like syntax&lt;/strong&gt;, which is really cool for nesting and using pseudo-elements and pseudo-classes out of the box.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#so-that-means-i-can-also-add-a-nested-pseudoelement-to-my-styled-component-right"&gt;
  &lt;/a&gt;
  So, that means I can also add a nested pseudo-element to my &lt;em&gt;styled&lt;/em&gt; component, right? ü§î
&lt;/h1&gt;

&lt;p&gt;Absolutely yes.&lt;/p&gt;

&lt;p&gt;This time, we'll define a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element to append it some content. Let's take a step further and let's add that content based on a condition.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;StyledP.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="s2"&gt;`
   {$props =&amp;gt; props.before ? `&lt;/span&gt;
   &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="nx"&gt;b4cd8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nx"&gt;before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;${props.before}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;` : 
   `&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;ff31ca&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="s2"&gt;`
   }
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;StyledP&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/StyledP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledP&lt;/span&gt; &lt;span class="na"&gt;before&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"_"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;CODE&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledP&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledP&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I don't have a ::before üò¢&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledP&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Et &lt;em&gt;voil√†&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZOMUeWH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpnbau749jnumwwmmksm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZOMUeWH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpnbau749jnumwwmmksm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If a &lt;em&gt;prop&lt;/em&gt; called &lt;em&gt;before&lt;/em&gt; is found, its value will be appended in front of the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element itself, and the component will also receive the specified text color. Otherwise, since the condition would never be satisfied, the only style property the component would get would be the color.&lt;/p&gt;




&lt;p&gt;And this is all for this first Styled Components 101 lecture! &lt;/p&gt;

&lt;p&gt;In next episodes, we'll keep delving into all the amazing features of Styled Components and how we can integrate them into our projects.&lt;/p&gt;

&lt;p&gt;I hope you found this article useful and I see you all in the next üëã&lt;/p&gt;




&lt;p&gt;üéâ Don't forget to follow &lt;a class="mentioned-user" href="https://dev.to/underscorecode"&gt;@underscorecode&lt;/a&gt;
 on &lt;a href="https://instagram.com/underscorecode"&gt;Instagram&lt;/a&gt; and &lt;a href="https://twitter.com/underscorecode"&gt;Twitter&lt;/a&gt; for more daily webdev content üñ•üñ§&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#and-last-but-not-least-a-quick-friendly-reminder-before-we-go"&gt;
  &lt;/a&gt;
  And last but not least... A quick friendly reminder before we go üòä
&lt;/h4&gt;

&lt;p&gt;We all know there are million ways to get things done when it comes to programming and development, and we're here to &lt;strong&gt;help and learn&lt;/strong&gt;, so, if you know another possible way to do what others are sharing (&lt;strong&gt;not better, not worse, just different&lt;/strong&gt;), feel free to share it if you feel like it, but, please, &lt;strong&gt;always be kind and respectful&lt;/strong&gt; with the author and the rest of the community. Thank you and happy coding!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Tamper Resistant Nature of a Blockchain ‚õì</title>
      <author>The Nerdy Dev</author>
      <pubDate>Wed, 14 Jul 2021 13:35:15 +0000</pubDate>
      <link>https://dev.to/thenerdydev/tamper-resistant-nature-of-a-blockchain-123i</link>
      <guid>https://dev.to/thenerdydev/tamper-resistant-nature-of-a-blockchain-123i</guid>
      <description>&lt;p&gt;Hey everyone üëãüèª,&lt;/p&gt;

&lt;p&gt;In this article, let us understand the &lt;strong&gt;Tamper Resistant Nature of a Blockchain&lt;/strong&gt;. This is the third part of my &lt;strong&gt;Blockchain Series&lt;/strong&gt; on Dev.  &lt;/p&gt;

&lt;p&gt;üì¶ ‚Üî üì¶ ‚Üî üì¶ ‚Üî üì¶ ‚Üî üì¶ ‚Üî üì¶ &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E2%9C%8F-tamper-resistant-nature-of-a-blockchain-%E2%9B%93"&gt;
  &lt;/a&gt;
  ‚úè Tamper Resistant Nature of a Blockchain ‚õì
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--28J3Yrdd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jr27o1cu2udviq4g9fl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--28J3Yrdd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jr27o1cu2udviq4g9fl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every block üì¶ of the blockchain contains its own hash value and the hash of the previous block (&lt;strong&gt;previous block hash&lt;/strong&gt;) in the blockchain. These hash values chain the blockchain together in order in which the most recent block was made and goes all the way to the very first block that was created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AC58UORf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bl5bvw7qfmt9h7uppdow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AC58UORf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bl5bvw7qfmt9h7uppdow.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whenever the data of a block gets changed, the hash of the block needs to be &lt;strong&gt;re-computed&lt;/strong&gt; and this &lt;strong&gt;invalidates&lt;/strong&gt; the block.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AbfB-OeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgesngl9wjt5rgt7a7w2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AbfB-OeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgesngl9wjt5rgt7a7w2.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now as a &lt;em&gt;consequence&lt;/em&gt; of this (hash of the block changing), it also changes the hash of the block that exists on the next block. This changes the data in that block as well changing the hash value and hence this block will also get invalidated too. This change of hash values will run all the way down to the set of the blocks effectively breaking the entire chain. This proves that blockchain is &lt;strong&gt;TAMPER PROOF&lt;/strong&gt; ! &lt;/p&gt;

&lt;p&gt;So this is it for the third article on Blockchain. Thanks for reading !&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Looking to learn React.js with one Full &lt;strong&gt;Project&lt;/strong&gt;, check this out : &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/learn-react-with-one-big-project-notes-included-demo-and-video-link-4fe5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn React with one BIG Project [NOTES included] - Demo and Video Link&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Jun 10 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#100daysofcode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;üëâüèª Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;üëâüèª Check out my YouTube Channel : &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>blockchaindeveloper</category>
      <category>100daysofcode</category>
      <category>blockchainengineer</category>
    </item>
  </channel>
</rss>
