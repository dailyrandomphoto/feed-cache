<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>AWS Lambda</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 31 Aug 2021 06:41:38 +0000</pubDate>
      <link>https://dev.to/this-is-learning/aws-lambda-2je9</link>
      <guid>https://dev.to/this-is-learning/aws-lambda-2je9</guid>
      <description>&lt;p&gt;AWS Lambda is function as service in AWS it means that we define what we want to run on AWS as a function and AWS runs it it does not matter how much RAM, storage it requires. It does not require you to provision any servers. It also runs on demand and you pay for compute time and no of times you run required function. It can scale infinitely. Scaling and pay on compute time makes it a service of choice for many developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You don't need to manage any servers for your back end service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It lets you run I million requests and 400 thousand of compute time in free tier so that you can get well versed with it before using it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Easy pricing you have to pay for compute time and number for request&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Language support Node.js, Python, Golang C# etc and all other using many API provided custom API&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very easy to add resources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Only used as for resources when needed&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Next we will do a hands on AWS Lambda&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
    </item>
    <item>
      <title>GitHub Copilot on Codespaces on an iPad + GitHub Codespaces Q&amp;A</title>
      <author>Davide 'CoderDave' Benvegn√π</author>
      <pubDate>Tue, 31 Aug 2021 06:28:22 +0000</pubDate>
      <link>https://dev.to/n3wt0n/github-copilot-on-codespaces-on-an-ipad-github-codespaces-q-a-2n00</link>
      <guid>https://dev.to/n3wt0n/github-copilot-on-codespaces-on-an-ipad-github-codespaces-q-a-2n00</guid>
      <description>&lt;p&gt;Do you know you can &lt;strong&gt;develop any application on your iPad&lt;/strong&gt;? Well, thanks to Codespaces you can!&lt;/p&gt;

&lt;p&gt;In this live streaming I'm going to have a quick demo of using GitHub &lt;strong&gt;Codespaces on iPad&lt;/strong&gt;, and we will also see &lt;strong&gt;GitHub Copilot in action within Codespaces&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I will also answer all your &lt;strong&gt;questions about GitHub Codespaces&lt;/strong&gt;. So prepare your questions! And if you can't make it, &lt;strong&gt;post your questions or comments down below&lt;/strong&gt; so I can address them during the live!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ELBJjwpUn1s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/ELBJjwpUn1s"&gt;Link to the video: https://youtu.be/ELBJjwpUn1s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See you there!&lt;/p&gt;

&lt;p&gt;TIME FOR THE LIVE:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wednesday, September 9th, 9.30 pm HKT&lt;/li&gt;
&lt;li&gt;Wednesday, September 9th, 7.00 pm IST&lt;/li&gt;
&lt;li&gt;Wednesday, September 9th, 1.30 pm UTC&lt;/li&gt;
&lt;li&gt;Wednesday, September 9th, 9.30 am ET&lt;/li&gt;
&lt;li&gt;Wednesday, September 9th, 6.30 am PT&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; üöÄ for more content:&lt;/p&gt;

&lt;p&gt;üìΩ &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
‚òï &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
üíñ &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
üåê &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
üëï &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
üë¶üèª &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
üê±‚Äçüíª &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
üë≤üèª &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
üë¥üèª &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
üîâ &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>codespaces</category>
      <category>ipad</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>AWS Container Services</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 31 Aug 2021 05:55:30 +0000</pubDate>
      <link>https://dev.to/this-is-learning/aws-container-services-kbp</link>
      <guid>https://dev.to/this-is-learning/aws-container-services-kbp</guid>
      <description>&lt;p&gt;Docker is used a lot for deploying production services on the servers. To allow this paradigm of deployment AWS has many services like Elastic Container service, Fargate serverless container service, container registry in this series we will learn about the container services in AWS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ecs"&gt;
  &lt;/a&gt;
  ECS
&lt;/h2&gt;

&lt;p&gt;Amazon Elastic Container Service (Amazon ECS) is a fully managed container orchestration service that helps you easily deploy, manage, and scale containerized applications. It deeply integrates with the rest of the AWS platform to provide a secure and easy-to-use solution for running container workloads in the cloud and now on your infrastructure with Amazon ECS Anywhere.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Easily manage your deployments using existing tools.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Eliminates the need for you to install, operate, and scale your own cluster management infrastructure.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Makes best use of your instance resources by using containers&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#fargate"&gt;
  &lt;/a&gt;
  Fargate
&lt;/h2&gt;

&lt;p&gt;AWS Fargate is a technology that you can use with Amazon ECS to run containers without having to manage servers or clusters of Amazon EC2 instances. With Fargate, you no longer have to provision, configure, or scale clusters of virtual machines to run containers. This removes the need to choose server types, decide when to scale your clusters, or optimize cluster packing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  Benefits
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We don't have to worry about the servers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We pay only for the resources we use as its fully serverless&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can focus on building applications&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#aws-ecr"&gt;
  &lt;/a&gt;
  AWS ECR
&lt;/h2&gt;

&lt;p&gt;AWS Elastic Container Registry (Amazon ECR) is a fully managed container registry that makes it easy to store, manage, share, and deploy your container images and artifacts anywhere. Amazon ECR eliminates the need to operate your own container repositories or worry about scaling the underlying infrastructure. Amazon ECR hosts your images in a highly available and high-performance architecture, allowing you to deploy images for your container applications reliably. You can share container software privately within your organization or publicly worldwide for anyone to discover and download.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>My Favorite VS Code Extensions</title>
      <author>Chinmay Mhatre</author>
      <pubDate>Tue, 31 Aug 2021 05:52:02 +0000</pubDate>
      <link>https://dev.to/chinmaymhatre/my-favorite-vs-code-extensions-3j3</link>
      <guid>https://dev.to/chinmaymhatre/my-favorite-vs-code-extensions-3j3</guid>
      <description>&lt;p&gt;Hey Everyone! I wanted to show you all some of the vscode extensions I use and found really useful.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HwdGmkFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/131395794-348fba52-ea26-4600-9aba-36e0ca0e8730.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HwdGmkFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/131395794-348fba52-ea26-4600-9aba-36e0ca0e8730.gif" alt="gravity-falls"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#indentrainbow-by-oderwat"&gt;
  &lt;/a&gt;
  indent-rainbow by oderwat
&lt;/h2&gt;

&lt;p&gt;As the name suggests this extension adds colors to the indentations in your code which can be useful to format your code .It can especially help you in writing python .This is a really useful and interesting extension.&lt;/p&gt;

&lt;p&gt;VS Marketplace Link: &lt;a href="https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow"&gt;https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---WrAs1Te--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/51131670/131396543-774b8d2a-3a7a-4e1e-8e99-b78376293063.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---WrAs1Te--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/51131670/131396543-774b8d2a-3a7a-4e1e-8e99-b78376293063.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#polacode-by-p-amp-p"&gt;
  &lt;/a&gt;
  polacode by P &amp;amp; P
&lt;/h2&gt;

&lt;p&gt;This is an amazing extension if you want to post snippets of your code on your blog or twitter. Polacode makes it really easy to get pretty code snippets of your code.&lt;br&gt;
All you have to do is run polacode from your vscode command palette, paste your code and click the capture button to download the image.&lt;/p&gt;

&lt;p&gt;VS Marketplace Link: &lt;a href="https://marketplace.visualstudio.com/items?itemName=pnp.polacode"&gt;https://marketplace.visualstudio.com/items?itemName=pnp.polacode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YymuqHso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/51131670/131397300-305ed717-840e-4e6e-b7c3-2fccfea10e6b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YymuqHso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/51131670/131397300-305ed717-840e-4e6e-b7c3-2fccfea10e6b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#rest-client-by-huachao-mao"&gt;
  &lt;/a&gt;
  REST Client by Huachao Mao
&lt;/h2&gt;

&lt;p&gt;This is a really convenient extension for api developers .You can use this extension as an alternative to postman. &lt;/p&gt;

&lt;p&gt;One can make a file with the extension .http and test out their api in vscode itself. It supports all GET,POST,UPDATE and DELETE request.&lt;/p&gt;

&lt;p&gt;The benefit can be pushing the .http file to your GitHub repo so that other team members can contribute to the file.&lt;/p&gt;

&lt;p&gt;VS Marketplace Link: &lt;a href="https://marketplace.visualstudio.com/items?itemName=humao.rest-client"&gt;https://marketplace.visualstudio.com/items?itemName=humao.rest-client&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ls-2iOaN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/51131670/131398109-ce535c46-6352-4806-9895-b13c9e7cf682.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ls-2iOaN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/51131670/131398109-ce535c46-6352-4806-9895-b13c9e7cf682.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#here-are-some-other-vscode-extensions-you-might-find-useful"&gt;
  &lt;/a&gt;
  Here are some other vscode extensions you might find useful
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#bracket-pair-colorizer-2"&gt;
  &lt;/a&gt;
  Bracket Pair Colorizer 2
&lt;/h3&gt;

&lt;p&gt;VS Marketplace Link: &lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2"&gt;https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#live-server"&gt;
  &lt;/a&gt;
  Live Server
&lt;/h3&gt;

&lt;p&gt;VS Marketplace Link: &lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#auto-rename-tag"&gt;
  &lt;/a&gt;
  Auto Rename Tag
&lt;/h3&gt;

&lt;p&gt;VS Marketplace Link: &lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag"&gt;https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#better-comments"&gt;
  &lt;/a&gt;
  Better Comments
&lt;/h3&gt;

&lt;p&gt;VS Marketplace Link: &lt;a href="https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments"&gt;https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#es7-reactreduxgraphqlreactnative-snippets"&gt;
  &lt;/a&gt;
  ES7 React/Redux/GraphQL/React-Native snippets
&lt;/h3&gt;

&lt;p&gt;VS Marketplace Link: &lt;a href="https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets"&gt;https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#material-icon-theme"&gt;
  &lt;/a&gt;
  Material Icon Theme
&lt;/h3&gt;

&lt;p&gt;VS Marketplace Link: &lt;a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme"&gt;https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#live-share"&gt;
  &lt;/a&gt;
  Live Share
&lt;/h3&gt;

&lt;p&gt;VS Marketplace Link: &lt;a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare"&gt;https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Would love to know What other extension do you all use in vscode ? Let me know in the comments!!&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>vscode</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Integrate NuxtJS with Appwrite</title>
      <author>Herdi Tr.</author>
      <pubDate>Tue, 31 Aug 2021 05:35:13 +0000</pubDate>
      <link>https://dev.to/hrdtr/integrate-nuxtjs-with-appwrite-1o7f</link>
      <guid>https://dev.to/hrdtr/integrate-nuxtjs-with-appwrite-1o7f</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-appwrite"&gt;
  &lt;/a&gt;
  What is Appwrite?
&lt;/h3&gt;

&lt;p&gt;Appwrite is an end-to-end backend server that is aiming to abstract the complexity of common, complex, and repetitive tasks required for building a modern app.&lt;/p&gt;

&lt;p&gt;Appwrite provides you with a set of APIs, tools, and a management console UI to help you build your apps a lot faster and in a much more secure way. Between Appwrite different services, you can find user authentication and account management, user preferences, database and storage persistence, cloud functions, localization, image manipulation, scheduled background tasks, and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preparation"&gt;
  &lt;/a&gt;
  Preparation
&lt;/h3&gt;

&lt;p&gt;Before starting make sure you have installed appwrite on the server and appwrite is running fine there, if you haven't installed it please open the &lt;a href="https://appwrite.io/docs"&gt;appwrite documentation&lt;/a&gt; and install it on your server.&lt;/p&gt;

&lt;p&gt;By the way the setup process is very easy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h3&gt;

&lt;p&gt;Lets create a new NuxtJS project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn create nuxt-app &amp;lt;project-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or using npm:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init nuxt-app &amp;lt;project-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the the package successfully installed, add appwrite module for NuxtJS&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;project-name&amp;gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn add nuxt-appwrite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or using npm:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;project-name&amp;gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm i nuxt-appwrite &amp;lt;project-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, add nuxt-appwrite to the modules section of in &lt;code&gt;nuxt.config.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="na"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nuxt-appwrite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, make sure we have an active project in appwrite, if not, please login to your appwrite console and create a new project, then go to project settings and copy the value from project id field.&lt;/p&gt;

&lt;p&gt;Next, add appwrite object inside &lt;code&gt;nuxt.config.js&lt;/code&gt; export and fill it with some options&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="na"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nuxt-appwrite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://appwrite.example.com/v1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// appwrite endpoint&lt;/span&gt;
    &lt;span class="na"&gt;project&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;60046530a120d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// project id&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great! We have successfully setup the Appwrite Web SDK in NuxtJS&lt;/p&gt;

&lt;p&gt;From here, we can use &lt;code&gt;this.$appwrite&lt;/code&gt; to access the SDK from clients side methods in NuxtJS (e.g. &lt;code&gt;mounted()&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;For example, we can fetch database document inside vue component like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collectionID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;documentID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#server-side-user-action"&gt;
  &lt;/a&gt;
  Server Side User Action
&lt;/h3&gt;

&lt;p&gt;To maximize the capabilities of NuxtJS, &lt;code&gt;$appwrite&lt;/code&gt; also accessible from NuxtJS context. So we can access the SDK from server side too (e.g.&lt;code&gt;asyncData()&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;However, when doing SDK calls in your users scope from the server, it is not possible right away, since the HTTP-only cookie used for authentication is saved in the user's browser. That's why the Appwrite Web SDK allows to use JWT for authentication.&lt;/p&gt;

&lt;p&gt;There are &lt;strong&gt;additional steps&lt;/strong&gt; that must be taken so that our NuxtJS server instance knows who we are (the logged in user). that way, the server can get the same access rights according to the user who is currently logged in.&lt;/p&gt;

&lt;p&gt;Below is an example code to set JWT using the APIs available in nuxt-appwrite module &lt;em&gt;(do it directly after the user has successfully logged in)&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createJWT&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;utils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setJWT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the JWT is set, we can use the user-scoped action on the Nuxt process.server context, asyncData and nuxtServerInit.&lt;/p&gt;

&lt;p&gt;Don't forget to remove the JWT after the user logs out&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$appwrite&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleteSessions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;current&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;utils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeJWT&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By the way Appwrite has a public &lt;a href="https://appwrite.io/discord"&gt;community on discord&lt;/a&gt;, you can join and find out more about Appwrite and if you run into any problems or difficulties people there are always there to help.&lt;/p&gt;

</description>
      <category>nuxt</category>
      <category>vue</category>
      <category>appwrite</category>
      <category>baas</category>
    </item>
    <item>
      <title>Applying tree traversal algorithms to DOM</title>
      <author>Anish Kumar</author>
      <pubDate>Tue, 31 Aug 2021 05:35:04 +0000</pubDate>
      <link>https://dev.to/anishkumar/applying-tree-traversal-algorithms-to-dom-14bl</link>
      <guid>https://dev.to/anishkumar/applying-tree-traversal-algorithms-to-dom-14bl</guid>
      <description>&lt;p&gt;We've looked through few binary tree traversal techniques so far:&lt;/p&gt;

&lt;p&gt;1- &lt;a href="https://stackfull.dev/tree-data-structure-in-javascript"&gt;Traversing through binary tree using recursive and iterative algorithms&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2- &lt;a href="https://stackfull.dev/tree-efficient-traversal-with-parent-pointer"&gt;Traversing through binary tree using parent pointers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this article we'll put those learnings to use for an n-ary tree i.e. DOM. We'll see how we can locate DOM elements using various CSS selectors without using inbuilt APIs like &lt;code&gt;getElementById&lt;/code&gt;, &lt;code&gt;getElementsByClassname&lt;/code&gt; or &lt;code&gt;querySelector&lt;/code&gt;/&lt;code&gt;querySelectorAll&lt;/code&gt;. The article would thus also throw light on how these APIs might be working under the hood.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dom-traversal-overview"&gt;
  &lt;/a&gt;
  DOM traversal overview
&lt;/h2&gt;

&lt;p&gt;Borrowing the idea from first article, let's come up with the preOrder traversal algorithm for DOM:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;walkPreOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;

  &lt;span class="c1"&gt;// do something here&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="nx"&gt;walkPreOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can modify this algorithm to return an iterator instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;walkPreOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;

  &lt;span class="c1"&gt;// do something here&lt;/span&gt;
  &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;walkPreOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// USAGE&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;walkPreOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use any of breadth first or depth first algorithms (discussed in previous articles) to traverse the DOM. For the sake of this article, we'll stick with the above approach though.  &lt;/p&gt;

&lt;p&gt;Let's also assume we're working on a document having following HTML:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;DOM selection algorithm&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"body"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"profile"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"xyz.jpg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#locating-a-node-by-id"&gt;
  &lt;/a&gt;
  Locating a node by ID
&lt;/h3&gt;

&lt;p&gt;Browsers offer &lt;code&gt;document.getElementById()&lt;/code&gt; API to achieve this result. Using the &lt;code&gt;walkPreOrder()&lt;/code&gt; helper it becomes really simple to achieve this. Let's see:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;locateById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nodeId&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="c1"&gt;// iterate through all nodes in depth first (preOrder) fashion&lt;/span&gt;
  &lt;span class="c1"&gt;// return the node as soon as it's found&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;walkPreOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
     &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;nodeId&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use the &lt;code&gt;locateById()&lt;/code&gt; function as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;locateById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;profile&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// returns the image node&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#locating-nodes-by-classname"&gt;
  &lt;/a&gt;
  Locating nodes by className
&lt;/h3&gt;

&lt;p&gt;Browsers offer &lt;code&gt;document.getElementsByClassName()&lt;/code&gt; API to achieve this result. Let's see how we can implement something similar:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;locateAllByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;walkPreOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// USAGE&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;locateAllByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;row&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-browser-optimizes-the-selection-queries"&gt;
  &lt;/a&gt;
  How browser optimizes the selection queries
&lt;/h3&gt;

&lt;p&gt;Selecting DOM node is a fairly common operation for web applications. Traversing through the tree multiple times for the same selector doesn't seem optimal.  Browser optimizes the selection by using memoization. &lt;/p&gt;

&lt;p&gt;Looking at mozilla &lt;a href="https://searchfox.org/mozilla-central/source/parser/html/javasrc/TreeBuilder.java#1467"&gt;parser's source&lt;/a&gt;, namely an excerpt from the function startTag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt; &lt;span class="c1"&gt;// ID uniqueness&lt;/span&gt;
 &lt;span class="nd"&gt;@IdType&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getId&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="nc"&gt;LocatorImpl&lt;/span&gt; &lt;span class="n"&gt;oldLoc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;idLocations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;oldLoc&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Duplicate ID \u201C"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"\u201D."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;errorHandler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;warning&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;SAXParseException&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                  &lt;span class="s"&gt;"The first occurrence of ID \u201C"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;
                  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"\u201D was here."&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oldLoc&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
       &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;idLocations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;LocatorImpl&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tokenizer&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
       &lt;span class="o"&gt;}&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see that node IDs are kept in a simple hash map. It's done to ensure repeated queries for the same ID do not require full traversal, instead we can just look it up from hashMap and return it.&lt;/p&gt;

&lt;p&gt;Here's how our solution would look like post memoization:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getSelectors&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;idLocations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;classLocations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="c1"&gt;// updated selector functions  &lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;locateById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nodeId&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;idLocations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nodeId&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;idLocations&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;nodeId&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;walkPreOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
       &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;nodeId&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
          &lt;span class="nx"&gt;idLocations&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;nodeId&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="c1"&gt;//memoize&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;idLocations&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;nodeId&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="c1"&gt;// memoize&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;locateAllByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;classLocations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
         &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;classLocations&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;walkPreOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
       &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
          &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="nx"&gt;classLocations&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;nodeId&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;locateById&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="nx"&gt;locateAllByClassName&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt; 

  &lt;span class="c1"&gt;// USAGE&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;locateById&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;locateAllByClassName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getSelectors&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;locateAllByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;row&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// returns array of elements&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;locateById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;profile&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// returns an element, if found&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dealing-with-more-complex-selectors"&gt;
  &lt;/a&gt;
  Dealing with more complex selectors
&lt;/h2&gt;

&lt;p&gt;Let's try to implement something like &lt;code&gt;element.querySelector&lt;/code&gt;. Here's how MDN describes it:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The querySelector() method of the Element interface returns the first element that is a descendant of the element on which it is invoked that matches the specified group of selectors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firstRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.container .row:first-child&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case we can pass any CSS selector to the function and it should be able to traverse the DOM to find that element for us. Let's see it we how it can be implemented:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myQuerySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;currentNode&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentSelector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;walkPreOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentNode&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentSelector&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
        &lt;span class="nx"&gt;currentNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;
        &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;currentNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;currentNode&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// USAGE:&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firstRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myQuerySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.container .row:first-child&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Implementation of &lt;code&gt;myQuerySelectorAll&lt;/code&gt; (similar to &lt;code&gt;element.querySelectorAll&lt;/code&gt;) also follows the same approach with slight modification:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myQuerySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;currentNode&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentSelector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;walkPreOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentNode&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentSelector&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
        &lt;span class="nx"&gt;currentNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h2&gt;

&lt;p&gt;We can use the recursive preOrder traversal approach, describe at the start of this article, to clone any tree. Let's see how we can use it to clone any DOM tree, similar to what &lt;code&gt;element.cloneNode(true)&lt;/code&gt; does:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a clone of source node, by create a new node with same tagName and then copying over the attributes.&lt;/li&gt;
&lt;li&gt;Recursively call &lt;code&gt;cloneTree&lt;/code&gt; method on all children of the source node, and append the returned nodes as children to cloned node.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;cloneTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clonedNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tagName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;attributes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttributeNames&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="nx"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;attribute&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;clonedNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;attribute&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="nx"&gt;clonedNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cloneTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;clonedNode&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;This article has been originally published at &lt;a href="https://stackfull.dev/applying-tree-traversal-algorithms-to-dom"&gt;StackFull.dev&lt;/a&gt;. If you enjoyed reading this, you may want to opt for my &lt;a href="https://stackfull.dev"&gt;newsletter&lt;/a&gt;. It would let me reach out to you whenever I publish a new thought!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>datastructures</category>
      <category>algorithms</category>
      <category>html</category>
    </item>
    <item>
      <title>DELETE DUPLICATE VALUE IN THE SAME COLUMN - SQL</title>
      <author>Ha Tuan Em</author>
      <pubDate>Tue, 31 Aug 2021 04:52:31 +0000</pubDate>
      <link>https://dev.to/hte305/delete-duplicate-value-in-the-same-column-sql-47d</link>
      <guid>https://dev.to/hte305/delete-duplicate-value-in-the-same-column-sql-47d</guid>
      <description>&lt;p&gt;Sometime, the table has duplicate value as string, number or etc,... And we want to clean that data. But the data is dynamic so we can not hard code for all case of table.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;fruits&lt;/strong&gt; table&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Orange üçä&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Apple üçé&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Orange üçä&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Pineappleüçç&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;In this case, we got have a simple sql like that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;DELETE&lt;/span&gt;
  &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
 &lt;span class="k"&gt;USING&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
 &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
   &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Result after excute query&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Orange üçä&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Apple üçé&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Pineappleüçç&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;If several columns have the same names but the datatypes do not match, the NATURAL JOIN clause can be modified with the USING clause to specify the columns that should be used for an EQUIJOIN.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/sql-using-clause/"&gt;Find out &lt;strong&gt;USING&lt;/strong&gt; in this article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enjoy your time ü™¥&lt;br&gt;
Thanks for reading.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/hte305"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eKzEoK4A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddtyyk0zuud3h7o0sjpq.png" alt="Buy me a coffee"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>sql</category>
    </item>
    <item>
      <title>Building Vocabulary Day 3</title>
      <author>vindhya Hegde </author>
      <pubDate>Tue, 31 Aug 2021 03:51:52 +0000</pubDate>
      <link>https://dev.to/vindhyasadanand/building-vocabulary-day-3-4bma</link>
      <guid>https://dev.to/vindhyasadanand/building-vocabulary-day-3-4bma</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;parochial&lt;/strong&gt;(adjective) :having a limited or narrowly restricted in scope or outlook. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Tl2vGOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dxuoddg10rgxw.cloudfront.net/wp-content/uploads/2011/07/17023837/parochial.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Tl2vGOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dxuoddg10rgxw.cloudfront.net/wp-content/uploads/2011/07/17023837/parochial.gif" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=parochial&amp;amp;oq=parochial&amp;amp;aqs=chrome.0.69i59j35i39j69i59j0i433i512j0i512l3j69i60.4546j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;vindicate&lt;/strong&gt;(verb) : to clear of accusation, blame, suspicion or doubt&lt;br&gt;
with supporting arguments or proof.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--amHww69p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learnbookme.files.wordpress.com/2016/12/vindicated.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--amHww69p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learnbookme.files.wordpress.com/2016/12/vindicated.png" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=vindicate&amp;amp;oq=vindicate&amp;amp;aqs=chrome.0.69i59j0i433i512l2j0i512l2j0i433i512j69i60l2.4184j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;mercurial&lt;/strong&gt;(verb) : subject to sudden or unpredictable changes of mood or mind.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wyd4jov---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1200/1%2AGMPTdwXD4gMCEd5OEU43WA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wyd4jov---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1200/1%2AGMPTdwXD4gMCEd5OEU43WA.jpeg" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=mercurial+meaning&amp;amp;bih=722&amp;amp;biw=1536&amp;amp;hl=en-GB&amp;amp;sxsrf=AOaemvLXtmCxp1P248qA8t97diAt438OTg%3A1630379398070&amp;amp;ei=hp0tYcfjA4fZz7sPjZW-4Aw&amp;amp;oq=mercurial+mea&amp;amp;gs_lcp=Cgdnd3Mtd2l6EAEYATIJCCMQJxBGEP8BMggIABCABBCxAzIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEOgcIIxCwAxAnOgcIABBHELADOgQIABBDOgcIABCxAxBDSgQIQRgAUOAnWNQ9YONOaAFwAngAgAHrAYgB3AWSAQUwLjMuMZgBAKABAcgBCsABAQ&amp;amp;sclient=gws-wiz"&gt;Checkout Pronunciation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;belie&lt;/strong&gt;(noun) : to give a false representation to; misrepresent.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5PWkjsaA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/D5ZyXHhWwAAY7vq.jpg:large" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5PWkjsaA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/D5ZyXHhWwAAY7vq.jpg:large" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=belie&amp;amp;oq=belie&amp;amp;aqs=chrome..69i57j0i433i512j0i131i433i512j46i433i512l2j0i433i512l3j0i512j0i433i512.4486j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;chastise&lt;/strong&gt;(verb): to reprimand harshly&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ffxmmTK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://image.shutterstock.com/image-vector/mother-guilty-son-isolate-on-260nw-1366732667.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ffxmmTK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://image.shutterstock.com/image-vector/mother-guilty-son-isolate-on-260nw-1366732667.jpg" alt="alt text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.google.com/search?q=chastise&amp;amp;oq=chastise+&amp;amp;aqs=chrome..69i57j35i39j0i512l8.6722j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Checkout Pronunciation&lt;/a&gt;&lt;br&gt;
I hope this helps you if you are preparing for GRE exams.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>day3</category>
    </item>
    <item>
      <title>useReducer and useContext </title>
      <author>hwangs12</author>
      <pubDate>Tue, 31 Aug 2021 03:40:18 +0000</pubDate>
      <link>https://dev.to/hwangs12/usereducer-and-usecontext-45in</link>
      <guid>https://dev.to/hwangs12/usereducer-and-usecontext-45in</guid>
      <description>&lt;p&gt;They are cool tools in a way that you realize useState and useEffect are cool but not to the degree that useReducer and useContext simplify your codes in cleaner fashion. &lt;br&gt;
I guess cool things about React in general is that once you learn new topic, you don't have to go back much to basics because every new concept is designed such that you can make sense of it intuitively and you can start from the point you learned it, without going back too much to basics. &lt;/p&gt;

&lt;p&gt;useReducer and useContext are such tools that make me think 'Oh, I didn't have to use previous hooks (i.e. useState) that much if I could use useReducer!' but sort of appreciate learning useState at the same time because I can make analogies to useState when learning useReducer. Learning useState definitely helped me in understanding useReducer so I could learn useReducer faster.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-it-can-be-confusing-and-how-i-have-dissected-usereducer"&gt;
  &lt;/a&gt;
  How it can be confusing and how I have dissected useReducer
&lt;/h3&gt;

&lt;p&gt;First of all, useReducer consists of four words&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, notice the similarity to useState hook&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The only difference is it has weird things like 'dispatch' and 'reducer'&lt;/p&gt;

&lt;p&gt;To simplify and help understand the concept intuitively, my way of devising their terms are as follows:&lt;/p&gt;

&lt;p&gt;dispatch is almost same as setState&lt;br&gt;
reducer is a function that describes action and takes setState as argument to change the state&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>functional</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How to add a favicon to a website in a single line of HTML?</title>
      <author>Kritika Pattalam Bharathkumar</author>
      <pubDate>Tue, 31 Aug 2021 03:32:39 +0000</pubDate>
      <link>https://dev.to/kritikapattalam/how-to-add-a-favicon-to-a-website-in-a-single-line-of-html-2epb</link>
      <guid>https://dev.to/kritikapattalam/how-to-add-a-favicon-to-a-website-in-a-single-line-of-html-2epb</guid>
      <description>&lt;p&gt;Each one of us would login to websites or view multiple sites every single day in our life. And most of us are guilty of having more than one tabs open in a browser eg: facebook, amazon, google, gmail etc  and even with so many tabs open we are still able to click on the correct tab by looking at that small icon on the browser tab which gives us an indication as to which site it is.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#have-you-ever-wondered-what-is-that-small-icon-next-to-the-browser-title-called"&gt;
  &lt;/a&gt;
  Have you ever wondered what is that small icon next to the browser title called?.
&lt;/h4&gt;

&lt;p&gt;Well that is &lt;strong&gt;favicon&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As part of this blog we are going to see,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;What is a favicon?&lt;/li&gt;
&lt;li&gt;How to identify a favicon on a webpage?&lt;/li&gt;
&lt;li&gt;How to add a favicon to a website with just a single line of HTML?.&lt;/li&gt;
&lt;li&gt;Does favicon help with SEO?&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#what-is-favicon"&gt;
  &lt;/a&gt;
  What is favicon?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A favicon is a small icon associated with a website/page/application which is present next to the webpage title in a browser.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It help users visually identify websites more easily within browser tabs, bookmarks, shortcuts, and address bars.&lt;br&gt;
&lt;strong&gt;Example&lt;/strong&gt; -  When more browser tabs are open by the favicon user can easily identify the tab and click on it to view the webpage or the same goes for when there are more bookmarks are present etc.&lt;br&gt;
With so many tabs/bookmarks open favicon makes it easier for user to identify the site by the image.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-identify-a-favicon-on-a-webpage"&gt;
  &lt;/a&gt;
  How to identify a favicon on a webpage?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b4dL-738--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99cmenkeom64hhvmr4p8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b4dL-738--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99cmenkeom64hhvmr4p8.png" alt="fav-tweet.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The highlighted icon in circle, is how it shows on the browser when the tabs are open.&lt;/li&gt;
&lt;li&gt;The highlighted icon in the rectangle below is how it shows when the website is bookmarked. You can see a list of favicons for websites bookmarked here eg: google, facebook, gmail etc&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#how-to-add-favicon-to-a-website"&gt;
  &lt;/a&gt;
  How to add favicon to a website?
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt; My test site &amp;lt;/title&amp;gt;
    &amp;lt;link rel="shortcut icon" type="image/jpg" href="images/favicon.png"/&amp;gt;
    .....
&amp;lt;/head&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;add a link tag in the head section of your webpage. [Refer the above code piece.].&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;rel = "shortcut icon"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;link tag should have the rel attribute value as&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;icon&lt;/strong&gt; if just using it for favicon next to the browser title/bookmarks/address bars etc.&lt;/li&gt;
&lt;li&gt;adding value &lt;strong&gt;shortcut&lt;/strong&gt; means the same icon will be used when the webpage is saved as a shortcut to your desktop/laptop.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;href="images/favicon.png"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;add the path to the favicon as the href value &lt;/li&gt;
&lt;li&gt;Square icons are expected to be used as favicon. Most used sizes are - 16x16, 32x32 or 48x48.&lt;/li&gt;
&lt;li&gt;Back in the days the image extension for favicon was &lt;strong&gt;.ico&lt;/strong&gt;, but in the recent times mostly &lt;strong&gt;.png&lt;/strong&gt; type images are used.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#does-favicon-help-with-seo"&gt;
  &lt;/a&gt;
  Does favicon help with SEO?
&lt;/h3&gt;

&lt;p&gt;The more important question to ask is does favicon help with search engine optimization(SEO). No, it directly does not influence SEO, but it does help in creating brand awareness among the users visiting the site because most favicons are logos of the particular brand. Users are mostly seen to revisit pages which have the favicon present compared to the ones which does not . Because when people see a website without one, they tend to feel that its not a genuine site.&lt;/p&gt;

&lt;p&gt;Well that is it for this blog, and by now you should know how to add a favicon to a website and its uses.&lt;/p&gt;

&lt;p&gt;Follow me on  &lt;a href="https://twitter.com/KritikaPattalam"&gt;Twitter&lt;/a&gt;  | &lt;a href="https://www.linkedin.com/in/kritika-p-296739155/"&gt;LinkedIn&lt;/a&gt; for more web development related tips and posts. Feedbacks and suggestions are welcome.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#are-you-more-of-a-twitter-person-then-checkout-the-short-version-of-this-blog-in-the-below-thread"&gt;
  &lt;/a&gt;
  Are you more of a Twitter person?. Then checkout the short version of this blog in the below thread.
&lt;/h4&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q3EpYVr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E7-u56fWEAAtCbm.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ekBt-sq0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1404918039922057218/ECiKGVPB_normal.jpg" alt="Kritika ‚ö°Ô∏è profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Kritika ‚ö°Ô∏è
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/kritikapattalam"&gt;@kritikapattalam&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      üí° Web Development üí°&lt;br&gt;Favicon - Explained&lt;br&gt;&lt;br&gt;Every website has a logo/small image which shows on the top of the browser which is called as favicon. &lt;br&gt;Let's see how to add one to your website!!.&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/webdevelopment"&gt;#webdevelopment&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/WomenWhoCode"&gt;#WomenWhoCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DevCommunity"&gt;#DevCommunity&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      23:15 PM - 04 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1423059971315535879" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1423059971315535879" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1423059971315535879" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


</description>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>My journey as a self-taught developer from Zero to first developer job.</title>
      <author>Brian Ngamsom</author>
      <pubDate>Tue, 31 Aug 2021 03:03:32 +0000</pubDate>
      <link>https://dev.to/ngamsomset/my-journey-as-a-self-taught-developer-from-zero-to-first-developer-job-10m5</link>
      <guid>https://dev.to/ngamsomset/my-journey-as-a-self-taught-developer-from-zero-to-first-developer-job-10m5</guid>
      <description>&lt;p&gt;In this blog, you will know how I became a front-end developer without any related degree. I landed my first developer job a couple of months ago from the day that I write this blog. It's not an easy path for me, I have struggled many times but I ended up accomplished my goal.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-background"&gt;
  &lt;/a&gt;
  My background
&lt;/h3&gt;

&lt;p&gt;I got a background in Aircraft Engineering, I used to work as an aircraft mechanic for 2 years. After I figure out that it's not the time for me to settle down yet, I start to travel. Just so you know the aircraft engineering career is a very long term commitment. You will have to spend at least a minimum of 5 years to move from mechanic to licensed engineer. And that involved many tests and exams. Someone that I know spends solid 10 years from mechanic to licensed engineer.&lt;/p&gt;

&lt;p&gt;Another main reason that I do not prefer to work in this career is the nature of the work itself(I hate shift work). So after I know what my future will look like if I continue this path, I decided to quit the job and start exploring the world. At the time of quitting the job, I still have no idea of what I want to do.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-did-i-get-into-software-development"&gt;
  &lt;/a&gt;
  How did I get into software development?
&lt;/h3&gt;

&lt;p&gt;I always love computers, gadgets and tech stuff. I used to be a hardcore gamer when I was young. But then it was just a childhood memory to me. Not until I wonder what I really wanted to do for a living. Something related to computers is the first thing that I am interested in. Just so you know I'm really bad at arts but I'm really good at maths and most of the stuff that required logical thinking. So software engineering is the first thing that came up to me. I start to do lots of research and ended up going for web development.&lt;/p&gt;

&lt;p&gt;Around the end of the year 2019, I made the most expensive investment in my life from my own saving. And I never know that that investment gonna change my life forever. I bought myself a Macbook Pro. I committed myself that I will accomplish this, so I go all in. But sometimes things did not go as planned.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-things-get-bad"&gt;
  &lt;/a&gt;
  When things get bad...
&lt;/h3&gt;

&lt;p&gt;My first course is the Web Development Bootcamp by Colt Steel. It's a massive course that covers pretty much everything that you need to know about web development. Of course, I ended up not finish the course. I spend around 2-3 months messing around with Colt's course and some other bits and pieces. I gonna be honest here, it's overwhelming. There are so many things to learn while you know nothing. It's like you are still at zero even you spend months trying to understand things. I admitted I gave up.&lt;/p&gt;

&lt;p&gt;If you want something badly, you will come back for it&lt;/p&gt;

&lt;p&gt;After I gave up, fast forward about half a year. In late 2020, I started to come back to continue my learning. I know that I won't mess up this time. I put so much effort into my learning schedule.  I was working at the cafe at that time from 6.00 am till 4.00 pm 6 days a week. After I came back home I will always be in front of my computer, smashing whatever I need to get done. It was so tired that you have to work full time while you have to spend extra time using your brain learning new things. But after I get used to this schedule I'm kind of feel comfortable with it. Until the day it paid off.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-first-developer-job"&gt;
  &lt;/a&gt;
  My first developer job
&lt;/h3&gt;

&lt;p&gt;I know that as someone without prior experience and even no educational background it's very hard to land your first job. In this case, I will tell in terms of my perspective and this might be varied depends where you live. At the time I'm applying for a developer job in Sydney, we were in a lockdown situation. During the time that I learn how to code, I saw so many job postings that need developers. So I feel a bit better that if I'm qualified enough it not gonna be too hard to land the first job.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#linkedin"&gt;
  &lt;/a&gt;
  LinkedIn
&lt;/h3&gt;

&lt;p&gt;Among developer communities, LinkedIn came first as the job-hunting platform. And I can confirm that it's true. The majority of the job posting on LinkedIn are active. It means that when you apply or DMs those people who listed the job will reply to you. My plan was to apply to the job as many as I can regardless of the job title, as long as it is related to web development I will apply for it. Because I always believed that you need to get yourself out there.&lt;/p&gt;

&lt;p&gt;I have to say that in a way I was lucky. The first company that I got an interview with is the company that I ended up sign the contract with. The reason I said that I am lucky is that I apply to so many jobs listing, and I can't remember what I have applied for. One day, I got a contact from one of the agencies. The first word that I heard is that "Hello, I saw you have applied for a senior developer role, but I can tell you that from your profile, you are far from senior." It was a bit of a giggle there but I know that I apply to jobs that I shouldn't apply to. But lucky enough the person who contact me also said that "But anyway, we also looking for a junior developer as well but we haven't put ads out there, and you could be a potential candidate".&lt;/p&gt;

&lt;p&gt;Later that day, he sends me the project to work on and told me that I got as many days as I want. I decided to give it a go. The task was about building a project that fetching the data from an external API and display it on the page. Simple is that. But with the limitation of I have to choose between using React or Next.js. I spent the weekend finishing this project and submitted it on Sunday evening. To be honest it was fun to build that project.&lt;/p&gt;

&lt;p&gt;After the first review of my project, I got a second interview with the Tech lead and one of the senior dev. They gave me feedback about my project and what I can improve to make it better. At that time I thought I won't get the job as most of the feedback is not in a good way. But it was constructive feedback and I really appreciate that. They told me that they will contact me within 2 days to give the result. I was super nervous, I can't do anything for that 2 days.&lt;/p&gt;

&lt;p&gt;The moment they call me back and told me that I got the job I was working at the cafe. I almost scream out. My face was full of smiles that day and I told everyone the good news. They send me the contract and ask me to review it if I'm happy with it or not. I was not fuzzy obviously, got the first dev job offer that I always dream of.&lt;/p&gt;

&lt;p&gt;So that's my journey from zero to developer. Hope you enjoy it!&lt;/p&gt;

&lt;p&gt;If you want to know more or have any questions just hit me up on Twitter!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>developer</category>
      <category>programmer</category>
    </item>
    <item>
      <title>How to set up multiple databases on django</title>
      <author>Minh Vuong</author>
      <pubDate>Tue, 31 Aug 2021 02:05:19 +0000</pubDate>
      <link>https://dev.to/minhvuong1/how-to-set-up-multiple-databases-on-django-1c76</link>
      <guid>https://dev.to/minhvuong1/how-to-set-up-multiple-databases-on-django-1c76</guid>
      <description>&lt;p&gt;This blog post will show you how to set up multiple databases on your django application. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-setup"&gt;
  &lt;/a&gt;
  Basic Setup
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Create your virtual environment&lt;/li&gt;
&lt;li&gt;Create a Django project&lt;/li&gt;
&lt;li&gt;Create your database servers&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#defining-your-databases"&gt;
  &lt;/a&gt;
  Defining your databases
&lt;/h2&gt;

&lt;p&gt;The first step to using more than one database with Django is to tell Django about the database servers you‚Äôll be using. This is done using the &lt;strong&gt;'DATABASES'&lt;/strong&gt; setting. Databases can have any alias you choose. However, the alias &lt;em&gt;default&lt;/em&gt; has special significance. Django uses the database with the alias of default when no other database has been selected.&lt;/p&gt;

&lt;p&gt;The following is an example &lt;code&gt;settings.py&lt;/code&gt; snippet defining two databases ‚Äì a default PostgreSQL database and a MySQL database called &lt;em&gt;users_db&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DATABASES = {
    'default': {
        'NAME': 'app_data',
        'ENGINE': 'django.db.backends.postgresql',
        'USER': 'postgres_user',
        'PASSWORD': 's3krit'
    },
    'users_db': {
        'NAME': 'user_data',
        'ENGINE': 'django.db.backends.mysql',
        'USER': 'mysql_user',
        'PASSWORD': 'priv4te'
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Django requires that a &lt;strong&gt;default&lt;/strong&gt; database entry be defined, but the parameters dictionary can be left blank if it will not be used. To do this, you must set up &lt;strong&gt;DATABASE_ROUTERS&lt;/strong&gt; for all of your apps‚Äô models so that no queries are routed to the default database.&lt;/p&gt;

&lt;p&gt;The following is an example &lt;strong&gt;settings.py&lt;/strong&gt; snippet defining two non-default databases, with the &lt;strong&gt;default&lt;/strong&gt; entry intentionally left empty:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DATABASES = {
    'default': {},
    'users': {
        'NAME': 'user_data',
        'ENGINE': 'django.db.backends.mysql',
        'USER': 'mysql_user',
        'PASSWORD': 'superS3cret'
    },
    'customers': {
        'NAME': 'customer_data',
        'ENGINE': 'django.db.backends.mysql',
        'USER': 'mysql_cust',
        'PASSWORD': 'veryPriv@ate'
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you attempt to access a database that you haven‚Äôt defined in your &lt;strong&gt;DATABASES&lt;/strong&gt; setting, Django will raise a &lt;strong&gt;django.utils.connection.ConnectionDoesNotExist&lt;/strong&gt; exception.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#synchronizing-your-databases"&gt;
  &lt;/a&gt;
  Synchronizing your databases
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;migrate&lt;/strong&gt; management command operates on one database at a time. By default, it operates on the &lt;strong&gt;default&lt;/strong&gt; database, but by providing the &lt;strong&gt;--database&lt;/strong&gt; option, you can tell it to synchronize a different database. So, to synchronize all models onto all databases in the first example above, you would need to call:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ./manage.py migrate 
$ ./manage.py migrate --database=users
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you don‚Äôt want every application to be synchronized onto a particular database, you can define a &lt;strong&gt;database router&lt;/strong&gt; that implements a policy constraining the availability of particular models. If, as in the example above, you‚Äôve left the &lt;strong&gt;default&lt;/strong&gt; database empty, you must provide a database name each time you run &lt;strong&gt;migrate&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ./manage.py migrate --database=users
$ ./manage.py migrate --database=customers
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Most other &lt;strong&gt;django-admin&lt;/strong&gt; commands that interact with the database operate in the same way as &lt;strong&gt;migrate&lt;/strong&gt; ‚Äì they only ever operate on one database at a time, using &lt;strong&gt;--database&lt;/strong&gt; to control the database used.&lt;/p&gt;

&lt;p&gt;An exception to this rule is the &lt;strong&gt;makemigrations&lt;/strong&gt; command. It validates the migration history in the databases to catch problems with the existing migration files before creating new migrations. By default, it checks only the default database, but it consults the &lt;strong&gt;allow_migrate()&lt;/strong&gt; method of routers if any are installed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automatic-database-routing"&gt;
  &lt;/a&gt;
  Automatic database routing
&lt;/h2&gt;

&lt;p&gt;Once you've got your databases defined in the &lt;strong&gt;DATABASES&lt;/strong&gt; setting, now we'll need to handle automatic routing. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a folder called 'routers'&lt;/li&gt;
&lt;li&gt;Inside the folder create a file called &lt;code&gt;db_routers.py&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create a database router called &lt;strong&gt;AuthRouter&lt;/strong&gt; to control all database operations on models in the &lt;strong&gt;auth&lt;/strong&gt; and &lt;strong&gt;contenttypes&lt;/strong&gt; - add the following code inside the &lt;code&gt;db_routers.py&lt;/code&gt; file:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class AuthRouter:
    route_app_labels = {'auth', 'contenttypes'}

    def db_for_read(self, model, **hints):
        if model._meta.app_label in self.route_app_labels:
            return 'auth_db'
        return None

    def db_for_write(self, model, **hints):
        if model._meta.app_label in self.route_app_labels:
            return 'auth_db'
        return None

    def allow_relation(self, obj1, obj2, **hints):
        if (
            obj1._meta.app_label in self.route_app_labels or
            obj2._meta.app_label in self.route_app_labels
        ):
           return True
        return None

    def allow_migrate(self, db, app_label, model_name=None, **hints):
        if app_label in self.route_app_labels:
            return db == 'auth_db'
        return None
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create router for your other database, inside &lt;strong&gt;route_app_labels&lt;/strong&gt; add the apps that you want to allow to have access to the database. See following code for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class UsersRouter:
    route_app_labels = {'users', 'accounts'}

    def db_for_read(self, model, **hints):
        if model._meta.app_label in self.route_app_labels:
            return 'users_db'
        return None

    def db_for_write(self, model, **hints):
        if model._meta.app_label in self.route_app_labels:
            return 'users_db'
        return None


    def allow_migrate(self, db, app_label, model_name=None, **hints):
        if app_label in self.route_app_labels:
            return db == 'users_db'
        return None   
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the &lt;strong&gt;app&lt;/strong&gt; name of the &lt;strong&gt;model&lt;/strong&gt; matches any value in &lt;code&gt;route_app_labels&lt;/code&gt; then it returns and uses the selected database. In this case, only the &lt;strong&gt;users&lt;/strong&gt; and &lt;strong&gt;accounts&lt;/strong&gt; apps can access the &lt;em&gt;users_db&lt;/em&gt; database as it is specified in &lt;code&gt;route_app_labels&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A database Router is a class that provides up to four methods:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;db_for_read(model, **hints)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;db_for_write(model, hints)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allow_relation(obj1, obj2, **hints)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;allow_migrate(db, app_label, model_name=None, **hints)&lt;/code&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;More info on &lt;a href="https://docs.djangoproject.com/en/3.2/topics/db/multi-db/#database-routers"&gt;Django Docs - Database Router Methods&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connecting-the-routers"&gt;
  &lt;/a&gt;
  Connecting the routers
&lt;/h2&gt;

&lt;p&gt;Database routers are installed using the &lt;strong&gt;DATABASE_ROUTERS&lt;/strong&gt; setting. This setting defines a list of class names, each specifying a router that should be used by the master router.&lt;/p&gt;

&lt;p&gt;The master router is used by Django‚Äôs database operations to allocate database usage. Whenever a query needs to know which database to use, it calls the master router, providing a model and a hint (if available). Django then tries each router in turn until a database suggestion can be found. &lt;/p&gt;

&lt;p&gt;Finally, in the &lt;strong&gt;settings&lt;/strong&gt; file, we add the following code (substituting &lt;strong&gt;path.to.&lt;/strong&gt; with the actual Python path to the modules where the routers are defined):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DATABASE_ROUTERS = ['path.to.AuthRouter', 'path.to.UsersRouter']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The order in which routers are processed is significant. Routers will be queried in the order they are listed in the &lt;strong&gt;DATABASE_ROUTERS&lt;/strong&gt; setting. &lt;/p&gt;

&lt;p&gt;In this example, the &lt;strong&gt;AuthRouter&lt;/strong&gt; is processed before the &lt;strong&gt;UsersRouter&lt;/strong&gt;, and as a result, decisions concerning the models in auth are processed before any other decision is made.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#manually-selecting-a-database"&gt;
  &lt;/a&gt;
  Manually selecting a database
&lt;/h2&gt;

&lt;p&gt;Django also provides an API that allows you to maintain complete control over database usage in your code. A manually specified database allocation will take priority over a database allocated by a router.&lt;/p&gt;

&lt;p&gt;You can select the database for a &lt;strong&gt;QuerySet&lt;/strong&gt; at any point in the QuerySet ‚Äúchain.‚Äù Call &lt;strong&gt;using()&lt;/strong&gt; on the &lt;strong&gt;QuerySet&lt;/strong&gt; to get another QuerySet that uses the specified database. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;using()&lt;/strong&gt; takes a single argument: the alias of the database on which you want to run the query. &lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; # This will run on the 'default' database.
&amp;gt;&amp;gt;&amp;gt; Publisher.objects.all()

&amp;gt;&amp;gt;&amp;gt; # So will this.
&amp;gt;&amp;gt;&amp;gt; Publisher.objects.using('default').all()

&amp;gt;&amp;gt;&amp;gt; # This will run on the 'users' database.
&amp;gt;&amp;gt;&amp;gt; Publisher.objects.using('users').all()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for reading! If you have any questions, issues, feedback or corrections, please let me know!&lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
      <category>postgres</category>
    </item>
  </channel>
</rss>
