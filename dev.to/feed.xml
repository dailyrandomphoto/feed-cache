<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>HAVE YOU MISSED ZED RUN? IS THE ENTRANCE FEE TOO HIGH? I FOUND THIS NEW GAME!</title>
      <author>zenteh</author>
      <pubDate>Wed, 15 Sep 2021 12:35:10 +0000</pubDate>
      <link>https://dev.to/zenteh/have-you-missed-zed-run-is-the-entrance-fee-too-high-i-found-this-new-game-3703</link>
      <guid>https://dev.to/zenteh/have-you-missed-zed-run-is-the-entrance-fee-too-high-i-found-this-new-game-3703</guid>
      <description>&lt;p&gt;Blockchain technology has revolutionized the gaming space. By bringing in its “decentralized” nature, blockchain technology has developed an entirely new way of interacting with gamers. Another benefit of blockchain technology is the introduction of the play-to-earn concept. It allows gamers to be rewarded with in-game assets. Moreover, it gives gamers control and ownership over in-game purchases, and in turn, a chance to increase the value of their assets by playing the game. These assets could range from gaming tools, weapons or cryptocurrencies, or any other in-game assets that can be tokenized on the blockchain. Let me tell you why MetaRace got my attention.&lt;br&gt;
MetaRace said MetaRace collectables are not only horses NFT, more to come.&lt;/p&gt;

&lt;p&gt;And I do some research; the following is more about MetaRace collectables.&lt;/p&gt;

&lt;p&gt;The collection’s core is to acquire and trade rare virtual items, including horses, jockeys, accessories and decorations. The game’s collectables component design simulates traditional scarcity-based collection games or activities, such as card trading or model collection.&lt;/p&gt;

&lt;p&gt;METARACE will be a game experience similar to traditional horse racing games. Players will take their collectables (horses, jockeys, decorations) to participate in the race and get rewards (Play To Earn).&lt;/p&gt;

&lt;p&gt;It may sound like an outlandish idea, but it got my attention.&lt;/p&gt;

&lt;p&gt;When I discovered the game Zed Run, I wanted to play it, but the entrance fee for NFT was too high.&lt;/p&gt;

&lt;p&gt;I am still looking forward to the launch of MetaRace, and hope they will release more news.&lt;/p&gt;

&lt;p&gt;I have already joined their community; if you are interested, join in!&lt;/p&gt;

&lt;p&gt;Discord: &lt;a href="https://discord.gg/8KzVAPASuk"&gt;https://discord.gg/8KzVAPASuk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Telegram: &lt;a href="https://t.me/MetaRaceOfficial"&gt;https://t.me/MetaRaceOfficial&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
    </item>
    <item>
      <title>Doctave CLI 0.2.0: A Benchmarking Story</title>
      <author>Nik Begley</author>
      <pubDate>Wed, 15 Sep 2021 12:34:15 +0000</pubDate>
      <link>https://dev.to/doctave/doctave-cli-0-2-0-a-benchmarking-story-m7j</link>
      <guid>https://dev.to/doctave/doctave-cli-0-2-0-a-benchmarking-story-m7j</guid>
      <description>&lt;p&gt;The &lt;a href="https://www.github.com/Doctave/doctave"&gt;Doctave CLI&lt;/a&gt; is a free to use open source documentation generator. It takes your Markdown files and converts them into a beautiful &lt;a href="https://cli.doctave.com"&gt;documentation site&lt;/a&gt;. Today we have released version 0.2.0, which brings some cosmetic improvements and a fully &lt;em&gt;in-memory development server&lt;/em&gt; for local development. We'll also talk about how this surprisingly &lt;em&gt;did not&lt;/em&gt; make the CLI faster like we expected.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serving-your-docs-from-memory"&gt;
  &lt;/a&gt;
  Serving your docs from memory
&lt;/h2&gt;

&lt;p&gt;Before Doctave would rewrite the whole documentation site to disk every time you made a change to your Markdown files. It would pretty much &lt;code&gt;rm -r&lt;/code&gt; the &lt;code&gt;site&lt;/code&gt; directory, used to house the generated HTML, and regenerate the docs site from scratch. Because Doctave (which is written in Rust) is able to generate the whole site in ~tens of milliseconds, we hadn't looked into optimizations here yet.&lt;/p&gt;

&lt;p&gt;But there were two non-performance related issues that bothered us about this approach:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You would end up with a &lt;code&gt;site&lt;/code&gt; directory that didn't really serve any purpose while developing
your docs&lt;/li&gt;
&lt;li&gt;While very minor in scale in our case, constantly writing and deleting small files from disk
isn't something that modern SSDs like to do&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is why Doctave 0.2.0 never writes the HTML documentation site to disk until you run&lt;br&gt;
&lt;code&gt;doctave build --release&lt;/code&gt;. In &lt;code&gt;serve&lt;/code&gt; mode when you write your documentation, the embedded web server serves them directly from memory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ doctave serve Doctave | Serve Starting development server...

Server running on http://0.0.0.0:4001/

    File docs/README.md updated.
    Site rebuilt in 31.698781ms
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Wait a minute - shouldn't this be faster now that we are not writing files to disk?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-this-not-faster"&gt;
  &lt;/a&gt;
  Why is this not faster?
&lt;/h2&gt;

&lt;p&gt;After completing this feature, I was surprised to see that Doctave wasn't generating sites noticeably faster than before. I was expecting a speedup due to us not spending as much time on IO. This was not happening.&lt;/p&gt;

&lt;p&gt;After double checking to make sure the code was doing what I expected, it was time to benchmark things to see where the time was being spent. After some digging I found the answer: &lt;em&gt;generating the search index&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Doctave comes with offline search built in. We use the &lt;a href="https://github.com/mattico/elasticlunr-rs"&gt;elasticlunr-rs&lt;/a&gt; crate to generate a search index that is compatible with the &lt;a href="https://github.com/weixsong/elasticlunr.js"&gt;elasticlunr.js&lt;/a&gt; library. You can see it in action by going to &lt;a href="https://cli.doctave.com"&gt;our docs&lt;/a&gt; (built with the CLI, naturally) and hitting the letter &lt;code&gt;s&lt;/code&gt; on your keyboard to focus on the search bar. The searching happens entirely client-side.&lt;/p&gt;

&lt;p&gt;It turned out that we are spending &lt;em&gt;~70% of the site generation time creating the search index&lt;/em&gt;. This is completely reasonable, as this is a somewhat CPU intensive task that parses the input files and generates the index. The time spent doing IO writing files to disk is completely negligible in comparison, and thus did not move the needle much at all. On top of that, the CLI was already writing files to disk in parallel. Moving things in-memory did not save us much time.&lt;/p&gt;

&lt;p&gt;So while Doctave 0.2.0 is technically faster, this was not a big performance win. There is some more work we can do to parallelize the build process further - maybe in the next release. In the meantime, Doctave will be more friendly on your SSD and not pollute your workspace as much.&lt;/p&gt;

&lt;p&gt;Still, this was a change for the better. It just wasn't the big performance win I suspected.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;I think this was an instructive little story about performance and benchmarking that was worth sharing. It's often the case that when we make assumptions about the performance of a system that turn out to be wrong once you measure things. This is just another reminder: &lt;strong&gt;always measure&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Finally, do try out &lt;a href="https://github.com/Doctave/doctave"&gt;Doctave 0.2.0&lt;/a&gt;! If you're looking for a batteries-included documentation generator that doesn't require plugins, doesn't pollute your repository with loads of files, and doesn't need a specialized environment to run, Doctave may be a good choice for you. It also comes with &lt;a href="https://mermaid-js.github.io/mermaid/#/"&gt;Mermaid JS diagram&lt;/a&gt; support and dark mode!&lt;/p&gt;

&lt;p&gt;You can host sites generated by Doctave on GitHub pages, or your favorite static site hosting provider. We are also building a &lt;a href="https://www.doctave.com"&gt;specialized host&lt;/a&gt; for teams using Doctave on multiple projects - check it out if you're using Doctave at your organization.&lt;/p&gt;

&lt;p&gt;Let me know if you're using it to document your project. I can be reached at &lt;code&gt;nik@doctave.com&lt;/code&gt;. I'd be excited to hear what you think.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#want-to-try-out-doctave"&gt;
  &lt;/a&gt;
  Want to try out Doctave?
&lt;/h3&gt;

&lt;p&gt;If you're on Mac using Homebrew, you can install Doctave with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install doctave/doctave/doctave
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you're a Rust fan and want to use Cargo, you can do so too:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cargo install --git https://github.com/Doctave/doctave --tag 0.2.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also have &lt;a href="https://github.com/Doctave/doctave/releases/tag/0.2.0"&gt;prebuilt static binaries&lt;/a&gt; for Mac, Linux, and Windows.&lt;/p&gt;

</description>
      <category>markdown</category>
      <category>showdev</category>
      <category>writing</category>
      <category>rust</category>
    </item>
    <item>
      <title>Binance Clone Script- a guide to provide a platform like binance for entrepreneurs</title>
      <author>ladi ladi</author>
      <pubDate>Wed, 15 Sep 2021 12:03:31 +0000</pubDate>
      <link>https://dev.to/ladiladi123/binance-clone-script-a-guide-to-provide-a-platform-like-binance-for-entrepreneurs-h52</link>
      <guid>https://dev.to/ladiladi123/binance-clone-script-a-guide-to-provide-a-platform-like-binance-for-entrepreneurs-h52</guid>
      <description>&lt;h2&gt;
  &lt;a href="#clone-script"&gt;
  &lt;/a&gt;
  Clone script
&lt;/h2&gt;

&lt;p&gt;Clone script is a tested architecture of the existing app that we can use to develop your customized software. With the help of &lt;strong&gt;&lt;a href="https://radindev.com/binance-clone-script/"&gt;Binance clone script&lt;/a&gt;&lt;/strong&gt; you will be able to launch your exchange platform with all the binance features, but you can add the extra features that you want to the platform and build your customized website. Binance clone script, enables the customers to trade directly in a p2p method. With binance clone script you can develop a hassle-free, user-friendly and secure website like Binance in a short time. Stay with us to read about the Binance clone script.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--obSe8hKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-pic-1-1.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--obSe8hKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-pic-1-1.svg" alt="binance clone  script"&gt;&lt;/a&gt;   &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-binance-clone-script"&gt;
  &lt;/a&gt;
  What is Binance clone script?
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency is being more and more accepted by people day by day. A large value of assets are being traded every day and a significant amount of the trading traffic belongs to the Binance exchange. It shows that Binance is popular among traders because of its high security, low transaction fees, and some other advanced features that it has. Binance is a successful, reliable, and secure cryptocurrency exchange platform. This company was founded in 2017 and climbed up the stairs of success so fast as its revenue in 2020 was about $800 M. Based on the reports its &lt;br&gt;
Website Visits was about 251.3 m on May 2021.        This company was established in China in Sep 2017. Binance is a marketplace that supports the exchange of coins like bitcoin, litecoin, ethereum, and more. Traders use Binance to do different tasks on the platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-premium-features-of-binance-that-cause-people-to-choose-binance-exchange"&gt;
  &lt;/a&gt;
  The premium features of binance that cause people to choose binance exchange:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Low fees&lt;/strong&gt;: Binance is one of the exchange websites that costs lower transaction fees than its competitors. Binance charges a fee of 0.1% for transactions.&lt;br&gt;
&lt;strong&gt;Accepts new cryptocurrencies:&lt;/strong&gt; new cryptocurrencies can be added to the list on binance after the completion of the initial coin offerings.&lt;br&gt;
&lt;strong&gt;Bonuses and rewards:&lt;/strong&gt; traders will gain rewards such as free crypto coins. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-binance-exchange"&gt;
  &lt;/a&gt;
  Features of binance exchange
&lt;/h2&gt;

&lt;p&gt;Multilingual support &lt;br&gt;
Live trade chart &lt;br&gt;
Referral program&lt;br&gt;
Powerful trade match engine &lt;br&gt;
Multicurrency support &lt;br&gt;
Perfect UI/UX design &lt;br&gt;
Different trading orders: market, limit , stop, and stop-limit order &lt;br&gt;
P2p trading&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#binance-clone-app"&gt;
  &lt;/a&gt;
  Binance clone app   &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ypmFeqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-app-1.svg" alt="binance clone app script"&gt;
&lt;/h2&gt;

&lt;p&gt;Binance clone app development is the process of creating a fast performing, trading mobile app compatible with ios or android, with similar features to Binance app. Nowadays that each person has a personal smartphone, you can see that they do almost every task via their smartphones. So developing a binance clone app will enable clients to trade anywhere and easily through their smartphones.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-binance-clone-app"&gt;
  &lt;/a&gt;
  Features of binance clone app
&lt;/h3&gt;

&lt;p&gt;• Compatible with IOS and android &lt;br&gt;
• Pin lock features &lt;br&gt;
• Multilingual support &lt;br&gt;
• Real time updates of the assets’ value&lt;br&gt;
• Transaction history &lt;br&gt;
• Live chat&lt;br&gt;
• Faster chat&lt;br&gt;
• Trading orders&lt;br&gt;
• Referral bonuses&lt;br&gt;
• Instant buying and selling &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-binance-clone-script"&gt;
  &lt;/a&gt;
  Features of binance clone script
&lt;/h3&gt;

&lt;p&gt;• Liquid swap &lt;br&gt;
• Smartchain&lt;br&gt;
• Trust wallet integration&lt;br&gt;
• DEX development &lt;br&gt;
• Launchpad&lt;br&gt;
• Launchpool staking &lt;br&gt;
• Bonous and rewards &lt;br&gt;
• Token listing &lt;br&gt;
• Low transaction fee&lt;br&gt;
• Matching trade &lt;br&gt;
• Multi payment method&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--60oq0gFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-white-label.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--60oq0gFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-white-label.svg" alt="white label binance clone script"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-using-a-white-label-binance-clone-script"&gt;
  &lt;/a&gt;
  Benefits of using a white label binance clone script
&lt;/h2&gt;

&lt;p&gt;1.White label crypto exchange platform&lt;br&gt;
reduces the development time and energy needed to develop a website or write script from scratch&lt;br&gt;
2.The white label binance clone script is a pre-made script which doesn’t need that much money to develop a software from zero.&lt;br&gt;
3.The clone scripts have the high success rate because these scripts are powerful. The fact that some other successful websites are using this script and they are working properly are a testament to the good performance of these scripts.&lt;br&gt;
4.Various altcoins are available in this exchange platform. The exchange supports hundreds of cryptocurrency coins and tokens.&lt;br&gt;
5.It is completely customizable, if you want to add some additional features to white label binance clone script it’s possible. &lt;br&gt;
6.It is a bug-free and hassle-free platform and you will not face new problems during the process of deployment. And you can be sure that the platform will work properly because the script is working on other websites.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#white-label-binance-clone-script-feature-for-users-and-admin"&gt;
  &lt;/a&gt;
  White label binance clone script feature for users and admin
&lt;/h2&gt;

&lt;p&gt;White label binance clone script is a ready-made cryptocurrency exchange clone script of a successful exchange platform named binance. Like other clones, it holds all the features of binance platform. Binance white label clone is completely tested. By using a white label clone script you can start your branding faster. And catch the attention of traders to your exchange platform.&lt;/p&gt;

&lt;p&gt;Also, it will help you to enter the market sooner than developing a website from scratch.&lt;br&gt;
Here is the list of the features the white label Binance clone script offers to its users:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Admin:&lt;/strong&gt;&lt;br&gt;
List tokens and crypto pairs as available trading pairs.&lt;br&gt;
Enable number of liquidity APIs based on the market changes.&lt;br&gt;
Trading fee and withdrawal fee on exchange can be updated any time.&lt;br&gt;
Admin URL  login is available with the http access.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt;&lt;br&gt;
The trading order only will be placed after the 2fa and sms  verification.&lt;br&gt;
IP address verification to disable multiple logins&lt;br&gt;
Transaction history &lt;br&gt;
User friendly User dashboard&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-start-a-website-like-binance"&gt;
  &lt;/a&gt;
  Why should you start a website like Binance?
&lt;/h2&gt;

&lt;p&gt;Brand reputation &lt;br&gt;
Potential customer &lt;br&gt;
High amount of transactions&lt;br&gt;
High market cap for users &lt;br&gt;
Users can learn and earn&lt;br&gt;
 the clone script is a replica of a famous website that exist before , which is an assurance that there is already a “demand” for that website. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#security-features-of-binance-clone-script"&gt;
  &lt;/a&gt;
  Security features of Binance clone script
&lt;/h2&gt;

&lt;p&gt;• Email verification &lt;br&gt;
• Users authentication &lt;br&gt;
• Two factor authentication &lt;br&gt;
• Multi sig wallet integration&lt;br&gt;
• Secure cold wallet storage &lt;br&gt;
• Registry lock&lt;br&gt;
• SMS verifications&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-buy-bitcoin-on-the-binance-platform"&gt;
  &lt;/a&gt;
  How to buy Bitcoin on the Binance platform?
&lt;/h3&gt;

&lt;p&gt;The user  must log in to the Binance account &lt;br&gt;
The user must choose the exchange interface either basic or advanced.&lt;br&gt;
Different types of cryptocurrencies such as BNB, USDT, BTC, and ETH are available that user has to select among them. &lt;br&gt;
After choosing the desired bitcoins user must choose the coin that wants to exchange with&lt;br&gt;
As a result, a trading graph will appear for the user that shows how coins are being exchanged with each other. &lt;br&gt;
The user can set conditions for the order types such as limit order, stop-limit order, and more.&lt;br&gt;
The number of coins to be traded can be specified by the user.&lt;br&gt;
 Binance DEX clone script &lt;br&gt;
In the DEX Binance clone script, there is no need for a central authority to control the trade.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-binance-dex-clone-script"&gt;
  &lt;/a&gt;
  Features of Binance DEX Clone Script
&lt;/h2&gt;

&lt;p&gt;Decentralized Order Book&lt;/p&gt;

&lt;p&gt;150+ Cryptocurrencies Support&lt;/p&gt;

&lt;p&gt;Instant Buy &amp;amp; Sell Bitcoins&lt;/p&gt;

&lt;p&gt;Two Factor authentication&lt;/p&gt;

&lt;p&gt;Crypto Wallet Support&lt;/p&gt;

&lt;p&gt;Fiat-Crypto Exchange&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yOUnyOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/like-binance.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yOUnyOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/like-binance.svg" alt="clone a website like binance"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps-for-creating-a-successful-exchange-platform"&gt;
  &lt;/a&gt;
  Steps for creating a successful exchange platform
&lt;/h3&gt;

&lt;p&gt;You know that you can add extra features and customize your exchange website.so use this possibility in the best way you can for developing a user friendly and popular exchange website. &lt;/p&gt;

&lt;p&gt;Read and test all the Binance features&lt;br&gt;
Understand the weakness and strengths of the platform to improve the weakness.&lt;br&gt;
Try to add some extra features to the platform that are useful for users ( you can find these features by asking users opinions )&lt;br&gt;
Search the social Media and users’ feedback to understand the users’ opinions. The features that they like and some extra features that they prefer to be added to the platform understand are the things users don’t like about the platform and solve it in your exchange.&lt;br&gt;
Check your competitors’ websites. Provide new features and updates for your exchange platform users. &lt;br&gt;
Keep updating your security features of the website and the speed of the transaction because these two factors are so important in exchange platforms.&lt;br&gt;
Find a trustworthy company to clone a website like OKEx for you.&lt;br&gt;
Check out the other popular websites and figure out what features do they have that attract the traders.&lt;br&gt;
Think of some rewarding system to attract more users to the platform, like setting some prizes for the first transaction, welcoming prizes for registration, and some other ways.&lt;br&gt;
Add an educational part to the platform. And make it possible for traders to learn and gain. This factor may attract new traders because they are interested in learning about the crypto exchange.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-best-company-to-develop-a-website-like-binance"&gt;
  &lt;/a&gt;
  How to choose the best company to develop a website like Binance?
&lt;/h2&gt;

&lt;p&gt;Support Period.&lt;br&gt;
Customization Option.&lt;br&gt;
Data Backup.&lt;br&gt;
100% Source Code.&lt;br&gt;
Maintenance Cost.&lt;br&gt;
Free Addons&lt;br&gt;
Their customers feed backs&lt;br&gt;
We recommend you request binance clone script from your chosen company before purchasing the script.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>startup</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>Laravel 8 REST API Authentication using Sanctum </title>
      <author>shaileshjadav</author>
      <pubDate>Wed, 15 Sep 2021 12:02:24 +0000</pubDate>
      <link>https://dev.to/shaileshjadav/laravel-8-rest-api-authentication-using-sanctum-3eb8</link>
      <guid>https://dev.to/shaileshjadav/laravel-8-rest-api-authentication-using-sanctum-3eb8</guid>
      <description>&lt;p&gt;Sanctum is Laravel package for authentication for single page application(SPAs), mobile applications and basic token based APIs. &lt;/p&gt;

&lt;p&gt;For SPA authentication, Sanctum uses Laravel’s built in cookie based authentication services. Means while working with front end technologies like react, Angular Sanctum create cookie and save in browser by using this accomplish authentication. For token based Rest APIs, Sanctum create token and save in &lt;strong&gt;personal_access_tokens&lt;/strong&gt; table. while authentication try to match with this table if token not found then authentication goes to failed.&lt;/p&gt;

&lt;p&gt;Let’s install sanctum package first and then create a register, login, logout APIs and protect our routes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer require laravel/sanctum
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command install package using composer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan vendor:publish --provider="Laravel\Sanctum\SanctumServiceProvider"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next run this command, it creates migration files for personal_access_token table and configuration files for sanctum. You can check this file in database-&amp;gt;migrations folder named like 2019_12_14_000001_create_personal_access_tokens_table.php&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then run this command, this create a personal_access_token table in database in which Sanctum store API tokens.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration:
&lt;/h3&gt;

&lt;p&gt;Go to app-&amp;gt;Http-&amp;gt;Kernal.php and add given lines to apis array of middlewareGroups.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'api' =&amp;gt; [
    \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,
    'throttle:api',
    \Illuminate\Routing\Middleware\SubstituteBindings::class,
],

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: If you get too many attempts error while calling APIs multiple time. Then comment ‘throttle:api’ line and keep default as it is like below screenshot.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gn_xZ6_---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60if2tikz9fkmwa32bwe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gn_xZ6_---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60if2tikz9fkmwa32bwe.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next go to UserModel.php file and add set below code so usermodel can use HasApiTokens to issue token.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use Laravel\Sanctum\HasApiTokens;
use HasApiTokens, HasFactory, Notifiable;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note in my project hasFactory trait not autoloaded.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ff6X9M21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5v1siiu69oikcu4vqisq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ff6X9M21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5v1siiu69oikcu4vqisq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#create-crontroller"&gt;
  &lt;/a&gt;
  Create Crontroller
&lt;/h4&gt;



&lt;p&gt;&lt;code&gt;php artisan make:controller Api\AuthController&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;This command create authController in Api folder of controller’s folder. &lt;/p&gt;

&lt;p&gt;Set routes in routes-&amp;gt;api.php file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use App\Http\Controllers\Api\AuthController;
Route::post("/register",[AuthController::class,'register']);
Route::post("/login",[AuthController::class,'login']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s make register function in authController. in this new user and token creates and given to response.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function register(Request $request){
        $fields = $request-&amp;gt;validate([
            'name' =&amp;gt;'required|string',
            'email'=&amp;gt;'required|string|email|unique:users,email',
            'password' =&amp;gt;'required|confirmed'
        ]);

        $user = User::create([
            'name'=&amp;gt;$fields['name'],
            'email'=&amp;gt;$fields['email'],
            'password'=&amp;gt;Hash::make($fields['password']),
        ]);

        //create token
        $token = $user-&amp;gt;createToken('myapptoken')-&amp;gt;plainTextToken;

        $response = [
            'status'=&amp;gt;true,
            'message'=&amp;gt;'registered successfully!',
            'data' =&amp;gt;[
                'user'=&amp;gt;$user,
                'token'=&amp;gt;$token
            ]
        ];
        return response($response,201);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And call api using postman as below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_yHgYxKP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6whfbewcpsxk2g7jcl5u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_yHgYxKP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6whfbewcpsxk2g7jcl5u.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#login-function"&gt;
  &lt;/a&gt;
  Login Function:
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function login(Request $request){
        $fields = $request-&amp;gt;validate([
            'email'=&amp;gt;'required|string|email',
            'password' =&amp;gt;'required|confirmed'
        ]);
        //check email
        $user = User::where('email',$fields['email'])-&amp;gt;first();
        //check password
        if(!$user || !Hash::check($fields['password'],$user-&amp;gt;password)){
            return response(['status'=&amp;gt;false,'message'=&amp;gt;'invalid email or password'],401);
        }

        //create token
        $token = $user-&amp;gt;createToken('myapptoken')-&amp;gt;plainTextToken;

        $response = [
            'status'=&amp;gt;true,
            'message'=&amp;gt;'Login successful!',
            'data' =&amp;gt;[
                'user'=&amp;gt;$user,
                'token'=&amp;gt;$token
            ]
        ];
        return response($response,201);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Call login api as below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VjqeP1OT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lx65stdnl037lc11jpom.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VjqeP1OT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lx65stdnl037lc11jpom.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now Let’s create authenticate routes in api-routes file as below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::group(['middleware'=&amp;gt;['auth:sanctum']],function(){
    Route::post("/logout",[AuthController::class,'logout']);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In above routes sanctum middleware validates token from Authorization header.&lt;/p&gt;

&lt;p&gt;Let’s make function logout in authController.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function logout(Request $request){
        auth()-&amp;gt;user()-&amp;gt;tokens()-&amp;gt;delete();
        $response = [
            'status'=&amp;gt;true,
            'message'=&amp;gt;'Logout successfully',
        ];
        return response($response,201);
    }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FjkNw4FS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lg03njzbyhwzfsc0pi3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FjkNw4FS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lg03njzbyhwzfsc0pi3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While token is not set/validate then will receive below response.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{&lt;br&gt;
    "message": "Unauthenticated."&lt;br&gt;
}&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Note: Set header Accept:application/json to get response in json for above apis and Authorization header with Bearer .&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>authentication</category>
      <category>sanctum</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Paxful Clone Script-6 Steps to Provide a software Like Paxful</title>
      <author>mohammad rahimi</author>
      <pubDate>Wed, 15 Sep 2021 11:56:52 +0000</pubDate>
      <link>https://dev.to/mohamma20017960/paxful-clone-script-6-steps-to-provide-a-software-like-paxful-3im9</link>
      <guid>https://dev.to/mohamma20017960/paxful-clone-script-6-steps-to-provide-a-software-like-paxful-3im9</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3FwK98fB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo49tu8g1bq6z8bgn6by.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3FwK98fB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo49tu8g1bq6z8bgn6by.png" alt="paxful is a p2p finance platform for trading cryptocurrencies"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-paxful"&gt;
  &lt;/a&gt;
  What is Paxful?
&lt;/h2&gt;

&lt;p&gt;Paxful is one of the best p2p finance platform for trading cryptocurrency. many companies are interested to launch &lt;strong&gt;paxful clone script&lt;/strong&gt; similar to paxful exchange.&lt;br&gt;
In 2014, Ray Youssef and Artur Schaback founded EasyBitz which was then renamed to Paxful, which gets its name from the Latin word for "peace". They had one goal in mind when they created it: to make Bitcoin easier for everyone from businesses to traders. &lt;br&gt;
A lot of big problems in the world revolve around money, specifically earning it and transporting it. Sending money around the world is not fast or cheap in any way, but Paxful changed that.&lt;br&gt;
Paxful is the p2p cryptocurrency marketplace where buyers and sellers are connected for business. Having over 300 payment methods available on Paxful creates it unbelievably easy to find proper suggestions.&lt;br&gt;
The p2p system of Paxful removes limits. You can think of your Paxful account as your very own financial passport. Also, you can send money and buy things from halfway around the world. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d7Otoweg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlx35esq5rhfh0djw243.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d7Otoweg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlx35esq5rhfh0djw243.jpeg" alt="stats of paxful exchange"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, in this article, we supposed to analyze the process of functioning paxful exchange, paxful clone script, benefits, features, functions, white label paxful clone script and how to build exchange like paxful. Let’s find out what these are:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-clone-script"&gt;
  &lt;/a&gt;
  What is clone script?
&lt;/h2&gt;

&lt;p&gt;A clone script is a replacement code or architecture of an existing website. The purpose of the website clone script is, it helps the entrepreneurs to start business rapidly with popular and unique features and minimize the startup costs. Actually The Clone scripts are the copy of famous online businesses out there in the world. These scripts can be used by entrepreneurs to start their online business at ease.&lt;br&gt;
Some business owners say clone scripts are not legal. But it isn’t. Because cloning a website doesn’t mean that the clone scripts are made from the exact code of the existing website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-and-benefits-of-using-clone-script"&gt;
  &lt;/a&gt;
  Features and benefits of using clone script
&lt;/h3&gt;

&lt;p&gt;Scalable and Customizable:&lt;br&gt;
Clone scripts are used in developing the clone app and it is very easy to customize the clone scripts according to the requirement of the project of the client. &lt;br&gt;
Quick Launch:&lt;br&gt;
The clone scripts do not take a long time to run as they are predefined scripts and already written and capable to run quickly.&lt;br&gt;
Low Cost:&lt;br&gt;
the clone scripts are open source so we can get that from the original site of the existing app and can easily get that from there and use it in our app though we do not have to pay any amount hence results in it being cost-effective.&lt;br&gt;
High Success Rate:&lt;br&gt;
The clone scripts are very powerful and we know that these are already used on someone’s site or used by many others though it is bug-free and attracted by the users across the globe. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-the-purpose-of-clone-scripts"&gt;
  &lt;/a&gt;
  What’s the purpose of clone scripts?
&lt;/h3&gt;

&lt;p&gt;The ultimate purpose of clone scripts is to help budding entrepreneurs to start their own online business hassle-free. Also eliminate the cost and time of development of the business applications. The entrepreneurs can buy the clone script from any of the service providers and customize them based on their preferences.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#white-label-paxful-clone-script-to-get-high-cryptocurrency"&gt;
  &lt;/a&gt;
  White label Paxful Clone Script - To Get High Cryptocurrency
&lt;/h2&gt;

&lt;p&gt;White label Paxful Clone Script is a set of source code that contains all trading functionalities of the Paxful exchange website. White label Paxful clone script allows you to customize the features according to the current digital trend &amp;amp; it allows you to change brand name, logo, theme, design according to your business needs at that moment. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z9ZRypYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1qg3en0b0uizwgsff0z7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z9ZRypYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1qg3en0b0uizwgsff0z7.png" alt="steps to build a website like paxful"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-steps-to-build-website-like-paxful"&gt;
  &lt;/a&gt;
  6 steps to build website like paxful
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#step1-paxful-business-model"&gt;
  &lt;/a&gt;
  Step1: Paxful Business Model
&lt;/h3&gt;

&lt;p&gt;Paxful is one of the most advanced clone scripts that you can use for making a high-end crypto trading platform. Using this powerful solution, it is possible for any entrepreneur to create an exchange as impeccable as Paxful. It has made the cryptocurrency exchange development more valuable for all the parties involved. From the developers to the exchange owners, it is prolific for everyone. paxful clone script works on a very strong architectural design that paves way for some big changes. The replication gets easier only because the platform has allowed you to use its technology. Otherwise, the security aspects are unbeatable and the functionality is also matchless. With this program, it is even possible for you to have a very certain style of trade. It brings a string of plugins and features for the users. To guarantee an honest exchange on the website, smart contracts with escrow are used. To reduce fraud, with other methods of exchange on the site, a system of reviews and reputation ratings has been introduced.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-key-exchange-features"&gt;
  &lt;/a&gt;
  Step 2. Key Exchange Features
&lt;/h3&gt;

&lt;p&gt;Registration. To create a new Paxful account:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Open a web browser and launch the Paxful webpage&lt;/li&gt;
&lt;li&gt; Click Create account on the top right corner of the main page. ...&lt;/li&gt;
&lt;li&gt; Complete the following fields on the signup form: ...&lt;/li&gt;
&lt;li&gt; Click Create Paxful account. ...&lt;/li&gt;
&lt;li&gt; Complete your captcha verification.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;User profiles.  Your public profile contains a summary of your account and your history on Paxful. Also, you can add an avatar (photo or any image), indicate the phone number, main currency and very briefly tell about yourself. In addition, you can configure notification settings in your profile. &lt;br&gt;
Remember that your public profile is visible to other Paxful users. On your public profile, other Paxful users will be able to view the following information about you:&lt;br&gt;
• Username&lt;br&gt;
• Profile picture&lt;br&gt;
• Verification - information if your email, phone, ID or address are verified, and you were verified as a trusted vendor.&lt;br&gt;
• Reputation - an aggregation of the positive and negative feedback that you have received on Paxful.&lt;br&gt;
• Active offers - offers you created that are currently active.&lt;br&gt;
• Your profile language&lt;br&gt;
• Number of trade partners&lt;br&gt;
• Number of trades&lt;br&gt;
• Trade volume - total BTC you’ve traded on Paxful.&lt;br&gt;
• Number of users who trust you&lt;br&gt;
• Number of users who have blocked you&lt;br&gt;
• Time elapsed since you joined Paxful&lt;br&gt;
• Last time you were online on Paxful&lt;br&gt;
Note: Your public profile will contain all the IDs you have earned on Paxful and will help other users decide if you are a safe trade partner or not.&lt;br&gt;
Verification, Know Your Customer (KYC). Paxful is one of the few crypto marketplaces that enforce KYC verification procedures. Verification is an important part of Paxful as we aim to make the trading experience on our platform as safe as possible. Users who fail to verify their identity can continue to use the exchanger, but a limit on the volume of transactions will be set for them.&lt;br&gt;
Cryptocurrency wallet.  The Paxful wallet is useful, protected, and easy to use on all your devices. You can simply manage your funds and top up directly through p2p marketplace, and send or receive Bitcoin, in just a few clicks. Over 3 million people have used the Paxful wallet to send and receive over 40,000 BTC. Its best-in-class security features make it one of the most trusted wallets in the world — so you’ll never have to choose between security and convenience.&lt;br&gt;
Security tools. Cryptocurrency holders and traders are especially vulnerable to cyber-attacks since digital currencies only run electronically. This is why choosing a secure and reliable online Bitcoin wallet is very essential. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Choose a crypto wallet that fits your needs&lt;/li&gt;
&lt;li&gt;Enable two-factor authentication&lt;/li&gt;
&lt;li&gt;Encrypt your Bitcoin wallet&lt;/li&gt;
&lt;li&gt;Backup your entire wallet regularly&lt;/li&gt;
&lt;li&gt;Utilize the multi-signature feature&lt;/li&gt;
&lt;li&gt;Keep your software updated&lt;/li&gt;
&lt;li&gt;Use different passwords for different accounts&lt;/li&gt;
&lt;li&gt;Never give away your private key&lt;/li&gt;
&lt;li&gt;Don’t click on unknown or suspicious links&lt;/li&gt;
&lt;li&gt;Use a secure Internet connection&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UVOdk95d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ciu2fx27z5rcqr5zpqu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UVOdk95d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ciu2fx27z5rcqr5zpqu2.png" alt="paxful,a cryptocurrency platform purchase, sale and exchange"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cryptocurrency purchase, sale and exchange. &lt;br&gt;
Over 350 ways to buy and sell Bitcoin: Select a payment method you like and trade directly with other people!&lt;br&gt;
1.Bank Transfers&lt;br&gt;
2.Exchange for Cash&lt;br&gt;
3.Other Wallet (Send to over 140 online wallets worldwide)&lt;br&gt;
4.Discounted Gift Cards&lt;br&gt;
5.Digital Currencies&lt;br&gt;
6.Goods &amp;amp; Services&lt;/p&gt;

&lt;p&gt;Escrow. Escrow in the financial sense means an arrangement where a third party (not the buyer or the seller)  holds funds in safekeeping pending the completion of a promised obligation. And enables users to get guaranteed transactons. It is best if it is open source software so that users can verify the integrity of the smart contract and the absence of errors in the code. &lt;br&gt;
Reviews and rating system. On the Paxful website, users can distinguish reliable counterparties from unscrupulous or scammers. They can be positive, neutral or negative. You can leave a response instantly after the successful completion of the transaction (or its failure). &lt;br&gt;
Customer support. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Customizable dashboard&lt;/li&gt;
&lt;li&gt; The ability to view site statistics (activity, trading volume, etc.)&lt;/li&gt;
&lt;li&gt; View user profiles&lt;/li&gt;
&lt;li&gt; Buy-Sell tab&lt;/li&gt;
&lt;li&gt; General information about the platform&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#step-3-monetization-of-the-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  Step 3. Monetization of the cryptocurrency exchange
&lt;/h3&gt;

&lt;p&gt;Publication fee. &lt;br&gt;
Buyer creates an escrow account&lt;br&gt;
One of the two parties, either the Buyer or Seller, will initiate the transaction. This process begins when the user inquires about the offering and creates an account on CryptoExchange. With an account set up, the two parties can solidify the terms of their agreement.&lt;br&gt;
Advertisements. Advertising promotion fees, posters, contextual advertising and paid links - all this is used on the site and in the Paxful application to increase the profitability of the platform.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-marketing-strategy"&gt;
  &lt;/a&gt;
  Step 4: Marketing Strategy
&lt;/h3&gt;

&lt;p&gt;The paxful cryptocurrency exchange was launched in 2014 and is a peer-to-peer Bitcoin marketplace, has recently entered India. In the first 21 weeks of 2020, Paxful has recorded a minimum of $1 million in weekly volumes. Since the beginning of May 2020, the weekly traded Bitcoin volumes have grown setting three consecutive all-time highs – with the week ending 17th May recording a total of $1.521 million (ATH).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-development-approaches"&gt;
  &lt;/a&gt;
  Step 5. Development approaches
&lt;/h3&gt;

&lt;p&gt;Template Solution. You can create a crypto exchange like Paxful using ready-made software. You can get it for free, for example, on GitHub, or buy for 300 - 1000 dollars. Free solutions usually have poor functionality and are not well tested for errors and other vulnerabilities. Paxful clones software sold may vary by manufacturer.&lt;br&gt;
Development from scratch. A more complex and expensive option to create a Paxful clone software, but it gives you more control over the development process and allows you to implement unique software solutions. The cost of creating a P2P crypto exchanger from scratch usually varies from 20 to 50 thousand dollars.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-6-get-the-consultation-from-the-experienced-clone-script-providers"&gt;
  &lt;/a&gt;
  Step 6. Get the consultation from the experienced clone script providers
&lt;/h3&gt;

&lt;p&gt;The script is usually developed by well-experienced and qualified experts. They take care of everything from development, design, testing, and deployment, allowing you to focus on just the customization part. There are many advantages involved with purchasing and deploying a Paxful clone script for your business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-benefits-of-paxful-clone-script-to-start-a-p2p-cryptocurrency-exchange-software"&gt;
  &lt;/a&gt;
  The benefits of Paxful clone script to start a P2P cryptocurrency exchange software
&lt;/h2&gt;

&lt;p&gt;• Ready to launch&lt;br&gt;
• Skip development from scratch&lt;br&gt;
• No technical assistance&lt;br&gt;
• Easy customization&lt;br&gt;
• Save time and money&lt;br&gt;
These are benefits you can get to develop a P2P crypto exchange with Paxful clone script.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ylg0X72M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pcsove2j4154zzhxym5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ylg0X72M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pcsove2j4154zzhxym5.png" alt="paxful clone app development"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazing-paxful-clone-app-to-buy-and-sell-cryptos"&gt;
  &lt;/a&gt;
  Amazing Paxful Clone App - To Buy and Sell Cryptos
&lt;/h2&gt;

&lt;p&gt;Paxful Clone App Development Company&lt;br&gt;
Paxful Clone App is the cryptocurrency exchange trading app that contains all the crypto trading features of the Paxful app and also the additional features that help you to develop your own Crypto Exchange App such as Paxful. Ultra-fast transaction permits you trade crypto coins in a matter of seconds with 100+ payment gateway support.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>startup</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>Announcing Create Medusa App: One command for a full-stack headless e-commerce setup</title>
      <author>Vadim Smirnov</author>
      <pubDate>Wed, 15 Sep 2021 11:28:24 +0000</pubDate>
      <link>https://dev.to/medusajs/announcing-create-medusa-app-one-command-for-a-full-stack-headless-e-commerce-setup-28mo</link>
      <guid>https://dev.to/medusajs/announcing-create-medusa-app-one-command-for-a-full-stack-headless-e-commerce-setup-28mo</guid>
      <description>&lt;p&gt;With the new &lt;code&gt;create-medusa-app&lt;/code&gt; tool you will get your &lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; development environment ready within a couple of minutes. After completion, you will have a Medusa backend, a Gatsby or Next.js storefront, and an admin dashboard up and running on your local machine.&lt;/p&gt;

&lt;p&gt;Starting a new e-commerce project just got easier, now with one command.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-raw-createmedusaapp-endraw-"&gt;
  &lt;/a&gt;
  Getting started with &lt;code&gt;create-medusa-app&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Use &lt;code&gt;create-medusa-app&lt;/code&gt; with your preferred package manager:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn create medusa-app

npx create-medusa-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Behind the scenes, &lt;code&gt;create-medusa-app&lt;/code&gt; is populating your database with some initial set of mock data, which helps to interact with Medusa setup intuitively straight away. &lt;/p&gt;

&lt;p&gt;Right after hitting one of those commands, the multistep installation process will be initiated, so the starter can be shaped right for the specific needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#destination-folder"&gt;
  &lt;/a&gt;
  Destination folder
&lt;/h3&gt;

&lt;p&gt;Enter the path to the directory that will become the root of your Medusa project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;? Where should your project be installed? › my-medusa-store
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pick-the-starter-you-prefer"&gt;
  &lt;/a&gt;
  Pick the starter you prefer
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;? Which Medusa starter would you like to &lt;span class="nb"&gt;install&lt;/span&gt;? …
❯ medusa-starter-default
  medusa-starter-contentful
  Other
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be presented with three options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;medusa-starter-default&lt;/code&gt; is the most lightweight version of a Medusa project&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;medusa-starter-contentful&lt;/code&gt; almost like the default starter, but with &lt;code&gt;medusa-plugin-contentful&lt;/code&gt; preinstalled&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Other&lt;/code&gt; if you have a different starter that you would wish to install from &lt;code&gt;Other&lt;/code&gt; will give you the option of providing a URL to that starter. An additional question will be asked if you choose this option:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Where is the starter located? &lt;span class="o"&gt;(&lt;/span&gt;URL or path&lt;span class="o"&gt;)&lt;/span&gt; › https://github.com/somecoolusername/my-custom-medusa-starter
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the walkthrough purposes, we assume that the selected starter is &lt;code&gt;medusa-starter-default&lt;/code&gt; and proceed to the next step.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selecting-a-storefront"&gt;
  &lt;/a&gt;
  Selecting a Storefront
&lt;/h3&gt;

&lt;p&gt;After selecting your Medusa starter you will be given the option to install one of our storefront starters. At the moment we have starters for Gatsby and Next.js:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Which storefront starter would you like to &lt;span class="nb"&gt;install&lt;/span&gt;? …
❯ Gatsby Starter
  Next.js Starter
  None
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may also select &lt;code&gt;None&lt;/code&gt; if the choice is to craft a custom storefront for your product. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;create-medusa-app&lt;/code&gt; now has all of the info necessary for the installation to begin.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Creating new project from git: https://github.com/medusajs/medusa-starter-default.git
✔ Created starter directory layout
Installing packages...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the installation has been completed you will have a Medusa backend, a demo storefront, and an admin dashboard.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-inside"&gt;
  &lt;/a&gt;
  What's inside
&lt;/h2&gt;

&lt;p&gt;Inside the root folder which was specified at the beginning of the installation process the following structure could be found:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/my-medusa-store
  /storefront // Medusa storefront starter
  /backend // Medusa starter as a backend option 
  /admin // Medusa admin panel 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;create-medusa-app&lt;/code&gt; prints out the commands that are available to you after installation. When each project is started you can visit your storefront, complete the order, and view the order in Medusa admin.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;⠴ Installing packages...
✔ Packages installed
Initialising git &lt;span class="k"&gt;in &lt;/span&gt;my-medusa-store/admin
Create initial git commit &lt;span class="k"&gt;in &lt;/span&gt;my-medusa-store/admin

  Your project is ready 🚀. The available commands are:

    Medusa API
    &lt;span class="nb"&gt;cd &lt;/span&gt;my-medusa-store/backend
    yarn start

    Admin
    &lt;span class="nb"&gt;cd &lt;/span&gt;my-medusa-store/admin
    yarn start

    Storefront
    &lt;span class="nb"&gt;cd &lt;/span&gt;my-medusa-store/storefront
    yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What's next?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;To learn more about Medusa to go through our docs to get some inspiration and guidance for the next steps and further development:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.medusa-commerce.com/how-to/headless-ecommerce-store-with-gatsby-contentful-medusa"&gt;Find out how to set up a Medusa project with Gatsby and Contentful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.medusa-commerce.com/tutorial/adding-custom-functionality"&gt;Move your Medusa setup to the next level with some custom functionality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.medusa-commerce.com/how-to/plugins"&gt;Create your own Medusa plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have any follow-up questions or want to chat directly with our engineering team we are always happy to meet you at our &lt;a href="https://discord.gg/DSHySyMu"&gt;Discord&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>jamstack</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>Command line API tricks</title>
      <author>Jakub Roztocil</author>
      <pubDate>Wed, 15 Sep 2021 11:16:31 +0000</pubDate>
      <link>https://dev.to/pie/command-line-api-tricks-with-httpie-20lk</link>
      <guid>https://dev.to/pie/command-line-api-tricks-with-httpie-20lk</guid>
      <description>&lt;p&gt;Whether building or consuming APIs, you're definitely testing out API calls. The command line is a developer's best friend for quick checks and iterative development. You can move even faster with &lt;a href="https://httpie.io/"&gt;HTTPie&lt;/a&gt;. HTTPie releases unintuitive command flags from your brain and removes repetitive parameters completely.&lt;/p&gt;

&lt;p&gt;This post will give some quick examples to make the most of your command line API development. Use these tips and tricks to ease your API headaches and bring some fun into your workflow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#make-json-a-firstclass-citizen"&gt;
  &lt;/a&gt;
  Make JSON a first-class citizen
&lt;/h2&gt;

&lt;p&gt;For at least a decade, JSON has been the de facto standard response format for HTTP APIs. Strangely, a lot of tools give equal weight to other formats. HTTPie comes with sensible defaults, which assume data is expressed in JSON.&lt;/p&gt;

&lt;p&gt;After the &lt;a href="https://httpie.io/docs#installation"&gt;fast and easy installation&lt;/a&gt; you can retrieve JSON responses with a simple command line call:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;http api.open-notify.org/astros.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you run this command you’ll get a list of the people currently in space, thanks to &lt;a href="http://open-notify.org/"&gt;Open Notify&lt;/a&gt;. By default, HTTPie makes your API responses readable. The results of this call are displayed in syntax-highlighted JSON. And no need to pipe to another formatting tool or ask the server to pretty print the results.&lt;/p&gt;

&lt;p&gt;Whether request or response data, HTTPie always looks for JSON first, unless told otherwise. That means that &lt;code&gt;Content-type&lt;/code&gt; and &lt;code&gt;Accept&lt;/code&gt; headers are set to &lt;code&gt;application/json&lt;/code&gt;. It will even attempt to find JSON within &lt;code&gt;text/plain&lt;/code&gt; or unknown content types.&lt;/p&gt;

&lt;p&gt;As much as developers love JSON, we don’t always enjoy writing it, especially on the command line. Use flexible command line parameters to construct your JSON without curly brackets, quotes, and a lifetime supply of backslashes.&lt;/p&gt;

&lt;p&gt;Here’s a sample call to send some basic JSON, without any of the obtrusive syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;http POST pie.dev/post &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Jason year:&lt;span class="o"&gt;=&lt;/span&gt;2001
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you fire off that command, HTTPie interprets the &lt;code&gt;field=value&lt;/code&gt; pair as a string and &lt;code&gt;field:=value&lt;/code&gt; as a literal (in this case, a number). All of these parameter pairs turn into the JSON data POSTed to the URL:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Jason"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"year"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2001&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more complex data, you can include external JSON or text files. But you can stop struggling with JSON syntax, escaped quotes, and the like, just to express simple request data. There’s a natural progression of complexity, allowing HTTPie to handle one advanced field (say, an array) while maintaining a simple command line syntax. Refer to the &lt;a href="https://httpie.io/docs#non-string-json-fields"&gt;JSON fields documentation&lt;/a&gt; for guidance on these approachable details.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-natural-apinative-commands"&gt;
  &lt;/a&gt;
  Use natural API-native commands
&lt;/h2&gt;

&lt;p&gt;Nothing against the other command line request tools, but they weren’t built for APIs. Some of these CLI relics have been around almost as long as the Web itself. In an effort to support every protocol, data format, and usage pattern, they can make it difficult to accomplish the everyday tasks of API developers. HTTPie was built alongside modern API development to be a natural extension of your work.&lt;/p&gt;

&lt;p&gt;JSON as a first-class citizen is certainly an API-native choice. In addition, HTTPie pays homage to the primary protocol used to access APIs—HTTP. The &lt;a href="https://httpie.io/docs#interface-design"&gt;interface design&lt;/a&gt; of many HTTPie commands mimic the underlying HTTP requests.&lt;/p&gt;

&lt;p&gt;For example, this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;http POST pie.dev/post &lt;span class="se"&gt;\&lt;/span&gt;
    X-API-Key:123 &lt;span class="se"&gt;\&lt;/span&gt;
    User-Agent:Bacon/1.0 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Jason year:&lt;span class="o"&gt;=&lt;/span&gt;2001
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Will be sent via HTTP as the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight http"&gt;&lt;code&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/post&lt;/span&gt; &lt;span class="k"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pie.dev&lt;/span&gt;
&lt;span class="na"&gt;X-API-Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;123&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Bacon/1.0&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;application/json&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Jason"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"year"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2001&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Request headers are communicated almost identically, without the need for special command flags. This simplicity is made possible by a &lt;a href="https://httpie.io/docs#request-items"&gt;minimal DSL for request items&lt;/a&gt; that flows naturally. The &lt;code&gt;:&lt;/code&gt; for headers comes from HTTP, as does &lt;code&gt;=&lt;/code&gt; for data. In fact, the power of the syntax is clear with a simple tweak to a commend: add a &lt;code&gt;-f&lt;/code&gt; flag and the exact same data fields will be sent form-encoded:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight http"&gt;&lt;code&gt;&lt;span class="nf"&gt;POST&lt;/span&gt; &lt;span class="nn"&gt;/post&lt;/span&gt; &lt;span class="k"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;
&lt;span class="na"&gt;Host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pie.dev&lt;/span&gt;
&lt;span class="na"&gt;X-API-Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;123&lt;/span&gt;
&lt;span class="na"&gt;User-Agent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Bacon/1.0&lt;/span&gt;
&lt;span class="na"&gt;Content-Type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;application/x-www-form-urlencoded&lt;/span&gt;

name=Jason&amp;amp;year=2001
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to see how these HTTP calls look without making live calls, you can &lt;a href="https://httpie.io/docs#offline-mode"&gt;enter &lt;code&gt;--offline&lt;/code&gt; mode&lt;/a&gt;. Rather than send a request to the host, HTTPie prints it to stdout.&lt;/p&gt;

&lt;p&gt;Offline mode is a great way to see some of the other implicit choices HTTPie makes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;POST is sent automatically when request data is present&lt;/li&gt;
&lt;li&gt;You can remove &lt;code&gt;http://&lt;/code&gt; and &lt;code&gt;https://&lt;/code&gt; from your &lt;a href="https://httpie.io/docs#request-url"&gt;request URLs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Or simply use &lt;code&gt;:&lt;/code&gt; to &lt;a href="https://httpie.io/docs#url-shortcuts-for-localhost"&gt;send requests to localhost&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The natural syntax keeps your head in your API development and your eyes out of man pages. That lets you focus on the bigger issues, like getting API authentication to work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-repeat-your-authentication"&gt;
  &lt;/a&gt;
  Don’t repeat your authentication
&lt;/h2&gt;

&lt;p&gt;You may be familiar with the DRY principle in software development. Meant to reduce repetition, DRY stands for Don’t Repeat Yourself. Typical code-level approaches include modularization and similar abstractions. By contrast, each API request stands on its own. Every time you make an API request you must include any authentication credentials, even if you sent them in a previous request. For example, if your API requests are to a cloud storage service, every request that accesses your account needs your credentials for that service. This is repetitive and inconvenient.&lt;/p&gt;

&lt;p&gt;As an API client, HTTPie must abide by the API server’s rules. While the server must receive credentials fresh each time, HTTPie can store them to send on your behalf.&lt;/p&gt;

&lt;p&gt;Use the &lt;a href="https://httpie.io/docs#sessions"&gt;session functionality&lt;/a&gt;, so you don’t repeat your authentication. Session functionality is convenient when you pass API tokens in headers or as part of a request URL. In either case, these get in the way of the rest of your API call.&lt;/p&gt;

&lt;p&gt;When you make your first call, include the authentication, headers, and whatever else you want to send with every call. Then use the &lt;code&gt;--session&lt;/code&gt; flag to give the session a name:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;http &lt;span class="nt"&gt;--session&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;dev &lt;span class="nt"&gt;-a&lt;/span&gt; :APIKEY pie.dev/get X-Random-Header:Included
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we’ve included an API key via &lt;a href="https://httpie.io/docs#basic-auth"&gt;Basic Auth&lt;/a&gt; and a custom header. We also created a session named “dev.” Subsequent calls will only need to include the session flag to pass the authentication and header from the previous request.&lt;/p&gt;

&lt;p&gt;This command has the same results as the more verbose command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;http &lt;span class="nt"&gt;--session&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;dev pie.dev/get
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The API key authentication was attached to the HTTP call, even though we did not explicitly include it in the command. Similarly, the &lt;code&gt;X-Random-Header&lt;/code&gt; that took up so much space is sent without being explicitly present.&lt;/p&gt;

&lt;p&gt;Sessions make for much cleaner commands, especially when you start sending query parameters or request data. Once you have the session flag in place, you &lt;em&gt;don’t repeat yourself&lt;/em&gt;. And you can be done with the copy-pasting or tedious command line editing that so often accompanies API tinkering.&lt;/p&gt;

&lt;p&gt;An alternative to named sessions is to store session details within local files. You can share these session files amongst your team, so you always get the same results. Then &lt;a href="https://httpie.io/docs#anonymous-sessions"&gt;call them up by file path&lt;/a&gt;, or use the trick in the next section—include them in your default configuration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-your-own-defaults"&gt;
  &lt;/a&gt;
  Create your own defaults
&lt;/h2&gt;

&lt;p&gt;It can be an adventure to watch someone develop on their own machine. You’ll notice seemingly random key combinations produce extraordinary results (but pure chaos when a Vim user mistakenly thinks they're in insert mode). These sorts of customizations can help you get the most out of any dev tool. You’ll appreciate the custom defaults you can add to HTTPie to make it your own.&lt;/p&gt;

&lt;p&gt;The latest &lt;a href="https://httpie.io/docs#config"&gt;configuration file options and location&lt;/a&gt; are in the HTTPie docs.&lt;/p&gt;

&lt;p&gt;For example, you can reference a specific session file, so credentials from the previous section are automatically sent with each request. To do this, you include the &lt;code&gt;session&lt;/code&gt; flag by default with every command. Your config file will look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"default_options"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"--session=~/.config/httpie/sessions/current.json"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to reference a specific session file for a specific host, you can do so by providing a file name instead of a file path. A unique session file will then be created for each host, which you can then modify.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"default_options"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"--session=default"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whenever you need to overwrite the defaults, include another &lt;code&gt;session&lt;/code&gt; flag explicitly or use a &lt;code&gt;--no-session&lt;/code&gt; flag to remove any session data.&lt;/p&gt;

&lt;p&gt;Your config defaults can include any flag options as an array, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"default_options"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"--session=~/.config/httpie/sessions/current.json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"--body"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"--style=colorful"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"--format-options=json.indent:2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we have the session flag as before, but we also have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;included &lt;code&gt;--body&lt;/code&gt; to display only the response body (no headers);&lt;/li&gt;
&lt;li&gt;set the syntax highlighting &lt;code&gt;--style&lt;/code&gt; to a defined color scheme;&lt;/li&gt;
&lt;li&gt;used &lt;code&gt;--format-options&lt;/code&gt; to set indentation equal to two spaces;&lt;/li&gt;
&lt;li&gt;and instructed HTTPie to &lt;code&gt;--follow&lt;/code&gt; redirects to a new location.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using defaults, all of these flags will be included every time you use the &lt;code&gt;http&lt;/code&gt; command, unless you specifically override them.&lt;/p&gt;

&lt;p&gt;You can find a categorized list of command flags, which include options for downloading data, using SSL, and employing proxies, with the following HTTPie call:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;http &lt;span class="nt"&gt;--help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Within the list, you’ll find a balance of intuitive defaults with the flexibility to make it your own.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-fewer-api-headaches"&gt;
  &lt;/a&gt;
  Get fewer API headaches
&lt;/h2&gt;

&lt;p&gt;HTTPie started in 2012 to eliminate our own pain when building and calling APIs. Thousands of developers add it to their command line and use it to perform effortless requests with beautiful responses.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://httpie.io/"&gt;Learn more about HTTPie&lt;/a&gt; and follow us for more tips, news, and API tricks.&lt;/p&gt;




&lt;p&gt;Written by &lt;a href="https://twitter.com/adamd"&gt;Adam DuVander&lt;/a&gt; and originally published on &lt;a href="https://httpie.io/blog/cli-api-tricks"&gt;HTTPie blog&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cli</category>
      <category>api</category>
      <category>tricks</category>
      <category>httpie</category>
    </item>
    <item>
      <title>What’s new in HTTPie 2.5.0</title>
      <author>Mickaël Schoentgen</author>
      <pubDate>Wed, 15 Sep 2021 11:04:04 +0000</pubDate>
      <link>https://dev.to/pie/what-s-new-in-httpie-2-5-0-b99</link>
      <guid>https://dev.to/pie/what-s-new-in-httpie-2-5-0-b99</guid>
      <description>&lt;p&gt;We’re excited to introduce a new way of passing raw request data as an alternative to piping, XML pretty printing, and improved packaging.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#raw-request-data"&gt;
  &lt;/a&gt;
  Raw request data
&lt;/h2&gt;

&lt;p&gt;HTTPie has always used piping as the way to pass &lt;a href="https://dev.to/docs#raw-request-body"&gt;raw request data&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Standard way to pass raw request body:&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Hello, World!'&lt;/span&gt; | http pie.dev/post
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Piping, even though elegant, isn’t always practical, however. When generating API docs examples, invoking HTTPie from a programming language, or writing a complex command on the terminal, it may be easier to use a CLI option instead. That has been an often &lt;a href="https://github.com/httpie/httpie/issues/534"&gt;requested&lt;/a&gt; feature.&lt;/p&gt;

&lt;p&gt;In this release, we’ve added a new option called &lt;code&gt;--raw&lt;/code&gt;, and HTTPie treats its value as if it came through &lt;code&gt;STDIN&lt;/code&gt;. The following command does the same as the one above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# New in HTTPie 2.5.0:&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;http &lt;span class="nt"&gt;--raw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Hello, World!'&lt;/span&gt; pie.dev/post
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pretty-printing-of-xml"&gt;
  &lt;/a&gt;
  Pretty printing of XML
&lt;/h2&gt;

&lt;p&gt;JSON has been the &lt;em&gt;lingua franca&lt;/em&gt; of the API world for a while, and HTTPie has always provided &lt;a href="https://dev.to/docs#terminal-output"&gt;JSON formatting&lt;/a&gt; for terminal output. Many of our users work with XML as well, though, but XML bodies would be printed as they appear in the HTTP message, often on a single line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- comment --&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;root&amp;gt;&amp;lt;element&lt;/span&gt; &lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;'value'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;text&lt;span class="nt"&gt;&amp;lt;/element&amp;gt;&amp;lt;element&amp;gt;&lt;/span&gt;text&lt;span class="nt"&gt;&amp;lt;/element&amp;gt;&lt;/span&gt;tail&lt;span class="nt"&gt;&amp;lt;empty-element/&amp;gt;&amp;lt;/root&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This release brings formatting to XML (and XHTML) messages as well:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- comment --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;root&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;element&lt;/span&gt; &lt;span class="na"&gt;key=&lt;/span&gt;&lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;text&lt;span class="nt"&gt;&amp;lt;/element&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;element&amp;gt;&lt;/span&gt;text&lt;span class="nt"&gt;&amp;lt;/element&amp;gt;&lt;/span&gt;
  tail
  &lt;span class="nt"&gt;&amp;lt;empty-element/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can control the formatting behaviour using the following &lt;a href="https://dev.to/docs#format-options"&gt;format options&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change the default 2-space indent size with &lt;code&gt;--format-options=xml.indent:4&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Turn off XML formatting with &lt;code&gt;--format-options=xml.format:false&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#packaging-and-distribution"&gt;
  &lt;/a&gt;
  Packaging and distribution
&lt;/h2&gt;

&lt;p&gt;Another theme for this release was improving HTTPie packaging and its availability for different platforms. The following channels have been (or are being) updated or newly added:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;macOS: Homebrew, and MacPorts&lt;/li&gt;
&lt;li&gt;Linux: Snap, Spack, Fedora, RedHat &amp;amp; CentOS via EPEL, Arch, Gentoo, Alpine, Manjaro, OpenSUSE, OpenPKG, and Solus&lt;/li&gt;
&lt;li&gt;Windows: Chocolatey&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We want to give a big shout-out to &lt;a href="https://github.com/hroncok"&gt;Miro Hrončok&lt;/a&gt;, the maintainer of the HTTPie package in Fedora, who has been especially involved and was of great help.  And, of course, we are infinitely thankful to all the other package maintainers working behind the scenes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bug-fixes"&gt;
  &lt;/a&gt;
  Bug fixes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Resuming downloads (&lt;code&gt;--download&lt;/code&gt; with &lt;code&gt;--continue&lt;/code&gt;) with a single byte to be downloaded left is now fixed (&lt;a href="https://github.com/httpie/httpie/issues/1032"&gt;#1032&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;The behavior of &lt;code&gt;--verbose&lt;/code&gt; requests with a streamed body when the server returned &lt;code&gt;307 Temporary Redirect&lt;/code&gt; is now fixed (&lt;a href="https://github.com/httpie/httpie/issues/1088"&gt;#1088&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;The handling of session files with &lt;code&gt;Cookie:&lt;/code&gt; followed by other headers has been fixed (&lt;a href="https://github.com/httpie/httpie/issues/1126"&gt;#1126&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#community-contributions"&gt;
  &lt;/a&gt;
  Community contributions
&lt;/h2&gt;

&lt;p&gt;We’d like to thank these amazing people for their contributions to this release: &lt;a href="https://github.com/hroncok"&gt;Miro Hrončok&lt;/a&gt;, &lt;a href="https://github.com/blyxxyz"&gt;Jan Verbeek&lt;/a&gt;, &lt;a href="https://github.com/Almad"&gt;Almad&lt;/a&gt;, &lt;a href="https://github.com/nixbytes"&gt;nixbytes&lt;/a&gt;, &lt;a href="https://github.com/marcelstoer"&gt;Marcel Stör&lt;/a&gt;, &lt;a href="https://github.com/exploide"&gt;Jannik Vieten&lt;/a&gt;, &lt;a href="https://github.com/IlyaSukhanov"&gt;Ilya Sukhanov&lt;/a&gt;, &lt;a href="https://github.com/henryhu712"&gt;henryhu712&lt;/a&gt;, &lt;a href="https://github.com/elenalape"&gt;Elena Lape&lt;/a&gt;, &lt;a href="https://github.com/ainzzorl"&gt;Anton Emelyanov&lt;/a&gt;, &lt;a href="https://github.com/a1346054"&gt;a1346054&lt;/a&gt;, &lt;a href="https://github.com/bl-ue"&gt;bl-ue&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Originally published on &lt;a href="https://httpie.io/blog/httpie-2.5.0"&gt;HTTPie blog&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>httpie</category>
      <category>api</category>
      <category>devtools</category>
      <category>cli</category>
    </item>
    <item>
      <title>The Debugger Checklist – Part I</title>
      <author>Shai Almog</author>
      <pubDate>Wed, 15 Sep 2021 10:37:34 +0000</pubDate>
      <link>https://dev.to/codenameone/the-debugger-checklist-part-i-3dco</link>
      <guid>https://dev.to/codenameone/the-debugger-checklist-part-i-3dco</guid>
      <description>&lt;p&gt;&lt;strong&gt;Win at debugging by following an organized process and leveraging the tools you already have&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’m a disorganized person by nature. When I follow a process it’s by habit and intuition. But when a debugging problem keeps me up at night and gets me to that state of mind where a career of raising sheep in New Zealand seems like an attractive option… That’s when I need to back off and walk through this process in an orderly fashion. This process never fails. When you walk through it, you can track any problem. &lt;/p&gt;

&lt;p&gt;Now I’m going to skip a lot of common advice. Most debugging tutorials start with things that relate to a process: File an issue, reproduce as a test case etc.&lt;br&gt;
I think there’s plenty written on that online. People use it as filler since they assume debugging is a simple process. It is sometimes. But as we will learn in this blog, there’s a lot of depth and breadth to this misleadingly simple process.&lt;/p&gt;

&lt;p&gt;We’re going to skip ahead to a point where you have a bug you can reproduce (consistently or otherwise) but you don’t understand or can’t prove the cause.&lt;/p&gt;

&lt;p&gt;This isn’t a tutorial for beginners, that’s a different post in which I will cover a lot of additional things and go into more details.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#works-on-my-machine"&gt;
  &lt;/a&gt;
  Works on My Machine
&lt;/h2&gt;

&lt;p&gt;If this doesn’t reproduce locally you might want to leverage remote debugging. This is pretty easy for most modern development tools, e.g.  &lt;a href="https://lightrun.com/debugging/how-to-debug-remotely-in-intellij/"&gt;this article&lt;/a&gt;  covers the process of debugging a Java process remotely in IntelliJ/IDEA.&lt;br&gt;
You can apply the same technique to most IDEs and languages/platforms.&lt;/p&gt;

&lt;p&gt;The main problem here is if this only happens in a production environment. In that case standard remote debugging is very dangerous. Both in terms of security (which is non-existent) but also in terms of your server reliability. Notice that there are ways to debug remote servers securely, safely and easily such as  &lt;a href="https://www.lightrun.com/"&gt;Lightrun&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;Without that you can try the following tricks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run locally but tunnel to the remote DB – I usually just use SSH tunneling but I hear good things about  &lt;a href="https://goteleport.com/"&gt;Teleport&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Log the exact entry point credentials the user sent and try to reproduce the request locally&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my experience this is one of the hardest things to do when debugging a remote issue. Especially in a clustered/polyglot environment.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#if-the-bug-is-inconsistent"&gt;
  &lt;/a&gt;
  If The Bug is Inconsistent
&lt;/h2&gt;

&lt;p&gt;These are the hard to track bugs for which we need the most help. These are also the bugs in which people lose faith in debugging. I’ll classify this problem into two distinct cases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Happens rarely&lt;/li&gt;
&lt;li&gt;Never happens if we stop at a breakpoint&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In both cases the best solution is logging and yes, logging is a form of debugging… We can add a log, “Apply Code Changes” (or edit and continue) and instantly see the output in our logs.&lt;/p&gt;

&lt;p&gt;If the problem doesn’t happen when we have a breakpoint it’s possible that it might not reproduce even with a log. That’s because the problem is a threading problem. &lt;br&gt;
Debugging a race condition or a deadlock is actually not as painful as it’s sometimes made out to be. I discuss this a bit later in this post. Note that debugging this is the “easy part”, fixing it… That’s the hard part...&lt;/p&gt;

&lt;p&gt;If it happens rarely then we still need to verify that this isn’t directly related to threading issues. I often make sure to log the current thread in this case to see if there’s a correlation with the invoking thread. I also try to log the stacks to see if the problem varies based on the stack that makes sense. A cool trick is to hash or checksum the stack to reduce the noise.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DebugUtil&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;stackHash&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// code from https://www.baeldung.com/java-stacktrace-to-string&lt;/span&gt;
      &lt;span class="nc"&gt;StringWriter&lt;/span&gt; &lt;span class="n"&gt;sw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;StringWriter&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
      &lt;span class="nc"&gt;PrintWriter&lt;/span&gt; &lt;span class="n"&gt;pw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;PrintWriter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sw&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RuntimeException&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

      &lt;span class="c1"&gt;// checksum for speed&lt;/span&gt;
      &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;toCharArray&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toHexString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;IOException&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Invalid Stack"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use this code in our logs which we can then instantly scan through to find whether a bug correlates to invocation through a specific stack.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conditional-breakpoints"&gt;
  &lt;/a&gt;
  Conditional Breakpoints
&lt;/h2&gt;

&lt;p&gt;You probably know about conditional breakpoints, but when was the last time you used them?&lt;/p&gt;

&lt;p&gt;If that’s recent then kudos to you! &lt;br&gt;
You’re one of the chosen few. &lt;/p&gt;

&lt;p&gt;This feature just isn’t used nearly as much as it should. E.g. we can use the previous checksum current stack code to verify that all calls arrive from the same stack. We can use the output of that method as a condition.&lt;/p&gt;

&lt;p&gt;Say the bug we’re tracking happens only when the data for a specific user is being processed. Creating a breakpoint where the condition is &lt;code&gt;userId == problematicUser&lt;/code&gt; lets us focus on the important parts. We can use the thread name as a condition to debug race conditions effectively.&lt;/p&gt;

&lt;p&gt;There are some problems with conditional breakpoints. E.g. They can impact performance in such a way that the execution slows down to such a degree that we can’t reproduce problems properly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rinse-repeat"&gt;
  &lt;/a&gt;
  Rinse Repeat
&lt;/h2&gt;

&lt;p&gt;You know that feeling when you step over the code after spending ages getting everything right… Then you step too far and you “missed it”!&lt;br&gt;
That’s the most frustrating feeling… It makes you want to throw a temper tantrum.&lt;/p&gt;

&lt;p&gt;Well, there’s a solution. We all should know about “run to cursor” which is nice. But most IDEs also support Go to Cursor which lets you manipulate the instruction pointer and return execution backward (or move it forward) to an arbitrary (legal) location. &lt;/p&gt;

&lt;p&gt;Oddly enough, up until recently this wasn’t supported in IntelliJ. It still isn’t… But there’s a plugin!&lt;/p&gt;

&lt;p&gt;The  &lt;a href="https://plugins.jetbrains.com/plugin/14877-jump-to-line"&gt;jump to line plugin&lt;/a&gt;, is one of those few must have plugins for IntelliJ that’s useful for just about everyone. It’s a life saver and a happiness enhancer. With this plugin you can literally drag the execution arrow on the left to a new location… Amazing.&lt;/p&gt;

&lt;p&gt;Couple that with the ability to edit variable values in the watch window and you can test your theories in the method while stepping over a block of code. You can easily simulate many scenarios that would take hours (if not days) to reproduce as test cases. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DOXumxn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbezontwvbv4vjqdn4pk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DOXumxn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbezontwvbv4vjqdn4pk.gif" alt="Jump to the line plugin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-be-continued"&gt;
  &lt;/a&gt;
  To be Continued
&lt;/h2&gt;

&lt;p&gt;Next time I'll go over the process of debugging an application. It's a very simple process but as usual "the devil is in the details". &lt;/p&gt;

&lt;p&gt;Do you have your own process? &lt;/p&gt;

&lt;p&gt;I'd love to hear your thoughts and debugging tips/tricks. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Build Your New On-demand Multi-Service App Utilizing The Best Laravel PHP Framework</title>
      <author>georgedavid</author>
      <pubDate>Wed, 15 Sep 2021 10:23:05 +0000</pubDate>
      <link>https://dev.to/georgedavid02/build-your-new-on-demand-multi-service-app-utilizing-the-best-laravel-php-framework-21p1</link>
      <guid>https://dev.to/georgedavid02/build-your-new-on-demand-multi-service-app-utilizing-the-best-laravel-php-framework-21p1</guid>
      <description>&lt;p&gt;As app development is the core process to start any kind of on-demand online business, concentrating on it is very important. Consequently, the developers today majorly use the Laravel backend program on the basis of its powerful integration framework. Because of its notable advantages, the same source has been used in on-demand multi-service app development too. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6uGHUomt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ygdanlukmikx2c0pdiua.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6uGHUomt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ygdanlukmikx2c0pdiua.png" alt="on-demand multi services app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Though the multiservice apps are considered as updated stuff to individual on-demand service apps, it admires a lot of business personalities' attention. In response, we can find several entrepreneurs focusing on better multiservice app development for new business initiations nowadays.&lt;/p&gt;

&lt;p&gt;Touching on it, let's discuss why Laravel is better for you to develop your multiservice app. And, how powerfully you can build your Uber for X multiservice app that competes with the demands faced by developers and entrepreneurs at present.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-laravel-backend-framework-is-the-best-for-ondemand-multiservice-app-development"&gt;
  &lt;/a&gt;
  Why Laravel Backend Framework is the Best for On-demand Multiservice App Development?
&lt;/h2&gt;

&lt;p&gt;As mentioned, the backend of an on-demand business app takes a vital role in its complete operation online. Thus, having a reliable and standard technology implementation to take care of progressive business data would be your developed app’s great victory in the market. In the Uber for X multiservice app development too, it acquires the below-mentioned major benefits.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Laravel backend makes your coding easier&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Fast app development completion&lt;/em&gt;&lt;br&gt;
&lt;em&gt;The complete open-source helps you to make an affordable development cost&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Modular approach possible for the convenient development processing&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Your multiservice app could be smartly being updated with its powerful MVC Architecture.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Above all, you could get a lot more additions such as quick time duration to market, object-related libraries, composers, best routing, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-features-of-laravel-for-your-effective-business-app-creation"&gt;
  &lt;/a&gt;
  Top Features of Laravel for Your Effective Business App Creation
&lt;/h2&gt;

&lt;p&gt;The comprehensive development framework for your multiservice app boosts an expressive syntax. Its effective feature options make your app development operation completely refreshed. This is how Laravel still stands to be a favorite one of contemporary developers focusing on its most developer-friendly nature and comfortability to build both desktop and mobile apps. In which, for your powerful multiservice app creation, refer to its top features in the following. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Authorization System&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your app development with Laravel allows you to easily take care of user authentication. As everything is already configured and built-in in the framework, you can also manage the assigning claimed access rights. To developers, it provides an organized way to outline the authentication logic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Simplified Notification Transmission&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Laravel framework’s effective SwiftMailer library lets the notification integration can be used for simplified notification configuration for individual accounts. It supports sending notifications from multiple channels. So that alert transmission throughout the multiservice business in progress would be smoothened. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seamless Automation Checking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Automation checking is used to test your new multiservice app’s performance ratio. Representing how well a created solution works without any errors, crashes, or bugs. For this purpose, with the inbuilt Laravel framework’s checking options in addition to its support for PHP Unit test utilizing phpunit.xml, you can easily check the fundamental user activities to examine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Laravel Database Migration System&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Laravel has a seamless database migration system. Because syncing with the database is a tedious task for developers, which also demands long timing hours to complete the task, Laravel’s seamless data migration allows you to easily enhance the quality of the database speedily without any compromisation in actual security.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-core-advantages-app-developers-derives-from-laravel-backend-programming"&gt;
  &lt;/a&gt;
  The Core Advantages App Developers Derives From Laravel Backend Programming
&lt;/h2&gt;

&lt;p&gt;Same as how the backend program is the core stuff in business app operations, its advantages are important for developers for purposes. Thereby, from the development to custom modulations, everything would be smart achievable at the end of the satisfying app design outlet. For example, the following core advantages of the Laravel framework assist you to build a gainful Uber for X business app.&lt;/p&gt;

&lt;p&gt;Implementing Authentication Enable - The Laravel backend program enables implementing authentication. So that everything is finely configured to a great organized authentication logic. And, the requirement controls access to various resources.&lt;/p&gt;

&lt;p&gt;Fast Cache Configurations - Since the Laravel backs are well-known for their cache backends, as a developer, you can configure a number of cache configurations fast. &lt;/p&gt;

&lt;p&gt;User-friendly API Provision - As a developer, you can offer your client a clean and easy-to-use API through SwiftMailer Library. Its drivers let an app rapidly get ready-to-move, send notification alerts via cloud-based service. &lt;/p&gt;

&lt;p&gt;Enhanced Monolog Library - Though the Laravel framework has been well integrated with the enhanced monolog logging library, it is much more useful for you. Through that, you are getting the support for handling a load of effective logs.&lt;/p&gt;

&lt;p&gt;Powerful Routeway Identification - Each Laravel backend route is determined right in the App/HTTP/routes.php file. So it is naturally loaded by the framework. Additionally, offers a forceful method of determining route-ways through accepting URL along with a Closure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#victorious-development-and-winning-multiservice-app-output"&gt;
  &lt;/a&gt;
  Victorious Development And Winning Multiservice App Output
&lt;/h2&gt;

&lt;p&gt;In the real-time marketplace, your on-demand multiservice app performs sophisticatedly owing to its robust backend structure. Its development side of client-based captivations lets both the developer and the entrepreneurs get a win-win favor. Hence the newly developed Uber for X app possesses the main characteristics as follows, the business achieves a lot in real-time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seamless App Functionality&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Though all the enhancements would be covered with your backend program, your multiservice app’s total functionality is seamless. So, even between a number of users accessing at the same time, your business app performs in a standardized manner.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Client-centric App Creation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using its full easy backend programming modulation solution, you can develop the multiservice app as per custom-centric backend program requirements. Therefore, you can make your client better satisfied with your complete app creation task output for service initiations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speedy Development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Laravel’s fast and fine backend development segments urge your new app-building right from the beginning. So it helps you to offer clients a fast and secure app development creation. Therefore, an immediate business launching as per the plan possible with its overall.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Great Base for Multi OSs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The adaptable Laravel framework allows you to code programs for a great backend operation functionality to your multiservice apps which are supported with multiple mobile phone/web operating systems. So, the entrepreneurs who require multi-OS supporting business apps could smartly get them all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Robust Security&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Above all, for a robust security requirement for your new Uber for X on-demand multiservice app, the Laravel framework inherently has many features and operations, which make your app more secure and powerful enough to prevent vulgarities. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#all-in-all"&gt;
  &lt;/a&gt;
  All in All
&lt;/h3&gt;

&lt;p&gt;Multiservice app development today increased amongst business personalities for their gainful startups online. Considering it, the developers using Laravel backend framework are vastly encouraged by them focusing on the programming advantages in the app’s functionality. Whereupon, &lt;a href="https://www.spotnrides.com/uber-for-x-ondemand-multi-services-app"&gt;Uber for X&lt;/a&gt; on-demand multiservice app which is developed utilizing the powerful Laravel framework naturally covers the discussed victorious benefits. &lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>programming</category>
      <category>framework</category>
    </item>
    <item>
      <title>How to deploy Django to Heroku</title>
      <author>Abhijith Ganesh</author>
      <pubDate>Wed, 15 Sep 2021 09:50:37 +0000</pubDate>
      <link>https://dev.to/abhijithganesh/how-to-deploy-django-to-heroku-4ea3</link>
      <guid>https://dev.to/abhijithganesh/how-to-deploy-django-to-heroku-4ea3</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction:
&lt;/h3&gt;

&lt;p&gt;Most of you would’ve already seen n number of blogs on how to deploy Django projects to Heroku but in this article, I shall explain in simple words in a sequential manner without much confusion.&lt;/p&gt;

&lt;p&gt;We shall consider a simple project without any additional boiler plate code. I shall call the &lt;u&gt;&lt;em&gt;project&lt;/em&gt; as &lt;strong&gt;mysite&lt;/strong&gt; and &lt;em&gt;app&lt;/em&gt; as &lt;strong&gt;appOne&lt;/strong&gt;.&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;I shall start from scratch and attach this repository at the end of this tutorial.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-linux-users"&gt;
  &lt;/a&gt;
  For Linux Users:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python3 &lt;span class="nt"&gt;-m&lt;/span&gt; venv Environ
&lt;span class="nb"&gt;source &lt;/span&gt;Environ/bin/activate
python &lt;span class="nt"&gt;-m&lt;/span&gt; pip &lt;span class="nb"&gt;install &lt;/span&gt;django
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#for-windows-users"&gt;
  &lt;/a&gt;
  For Windows Users:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python -m venv Environ
cd Environ/Scripts/
activate
cd ../../
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configuring-django"&gt;
  &lt;/a&gt;
  Configuring Django
&lt;/h3&gt;

&lt;p&gt;Continuing this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;django-admin startproject mysite
&lt;span class="nb"&gt;cd &lt;/span&gt;mysite
django-admin startapp appOne
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;This is how your tree will look after running those commands successfully&lt;/em&gt; &lt;strong&gt;:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mysite
    │   manage.py
    │
    ├───appOne
    │   │   admin.py
    │   │   apps.py
    │   │   models.py
    │   │   tests.py
    │   │   views.py
    │   │   __init__.py
    │   │
    │   └───migrations
    │           __init__.py
    │
    └───mysite
            asgi.py
            settings.py
            urls.py
            wsgi.py
            __init__.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#steps-to-launch-and-deploy-the-project-to-heroku"&gt;
  &lt;/a&gt;
  &lt;u&gt;&lt;strong&gt;Steps to launch and deploy the project to Heroku:&lt;/strong&gt;&lt;/u&gt;
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#step-one"&gt;
  &lt;/a&gt;
  &lt;em&gt;Step One&lt;/em&gt;:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;BASE_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;
&lt;span class="n"&gt;SECRET_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'SECRET_KEY'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'DEBUG'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ALLOWED_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you've created the Django project, please add the security key to your Environment secrets and Config Vars.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r0msiy4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/isnwdv9uul1u52bpkwei.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r0msiy4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/isnwdv9uul1u52bpkwei.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-two"&gt;
  &lt;/a&gt;
  &lt;em&gt;Step Two&lt;/em&gt;:
&lt;/h4&gt;

&lt;p&gt;We don’t have any static files for this project, but if needed you can use &lt;em&gt;whitenoise&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devcenter.heroku.com/articles/django-assets"&gt;Heroku's guide on whitenoise&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;MIDDLEWARE&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="s"&gt;'whitenoise.middleware.WhiteNoiseMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;STATICFILES_STORAGE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'whitenoise.storage.CompressedManifestStaticFilesStorage'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In config vars set &lt;em&gt;DEBUG_COLLECTSTATIC&lt;/em&gt; = 1.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-three"&gt;
  &lt;/a&gt;
  &lt;em&gt;Step Three&lt;/em&gt;:
&lt;/h4&gt;

&lt;p&gt;After configuring the project, we'll now be freezing the requirements and Procfile&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip freeze&amp;gt;requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#procfile"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Procfile:&lt;/strong&gt;
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;web: manage.py makemigrations &amp;amp;&amp;amp; manage.py migrate
web: gunicorn mysite.wsgi:app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step-four"&gt;
  &lt;/a&gt;
  &lt;em&gt;Step Four&lt;/em&gt;:
&lt;/h4&gt;

&lt;p&gt;Commit all these files to your git repository and push it to your source .&lt;br&gt;
I’ll be using &lt;em&gt;GitHub&lt;/em&gt; for this tutorial&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init &lt;span class="nb"&gt;.&lt;/span&gt; 
git add &lt;span class="nb"&gt;.&lt;/span&gt; 
git commit &lt;span class="nt"&gt;-m&lt;/span&gt;  “Initial Commit🚀”
git remote add origin &amp;lt;&lt;span class="nb"&gt;link&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step-five"&gt;
  &lt;/a&gt;
  &lt;em&gt;Step Five&lt;/em&gt;:
&lt;/h4&gt;

&lt;p&gt;Go to dashboard and deploy &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JDXDx-aE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xz4b0w5mm1n2x12pned0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JDXDx-aE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xz4b0w5mm1n2x12pned0.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It should be working fine! Feel free to reach out if there are any issues.&lt;/p&gt;

&lt;p&gt;View the deployment here at: &lt;a href="https://testing-repos.herokuapp.com/"&gt;https://testing-repos.herokuapp.com/&lt;/a&gt;&lt;br&gt;
Repository at: &lt;a href="https://github.com/AbhijithGanesh/Tutorial-for-Heroku"&gt;https://github.com/AbhijithGanesh/Tutorial-for-Heroku&lt;/a&gt;&lt;/p&gt;

</description>
      <category>django</category>
      <category>heroku</category>
      <category>python</category>
    </item>
    <item>
      <title>Create a PDF document from an Azure DevOps Wiki</title>
      <author>Marcel.L</author>
      <pubDate>Wed, 15 Sep 2021 09:20:57 +0000</pubDate>
      <link>https://dev.to/pwd9000/create-a-pdf-document-from-an-azure-devops-wiki-fjh</link>
      <guid>https://dev.to/pwd9000/create-a-pdf-document-from-an-azure-devops-wiki-fjh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#azure-devops-wiki"&gt;
  &lt;/a&gt;
  Azure DevOps Wiki
&lt;/h2&gt;

&lt;p&gt;When working on Azure DevOps or Github, we have special needs when it comes to wiki's and documentation. Specifically, we often have our documentation sit next to our source code in our repos, allowing us to version our documentation along with our source code. This developer-specific workflow is totally supported by Azure DevOps Wiki. What is great about using the Azure DevOps wiki is that similarly how teams can share and collaborate on a projects source code the same team, using the same workflow can also share and collaborate on a projects documentation through its Wiki. Documentation such as release notes, manuals and any sort of documentation that needs to accompany a project can be created in a Wiki. The documentation is then also kept in source control and in a central place that a team can access and collaborate on.  &lt;/p&gt;

&lt;p&gt;But this might not be suitable or possible at all times in all use cases, for example to see the DevOps wiki a person must have access to the DevOps Project and Wiki. Say for example someone who is in a different project or in a management role that does not have access to the DevOps project or wiki would like to see a products release notes or maybe some sort of documentation on the project in a document, this makes things a bit more tricky. So today I will share with you how you can convert your DevOps or Github wiki into a PDF document. We will also look at how we can create a pipeline that will automatically generate a new "Wiki PDF" document when required.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#devops-wiki-pdf-export-task"&gt;
  &lt;/a&gt;
  DevOps Wiki PDF Export Task
&lt;/h2&gt;

&lt;p&gt;WIKI PDF Export Tasks is a DevOps extension that can be installed into your DevOps Organisation from the Azure DevOps &lt;a href="https://marketplace.visualstudio.com/items?itemName=richardfennellBM.BM-VSTS-WikiPDFExport-Tasks"&gt;marketplace&lt;/a&gt;, simply put it is an Azure Pipelines extension that can give teams another way to present their Wiki as a PDF document, whether it be an export of a whole WIKI or just a single page.  &lt;/p&gt;

&lt;p&gt;The extension is based on a tool called &lt;a href="https://github.com/MaxMelcher/AzureDevOps.WikiPDFExport"&gt;&lt;strong&gt;AzureDevOps.WikiPDFExport&lt;/strong&gt;&lt;/a&gt; by Max Melcher that allows you to export a whole WIKI (or a single file) as a PDF. The tool performs the following tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clone a WIKI Repo&lt;/li&gt;
&lt;li&gt;Run the command line tool passing in a path to the root of the cloned wiki repo&lt;/li&gt;
&lt;li&gt;The .order file is read&lt;/li&gt;
&lt;li&gt;A PDF is generated&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wiki-to-pdf-pipeline"&gt;
  &lt;/a&gt;
  Wiki to PDF Pipeline
&lt;/h2&gt;

&lt;p&gt;After installing &lt;a href="https://marketplace.visualstudio.com/items?itemName=richardfennellBM.BM-VSTS-WikiPDFExport-Tasks"&gt;WIKI PDF Export Tasks&lt;/a&gt; in your Devops Organisation. Navigate to your Wiki repository.&lt;br&gt;&lt;br&gt;
In this tutorial I am using a repo on my project called: &lt;strong&gt;Devops.Wiki&lt;/strong&gt; published as my project wiki.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--40pVSJJy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/wiki.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--40pVSJJy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/wiki.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Under my repo I then created a new folder/path called: &lt;code&gt;.pipelines&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SK7O01qR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/paths.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SK7O01qR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/paths.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this path we will create our YAML pipeline called &lt;code&gt;wiki-to-pdf.yml&lt;/code&gt; with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# code/wiki-to-pdf.yml&lt;/span&gt;

&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Wiki-To-PDF-$(Rev:rr)&lt;/span&gt;
&lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;none&lt;/span&gt;

&lt;span class="na"&gt;stages&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;stage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;wiki_export&lt;/span&gt;
  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Wiki Export&lt;/span&gt;

  &lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;wiki_to_pdf&lt;/span&gt;
    &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Wiki To PDF&lt;/span&gt;
    &lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;vmImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;windows-latest&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;richardfennellBM.BM-VSTS-WikiPDFExport-Tasks.WikiPDFExportTask.WikiPdfExportTask@1&lt;/span&gt;
      &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Export&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;private&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;DevOps&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;WIKI'&lt;/span&gt;
      &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;cloneRepo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://dev.azure.com/magiconionM/Devto_Blog_Demos/_git/DevOps.Wiki'&lt;/span&gt;
        &lt;span class="na"&gt;useAgentToken&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;localpath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/DevOpsWiki'&lt;/span&gt; 
        &lt;span class="na"&gt;outputFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)/PDF/DevOpsWiki.pdf'&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;PublishPipelineArtifact@1&lt;/span&gt;
      &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Publish&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;wiki&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;export&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Pipeline'&lt;/span&gt;
      &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;targetPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)/PDF'&lt;/span&gt;
        &lt;span class="na"&gt;artifactName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DevOpsWiki&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We can then set up this pipeline and trigger it manually, once the pipeline has completed it will generate an artifact that contains the PDF document.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9vwwhPKZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/run.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9vwwhPKZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/run.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ma4okwSZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/artifact.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ma4okwSZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Wiki-To-Pdf/assets/artifact.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Pwd9000-ML/blog-devto/blob/master/posts/DevOps-Wiki-To-Pdf/code/DevOpsWiki.pdf"&gt;Here&lt;/a&gt; is an example PDF export.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#other-examples"&gt;
  &lt;/a&gt;
  Other Examples
&lt;/h2&gt;

&lt;p&gt;Note on our pipeline the task used is specifically to export a private Azure DevOps WIKI:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;richardfennellBM.BM-VSTS-WikiPDFExport-Tasks.WikiPDFExportTask.WikiPdfExportTask@1&lt;/span&gt;
    &lt;span class="s"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Export&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;private&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Azure&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;DevOps&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;WIKI'&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;cloneRepo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://dev.azure.com/magiconionM/Devto_Blog_Demos/_git/DevOps.Wiki'&lt;/span&gt;
    &lt;span class="na"&gt;useAgentToken&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;localpath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/DevOpsWiki'&lt;/span&gt; 
    &lt;span class="na"&gt;outputFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)/PDF/DevOpsWiki.pdf'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here are two more examples. Export a Single File:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;richardfennellBM.BM-VSTS-WikiPDFExport-Tasks.WikiPDFExportTask.WikiPdfExportTask@1&lt;/span&gt; 
  &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Export&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Single&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;File'&lt;/span&gt;
  &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;cloneRepo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
    &lt;span class="na"&gt;localpath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)'&lt;/span&gt;
    &lt;span class="na"&gt;singleFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;release_notes.md'&lt;/span&gt;
    &lt;span class="na"&gt;outputFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)/PDF/ReleaseNotes.pdf'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Export a public GitHub WIKI:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;richardfennellBM.BM-VSTS-WikiPDFExport-Tasks.WikiPDFExportTask.WikiPdfExportTask@1&lt;/span&gt;
   &lt;span class="s"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Export&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;public&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;GitHub&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;WIKI'&lt;/span&gt;
   &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="na"&gt;cloneRepo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
     &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://github.com/rfennell/AzurePipelines.wiki.git'&lt;/span&gt; 
     &lt;span class="na"&gt;useAgentToken&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
     &lt;span class="na"&gt;localpath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)\GitHubRepo'&lt;/span&gt; 
     &lt;span class="na"&gt;outputFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(Build.ArtifactStagingDirectory)\PDF\GitHubWiki.pdf'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;I hope you have enjoyed this post and have learned something new. You can also find the code samples used in this blog post on my &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/master/posts/DevOps-Wiki-To-Pdf/code"&gt;Github&lt;/a&gt; page. ❤️&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#author"&gt;
  &lt;/a&gt;
  &lt;em&gt;Author&lt;/em&gt;
&lt;/h3&gt;


&lt;div class="ltag__user ltag__user__id__620034"&gt;
  
    .ltag__user__id__620034 .follow-action-button {
      background-color: #0cbb58 !important;
      color: #000000 !important;
      border-color: #0cbb58 !important;
    }
  
    &lt;a href="/pwd9000" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Amb4rEJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--L_SDLOmq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620034/93be2c72-3a13-478e-8af1-a4bedc1b2331.jpeg" alt="pwd9000 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/pwd9000"&gt;Marcel.L&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/pwd9000"&gt;Cloud Solutions Architect and DevOps enthusiast.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>tutorial</category>
      <category>azure</category>
      <category>productivity</category>
      <category>devops</category>
    </item>
  </channel>
</rss>
