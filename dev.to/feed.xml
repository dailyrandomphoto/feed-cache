<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Solution: Maximum Performance of a Team</title>
      <author>seanpgallivan</author>
      <pubDate>Sat, 05 Jun 2021 10:01:26 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-maximum-performance-of-a-team-244n</link>
      <guid>https://dev.to/seanpgallivan/solution-maximum-performance-of-a-team-244n</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/maximum-performance-of-a-team/discuss/1252316"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-1383-medium-maximum-performance-of-a-team"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/maximum-performance-of-a-team/"&gt;Leetcode Problem #1383 (&lt;em&gt;Medium&lt;/em&gt;): Maximum Performance of a Team&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You are given two integers &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;k&lt;/code&gt; and two integer arrays &lt;code&gt;speed&lt;/code&gt; and &lt;code&gt;efficiency&lt;/code&gt; both of length &lt;code&gt;n&lt;/code&gt;. There are &lt;code&gt;n&lt;/code&gt; engineers numbered from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;n&lt;/code&gt;. &lt;code&gt;speed[i]&lt;/code&gt; and &lt;code&gt;efficiency[i]&lt;/code&gt; represent the speed and efficiency of the &lt;code&gt;i&lt;/code&gt;th engineer respectively.&lt;/p&gt;

&lt;p&gt;Choose &lt;strong&gt;at most&lt;/strong&gt; &lt;code&gt;k&lt;/code&gt; different engineers out of the &lt;code&gt;n&lt;/code&gt; engineers to form a team with the maximum &lt;strong&gt;performance&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The performance of a team is the sum of their engineers' speeds multiplied by the minimum efficiency among their engineers.&lt;/p&gt;

&lt;p&gt;Return the maximum performance of this team. Since the answer can be a huge number, return it &lt;strong&gt;modulo&lt;/strong&gt; &lt;code&gt;10^9 + 7&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;We have the maximum performance of the team by selecting engineer 2 (with speed=10 and efficiency=4) and engineer 5 (with speed=5 and efficiency=7). That is, performance = (10 + 5) * min(4, 7) = 60.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;68&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;This is the same example as the first but k = 3. We can select engineer 1, engineer 2 and engineer 5 to get the maximum performance of the team. That is, performance = (2 + 10 + 5) * min(5, 4, 7) = 68.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= &amp;lt;= k &amp;lt;= n &amp;lt;= 10^5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;speed.length == n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;efficiency.length == n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= speed[i] &amp;lt;= 10^5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= efficiency[i] &amp;lt;= 10^8&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The trick to this problem, like many best product of &lt;strong&gt;x&lt;/strong&gt; and &lt;strong&gt;y&lt;/strong&gt; problems, is to find a way to iterate through one of the values in order, then evaluate the other value for each combination and take the &lt;strong&gt;best&lt;/strong&gt; result. If we sort the engineers by &lt;strong&gt;efficiency&lt;/strong&gt;, we can iterate downward through the engineers while evaluating the combined speed (&lt;strong&gt;totalSpeed&lt;/strong&gt;) of the ideal group.&lt;/p&gt;

&lt;p&gt;Since the index numbers between &lt;strong&gt;speed&lt;/strong&gt; and &lt;strong&gt;efficiency&lt;/strong&gt; correspond to each other, we shouldn't just sort &lt;strong&gt;efficiency&lt;/strong&gt;, however. Instead, we can create another array of arrays (&lt;strong&gt;ord&lt;/strong&gt;) with both stats combined into one array, then sort it based on the efficiency.&lt;/p&gt;

&lt;p&gt;As we iterate through the engineers in &lt;strong&gt;ord&lt;/strong&gt; order and add them to the available pool, we know that all the engineers so far are at or higher than &lt;strong&gt;minEff&lt;/strong&gt;, so we're free to only choose the &lt;strong&gt;k&lt;/strong&gt; fastest engineers for our group. To keep track of the sorted order of speeds of the engineers in our available pool, we can use a &lt;strong&gt;min priority queue&lt;/strong&gt; (&lt;strong&gt;sppq&lt;/strong&gt;) or &lt;strong&gt;min heap&lt;/strong&gt; (&lt;strong&gt;spheap&lt;/strong&gt;) structure. This way, we can eliminate the slowest engineer from our pool every time we add an engineer over the &lt;strong&gt;k&lt;/strong&gt; limit. At each stop, we should also find the product of &lt;strong&gt;totalSpeed&lt;/strong&gt; and the current minimum efficiency and update the &lt;strong&gt;best&lt;/strong&gt; result if necessary.&lt;/p&gt;

&lt;p&gt;It's important to note that the instructions say "at most" &lt;strong&gt;k&lt;/strong&gt; engineers, so we should start keeping track of &lt;strong&gt;best&lt;/strong&gt; right away. Also, we should remember to &lt;strong&gt;modulo 1e9+7&lt;/strong&gt; before we &lt;strong&gt;return best&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N * log(N))&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;speed&lt;/strong&gt; or &lt;strong&gt;efficiency&lt;/strong&gt;, for the sorting of &lt;strong&gt;ord&lt;/strong&gt; and for the priority queue / heap&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; for &lt;strong&gt;ord&lt;/strong&gt; and &lt;strong&gt;sppq&lt;/strong&gt; / &lt;strong&gt;spheap&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;The Javascript code would be even faster with a custom &lt;strong&gt;heap&lt;/strong&gt; implementation. The &lt;strong&gt;MinPriorityQueue()&lt;/strong&gt; npm is easier to use, but not as efficient.&lt;/p&gt;

&lt;p&gt;Javascript is faster by passing only the index reference into the priority queue, rather than combining both stats into an array before storage.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;maxPerformance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sppq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MinPriorityQueue&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="nx"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;eng&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;eng&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;BigInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;eng&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;BigInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;eng&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dequeue&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;BigInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;eng&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000000007&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;maxPerformance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;ord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;spheap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;eff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;heappush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spheap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spheap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;heappop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spheap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;eff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000000007&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;maxPerformance&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;efficiency&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="n"&gt;ord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;efficiency&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]};&lt;/span&gt;
        &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;compare&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]));&lt;/span&gt;
        &lt;span class="nc"&gt;PriorityQueue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sppq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;PriorityQueue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spd&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;poll&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000000007&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;maxPerformance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;efficiency&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]});&lt;/span&gt;
        &lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rbegin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rend&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;priority_queue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;spd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;spd&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;sppq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;totalSpeed&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000000007&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Find Largest and Smallest Element in an Array</title>
      <author>Mayank Pathak</author>
      <pubDate>Sat, 05 Jun 2021 09:09:02 +0000</pubDate>
      <link>https://dev.to/mayankpathak/find-largest-and-smallest-element-in-an-array-53fj</link>
      <guid>https://dev.to/mayankpathak/find-largest-and-smallest-element-in-an-array-53fj</guid>
      <description>&lt;p&gt;Hello guys👋, In this post we gonna check another most basic but most important programming problem in which we have to &lt;strong&gt;find the Largest and Smallest Element in an Array&lt;/strong&gt;. This problem❓ I solved when I was practicing✍ for the concept Array and thought🤔 that it will be useful if I share this problem with all those who are currently learning and practicing the Coding👨‍💻.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-description"&gt;
  &lt;/a&gt;
  Problem Description
&lt;/h3&gt;

&lt;p&gt;Write a program to find the largest and smallest element in an array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample input:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;6&lt;/p&gt;

&lt;p&gt;20 25 100 95 45 5&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The largest element in the array is : 100&lt;/p&gt;

&lt;p&gt;The smallest element in the array is : 5&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pKgXfcEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1pjq1bcfw6h3aycpzdt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pKgXfcEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1pjq1bcfw6h3aycpzdt.png" alt="Largest and Smallest Element in an Array"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#procedure-to-follow-to-get-the-required-sets-of-result"&gt;
  &lt;/a&gt;
  Procedure to follow to get the required sets of result
&lt;/h3&gt;


&lt;ol&gt;

&lt;li&gt;Declare the required variables.&lt;/li&gt;


&lt;li&gt;Take the inputs form the user keyboard.&lt;/li&gt;


&lt;li&gt;Assign the max and to the initial or first element of the array.&lt;/li&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;              i.e., max = min = a[0]
&lt;/code&gt;&lt;/pre&gt;



&lt;li&gt;If there is only one element present in the array then the loop did not execute and max, min hold the only present value in the array, thus that element becomes the both maximum and minimum.&lt;/li&gt;


&lt;li&gt;If array has more than one element, than loop executes and if any element found bigger than the previously assigned value, then that element becomes the largest.&lt;/li&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;             i.e.,  if (a[i] &amp;gt; max )  then max = a[i]
&lt;/code&gt;&lt;/pre&gt;



&lt;li&gt;Similarly, if any element found smaller than the previously assigned value, than that element becomes the smallest.&lt;/li&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;               i.e.,  if (a[i] &amp;lt; min )  then min = a[i]
&lt;/code&gt;&lt;/pre&gt;



&lt;li&gt;At last maximum and minimum elements are displayed as per the result output.&lt;/li&gt;
&lt;h3&gt;
  &lt;a href="#now-lets-come-to-the-coding-part-of-the-problem"&gt;
  &lt;/a&gt;
  Now let's come to the coding👨‍💻 part of the problem
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h4&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
/*Code is written in C++ language*/
  #include &amp;lt;iostream&amp;gt;
  using namespace std;
  int main() {
    int n,min,max;
    cin&amp;gt;&amp;gt;n;
    int arr[n];
    for(int i=0;i&amp;lt;n;i++)
    {
        cin&amp;gt;&amp;gt;arr[i];
    }
    min=max=arr[0];
    for(int i=0;i&amp;lt;n;i++)
    {
        if(arr[i]&amp;lt;min)
        {
            min=arr[i];
        }
        if(arr[i]&amp;gt;max)
        {
            max=arr[i];
        }
     }
    cout&amp;lt;&amp;lt;"The largest element in the array is : "&amp;lt;&amp;lt;max;
    cout&amp;lt;&amp;lt;endl;
    cout&amp;lt;&amp;lt;"The smallest element in the array is : "&amp;lt;&amp;lt;min;
    return 0;
  }

&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;The same set of code is compiled on the online compiler to provide the outputs as per the condition asked in the problem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input test&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
6
20 25 100 95 45 5

&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;&lt;strong&gt;Output test&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
The largest element in the array is : 100
The smallest element in the array is : 5

&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;Hence with the required set of problem and its explaination we came across to know one of the important programming problem in Array and we can make the concept array strong with practicing such kinds of problem as much as we can.&lt;/p&gt;

&lt;p&gt;Hope with this you learned and acquired some basic knowledge and help you somewhat.&lt;/p&gt;

&lt;p&gt;Drop a Love❤ if you liked👍 this post, then share 🤝this with your friends and if anything is confusing or incorrect then let me know in the comment section.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#i-would-love-to-connect-with-you-all-twitter-linkedin"&gt;
  &lt;/a&gt;
  I would love to connect with you all &lt;a href="//twitter.com/mayankp4513"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/mayank-pathak4513/"&gt;LinkedIn&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;If you find the post useful then consider &lt;strong&gt;&lt;a href="https://www.buymeacoffee.com/mayankpathak"&gt;Buying me a coffee&lt;/a&gt;☕&lt;/strong&gt;&lt;br&gt;
   &lt;a href="https://www.buymeacoffee.com/mayankpathak"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks from my side, this is Mayank, keep learning and exploring !!&lt;/p&gt;

&lt;p&gt;Meet you in the next article......till than see ya🤚&lt;/p&gt;


&lt;/ol&gt;

</description>
      <category>codenewbie</category>
      <category>cpp</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Are you too old/young to learn programming?</title>
      <author>Saifullah Usmani</author>
      <pubDate>Sat, 05 Jun 2021 08:48:21 +0000</pubDate>
      <link>https://dev.to/saifullahusmani/are-you-too-old-young-to-learn-programming-4eha</link>
      <guid>https://dev.to/saifullahusmani/are-you-too-old-young-to-learn-programming-4eha</guid>
      <description>&lt;p&gt;Hi, my name is Saifullah Usmani. I am a Passionate Programmer and a Graphic Designer. I have been programming since I was 13. I have learned a lot over the years and I want to provide that experience and knowledge to the world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This article is going to be very close to reality. I am not gonna motivate you like everyone else but I will tell you the truth. And then the choice is yours.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you are young:&lt;/strong&gt;&lt;br&gt;
If you are young like 13-26 (or more but you don't have any liabilities yet and you have time) then there is no need to ask this question at all. You can learn programming without any problem because this is the age where you have no liabilities and have time to learn anything. But you need to have passion to learn programming. If you don't have any passion towards programming then I suggest you to discover your passion and work on that. Don't get into programming for the sake of money or bright future. Because a job where you don't have any interest but good money is like a choice you choose with the price of your happiness and freedom which is not worth it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you are old:&lt;/strong&gt;&lt;br&gt;
If you are old like 50+. Then there are probably two reason you want to learn programming and that is more money or passion.&lt;br&gt;
If programming was your passion but you weren't able to get into it for any reason then I recommend you to go for it But be on the safe side if you have a family which is totally dependent on you and you don't have anyone to look after your family for financial needs like your children(or your children are young). If you want to get into programming for &lt;strong&gt;more money&lt;/strong&gt; then you must not go for it. You must not leave your job or any source of income but just learn programming in your free time. Because money attracts but it is not loyal(you will lose interest very soon) so don't switch immediately.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-reason-you-are-thinking-of-this-question"&gt;
  &lt;/a&gt;
  What is the reason you are thinking of this question?
&lt;/h2&gt;

&lt;p&gt;There are very few and similar reasons I found in people that keep them away from learning programming:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Fear of not being able to do it&lt;/li&gt;
&lt;li&gt;Time&lt;/li&gt;
&lt;li&gt;Job&lt;/li&gt;
&lt;li&gt;Lack of support&lt;/li&gt;
&lt;li&gt;Not enough resources&lt;/li&gt;
&lt;li&gt;Random misconceptions&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are the common reason that give birth to questions like: am I too old/young to learn programming, is programming for me, can I do programming, should I do programming, will I be a good programmer etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fear-of-not-being-able-to-do-it"&gt;
  &lt;/a&gt;
  Fear of not being able to do it:
&lt;/h2&gt;

&lt;p&gt;This fear is commonly spread by people who are not programmer but they do have misconceptions about programmers and programming. &lt;br&gt;
That is why whenever you discuss your idea of becoming a programmer with them they tell you a misconceptions like old people tell you a unreal horror story.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fear #1: Mathematics:&lt;/strong&gt;&lt;br&gt;
This is the most common one. Math is not used in programming so often. It is only used in fields where data is important like Machine Learning(ML), Artificial Intelligence(AI), Data Science or Robotics. So if you are not into any of those fields then knowing Mathematics is not a requirement at all other than just being able to use measurements for creating layouts(like px, mm, cm etc) and you are good to go.&lt;br&gt;
Now if you are interested in those fields of programming where Mathematics is a requirement then first learn a programming language for that specific field(Different Programming Languages are used for different purposes). After you have learned a Programming Language you will be able to narrow down to what you have to learn from a whole sea of the knowledge of Mathematics(You don't have to worry about Mathematics right now).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fear #2: You Need To Be A Genius:&lt;/strong&gt;&lt;br&gt;
Well my IQ is average. So that means no one has to be a genius to do coding. The type of coding you see in movies is also fake.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fear #3: I don't have a degree in Computer Science:&lt;/strong&gt;&lt;br&gt;
That is actually a valid argument to make. But in today's modern world tech companies are hiring people based on their skills not education. Also there are different options to earn from programming other than just jobs. You can start an online SAAS business or do freelancing or more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fear #4: You need a high tech system and resources:&lt;/strong&gt;&lt;br&gt;
Actually no. For programming you don't need a high tech system. You can even code on windows XP. But it also depends on the type of project you are working on. You have to do some research for that on your own because it cannot be written in a blog post as it is different for everyone.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fear #5: There are so many languages:&lt;/strong&gt;&lt;br&gt;
Yes it is true that there are hundreds of programming languages, tools and frameworks. But you don't have to learn all of them. You choose a Tech Stack and use that to build your projects.&lt;br&gt;
I have created a blog post for "&lt;a href="https://dev.to/saifullahusmani/complete-web-development-roadmap-122m"&gt;Complete Web Development Roadmap.&lt;/a&gt;" there you can see the collection of popular Tech Stacks for doing web development related work.&lt;/p&gt;

&lt;p&gt;There a lot of other fears, I can write thousands of words on them(But I don't want to waste your time, so let's continue) remember fear doesn't exist in reality. You can be a programmer if you want to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time"&gt;
  &lt;/a&gt;
  Time:
&lt;/h2&gt;

&lt;p&gt;This is the most common issue, how much time it will take, it will take so much time, I don't have enough time, is it worth it etc.&lt;/p&gt;

&lt;p&gt;Well this is a valid reason, but a valid reason for people who are doing a job or running a business. If you are a student or have no liability or spent more than 5 hours a day on social media then you are just being lazy and making excuses. If you have any passion or interest in programming then open up YouTube and start learning. &lt;/p&gt;

&lt;p&gt;Now the real problem is for people who are doing jobs. You need extra time. One thing you can do is if you are passionate about it then you can spend all of your time after office at home on programming. Learn this skill and start earning money with it via freelancing or by building online SAAS businesses so you can leave your job.&lt;/p&gt;

&lt;p&gt;Other thing is that you use your money wisely, build assets, make your passive income more than your expenses so you become financially stable and rich then you will have a lot of time to follow your passion or learn programming(I am being serious, read a book called "Rich Dad Poor Dad" and learn financial literacy.).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#job"&gt;
  &lt;/a&gt;
  Job:
&lt;/h2&gt;

&lt;p&gt;You are already doing a job and cannot leave it. But you have passion about programing so I advice you not to leave your job but try to learn programming in your free time and earn money from it via freelancing or building SAAS businesses. And then when you are satisfied with the income you are getting from programming then leave your job.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lack-of-support"&gt;
  &lt;/a&gt;
  Lack of support:
&lt;/h2&gt;

&lt;p&gt;Well that is actually a real thing, even your family won't support you especially in India, Pakistan earning money from computers is like a foolish concept and considered luck if someone actually earn money from it and considered as a non safe income stream.&lt;br&gt;
So no one will support you(sometime people do support as well), that is true but if you are passionate about it you can prove them that you are right in your decision. I don't mean arguing or misbehaving with your parents or family it is bad. I mean to say that achieve something from it and when your family will realize that this field have some scope and you are going in the right direction then they will support you too. Your parents only wants you to be one the safe side in the long run that is why they stop you from any adventure because they have seen the world. You have to satisfy them with your achievements that you are doing the right thing. It is hard but it is do-able.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#not-enough-resources"&gt;
  &lt;/a&gt;
  Not enough resources:
&lt;/h2&gt;

&lt;p&gt;You don't need a high tech computer as I mentioned above but you do need to have a computer or laptop to do proper coding. How can a solder fight without a sword. You need the sword otherwise you will fail. So earn money and buy a computer(it is a useless advice but it is the solution). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#random-misconception"&gt;
  &lt;/a&gt;
  Random misconception:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;misconception #1: Free courses are not good, buy paid courses:&lt;/strong&gt;&lt;br&gt;
People generally don't spend money on the things they are not sure about. And a fear of getting wrong information from free courses make them buy paid courses and they don't have or don't want to spend money on these courses so they never learn.&lt;br&gt;
The truth is YouTube is the only best thing to learn programming. I learned programming totally free on YouTube. And you will get the same content from paid courses but just with a name of a brand. I am not saying paid courses are bad I am just saying that the programming language is same it will not change so it doesn't matter from where you learn it. &lt;em&gt;You don't get paid for syntax(programming language code) you get paid for building logic&lt;/em&gt;. So start learning as soon as possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;misconception #2: Girls Don't/Can't Code:&lt;/strong&gt;&lt;br&gt;
Short answer, They do code. And they can Code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;misconception #3: Being Nerd:&lt;/strong&gt;&lt;br&gt;
This is another misconception about programmers that they are the nerds and they are very dull at social interactions and are boring and of dry personality. It is not true.&lt;br&gt;
Although many programmers are of quiet personality.&lt;br&gt;
&lt;em&gt;(I think that is because of the type of work they do. Using your brain constantly makes you intelligent, and when you know more you generally don't speak more. You see why apps and websites are so addictive because programmers know humans very well. They are quiet because they already know what you guys are thinking or talking about.(My personal thought))&lt;/em&gt;.&lt;br&gt;
But that doesn't mean they are like that all the time. In order to know or judge someone you must conversate with them.&lt;br&gt;
Think of programmer friends you have*(If none then you are also believing in an information that you can not even prove right or wrong with any reference.)* are they quiet all the time, if yes then how you became friends😁.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;misconception #4: Programming is not for kids:&lt;/strong&gt;&lt;br&gt;
Actually no, there are programming languages especially designed for kids(i.e scratch). Kids are also taught programming in many schools. Kids at the age of 8 can start learning coding and programming basics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;misconception #5: Boring Life:&lt;/strong&gt;&lt;br&gt;
Life of programmers is boring, dry and dull. They don't meet with people, they don't hangout, they don't have friends, their life only revolve around computers. Well that is actually not true at all. I don't know what to say more other than just &lt;strong&gt;NO&lt;/strong&gt; to every misconception😁, that is why they are called misconceptions. You can google "Misconceptions about programmers" to know more misconceptions you might have about programmers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Your feedback is welcome!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-me"&gt;
  &lt;/a&gt;
  Follow me:
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Follow me here:&lt;/em&gt; &lt;a href="https://dev.to/saifullahusmani"&gt;https://dev.to/saifullahusmani&lt;/a&gt;&lt;br&gt;
&lt;em&gt;YouTube:&lt;/em&gt; &lt;a href="http://bit.ly/saifullahusmani"&gt;http://bit.ly/saifullahusmani&lt;/a&gt; (Programming Tutorials Coming Soon).&lt;br&gt;
&lt;em&gt;Discord:&lt;/em&gt; &lt;a href="https://discord.gg/AKyvy8Y"&gt;https://discord.gg/AKyvy8Y&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Facebook&lt;/em&gt;: &lt;a href="https://www.facebook.com/SaifullahUsmani693"&gt;https://www.facebook.com/SaifullahUsmani693&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>guide</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to stay motivated and focused as a developer? </title>
      <author>HARSH VATS</author>
      <pubDate>Sat, 05 Jun 2021 08:33:58 +0000</pubDate>
      <link>https://dev.to/harshvats2000/how-to-stay-motivated-and-focused-as-a-developer-37a</link>
      <guid>https://dev.to/harshvats2000/how-to-stay-motivated-and-focused-as-a-developer-37a</guid>
      <description>&lt;p&gt;The only way to stay motivated is to be around people who are doing something great daily. You can't stay motivated if you are around people who are doing the same stuff daily.&lt;/p&gt;

&lt;p&gt;Before learning to stay motivated, learn to not get demotivated. Things like your side projects can also demotivate you, trust me.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-avoid-getting-demotivated"&gt;
  &lt;/a&gt;
  How to avoid getting demotivated?
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#1-if-you-are-not-able-to-figure-out-something-even-after-spending-hours-on-it-then-call-it-off-for-that-day"&gt;
  &lt;/a&gt;
  1. If you are not able to figure out something, even after spending hours on it, then call it off for that day.
&lt;/h3&gt;

&lt;p&gt;At first, you might think that how can you find the solution to a problem if you wouldn't spend more time on it, but that's not always the case. I'm saying it by experience that sometimes, you need to keep your mind off the problem. Start fresh the next day, with a different perspective towards the problem, and you might find a solution within minutes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-if-someone-tells-you-that-you-are-in-the-wrong-direction-dont-just-listen-to-them-blindly"&gt;
  &lt;/a&gt;
  2. If someone tells you that you are in the wrong direction, don't just listen to them blindly.
&lt;/h3&gt;

&lt;p&gt;There will be several people who'll tell you to follow a different path to achieve the same target like becoming a web developer. There can be infinite ways to achieve the same thing and most people don't understand that. Don't make yourself uncomfortable with what they say. Instead, just keep going if you feel like you are making progress. You can't lie to yourself, you know whether you are making progress or not. If yes then keep going, if not, then take some time to reconsider.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-never-feel-guilty-about-time-wasted"&gt;
  &lt;/a&gt;
  3. Never feel guilty about time wasted.
&lt;/h3&gt;

&lt;p&gt;It happens to me many times. I play mobile games a lot(just one specifically called shadow fight arena). Sometimes, I think about it that I played that game for 2 hours last day, the precious time which I could've used to learn something or spend some time refactoring my old code. This generates a feeling of guilt and we don't feel like anything. Another day goes by doing nothing.&lt;/p&gt;

&lt;p&gt;I'm slowly trying to get out of this by inculcating a thought that playing a game should make me happy and relaxed Instead of filling me with guilt.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-dont-let-your-college-marks-decide-what-you-can-do"&gt;
  &lt;/a&gt;
  4. Don't let your college marks decide what you can do.
&lt;/h3&gt;

&lt;p&gt;I'll be honest here. I'm a below 6 pointer student who wants to learn more and more about how the web works. I want to learn how things work at a basic level. I don't just know React.js, I know what they do under the hood (almost and still learning). &lt;/p&gt;

&lt;p&gt;You can't call yourself a web lover if you don't know how DNS works.&lt;/p&gt;

&lt;p&gt;That's what I'm talking about, don't let my last sentence demotivate you. If you don't know how DNS works then learn it. This should be the attitude. If you don't have time right now, then make notes of what you need to learn and when. You will find yourself filled with motivation. You won't have time for the boring stuff.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-stay-motivated"&gt;
  &lt;/a&gt;
  How to stay motivated?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-read-online-articlesblogs-and-watch-tutorials"&gt;
  &lt;/a&gt;
  1. Read online articles/blogs and watch tutorials.
&lt;/h3&gt;

&lt;p&gt;You need to join a community of developers around you. The best part of being a developer is to have the freedom of creating anything that could reach millions of users overnight. But obviously, that requires a lot of skills other than being a developer. But at least you can think start building things on your own.&lt;/p&gt;

&lt;p&gt;You do know that Mark Zuckerberg made Facebook in his hostel room right?&lt;/p&gt;

&lt;p&gt;Well, I'm not saying go out there and make another Facebook, but there's a lot of other things that you can try. Remember one thing, you can't make it perfect just on the first try.&lt;/p&gt;

&lt;p&gt;If you knew success was a certainty, what would you attempt to do?&lt;/p&gt;

&lt;p&gt;That's the beauty of life. So keep trying and keep building stuff.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-whatever-you-build-make-sure-you-can-show-that-to-anyone"&gt;
  &lt;/a&gt;
  2. Whatever you build, make sure you can show that to anyone.
&lt;/h3&gt;

&lt;p&gt;A negative feeling can arise if you built something and now you cannot show that to someone. Keep your projects on the git and also showcase them on platforms like LinkedIn, in your blogs, on your website.&lt;/p&gt;

&lt;p&gt;Also, make sure that the project you are showing is complete, otherwise, it'll leave a negative impact. You'll see that these things can boost your confidence. Don't make anything public until you are happy with that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-always-spend-time-on-your-old-written-code"&gt;
  &lt;/a&gt;
  3. Always spend time on your old written code.
&lt;/h3&gt;

&lt;p&gt;This might not sound that effective but it works for me. Instead of wasting time just sitting idle, I like to spend some time refactoring my personal projects, add new features, or bug fixing.&lt;/p&gt;

&lt;p&gt;I am also making it a habit to spend some time on open source projects instead of just working on mine, that'll make me a really good developer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-humans-are-social-animal-are-you-human"&gt;
  &lt;/a&gt;
  4. Humans are social animal (Are you human?)
&lt;/h3&gt;

&lt;p&gt;Don't feel like you can do much by ditching friends and utilizing that time to code. You are a social animal, enjoy your life dude and keep exploring things.&lt;/p&gt;

&lt;p&gt;That's it for today. Have a good day devs. Let me know in the comments what else we can do to stay motivated and focused on our goal.&lt;/p&gt;

&lt;p&gt;Keep exploring things...&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>explainlikeimfive</category>
    </item>
    <item>
      <title>Normalization in Deep learning</title>
      <author>AI Pool</author>
      <pubDate>Sat, 05 Jun 2021 08:21:02 +0000</pubDate>
      <link>https://dev.to/aipool3/normalization-in-deep-learning-4m73</link>
      <guid>https://dev.to/aipool3/normalization-in-deep-learning-4m73</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;Deep learning is an exciting field in Artificial intelligence, it is at the forefront of the most innovative and exciting fields such as computer vision, reinforcement learning, and natural language processing. Deep learning has a complex architecture, which comes with some problems. These deep neural networks have tons of layers, which are difficult to train because they are responsive to the learning algorithm's initial random weights and configuration.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9rbc2t3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://files.ai-pool.com/a/bc86348d9d3a3ecdceeb6cfa89b13b6f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9rbc2t3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://files.ai-pool.com/a/bc86348d9d3a3ecdceeb6cfa89b13b6f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The input layer may have certain features which dominate the process, due to having high numerical values. This can create a bias in the network because only those features contribute to the outcome of the training. For example, imagine feature one having values between 1 and 5, and feature two having values between &lt;strong&gt;100&lt;/strong&gt; and &lt;strong&gt;10000&lt;/strong&gt;. During training, due to the difference in scale of both features, feature two would dominate the network and only that feature would have a contribution to the outcome of the model.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#batch-normalization"&gt;
  &lt;/a&gt;
  Batch Normalization
&lt;/h3&gt;

&lt;p&gt;Batch normalization is the most common form of normalization in deep learning. It scales the inputs to a layer to a common value for every mini-batch during the training of deep neural networks. This stabilizes the learning process and significantly reduces the number of epochs required to train deep networks, enabling the network to train faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eukh7RWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://files.ai-pool.com/a/8446673bcaeb050168ff1666aff18bdd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eukh7RWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://files.ai-pool.com/a/8446673bcaeb050168ff1666aff18bdd.png" alt="BN"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The way batch normalization works are by calculating the mean and variance of every feature in the mini-batch, then the mean is subtracted and each feature is divided by the standard deviation of the mini-batch.&lt;/p&gt;

&lt;p&gt;You can find more in the following article &lt;a href="https://ai-pool.com/a/s/normalization-in-deep-learning"&gt;Normalization in Deep learning&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-resources"&gt;
  &lt;/a&gt;
  Other Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ai-pool.com/a/s/optimization-methods"&gt;Optimization Methods, Gradient Descent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ai-pool.com/a/s/diving-into-object-detection-basics"&gt;Diving into Object Detection Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ai-pool.com/a/s/understanding-of-support-vector-machine--svm"&gt;Understanding of Support Vector Machine (SVM)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ai-pool.com/a/s/introduction-of-fast-fourier-transformation--fft"&gt;Introduction of Fast Fourier Transformation (FFT)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aipool</category>
      <category>ai</category>
      <category>machinelearning</category>
      <category>normalization</category>
    </item>
    <item>
      <title>Color psychology in web design</title>
      <author>Eleftheria Batsou</author>
      <pubDate>Sat, 05 Jun 2021 08:10:27 +0000</pubDate>
      <link>https://dev.to/eleftheriabatsou/color-psychology-in-web-design-bk2</link>
      <guid>https://dev.to/eleftheriabatsou/color-psychology-in-web-design-bk2</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The goal of this article is to help you choose the right colors for your website.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Color usually depends on our personal experiences and preferences but there are also some universal signals. Choosing the right color can be a very challenging task. Individual differences can vary based on gender, age and culture. In a study titled “Impact of color on marketing” researchers found that up to 90% of snap judgments made about products can be based on color alone.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here is a quick guide to help you pick the “right” color based on psychology.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%F0%9F%8F%B3-white"&gt;
  &lt;/a&gt;
  🏳 WHITE
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RZ6SELJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622831835436/Mrpyl4aEt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RZ6SELJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622831835436/Mrpyl4aEt.png" alt="white.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Hygiene, sterility, clarity, purity, cleanness, simplicity, sophistication, efficiency.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Sterility, coldness, barriers, unfriendliness, elitism.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-grey"&gt;
  &lt;/a&gt;
  〰 GREY
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PLQ4pFGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622831880092/lSEzMg0ya.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PLQ4pFGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622831880092/lSEzMg0ya.png" alt="grey.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Psychological neutrality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Lack of confidence, dampness, depression, hibernation, lack of energy.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#black"&gt;
  &lt;/a&gt;
  ⚫ BLACK
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U3Dh2oAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832059214/DLcQTzG_O.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3Dh2oAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832059214/DLcQTzG_O.png" alt="bhlack.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Sophistication, glamour, security, emotional safety, efficiency, substance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Oppression, coldness, menace, heaviness.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#yellow"&gt;
  &lt;/a&gt;
  🟨 YELLOW
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---V5WIvY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832122390/QOxe_jV0e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---V5WIvY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832122390/QOxe_jV0e.png" alt="yellow.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Optimism, confidence, self-esteem, extraversion, emotional strength, friendliness, creativity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Irrationality, fear, emotional fragility, depression, anxiety, suicide.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#orange"&gt;
  &lt;/a&gt;
  🍊 ORANGE
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vdHxXMiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832184583/YmUs6bAsq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vdHxXMiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832184583/YmUs6bAsq.png" alt="orange.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Physical comfort, food, warmth, security, sensuality, passion, abundance, fun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Deprivation, frustration, frivolity, immaturity.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#brown"&gt;
  &lt;/a&gt;
  🤎 BROWN
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mlfDzO16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832212923/wq9zTwvvx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mlfDzO16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832212923/wq9zTwvvx.png" alt="brown.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Seriousness, warmth, Nature, earthiness, reliability, support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Lack of humor, heaviness, lack of sophistication.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pink"&gt;
  &lt;/a&gt;
  🐷 PINK
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rfPVXSEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832342114/HMy4pPtfj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rfPVXSEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832342114/HMy4pPtfj.png" alt="pink.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Physical tranquillity, nurture, warmth, femininity, love, sexuality, survival of the species.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Inhibition, emotional claustrophobia, emasculation, physical weakness.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#red"&gt;
  &lt;/a&gt;
  🍒 RED
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UdrTXblI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832352873/ZXLBt3FI6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UdrTXblI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832352873/ZXLBt3FI6.png" alt="red.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Physical courage, strength, warmth, energy, basic survival, ‘fight or flight’, stimulation, masculinity, excitement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Defiance, aggression, visual impact, strain.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E2%99%BE-violet"&gt;
  &lt;/a&gt;
  ♾ VIOLET
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L6ZHCxMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832453686/mKPfQo64b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L6ZHCxMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832453686/mKPfQo64b.png" alt="violet.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Spiritual awareness, containment, vision, luxury, authenticity, truth, quality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Introversion, decadence, suppression, inferiority.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#green"&gt;
  &lt;/a&gt;
  🍏 GREEN
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hYatm0rX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832469489/JDshGpl3j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hYatm0rX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832469489/JDshGpl3j.png" alt="green.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Harmony, balance, refreshment, universal love, rest, restoration, reassurance, environmental awareness, equilibrium, peace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Boredom, stagnation, blandness, reservation.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#blue"&gt;
  &lt;/a&gt;
  📘 BLUE
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OjajbWkM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832482590/v2308LSpB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OjajbWkM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622832482590/v2308LSpB.png" alt="blue.PNG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Positive:&lt;/strong&gt; Intelligence, communication, trust, efficiency, serenity, duty, logic, coolness, reflection, calm.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative:&lt;/strong&gt; Coldness, aloofness, lack of emotion, unfriendliness.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Choosing an appropriate color combination in the design process is considered one of the most important (yet often overlooked) elements in creating a successful website.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#quick-tips"&gt;
  &lt;/a&gt;
  Quick tips
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Focus on the target audience&lt;/li&gt;
&lt;li&gt;Be mindful of the background color as well as the font color&lt;/li&gt;
&lt;li&gt;Color chooser tools can be very helpful&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=yj2Akhmx2oU"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hNhU-CC3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/yj2Akhmx2oU/0.jpg" alt="IMAGE ALT TEXT HERE"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don’t use too many colors, usually 2–4 are enough&lt;/li&gt;
&lt;li&gt;Get some inspiration and make some research before your final decision&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=569Q2r0Z-5w"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DPE9imSW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/569Q2r0Z-5w/0.jpg" alt="IMAGE ALT TEXT HERE"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#to-sum-up"&gt;
  &lt;/a&gt;
  To sum up
&lt;/h1&gt;

&lt;p&gt;Every color has its purpose. Choose your colors wisely. If you are not sure how to pick the right one or the right combination to be afraid to ask a specialist to help you. Make your own research too. Check your competitors.&lt;/p&gt;




&lt;p&gt;👋Hello, I'm Eleftheria, a developer, public speaker, and chocolate lover.&lt;/p&gt;

&lt;p&gt;🥰If you liked this post please share.&lt;/p&gt;

&lt;p&gt;🍩Would you care about buying me a coffee? You can do it &lt;a href="https://www.buymeacoffee.com/elef/"&gt;here&lt;/a&gt; but If you can't that's ok too!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.paypal.com/paypalme/eleftheriabatsou"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7QXiTcCu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616336641314/ycZgZ44G3.gif" alt="cofGif.gif"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;🙏It would be nice to subscribe to my &lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; channel. It’s free and it helps to create more content.&lt;/p&gt;

&lt;p&gt;🌈&lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; | &lt;a href="https://codepen.io/EleftheriaBatsou"&gt;Codepen&lt;/a&gt; | &lt;a href="https://github.com/EleftheriaBatsou"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/BatsouElef"&gt;Twitter&lt;/a&gt; | &lt;a href="http://eleftheriabatsou.com/"&gt;Site&lt;/a&gt; | &lt;a href="https://www.instagram.com/elef_in_tech"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>design</category>
      <category>color</category>
      <category>brand</category>
      <category>uidesign</category>
    </item>
    <item>
      <title>Understanding the new keyword in JavaScript</title>
      <author>G U BHARATH CHANDRA</author>
      <pubDate>Sat, 05 Jun 2021 07:16:24 +0000</pubDate>
      <link>https://dev.to/bharathck/understanding-the-new-keyword-in-javascript-3po0</link>
      <guid>https://dev.to/bharathck/understanding-the-new-keyword-in-javascript-3po0</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hey 👋&lt;/strong&gt; this will be a bit long , but detailed post where we will try to understand using an example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Assume we have to build a game&lt;/strong&gt; where users can register with username against which score would be updated. So, the below code would do the job right?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When ever we need to create a new User, we can use &lt;code&gt;generateUser("&amp;lt;User entered name&amp;gt;" , 0)&lt;/code&gt; which would return us the new user Object.&lt;/p&gt;

&lt;p&gt;So, the next thing we need to take into consideration is to increment the score if the user wins the game.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obviously, the immediate choice would be to create a new function as below :&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;incrementScore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and whenever we need to increment the score, we can just use this function &lt;code&gt;incrementScore(user1);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But the problem here is that, when our code is modular/grows into huge codebase in future, we might not know where the increment function is located and also, in a case where we might need other operations like changing the name or adding a new property , we cannot just keep creating new functions as that would clutter the codebase and would become difficult to maintain.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So , how do we solve that?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Well, in 1 word → &lt;strong&gt;prototype&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But lets slowly try to solve this problem by understanding each step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What if we could just put the functions inside out generateUser as below?&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;incrementScore&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By this we can achieve the below :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;generateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;BruceWayne&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;incrementScore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Perfect! , now we can just use the user Object itself to incrementScore or change name or whatever...&lt;/p&gt;

&lt;p&gt;But, let's consider there are 200 users, in which case it is really painful/in-efficient memory usage to save the &lt;code&gt;incrementScore&lt;/code&gt; function for every user when we know all it does is incrementScore by 1 and this operation is same across all users.&lt;/p&gt;

&lt;p&gt;Turns out we can further optimize this approach using &lt;code&gt;Object.create()&lt;/code&gt; method as below :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userFunctionsStore&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userFunctionsStore&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;generateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;BruceWayne&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// { name: 'BruceWayne', score: 10 }&lt;/span&gt;
&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// { name: 'BruceWayne', score: 11 }&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Ohkay! , Bunch of stuff there..&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We have now modified the &lt;code&gt;generateUser()&lt;/code&gt; to create a new Object using &lt;code&gt;Object.create()&lt;/code&gt; method instead of &lt;code&gt;{}&lt;/code&gt;, using which we can now achieve classical inheritance.&lt;br&gt;
More information &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create"&gt;here&lt;/a&gt; do check it out.&lt;/p&gt;

&lt;p&gt;So, &lt;code&gt;Object.create(userFunctionsStore)&lt;/code&gt; means, any and all functions declared inside of &lt;code&gt;userFunctionsStore&lt;/code&gt; will be accessible by all &lt;code&gt;newUser&lt;/code&gt; Objects. this is possible because the functions inside &lt;code&gt;userFunctionsStore&lt;/code&gt; are present in the Object instance of &lt;code&gt;Object.create&lt;/code&gt; in the prototype property which is present in the global memory space, which is referred by any new &lt;code&gt;newUser&lt;/code&gt; Objects using a link in _&lt;em&gt;proto&lt;/em&gt;_ property implicitly.&lt;/p&gt;

&lt;p&gt;Using this property explicitly is deprecated , more info &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, the code is looking little better and also more maintainable.&lt;/p&gt;

&lt;p&gt;But , there still is a bunch of code that we can avoid, As currently we are creating the prototype bond using &lt;code&gt;Object.create()&lt;/code&gt; using a &lt;code&gt;userFunctionsStore&lt;/code&gt; Object , &lt;strong&gt;but we can automate all of that using a keyword &lt;code&gt;new&lt;/code&gt; as below :&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;generateUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;generateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bruce Wayne&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// { name: 'Bruce Wayne', score: 10 }&lt;/span&gt;
&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// { name: 'Bruce Wayne', score: 11 }&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are able to add functions to the prototype of the &lt;code&gt;generateUser&lt;/code&gt; function explicitly and also we need not create , call , return the object from &lt;code&gt;generateUser&lt;/code&gt;. And All user Object will be able to access the prototype functions by utilizing prototypal inheritance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It's amazing how much stuff the &lt;code&gt;new&lt;/code&gt; keyword does for us.&lt;/strong&gt; Read more about it &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code now seems perfect. But there are still some changes we can do to make the code more elegant, Since currently to call &lt;code&gt;generateUser()&lt;/code&gt; the &lt;code&gt;new&lt;/code&gt; keyword is needed, without which the &lt;code&gt;this&lt;/code&gt; keyword would point to Global &lt;code&gt;this&lt;/code&gt;. &lt;br&gt;
&lt;strong&gt;To solve this we can use a new syntax called &lt;code&gt;class&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Also the best practice is to capitalize the first letter of function when we need to use &lt;code&gt;new&lt;/code&gt; keyword for calling the function , in this case :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenerateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#bonus-class-in-js"&gt;
  &lt;/a&gt;
  Bonus :- class in JS
&lt;/h2&gt;

&lt;p&gt;Ohkay! , Now we will try to use &lt;code&gt;class&lt;/code&gt; to replace the &lt;code&gt;function&lt;/code&gt; as below :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;GenerateUser&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need a function, which to assign the name and score , which we can do in the constructor which is called when we call the class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;GenerateUser&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GenerateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bruce Wayne&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//{ name: 'Bruce Wayne', score: 10 }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;As simple as that, looks more clean.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But now we need to make an &lt;code&gt;increment()&lt;/code&gt; function which we can directly declare inside a class as below :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;GenerateUser&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GenerateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bruce Wayne&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//{ name: 'Bruce Wayne', score: 10 }&lt;/span&gt;
&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//{ name: 'Bruce Wayne', score: 11 }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nothing has changed by using &lt;code&gt;class&lt;/code&gt; instead of &lt;code&gt;function&lt;/code&gt;, all the underlying principles are same, as we saw before using function prototypes. Just that the code is more readable and maintainable. And now you know how it works under the hood.&lt;/p&gt;

&lt;p&gt;Thanks to Will Sentance and Kyle Simpson for their amazing work.&lt;/p&gt;

&lt;p&gt;Let me know if you have any doubts or any issues!.&lt;/p&gt;

&lt;p&gt;Thank you 🙏 !&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Currying!?</title>
      <author>revanthrev23</author>
      <pubDate>Sat, 05 Jun 2021 07:09:37 +0000</pubDate>
      <link>https://dev.to/revanthrev23/currying-o2h</link>
      <guid>https://dev.to/revanthrev23/currying-o2h</guid>
      <description>&lt;p&gt;I am sure we all know what currying is, in JavaScript. If not don't worry I have got you covered here.&lt;/p&gt;

&lt;p&gt;A lot of people know the theory of currying, but not a lot of them, can implement the same. Implementing currying is extremely simple!&lt;/p&gt;

&lt;p&gt;So what is currying?&lt;/p&gt;

&lt;p&gt;Currying is a technique of evaluating function with multiple arguments, into a sequence of functions having lesser number of arguments.&lt;/p&gt;

&lt;p&gt;Let's say a function can take in 3 arguments, we can curry this function, into a sequence of 3 functions taking 1 argument each, or into 2 functions taking 2 and 1 arguments each. So basically when we curry a function, we reduce the number of arguments it takes in, but still performs all the actions it was intended to.&lt;/p&gt;

&lt;p&gt;I am sure you will understand this better with this piece of code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//Function 1
const sum  = function (a) {
    return function (b) {
      if (b) {
        return sum(a+b);
      }
      return a;
    }
};
//Function 2
function num_sum(a, b){
   return a+b;
}
num_sum(1,2);
sum(1)(2)(3)..(n);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Function 2 is a traditional way of adding 2 numbers. Function 1 is the curried version of the same function where, we have reduced the number of arguments it has, in each function. Currying uses many concepts like high-order functions, where we can return a function or assign it to a value or even pass it as an argument to another function!&lt;/p&gt;

&lt;p&gt;Let me show you another variant of currying the same sum function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function sum(a,b){  
 return a + b;
}

function curry(f){
   return function(a){
       return function(b){
           return f(a,b);
       }
   }
}

let curriedSum = curry(sum);

let ans = curriedSum(1)(2);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we are currying an already existing function. Basically, by doing this we can re-use it with various number of arguments at different parts of a program depending on our needs.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Advantages of Currying:&lt;/em&gt;&lt;br&gt;
1) Currying helps you to avoid passing the same variable again and again.&lt;br&gt;
2) It helps to create a higher order function. It extremely helpful in event handling. &lt;br&gt;
3) Little snippets of code can be written and reused with ease. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>Debouncing vs Throttling</title>
      <author>revanthrev23</author>
      <pubDate>Sat, 05 Jun 2021 07:07:03 +0000</pubDate>
      <link>https://dev.to/revanthrev23/debouncing-vs-throttling-3m1c</link>
      <guid>https://dev.to/revanthrev23/debouncing-vs-throttling-3m1c</guid>
      <description>&lt;p&gt;Let us consider an example where we are trying to build a search bar, which has the capability of auto-complete. Now it gets this data that is suggested via an api. Hence it has to make an api call over the internet. Now autocomplete works with each and every character the user enters. But if our api was to be called each and every time when the user types something, it would be an overhead on our webapp, and it would decrease the performance as we have to handle so many network calls. &lt;/p&gt;

&lt;p&gt;Debouncing and throttling could be made use of to improve our performance.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#debouncing"&gt;
  &lt;/a&gt;
  Debouncing
&lt;/h1&gt;

&lt;p&gt;Debouncing is a technique used to ensure that time-consuming tasks are not called so often, that it negatively impacts the performance of the web page. In other words, it limits the rate at which a function gets invoked.&lt;/p&gt;

&lt;p&gt;If we implement debouncing, we can fire an api call only when there is a pause of a certain amount of time between two consecutive keystrokes from the user. In other words, if the user pauses for a certain amount of time, before typing again, we fire an api call in that gap. Here we set a sensible time limit like maybe 500ms or 1s. &lt;/p&gt;

&lt;p&gt;We can make use of setTimeout to implement debouncing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const getData = () =&amp;gt; {
    console.log(“Assume this is the API call”);
}
const debouncing = function(fn,d) {
    Let timer;
    return function(){
        let context = this;
        args = arguments;
        clearTimeout(timer);
        timer = setTimeout(() =&amp;gt; {
            fn.apply(context,arguments);
        }, d);
    }
}
debouncing(getData, 300);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#throttling"&gt;
  &lt;/a&gt;
  Throttling
&lt;/h1&gt;

&lt;p&gt;Throttling is a technique in which, no matter how many times the user fires the event, the attached function will be executed only once in a given time interval. Or in other words, we trigger an event only on the first input made by the user. &lt;/p&gt;

&lt;p&gt;Hence debouncing is more suitable on button clicks which perform a critical action like paying bills, or even on window resizing, etc.&lt;/p&gt;

&lt;p&gt;If we use throttling in our example above, we can simulate it in such a way that the api would be fired after the user has typed everything. &lt;/p&gt;

&lt;p&gt;This is how we can implement throttling:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   function throttleFunction(func, delay) {
     return function (args) {
     let previousCall = this.lastCall;
     this.lastCall = Date.now();
     if (previousCall === undefined || 
          (this.lastCall - previousCall) &amp;gt; delay) {
       func(args);
      }
    }
   }
   const getData = () =&amp;gt; {
    console.log(“Assume this is the API call”);
   }
   throttleFunction(getData, 300);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title> Crack the React Interviews By Using Mindmap - Part 1.</title>
      <author>Hiep Le</author>
      <pubDate>Sat, 05 Jun 2021 06:47:46 +0000</pubDate>
      <link>https://dev.to/hieptl/crack-the-react-interviews-by-using-mindmap-part-1-5gkd</link>
      <guid>https://dev.to/hieptl/crack-the-react-interviews-by-using-mindmap-part-1-5gkd</guid>
      <description>&lt;p&gt;This is the first part in my series (&lt;strong&gt;Crack the React Interviews By Using Mindmap&lt;/strong&gt;). My series will give you the answers about different React interview questions by using mindmap. Mindmap is a technique that help you remember things easier. It is used by many memory championships, professors, valedictorians and so on. &lt;/p&gt;

&lt;p&gt;By applying mindmap, my series will give you the key points for each answer. Hence, you can understand the answer and we will crack the React interviews together ❤️.&lt;/p&gt;

&lt;p&gt;I'm Hiep. I work as a full-time software engineer. Most of my open-source projects are focused on one thing - to help people learn 📚.&lt;/p&gt;

&lt;p&gt;I created a git repository that help you crack the React interviews by using mindmap.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Github link: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/hieptl/react-interview-questions-using-mindmap"&gt;https://github.com/hieptl/react-interview-questions-using-mindmap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If the repository is useful, please help me share the post and give me a Github's star. It will make me feel motivation to work even harder. I will try to make many open sources and share to the community ❤️.&lt;/p&gt;

&lt;p&gt;I also created some series that help you improve your practical skills: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Learn React By Buiding Netflix&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/hieptl/learn-react-by-building-netflix-1127"&gt;https://dev.to/hieptl/learn-react-by-building-netflix-1127&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Master Design Patterns by Building Real Projects - Javascript.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/hieptl/series/13039"&gt;https://dev.to/hieptl/series/13039&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Some Mistakes When Using "This" Keyword in Javascript and Solutions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/hieptl/some-mistakes-when-using-this-keyword-in-javascript-and-solutions-4j77"&gt;https://dev.to/hieptl/some-mistakes-when-using-this-keyword-in-javascript-and-solutions-4j77&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Contents&lt;/strong&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="#question1"&gt;What is React?.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="#question2"&gt;What are the Features of React?.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="#question3"&gt;What is JSX?.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="#question4"&gt;What are the Differences between React Element and React Component?.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="#question5"&gt;How to Create Components in React?.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="#question6"&gt;When to use Class Components over Function Components?.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;&lt;a href="#question7"&gt;What are Pure Components?.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;a href="#question8"&gt;What is State in React?.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;a href="#question9"&gt;What are props in React?.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;a href="#question10"&gt;What are the differences between State and Props in React?.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#table-of-images"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Images&lt;/strong&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure1"&gt;Figure 1. Crack the React Interview by Using Mindmap - Question 1.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure2"&gt;Figure 2. Crack the React Interview by Using Mindmap - Question 2.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure3"&gt;Figure 3. Crack the React Interview by Using Mindmap - Question 3.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure4"&gt;Figure 4. Crack the React Interview by Using Mindmap - Question 4.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure5"&gt;Figure 5. Crack the React Interview by Using Mindmap - Question 5.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure6"&gt;Figure 6. Crack the React Interview by Using Mindmap - Question 6.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure7"&gt;Figure 7. Crack the React Interview by Using Mindmap - Question 7.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure8"&gt;Figure 8. Crack the React Interview by Using Mindmap - Question 8.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure9"&gt;Figure 9. Crack the React Interview by Using Mindmap - Question 9.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure10"&gt;Figure 10. Crack the React Interview by Using Mindmap - Question 10.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a id="question1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-what-is-react-"&gt;
  &lt;/a&gt;
  1. What is React ?
&lt;/h3&gt;

&lt;p&gt;&lt;a id="figure1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sSHuRiyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nj5o2zxm0wkgb46vdr16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sSHuRiyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nj5o2zxm0wkgb46vdr16.png" alt="crack-the-react-interview-by-using-mindmap-question1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 1. Crack the React Interview by Using Mindmap - Question 1.&lt;/p&gt;

&lt;p&gt;&lt;a id="question2"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-what-are-the-features-of-react-"&gt;
  &lt;/a&gt;
  2. What are the Features of React ?
&lt;/h3&gt;

&lt;p&gt;&lt;a id="figure2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ZQqZt9---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pex79d04lcw5bx4ntrd2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ZQqZt9---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pex79d04lcw5bx4ntrd2.png" alt="crack-the-react-interview-by-using-mindmap-question2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 2. Crack the React Interview by Using Mindmap - Question 2.&lt;/p&gt;

&lt;p&gt;&lt;a id="question3"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-what-is-jsx-"&gt;
  &lt;/a&gt;
  3. What is JSX ?
&lt;/h3&gt;

&lt;p&gt;&lt;a id="figure3"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QyKxyKNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs4rlsriqfkwtkyfdr17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QyKxyKNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs4rlsriqfkwtkyfdr17.png" alt="crack-the-react-interview-by-using-mindmap-question3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 3. Crack the React Interview by Using Mindmap - Question 3.&lt;/p&gt;

&lt;p&gt;Sample Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cracking the React Interviews by Using Mindmap&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Author: Hiep Le&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://github.com/hieptl/react-interview-questions-using-mindmap&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a id="question4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-what-are-the-differences-between-react-element-and-react-component-"&gt;
  &lt;/a&gt;
  4. What are the Differences between React Element and React Component ?
&lt;/h3&gt;

&lt;p&gt;&lt;a id="figure4"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pu5qsuM8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cr05lq86k61vwcigtw1v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pu5qsuM8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cr05lq86k61vwcigtw1v.png" alt="crack-the-react-interview-by-using-mindmap-question4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 4. Crack the React Interview by Using Mindmap - Question 4.&lt;/p&gt;

&lt;p&gt;&lt;a id="question5"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#5-how-to-create-componets-in-react-"&gt;
  &lt;/a&gt;
  5. How to Create Componets in React ?
&lt;/h3&gt;

&lt;p&gt;&lt;a id="figure5"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kwnuecJy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9goa90pc537tjkoe7c01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kwnuecJy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9goa90pc537tjkoe7c01.png" alt="crack-the-react-interview-by-using-mindmap-question5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 5. Crack the React Interview by Using Mindmap - Question 5.&lt;/p&gt;

&lt;p&gt;Example about a function component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Greeting&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`Hello, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example about a class component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Greeting&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`Hello, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a id="question6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-when-to-use-class-components-over-function-components-"&gt;
  &lt;/a&gt;
  6. When to Use Class Components Over Function Components ?
&lt;/h3&gt;

&lt;p&gt;&lt;a id="figure6"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FEllKF8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kccef68iobs4ruampzkd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FEllKF8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kccef68iobs4ruampzkd.png" alt="crack-the-react-interview-by-using-mindmap-question6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 6. Crack the React Interview by Using Mindmap - Question 6.&lt;/p&gt;

&lt;p&gt;&lt;a id="question7"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#7-what-are-pure-components-"&gt;
  &lt;/a&gt;
  7. What are Pure Components ?
&lt;/h3&gt;

&lt;p&gt;&lt;a id="figure7"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XWzGI94r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36vvhtbahs7y79vsmvet.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XWzGI94r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36vvhtbahs7y79vsmvet.png" alt="crack-the-react-interview-by-using-mindmap-question7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 7. Crack the React Interview by Using Mindmap - Question 7.&lt;/p&gt;

&lt;p&gt;&lt;a id="question8"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#8-what-is-state-in-react-"&gt;
  &lt;/a&gt;
  8. What is State in React ?
&lt;/h3&gt;

&lt;p&gt;&lt;a id="figure8"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0W5AC1VB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjfoftuy5qr1706urq6v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0W5AC1VB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjfoftuy5qr1706urq6v.png" alt="crack-the-react-interview-by-using-mindmap-question8"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 8. Crack the React Interview by Using Mindmap - Question 8.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Course&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Welcome to My Course&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a id="question9"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-what-are-props-in-react-"&gt;
  &lt;/a&gt;
  9. What are Props in React ?
&lt;/h3&gt;

&lt;p&gt;&lt;a id="figure9"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pvk1CjZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dnhqt4he0gobkgor6y4s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pvk1CjZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dnhqt4he0gobkgor6y4s.png" alt="crack-the-react-interview-by-using-mindmap-question9"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 9. Crack the React Interview by Using Mindmap - Question 9.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Course&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;courseName&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;courseName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a id="question10"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-what-are-the-differences-between-state-and-props-in-react-"&gt;
  &lt;/a&gt;
  10. What are the Differences between State and Props in React ?
&lt;/h3&gt;

&lt;p&gt;&lt;a id="figure10"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LJnngvyL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4v6rp34leuyhwin9yh78.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LJnngvyL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4v6rp34leuyhwin9yh78.png" alt="crack-the-react-interview-by-using-mindmap-question10"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 10. Crack the React Interview by Using Mindmap - Question 10.&lt;/p&gt;

&lt;p&gt;This is the end of the first part. I am writing the next parts, you just need to follow my series and we will crack the React interviews together 😄 ❤️&lt;/p&gt;

&lt;p&gt;Thanks and Best Regards,&lt;br&gt;
Hiep.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to make a vaccine tracker using CoWin public API</title>
      <author>Web_Codr</author>
      <pubDate>Sat, 05 Jun 2021 06:31:30 +0000</pubDate>
      <link>https://dev.to/web_dev/how-to-make-a-vaccine-tracker-using-cowin-public-api-826</link>
      <guid>https://dev.to/web_dev/how-to-make-a-vaccine-tracker-using-cowin-public-api-826</guid>
      <description>&lt;p&gt;In this blog I have shown how can you create a simple vaccine tracker using Cowin Public API. The coding language used in this tutorial is PHP - cURL. All the source code and can be downloaded or copied from the link below&lt;br&gt;
&lt;a rel="nofollow" href="https://codewithbishal.com/example/cowin-vaccine-tracker-php"&gt;Vaccine tracker using CoWin API&lt;/a&gt;&lt;br&gt;
View More :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a rel="nofollow" href="https://codewithbishal.com/example/responsive-image-gallery"&gt;Responsive Image gallery with hover effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel="nofollow" href="https://codewithbishal.com/example/css-login-form"&gt;beautiful login form using HTML and CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At first, on our webpage, there is a preview of our vaccine tracker, then there are a few QNA and an overview of the blog. There is a button to copy and Download the codes.&lt;/p&gt;

&lt;p&gt;You can view, copy and download the source code files through the link given below. &lt;a rel="nofollow" href="https://codewithbishal.com/example/cowin-vaccine-tracker-php"&gt;View and Download Source Code&lt;/a&gt; &lt;/p&gt;

</description>
    </item>
    <item>
      <title>The Examination Day</title>
      <author>Eden</author>
      <pubDate>Sat, 05 Jun 2021 06:28:51 +0000</pubDate>
      <link>https://dev.to/eden_jose08/the-examination-day-3p02</link>
      <guid>https://dev.to/eden_jose08/the-examination-day-3p02</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Sharing my notes and thoughts about the &lt;strong&gt;AWS SysOps Administrator Associate Exam&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Before anything else, I'd like to say that it is &lt;strong&gt;&lt;em&gt;extremely helpful&lt;/em&gt;&lt;/strong&gt; to take the &lt;strong&gt;AWS Solutions Architect Associate Exam&lt;/strong&gt; first before diving into the other two Associate exams (SysOps Associate and Developer). You'll get a good sense of how each services of AWS functions and how they are used when building solutions.&lt;/p&gt;

&lt;p&gt;Just like with any skills, it is essential to start with the essentials. Learn the theory, play around, break things, and fix them afterwards. When you have a good grasp on architecting solutions, you can move on to learning how to maintain them. This is where the SysOps Administrator Associate comes in.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---K98wDgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yuuejcqccj6vkoa8hgb0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---K98wDgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yuuejcqccj6vkoa8hgb0.jpg" alt="data center"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a background, I started my work in IT Networking and handled routers and switches, and network management tools. I also had a short stint as an application support at a FinTech company. Besides that, I've handled Linux servers in my previous job.&lt;/p&gt;

&lt;p&gt;All in all, I can say I'm more of an infrastructure guy with a bit of programming. I'm still a work in progress though and there's definitely a lot of technologies that I've yet to learn. I'm trying to expose myself to as many linux projects and python projects as possible. Automation is still a relatively new concept to me but I'm managing to create my own scripts and processes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_e-pP-WW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/byg9aw7xqk8v33w16mc8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_e-pP-WW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/byg9aw7xqk8v33w16mc8.png" alt="aws solutions architect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I actually started with &lt;strong&gt;AWS Cloud Practitioner Exam&lt;/strong&gt; last August and then 29 days after, sat for the &lt;strong&gt;AWS Solutions Architect-Associate Exam&lt;/strong&gt;. I set myself to take on the AWS SysOps exam next. However, there were other stuff at work that I need to focus on at that time so I had to park the Sysops study for a while.&lt;/p&gt;

&lt;p&gt;I resumed the review last January to February and decided to post my notes in my github account. During this time, I was having some personal challenges brewing at home and this sort of slowed be down for a bit. I tried to gather myself, pushed through with the mission, and set to take the exam by March. Little did I know, I'll be pushing it for another 2 months.&lt;/p&gt;

&lt;p&gt;On my first attempt, I was having problems with my internet connection and the proctor cancelled the exam while I wait for the test window to load. I had my previous online certifications through &lt;strong&gt;Pearson Vue&lt;/strong&gt; before but this was the first time that the proctor closed the exam without informing me first. I reported me and they refunded the exam fee plus the voucher I used after four days. Since I was a bit tight on budget, I waited for the refund to come in before scheduling the exam for the second time around.&lt;/p&gt;

&lt;p&gt;Last 24-May, I  prepared my desk at home, cleared my mind, and sat in for the exam. I was praying hard for the exam to go through since I've already devoted so much time into it. After some 48 minutes, I submitted the 65th question and after some more clicks, the result flashed right before my eyes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RESULT: PASS&lt;/strong&gt;&lt;br&gt;
And man, that's some sweet-tasting bacon.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#notes-that-might-help-you"&gt;
  &lt;/a&gt;
  NOTES THAT MIGHT HELP YOU
&lt;/h2&gt;

&lt;p&gt;Of course, I know you came across this post when you were searching for notes and tips on how to best prepare for the &lt;strong&gt;AWS SysOps Administrator Associate Exam&lt;/strong&gt; so I would put them here as well. You can find my Github post &lt;a href="https://github.com/joseeden/notes-aws-sysops"&gt;here&lt;/a&gt;. Be sure to check the &lt;a href="https://github.com/joseeden/notes-aws-sysops/tree/master/Notes"&gt;summary notes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For the materials, these are the ones I focused on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.udemy.com/course/ultimate-aws-certified-sysops-administrator-associate/"&gt;Ultimate AWS Certified SysOps Administrator Associate 2021&lt;/a&gt; &lt;br&gt;
by Stephane Maarek&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.udemy.com/course/aws-certified-sysops-administrator-associate-training/"&gt;[NEW] AWS Certified SysOps Administrator Associate 2021&lt;/a&gt; &lt;br&gt;
by Neal Davis&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://portal.tutorialsdojo.com/product/aws-certified-sysops-administrator-associate-practice-exams/"&gt;AWS Certified SysOps Administrator Associate Practice Exams 2021&lt;/a&gt; &lt;br&gt;
by Tutorials Dojo&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/"&gt;Official AWS Documentation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://aws.amazon.com/certification/certified-sysops-admin-associate/"&gt;AWS SysOps Administrator Associate Exam Guide&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-start"&gt;
  &lt;/a&gt;
  HOW TO START
&lt;/h2&gt;

&lt;p&gt;I suggest you go through either Stephane Maarek's course or Neal Davis's course. You'll be good even if you finish just one course but I just went through both since they have different approaches so even if you miss some details from Maarek's course, you'll be sure to cover it through Davis's course.&lt;/p&gt;

&lt;p&gt;Also, make sure to play around in your AWS console. It's a &lt;strong&gt;definite must&lt;/strong&gt; to be exposed and familiar on the tabs and options in the console as this further cement the concepts you learn in the courses. Besides following the labs in the course, I recommend breaking the labs you built and trying to fix them on your own. This way, you're sure to put your Google-Fu to use as well. &lt;/p&gt;

&lt;p&gt;Once you're done with the course and comfortable with the console, you can proceed with the Practice Exams. You can opt with the Practice Exams from Maarek and Davis which are also available in &lt;a href="https://www.udemy.com/"&gt;Udemy&lt;/a&gt;. You can then pair them up with the Practice Tests from &lt;a href="https://tutorialsdojo.com/"&gt;Tutorials Dojo&lt;/a&gt;. Each questions are presented with explanation on the correct and incorrect choices. Be sure to read both and understand because there are some questions with more than 1 possible answer. &lt;/p&gt;

&lt;p&gt;Lastly, supplement the courses and practice test with the official documentation from AWS themselves. You can't cover every blog and documentation for every AWS service there is, but you'll have a greater chance of passing the exam.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  FINAL THOUGHTS
&lt;/h2&gt;

&lt;p&gt;I thought of putting this at the top first because you must first define why you want to take the exam. It could be for career progression, learning a new skill, or you want to break into a cloud role. This is important to determine first because this will define how you'll go through the whole learning process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do not go through the exam for the sake of the certification or badge.&lt;/strong&gt; &lt;br&gt;
As with any cloud role, you'll have to back the certs with some skills and experience and the way to do this is to build something, regardless of how simple or complex it is. There's no other way but to get your hands dirty. I'm still on the quest of exposing myself to as many cloud technologies as possible too, and it'll be great to have other people jump in on the train-ride.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn for the sake of learning&lt;/strong&gt;.&lt;br&gt;
Learn because you're extremely curious about something.&lt;br&gt;
If you'll follow this and modify your mindset, you're sure to go far with any endeavor who wish to pursue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/joseeden/notes-aws-sysops"&gt;Now, happy learning!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>career</category>
      <category>devops</category>
      <category>cloudskills</category>
    </item>
  </channel>
</rss>
