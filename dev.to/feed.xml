<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to upload a file in¬†Cypress?</title>
      <author>Dilpreet Johal</author>
      <pubDate>Mon, 25 Oct 2021 12:34:02 +0000</pubDate>
      <link>https://dev.to/automationbro/how-to-upload-a-file-in-cypress-1iak</link>
      <guid>https://dev.to/automationbro/how-to-upload-a-file-in-cypress-1iak</guid>
      <description>&lt;p&gt;In this tutorial, we will learn how to upload a file in Cypress using the &lt;a href="https://www.npmjs.com/package/cypress-file-upload"&gt;cypress-file-upload&lt;/a&gt; NPM package. Cypress does not have a native support to do file uploads at the moment, however, this is something they plan to add in the future.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;Since, we need to use a third-party library to do file upload, we will need to get that installed and setup to make it work with Cypress.¬†&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#install-npm%C2%A0package"&gt;
  &lt;/a&gt;
  Install NPM¬†Package
&lt;/h4&gt;

&lt;p&gt;First thing you need to do is install the package‚Ää-‚Ää&lt;br&gt;
&lt;code&gt;npm install --save-dev cypress-file-upload&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#setup-custom%C2%A0command"&gt;
  &lt;/a&gt;
  Setup Custom¬†Command
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;cypress-file-upload&lt;/code&gt; library provides a custom command which we can use once we set it up. To do that, we need to import the library in the custom command file (cypress/support/commands.js) like this -&lt;/p&gt;

&lt;p&gt;&lt;code&gt;import 'cypress-file-upload';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then, make sure this commands.js is imported in &lt;code&gt;cypress/support/index.js&lt;/code&gt; (it might be commented):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;import './commands';&lt;/code&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#upload-file%C2%A0test"&gt;
  &lt;/a&gt;
  Upload File¬†Test
&lt;/h3&gt;

&lt;p&gt;Now, that we have installed the package, we can go ahead and start using the custom command. In the example below, I will be uploading a file on my test website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qTolBbIY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2sgg8ynmlvbclm7xtcq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qTolBbIY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2sgg8ynmlvbclm7xtcq.png" alt="cypress file upload¬†example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The key thing to focus on the example above is the¬†&lt;code&gt;.attachFile()&lt;/code&gt; command which is added by the helper library that we installed. It takes in a parameter i.e. the file name which should be included inside the fixtures folder as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FCWcTd5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lreut3a9q3ehjh9qstu3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FCWcTd5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lreut3a9q3ehjh9qstu3.png" alt="cypress fixtures¬†folder"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#working-with-hidden-input%C2%A0fields"&gt;
  &lt;/a&gt;
  Working with hidden input¬†fields
&lt;/h3&gt;

&lt;p&gt;Typically, the¬†&lt;code&gt;.attachFile()&lt;/code&gt; command would work if the &lt;code&gt;input[type=file]&lt;/code&gt; element is intractable. However, if the element is hidden then you will need to make necessary changes to make the element visible and intractable again. You can do that using the help of the Cypress¬†&lt;code&gt;.invoke()&lt;/code&gt; function as seen below‚Ää-‚Ää&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2wD9Kveo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qn130b2of078njiohu05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2wD9Kveo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qn130b2of078njiohu05.png" alt="Cypress¬†.invoke¬†function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this example, I am removing the hidden class using the jquery removeClass function which is making my element intractable again.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#to-learn-more-about-how-to-upload-a-file-in-cypress-checkout-the-video-below%E2%80%8A%E2%80%8A"&gt;
  &lt;/a&gt;
  To learn more about how to upload a file in Cypress, checkout the video below‚Ää-‚Ää
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/2jVf6u0yKeY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;üìß Subscribe to my &lt;a href="https://automationbro.com/mailing-list"&gt;mailing list&lt;/a&gt; to get access to more content like this as well as be part of amazing free giveaways.&lt;/p&gt;

&lt;p&gt;üëç You can follow my content here as well - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/automationbro"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/company/automation-bro"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;I love coffees! And, if this post helped you out and you would like to support my work, you can do that by clicking on the button below and buying me a cup of coffee -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/automationbro"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUHFj71T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4aw2ub3f4qkyjk0ivwt4.png" alt="Buy me a coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also support me by liking and sharing this content.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>testing</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Bite-size dev tip #1</title>
      <author>DevSimplicity|Simple, Not Easy</author>
      <pubDate>Mon, 25 Oct 2021 12:19:42 +0000</pubDate>
      <link>https://dev.to/devsimplicity/bite-size-dev-tip-1-1jan</link>
      <guid>https://dev.to/devsimplicity/bite-size-dev-tip-1-1jan</guid>
      <description>&lt;p&gt;Bite-size dev tip #1:&lt;/p&gt;

&lt;p&gt;Good software development is much more about understanding what you can remove than adding.&lt;/p&gt;

&lt;p&gt;How many lines of code did you remove today?&lt;/p&gt;




&lt;p&gt;&lt;small&gt;"Bite-size dev tip" series is my attempt at trying to convey as much important dev-related meaning as possible, in as few words as possible. If you think I should continue, let me know by using reactions/comments.&lt;/small&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>codequality</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>How To Build A Successful Cybersecurity Program For Your Business?</title>
      <author>Michael James</author>
      <pubDate>Mon, 25 Oct 2021 12:14:33 +0000</pubDate>
      <link>https://dev.to/michael56812375/how-to-build-a-successful-cybersecurity-program-for-your-business-1dn4</link>
      <guid>https://dev.to/michael56812375/how-to-build-a-successful-cybersecurity-program-for-your-business-1dn4</guid>
      <description>&lt;p&gt;According to the Verizon Data Breach Investigation report, there were more than 53000 cybersecurity incidents and 2200 data breaches. This trend is not going to subside and will continue. This clearly indicates that cybersecurity attacks will increase in number and grow in complexity.&lt;br&gt;
If you are a small business thinking that these cyber-attacks only target large-scale enterprises, then you are wrong. We have seen instances where cybercriminals have attacked small businesses as well. Small businesses are more vulnerable as they serve as a soft target for attackers due to a lack of resources and cybersecurity policies.&lt;br&gt;
Whether you have a small business or a large one, having a robust cybersecurity program at your disposal helps protect against modern-day cybersecurity threats. How can I create a cybersecurity program for my business? Is that what you are thinking? If yes, then you are at the right place. &lt;br&gt;
In this article, you will learn about a step-by-step process of creating a cybersecurity program for your business.&lt;br&gt;
Lay The Foundation&lt;/p&gt;

&lt;p&gt;The first step of creating a winning cybersecurity program is to lay the groundwork. Establish the foundation of your cybersecurity program, which you can use to expand upon later on. Thankfully, you don‚Äôt have to create everything from scratch as there are many frameworks you can use for this purpose. You can either opt for the NIST framework or choose COBIT5.&lt;/p&gt;

&lt;p&gt;As soon as you start working with the framework, you will realize that many functions, categories and subcategories are not relevant to your business. Now, you will have to align your operational needs with the framework. Use standards of good practice for information security laid out by Information Security Forum and identify which operational services align with cybersecurity definitions of a particular framework.&lt;/p&gt;

&lt;p&gt;Perform Audit of Assets And Policies&lt;br&gt;
After you have laid a solid foundation, it is time to perform a detailed audit of your current assets and cybersecurity policies. Ask yourself questions like, ‚ÄúWhich IT assets are critical for your business and need more protection?‚Äù Take some time to develop a better understanding of how and where your sensitive data is stored and how it is being accessed.&lt;br&gt;
Instead of solely focusing on your hardware such as devices and &lt;a href="https://hostnoc.com/los-angeles-dedicated-servers/"&gt;Los Angeles dedicated servers&lt;/a&gt;, you should also consider software running on your IT assets as you might need to keep the software and patch updated. Next, critically analyze your current cybersecurity policies. If you identify some loopholes and outdated stuff that needs to be updated, you should go ahead and do it as soon as possible.&lt;br&gt;
This analysis should include everything from access rights of employees to authentication systems to password policies. The stringent your cybersecurity policies might be, the harder it is for cybercriminals to break into your network and wreak havoc on your critical business infrastructure.&lt;br&gt;
Control Access To Your Data&lt;br&gt;
Once you have a clear understanding of your data and where it resides, it is time to manage access to that data in an efficient and secure manner. The easiest way to do that is to adopt the least privilege method. Offer employees access to only that information that they need to perform their tasks. For instance, the sales team should not have access to your HR data or your marketing should not have access to your financial transactions.&lt;br&gt;&lt;br&gt;
You cannot afford to give access to all your data to all your employees. That is where controlling access to data comes into play. Assign role-based access and monitor access constantly to prevent any hiccup. Force employees who have resigned to hand over their login credentials to you before leaving your organization. Most businesses tend to ignore this and end up paying a hefty price for it. Restrict removable storage usage and constantly monitor employee activities online to protect your sensitive data.&lt;br&gt;
Build an IT Security Team&lt;br&gt;
Creating a cybersecurity program is useless if you don‚Äôt have the right team to implement it. Hire IT professionals and industry experts and form a dedicated team that will be responsible for overseeing program implementation. Your IT team would be responsible for enforcing the company‚Äôs cybersecurity policies. Moreover, this team can also identify and tackle intrusion attempts and cybersecurity attacks to prevent any damage.&lt;br&gt;
Before building a team, you should ask yourself questions like, ‚ÄúHow many people do you need in your team?‚Äù or ‚ÄúWhat skills your IT security team should have?‚Äù This will simplify the process of building your IT security team. Small businesses that do not have the resources to build their team internally can take the services of managed security providers. This way, they can get the full services of an IT security team at a fraction of the cost.&lt;br&gt;
Another advantage of hiring an IT security provider for &lt;a href="https://www.engati.com/shopify-chatbot"&gt;Increasing conversions on Shopify&lt;/a&gt; is that they are quick to identify shortcomings of your cybersecurity program and offer suggestions and recommendations on correcting it. This can come in handy as you can enhance your cybersecurity program and fill in those gaps to ensure smoother sailing for your business.&lt;br&gt;
Invest In Training and Education&lt;br&gt;
You created one of the best cybersecurity programs, got the services of IT experts but all that won‚Äôt help your cause if you don‚Äôt educate and train your employees. Invest in employee education and training and it will do a world of good to employee education and training and it will do a world of good to keeping your business asset safe. By spending money on employee‚Äôs cybersecurity education and training, you can significantly reduce the risk of cybersecurity attacks such as social engineering. The more aware your staff is cybersecurity, it will be much harder for hackers to trick them into taking an action of their choice.&lt;br&gt;
How do you create a cybersecurity program for your business? Feel free to share it with us in the comments section below.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>TOP 100+ DoFollow Backlink Sites | High PR Free Backlink Sites 2021</title>
      <author>Jameer Khan</author>
      <pubDate>Mon, 25 Oct 2021 12:07:29 +0000</pubDate>
      <link>https://dev.to/stackblogger/top-100-dofollow-backlink-sites-high-pr-free-backlink-sites-2021-359c</link>
      <guid>https://dev.to/stackblogger/top-100-dofollow-backlink-sites-high-pr-free-backlink-sites-2021-359c</guid>
      <description>&lt;h2&gt;
  &lt;a href="#list-of-dofollow-high-pr-free-social-bookmarking-sites"&gt;
  &lt;/a&gt;
  List of DoFollow High PR Free Social Bookmarking Sites
&lt;/h2&gt;

&lt;p&gt;Serial  Website Link Type&lt;br&gt;
1   &lt;a href="https://bookmymark.com/"&gt;https://bookmymark.com/&lt;/a&gt; DoFollow&lt;br&gt;
2   &lt;a href="https://www.digg.com/"&gt;https://www.digg.com/&lt;/a&gt;   DoFollow&lt;br&gt;
3   &lt;a href="https://www.soup.io/"&gt;https://www.soup.io/&lt;/a&gt;    DoFollow&lt;br&gt;
4   &lt;a href="https://www.pearltrees.com/"&gt;https://www.pearltrees.com/&lt;/a&gt; DoFollow&lt;br&gt;
5   &lt;a href="https://backlinks.stackblogger.com/"&gt;https://backlinks.stackblogger.com/&lt;/a&gt; DoFollow&lt;br&gt;
6   &lt;a href="http://www.n4g.com/"&gt;http://www.n4g.com/&lt;/a&gt; DoFollow&lt;br&gt;
7   &lt;a href="http://www.storeboard.com/"&gt;http://www.storeboard.com/&lt;/a&gt;  DoFollow&lt;br&gt;
8   &lt;a href="http://www.bookmarkingbase.com/"&gt;http://www.bookmarkingbase.com/&lt;/a&gt; DoFollow&lt;br&gt;
9   &lt;a href="http://www.bookmarkmaps.com/"&gt;http://www.bookmarkmaps.com/&lt;/a&gt;    DoFollow&lt;br&gt;
10  &lt;a href="http://www.video-bookmark.com/"&gt;http://www.video-bookmark.com/&lt;/a&gt;  DoFollow&lt;br&gt;
11  &lt;a href="https://www.bookmarkmonk.com/"&gt;https://www.bookmarkmonk.com/&lt;/a&gt;   DoFollow&lt;br&gt;
12  &lt;a href="http://www.votetags.info/"&gt;http://www.votetags.info/&lt;/a&gt;   DoFollow&lt;br&gt;
13  &lt;a href="http://www.zypid.com/"&gt;http://www.zypid.com/&lt;/a&gt;   DoFollow&lt;br&gt;
14  &lt;a href="http://www.highprbookmarking.com/"&gt;http://www.highprbookmarking.com/&lt;/a&gt;   DoFollow&lt;br&gt;
15  &lt;a href="https://story.wallclassifieds.com/"&gt;https://story.wallclassifieds.com/&lt;/a&gt;  DoFollow&lt;br&gt;
 List of DoFollow High PR Free Social Bookmarking Sites&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#high-pr-profile-submission-sites-list"&gt;
  &lt;/a&gt;
  High PR Profile Submission Sites List
&lt;/h2&gt;

&lt;p&gt;Serial  Website Domain Authority (DA)&lt;br&gt;
1   &lt;a href="https://www.medium.com/"&gt;https://www.medium.com/&lt;/a&gt; 94&lt;br&gt;
2   &lt;a href="https://www.slideshare.net/"&gt;https://www.slideshare.net/&lt;/a&gt; 92&lt;br&gt;
3   &lt;a href="https://scoop.it/"&gt;https://scoop.it/&lt;/a&gt;   86&lt;br&gt;
4   &lt;a href="https://www.last.fm/"&gt;https://www.last.fm/&lt;/a&gt;    90&lt;br&gt;
5   &lt;a href="https://www.github.com/"&gt;https://www.github.com/&lt;/a&gt; 96&lt;br&gt;
6   &lt;a href="https://www.quora.com/"&gt;https://www.quora.com/&lt;/a&gt;  91&lt;br&gt;
7   &lt;a href="https://www.about.me/"&gt;https://www.about.me/&lt;/a&gt;   91&lt;br&gt;
8   &lt;a href="https://www.crunchbase.com/"&gt;https://www.crunchbase.com/&lt;/a&gt; 90&lt;br&gt;
9   &lt;a href="https://www.disqus.com/"&gt;https://www.disqus.com/&lt;/a&gt; 92&lt;br&gt;
10  &lt;a href="https://www.instructables.com/"&gt;https://www.instructables.com/&lt;/a&gt;  89&lt;br&gt;
 High PR Profile Submission Sites List&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#high-da-dofollow-backlink-sites-list"&gt;
  &lt;/a&gt;
  High DA DoFollow Backlink Sites List
&lt;/h2&gt;

&lt;p&gt;Serial  Website Domain Authority (DA)&lt;br&gt;
1   &lt;a href="https://wordpress.com"&gt;https://wordpress.com&lt;/a&gt;   93&lt;br&gt;
2   &lt;a href="https://blogspot.com"&gt;https://blogspot.com&lt;/a&gt;    80&lt;br&gt;
3   &lt;a href="https://tumblr.com"&gt;https://tumblr.com&lt;/a&gt;  94&lt;br&gt;
4   &lt;a href="https://storeboard.com"&gt;https://storeboard.com&lt;/a&gt;  75&lt;br&gt;
5   &lt;a href="https://flipboard.com"&gt;https://flipboard.com&lt;/a&gt;   88&lt;br&gt;
6   &lt;a href="https://shutterstock.com"&gt;https://shutterstock.com&lt;/a&gt;    91&lt;br&gt;
7   ecommerce.shopify.com   95&lt;br&gt;
8   &lt;a href="https://steemit.com"&gt;https://steemit.com&lt;/a&gt; 84&lt;br&gt;
9   &lt;a href="http://www.moz.com"&gt;www.moz.com&lt;/a&gt; 91&lt;br&gt;
10  &lt;a href="http://www.evernote.com"&gt;www.evernote.com&lt;/a&gt;    91&lt;br&gt;
 High DA DoFollow Backlink Sites List&lt;/p&gt;

</description>
      <category>backlinks</category>
      <category>socialbookmarking</category>
      <category>profilesubmission</category>
      <category>stackblogger</category>
    </item>
    <item>
      <title>Use Google Optimize in React web for A/B Testing</title>
      <author>Axel Navarro</author>
      <pubDate>Mon, 25 Oct 2021 11:55:57 +0000</pubDate>
      <link>https://dev.to/cloudx/use-google-optimize-in-react-web-for-ab-testing-45ok</link>
      <guid>https://dev.to/cloudx/use-google-optimize-in-react-web-for-ab-testing-45ok</guid>
      <description>&lt;p&gt;I'll explain how to create an experiment in the Google Optimize (GO) panel to get a simple boolean flag in our JavaScript code, specifically using Reactjs, to display the original version of our web, or the experiment.&lt;/p&gt;

&lt;p&gt;I won't focus on the creation of  experiments or specific configurations. This post will be centered on how to connect GO with JavaScript code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I needed to integrate Google Optimize to do an &lt;a href="https://en.wikipedia.org/wiki/A/B_testing"&gt;A/B testing&lt;/a&gt; in a project I'm working on. I've found that GO was made for end users so that they can make little changes (text, CSS styles, etc.) in the website without needing a developer.&lt;/p&gt;

&lt;p&gt;But I couldn't find a good guide about how to receive a &lt;code&gt;bool&lt;/code&gt; flag in the frontend to develop a basic &lt;code&gt;if&lt;/code&gt; in JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-optimize-panel"&gt;
  &lt;/a&gt;
  The Optimize panel
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#creating-an-experiment"&gt;
  &lt;/a&gt;
  Creating an experiment
&lt;/h3&gt;

&lt;p&gt;First, we should create an A/B test experiment using the Google Optimize panel. Make a click to the &lt;code&gt;Create experiment&lt;/code&gt; button. üß™&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y0w5T9Rx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqz1sgaks59l9tg4g9xl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y0w5T9Rx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqz1sgaks59l9tg4g9xl.png" alt="The create experience button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give a name to the experiment and select the &lt;code&gt;A/B test&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dOr0KIMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrdrk8y301q6yt323fsp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dOr0KIMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrdrk8y301q6yt323fsp.png" alt="Select the experiment type"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you link the experiment to a Google Analytics (GA) account the experiment receives an &lt;code&gt;Experiment ID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c3b1ScOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uy5dttr74o384o7fy2ve.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c3b1ScOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uy5dttr74o384o7fy2ve.png" alt="The experiment ID"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üß† The developer will use this &lt;code&gt;ID&lt;/code&gt; to read the flag in the JavaScript code. The experiment name is not used in the JavaScript side.&lt;/p&gt;

&lt;p&gt;Make sure you assign an objective to the experiment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UK_I79Mn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2r477svv7i9f24c16yy9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UK_I79Mn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2r477svv7i9f24c16yy9.png" alt="The objectives of the given experiment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you can &lt;code&gt;start&lt;/code&gt; the experiment. üß´&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#assigning-an-activation-event"&gt;
  &lt;/a&gt;
  Assigning an activation event
&lt;/h3&gt;

&lt;p&gt;Review the &lt;code&gt;Activation event&lt;/code&gt; setting, because you can't use the experiment as a flag in the JavaScript code until that event is fired.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ndVyBFGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrkvk15eo2791g6rmghy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ndVyBFGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrkvk15eo2791g6rmghy.png" alt="Experiment settings section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can leave the activation event as &lt;code&gt;page load&lt;/code&gt; to let the experiment ready when the page loads.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8MsPRjTh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llt5a3jht3nj6956ltp1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8MsPRjTh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llt5a3jht3nj6956ltp1.png" alt="Evaluate experiment on page load event"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or, you can use a custom event that will activate the experiment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NQOA4Qe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qih1xh1pj2mf7a6dwjw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NQOA4Qe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qih1xh1pj2mf7a6dwjw.png" alt="Evaluate experiment on custom event"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-in-javascript"&gt;
  &lt;/a&gt;
  Using in JavaScript
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;Setup the GO SDK via &lt;a href="https://support.google.com/optimize/answer/6314801"&gt;Google Tag Manager (GTM)&lt;/a&gt; or adding &lt;a href="https://support.google.com/optimize/answer/10106536"&gt;the script tag&lt;/a&gt; to download it directly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reading-the-flag-value"&gt;
  &lt;/a&gt;
  Reading the flag value
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;google_optimize&lt;/code&gt; object will be available as a global variable at the &lt;code&gt;window&lt;/code&gt; level:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;variant&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;google_optimize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;experiment_id&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the &lt;code&gt;get&lt;/code&gt; function returns &lt;code&gt;undefined&lt;/code&gt; that means the experiment is not available for this page. Maybe it is misconfigured, or it doesn't apply for this page, or the experiment ID is not correct.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// Code for visitors in the original.&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// Code for visitors in the first variant.&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// Code for visitors in another variant.&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// Code when the experiment has finished or misconfigured.&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#dispatching-the-activation-event"&gt;
  &lt;/a&gt;
  Dispatching the activation event
&lt;/h3&gt;

&lt;p&gt;If the experiment requires a custom event to activate you should dispatch it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;variant&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;optimize.activate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;intervalId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;google_optimize&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;variant&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;google_optimize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;experiment_id&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;intervalId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We don't know when &lt;code&gt;google_optimize&lt;/code&gt; is going to be be available on the &lt;code&gt;window&lt;/code&gt;, we should use &lt;code&gt;setInterval&lt;/code&gt; to read the variant when the experiment it's available.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-integration"&gt;
  &lt;/a&gt;
  React integration
&lt;/h3&gt;

&lt;p&gt;Now we can preset a useful hook for React:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useExperiment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;experimentId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;variant&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setVariant&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;optimize.activate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;intervalId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;google_optimize&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// Set the variant to the state.&lt;/span&gt;
          &lt;span class="nx"&gt;setVariant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;google_optimize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;experimentId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nx"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;intervalId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;})();&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;variant&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;variant&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useExperiment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;YOUR_EXPERIMENT_ID_GOES_HERE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// here you can apply your conditional.&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Now, you know how to build experiments that send the name of the variant to the frontend and how to read that value in JavaScript code using the &lt;code&gt;Experiment ID&lt;/code&gt; to apply the required conditionals to display the correct variant in our web sites.&lt;/p&gt;

&lt;p&gt;Additionally, we have a simple React hook to plug in to the React components and build your own &lt;em&gt;variant-verse&lt;/em&gt;. ü¶∏&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>ux</category>
      <category>html</category>
    </item>
    <item>
      <title>10 Useful APIs for Your Next Project</title>
      <author>Harsh Sinha</author>
      <pubDate>Mon, 25 Oct 2021 11:45:09 +0000</pubDate>
      <link>https://dev.to/harshsinha17/10-useful-apis-for-your-next-project-1nog</link>
      <guid>https://dev.to/harshsinha17/10-useful-apis-for-your-next-project-1nog</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rIEqoDzR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzp2mlkujvfkoomcrqlm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rIEqoDzR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzp2mlkujvfkoomcrqlm.jpg" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-an-api"&gt;
  &lt;/a&gt;
  What is an API?
&lt;/h1&gt;

&lt;p&gt;An API or application Programming Interface is a set of functions that allows applications to access data and interact with external software components, operating systems, or microservices. To simplify, an API delivers a user response to a system and sends the system's response back to a user.&lt;/p&gt;

&lt;p&gt;Here is a list of 10 useful APIs that you might want to use in your next project. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1nasa-apis"&gt;
  &lt;/a&gt;
  1)&lt;a href="https://api.nasa.gov/"&gt;NASA APIs&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;The objective of these APIs is to make NASA data, including imagery, eminently accessible to application developers.&lt;/p&gt;

&lt;p&gt;These APIs Include:&lt;/p&gt;

&lt;p&gt;i)APOD: Astronomical Picture Of The Day&lt;/p&gt;

&lt;p&gt;ii)Insight: Mars Weather Service API&lt;/p&gt;

&lt;p&gt;iii)Mars Rover Photos: Image data gathered by NASA's Curiosity, Opportunity, and Spirit rovers on Mars. &lt;/p&gt;

&lt;p&gt;And more of them&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2random-fact"&gt;
  &lt;/a&gt;
  2)&lt;a href="https://www.programmableweb.com/api/random-useless-facts"&gt;Random Fact&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Get Random Facts! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3giphy-api"&gt;
  &lt;/a&gt;
  3)&lt;a href="https://developers.giphy.com/"&gt;GIPHY API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;GIPHY API helps you integrate the world's largest GIF library, customize a suite of powerful features, and boost engagement with just a few lines of code.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4openweathermap-api"&gt;
  &lt;/a&gt;
  4)&lt;a href="https://openweathermap.org/current"&gt;OpenWeatherMap API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Access current weather data for any location on Earth including over 200,000 cities! The API collects and processes weather data from different sources such as global and local weather models, satellites, radars and a vast network of weather stations. Data is available in JSON, XML, or HTML format&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5bitly-api"&gt;
  &lt;/a&gt;
  5)&lt;a href="https://dev.bitly.com/"&gt;BitLy API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Bitly is the most widely trusted link management platform in the world. By using the Bitly API, you will exercise the full power of your links through automated link customization, mobile deep linking, and click analytics.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6sunrise-sunset-api"&gt;
  &lt;/a&gt;
  6)&lt;a href="https://sunrise-sunset.org/api"&gt;Sunrise - Sunset API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;It is a very simple REST api, you only have to do a GET request to get sunset and sunrise times for a given latitude and longitude.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7spacex-api"&gt;
  &lt;/a&gt;
  7)&lt;a href="https://github.com/r-spacex/SpaceX-API"&gt;SpaceX API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Open Source REST API for launch, rocket, core, capsule, starlink, launchpad, and landing pad data.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#8international-space-station-location-api"&gt;
  &lt;/a&gt;
  8)&lt;a href="http://open-notify.org/Open-Notify-API/ISS-Location-Now/"&gt;International Space Station Location API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This is a simple api to return the current location of the ISS. It returns the current latitude and longitude of the space station with a unix timestamp for the time the location was valid. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9google-fonts-api"&gt;
  &lt;/a&gt;
  9)&lt;a href="https://developers.google.com/fonts/docs/developer_api"&gt;Google Fonts API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;About the API:&lt;br&gt;
The Developer API gives access to the metadata for all families served by Google Fonts. It allows apps to query Google Fonts for the available font families. The REST API supplies data in the JSON format that includes the styles and scripts (called subsets in Google Fonts) in each family. The API can sort the list of families alphabetically, by date added, by number of styles, by trend, or by popularity.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#10marvel-comics-api"&gt;
  &lt;/a&gt;
  10)&lt;a href="https://developer.marvel.com/"&gt;Marvel Comics API&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;If you are a Marvel Comics fan you might want to check out this API! &lt;br&gt;
Anyone with an API key can access the vast library of 1000+ Marvel Comics' data, from what's coming, to 70 years ago! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope this article was helpful for you&lt;br&gt;
(Àµ Õ°¬∞ Õú ñ Õ°¬∞Àµ)&lt;br&gt;
Also this was my first &lt;br&gt;
post here on dev.to&lt;/p&gt;

&lt;p&gt;Thank you&lt;br&gt;
( Õ° Õú ñ Õ° )&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>apis</category>
    </item>
    <item>
      <title>Top 10 dev.to articles of the weeküå∫.</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Mon, 25 Oct 2021 11:36:45 +0000</pubDate>
      <link>https://dev.to/ksengine/top-10-devto-articles-of-the-week-294d</link>
      <guid>https://dev.to/ksengine/top-10-devto-articles-of-the-week-294d</guid>
      <description>&lt;p&gt;DEV is a community of software developers getting together to help one another out. The software industry relies on collaboration and networked learning. They provide a place for that to happen.&lt;br&gt;
Here is the most popular articles published on this platform.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1"&gt;
  &lt;/a&gt;
  #1
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/0shuvo0/lets-create-a-screen-recorder-with-js-3leb"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VijeTxaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--p8pbExaT--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/duxwuftie1d2dnvlv7fi.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/0shuvo0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/0shuvo0/lets-create-a-screen-recorder-with-js-3leb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Lets create a screen recorder with JS&lt;/h2&gt;
      &lt;h3&gt;Shuvo „Éª Oct 21 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#2"&gt;
  &lt;/a&gt;
  #2
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/tarunfy/how-i-created-and-deployed-another-full-stack-app-in-just-3-days-41eo"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xE9Wbtzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Wb1ruaIA--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k43196iptnrhuo0d9bnl.PNG" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/tarunfy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VawjVvOO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---eNJry0---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/305697/ae70f3da-dd2b-44a8-a9f9-02448b523bf7.jpeg" alt="tarunfy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/tarunfy/how-i-created-and-deployed-another-full-stack-app-in-just-3-days-41eo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How I created and deployed another full stack app in just 3 days  &lt;/h2&gt;
      &lt;h3&gt;Tarun Sharma „Éª Oct 18 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#3"&gt;
  &lt;/a&gt;
  #3
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/ankit01oss/7-github-projects-to-supercharge-your-docker-practices-2i80"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8mjh8eRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3y43jITw--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qj1rzt2u19qwffwgi2gw.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ankit01oss" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IqsGe261--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ul7XbSg_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/642348/c10c17aa-2556-49b8-9ffa-1c31cc9675e4.png" alt="ankit01oss"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ankit01oss/7-github-projects-to-supercharge-your-docker-practices-2i80" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;7 GitHub projects to supercharge your Docker practices üöÄüßë‚Äçüíª&lt;/h2&gt;
      &lt;h3&gt;Ankit Anand ‚ú® „Éª Oct 23 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#docker&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#kubernetes&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cloud&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#4"&gt;
  &lt;/a&gt;
  #4
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/sagarbarapatre/how-to-turn-google-sheets-into-a-rest-api-and-use-it-with-a-react-application-1pbb"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PtuVFJ02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--N_M7P9k7--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y82y53lwk0wrb8drs2x1.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/sagarbarapatre" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxr02seM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Nnun1FpK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/470482/74b368d4-9604-42ed-ad75-d5a1fc9a6aa2.png" alt="sagarbarapatre"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sagarbarapatre/how-to-turn-google-sheets-into-a-rest-api-and-use-it-with-a-react-application-1pbb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Turn Google Sheets into a REST API and Use it with a React Application&lt;/h2&gt;
      &lt;h3&gt;Sagar Barapatre „Éª Oct 22 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#5"&gt;
  &lt;/a&gt;
  #5
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/j471n/10-css-resources-that-you-should-bookmark-46l6"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eJ2tMNnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--SS-JfJCQ--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4p9rciydqd880rjw6jc.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/j471n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BBYX3NMU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--c3GArzgL--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/495014/71a61e33-e7af-4096-a8c7-db8e34db04e7.png" alt="j471n"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/j471n/10-css-resources-that-you-should-bookmark-46l6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 CSS Resources that you should bookmark&lt;/h2&gt;
      &lt;h3&gt;Jatin Sharma „Éª Oct 24 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#6"&gt;
  &lt;/a&gt;
  #6
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/javascriptacademy/master-css-positioning-in-5-minutes-2n18"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xOxl0HV5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hwk5z5jD--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qerwno1xnu0fv33pyt3n.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/javascriptacademy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5hibFiYf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ehxqwaKf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/721655/cf6268db-f6d4-4eee-ad3e-7c2970dede90.jpeg" alt="javascriptacademy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/javascriptacademy/master-css-positioning-in-5-minutes-2n18" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Master CSS positioning in 5 minutes&lt;/h2&gt;
      &lt;h3&gt;Adam Nagy „Éª Oct 19 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#7"&gt;
  &lt;/a&gt;
  #7
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/aviyel/51-git-commands-that-youll-ever-need-to-get-started-with-git-34d5"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oQWHaTP1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--iEBeumEI--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3awskbkou0xo4tjlajp.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/aviyel" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jk48Byhz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8ml24Y9z--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/3818/2fd02162-3471-44cd-8f8f-5336ddc7abc1.png" alt="Aviyel Inc"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X1bzjyno--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--co8MU9_n--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/413418/f04996e5-b2bc-48b2-b362-dbe716bb5b38.JPG" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aviyel/51-git-commands-that-youll-ever-need-to-get-started-with-git-34d5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;51 git commands that you'll ever need to get started with Git üî•&lt;/h2&gt;
      &lt;h3&gt;Pramit Marattha for Aviyel Inc „Éª Oct 20 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#git&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#8"&gt;
  &lt;/a&gt;
  #8
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/0shuvo0/python-javascript--1nd6"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wVLignnQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Q5CdR8do--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc439sauu5yr1fwqs0gr.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/0shuvo0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/0shuvo0/python-javascript--1nd6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Python + JavaScript = üî•üî•üî•&lt;/h2&gt;
      &lt;h3&gt;Shuvo „Éª Oct 21 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#9"&gt;
  &lt;/a&gt;
  #9
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/ali6nx404/cheat-sheets-that-always-save-my-time-during-web-development-2ga4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zWD_sq6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--gHB4MrUc--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://ivumwcqobobsryuftwyv.supabase.co/storage/v1/object/public/posts/d6c8f63f-467f-4de1-863e-6efc3fce4d90/cover_image/795a36e6-b01b-429d-ba1d-b24c09ecaeaa.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ali6nx404" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6eKJHV5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lDAn59NE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/718375/5d79790f-4842-4a47-9082-e98b90319589.png" alt="ali6nx404"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ali6nx404/cheat-sheets-that-always-save-my-time-during-web-development-2ga4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Cheat Sheets that always save my time during web development üöÄ&lt;/h2&gt;
      &lt;h3&gt;Mahesh Patidar „Éª Oct 22 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdeveloper&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
,
&lt;h2&gt;
  &lt;a href="#10"&gt;
  &lt;/a&gt;
  #10
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/cesscode/useful-websites-every-web-developer-should-know-about-3n4n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jcBwWwvz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--AMtUKDr2--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyd8q1d5y49zk8jb9ae7.png" alt="Image of post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/cesscode" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5m9qrtHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Wro6iFlY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/588139/30a1db5b-8b3a-42ee-88c6-a15a86c24ad9.jpg" alt="cesscode"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cesscode/useful-websites-every-web-developer-should-know-about-3n4n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Useful Websites Every Web developer Should Know About.&lt;/h2&gt;
      &lt;h3&gt;Cess „Éª Oct 23 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Orginal authors of this articles are &lt;a class="mentioned-user" href="https://dev.to/0shuvo0"&gt;@0shuvo0&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/tarunfy"&gt;@tarunfy&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/ankit01oss"&gt;@ankit01oss&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/sagarbarapatre"&gt;@sagarbarapatre&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/j471n"&gt;@j471n&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/javascriptacademy"&gt;@javascriptacademy&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/pramit_armpit"&gt;@pramit_armpit&lt;/a&gt;
, 0shuvo0, ali6nx404, cesscode&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enjoy these articles.&lt;br&gt;
Follow me for more articles.&lt;br&gt;
Thanks üíñüíñüíñ&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title> free HTTP public APIs </title>
      <author>Sijey</author>
      <pubDate>Mon, 25 Oct 2021 11:29:43 +0000</pubDate>
      <link>https://dev.to/sijeypraveen/free-http-public-apis-20gi</link>
      <guid>https://dev.to/sijeypraveen/free-http-public-apis-20gi</guid>
      <description>&lt;h1&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  üìö Documentation
&lt;/h1&gt;

&lt;p&gt;Full documentation will be updated in &lt;a href="https://api.sijey.repl.co/"&gt;api.sijey.repl.co&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lyrics"&gt;
  &lt;/a&gt;
  Lyrics
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://api.sijey.repl.co/lyrics?song=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#web-search"&gt;
  &lt;/a&gt;
  Web Search
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://api.sijey.repl.co/search?q=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#weather"&gt;
  &lt;/a&gt;
  Weather
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://api.sijey.repl.co/weather?location=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dictionary"&gt;
  &lt;/a&gt;
  Dictionary
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://api.sijey.repl.co/dictionary?word=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  ü§ù Support
&lt;/h1&gt;

&lt;p&gt;If this APIs are useful for your projects you can give a star ‚≠ê on the repo and support .&lt;/p&gt;

&lt;p&gt;GitHub repository: &lt;a href="https://github.com/sijey-praveen/http-api"&gt;https://github.com/sijey-praveen/http-api&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Use OpenAPI for Secure and Robust API Integration</title>
      <author>Michael Bogan</author>
      <pubDate>Mon, 25 Oct 2021 11:23:39 +0000</pubDate>
      <link>https://dev.to/mbogan/how-to-use-openapi-for-secure-and-robust-api-integration-1olg</link>
      <guid>https://dev.to/mbogan/how-to-use-openapi-for-secure-and-robust-api-integration-1olg</guid>
      <description>&lt;p&gt;Standards are awesome.&lt;/p&gt;

&lt;p&gt;What kind of world would this be if programming languages allowed &lt;code&gt;()&lt;/code&gt; and &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; to be used interchangeably or even mixed together? Chaos would ensue.&lt;/p&gt;

&lt;p&gt;What if the port on the side of your computer was simply a jumble of loose wires and contacts, waiting for you to find the right combination of connections to power up your webcam? Thank goodness for the USB standard.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;APIs need standards, too.&lt;/strong&gt; Building your application on top of unpredictable and unreliable APIs is a time-killer. It‚Äôs just one headache after another. That‚Äôs why &lt;strong&gt;API development has moved toward broad adoption of the &lt;a href="https://spec.openapis.org/oas/latest.html"&gt;OpenAPI Specification (OAS)‚Äî&lt;/a&gt;&lt;/strong&gt;the industry standard used by both builders &lt;em&gt;and&lt;/em&gt; consumers of APIs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How might OAS help as you build systems that consume APIs? What are the pitfalls you‚Äôll avoid by using APIs that adhere to OAS?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ultimately, an API is most usable when it conforms to a standard. In addition to OAS-conformant APIs being more usable, OAS has led to several tools‚Äîlike &lt;a href="https://swagger.io/"&gt;Swagger&lt;/a&gt; and &lt;a href="https://apiclarity.io/"&gt;APIClarity&lt;/a&gt;‚Äîbuilt for developers to better understand the APIs they‚Äôre working with. Swagger comprises a suite of tools used for the design, development, documentation, and testing of APIs. APIClarity observes real-time traffic to and from an API, and then compares &lt;em&gt;actual&lt;/em&gt; usage against the API‚Äôs specification.&lt;/p&gt;

&lt;p&gt;Let‚Äôs look at how the OpenAPI Specification came about and then dive into how adopting OAS will remove the headaches and bring confidence back to your integration of third-party APIs. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-openapi-initiative"&gt;
  &lt;/a&gt;
  What is the OpenAPI Initiative?
&lt;/h2&gt;

&lt;p&gt;The OpenAPI Initiative (OAI) is ‚Äú&lt;em&gt;a consortium of forward-looking industry experts who recognize the immense value of standardizing on how APIs are described&lt;/em&gt;.‚Äù The OAI &lt;a href="https://www.openapis.org/membership/members"&gt;consortium members&lt;/a&gt; include big hitters like IBM, Google, Oracle, MuleSoft, and Kong.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hAQ0srR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ucrrua6je1mbnjrag2pt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hAQ0srR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ucrrua6je1mbnjrag2pt.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OAI Members as of October, 2021 (&lt;a href="https://www.openapis.org/membership/members"&gt;source&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;When establishing the standard, the goal of the OAI is to bring value to developers on both sides of an API. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For developers constructing the API&lt;/strong&gt;, the standard provides a framework for building reliable services that interact with others. That framework nudges you toward best practices for security and future-proofing your development. The APIs you &lt;em&gt;build&lt;/em&gt; can become predictable and reliable. By using a standard format to document your API, your API becomes more discoverable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For developers consuming APIs&lt;/strong&gt;, the benefits are even greater: interacting with an API that conforms with a standard provides assurance that the API you &lt;em&gt;use&lt;/em&gt; will be &lt;strong&gt;predictable&lt;/strong&gt; and &lt;strong&gt;reliable&lt;/strong&gt;. You &lt;em&gt;also&lt;/em&gt; reap the benefit of API &lt;strong&gt;discoverability&lt;/strong&gt;, as APIs documented according to OAS will be more easily findable in API marketplaces or exchanges.&lt;/p&gt;

&lt;p&gt;OAI operates under the Linux Foundation as a partnership between many industry-leading companies. Developers and consumers of APIs that adhere to OAS can take comfort in knowing that those APIs are vendor-neutral and rely on well-known web technologies.&lt;/p&gt;

&lt;p&gt;OAS itself was initially based on the &lt;a href="https://swagger.io/"&gt;Swagger Specification&lt;/a&gt; and continues to have many elements drawn from Swagger‚Äôs popular API documentation tool. Additionally, OAS targets RESTful API development and the resource-driven API model.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2y9p0hNv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtx0qpk99y7aeoeiqv3c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2y9p0hNv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtx0qpk99y7aeoeiqv3c.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The ‚ÄúSwagger Petstore‚Äù is the ‚ÄúHello World‚Äù for OpenAPI Specifications (&lt;a href="https://app.swaggerhub.com/apis/Colon-Org/Swagger-PetStore-3.0/1.1"&gt;source&lt;/a&gt;) &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-oas"&gt;
  &lt;/a&gt;
  Why Use OAS?
&lt;/h2&gt;

&lt;p&gt;When an API is designed, built, and consumed in adherence to a standard, this benefits both the maintainers &lt;em&gt;and&lt;/em&gt; the users of the API. There‚Äôs no more lost time or guess-work, trying to figure out whether the params were supposed to be in the query string or in the request body, or whether authentication in the header was basic auth or bearer auth. Developer confidence and velocity‚Äîfor builders and consumers‚Äîincreases, since conventions lead to code consistency.&lt;/p&gt;

&lt;p&gt;With the OpenAPI Specification, developers enjoy many benefits and avoid common pitfalls.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits-enjoyed"&gt;
  &lt;/a&gt;
  Benefits enjoyed
&lt;/h3&gt;

&lt;p&gt;One of the biggest benefits of the OAS is the definition of a convention‚Äîa standard, &lt;strong&gt;language-agnostic interface&lt;/strong&gt;. OAS-conformant APIs can be implemented in any language and with any number of services underlying them. The specification is &lt;strong&gt;completely decoupled from the implementation details&lt;/strong&gt; of the API which it describes. The specification simply details the function of the API.&lt;/p&gt;

&lt;p&gt;This separation from the implementation is a benefit to both developers and consumers of an API service, as it &lt;strong&gt;eases the discoverability of different functions of the system&lt;/strong&gt;. With a specification in hand, an API consumer can &lt;strong&gt;easily understand the API&lt;/strong&gt; without needing to know the language or framework in which the API was developed. Consumers will not need access to any source code or specialized documentation. For example, consumers of the &lt;a href="https://dev.twitch.tv/docs/api"&gt;Twitch API&lt;/a&gt; would have all they need for API usage from an OAS document, without needing to learn Ruby on Rails or Go, which are part of the Twitch tech stack. Similarly, users of the &lt;a href="https://developer.spotify.com/documentation/web-api/"&gt;Spotify API&lt;/a&gt; don‚Äôt need to learn Python or Java to use the API. This is the benefit of OAS being language-agnostic.&lt;/p&gt;

&lt;p&gt;Because the OpenAPI Specification is so widely used and agreed upon across the industry, numerous &lt;strong&gt;tools have been built to simplify the task of API development&lt;/strong&gt;. There are tools to validate requests (such as &lt;a href="https://dredd.org/en/latest/"&gt;Dredd&lt;/a&gt; or &lt;a href="https://github.com/isa-group/RESTest"&gt;RESTest&lt;/a&gt;), automate the writing of API documentation (such as &lt;a href="https://stoplight.io/api-documentation/"&gt;Stoplight&lt;/a&gt; or &lt;a href="https://developerhub.io/api-docs"&gt;DeveloperHub&lt;/a&gt;), and even generate SDK code for many client languages (such as &lt;a href="https://www.apimatic.io/continuous-code-generation/"&gt;APIMatic CodeGen&lt;/a&gt; or &lt;a href="https://openapi-generator.tech/"&gt;OpenAPI Generator&lt;/a&gt;). While an API developer can certainly go it alone and build without any assistance, it‚Äôs certainly helpful to have many toolchain options when building an OAS-conformant API.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pitfalls-avoided"&gt;
  &lt;/a&gt;
  Pitfalls avoided
&lt;/h3&gt;

&lt;p&gt;Additionally, using an OAS-conformant API ensures you don‚Äôt fall victim to many common pitfalls. &lt;strong&gt;Endpoints across an API are guaranteed to be consistent&lt;/strong&gt; because the standard ensures the usage of HTTP methods.&lt;/p&gt;

&lt;p&gt;You also won‚Äôt need to worry about running into deprecated APIs (sometimes called ‚Äúzombie APIs‚Äù), as the &lt;strong&gt;standard ensures reasonable versioning of the API&lt;/strong&gt;. OAS-conformant APIs won‚Äôt introduce breaking changes within the same version; instead, breaking changes would require a version change in the API.&lt;/p&gt;

&lt;p&gt;Undocumented APIs (or ‚Äúshadow APIs‚Äù) are also avoided when using OAS-conformant APIs, because the standard requires developers to &lt;strong&gt;use an understandable and agreed-upon structure&lt;/strong&gt; in their APIs. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enforcing-oas-adherence"&gt;
  &lt;/a&gt;
  Enforcing OAS Adherence
&lt;/h2&gt;

&lt;p&gt;With all that the OpenAPI Specification promises, it may seem daunting to ensure that the APIs you consume are OAS-conformant. The task of building an API that adheres to OAS may seem equally formidable.&lt;/p&gt;

&lt;p&gt;It doesn‚Äôt need to be.&lt;/p&gt;

&lt;p&gt;To begin with, the tools around the OpenAPI Specification are a huge asset for any developer working in the space. Since OAS was originally based on the Swagger Specification, there are still &lt;a href="https://swagger.io/tools/"&gt;many tools&lt;/a&gt; from Swagger that can help any developer working on an API.&lt;/p&gt;

&lt;p&gt;For API developers, the OpenAPI Initiative provides a &lt;a href="https://openapi.tools/"&gt;list of tools&lt;/a&gt; useful for building robust OAS-conformant APIs. Whether you need code generation or documentation assistance, there‚Äôs probably something for you there.&lt;/p&gt;

&lt;p&gt;When building API-consuming client applications, helpful tools include those used for &lt;a href="https://openapi.tools/#learning"&gt;learning more about the APIs you consume&lt;/a&gt;. Some of these tools can run against that API you want to use, generating a description of the API according to the OAS standard.&lt;/p&gt;

&lt;p&gt;For example, &lt;a href="https://apiclarity.io/"&gt;APIClarity&lt;/a&gt; is a tool that observes all of the API traffic within your Kubernetes environment. Based on traffic observation, APIClarity infers an OpenAPI description for those APIs. This is especially helpful if the API creator never defined or provided such a description. It also surfaces potential problems with existing APIs, such as requests made to undocumented, shadow APIs or continued use of deprecated, zombie APIs. If you‚Äôre getting started on the path toward OAS compliance, then tools like APIClarity can be a great source of insight and observability.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QkUuXqJ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bmpuyc5cyhrpafnrslz.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QkUuXqJ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bmpuyc5cyhrpafnrslz.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In summary, the OpenAPI Specification exists to make a developer‚Äôs work much easier‚Äîwhether they build or consume APIs. Rather than making design decisions on the fly based on past experience, you can build on the shared wisdom of industry experts to make a great API or client application. &lt;a href="https://oai.github.io/Documentation/start-here.html"&gt;Getting started&lt;/a&gt; on building an API using the OAS standard isn‚Äôt out of reach and is something you could begin today!&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Wow, I completed 4 PR this year Hacktoberfest! üéâüåüüòÅ</title>
      <author>Mahmudul Hasan</author>
      <pubDate>Mon, 25 Oct 2021 11:20:44 +0000</pubDate>
      <link>https://dev.to/mhasan/wow-i-completed-4-pr-this-year-hacktoberfest-1nbd</link>
      <guid>https://dev.to/mhasan/wow-i-completed-4-pr-this-year-hacktoberfest-1nbd</guid>
      <description>&lt;h3&gt;
  &lt;a href="#yes-i-completed-my-hacktoberfest-journey-successfully-after-completing-4-pr-request"&gt;
  &lt;/a&gt;
  Yes! I completed my &lt;strong&gt;Hacktoberfest&lt;/strong&gt; journey successfully after completing 4 PR request!
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#my-plan-for-hacktoberest"&gt;
  &lt;/a&gt;
  My plan for Hacktoberest.
&lt;/h3&gt;

&lt;p&gt;Since last month I was keep in touch by &lt;strong&gt;Digital Ocean&lt;/strong&gt; about Hacktoberfest event. I was learned how to make &lt;strong&gt;Pull Request&lt;/strong&gt; to make Hacktoberfest event successfully complete. Then I make a webinar with my friends in a Facebook event, in where we teach hundreds of others how to do open source contribution, git and GitHub, Pull Request and as well as Hacktoberfest event. &lt;/p&gt;

&lt;p&gt;We teach and let them know that If you know coding then you can do open source contribution to great projects. It help them many way like enrich their portfolio since GitHub is one of the profile what recruiter want to check out.&lt;/p&gt;

&lt;p&gt;If you know coding/programming then it is okay, you can contribute many great projects. But if you don't know code well, then how can you contribute and participate Hacktoberfest? Well, Coding is not only option for contribution. You can contribute open source by helping documentation section too. And many projects don't need to know code for contribution. I also contribute projects in where I don't need to know code. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#progress"&gt;
  &lt;/a&gt;
  Progress
&lt;/h3&gt;

&lt;p&gt;My first PR was bit hard and faced several failed attempts for twisted git issues. It was because I couldn't set remote upstream git repository. Then I tries several times, googling, read Stack overflow solutions and finally solved that issue. &lt;/p&gt;

&lt;p&gt;After my first Pull Request completed then others PR was easy to completed. It takes almost 15 days to complete my total 4 PR requests. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contributions"&gt;
  &lt;/a&gt;
  Contributions
&lt;/h3&gt;

&lt;p&gt;I mainly contributed to a cheatsheet repository, which name is &lt;strong&gt;Devsonket&lt;/strong&gt;. Devsonket is helping others about cheeetshet of almost everything like Windows 10 OS cheetSheet, Linux command line cheetsheet, Adobe Photoshop cheetsheet and many more. It is mainly for Bengali communities. You can check it out! &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/devsonket"&gt;
        devsonket
      &lt;/a&gt; / &lt;a href="https://github.com/devsonket/devsonket.github.io"&gt;
        devsonket.github.io
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üé®üõ†üìå ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶æ‡¶∞ ‡¶ö‡¶ø‡¶ü‡¶∂‡¶ø‡¶ü üé®üõ†üìå 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/devsonket/devsonket.github.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3c0f0e25a4c1175e1052f533d0300a06fc827dbb6fa7e1a0dcc6549098d8c05/68747470733a2f2f7472617669732d63692e6f72672f646576736f6e6b65742f646576736f6e6b65742e6769746875622e696f2e7376673f6272616e63683d646576656c6f70" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://devsonket.github.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/834d4d31dc47e6ca4f51ba42045e8d781a2ba69471353b04cbfd6cb569c767d6/68747470733a2f2f696d672e736869656c64732e696f2f776562736974652d75702d646f776e2d677265656e2d7265642f68747470732f736869656c64732e696f2e7376673f6c6162656c3d646576736f6e6b6574" alt="Website"&gt;&lt;/a&gt; &lt;a href="https://github.com/devsonket/devsonket.github.io/issues"&gt;&lt;img src="https://camo.githubusercontent.com/e393b02a65e651e57c8d7347e873f04d04d224f23ef69da73b70490185ba8e3c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d7261772f646576736f6e6b65742f646576736f6e6b65742e6769746875622e696f2e737667" alt="Open Issue"&gt;&lt;/a&gt;
&lt;a href="https://github.com/devsonket/devsonket.github.io/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/c3f39d8ee79e1f8ce668a3cbd6fe66d081fa67b5781088e0ad313355494d0f70/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f646576736f6e6b65742f646576736f6e6b65742e6769746875622e696f2e737667" alt="GitHub contributors"&gt;&lt;/a&gt;
&lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/78f47a09877ba9d28da1887a93e5c3bc2efb309c1e910eb21135becd2998238a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" alt="License: MIT"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blace.com.bd/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6d660cd3439151e41123b8db68f692cc0ce93488ca4c165e79f8fe07c505517b/68747470733a2f2f73636f6e74656e742e66636770372d312e666e612e666263646e2e6e65742f762f74312e302d392f3133343339363734375f333732393633373335303434383932365f383136373630343633353332303432333934325f6f2e6a70673f5f6e635f6361743d313035266363623d32265f6e635f7369643d373330653134265f6e635f6f68633d757a622d534b58613337414158384c37546948265f6e635f6f633d41516d6965323776706d78436132485175415078394f31663131692d6751693659684d7237554a373974526f4b39444b75354456326578716d4e4b50714258494d4663265f6e635f68743d73636f6e74656e742e66636770372d312e666e61266f683d3265616238323262633838366630663366323764326162333838393366633134266f653d3630314133313535" alt="T-Shirt Sponsor - Blace"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
‡¶â‡¶¶‡ßç‡¶¶‡ßá‡¶∂‡ßç‡¶Ø&lt;/h2&gt;
&lt;p&gt;‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶æ‡¶∞‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡ßá ‡¶ö‡¶ø‡¶ü‡¶∂‡¶ø‡¶ü ‡¶ñ‡ßÅ‡¶¨‡¶á ‡¶ï‡¶æ‡¶ú‡ßá‡¶∞ ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏‡•§ ‡¶ï‡¶æ‡¶∞‡¶£ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶™‡¶ï‡ßç‡¶∑‡ßá ‡¶Ö‡¶®‡ßá‡¶ï ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¨‡¶æ ‡¶ï‡ßã‡¶®‡ßã ‡¶≤‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∞‡ßÄ‡¶∞ ‡¶∏‡¶¨ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨ ‡¶π‡ßü ‡¶®‡¶æ‡•§ ‡¶∏‡ßá‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶Ø‡¶¶‡¶ø ‡¶è‡¶ï‡¶ü‡¶æ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶ï‡¶∞‡¶ø ‡¶Ø‡ßá ‡¶Ö‡¶Æ‡ßÅ‡¶ï ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¨‡¶æ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶Ö‡¶Æ‡ßÅ‡¶ï ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶ñ‡ßÅ‡¶¨ ‡¶∏‡¶π‡¶ú‡ßá‡¶á ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§‡ßá ‡¶ï‡ßá‡¶â ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶§‡ßá ‡¶ó‡ßá‡¶≤‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶∏‡ßá‡¶á ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶¶‡ßá‡¶ñ‡¶≤‡ßá‡¶á ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡ßÄ‡ßü ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶¨‡ßá‡•§ ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶™‡ßÅ‡¶∞‡ßã ‡¶ú‡ßç‡¶û‡¶æ‡¶®‡¶ï‡ßá ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó‡ßá ‡¶≠‡¶æ‡¶ó ‡¶ï‡¶∞‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶Ü‡¶∏‡¶≤ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶æ‡¶®‡¶æ‡¶≤‡¶ø‡¶ü‡¶ø‡¶ó‡ßÅ‡¶≤‡ßã ‡¶ñ‡ßÅ‡¶¨ ‡¶õ‡ßã‡¶ü‡ßç‡¶ü‡ßã ‡¶ï‡¶∞‡ßá ‡¶¨‡¶∞‡ßç‡¶£‡¶®‡¶æ ‡¶¶‡¶ø‡ßü‡ßá ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§ ‡¶Ø‡ßá‡¶ó‡ßÅ‡¶≤‡ßã‡¶§‡ßá ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶æ‡¶∞ ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶ö‡ßã‡¶ñ ‡¶¨‡ßÅ‡¶≤‡¶ø‡ßü‡ßá ‡¶®‡¶ø‡¶≤‡ßá‡¶á ‡¶§‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶ô‡ßç‡¶ï‡ßç‡¶∑‡¶ø‡¶§ ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏‡¶ü‡¶æ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶¨‡ßá‡•§ ‡¶è‡¶∞‡¶ï‡¶Æ ‡¶ö‡¶ø‡¶ü‡¶∂‡¶ø‡¶ü &lt;a href="https://devhints.io/" rel="nofollow"&gt;‡¶è‡¶ñ‡¶æ‡¶®‡ßá‡¶ì&lt;/a&gt; ‡¶™‡¶æ‡¶¨‡ßá‡¶®‡•§ ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≤‡¶ï‡ßç‡¶∑‡ßç‡¶Ø ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü ‡¶ö‡¶ø‡¶ü‡¶∂‡¶ø‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡•§&lt;/p&gt;
&lt;h2&gt;
‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá&lt;/h2&gt;
&lt;p&gt;‡¶è‡¶á ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü‡¶ü‡¶ø ‡¶™‡ßÅ‡¶∞‡ßã‡¶™‡ßÅ‡¶∞‡¶ø ‡¶ó‡¶ø‡¶ü‡¶π‡¶æ‡¶¨ ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï‡•§ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá‡¶á &lt;a href="https://github.com/devsonket/devsonket.github.io/tree/develop/data"&gt;&lt;strong&gt;data&lt;/strong&gt;&lt;/a&gt; ‡¶®‡¶æ‡¶Æ‡¶ï ‡¶°‡¶ø‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶∞‡¶ø‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡ßã ‡¶ö‡¶ø‡¶ü‡¶∂‡ßÄ‡¶ü &lt;strong&gt;json&lt;/strong&gt; ‡¶´‡¶æ‡¶á‡¶≤ ‡¶Ü‡¶ï‡¶æ‡¶∞‡ßá ‡¶Ü‡¶õ‡ßá‡•§ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶Æ‡ßá‡¶á‡¶® ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶è‡¶ñ‡¶æ‡¶® ‡¶•‡ßá‡¶ï‡ßá‡¶á ‡¶°‡¶æ‡¶ü‡¶æ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶®‡¶ø‡ßü‡ßá ‡¶∂‡ßã ‡¶ï‡¶∞‡¶æ‡¶¨‡ßá‡•§ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶®‡ßá ‡¶¶‡ßÅ‡¶á ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡ßá‡¶∞ ‡¶ö‡¶ø‡¶ü‡¶∂‡ßÄ‡¶ü ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶õ‡ßá‡•§&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;‡¶ï‡ßã‡¶° ‡¶è‡¶¨‡¶Ç ‡¶¨‡¶∞‡ßç‡¶£‡¶®‡¶æ ‡¶∏‡¶π ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü(&lt;a href="https://github.com/devsonket/devsonket.github.io/blob/develop/data/demo/codendesc.json"&gt;‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶°‡ßá‡¶Æ‡ßã ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶ï‡ßã‡¶°(&lt;a href="https://github.com/devsonket/devsonket.github.io/blob/develop/data/demo/onlycode.json"&gt;‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶°‡ßá‡¶Æ‡ßã ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®&lt;/a&gt;‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/devsonket/devsonket.github.io"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I choose this repository because I got help from this and as I know little bit of shortcut of windows 10 and Linux command prompt, so it is easy to contribute and make PR to this repositories and make myself open source contributor.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reflections"&gt;
  &lt;/a&gt;
  Reflections
&lt;/h3&gt;

&lt;p&gt;So it is really great experience to contribute Hacktoberfest event and successfully completing is another awesome experience. Now I know how to contribute open source. My contribution will continue. My next plan is contribute by coding in some great repositories. &lt;/p&gt;

&lt;p&gt;Thanks to &lt;strong&gt;Digital Ocean&lt;/strong&gt;, &lt;strong&gt;Dev.to&lt;/strong&gt;, &lt;strong&gt;GitHub&lt;/strong&gt; and others. Without Hacktoberfest I may never know how to contribute open source. Feel proud to be an open source contributor! &lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>github</category>
      <category>git</category>
    </item>
    <item>
      <title>SvelteKit Infinite Scroll: Instagram API Tutorial</title>
      <author>Rodney Lab</author>
      <pubDate>Mon, 25 Oct 2021 11:06:38 +0000</pubDate>
      <link>https://dev.to/askrodney/sveltekit-infinite-scroll-instagram-api-tutorial-2kd4</link>
      <guid>https://dev.to/askrodney/sveltekit-infinite-scroll-instagram-api-tutorial-2kd4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#%F0%9F%96%B1-infinite-scrolling-feeds-in-svelte"&gt;
  &lt;/a&gt;
  üñ± Infinite Scrolling Feeds in Svelte
&lt;/h2&gt;

&lt;p&gt;Let's look at SvelteKit infinite scroll.  The Instagram app itself is the perfect example of an infinite scrolling feed.  There is potentially a large number of posts available and the app does not load them all initially; doing so would slow the page down, impacting user experience.  Instead, it loads a few posts and as the user scrolls down, it starts &lt;a href="https://web.dev/embed-best-practices/"&gt;lazy loading&lt;/a&gt; more posts.  Lazy loading is just a way of saying we load content on demand (or ideally, when we anticipate demand).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6AkzGX7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wsbhml2wv0zw18rabin.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6AkzGX7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wsbhml2wv0zw18rabin.png" alt="SvelteKit Infinite Scroll: Screenshot: Image shows a website screenshot with six images from an Instagram feed show in a 3-column grid"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will implement infinite scroll on a SvelteKit app, using images from your Instagram feed.  In doing so, we need a trigger for automatically loading more content.  For this we can &lt;a href="https://rodneylab.com/tracking-page-views-sveltekit/"&gt;use the Intersection Observer API&lt;/a&gt;.  When the user scrolls down and the footer becomes visible we will get an observe event and load more content (where there are more posts available). As well as Intersection Observer, from the Svelte toolkit, we will be using a reactive function and stores.&lt;/p&gt;

&lt;p&gt;We focus on an Instagram application for infinite scrolling in this article.  However, it is not too much effort to apply the techniques here to a blog roll on your site, feeds from other social sites like Twitter or for user interactions on a social app you are building.  If that sounds like something you might find useful then why don't we get cracking?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#instagram-access-token"&gt;
  &lt;/a&gt;
  üîë Instagram Access Token
&lt;/h2&gt;

&lt;p&gt;We will focus in the SvelteKit side in the post, so that it doesn't get too long.  If you want to code along, you will need an Instagram access token.  There are currently two Instagram APIs.  Here we just want to get images from a particular user's feed and the Instagram Basic Display API matches ours needs.  Follow &lt;a href="https://developers.facebook.com/docs/instagram-basic-display-api/getting-started"&gt;Facebook's Get Started with Instagram Basic Display API&lt;/a&gt; to get your access token.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Gjbq6Nb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41jvrkmzs96bfpydgb71.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Gjbq6Nb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41jvrkmzs96bfpydgb71.png" alt="SvelteKit Infinite Scroll: Screenshot: Instagram A P I key: image is screenshot of an authorisation screen.  User can select level of authorisation and click Allow on Don't Allow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will see as part of the tutorial, you will set up a test user.  Use your own Instagram account (or at least the one you want to extract the feed from).  Select the &lt;strong&gt;Media (optional)&lt;/strong&gt; box to be able to pull the feed images in, when asked to authorise your account. Once you have an access token you can move on to the setting up the SvelteKit app.&lt;/p&gt;

&lt;p&gt;A temporary access token is fine for a proof of concept, though if you want to pursue the product to production you will eventually need longer living tokens.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#svelte-setup"&gt;
  &lt;/a&gt;
  ‚öôÔ∏è Svelte Setup
&lt;/h2&gt;

&lt;p&gt;We'll create a skeleton SvelteKit project and put this thing together from there.  To get going, type these commands in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pnpm init svelte@next sveltekit-infinite-scroll &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
pnpm &lt;span class="nb"&gt;install
&lt;/span&gt;pnpm &lt;span class="nb"&gt;install &lt;/span&gt;dotenv @fontsource/playfair-display
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Select a skeleton project, answer no to Typescript and yes to both Prettier and ESLint.  We include the &lt;code&gt;dotenv&lt;/code&gt; package (as well as a font) in our install so we can read our Instagram API key from a &lt;code&gt;.env&lt;/code&gt; file.  Let's create that file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INSTAGRAM_ACCESS_TOKEN=IGQVJ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then include &lt;code&gt;dotenv&lt;/code&gt; config in &lt;code&gt;svelte.config.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/** @type {import('@sveltejs/kit').Config} */&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv/config&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;kit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// hydrate the &amp;lt;div id="svelte"&amp;gt; element in src/app.html&lt;/span&gt;
    &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then finally spin up a dev server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pnpm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sveltekit-infinite-scroll-api-routes"&gt;
  &lt;/a&gt;
  üß± SvelteKit Infinite Scroll: API Routes
&lt;/h2&gt;

&lt;p&gt;Next we'll build a couple of API routes.  We will use these to query the Instagram API from the client.  First create &lt;code&gt;src/routes/api/instargram-feed&lt;/code&gt; (you will need to create the &lt;code&gt;api&lt;/code&gt; folder).  Add the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://graph.instagram.com/me/media?fields=caption,id,media_type,media_url,timestamp&amp;amp;access_token=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INSTAGRAM_ACCESS_TOKEN&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error retrieving data in /api.instagram-feed.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will call this code by sending a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/api-instagram-feed.json&lt;/code&gt; and it will just return the data it receives from Instagram, if all is well!  That response will be JSON and something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"17924392726111111"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"media_type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"IMAGE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"media_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://scontent-lhr8-1.cdninstagram.com/v/iamge-url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"timestamp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2021-10-18T11:09:59+0000"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"17924392726111112"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"media_type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"IMAGE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"media_url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://scontent-lhr8-1.cdninstagram.com/v/iamge-url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"timestamp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2021-10-18T11:09:50+0000"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"paging"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"cursors"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"before"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"aaa"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="nl"&gt;"after"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"bbb"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"next"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://graph.instagram.com/v12.0/link-for-next-page"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There will be up to 25 posts (I just included two here).  Note the &lt;code&gt;paging&lt;/code&gt; object includes a &lt;code&gt;next&lt;/code&gt; link.  We will use this when we need to download more images. Lets code up the endpoint for that next.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pulling-more-images-from-instagram-api"&gt;
  &lt;/a&gt;
  Pulling more Images from Instagram API
&lt;/h3&gt;

&lt;p&gt;To get more images, we just need the &lt;code&gt;next&lt;/code&gt; link included in the previous call.  Create an endpoint for pulling more images at &lt;code&gt;src/routes/api/instagram-feed-more.json.js&lt;/code&gt; and add this content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Error retrieving data in /api.instagram-feed-more.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will access this endpoint using the &lt;code&gt;POST&lt;/code&gt; method and include the &lt;code&gt;next&lt;/code&gt; link in the API call body.&lt;/p&gt;

&lt;p&gt;With our API routes now all set up, let's add one more piece of plumbing before we code up the client page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%F0%9F%9B%8D-svelte-store"&gt;
  &lt;/a&gt;
  üõç Svelte Store
&lt;/h2&gt;

&lt;p&gt;Initially, we will show six images, though we would have pulled up to 25 in the first API call.  The store helps us out here.  We put all the images we pulled from Instagram into the store and then (initially) show the first six.  As the user scrolls down, we will load more images from the store.  Eventually, it's possible the user will want more images than there are available in the store.  At that point we make a &lt;code&gt;more&lt;/code&gt; Instagram call, returning up to 25 more images.  We append those new images onto the end of what's in the store already and we're away!&lt;/p&gt;

&lt;p&gt;That probably sounded more complicated than Svelte actually makes it, but I wanted to run through the logic before we implement it.  As it happens, we only need three lines of JavaScript to set this store up in SvelteKit!  Create a file at &lt;code&gt;src/lib/shared/store/instagram.js&lt;/code&gt; (you will need to create some folders).  Add these lines to the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;writable&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte/store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;feed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;writable&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;feed&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In line &lt;code&gt;3&lt;/code&gt;, we are initialising the store to an empty array. Let's add something now from the client.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#client-side"&gt;
  &lt;/a&gt;
  üßëüèΩ Client Side
&lt;/h2&gt;

&lt;p&gt;We'll start with the load function.  In SvelteKit, load functions run before the initial render.  Here it makes sense to make the first Instagram call in the load function.  Replace the existing code in &lt;code&gt;src/routes/index.svelte&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script context="module"&amp;gt;
  export async function load({ fetch }) {
    try {
      const response = await fetch('/api/instagram-feed.json', {
        method: 'GET',
        credentials: 'same-origin',
      });
      return {
        props: { data: { ...(await response.json()) } },
      };
    } catch (error) {
      console.error(error);
    }
  }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You see we call the first API route we created, sending a &lt;code&gt;GET&lt;/code&gt; request.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stocking-up-the-store"&gt;
  &lt;/a&gt;
  Stocking up the Store
&lt;/h3&gt;

&lt;p&gt;You might have noticed, we returned props from the load function in line &lt;code&gt;9&lt;/code&gt;.  This makes the Instagram data available to our client side JavaScript, which we add next:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
  import instagram from '$lib/shared/stores/instagram';
  import { onMount } from 'svelte';
  import { browser } from '$app/env';
  import '@fontsource/playfair-display/400.css';
  import '@fontsource/playfair-display/700.css';

  export let data;

  const INITIAL_POSTS = 6;

  const { data: feed, paging } = data;
  let next = paging?.next ? paging.next : null;
  instagram.set(feed);

  let limit = INITIAL_POSTS;

  function morePostsAvailable() {
    return limit &amp;lt; $instagram.length || next;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have the feed posts available in the data prop, which we import (Svelte syntax is to use the &lt;code&gt;export&lt;/code&gt; keyword here) in line 24.  We destructure the feed and then adding the data to the store is simply done in line &lt;code&gt;30&lt;/code&gt; with &lt;code&gt;instagram.set(feed)&lt;/code&gt;.  Could there be less boiler plate? üòÖ&lt;/p&gt;

&lt;p&gt;I should mention, we imported the store in line &lt;code&gt;18&lt;/code&gt;.  In line &lt;code&gt;35&lt;/code&gt; you see an example of how we can access the store.  We just write &lt;code&gt;$instagram&lt;/code&gt; and that gives us the array which we set the store to be.  In this line, we check how many elements are currently in the store array.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intersection-observer"&gt;
  &lt;/a&gt;
  Intersection Observer
&lt;/h3&gt;

&lt;p&gt;Okay, next we want to be able to show more posts (if we have them) whenever the footer comes into view.  The Intersection Observer API is our friend here.  If this is your first time using it in Svelte, check out the post on &lt;a href="https://rodneylab.com/tracking-page-views-sveltekit/"&gt;tracking page views, where we look at Intersection Observer&lt;/a&gt; in more detail.  Add this code to the bottom of &lt;code&gt;src/routes/index.svelte&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  onMount(() =&amp;gt; {
    if (browser &amp;amp;&amp;amp; document.getElementById('footer')) {
      const handleIntersect = (entries, observer) =&amp;gt; {
        entries.forEach((entry) =&amp;gt; {
          if (!morePostsAvailable()) {
            observer.unobserve(entry.target);
          }
          showMorePosts();
        });
      };
      const options = { threshold: 0.25, rootMargin: '-100% 0% 100%' };
      const observer = new IntersectionObserver(handleIntersect, options);
      observer.observe(document.getElementById('footer').lastElementChild);
    }
  });

  $: showMorePosts;
  async function showMorePosts() {
    try {
      const newLimit = limit + 6;
      if (newLimit &amp;lt;= $instagram.length) {
        // load more images from store
        limit = newLimit;
      } else if (next) {
        // get another page from Instagram if there is another page available
        const response = await fetch('/api/instagram-feed-more.json', {
          method: 'POST',
          credentials: 'same-origin',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ next: next.replace(/%2C/g, ',') }),
        });
        const newData = await response.json();
        const { data: newFeed, next: newNext } = newData;
        instagram.set([...$instagram, ...newFeed]);
        next = newNext ?? null;
        limit = newLimit;
      }
    } catch (error) {
      console.error('Error fetching more posts in index');
    }
  }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will set the minimum page height so that the footer is initially out of view (in styles which we add in a moment).  Our Intersection Observer parameters will observe an intersection event when the user scrolls down and the footer becomes visible.  This will call the &lt;code&gt;showMorePosts&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;showMorePosts&lt;/code&gt; is declared as a reactive function (in line &lt;code&gt;54&lt;/code&gt;).  This is a hint to the Svelte compiler that the function changes some elements in the DOM and a refresh might be needed when it is finished.&lt;/p&gt;

&lt;p&gt;In line &lt;code&gt;69&lt;/code&gt;, we just make sure we replace URL encoded commas in the &lt;code&gt;next&lt;/code&gt; string with actual commas.  Let me know if anything here needs more explanation and I can update the post. Let's actually render the content next.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#client-rendered-markup"&gt;
  &lt;/a&gt;
  Client Rendered Markup
&lt;/h3&gt;

&lt;p&gt;Paste this code at the bottom of &lt;code&gt;src/routes/index.svelte&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;svelte:head&amp;gt;
  &amp;lt;title&amp;gt;SvelteKit Infinite Feed Scroll&amp;lt;/title&amp;gt;
  &amp;lt;html lang="en-GB" /&amp;gt;
&amp;lt;/svelte:head&amp;gt;

&amp;lt;header&amp;gt;SvelteKit Infinite Scroll&amp;lt;/header&amp;gt;

&amp;lt;main class="container"&amp;gt;
  &amp;lt;h1&amp;gt;Instagram Feed&amp;lt;/h1&amp;gt;
  &amp;lt;section class="feed"&amp;gt;
    {#each $instagram?.slice(0, limit) as { caption, media_url }, index}
      &amp;lt;article aria-posinset={index + 1} aria-setsize={$instagram.length} class="feed-image"&amp;gt;
        &amp;lt;img
          class="lazy"
          alt={caption ? caption : 'Image from instagram feed'}
          loading="lazy"
          decoding="async"
          width="256"
          height="256"
          \src={media_url}
        /&amp;gt;
      &amp;lt;/article&amp;gt;{:else}
      No feed images yet!
    {/each}
  &amp;lt;/section&amp;gt;
&amp;lt;/main&amp;gt;
&amp;lt;footer id="footer"&amp;gt;
  &amp;lt;small&amp;gt;Copyright (c) 2021 Rodney Lab. All Rights Reserved.&amp;lt;/small&amp;gt;
&amp;lt;/footer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's a few things worth mentioning here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;in line &lt;code&gt;93&lt;/code&gt; we just take the number of posts we want from the store, rather that the whole thing,&lt;/li&gt;
&lt;li&gt;we add an &lt;code&gt;id="footer"&lt;/code&gt; attribute which is used above by the Intersection Observer code,&lt;/li&gt;
&lt;li&gt;I've just included the footer content in the example for the sake of the Intersection Observer code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#sveltekit-infinite-scroll-styling"&gt;
  &lt;/a&gt;
  SvelteKit Infinite Scroll: Styling
&lt;/h3&gt;

&lt;p&gt;Here's some (mostly) optional styling, just paste it at the bottom of our file.  Be sure at least to set the &lt;code&gt;min-height&lt;/code&gt; as in line &lt;code&gt;135&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  :global(html) {
    font-family: 'Playfair Display';
    background: #e1306c;
  }
  :global(body) {
    margin: 0;
  }

  header {
    color: #ffdc80;
    max-width: 768rem;
    padding: 1.5rem;
    font-size: 3.052rem;
    font-weight: 700;
  }
  h1 {
    color: #ffdc80;
    font-size: 3.815rem;
    text-align: center;
  }
  .container {
    min-height: 100vh;
  }

  .feed {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: auto;
    row-gap: 0;
    max-width: 768px;
    margin: 3rem auto;
    width: 100%;
    height: auto;
  }

  .feed img {
    width: 100%;
    height: 100%;
  }
  .feed-image {
    width: 100%;
    height: 100%;
  }

  footer {
    background: #833ab4;
    color: #fff;
    text-align: center;
    padding: 1rem;
  }

  @media (max-width: 768px) {
    .feed {
      padding: 0 1.5rem;
      width: 100%;
    }
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sveltekit-infinite-scroll-testing"&gt;
  &lt;/a&gt;
  üíØ  SvelteKit Infinite Scroll: Testing
&lt;/h2&gt;

&lt;p&gt;That's it.  Give your browser a refresh and get scrolling!  If your internet connection is fast you might not notice more images loading.  Keen an eye on the vertical scroll bar though and you will see it jumps as more content (off screen) loads.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sveltekit-infinite-scroll-what-we-learned"&gt;
  &lt;/a&gt;
  üôåüèΩ SvelteKit Infinite Scroll: What we Learned
&lt;/h2&gt;

&lt;p&gt;In this post we learned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;using the Instagram API to fetch a user's posts,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;how you can use store in Svelte to buffer content received from an external feed,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;combining the Intersection Observer API with Svelte stores for a seamless user experience.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I do hope there is at least one thing in this article which you can use in your work or a side project.  For extensions, you could add a Twitter or try adapting the code to take Instagram Video posts as well as images.  Alternatively simply use the code to create an infinite feed of your blog posts.  The sky is the limit, you can really go to town on this!&lt;/p&gt;

&lt;p&gt;As always get in touch with feedback if I have missed a trick somewhere!  You can see the &lt;a href="https://github.com/rodneylab/sveltekit-instagram-infinite-scroll"&gt;full code for this SvelteKit Instagram Infinite Scroll tutorial on the Rodney Lab Git Hub repo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sveltekit-infinite-scroll-feedback"&gt;
  &lt;/a&gt;
  üôèüèΩ SvelteKit Infinite Scroll: Feedback
&lt;/h2&gt;

&lt;p&gt;Have you found the post useful? Do you have your own methods for solving this problem? Let me know your solution. Would you like to see posts on another topic instead? Get in touch with ideas for new posts. Also if you like my writing style, get in touch if I can write some posts for your company site on a consultancy basis. Read on to find ways to get in touch, further below. If you want to support posts similar to this one and can spare a few dollars, euros or pounds, please &lt;a href="https://rodneylab.com/giving/"&gt;consider supporting me through Buy me a Coffee&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally, feel free to share the post on your social media accounts for all your followers who will find it useful. As well as leaving a comment below, you can get in touch via &lt;a href="https://twitter.com/messages/compose?recipient_id=1323579817258831875"&gt;@askRodney&lt;/a&gt; on Twitter and also &lt;a href="https://t.me/askRodney"&gt;askRodney on Telegram&lt;/a&gt;. Also, see &lt;a href="https://rodneylab.com/contact"&gt;further ways to get in touch with Rodney Lab&lt;/a&gt;. I post regularly on &lt;a href="https://rodneylab.com/tags/sveltekit/"&gt;SvelteKit&lt;/a&gt; as well as other topics. Also &lt;a href="https://rodneylab.com/about/#newsletter"&gt;subscribe to the newsletter to keep up-to-date&lt;/a&gt; with our latest projects.&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Amazon EC2 Reserved Instances 
and Other AWS Reservation Models
</title>
      <author>Ahmed Adel</author>
      <pubDate>Mon, 25 Oct 2021 10:41:04 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/amazon-ec2-reserved-instances-and-other-aws-reservation-models-25ad</link>
      <guid>https://dev.to/awsmenacommunity/amazon-ec2-reserved-instances-and-other-aws-reservation-models-25ad</guid>
      <description>&lt;h2&gt;
  &lt;a href="#%E2%97%8F-amazon-ec2-reserved-instances"&gt;
  &lt;/a&gt;
  ‚óè Amazon EC2 Reserved Instances:
&lt;/h2&gt;

&lt;p&gt;‚û• By purchasing RIs, you make a &lt;code&gt;one-year&lt;/code&gt; or &lt;code&gt;three-year&lt;/code&gt; commitment and receive billing discount of up to &lt;code&gt;72%&lt;/code&gt;. &lt;br&gt;
‚û• RI is not an instance dedicated to your organization. It is a billing discount applied to the use of On-Demand Instances.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E2%9E%A4-reserved-instances-payment-options"&gt;
  &lt;/a&gt;
  ‚û§ Reserved Instances payment options:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1-No Upfront:&lt;/strong&gt; You are billed a discounted hourly rate for every hour within the term, regardless of whether the Reserved Instance is being used (&lt;code&gt;Lowest discount&lt;/code&gt;).&lt;br&gt;
&lt;strong&gt;2-Partial Upfront:&lt;/strong&gt; A portion of the cost must be paid up front and the remaining hours in the term are billed at a discounted hourly rate, regardless of whether you‚Äôre using the RI.&lt;br&gt;
&lt;strong&gt;3-All Upfront:&lt;/strong&gt; Full payment is made at the start of the term, with no other costs or additional hourly charges, regardless of hours used (&lt;code&gt;Highest discount&lt;/code&gt;).&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#%E2%9E%A4-standard-vs-convertible-offering-classes"&gt;
  &lt;/a&gt;
  ‚û§ Standard vs. Convertible offering classes:
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Standard Reserved Instance&lt;/th&gt;
&lt;th&gt;Convertible Reserved Instance&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Enables you to modify Availability Zone, scope, networking type, and instance size (within the same instance type) of your RI.&lt;/td&gt;
&lt;td&gt;Enables you to exchange one or more Convertible RIs for another with a different configuration, including instance family, OS, and tenancy. There are no limits to how many times you perform an exchange, as long as the target instance is of an equal or higher value than the new instances.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Can be sold in Marketplace&lt;/td&gt;
&lt;td&gt;Cannot be sold in Marketplace.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Higher discount&lt;/td&gt;
&lt;td&gt;Lower discount (One-year Standard has similar discount to three-year Convertible)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;‚úÖ When to use Convertible Reserved Instances:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Workloads are likely to change. &lt;/li&gt;
&lt;li&gt;You want to hedge against possible future price drops. &lt;/li&gt;
&lt;li&gt;You can‚Äôt or don‚Äôt want to ask teams to do capacity planning or forecasting. &lt;/li&gt;
&lt;li&gt;You expect compute usage to remain at the committed amount over the commitment period.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#%E2%9E%A4-regional-and-zonal-reserved-instances"&gt;
  &lt;/a&gt;
  ‚û§ Regional and zonal Reserved Instances:
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Regional Reserved Instance&lt;/th&gt;
&lt;th&gt;Zonal Reserved Instance&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Availability Zone flexibility&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;When you purchase a Reserved Instance for a Region&lt;/td&gt;
&lt;td&gt;When you purchase a Reserved Instance for a specific Availability Zone&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Capacity reservation&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Discount applies to instance usage in any availability zone in the specified region&lt;/td&gt;
&lt;td&gt;A zonal Reserved Instance provides a capacity reservation in the specified Availability Zone.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Instance size flexibility&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;The Reserved Instance discount applies to instance usage within the instance family, regardless of size. Only supported on Amazon Linux/Unix Reserved Instances with default tenancy. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/apply_ri.html#ri-normalization-factor"&gt;Instance size flexibility determined by normalization factor.&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;No instance size flexibility: The Reserved Instance discount applies to instance usage for the specified instance type and size only.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;‚û§ Instance size flexibility does not apply to the following Reserved Instances:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;RIs that are purchased for a specific Availability Zone (zonal Reserved Instances) &lt;/li&gt;
&lt;li&gt;RIs with dedicated tenancy &lt;/li&gt;
&lt;li&gt;RIs for Windows Server, Windows Server with SQL Standard, Windows Server with SQL Server Enterprise, Windows Server with SQL Server Web, RHEL, and SUSE Linux Enterprise Server &lt;/li&gt;
&lt;li&gt;RIs for G4 instances.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;‚û§ Maximizing Utilization with Size Flexibility in Regional Reserved Instances:&lt;/strong&gt;&lt;br&gt;
All Regional Linux RIs with shared tenancy apply to all sizes of instances within an instance family and a Region. The only attributes that must be matched are the instance type (ex. m4), tenancy (must be default), and platform (must be Linux). All new and existing Reserved Instances are sized according to a normalization factor based on instance size, as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zaMynI43--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mmmp9be79crxresdeps.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zaMynI43--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mmmp9be79crxresdeps.png" alt="RI 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚û§ Let‚Äôs have some Examples to explain this:&lt;/strong&gt;&lt;br&gt;
1-If you have RI for a c4.8xlarge, it applies to any usage of a Linux c4 instance with shared tenancy in region as: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One c4.8xlarge instance. &lt;/li&gt;
&lt;li&gt;Two c4.4xlarge instance.&lt;/li&gt;
&lt;li&gt;Four c4.2xlarge instances. &lt;/li&gt;
&lt;li&gt;Sixteen c4.large instances.
2-It also includes combinations of instances, a t2.medium has a normalization factor of 2. If you purchase a t2.medium default tenancy Linux/Unix Rin the US East (N. Virginia) Region and you have two running t2.sm.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1bCBqfu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqggb3w6irex21dst1t5.JPG" alt="RI 2"&gt;
3-If you have one t2.large instance in the US East (N. Virginia), the billing benefit is applied to 50% of the usage instance.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_n8rG3Up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phlzihk5tpj5y67bp57l.JPG" alt="RI 3"&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#%E2%9E%A4-normalization-factor-for-dedicated-ec2-instances"&gt;
  &lt;/a&gt;
  ‚û§ Normalization factor for dedicated EC2 instances:
&lt;/h2&gt;

&lt;p&gt;For size inflexible RIs, the normalization factor is always 1. The purpose of it  is to provide an ability to match various instances to each other within a family so that you can exchange one type for another.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚û§ Normalization factor for bare metal instances:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For regional Amazon Linux/Unix Reserved Instances with shared tenancy on bare metal instances, you can benefit from the Reserved Instance savings within the same instance family. &lt;/li&gt;
&lt;li&gt;Also, For regional Amazon Linux/Unix Reserved Instances with shared tenancy on instances in the same family as a bare metal instance. A bare metal instance is the same size as the largest instance within the same family.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x1eZtM7I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/da0d8xr8gpqdp35x03pb.JPG" alt="RI 4"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ex, If you purchase an i3.metal default tenancy Linux/Unix RI in the US East (N. Virginia) Region, the billing benefit can apply as follows: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you have one running i3.16xlarge in your account in that Region, the billing benefit is applied in full to the i3.16xlarge instance (i3.16xlarge normalization factor = 128). &lt;/li&gt;
&lt;li&gt;Or, if you have two running i3.8xlarge instances in your account in that Region, the billing benefit is applied in full to both i3.8xlarge instances (i3.8xlarge normalization factor = 64). &lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#savings-plans"&gt;
  &lt;/a&gt;
  Savings Plans:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Another flexible pricing model that provides savings of up to &lt;code&gt;72%&lt;/code&gt; lower prices on instances usage, regardless of instance family, size, OS, tenancy or AWS Region, and also applies to AWS Fargate and Lambda.&lt;/li&gt;
&lt;li&gt;Savings Plans offer significant savings in exchange for a commitment to use a specific amount of compute power (measured in $/hour) for a one or three-year period.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;‚û§ AWS offers two types of Savings Plans:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;1-Compute Savings Plans:&lt;/strong&gt;&lt;br&gt;
‚Ä¢ Provide the most flexibility and help to reduce your costs by up to &lt;code&gt;66%&lt;/code&gt; regardless of instance family, size, AZ, Region, OS, or tenancy. Ex., you can change from C4 to M5 instances, shift a workload from EU (Ireland) to EU (London), or move a workload from Amazon EC2 to Fargate or Lambda.&lt;br&gt;
&lt;strong&gt;2-EC2 Instance Savings Plans:&lt;/strong&gt;&lt;br&gt;
‚Ä¢ Offers savings up to &lt;code&gt;72%&lt;/code&gt; for commitment to usage of individual instance families in a Region (ex. M5 usage in N. Virginia) with the flexibility to change between instances within a family in that Region, ex. you can move from c5.xlarge running Windows to c5.2xlarge running Linux and benefit from the Savings Plans prices.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#reservation-models-for-other-aws-services"&gt;
  &lt;/a&gt;
  Reservation models for other AWS services:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1-Amazon RDS reserved DB instances:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Three payment options: No Upfront, Partial Upfront, and All Upfront. &lt;/li&gt;
&lt;li&gt;All reserved DB instance types are available for Aurora, MySQL, MariaDB, PostgreSQL, Oracle, and SQL Server database engines. Size-flexible reserved DB instances are available for Amazon Aurora, MariaDB, MySQL, PostgreSQL, and the ‚ÄúBring Your Own License‚Äù (BYOL) edition of the Oracle database engine.
&lt;strong&gt;2-Amazon ElastiCache reserved nodes:&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Gives you the option to make a low, one-time payment for each cache node. In turn, you receive a significant discount on the hourly charge for that node. &lt;/li&gt;
&lt;li&gt;Amazon ElastiCache provides three reserved cache node types (Light Utilization, Medium Utilization, and Heavy Utilization) that enable you to balance the amount you pay up front with your effective hourly price. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3-Amazon Elasticsearch Service Reserved Instances:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ES RIs offer significant discounts, Instances are identical, RIs are just discount applied to On-Demand Instances. &lt;/li&gt;
&lt;li&gt;Amazon ES RIs require one- or three-year terms and have three payment options that affect the discount rate.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;4- Amazon Redshift reserved nodes:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The best choice if you intend to keep an Amazon Redshift cluster running continuously for a prolonged period. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;5-Amazon DynamoDB reservations:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can pay a one-time upfront fee and commit to paying for a minimum usage level at specific hourly rates for the duration of the reserved capacity term.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#reserved-instances-billing"&gt;
  &lt;/a&gt;
  Reserved Instances Billing:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You can pay for your RI upfront, partially upfront, or monthly, depending on the payment option specified.&lt;/li&gt;
&lt;li&gt;When Reserved Instances expire, you are charged On-Demand Instance rate.&lt;/li&gt;
&lt;li&gt;You can set up a billing alert to warn you when your bill exceeds a threshold that you define.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;‚û§ Usage Billing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reservations are billed for every clock-hour during the term selected, whether an instance is running or not.&lt;/li&gt;
&lt;li&gt;A Reserved Instance billing benefit can be applied to a running instance on a per-second basis. Per second billing is available for instances using an open-source Linux distribution, such as Amazon Linux and Ubuntu. &lt;/li&gt;
&lt;li&gt;A RI billing benefit can apply to a max of 3600 sec (one hour) of instance usage per clock-hour. You can run multiple instances concurrently, but can only receive benefit of the RI discount for a total of 3600 seconds per clock-hour.&lt;/li&gt;
&lt;li&gt;Example : if you purchase one m4.xlarge RI and run four m4.xlarge instances concurrently for one hour, one instance is charged at one hour of RI usage and the other three instances are charged at three hours of On-Demand Instance usage.&lt;/li&gt;
&lt;li&gt;However, if you purchase one m4.xlarge RI and run four m4.xlarge instances for 15 minutes (900 seconds) each within the same hour, the total running time for the instances is one hour, which results in one hour of RI usage and 0 hours of On-Demand Instance usage.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rWkfB7_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ox3bpx0219o6c3dgbnqf.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rWkfB7_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ox3bpx0219o6c3dgbnqf.JPG" alt="RI 5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚û§ Consolidated Billing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Organizations includes consolidated billing and account management capabilities that enable you to better meet the budgetary, security, and compliance needs of your business.&lt;/li&gt;
&lt;li&gt;The pricing benefits of Reserved Instances are shared when the purchasing account is billed under a consolidated billing payer account. The instance usage across all member accounts is aggregated in the payer account every month.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;1-Reserved Instances:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS also offers discounted hourly rates in exchange for an upfront fee and term contract. Services such as Amazon EC2 and Amazon RDS use this approach to sell reserved capacity for hourly use of Reserved Instances.&lt;/li&gt;
&lt;li&gt;When you reserve capacity with Reserved Instances, your hourly usage is calculated at a discounted rate for instances of the same usage type in the same Availability Zone (AZ).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2-Blended rates:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A line item for the blended rate of that instance is displayed on the bill of any member account that is running an instance that matches the specifications of a reservation in the organization. &lt;/li&gt;
&lt;li&gt;The payer of an organization can turn off Reserved Instance sharing for member accounts in that organization via the AWS Billing Preferences. This means that RIs are not shared between that member account and other member accounts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How discounts are applied:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The application of Amazon EC2 Reserved Instances is based on instance attributes, including the following: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;1- Instance type:&lt;/strong&gt;  Instance types comprise varying combinations of CPU, memory, storage, and networking capacity This gives you the flexibility to choose the mix of resources for your applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2-Platform:&lt;/strong&gt; You can purchase RIs running on Linux, Unix, SUSE or Red Hat Linux, Windows Server, or MSSQL Server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3-Tenancy:&lt;/strong&gt; Reserved Instances can be default tenancy or dedicated tenancy. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4- Regional or zonal:&lt;/strong&gt; As discussed before.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#maximizing-the-value-of-reservations"&gt;
  &lt;/a&gt;
  Maximizing the value of reservations
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;‚û§ Measure success:&lt;/strong&gt;&lt;br&gt;
‚Ä¢ Means measuring your reservation coverage and utilization.&lt;br&gt;
‚Ä¢ Establish a standardized review cadence in which you focus on the following questions: &lt;br&gt;
1.Do you need to modify any of our existing reservations to increase utilization? &lt;br&gt;
2.Are any currently utilized reservations expiring? &lt;br&gt;
3.Do you need to purchase any reservations to increase your coverage?&lt;br&gt;
&lt;strong&gt;‚û§ Maximize discounts by standardizing instance type:&lt;/strong&gt;&lt;br&gt;
‚Ä¢ By standardizing the instance types that your organization uses, you can ensure that deployments match the characteristics of your reservations to maximize your discounts.&lt;br&gt;
‚Ä¢ Three services that can help you standardize your instances are:&lt;br&gt;
&lt;strong&gt;1-AWS Config:&lt;/strong&gt; to monitors and records your resource config and lets you automate the evaluation of recorded configurations against desired configurations.&lt;br&gt;
&lt;strong&gt;2-AWS Service Catalog:&lt;/strong&gt; to create and manage catalogs of IT services that are approved for use on AWS.&lt;br&gt;
&lt;strong&gt;3-AWS Compute Optimizer:&lt;/strong&gt; recommends optimal AWS compute resources for your workloads to reduce costs and improve performance by using Machine Learning algorithms to analyze historical utilization metrics.&lt;br&gt;
&lt;strong&gt;‚û§ Reservation management techniques:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LOjEwwQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bq65rh0i72h33g6ezsa.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LOjEwwQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bq65rh0i72h33g6ezsa.JPG" alt="RI 6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚û§ Reserved Instance Marketplace:&lt;/strong&gt;&lt;br&gt;
‚Ä¢ supports the sale of third-party and AWS customers' unused Standard RIs, which vary in lengths and pricing options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚û§ AWS Cost Explorer:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lets you visualize, understand, and manage your AWS costs and usage over time.&lt;/li&gt;
&lt;li&gt;Provides the following prebuilt reports:
&lt;em&gt;1-EC2 RI Utilization %&lt;/em&gt; offers relevant data to identify and act on opportunities to increase your RI usage efficiency.
&lt;em&gt;2-EC2 RI Coverage %&lt;/em&gt; shows how much of your overall instance usage is covered by Reserved Instances.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;‚û§ AWS Cost and Usage Report:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;contains the most comprehensive set of data about your AWS costs and usage, including additional information regarding AWS services, pricing, and reservations.&lt;/li&gt;
&lt;li&gt;It can help you Calculate savings and Track the allocation of Reserved Instance discounts.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TtI7KnzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55efkt6xkcg4l60izbrr.JPG" alt="RI 6"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;‚û§ AWS Trusted Advisor:&lt;/strong&gt;&lt;br&gt;
Online resource to help you reduce cost, increase performance, and improve security by optimizing your AWS environment. AWS Trusted Advisor provides real-time guidance to help you provision your resources following AWS best practices.&lt;/p&gt;




&lt;p&gt;Original Paper &lt;a href="https://d1.awsstatic.com/whitepapers/cost-optimization-reservation-models.pdf?did=wp_card&amp;amp;trk=wp_card"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>aws</category>
      <category>devops</category>
      <category>cloudskills</category>
    </item>
  </channel>
</rss>
