<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How would you refactor this JS function?</title>
      <author>Lars Grammel</author>
      <pubDate>Mon, 18 Oct 2021 12:45:01 +0000</pubDate>
      <link>https://dev.to/p42/how-would-you-refactor-this-js-function-4n71</link>
      <guid>https://dev.to/p42/how-would-you-refactor-this-js-function-4n71</guid>
      <description>&lt;p&gt;During the weekend, I found the following small JS function in a &lt;a href="https://dev.to/luigizaccagnini/refactoring-code-in-octo-3397"&gt;blog post&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lineChecker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isFirstLine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;isFirstLine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;h1&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/h1&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isFirstLine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/p&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br /&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;``&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I refactored it and was thinking that it could be an excellent beginner-level refactoring kata.&lt;/p&gt;

&lt;p&gt;How would you refactor it?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>javascript</category>
      <category>refactoring</category>
      <category>webdev</category>
    </item>
    <item>
      <title>You are reading environment variables the wrong way in Next.js</title>
      <author>Austin Shelby</author>
      <pubDate>Mon, 18 Oct 2021 12:38:54 +0000</pubDate>
      <link>https://dev.to/austinshelby/you-are-reading-environment-variables-the-wrong-way-in-nextjs-45da</link>
      <guid>https://dev.to/austinshelby/you-are-reading-environment-variables-the-wrong-way-in-nextjs-45da</guid>
      <description>&lt;p&gt;If you have ever written code that looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://www.example.com/api/blog?api_key=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Then you are doing it wrong!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here's why this is a bad idea.&lt;/p&gt;

&lt;p&gt;In a scenario where you build the application without having set the &lt;code&gt;API_KEY&lt;/code&gt; environment variable the application will use &lt;code&gt;undefined&lt;/code&gt; instead.&lt;/p&gt;

&lt;p&gt;Obviously &lt;code&gt;undefined&lt;/code&gt; is not the correct api key which will make any request using that URL fail.&lt;/p&gt;

&lt;p&gt;The problem here is that when the error surfaces, the message will be very misleading and look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Error: Unauthorized
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this error will only show up when you try to use the url to fetch the blog posts.&lt;/p&gt;

&lt;p&gt;If fetching the blog posts is an essential feature, &lt;strong&gt;the application should not have even compiled without the api key being available&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Naively expecting the &lt;code&gt;API_KEY&lt;/code&gt; environment variable to exist will hide the bug and make this problem a pain to debug due to the misleading error message.&lt;/p&gt;

&lt;p&gt;To fix this issue we need two things.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When a problem exists that causes the application to not function, the application needs to fail immediately and visibly.&lt;/li&gt;
&lt;li&gt;A meaningful abstraction to encapsulate the loading of environment variables.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-to-load-environment-variables-in-nextjs"&gt;
  &lt;/a&gt;
  How to load environment variables in Next.js
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;This works with any node.js application. Next.js just makes this easier, as it comes with a lot of necessary boilerplate code&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let me show you how to use environment variables in Next.js correctly, and then explain why this works.&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;.env.local&lt;/code&gt; file. Here you will put all of your environment variables you want to use on your local development environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;API_KEY=secret
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next.js automatically adds this file to &lt;code&gt;.gitignore&lt;/code&gt; so you don't have to worry about it ending up in your version control system.&lt;/p&gt;

&lt;p&gt;If you are using any other framework than Next.js you need to use a package like &lt;a href="https://www.npmjs.com/package/dotenv"&gt;dotenv&lt;/a&gt; to read the environment variables from a file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now to the bread and butter&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;config.ts&lt;/code&gt; file with this code to read the environment variables into your config.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getEnvironmentVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;environmentVariable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;unvalidatedEnvironmentVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;environmentVariable&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;unvalidatedEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="s2"&gt;`Couldn't find environment variable: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;environmentVariable&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;unvalidatedEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;getEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;API_KEY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And change code that we wrote earlier into this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./config&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://www.example.com/api/blog?api_key=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#why-this-is-the-correct-way-to-load-environment-variables"&gt;
  &lt;/a&gt;
  Why this is the correct way to load environment variables
&lt;/h2&gt;

&lt;p&gt;In a case where you forgot to add the environment variable &lt;code&gt;API_KEY&lt;/code&gt; the application won't even build/compile, and it will throw an error like this: &lt;code&gt;Couldn't find environment variable: API_KEY&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our application now fails immediately and visibly.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is called &lt;em&gt;failing fast&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It is part of the clean code principles, which you can read more about here: &lt;a href="https://www.martinfowler.com/ieeeSoftware/failFast.pdf"&gt;https://www.martinfowler.com/ieeeSoftware/failFast.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Because we are using TypeScript, we can be 100% sure that all the values in the config exist.&lt;/p&gt;

&lt;p&gt;Additionally, TypeScript helps us avoid small bugs.&lt;/p&gt;

&lt;p&gt;If we make a typo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://www.example.com/api/blog?api_key=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiKeu&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;TypeScript will give us the following error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Property 'apiKeu' does not exist on type '{ apiKey: string; }'. Did you mean 'apiKey'?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;How cool is that!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It's like coding with superpowers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#encapsulating-logic"&gt;
  &lt;/a&gt;
  Encapsulating logic
&lt;/h2&gt;

&lt;p&gt;Let's look at the example we started with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://www.example.com/api/blog?api_key=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do you notice that &lt;code&gt;process.env&lt;/code&gt; part there?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why should the functionality of fetching blog posts know anything about the user environment the application is currently running in?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well it shouldn't.&lt;/p&gt;

&lt;p&gt;The logic of fetching blog posts doesn't care where it gets the api key from. If it comes from the user environment, text file, or an API doesn't make any difference to it.&lt;/p&gt;

&lt;p&gt;Therefore, it shouldn't rely on &lt;code&gt;process.env&lt;/code&gt; or any other low-level abstractions.&lt;/p&gt;

&lt;p&gt;Creating a config for the sole purpose of reading environment variables encapsulates this functionality and creates a meaningful high-level abstraction.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A config&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Thanks to this, we can change the way we get the config values (like the api key) without touching the blog post functionality at all!&lt;/p&gt;

&lt;p&gt;Another very hidden benefit is that unit testing just became ten times easier. Instead of playing around with our user environment, we can just mock the config with the values we want to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;While this might seem pedantic, keeping these small things in your mind while writing code will make you a better software engineer.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>WEB DEVELOPMENT</title>
      <author>Rajat Raj</author>
      <pubDate>Mon, 18 Oct 2021 12:16:18 +0000</pubDate>
      <link>https://dev.to/rajatrajblog/web-development-17if</link>
      <guid>https://dev.to/rajatrajblog/web-development-17if</guid>
      <description>&lt;p&gt;&lt;em&gt;Hi, there&lt;/em&gt;&lt;br&gt;
Today we are in that world where different technologies are emerging which is helpful for our daily life. From these different categories of technologies &lt;strong&gt;WEB DEVELOPMENT&lt;/strong&gt; is one of them.&lt;/p&gt;

&lt;p&gt;So, here I am trying to define and share my path to become a web developer, hope this will helpful for you all.&lt;/p&gt;

&lt;p&gt;Let's Start,&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-start-with-a-most-important-question-that-what-is-web-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Let's start with a most important question that what is web development.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Web development is the work involved in developing a Web site for the Internet or an intranet. Web development can range from developing a simple single Web page with plain text and some images, static page to complex web pages, web applications, electronic businesses, and even social media websites.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-web-developer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Types of Web Developer&lt;/strong&gt;
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#1frontend-developer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1&lt;/strong&gt;.Front-End Developer
&lt;/h4&gt;

&lt;p&gt;A front end developer has one general responsibility: to ensure that website visitors can easily interact with the page. They do this through the combination of design, technology and programming to code a website's appearance, as well as taking care of debugging.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2backend-developer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2&lt;/strong&gt;.Back-End Developer
&lt;/h4&gt;

&lt;p&gt;Backend Development is also known as server-side development. It is everything that the users don't see and contains behind-the-scenes activities that occur when performing any action on a website. It focuses primarily on databases, backend logic, APIs, and Servers. Thus, it is known as the backend.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3full-stack-developer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3&lt;/strong&gt;.Full Stack Developer
&lt;/h4&gt;

&lt;p&gt;A full stack web developer is a person who can develop both client and server software. In addition to mastering HTML and CSS, he/she also knows how to: Program a browser (like using JavaScript, jQuery, Angular, or Vue) Program a server (like using PHP, ASP, Python, or Node).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HNCPTpWs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xw2gul3m1bkmk6aq0dtl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HNCPTpWs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xw2gul3m1bkmk6aq0dtl.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So&lt;/em&gt;, First make a table depending on you that in how many days you can complete course.&lt;br&gt;
There are many different courses on Internet through which you can learn web development.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#1coursera"&gt;
  &lt;/a&gt;
  1.&lt;em&gt;Coursera&lt;/em&gt;
&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;WEB DESIGN FOR EVERYBODY: BASICS OF WEB DEVELOPMENT AND CODING SPECIALIZATION&lt;/em&gt;&lt;br&gt;
This is really a amazing course for beginner. I am sure it will really help you all to develop a basics in web development. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Nuevo en python</title>
      <author>David Cordero Rosales</author>
      <pubDate>Mon, 18 Oct 2021 12:13:05 +0000</pubDate>
      <link>https://dev.to/webdesigncuba/nuevo-en-python-12pl</link>
      <guid>https://dev.to/webdesigncuba/nuevo-en-python-12pl</guid>
      <description>&lt;p&gt;Buenos días, soy nuevo en. Python y estoy aprendiendo sobre este maravilloso lenguaje y quisiera conocer donde encontrar buenos tutoriales y pcursos y recursos para avanzar en este. &lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>JavaScript String Length property explained</title>
      <author>hrishikesh1990</author>
      <pubDate>Mon, 18 Oct 2021 12:06:19 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/javascript-string-length-property-explained-56g6</link>
      <guid>https://dev.to/hrishikesh1990/javascript-string-length-property-explained-56g6</guid>
      <description>&lt;p&gt;In this short tutorial, we learn about the JavaScript string length properly. We also look at how JavaScript finds the length of a particular string.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-javascript-startswith"&gt;
  &lt;/a&gt;
  Table of Contents - JavaScript startsWith():
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#javascript-string-length-property"&gt;JavaScript string length property&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-you-find-the-length-of-a-string-in-javascript"&gt;How do you find the length of a string in JavaScript?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#javascript-string-length-property"&gt;
  &lt;/a&gt;
  JavaScript String Length Property:
&lt;/h2&gt;

&lt;p&gt;The JavaScript string property is used to return the length of a string in JavaScript. Although this property is commonly used with other JavaScript methods it is important to remember that length in itself is not a method.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-javascript-return-the-length-of-a-string"&gt;
  &lt;/a&gt;
  How does JavaScript return the length of a string?
&lt;/h3&gt;

&lt;p&gt;JavaScript does not return the length but rather returns the code units occupied by the string. It uses the UTF-16 string formatting methods to store characters. This essentially means that the characters in your string are encoded into a 16-bit long binary number before being stored.&lt;/p&gt;

&lt;p&gt;So whenever the .length property is involved, JavaScript looks up and returns the number of code units occupied by the string. This is why JavaScript returns 2 when the length property is called upon by certain characters such as emojis, etc. It does this because these characters take up 2 code units.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-find-the-length-of-a-string-in-javascript"&gt;
  &lt;/a&gt;
  How do you find the length of a string in JavaScript?
&lt;/h2&gt;

&lt;p&gt;The length of a string in JavaScript can be found using the .length property. Since .length is a property it must be called through an instance of a string class.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax:
&lt;/h3&gt;

&lt;p&gt;The syntax to use the length property is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, “string” refers to the string whose length you are looking to return.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Join our community of freelance developers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a common problem while using a switch case, this can be solved by using new blocks for each case. However, this is not a problem while using the var keyword. The below code snippet should give an idea of the case:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;// 4&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code snippet returns the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The length of the string is 42.&lt;/p&gt;

&lt;p&gt;Earlier we had methods through which the length property would return a higher number in the case of a few characters. We have an example of the same below.&lt;/p&gt;

&lt;p&gt;Here we have involved the length property upon a string containing an emoji:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;emoji&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;😀&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;emoji&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code snippet returns the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see it returns 2, this is because this emoji takes up 2 code units.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts:
&lt;/h2&gt;

&lt;p&gt;Once you are done practicing I would recommend you look up other string properties. For the few of you who are curious how UTF-16 works you can use this link to read more.&lt;/p&gt;

&lt;p&gt;Apart from this, in case you haven’t already figured it out - The JavaScript string length would return 0 when invoked on an empty string.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Best Data Science Books in 2021</title>
      <author>cloudytech147</author>
      <pubDate>Mon, 18 Oct 2021 11:56:28 +0000</pubDate>
      <link>https://dev.to/cloudytech147/best-data-science-books-in-2021-3h8f</link>
      <guid>https://dev.to/cloudytech147/best-data-science-books-in-2021-3h8f</guid>
      <description>&lt;p&gt;To give you the best data science books, we did the intensive examination, looked over numerous versions, and tracked down a couple of fascinating and instructive books that cover every one of the fundamental data science ideas finally.&lt;/p&gt;

&lt;p&gt;In this &lt;a href="https://www.techgeekbuzz.com/data-science-books/"&gt;books on data science&lt;/a&gt; article, we will share some critical provisions of what we consider as the main 10 data science books. Go ahead and share the name of the book(s) you preferred and are not on the rundown in the remarks area beneath. We will be glad to audit and incorporate it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5RO3Nvum--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ou83yykvktiyz2npzk5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5RO3Nvum--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ou83yykvktiyz2npzk5.png" alt="data science books"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Data Science from Scratch - &lt;a href="https://www.amazon.com/Data-Science-Scratch-Principles-Python/dp/1492041130/"&gt;Buy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Data Science for Business - &lt;a href="https://www.amazon.com/dp/1449361323"&gt;Buy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Data Smart — Using Data Science to transform information into insight - &lt;a href="https://www.amazon.com/Data-Smart-Science-Transform-Information/dp/111866146X"&gt;Buy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Python Data Analytics - &lt;a href="https://www.amazon.com/python-data-analytics-introduction-beginners-ebook/dp/B0824VM38C/"&gt;Buy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;R in Action - &lt;a href="https://www.amazon.com/Action-Data-Analysis-Graphics/dp/1617291382/"&gt;Buy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Data Science for Dummies - &lt;a href="https://www.amazon.com/Data-Science-Dummies-2nd-Computers/dp/1119327636/"&gt;Buy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Data Science for the Layman - &lt;a href="https://www.amazon.com/Numsense-Data-Science-Layman-Added/dp/9811110689/"&gt;Buy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Data Science and Big Data Analytics - &lt;a href="https://www.amazon.com/Data-Science-Big-Analytics-Discovering/dp/111887613X/"&gt;Buy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Designing Data-Intensive Applications - &lt;a href="https://www.amazon.com/Designing-Data-Intensive-Applications-Reliable-Maintainable/dp/1449373321/"&gt;Buy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Pattern recognition and Machine Learning - &lt;a href="https://www.amazon.com/Pattern-Recognition-Learning-Information-Statistics/dp/0387310738/"&gt;Buy&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As far as we can tell, instead of hopping into the fine specialized subtleties of each subtopic in the principal go itself, it is ideal to comprehend why data science is a decent decision and how the entire thing functions from both specialized and business points of view. The general picture will assist you with picking what's generally significant and where your advantage lies.&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>books</category>
      <category>advanced</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Use Images as Background with HTML &amp; CSS</title>
      <author>Binate Noor</author>
      <pubDate>Mon, 18 Oct 2021 11:56:10 +0000</pubDate>
      <link>https://dev.to/binatenoors/use-images-as-background-with-html-css-1f3c</link>
      <guid>https://dev.to/binatenoors/use-images-as-background-with-html-css-1f3c</guid>
      <description>&lt;p&gt;Adding a Background Image in HTML is one of the most common tasks when you are working on Web Designing.&lt;br&gt;
As a new web designer, one very skill you'll need to master is using background images.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-following-pointers-will-be-covered-in-this"&gt;
  &lt;/a&gt;
  The following pointers will be covered in this:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Background Image in HTML&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; CSS background-image Property&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Background Cover&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Two Background Images&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Background Repeat&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Using Class&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Linear-gradient&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Three Color Gradient&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; Repeating Linear Gradient&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; Radial Gradient&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10.&lt;/strong&gt; Three Color Radial Gradient&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11.&lt;/strong&gt; Repeating Radial Gradient&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12.&lt;/strong&gt; Creating "Hero" image with CSS&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#background-image-in-html"&gt;
  &lt;/a&gt;
  Background Image in HTML:
&lt;/h2&gt;

&lt;p&gt;There are various ways in which images can be added to a web page to make it look captivating &amp;amp; appealing. One of such ways is adding a background image. In this blog, I can add background images to a webpage using HTML &amp;amp; CSS. The most common &amp;amp; simple way to add a background image is using the background image attribute inside the &lt;/p&gt; tag.&lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div style="background-image: url('binateNoor.jpg')";&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#css-backgroundimage-property"&gt;
  &lt;/a&gt;
  CSS background-image Property:
&lt;/h2&gt;

&lt;p&gt;I will be defining the CSS code inside the "style" tag. I will also look at how to target div tags and class using CSS. In the below example, I am specifying the background-image &amp;amp; background-color CSS property which will set the background image &amp;amp; background property for the HTML body respectively.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt; 
body {
  background-image: url("bg1.jpg");
  background-color: #cccccc;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#background-cover"&gt;
  &lt;/a&gt;
  Background Cover:
&lt;/h2&gt;

&lt;p&gt;If you want the background image to cover the entire element, you can set the background-size property to cover.&lt;/p&gt;

&lt;p&gt;Also, to make sure the entire element is always covered, set the background-attachment property to fixed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
 body {
   background-image: url('binateNoor.jpg');
   background-repeat: no repeat;
   background-attachement: fixed;
   background-size: cover;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-background-images"&gt;
  &lt;/a&gt;
  2 Background Images:
&lt;/h2&gt;

&lt;p&gt;You can also go ahead and add two background images for the "body" element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body {
  background-image: url("bg3.png"), url("bg1.jpg");
  background-color: #cccccc;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Notes:&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The background image by default is added to the left corner &amp;amp; is repeated both ways, i.e. horizontally &amp;amp; vertically.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
The reason why it is preferred to keep a background color is that if the image is unavailable, so the background-color property will be used and the same will be displayed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now before understanding how I can use different CSS property values, let’s look at the list of CSS property values associated with the background image.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;url:&lt;/strong&gt; URL to the background image. In case of more than one image, comma-separated list needs are provided.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;linear-gradient():&lt;/strong&gt; Sets a linear gradient as the background image. Needs at least 2 colors.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;radial-gradient():&lt;/strong&gt; Sets a radial gradient as the background image. Needs at least 2 colors.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;repeating-linear-gradient():&lt;/strong&gt; Repeats a linear gradient&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;repeating-radial-gradient():&lt;/strong&gt; Repeats a radial gradient&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;initial:&lt;/strong&gt; Sets the property to its default value&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;inherit:&lt;/strong&gt; Inherits this property from its parent element&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#background-repeat"&gt;
  &lt;/a&gt;
  Background Repeat:
&lt;/h2&gt;

&lt;p&gt;Here I am trying to add a couple of background images where the first image will appear only one time and the second image will be repeated. We are using background-repeat to do so.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
body {
  background-image: url("bg2.jpg"), url("bg3.png");
  background-repeat: no-repeat, repeat;
  background-color: #cccccc;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-class"&gt;
  &lt;/a&gt;
  Using Class:
&lt;/h2&gt;

&lt;p&gt;In this example, I am creating a bg-image with various background properties such as image, color, position &amp;amp; repeat. I am targeting the bg-image class to apply the background properties to the webpage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  .bg-image {
     background-image: url("bg2.jpg");
     background-color: #cccccc;
     height: 500px;
     background-position: center;
     background-repeat: no-repeat;
     background-size: cover;
     position: relative;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lineargradient"&gt;
  &lt;/a&gt;
  Linear-gradient:
&lt;/h2&gt;

&lt;p&gt;Here I am creating a linear gradient using two colors(i.e. red &amp;amp; yellow) and setting it as the background image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt; 
#gradient {
  height: 200px;
  background-color: #cccccc;
  background-image: linear-gradient(red, yellow);
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-color-gradient"&gt;
  &lt;/a&gt;
  3 Color Gradient:
&lt;/h2&gt;

&lt;p&gt;Here I am creating a linear gradient using three colors(i.e. red, blue &amp;amp; green) and setting it as the background image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  #gradient1 {
     height: 300px;
     background-color: #cccccc;
     background-image: linear-gradient(red, blue, green);
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#repeating-linear-gradient"&gt;
  &lt;/a&gt;
  Repeating Linear Gradient:
&lt;/h2&gt;

&lt;p&gt;In this example, I am repeating the linear gradient using repeating-linear-gradient() functions and set it as the background image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  #gradient {
     height: 300px;
     background-color: #cccccc;
     background-image: repeating-linear-gradient(red, blue 20%, green 30%);
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#radial-gradient"&gt;
  &lt;/a&gt;
  Radial Gradient:
&lt;/h2&gt;

&lt;p&gt;Here I am creating a radial gradient using two colors(i.e. red &amp;amp; yellow) and setting it as the background image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  #gradient {
     height: 300px;
     background-color: #cccccc;
     background-image: radial-gradient(green, red);
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-color-radial-gradient"&gt;
  &lt;/a&gt;
  3 Color Radial Gradient:
&lt;/h2&gt;

&lt;p&gt;Here I am creating a radial gradient using three colors(i.e. red, blue &amp;amp; green) and setting it as the background image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  #gradient {
     height: 500px;
     background-color: #cccccc;
     background-image: radial-gradient(red, blue, green);
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#repeating-radial-gradient"&gt;
  &lt;/a&gt;
  Repeating Radial Gradient:
&lt;/h2&gt;

&lt;p&gt;In this example, I am repeating the radial gradient using repeating-radial-gradient() functions and set it as the background image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
  #gradient {
     height: 200px;
     background-color: #cccccc;
     background-image: repeating-radial-gradient(red, blue 10%, green 20%);
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-hero-image-with-css"&gt;
  &lt;/a&gt;
  Creating "Hero" image with CSS:
&lt;/h2&gt;

&lt;p&gt;Creating "Hero" image with CSS&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.hero-image {
   background-image: URL("binatenoor.jpg");
   background-color: #def345;
   height: 500px;
   background-position: center;
   background-repeat: no-repeat;
  background-size: cover;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now after executing the above snippets you would have understood how to insert a background image in a webpage using &lt;strong&gt;HTML &amp;amp; CSS&lt;/strong&gt;. I hope this blog is informative and added value to you. &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Sources</title>
      <author>ritaCosta93</author>
      <pubDate>Mon, 18 Oct 2021 11:51:54 +0000</pubDate>
      <link>https://dev.to/ritacosta/sources-48d2</link>
      <guid>https://dev.to/ritacosta/sources-48d2</guid>
      <description>&lt;h1&gt;
  &lt;a href="#sources"&gt;
  &lt;/a&gt;
  Sources
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#videos"&gt;
  &lt;/a&gt;
  📹 Videos
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Creating a Classes Diagram from a "Text Problem"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=FLtqAi7WNBY"&gt;Software Design Tutorial #1 - Software Engineering &amp;amp; Software Architecture&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mocking the Classes Diagram into code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=6thjSbJcoUc"&gt;Software Design Tutorial #2 - Implementing Our Design&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Software Architecture Introduction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=8UlLgOf20Ho"&gt;Getting the Basics - Software Architecture Introduction (part 1)&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scaling Distribuited Systems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=gxfERVP18-g"&gt;Scaling Distributed Systems - Software Architecture Introduction (part 2)&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Distributed Cache Explained&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=QBMTGngjWdU"&gt;Distributed Cache explained - Software Architecture Introduction (part 3)&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is Event Driven Architecture&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=DQ5Cbt8DQbM"&gt;What is Event Driven Architecture? (EDA - part 1)&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Saga Pattern in Microservices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=C0rGwyJkDTU"&gt;The Saga Pattern in Microservices (EDA - part 2)&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is Event Sourcing and CQRS?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=i2eVTk2Fb40"&gt;What is Event Sourcing and CQRS? (EDA - part 3)&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Many Meanings of Event-Driven Architecture • Martin Fowler • GOTO 2017&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=STKCRSUsyP0"&gt;The Many Meanings of Event-Driven Architecture * Martin Fowler * GOTO 2017&lt;/a&gt;&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>software</category>
      <category>theory</category>
    </item>
    <item>
      <title>Day 10 of 100 Days of Code &amp; Scrum: Working on the Scrum Guide!</title>
      <author>Rammina</author>
      <pubDate>Mon, 18 Oct 2021 11:51:01 +0000</pubDate>
      <link>https://dev.to/rammina/day-9-of-100-days-of-code-scrum-working-on-the-scrum-guide-24m2</link>
      <guid>https://dev.to/rammina/day-9-of-100-days-of-code-scrum-working-on-the-scrum-guide-24m2</guid>
      <description>&lt;p&gt;&lt;small&gt;Image by &lt;a href="https://pixabay.com/users/mohamed_hassan-5229782/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=3213924"&gt;mohamed Hassan&lt;/a&gt; from &lt;a href="https://pixabay.com/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=3213924"&gt;Pixabay&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Good morning, everyone!&lt;/p&gt;

&lt;p&gt;It's Monday again, the day that a lot of people dread so much. But it's also the best chance to kickstart our productivity for the week!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I established my &lt;code&gt;Sprint Goals&lt;/code&gt; for the week, and it focuses on &lt;strong&gt;Scrum&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I was working on writing the introductory Scrum guide that I'm planning to publish before the end of this month.&lt;/li&gt;
&lt;li&gt;also was studying more about the principles of Scrum, where it is best applied, and where it shouldn't be.&lt;/li&gt;
&lt;li&gt;read up more into how Scrum should be utilized and how many businesses make mistakes when applying the framework.&lt;/li&gt;
&lt;li&gt;looked into how the members of a Scrum Team function individually as well as their interactions with the others.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;review concepts I've learned last week.&lt;/li&gt;
&lt;li&gt;look deeper into how GraphQL differs from REST API, and which scenarios one should be used over the other.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope everyone's week started out great!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FTNwuWml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4hmkv91xyeuzh2zlos8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FTNwuWml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4hmkv91xyeuzh2zlos8.jpg" alt="John Cena salute"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.howtographql.com/"&gt;The Fullstack Tutorial for GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.apollographql.com/docs/"&gt;Apollo Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://medium.com/chingu/a-short-introduction-to-the-scrum-methodology-7a23431b9f17"&gt;A Short Introduction to the Scrum Framework by Jim Medlock&lt;/a&gt; - A well-written introduction to the Scrum framework.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to run a web server using Java in 2022</title>
      <author>Daniel Persson</author>
      <pubDate>Mon, 18 Oct 2021 11:42:30 +0000</pubDate>
      <link>https://dev.to/kalaspuffar/how-to-run-a-web-server-using-java-in-2022-53g2</link>
      <guid>https://dev.to/kalaspuffar/how-to-run-a-web-server-using-java-in-2022-53g2</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Gel8Q_MO3rI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;We will talk about how to start a web server using Java with the release of JDK 18 in Marsh of 2022. Java has not had an easy way to start a web server but there might be a change coming.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>A problem with a Python function to modify the information in the database</title>
      <author>Hussein Ouda</author>
      <pubDate>Mon, 18 Oct 2021 11:41:07 +0000</pubDate>
      <link>https://dev.to/hussein_ouda/a-problem-with-a-python-function-to-modify-the-information-in-the-database-3cpi</link>
      <guid>https://dev.to/hussein_ouda/a-problem-with-a-python-function-to-modify-the-information-in-the-database-3cpi</guid>
      <description>&lt;p&gt;I wrote a Python function to modify the data and information entered in the database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def update(self):
        con = pymysql.connect(
            host = 'localhost',
            user = 'root',
            password = '',
            database = 'employ')
        cur = con.cursor()
        cur.execute("update employees set family_members=%s, social_status=%s, gender=%s, date_birth=%s, id_number=%s, mail=%s, name=%s where id=%s",(
                    self.family_members_var.get(),
                    self.social_status_var.get(),
                    self.gender_var.get(),
                    self.date_birth_var.get(),
                    self.id_number_var.get(),
                    self.mail_var.get(),
                    self.name_var.get(),
                    self.id_var.get()
                    ))
        con.commit()
        self.fetch_all()
        self.clear()
        con.close()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I got the following error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please Help&lt;/p&gt;

</description>
      <category>python</category>
      <category>database</category>
      <category>mysql</category>
    </item>
    <item>
      <title>Connecting to Multiple Channels with Agora on React-Native</title>
      <author>Ekaansh Arora</author>
      <pubDate>Mon, 18 Oct 2021 11:33:57 +0000</pubDate>
      <link>https://dev.to/ekaansharora/connecting-to-multiple-channels-with-agora-on-react-native-3hg8</link>
      <guid>https://dev.to/ekaansharora/connecting-to-multiple-channels-with-agora-on-react-native-3hg8</guid>
      <description>&lt;p&gt;Since the release of v3.0.0 of Agora’s SDK for React-Native users can now join an unlimited number of channels at the same time. But you can publish your own camera feed to only one channel at a time.&lt;/p&gt;

&lt;p&gt;This ability can be really handy in the case of multiple breakout rooms, where you can both send and receive video from a primary room while also receiving videos from secondary rooms.&lt;/p&gt;

&lt;p&gt;We’ll be using the &lt;a href="https://www.npmjs.com/package/@zhigang1992/react-native-agora"&gt;Agora RTC SDK for React Native&lt;/a&gt; for our example.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-diving-into-how-it-works-lets-look-at-a-few-key-points"&gt;
  &lt;/a&gt;
  Before diving into how it works, let’s look at a few key points
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  We’ll use the SDK to connect to the first channel and join a video call normally. We’ll be streaming our video as well as receiving video from other users on the channel.&lt;/li&gt;
&lt;li&gt;  Next, we’ll join a second channel to receive video streams from all the users on that channel. Note that users on channel 2 will not be able to receive our video.&lt;/li&gt;
&lt;li&gt;  The two channels are separate: users on channel 1 and channel 2 don’t see each other. We can extend this functionality to join as many channels as required.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#structure-of-our-example"&gt;
  &lt;/a&gt;
  Structure of our example
&lt;/h1&gt;

&lt;p&gt;This is the structure of the application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── android  
├── components  
│ └── Permission.ts
│ └── Style.ts  
├── ios  
├── App.tsx  
.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#download-the-source"&gt;
  &lt;/a&gt;
  Download the source
&lt;/h1&gt;

&lt;p&gt;If you want to jump to the code and try it out for yourself, you can look at the readme for steps on how to run the app. The code is open source and available on &lt;a href="https://github.com/EkaanshArora/Agora-RN-Multi-Channel"&gt;GitHub&lt;/a&gt;. The app uses channel-1 and channel-2 as the channel names.&lt;/p&gt;

&lt;p&gt;When you run the app, you’ll see two buttons: one to join and one to end the call. When you click start call, you should see your video in the top row, which contains videos from channel 1. The bottom row contains videos from channel 2.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This guide does not implement token authentication which is recommended for all RTE apps running in production environments. For more information about token based authentication within the Agora platform please refer to this guide: &lt;a href="https://docs.agora.io/en/Video/token?platform=All%20Platforms"&gt;https://docs.agora.io/en/Video/token?platform=All%20Platforms&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;
  &lt;a href="#how-the-app-works"&gt;
  &lt;/a&gt;
  How the App Works
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#apptsx"&gt;
  &lt;/a&gt;
  App.tsx
&lt;/h2&gt;

&lt;p&gt;App.tsx will be the entry point into the app. We’ll have all our code in this file:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;We start by writing the import statements. Next, we define an interface for our application state containing the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;appId&lt;/code&gt;: Our Agora App ID&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;token&lt;/code&gt;: Token generated to join the channel&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;channelNameOne&lt;/code&gt;: Name for channel 1&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;channelNameTwo&lt;/code&gt;: Name for channel 2&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;joinSucceed&lt;/code&gt;: Boolean value to store if we’ve connected successfully&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;peerIdsOne&lt;/code&gt;: Array to store the UIDs of other users in channel 1&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;peerIdsTwo&lt;/code&gt;: Array to store the UIDs of other users in channel 2&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
We define a class-based component: the &lt;code&gt;_rtcEngine&lt;/code&gt; variable will store the instance of the &lt;code&gt;RtcEngine&lt;/code&gt; class, and the &lt;code&gt;_channel&lt;/code&gt; variable will store the instance of the &lt;code&gt;RtcChannel&lt;/code&gt; class, which we can use to access the SDK functions.

&lt;p&gt;In the constructor, we set our state variables and request permission for recording audio on Android. (We use a helper function from &lt;code&gt;permission.ts&lt;/code&gt;, as described below.) When the component is mounted, we call the init  function, which initializes the RTC engine and RTC channel. When the component unmounts, we destroy our engine and channel instances.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#rtc-initialization"&gt;
  &lt;/a&gt;
  RTC initialization
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We use the App ID to create our engine instance. The engine instance will be used to connect to channel 1, where we both send and receive the video. We also create our channel instance using the name of our second channel. The channel instance will be used only to receive videos from channel 2.&lt;/p&gt;

&lt;p&gt;The RTC triggers a userJoined event for each user present when we join the channel and for each new user who joins after. The userOffline event is triggered when a user leaves the channel. We use event listeners on _engine and _channel to store and maintain our peerIdsOne and peerIdsTwo arrays containing the UIDs for users on both the channels.&lt;/p&gt;

&lt;p&gt;We also attach a listener for joinChannelSuccess to update our state variable which is used to render our UI while we’re in the call.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#functions-for-our-buttons"&gt;
  &lt;/a&gt;
  Functions for our buttons
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;startCall&lt;/code&gt; function joins both the channels using the joinChannel method.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;endCall&lt;/code&gt; function leaves both the channels using the leaveChannel method and updates the state.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;destroy&lt;/code&gt; function destroys the instances of our engine and channel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rendering-our-ui"&gt;
  &lt;/a&gt;
  Rendering our UI
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We define the render function for displaying buttons to start and end the call and to display user videos from both channels.&lt;/p&gt;

&lt;p&gt;We define a &lt;code&gt;_renderVideos&lt;/code&gt; function to render the videos from both our channels using the &lt;code&gt;_renderRemoteVideosOne&lt;/code&gt; and &lt;code&gt;_renderRemoteVideosTwo&lt;/code&gt; functions for channel 1 and channel 2. Each function contains scrollViews to hold videos from the channel. We use the UIDs stored in peerId arrays to render remote users’ videos by passing them to the &lt;code&gt;RtcRemoteView.SurfaceView&lt;/code&gt; component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#permissionts"&gt;
  &lt;/a&gt;
  Permission.ts
&lt;/h2&gt;

&lt;p&gt;We’re exporting a helper function to request microphone permissions from the Android OS.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#stylets"&gt;
  &lt;/a&gt;
  Style.ts
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;Style.ts&lt;/code&gt; file contains the styling for the components.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;That’s how we can build a video call app that can connect to two channels simultaneously. You can refer to the &lt;a href="https://docs.agora.io/en/Video/API%20Reference/react_native/index.html"&gt;Agora React Native API Reference&lt;/a&gt; to see methods that can help you quickly add many features like muting the mic, setting audio profiles and audio mixing.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>reactnative</category>
      <category>tutorial</category>
      <category>mobile</category>
    </item>
  </channel>
</rss>
