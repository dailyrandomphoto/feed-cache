<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Developing Dapp on Blockchain Using Reach: Liar's Dice!</title>
      <author>alinaqiu2333</author>
      <pubDate>Wed, 06 Oct 2021 00:00:29 +0000</pubDate>
      <link>https://dev.to/alinaqiu2333/developing-dapp-on-blockchain-using-reach-liar-s-dice-26m7</link>
      <guid>https://dev.to/alinaqiu2333/developing-dapp-on-blockchain-using-reach-liar-s-dice-26m7</guid>
      <description>&lt;p&gt;Yuumi ADC joins the game with her Liar’s Dice! In this report, we’re going to go through the development process and future improvements. Good Luck, Have Fun!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#game-introduction"&gt;
  &lt;/a&gt;
  Game Introduction
&lt;/h1&gt;

&lt;p&gt;Liar’s dice is a type of bluffing game. The object of the game is to bluff your opponents. You can play for fun, with money, or as a drinking game. Liar’s dice can be played by two or more players. but our version is a two-player game. After the users connect to their wallet, they can join the game center. They can either deploy a new game or join an existing one. Since the game itself needs every user to be completely honest (i.e. no secretly changing dice after the game starts), we decided to use the immutability of blockchain to accomplish this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GB3mDXPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pajtggg8997n6aorutl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GB3mDXPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pajtggg8997n6aorutl.png" alt="Game Process"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#progress-report"&gt;
  &lt;/a&gt;
  Progress Report
&lt;/h1&gt;

&lt;p&gt;Our time spent on each phase is evenly distributed. We mainly focused on the syntax of Reach in the early phase and gradually moved on to the interaction between Reach and our frontend. “Game Center” is a special feature we added to our game, which improves the efficiency for users. They no longer need to copy and paste the contract information, but instead use a four-digit code. This feature will be further introduced in the next section. When we first started on Reach, the learning curve was pretty steep because we spent a lot of time on reading the documents. After finishing the tutorial videos, we had significantly improved our understanding of the syntax of Reach as well as the background knowledge of blockchain. The &lt;a href="https://docs.reach.sh/"&gt;documentation&lt;/a&gt; played a vital role in our development experience. Believe it or not, the &lt;a href="https://docs.reach.sh/guide-loop-invs.html"&gt;while loop&lt;/a&gt; was one of our biggest challenges. We had some confusions between local steps and consensus steps, but the documentation did a great job explaining what they are and when to use them. We also referred to existing code pieces in past projects such as “&lt;a href="https://bit.ly/3fxY0Ma"&gt;blackjack&lt;/a&gt;” from the &lt;a href="https://youtube.com/playlist?list=PLPWjBm58kodOuEzkIScyf19PImKtflmKH"&gt;previous hackathon&lt;/a&gt;; this gives us a better understanding of the overall logic and led to an overall improvement in code readability.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MKIDFU4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5wate0ylnikirvgib2my.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MKIDFU4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5wate0ylnikirvgib2my.png" alt="Game Center"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#game-center"&gt;
  &lt;/a&gt;
  Game Center
&lt;/h1&gt;

&lt;p&gt;After we posted our demo, we received some compliments about our Game Center feature. Thank you so much for your support and interest! We decided to share the logic and operations behind this feature with all members of the community. You’re more than welcome to discuss them with us and make suggestions!&lt;br&gt;
We raised an express server, which randomly generates a four-digit code when a new contract is deployed. This combination of data is saved in the server, allowing users to access the contract information by entering the code of an existing game. This improves efficiency because now they no longer need to manually enter the contract information to join a game! Note that after a user attaches to a contract or the contract experiences a timeout, the status attribute of the dict is switched to “used” and the game is taken down from the Game Center which can no longer be joined. Feel free to refer to &lt;a href="https://github.com/Kevintjy/Reach/blob/master/bluffing/server.js"&gt;our code&lt;/a&gt; in GitHub.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#to-infinity"&gt;
  &lt;/a&gt;
  To Infinity
&lt;/h1&gt;

&lt;p&gt;Even though this is a popular drinking game in China, there are several regional varieties and rulesets. Sometimes ones are not wild when they are called in a particular order (like two ones). We’d like to add a feature where people can select if they want to add their own rules before starting the game. We also like to expand this as a multiplayer game with more than one attacher.&lt;br&gt;
For our next Reach project, we are planning to build a game similar to “Stardew Valley”, which provides a platform that gives users opportunities to explore and exchange items received in game. Our game account can be directly connected to the wallet, and each rare item gained in game can be created as an NFT pack. Users can either exchange the item in game, or sell the NFT on the Ethereum blockchain.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#and-beyond"&gt;
  &lt;/a&gt;
  And Beyond
&lt;/h1&gt;

&lt;p&gt;Thank you so much for being with us so far! This is the first time we’ve participated in a hackathon. Initially, our goal was merely to learn about the blockchain. We’re flattered to achieve third place in this competition with worthy opponents. The friendly and enthusiastic learning environment made this experience all the more memorable. We believe blockchain is a promising emerging industry and we are looking forward to the future of Reach.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MgbGuBoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gp256y5te50fet9r5njz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MgbGuBoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gp256y5te50fet9r5njz.png" alt="Cover Page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#about-developer"&gt;
  &lt;/a&gt;
  About Developer
&lt;/h1&gt;

&lt;p&gt;Both members of our team are senior computer science students attending the University of Toronto. We’ve developed web applications as well as projects related to machine learning and data management. This is the first time we’ve developed a dApp, and blockchain is a brand new realm for us. We believe the combination of blockchain and virtual currency is a rapidly growing trend and we look forward to learning in this community.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#name"&gt;
  &lt;/a&gt;
  Name
&lt;/h1&gt;

&lt;p&gt;“Yuumi ADC” comes from a League of Legends champion Yuumi, the magical cat. She is ordinarily the support of each team and rarely has the ability to carry a game. We believe she can make the impossible possible and so can we!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Github Link: &lt;a href="https://github.com/Kevintjy/reach"&gt;https://github.com/Kevintjy/reach&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Video Link: &lt;a href="https://www.bilibili.com/video/BV1H3411674C?from=search&amp;amp;seid=6784604523599943003&amp;amp;spm_id_from=333.337.0.0"&gt;https://www.bilibili.com/video/BV1H3411674C?from=search&amp;amp;seid=6784604523599943003&amp;amp;spm_id_from=333.337.0.0&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>react</category>
      <category>blockchain</category>
    </item>
    <item>
      <title>Introducing Bookshop: component-driven workflow for static websites</title>
      <author>David Large</author>
      <pubDate>Tue, 05 Oct 2021 23:09:03 +0000</pubDate>
      <link>https://dev.to/cloudcannon/introducing-bookshop-component-driven-workflow-for-static-websites-1fb4</link>
      <guid>https://dev.to/cloudcannon/introducing-bookshop-component-driven-workflow-for-static-websites-1fb4</guid>
      <description>&lt;p&gt;We're delighted to launch &lt;a href="https://github.com/CloudCannon/bookshop"&gt;Bookshop&lt;/a&gt;: an open-source framework to speed up development and reduce maintenance on static websites by developing components in isolation.&lt;/p&gt;

&lt;p&gt;Building and maintaining high-performing informational websites have their own set of challenges. It's almost impossible to know all the requirements for a website upfront, so there's often an endless amount of iteration and tweaking involved in these projects. Requirements change, new components are necessary, buttons need 'more pizzazz', the data team wants to add a series of graphs to their latest blog post, and it's on you to get everything to work together while being prepared for the next wave of changes. This constant chopping and changing often leads to an unmaintainable jungle of CSS and JavaScript where a complete rebuild becomes the only option. We've all been there; it's usually just a matter of time.&lt;/p&gt;

&lt;p&gt;The key to avoiding this jungle is a component-driven workflow. Ideally, you isolate each component's template and CSS. Doing this makes the website far easier to maintain and gives you a framework for adding as many components as you'd like, without your codebase getting out of control.&lt;/p&gt;

&lt;p&gt;In a traditional React application, you might reach for &lt;a href="https://storybook.js.org/"&gt;Storybook&lt;/a&gt; to solve this problem. Storybook provides the tooling needed to build components in isolation, and we're big fans of the workflow that it brings to our React projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S59nsWJ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77939evwna7jhy6bjona.png" alt="A tangled bird's nest of wires."&gt;
&lt;/h2&gt;

&lt;p&gt;When we started tackling static websites with a component-driven methodology, however, we hit some limitations working with Storybook outside of the JS framework world.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Complicated configuration&lt;/strong&gt; — Storybook doesn't have built-in support for templating languages like Liquid, Handlebars, or Go templates. We experimented with adding templating support to one of the existing Storybook frameworks, and building Javascript definition files for each component, giving us the rich Storybook controls. Another option was to use Storybook as an HTML reference guide, copying snippets out whenever we needed a component.Neither workflow provided the benefits we were used to in our application Storybooks, and our component reference would eventually fall out of sync with the implementation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Schema duplication&lt;/strong&gt; — There was no source of truth for the data passed to each component. We had to manually keep parity between our Storybook configuration, component includes, and include tags across each website.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;No SSG integration&lt;/strong&gt; — The SSG doesn't know anything about components, so we had no prescribed workflow for structuring our files at a component level. Eventually, a given site would become a bird's nest of include files and sass modules, and it was no longer clear what was actually a component.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Development speed&lt;/strong&gt; — Once we weren't receiving the full benefits of Storybook, the extra tooling and build time became a damper on an otherwise lightweight static website development environment.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#our-solution-bookshop"&gt;
  &lt;/a&gt;
  Our solution? Bookshop.&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--go9Mwi-A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9cx1n6qdttabawptsf3w.png" alt="Organized cables between servers"&gt;
&lt;/h2&gt;

&lt;p&gt;Bookshop is a component browser and playground, which addresses these limitations and brings component-driven development to static site generators (SSGs).&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/622834137" width="710" height="399"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The benefits include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;SSG templating language support&lt;/strong&gt; — Bookshop is built for templating and can render the exact same includes you use to build your production website.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Easy configuration&lt;/strong&gt; — Configure components with TOML, which functions as a schema for the front matter data structure you'll use in your SSG.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Easy integration&lt;/strong&gt; — Bookshop includes plugins for popular SSGs, allowing them to use components with a distinct template tag that enforces a separation of concerns. Using this, Bookshop can seamlessly pass data from front matter to your component. There's no need to manually pass data to an include one variable at a time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Isolated component structure&lt;/strong&gt; — Bookshop has strong opinions on how templates and CSS are structured to ensure they're isolated, easy to find, and simple to maintain.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fast build times&lt;/strong&gt; — Bookshop is lightweight. Rather than a standalone application, bookshop builds a component browser that can embed anywhere on your website. This means you get to use your website styles and assets, and esbuild under the hood brings fast build times and quieter laptop fans.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, Bookshop integrates tightly with CloudCannon for your content management needs. Editors can see the full catalog of components available and use them to build pages visually, all powered by your custom-built component library. No extra steps are necessary.&lt;/p&gt;

&lt;p&gt;And did we mention that Bookshop adds a local component browser to your static webdev process? With a hot-reloading live-preview UI explorer for static template components, your workflow will thank you.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/623857314" width="710" height="399"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;HTML-based SSGs such as &lt;a href="https://www.11ty.dev/"&gt;11ty&lt;/a&gt;, &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;, and &lt;a href="https://gohugo.io/"&gt;Hugo&lt;/a&gt; (support coming soon) benefit the most for Bookshop, as existing tooling doesn't support their native templating languages. However, there will still be benefits to using Bookshop with React or Vue-based SSGs, particularly if you want content editors to manage content visually on CloudCannon. Support for a Bookshop workflow with these SSGs will be coming later this year.&lt;/p&gt;

&lt;p&gt;To help get you started with Bookshop, we've created a starter theme (&lt;a href="https://github.com/CloudCannon/jekyll-bookshop-starter"&gt;Jekyll&lt;/a&gt;, &lt;a href="https://github.com/CloudCannon/eleventy-bookshop-starter"&gt;11ty&lt;/a&gt;) to give you a boilerplate to build the rest of you site on. We're also launching a &lt;a href="https://github.com/CloudCannon?q=bookshop+template"&gt;collection of free, high quality templates&lt;/a&gt;. These production-ready templates make full use of Bookshop, are optimized for CloudCannon and can be used for free for any project, commercial or not.&lt;/p&gt;

&lt;p&gt;We can't wait to see how you start using Bookshop on your web projects and reach new productivity levels. To get started, check out the readme for Bookshop in the &lt;a href="https://github.com/CloudCannon/bookshop"&gt;GitHub repository&lt;/a&gt;. We're always open to any feedback. If you hit a problem or have an idea to improve Bookshop, open an issue on the repository, and we'll be there to help.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>jamstack</category>
      <category>opensource</category>
      <category>cms</category>
    </item>
    <item>
      <title>My 1st Hacktoberfest!</title>
      <author>Geesilu</author>
      <pubDate>Tue, 05 Oct 2021 22:13:33 +0000</pubDate>
      <link>https://dev.to/geesilu/my-1st-hacktoberfest-lih</link>
      <guid>https://dev.to/geesilu/my-1st-hacktoberfest-lih</guid>
      <description>&lt;p&gt;Hello everyone! I'm Geesilu. I'm new to here. This is my first time of participating Hacktoberfest.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contributions"&gt;
  &lt;/a&gt;
  Contributions
&lt;/h2&gt;

&lt;p&gt;During Hacktoberfest I often look for easy repos.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fVTdvdAt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0tok9t9pyk4fhuwhpdz4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fVTdvdAt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0tok9t9pyk4fhuwhpdz4.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#happy-coding"&gt;
  &lt;/a&gt;
  Happy Coding! 👨‍💻
&lt;/h2&gt;

</description>
      <category>hacktoberfest</category>
    </item>
    <item>
      <title>How Android Wallpaper Images Can Threaten Your Privacy</title>
      <author>Savannah Copland 👋</author>
      <pubDate>Tue, 05 Oct 2021 21:33:47 +0000</pubDate>
      <link>https://dev.to/savannahjs/how-android-wallpaper-images-can-threaten-your-privacy-n83</link>
      <guid>https://dev.to/savannahjs/how-android-wallpaper-images-can-threaten-your-privacy-n83</guid>
      <description>&lt;p&gt;Android 12’s highly anticipated Material You design system features wallpaper-based color theming and advanced customizations powered by color extraction. These UI enhancements allow users to select a wallpaper (i.e., a personal background image) from which an optimal palette of colors is automatically generated and applied to the device’s look and feel globally.&lt;/p&gt;

&lt;p&gt;Unfortunately, such personalization can carry a high price in compromised privacy. In this article, we’ll demonstrate how Android wallpapers can be used to track users and explore ways to prevent your device from being exploited.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#android-wallpaper-images-vs-user-privacy"&gt;
  &lt;/a&gt;
  Android wallpaper images vs. user privacy
&lt;/h2&gt;

&lt;p&gt;The WallpaperManager class was introduced in 2009 as part of the release of Android 2, API version 5. The class provides methods for interacting with wallpapers, including &lt;a href="https://developer.android.com/reference/android/app/WallpaperManager#getDrawable()"&gt;getDrawable()&lt;/a&gt; for retrieving the current system wallpaper as a drawable resource.&lt;/p&gt;

&lt;p&gt;Using the following code, a drawable resource can be represented as a byte array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;private fun calculateWallpaperBytes(): ByteArray {
   val imageBitmap = wallpaperManager.drawable.toBitmap()
   val stream = ByteArrayOutputStream()
   imageBitmap.compress(Bitmap.CompressFormat.PNG, 100, stream)
   return stream.toByteArray()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Byte arrays can be used to restore original images from Android wallpapers, which are highly likely to contain personal information or details uniquely important to the user. Every app on your device can view and download photos of your family, pets, favorite bands or movies, and anything else you may have set as a wallpaper. Moreover, you couldn’t prevent them from doing so before Android 8.1.&lt;/p&gt;

&lt;p&gt;As it stands, a large percentage of devices are running Android 8.1 or earlier (almost 44.6% at the time of this writing, per Google Analytics) and still vulnerable to this exploit.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-new-color-extraction-method"&gt;
  &lt;/a&gt;
  A new color extraction method
&lt;/h3&gt;

&lt;p&gt;Starting with Android 8.1, the &lt;a href="https://developer.android.com/reference/android/app/WallpaperManager#getDrawable()"&gt;getDrawable()&lt;/a&gt; method requires the use of &lt;a href="https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"&gt;READ_EXTERNAL_STORAGE&lt;/a&gt;, a less insecure but nonetheless risky permission as it enables access to all media on a device (and more privileged data). To compensate for the limited functionality, an easier way to extract colors was also introduced in Android 8.1: &lt;a href="https://developer.android.com/reference/android/app/WallpaperManager#getWallpaperColors(int)"&gt;getWallpaperColors(int which)&lt;/a&gt;,  which returns 3 main colors from a wallpaper image.&lt;/p&gt;

&lt;p&gt;Like iOS, Android allows users to determine which specific screens to use wallpaper images, and the integer argument “which” sets which exact wallpaper image to use for color extraction. There are two options: the constant values &lt;code&gt;WallpaperManager.FLAG_SYSTEM&lt;/code&gt; or &lt;code&gt;WallpaperManager.FLAG_LOCK&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PSX97cvN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otwuy03uwxyjr6h431cu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PSX97cvN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otwuy03uwxyjr6h431cu.png" alt="Wallpaper settings"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// WallpaperManager.FLAG_LOCK for the the lock screen

val colors = WallpaperManager

.getInstance(context).getWallpaperColors(WallpaperManager.FLAG_SYSTEM) 

val primaryColor: Int = colors.primaryColor.toArgb()

val secondaryColor: Int = colors.secondaryColor.toArgb()

val tertiaryColor: Int = colors.tertiaryColor.toArgb()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code illustrates how to extract colors using a &lt;a href="https://developer.android.com/reference/android/content/Context"&gt;context&lt;/a&gt; object with primary, secondary and tertiary colors corresponding to the most popular colors in the picture (primary being the most popular). Note that no special permissions are required to use this new method.&lt;/p&gt;

&lt;p&gt;The following is an example of color extraction using the new method with a real picture:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D3AOVTb5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1d7ukoeva75gmwlezsh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D3AOVTb5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1d7ukoeva75gmwlezsh.png" alt="Koala color extraction"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The methods may return null in some scenarios (e.g., when custom launchers redefine wallpaper management logic without using the &lt;code&gt;WallpaperManager&lt;/code&gt; class). However, if a wallpaper was set once by &lt;code&gt;WallpaperManager&lt;/code&gt;, the method will return a not-null value.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-science-of-color-extraction"&gt;
  &lt;/a&gt;
  The science of color extraction
&lt;/h3&gt;

&lt;p&gt;Since Android is open source, we can readily determine how the method actually works. According to the &lt;a href="https://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/java/com/android/internal/graphics/palette/VariationalKMeansQuantizer.java;l=31?q=KMeansQua&amp;amp;sq=&amp;amp;ss=android%2Fplatform%2Fsuperproject"&gt;code&lt;/a&gt;, colors are the result of work of Variational &lt;a href="https://en.wikipedia.org/wiki/K-means_clustering"&gt;K-means&lt;/a&gt; quantizer. Every image pixel is represented by a color and every color is a &lt;a href="https://en.wikipedia.org/wiki/Three-dimensional_space"&gt;3-dimensional&lt;/a&gt; point in space (e.g., RGB color space). All pixels form a set in space, and the algorithm performs clustering of the set on K parts with finding K points, which are equidistant from others in the set.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--svm0p30d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hywo70avr8i7ojxe8ie9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--svm0p30d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hywo70avr8i7ojxe8ie9.png" alt="How K-means method works"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above is a visualization of how the K-means method works, courtesy of &lt;a href="https://vas3k.com/blog/machine_learning/"&gt;vas3k&lt;/a&gt;. This particular case is 3-means in a 2-dimensional space.&lt;/p&gt;

&lt;p&gt;In the case of Android, colors are represented in the &lt;a href="https://en.wikipedia.org/wiki/HSL_and_HSV"&gt;HSL&lt;/a&gt; color space and distance is calculated using classical measures of &lt;a href="https://en.wikipedia.org/wiki/Euclidean_distance"&gt;euclidean distance&lt;/a&gt;. The results are three shades of an image  that are  equidistant (in the color space) from every pixel of the image. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-universe-of-combinations"&gt;
  &lt;/a&gt;
  A universe of combinations
&lt;/h3&gt;

&lt;p&gt;This color extraction algorithm is basically a map from the set of all possible images to the RGB color space. The set is infinite and the RGB color space is limited by 2²⁴ combinations. Theoretically, this means every RGB combination is possible. Every color is represented by 32 bits, but only 24 matter. Alpha channels will always be equal to 1 (according to sources), while every component of the colors R, G and B have 256 possible combinations, or 2⁸. &lt;/p&gt;

&lt;p&gt;Since each component is independent, we can directly multiply the number of combinations together. This comes out to: 2⁸ * 2⁸ * 2⁸ = 2²⁴ combinations for every color. We have 3 colors for a image, and 2²⁴ * 2²⁴ * 2²⁴ = 2⁷² combinations per image.&lt;/p&gt;

&lt;p&gt;The same logic applies to the second wallpaper image, and they can be set up independently of each other. From one wallpaper image we have 72 bits and 144 bits using system wallpaper and lock screen wallpaper — 144 bits and 2¹⁴⁴ combinations. The more combinations possible, the higher probability of generating a unique value suitable for use as an ID. And hence, it’s likely you can easily be tracked. &lt;/p&gt;

&lt;p&gt;2¹⁴⁴ = 22,300,745,198,530,623,141,535,718,272,648,361,505,980,416&lt;/p&gt;

&lt;p&gt;How large is this number, exactly? For context, the universe is made up of around 10⁸⁰ atoms. And 2¹⁴⁴ is approximately equal to 10⁴³. So the squared value of combinations is larger than the number of atoms in the universe! It’s safe to say that this outnumbers all devices on the Earth, for the foreseeable future. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-identification-algorithm"&gt;
  &lt;/a&gt;
  The identification algorithm
&lt;/h3&gt;

&lt;p&gt;As you may recall, developers can use byte arrays to restore wallpaper images prior to Android 8.1. After version 8.1, 144 bits can be extracted from wallpaper colors. Both can be used as an ID, but let’s use them instead as inputs for the SHA-256 hash function (for unification).&lt;/p&gt;

&lt;p&gt;We have an ID that contains 256 bits, is unique across all applications, and only changes when the device wallpaper changes. The code for getting the ID is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val id = hasher.hash(

   if (Build.VERSION.SDK_INT &amp;lt; Build.VERSION_CODES.O_MR1) {

       extractWallpaperBytes()

   } else extractColorsBytes())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The ID remains the same even after reinstalling the application and only changes when the wallpaper changes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#try-it-yourself"&gt;
  &lt;/a&gt;
  Try it yourself
&lt;/h3&gt;

&lt;p&gt;For demonstration purposes, we’ve created an open source application that calculates the ID and checks its uniqueness. You can download the app on &lt;a href="https://play.google.com/store/apps/details?id=com.fingerprintjs.android.wallpaperid&amp;amp;hl=en_US&amp;amp;gl=US"&gt;Google Play&lt;/a&gt; (for Android 5.0 and above, no permissions are required); the source code is &lt;a href="https://github.com/fingerprintjs/android-wallpaper-id"&gt;available on GitHub&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the method does not work on custom launchers that redefine logic of wallpaper management without using &lt;code&gt;WallpaperManager&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g8EKvA1V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khnf286weh7wksfrp625.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g8EKvA1V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khnf286weh7wksfrp625.png" alt="Open source wallpaper image application"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-prevent-wallpaper-tracking-on-your-android-device"&gt;
  &lt;/a&gt;
  How to prevent wallpaper tracking on your Android device
&lt;/h2&gt;

&lt;p&gt;The following measures can help prevent wallpaper tracking on your Android device:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Never use private or personal images for wallpapers, especially on devices running Android 8.1 and earlier. &lt;/li&gt;
&lt;li&gt;Use a default wallpaper and don’t change it. By using a custom image, you inadvertently add entropy and uniqueness for distinguishing your device from others.&lt;/li&gt;
&lt;li&gt;Check if your launcher has redefined the logic of the device’s wallpaper management (you can do this with our demo application).&lt;/li&gt;
&lt;li&gt;Don’t install suspicious applications. &lt;/li&gt;
&lt;li&gt;Be sure to keep your device operating system continuously updated.&lt;/li&gt;
&lt;li&gt;Use anti-malware software to ensure your installed applications are behaving as expected.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As you can see, signals generated from wallpaper color extraction can be used to create a single identifier available to all applications, no additional permissions required. That said, extracting colors from device wallpapers is just one way mobile developers can uniquely profile Android devices, and it’s not the most dependable at that.&lt;/p&gt;

&lt;p&gt;For some examples of more stable and reliable methods, please view our  &lt;a href="https://github.com/fingerprintjs/fingerprint-android"&gt;fingerprint-android&lt;/a&gt; library source code. Google has not restricted these for a number of years now, and it is unlikely that it ever will. At the end of the day, doing so would impact Android’s efficacy as an advertising platform — and for the world’s largest tech firm, it’s a constant juggle between balancing these interests with protecting user privacy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-in-touch"&gt;
  &lt;/a&gt;
  Get in touch
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Star, follow, or fork our &lt;a href="https://github.com/fingerprintjs/fingerprint-android"&gt;production-grade library&lt;/a&gt; for Android device fingerprinting&lt;/li&gt;
&lt;li&gt;Email any questions you have to &lt;a href="//mailto:oss@fingerprintJS.com"&gt;oss@fingerprintJS.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Join our team and work on exciting research in device security: &lt;a href="//mailto:work@fingerprintjs.com"&gt;work@fingerprintjs.com&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>android</category>
      <category>security</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Cool Projects to Help You Learn React JS - Part 1</title>
      <author>Gerald</author>
      <pubDate>Tue, 05 Oct 2021 21:18:15 +0000</pubDate>
      <link>https://dev.to/geraldmuvengei06/cool-projects-to-help-you-learn-react-js-part-1-g19</link>
      <guid>https://dev.to/geraldmuvengei06/cool-projects-to-help-you-learn-react-js-part-1-g19</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-react"&gt;
  &lt;/a&gt;
  What is React
&lt;/h3&gt;

&lt;p&gt;React is a declarative and component-based Javascript Library for building web interfaces. Its developed and maintained by  &lt;a href="https://facebook.com"&gt;Facebook&lt;/a&gt;. Although it's grouped with other "Frameworks" like VueJS and Angular, its termed much as a Library and not a framework. &lt;a href="https://reactjs.org/"&gt;Find out more about React on this link&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-this-article"&gt;
  &lt;/a&gt;
  Why this article?
&lt;/h3&gt;

&lt;p&gt;Personally, when I want to learn a new Framework, I go through the documentation to grasp the basic and core 'Hows and Whys', then I start basic applications to practice the concepts I've learned. This has always worked like magic for me. It goes without saying that learning by doing does a lot when it comes to grasping new concepts. I choose this approach since writing code is like a science, its a creative, intuitive and involving, like Math. Hence, learning by doing does it!&lt;/p&gt;

&lt;p&gt;Let's skip the poetry and head first into Interesting Part of this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interesting-react-projects"&gt;
  &lt;/a&gt;
  Interesting React Projects
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-reactclockfaces-aka-reactcf-a-simple-reactjs-clock-with-many-faces"&gt;
  &lt;/a&gt;
  1. ReactClockFaces A.K.A. ReactCF - A Simple React.Js Clock With Many Faces
&lt;/h3&gt;

&lt;p&gt;For this projects you'll learn these skills. The purpose of the project can be to display a Digital Clock that updates itself after every second, just like an actual digital watch. You can have different styles, or rather faces for displaying your digital clock. &lt;code&gt;Hint: Use Javascript's builtin function: setTimeout()&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React Components&lt;/li&gt;
&lt;li&gt;Reusability&lt;/li&gt;
&lt;li&gt;React DOM and Reactivity&lt;/li&gt;
&lt;li&gt;React Hooks: useEffect, useState&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-stockfoto"&gt;
  &lt;/a&gt;
  2. Stockfoto
&lt;/h3&gt;

&lt;p&gt;However you may call it, the main aim of this project is to consume Unsplash Photos API, which is open source and have fun while doing it. &lt;em&gt;Note: Read through &lt;a href="https://unsplash.com/documentation"&gt;Unsplash API Guildlines&lt;/a&gt; to make sure you're not breaking any rules.&lt;/em&gt; This will be a very interesting project!&lt;br&gt;
The api and interesting endpoints&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Random Picture&lt;/li&gt;
&lt;li&gt;Latest pictures&lt;/li&gt;
&lt;li&gt;Search Pictures&lt;/li&gt;
&lt;li&gt;Get One Picture and download picture
#### What you will learn&lt;/li&gt;
&lt;li&gt;React Components&lt;/li&gt;
&lt;li&gt;Reusability&lt;/li&gt;
&lt;li&gt;React DOM and Reactivity&lt;/li&gt;
&lt;li&gt;React Hooks: useEffect, useState&lt;/li&gt;
&lt;li&gt;React fetchAPI&lt;/li&gt;
&lt;li&gt;ES6&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cool-features-you-could-implement"&gt;
  &lt;/a&gt;
  Cool Features you could implement.
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Lazy loading Images&lt;/li&gt;
&lt;li&gt;Lazy Loading Pagination - Load more images when a user scrolls to the bottom&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll be happy to see what you create!&lt;/p&gt;

&lt;p&gt;As you wait for Part 2.&lt;br&gt;
Regards&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>unsplash</category>
    </item>
    <item>
      <title>An Overview of the AWS Cloud Adoption Framework | AWS White Paper Summary</title>
      <author>Ahmed Adel</author>
      <pubDate>Tue, 05 Oct 2021 20:57:38 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/an-overview-of-the-aws-cloud-adoption-framework-aws-white-paper-summary-144f</link>
      <guid>https://dev.to/awsmenacommunity/an-overview-of-the-aws-cloud-adoption-framework-aws-white-paper-summary-144f</guid>
      <description>&lt;p&gt;🌟 Migrating to the cloud is a process. You don't just snap your fingers and have everything magically hosted in AWS. It takes a lot of effort to get applications migrated to AWS and having a successful cloud migration is something that requires expertise. &lt;/p&gt;

&lt;p&gt;🌟 Luckily, many people have had successful cloud migrations in the past, so a lot of the knowledge around how to go about hosting on AWS has been captured and shared. &lt;/p&gt;

&lt;p&gt;🌟 AWS CAF organizes guidance into six focus areas. We describe these focus areas as Perspectives.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ffi82Fvs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sp7el1bcx8ekhcqp1j55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ffi82Fvs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sp7el1bcx8ekhcqp1j55.png" alt="Perspectives"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🌟 Each AWS CAF Perspective is made up of a set of CAF Capabilities, which is a composite of responsibilities. Each Capability describes “what” a stakeholder owns or manages in the cloud adoption journey. Each Capability consists of a set of CAF Skills and Processes that provide structure to identify gaps in your existing skills and processes.&lt;/p&gt;

&lt;p&gt;🌟 In General, Business, People, and Governance Perspectives focus on business capabilities, and the Platform, Security, and Operations Perspectives focus on technical capabilities.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-%E2%9E%BD-aws-caf-perspectives-"&gt;
  &lt;/a&gt;
  ___________ ➽ AWS CAF Perspectives: ___________
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#1business-perspective-value-realization"&gt;
  &lt;/a&gt;
  1-Business Perspective: [Value Realization]
&lt;/h2&gt;

&lt;p&gt;➤ Focuses on ensuring that IT is aligned with business needs and that IT investments can be traced to demonstrable business results. &lt;br&gt;
➤ Engage stakeholders within the Business Perspective to create a strong business case for cloud adoption and ensure that there is a strong alignment between your organization’s business strategies and goals and IT strategies and goals. &lt;/p&gt;

&lt;p&gt;✅ &lt;strong&gt;Common roles:&lt;/strong&gt; Business Managers, Finance Managers, Budget Owners, and Strategy Stakeholders.&lt;/p&gt;

&lt;p&gt;☞ &lt;strong&gt;Capability Descriptions:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;IT Finance&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to plan, allocate, and manage the budget for IT expenses given changes introduced with the cloud services consumption model.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;IT Strategy&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to leverage IT as a business enabler. Cloud services provide efficiencies that reduce the need to maintain applications, enabling IT to focus on business alignment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Benefits Realization&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to measure the benefits received from their IT investments. This represents Total Cost of Ownership (TCO) or Return on Investment (ROI) calculations coupled with budget management.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Business Risk Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to understand the business impact of preventable, strategic, and external risks to the organization. For many, these risks stem from the impact of financial and technology constraints on agility. Organizations find that with a move to the cloud, many of these constraints are reduced or eliminated.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#2people-perspective-roles-and-readiness"&gt;
  &lt;/a&gt;
  2-People Perspective: [Roles and Readiness]
&lt;/h2&gt;

&lt;p&gt;➤ Provides guidance for stakeholders responsible for people development, training, and communications. Helps stakeholders understand how to update the staff skills and organizational processes they will use to optimize and maintain their workforce, and ensure competencies are in place at the appropriate time. &lt;/p&gt;

&lt;p&gt;✅ &lt;strong&gt;Common roles:&lt;/strong&gt; Human Resources, Staffing, and People Managers.&lt;/p&gt;

&lt;p&gt;☞ &lt;strong&gt;Capability Descriptions:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Resource Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to project personnel needs and to attract and hire the talent necessary to support the organization’s goals.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Incentive Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to ensure that workers receive competitive compensation and benefits for the value they bring to your organization.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Career Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to ensure the personal fulfillment of your employees, their career opportunities, and their financial security&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Training Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to ensure employees have the knowledge and skills necessary to perform their roles and comply with organizational policies and requirements.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Organizational Change Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to manage the effects and impacts of business, structural, and cultural change introduced with cloud adoption.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#3governance-perspective-prioritization-and-control"&gt;
  &lt;/a&gt;
  3-Governance Perspective: [Prioritization and Control
&lt;/h2&gt;

&lt;p&gt;➤ Provides guidance for stakeholders responsible for supporting business processes with technology. Helps stakeholders understand how to update the staff skills and organizational processes that are necessary to ensure business governance in the cloud and manage and measure cloud investments to evaluate their business outcomes. &lt;/p&gt;

&lt;p&gt;✅ &lt;strong&gt;Common roles:&lt;/strong&gt;CIO, Program Managers, Project Managers, Enterprise Architects, Business Analysts, and Portfolio Managers.&lt;/p&gt;

&lt;p&gt;☞ &lt;strong&gt;Capability Descriptions:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Portfolio Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to manage and prioritize IT investments, programs, and projects in alignment with your organization’s business goals.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Program and Project Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to manage one or several related projects to improve organizational performance and complete the projects on time and on budget.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Business Performance Measurement&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to measure and optimize processes in support of your organization’s goals&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;License Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Defines your organization’s capability to procure, distribute, and manage the licenses needed for IT systems, services, and software. The cloud consumption model requires that teams develop new skills for procurement and license management and new processes for evaluating license needs.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#4platform-perspective-applications-and-infrastructure"&gt;
  &lt;/a&gt;
  4-Platform Perspective: [Applications and Infrastructure
&lt;/h2&gt;

&lt;p&gt;➤ Helps stakeholders understand how to update the staff skills and organizational processes that are necessary to deliver and optimize cloud solutions and services&lt;/p&gt;

&lt;p&gt;✅ &lt;strong&gt;Common roles:&lt;/strong&gt; CTO, IT Managers, and Solution Architects&lt;/p&gt;

&lt;p&gt;☞ &lt;strong&gt;Capability Descriptions:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Compute Provisioning&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to provide processing and memory in support of enterprise applications. The skills and processes necessary to provision cloud services are very different from the skills and processes needed to provision physical hardware and manage data center facilities.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Network Provisioning&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to provide computing networks to support enterprise applications&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Storage Provisioning&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to provide storage in support of enterprise applications&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Database Provisioning&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to provide database and database management systems in support of enterprise applications&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Systems and Solution Architecture&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to define and describe the design of a system and to create architecture standards for the organization&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Application Development&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to customize or develop applications to support your organization’s business goals. New skills and processes for Continuous Integration and Continuous Deployment (CI/CD) are a critical part of designing applications that take advantage of cloud services and the agility promised by cloud computing.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#5security-perspective-risk-and-compliance"&gt;
  &lt;/a&gt;
  5-Security Perspective: [Risk and Compliance]
&lt;/h2&gt;

&lt;p&gt;➤  Helps stakeholders understand how to update the staff skills and organizational processes that are necessary to ensure that the architecture deployed in the cloud aligns to the organization’s security control requirements, resiliency, and compliance requirements. &lt;/p&gt;

&lt;p&gt;✅ &lt;strong&gt;Common roles:&lt;/strong&gt; CISO, IT Security Managers, and IT Security Analysts.&lt;/p&gt;

&lt;p&gt;☞ &lt;strong&gt;Capability Descriptions:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Identity and Access Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on capability to create multiple access control mechanisms and manage the permissions for each of these within your AWS Account. Privileges must be granted before your user community can provision or orchestrate resources.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Detective Control&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on capability for native logging as well as services that you can leverage to provide greater visibility near to real time for occurrences in the AWS environment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Infrastructure Security&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Your AWS environment can be defined and adjusted to evolve with your workload and business requirements. This capability provides the opportunity to shape your AWS security controls in an agile fashion; automating your ability to build, deploy, and operate your security infrastructure&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Data Protection&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on capability to main visibility and control over data, and how it is accessed and used in the organization.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Incident Response&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to respond, manage, reduce harm, and restore operations during and after a security incident&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#6operations-perspective-manage-and-scale"&gt;
  &lt;/a&gt;
  6-Operations Perspective: [Manage and Scale]
&lt;/h2&gt;

&lt;p&gt;➤ Helps stakeholders understand how to update the staff skills and organizational processes that are necessary to ensure system health and reliability during the move of operations to the cloud and then to operate using agile, ongoing, cloud computing best practices. &lt;/p&gt;

&lt;p&gt;✅ &lt;strong&gt;Common roles:&lt;/strong&gt; IT Operations Managers and IT Support Managers.&lt;/p&gt;

&lt;p&gt;☞ &lt;strong&gt;Capability Descriptions:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Service Monitoring&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to detect and respond to issues with the health of IT services and enterprise applications.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Application Performance Monitoring&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to ensure application performance meets its defined requirements&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Resource Inventory Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on capability to align your organization’s assets in a way that provides the best, most cost-efficient service&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Release Management/Change Management&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to manage, plan, and schedule changes to the IT environment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Reporting and Analytics&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to ensure compliance with your organization’s reporting policies and to ensure ongoing analysis and reporting of performance against key KPIs such as service-level agreements (SLAs) and operational-level agreements (OLAs).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Business Continuity/Disaster Recovery (BC/DR)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to operate in the event of a significant failure of IT services and the capability to recover from those failures within the time parameters defined by your organization.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;IT Service Catalog&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Focuses on organization’s capability to select, maintain, advertise, and deliver an SLA or set of IT services&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;References:&lt;br&gt;
&lt;a href="https://d1.awsstatic.com/whitepapers/aws_cloud_adoption_framework.pdf?did=wp_card&amp;amp;trk=wp_card"&gt;Original paper&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
      <category>agile</category>
    </item>
    <item>
      <title>Node.js &amp; Deno Comparison</title>
      <author>Shreyansh sheth</author>
      <pubDate>Tue, 05 Oct 2021 20:55:53 +0000</pubDate>
      <link>https://dev.to/shreyanshsheth/node-js-deno-comparison-1jhe</link>
      <guid>https://dev.to/shreyanshsheth/node-js-deno-comparison-1jhe</guid>
      <description>&lt;h2&gt;
  &lt;a href="#so-what-is-deno"&gt;
  &lt;/a&gt;
  So what is Deno?
&lt;/h2&gt;

&lt;p&gt;Deno is JavaScript , typescript runtime like node.js but it can run typescript natively and has so many new features related to security and module delivery.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-compare-to-nodejs"&gt;
  &lt;/a&gt;
  Why compare to node.js?
&lt;/h2&gt;

&lt;p&gt;At it’s core Deno is same as node and they both uses V8 engine for javascript execution and also their creator &lt;a href="https://tinyclouds.org/"&gt;Ryan Dhal&lt;/a&gt; is same but they are completely different how you manage your dependencies and also files.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-you-should-use"&gt;
  &lt;/a&gt;
  Why You Should Use.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#why-you-should-use-deno"&gt;
  &lt;/a&gt;
  Why you should use Deno?
&lt;/h3&gt;

&lt;p&gt;Deno has future because of it’s growing community and also it has so many features that node is lacking and also it is so much secure and better run time than node.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-you-should-use-node"&gt;
  &lt;/a&gt;
  Why you should use node?
&lt;/h3&gt;

&lt;p&gt;Although Deno is future proof but node has so much bigger community than any other platform and also if you find yourself stuck you can easily find solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-that-are-changed-with-deno"&gt;
  &lt;/a&gt;
  Things that are changed with Deno.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Have to give &lt;a href="https://deno.land/manual/runtime/permission_apis"&gt;permission&lt;/a&gt; for accessing files read and write , net , hrtime , etc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deno.land/manual/linking_to_external_code"&gt;Importing modules&lt;/a&gt; is completely change and now you can import from url and file sitting on CDN&lt;/li&gt;
&lt;li&gt;No-Package Manager / No-Modules Folder. All the modules fetch from URL cache under Deno and you don’t need to worry about that&lt;/li&gt;
&lt;li&gt;Don’t worry about different setup for typescript it’s just works out of the box.&lt;/li&gt;
&lt;li&gt;Deno has different built in APIs than node because all of async calls end up in some sort of promise.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Deno is the future, but node is current the king for JavaScript development thanks to massive size of community and millions of open source package.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>deno</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Integrating Cryptocurrency as a Payment Option: Javascript</title>
      <author>Omolade Ekpeni</author>
      <pubDate>Tue, 05 Oct 2021 20:52:32 +0000</pubDate>
      <link>https://dev.to/omolade11/integrating-cryptocurrency-as-a-payment-option-javascript-1jad</link>
      <guid>https://dev.to/omolade11/integrating-cryptocurrency-as-a-payment-option-javascript-1jad</guid>
      <description>&lt;p&gt;Considering the extent to which cryptocurrency as a medium of payment has evolved, Soon enough your employers will start requesting to integrate multi-currency as a payment option in their platforms or they already did 😏. In this article, &lt;a class="mentioned-user" href="https://dev.to/tkings"&gt;@tkings&lt;/a&gt;
 and I will be sharing a great solution that works for implementing cryptocurrency payment on javascript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M4bzMt8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kf457gzh6p8mjjxyq2bq.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M4bzMt8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kf457gzh6p8mjjxyq2bq.jpeg" alt="Payment Process Flowchart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The diagram above shows the flow of how the implementation will serve the merchant and customer . The steps are outlined in the &lt;a href="https://dev.to/omolade11/integrating-cryptocurrency-as-a-payment-option-html-352i"&gt;previous article&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://coinforbarter.com"&gt;CoinForBarter&lt;/a&gt; gives developers a seamless experience, and they support 11 currencies across multiple chains for customers. To proceed, you will need to &lt;a href="https://dashboard.coinforbarter.com/login"&gt;sign up&lt;/a&gt; with them and &lt;a href="https://dashboard.coinforbarter.com/settings/api"&gt;generate an API KEY&lt;/a&gt; from &lt;a href="https://coinforbarter.com"&gt;CoinForBarter&lt;/a&gt;. &lt;a href="https://coinforbarter.com"&gt;CoinForBarter&lt;/a&gt; like Flutterwave or Stripe provides an implementation method for JavaScript.&lt;/p&gt;

&lt;p&gt;An example of how you can implement cryptocurrency in your javascript is below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form&amp;gt;
&amp;lt;script src="https://checkout.coinforbarter.com/v1/script.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;button type="button" onClick="makePayment()"&amp;gt;Pay Now&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;script&amp;gt;
        function makePayment() {
            CoinForBarterCheckout({
                publicKey: "xxxxxxxxxxxxxxxxxxxxxxx",
                txRef: "RX1",
                amount: 10,
                currency: "BTC",
                redirectUrl: "http://example.com",
                currencies: [], //accept all currencies if you leave it empty
                meta: {
                    consumer_id: 23,
                },
                customer: "example@gmail.com",
                customerPhoneNumber: "+234xxxxxx",
                customerFullName: "John Doe",
                customizations: {
                    title: "My store",
                    description: "Payment for items in cart",
                    logo: "https://assets.example.com/logo.png",
                },
                onError: (data) =&amp;gt; {
                    console.log(data);
                    alert(data.message)
                },
                onSuccess: (data) =&amp;gt; {
                    console.log(data);
                }
            });
        }
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is an &lt;a href="https://github.com/coinforbarter/examples/tree/main/inline-implementation/php"&gt;example implementation for php&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input-names-and-description"&gt;
  &lt;/a&gt;
  Input Names and Description
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;publicKey&lt;/strong&gt;: You can get your publicKey from your CoinForBarter dashboard. It helps identify your transaction.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;customer&lt;/strong&gt;: The email address of the customer to make that payment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;customerPhoneNumber&lt;/strong&gt;: This is the phone number of the customer. It is an optional field.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;customerFullName&lt;/strong&gt;: This is the full name of the customer. It is an optional field.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;txRef&lt;/strong&gt;: This is a random string to help you remember this transaction.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;amount&lt;/strong&gt;: The amount to charge your customer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;currency&lt;/strong&gt;: The currency that you have set the amount in.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;customizations&lt;/strong&gt;: An object to display the title and description to be displayed on the payment page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;redirectUrl&lt;/strong&gt;: A url to redirect the customer to when the transaction ends. This is optional.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;currencies&lt;/strong&gt;: You can have multiple of these fields. It will be a list of the currencies you want to accept for this transaction. It is optional, and if left empty, the customer will pay in any supported currency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;onError&lt;/strong&gt;: A function to handle the data sent back if transactions fails or is cancelled. If provided, it overrides the redirectUrl.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;onSuccess&lt;/strong&gt; : A function to handle the data sent back if transactions is successful. If provided, it overrides the redirectUrl.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Having inserted a user's public key (Tochukwu's) into the above JavaScript code, the 'Pay Now' button leads to this screen below on your website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YNPzuUKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukdq4sx62563527rx4jl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YNPzuUKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukdq4sx62563527rx4jl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gQhUWUyB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqmnz17s3txvhda8tfgv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gQhUWUyB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqmnz17s3txvhda8tfgv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://coinforbarter.com"&gt;CoinForBarter&lt;/a&gt; has a long list of supported currencies and &lt;a href="https://dashboard.coinforbarter.com/payouts/settings"&gt;helps you get settled in your local bank account automatically&lt;/a&gt;. The list of supported currencies can be viewed in the note section of the &lt;a href="https://dev.to/omolade11/integrating-cryptocurrency-as-a-payment-option-html-352i"&gt;previous article&lt;/a&gt;.&lt;br&gt;
In this article, we learnt how to integrate cryptocurrency as a payment option with Javascript. &lt;a class="mentioned-user" href="https://dev.to/tkings"&gt;@tkings&lt;/a&gt;
 and I wrote it. In the future, we will be writing on implementing it using React, React Native and API. We will appreciate your comments, and if you have any questions, do not hesitate to hit either &lt;a href="https://twitter.com/tkings_"&gt;Kingsley&lt;/a&gt; or &lt;a href="https://twitter.com/OmoladeEkpeni"&gt;me&lt;/a&gt; up on Twitter.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>payment</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>Diffrent Ways To Create A React Application</title>
      <author>Shreyansh sheth</author>
      <pubDate>Tue, 05 Oct 2021 20:50:47 +0000</pubDate>
      <link>https://dev.to/shreyanshsheth/diffrent-ways-to-create-a-react-application-55a5</link>
      <guid>https://dev.to/shreyanshsheth/diffrent-ways-to-create-a-react-application-55a5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-createreactapp"&gt;
  &lt;/a&gt;
  1. Create-React-App
&lt;/h2&gt;

&lt;p&gt;Provide a Simple Environment With All The Things Already Setup For You And You Just Have To Write Code.&lt;/p&gt;

&lt;p&gt;Create React App doesn’t handle backend logic or databases; it just creates a frontend build pipeline, so you can use it with any backend you want. Under the hood, it uses Babel and webpack, but you don’t need to know anything about them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://create-react-app.dev/"&gt;&lt;strong&gt;CRA Docs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;create new app with create-react-app&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app appName
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-vite"&gt;
  &lt;/a&gt;
  2. Vite
&lt;/h2&gt;

&lt;p&gt;Same As Create-React-App It Provide All Configuration Out Of The Box. Also, It Supports SSR &amp;amp; SSG.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vitejs.dev/"&gt;&lt;strong&gt;Vite Docs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To Create Vite App&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init vite@latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-nextjs"&gt;
  &lt;/a&gt;
  3. Next.js
&lt;/h2&gt;

&lt;p&gt;Currently The Best Tool To Create SSR(server-site-rendered) &amp;amp; SSG(static-site-generation) For React. It Has Inbuilt Optimization That Makes Your App Run So Much Faster &amp;amp; Also If You Want To Add Serverless Function Next.js Also Provides That.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextjs.org/"&gt;&lt;strong&gt;Next.js Docs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To Create Next.js Application&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-next-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-gatsby"&gt;
  &lt;/a&gt;
  4. Gatsby
&lt;/h2&gt;

&lt;p&gt;Gatsby Does SSG And It Has Huge Plugin System To Support Gatsby Compile Your React Code To HTML-CSS So User Don't Have To Wait For Javascript And React To Load&lt;br&gt;
&lt;a href="https://www.gatsbyjs.com/"&gt;&lt;strong&gt;Gatsby Docs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To Create Gatsby App&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init gatsby
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-razzle"&gt;
  &lt;/a&gt;
  5. Razzle
&lt;/h2&gt;

&lt;p&gt;It Is Serverside Rendering Framework As Well And This Provide Much More Flexibility.&lt;br&gt;
&lt;a href="https://razzlejs.org/"&gt;&lt;strong&gt;Razzle Docs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To Create Razzle App&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -g create-razzle-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-raw-ltscriptgt-endraw-tags"&gt;
  &lt;/a&gt;
  6. &lt;code&gt;&amp;lt;Script&amp;gt;&lt;/code&gt; Tags
&lt;/h2&gt;

&lt;p&gt;You Can Use Script Tags For React And After Importing That Your Code May Look Like This.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;liked&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Like&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(&lt;strong&gt;React Docs&lt;/strong&gt;)(&lt;a href="https://reactjs.org/docs/add-react-to-a-website.html"&gt;https://reactjs.org/docs/add-react-to-a-website.html&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I Covered Major Ways To Build React App But You Can Setup Your Own System Like These.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>30DAYS OF PYTHON</title>
      <author>Phylis Jepchumba</author>
      <pubDate>Tue, 05 Oct 2021 20:34:26 +0000</pubDate>
      <link>https://dev.to/phylis/30days-of-python-laj</link>
      <guid>https://dev.to/phylis/30days-of-python-laj</guid>
      <description>&lt;p&gt;Day 1 of the 30 Days Of Python.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What python is.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python programming paradigms: Imperative, Functional, Procedural, Object-oriented paradigms&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Representing data using python data types: Booleans, strings ,lists, tuples, sets, dictionaries.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Applications of Python in Software development and DevOps engineering automation, data science and machine learning.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PEP8 Rules &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Python is an interpreted ,high-level ,general-purpose programming language used in web development, data science and creating software prototypes.&lt;/p&gt;

&lt;p&gt;Python Paradigms.&lt;br&gt;
Programming paradigms is a style or concept by which the methodology of a programming language adheres to.Python supports four programming paradigms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Imperative&lt;/strong&gt;-Python fully implements this paradigm. It uses statements that change a program state and focuses on &lt;strong&gt;how to solve&lt;/strong&gt;.Data structures implement the use of this paradigm.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Functional&lt;/strong&gt;- It is also known as declarative paradigm It treats every statement as a mathematical equation.&lt;br&gt;
in python, lambda and recursion are approaches used to implement functional programming paradigm.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Procedural&lt;/strong&gt;- in this paradigm, computational tasks are treated as step by step iteration and common task grouped as functions.&lt;br&gt;
In python, procedural paradigm favors iterations, selection, sequencing and modularization.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Object-oriented&lt;/strong&gt;- a programming paradigm that relies on concepts of classes and objects and focuses on writing reusable code. Python has object oriented features as  methods, inheritance encapsulation and polymorphism.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;
  &lt;a href="#applications-of-python"&gt;
  &lt;/a&gt;
  Applications of Python.
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;Building desktop applications, including GUI applications, CLI tools, and even games&lt;/li&gt;
&lt;li&gt;Building web and Internet applications- python offers frameworks such as Django and microframeworks such as flask for web developemnt.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Performing DevOps tasks- Python enables DevOps professionals to build, test, deploy, visualize and monitor the DevOps lifecycle with improved, simple custom utilities.DevOps tools such as Ansible is written in python.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Education-Python is a superb language for teaching programming, both at the introductory level and in more advanced courses.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;
  &lt;a href="#representing-data-using-python-data-types"&gt;
  &lt;/a&gt;
  Representing data using python data types.
&lt;/h6&gt;

&lt;p&gt;Python has a handful of built-in data types, such as numbers (integers, floats, complex numbers), Booleans, strings, lists, tuples, dictionaries, and sets.&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#numeric-data-type"&gt;
  &lt;/a&gt;
  Numeric data type.
&lt;/h6&gt;

&lt;p&gt;They represent the data that has a numeric value and can belong to three different numerical types:&lt;br&gt;
Integers: Consists of positive or negative whole numbers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Floats:Are true numbers with floating-point representation specified by a decimal point.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;12.5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Complex numbers: Are numbers with a real part and an imaginary part.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.8j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;4.5j&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#string-datatype"&gt;
  &lt;/a&gt;
  String Datatype.
&lt;/h6&gt;

&lt;p&gt;Strings are pieces of text or sequences of characters that you can define using single, double, or triple quotes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Use single quotes
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hello there!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;'Hello there!'&lt;/span&gt;
&lt;span class="c1"&gt;#Use double quotes
&lt;/span&gt;&lt;span class="n"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Good Evening!"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;'Good Evning!'&lt;/span&gt;
&lt;span class="c1"&gt;# Use triple quotes
&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"""30 Days of Python Challenge!"""&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;'30 Days of Python Challenge!'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;String data type can be used for Concatenation, Slicing, and Repetition.&lt;br&gt;
Concatenation-Joining two or more strings together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"My name is"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"Korir"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output
&lt;/span&gt;&lt;span class="s"&gt;'My name is Korir'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Repetition-It is repeating a sequence of instructions a certain number of times.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'phy'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;phyphyphyphyphy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Slicing- used extract different parts of a string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;String1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Python"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#list-data-type"&gt;
  &lt;/a&gt;
  List Data Type.
&lt;/h6&gt;

&lt;p&gt;Lists are used to store multiple items in a single variables.&lt;br&gt;
Lists are defined in Python by enclosing a comma-separated sequence of objects in square brackets ([]), as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Characteristics of Python Lists.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lists are ordered.&lt;/li&gt;
&lt;li&gt;Lists can contain any arbitrary objects.&lt;/li&gt;
&lt;li&gt;List elements can be accessed by index.&lt;/li&gt;
&lt;li&gt;Lists can be nested to arbitrary depth.&lt;/li&gt;
&lt;li&gt;Lists are mutable.&lt;/li&gt;
&lt;li&gt;Lists are dynamic.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#tuples-data-type"&gt;
  &lt;/a&gt;
  Tuples Data type
&lt;/h6&gt;

&lt;p&gt;Tuples are identical to lists in all respects, except for the following properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tuples are defined by enclosing the elements in parentheses (()) instead of square brackets ([]).&lt;/li&gt;
&lt;li&gt;Tuples are immutable hence cannot be modified&lt;/li&gt;
&lt;li&gt;Execution is faster when manipulating a tuple Here is an example of a tuple:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;tuple1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tuple1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#dictionaries-data-type"&gt;
  &lt;/a&gt;
  Dictionaries Data type
&lt;/h6&gt;

&lt;p&gt;Dictionary in python is an ordered collection, used to store data values.&lt;br&gt;
You can define a dictionary by enclosing a comma-separated list of key-value pairs in curly braces ({}). A colon (:) separates each key from its associated value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;new_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"firstname"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Korir"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"lastname"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Mary"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"DOB"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"lastname"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"Mary"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#set-data-type"&gt;
  &lt;/a&gt;
  Set Data Type.
&lt;/h6&gt;

&lt;p&gt;used to store multiple items in a single variable.&lt;br&gt;
Every set element is unique and must be immutable.&lt;br&gt;
Are created by placing all the items inside curly braces {}, separated by comma, or by using the built-in set() function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;new_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_set&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Resources&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(&lt;a href="https://dev.to/phylis/python-101-introduction-to-python-2eh4"&gt;https://dev.to/phylis/python-101-introduction-to-python-2eh4&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;(&lt;a href="https://www.pythontutorial.net/"&gt;https://www.pythontutorial.net/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;(&lt;a href="https://www.python.org/dev/peps/pep-0008/"&gt;https://www.python.org/dev/peps/pep-0008/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;(&lt;a href="https://www.analyticsvidhya.com/blog/2021/05/introduction-to-"&gt;https://www.analyticsvidhya.com/blog/2021/05/introduction-to-&lt;/a&gt;
python-programming-beginners-guide/)&lt;/li&gt;
&lt;li&gt;(&lt;a href="https://dev.to/grayhat/python-101-introduction-to-python-3kg5"&gt;https://dev.to/grayhat/python-101-introduction-to-python-3kg5&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>datascience</category>
      <category>100daysofcode</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Getting started with Playwright E2E testing</title>
      <author>Giannis Koutsaftakis</author>
      <pubDate>Tue, 05 Oct 2021 20:22:58 +0000</pubDate>
      <link>https://dev.to/kouts/getting-started-with-playwright-e2e-testing-mfd</link>
      <guid>https://dev.to/kouts/getting-started-with-playwright-e2e-testing-mfd</guid>
      <description>&lt;p&gt;&lt;a href="https://playwright.dev"&gt;Playwright&lt;/a&gt; is a cross-browser web automation framework by Microsoft. It is also a powerful E2E testing tool with its integrated test runner &lt;code&gt;Playwright Test&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Some of the highlight features of Playwright:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support for 3 browser engines (Chromium, Firefox and WebKit)&lt;/li&gt;
&lt;li&gt;Write tests in &lt;strong&gt;JavaScript&lt;/strong&gt; &amp;amp; TypeScript, Python, .NET and, Java&lt;/li&gt;
&lt;li&gt;Runs tests in parallel using worker processes that run at the same time&lt;/li&gt;
&lt;li&gt;Support for screenshots and videos snapshots taking&lt;/li&gt;
&lt;li&gt;Provides a great set of debugging tools&lt;/li&gt;
&lt;li&gt;Wide range of element selectors (CSS, text, X-path and more)&lt;/li&gt;
&lt;li&gt;Intercept network activity for stubbing and mocking network requests (e.g API calls)&lt;/li&gt;
&lt;li&gt;CLI tool to Record user interactions and generate JavaScript code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;more...&lt;/p&gt;

&lt;p&gt;In this post we' re going to implement two simple E2E test flows for pages that require authentication and look at how we can reuse the login state so that we don't have to repeat the same code across our tests. &lt;/p&gt;

&lt;p&gt;We're going to use &lt;strong&gt;JavaScript&lt;/strong&gt; as our language of choice and the beautiful &lt;a href="https://pixinvent.com/demo/vuexy-vuejs-admin-dashboard-template/landing/"&gt;Vuexy&lt;/a&gt; admin theme as an &lt;em&gt;example&lt;/em&gt; domain for testing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's start!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install dependencies
&lt;/h2&gt;

&lt;p&gt;Playwright and friends&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# install playwright and its test runner&lt;/span&gt;
npm i &lt;span class="nt"&gt;-D&lt;/span&gt; @playwright/test

&lt;span class="c"&gt;# install browser engines - Chromium, Firefox, and Webkit&lt;/span&gt;
npx playwright &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're also going to need the &lt;code&gt;dotenv&lt;/code&gt; package in order to load the login credentials as environment variables from a &lt;code&gt;.env&lt;/code&gt; file into our test.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-D&lt;/span&gt; dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's add some useful commands into the &lt;code&gt;scripts&lt;/code&gt; section of our project's &lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npx playwright test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test-debug"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"PWDEBUG=1 npx playwright test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test-debug-windows"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"set PWDEBUG=1 &amp;amp;&amp;amp; npx playwright test"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;test&lt;/code&gt; runs the tests&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;test-debug&lt;/code&gt; runs the tests in &lt;strong&gt;debug mode&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;test-debug-windows&lt;/code&gt; runs the tests in &lt;strong&gt;debug mode&lt;/strong&gt; on Windows&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#configure"&gt;
  &lt;/a&gt;
  Configure
&lt;/h2&gt;

&lt;p&gt;Playwright uses a global configuration file to specify common settings for each test.&lt;br&gt;
Create &lt;code&gt;playwright.config.js&lt;/code&gt; in your project's root with the contents below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;globalSetup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./tests/global-setup.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;baseURL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://pixinvent.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;headless&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;viewport&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1280&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;720&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;ignoreHTTPSErrors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;screenshot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;only-on-failure&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;30000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are some commonly used options for various scenarios.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;baseURL&lt;/code&gt; Define a common Base URL, this allows us to navigate by using just the path inside our tests. In our example we set it as &lt;code&gt;https://pixinvent.com&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;globalSetup&lt;/code&gt; This file will be required and run before all the tests. We'll use it to setup our login step before every test.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;headless&lt;/code&gt; Playwright runs tests in headless mode by default, change this to &lt;code&gt;false&lt;/code&gt; if you want to view the tests in a "live" browser instance.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;viewport&lt;/code&gt; Controls the size of the viewport for the tests.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ignoreHTTPSErrors&lt;/code&gt; Whether to ignore HTTPS errors during navigation.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;screenshot&lt;/code&gt; Have a screenshot taken when a test fails.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;timeout&lt;/code&gt; Time in milliseconds given to each test.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create a &lt;code&gt;.env&lt;/code&gt; file in the project's root that will hold our login credentials.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;LOGIN_USERNAME=admin@demo.com
LOGIN_PASSWORD=admin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll also need to insert the &lt;code&gt;.env&lt;/code&gt; and &lt;code&gt;tests/state.json&lt;/code&gt; files to our project's &lt;code&gt;.gitignore&lt;/code&gt; file. The &lt;code&gt;tests/state.json&lt;/code&gt; will be used to store the authentication state when our tests run, so we don't want that file to be tracked by Git.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# env file&lt;/span&gt;
.env

&lt;span class="c"&gt;# Login state file&lt;/span&gt;
tests/state.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-the-tests"&gt;
  &lt;/a&gt;
  Create the tests
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;tests&lt;/code&gt; directory will contain our tests and the &lt;code&gt;globalSetup&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tests/globalSetup.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../playwright.config&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;chromium&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@playwright/test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;chromium&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;baseURL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/demo/vuexy-vuejs-laravel-admin-template/demo-1/login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input[type="text"]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LOGIN_USERNAME&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input[type="password"]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LOGIN_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button:has-text("Sign in")&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;storageState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tests/state.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Playwright uses the &lt;code&gt;globalSetup.js&lt;/code&gt; file to set things up once, before running all tests. In our example we're using it to visit the login page, fill-in the username and password, click on the "Sign in" button and finally, save the authentication state to a &lt;code&gt;state.json&lt;/code&gt; file that is going to be used from inside our tests.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's add some sample tests&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Playwright Test uses the &lt;a href="https://jestjs.io/docs/expect"&gt;expect&lt;/a&gt; library for test assertions, if you have used &lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt; you will find the syntax familiar.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tests/dashboard.spec.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@playwright/test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;storageState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tests/state.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dashboard&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/demo/vuexy-vuejs-laravel-admin-template/demo-1/dashboard/ecommerce&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.card.card-congratulation-medal p.card-text.font-small-3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toContainText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You have won gold medal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this test we' re visiting the Dashboard page and we're checking if the medal card contains the text "You have won gold medal".&lt;br&gt;
Playwright provides many ways to &lt;a href="https://playwright.dev/docs/selectors"&gt;select elements&lt;/a&gt;, in our case we're using CSS selectors to find the card element in the page. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;tests/analytics.spec.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@playwright/test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;storageState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tests/state.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;analytics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://pixinvent.com/demo/vuexy-vuejs-laravel-admin-template/demo-1/dashboard/analytics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text=Add Record&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;locator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h4.invoice-title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toContainText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Invoice&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our second test we visit the Analytics, click on the "Add Record" button and the check if the text "Invoice" appears inside a &lt;code&gt;h4&lt;/code&gt; element on the next page.&lt;br&gt;
Notice that we don't have to write any specific method call for navigation, Playwright auto-waits for the next page.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#run-the-tests"&gt;
  &lt;/a&gt;
  Run the tests
&lt;/h2&gt;

&lt;p&gt;In order to tun our tests we can use the commands we added in our &lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--61ZV5dHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lsfzn8p3j3j9pnzkzche.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--61ZV5dHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lsfzn8p3j3j9pnzkzche.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can also run the tests in &lt;a href="https://playwright.dev/docs/debug#run-in-debug-mode"&gt;debug mode&lt;/a&gt;. This will open up the browsers in headed mode and also start the &lt;a href="https://playwright.dev/docs/debug#playwright-inspector"&gt;Playwright Inspector&lt;/a&gt;. Useful when we want to troubleshoot our tests scripts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# For Linux and MacOS&lt;/span&gt;
npm run test-debug

&lt;span class="c"&gt;# For Windows&lt;/span&gt;
npm run test-debug-windows
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#useful-commands"&gt;
  &lt;/a&gt;
  Useful commands
&lt;/h2&gt;

&lt;p&gt;Here's a list of commands that can be useful when writing and running/debugging our test scripts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Run a single test&lt;/span&gt;
npx playwright &lt;span class="nb"&gt;test &lt;/span&gt;testName

&lt;span class="c"&gt;# Run in headed mode&lt;/span&gt;
npx playwright &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nt"&gt;--headed&lt;/span&gt;

&lt;span class="c"&gt;# Run tests using a specified browser&lt;/span&gt;
npx playwright &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nt"&gt;--browser&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;firefox

&lt;span class="c"&gt;# Run tests using all three browsers&lt;/span&gt;
npx playwright &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nt"&gt;--browser&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;all
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;That's all&lt;/strong&gt;&lt;br&gt;
Thanks for reading and have fun testing with Playwright!&lt;/p&gt;

</description>
      <category>testing</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>why am I hung up on the term "fullstack"?</title>
      <author>anthony-campolo</author>
      <pubDate>Tue, 05 Oct 2021 20:19:37 +0000</pubDate>
      <link>https://dev.to/ajcwebdev/why-am-i-hung-up-on-the-term-fullstack-52dm</link>
      <guid>https://dev.to/ajcwebdev/why-am-i-hung-up-on-the-term-fullstack-52dm</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Stacks evolve over time. But it’s not just what technologies they use, but what technology we even consider a part of a stack. What fullstack means morphs over time.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Chris Coyier - &lt;a href="https://css-tricks.com/what-does-it-mean-to-be-full-stack/"&gt;What Does it Mean to Be “Full Stack”?&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Today I got into a Twitter #BEEF about the appropriateness of the term "fullstack framework." Some of you may know that I am the host of a podcast called &lt;a href="https://fsjam.org"&gt;Fullstack Jamstack&lt;/a&gt; and have made my name as a developer advocate for &lt;a href="https://redwoodjs.com"&gt;RedwoodJS&lt;/a&gt;, a self proclaimed "fullstack" JavaScript framework.&lt;/p&gt;

&lt;p&gt;However, I do not make any claims to ownership of the term. My thoughts on the term and its definition are fiercely personal, and I welcome others to have their own passionate beliefs around it. I want to elicit dialogue around the term, not tell you what it means.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-this-personal-for-me"&gt;
  &lt;/a&gt;
  Why is this personal for me?
&lt;/h2&gt;

&lt;p&gt;Before joining the RedwoodJS team I was learning how to code at Lambda School, learning a "fullstack web development" curriculum. This curriculum contained roughly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;10% HTML/CSS&lt;/li&gt;
&lt;li&gt;85% JavaScript/React&lt;/li&gt;
&lt;li&gt;5% Node/Express/Postgres&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I felt this was an uneven split between the frontend and backend. It didn't seem accurate to label this as a "fullstack" curriculum, instead it seemed more accurate to call it a "frontend" curriculum with a very small amount of backend material included at the end.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-definition-of-full"&gt;
  &lt;/a&gt;
  What is the definition of "Full?"
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--uAj6yQW1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1395285322305478664/OGq8Gd6j_normal.jpg" alt="anthony-campolo profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        anthony-campolo
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/ajcwebdev"&gt;@ajcwebdev&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      full - /fo͝ol/&lt;br&gt;&lt;br&gt;adjective&lt;br&gt;&lt;br&gt;1. containing or holding as much or as many as possible; having no empty space.&lt;br&gt;&lt;br&gt;2. not lacking or omitting anything; complete.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:42 PM - 05 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1445444206948876293" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1445444206948876293" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1445444206948876293" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I start with the postulate that the term "full" contains the most essential quality of "completeness." To say something is "full," is to say there is nothing left to add. This is why I would consider a stack without any database or storage to be incomplete.&lt;/p&gt;

&lt;p&gt;How often do you use an application where everything you did with that application disappears after you take a break from using it? If you're just reading a blog post that's probably fine, not everything we do on the web requires persistence. But if you're writing that blog post, it's a different story.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-there-actually-just-a-frontend-and-backend"&gt;
  &lt;/a&gt;
  Is there actually just a frontend and backend?
&lt;/h2&gt;

&lt;p&gt;A recent turn of phrase has come up called the &lt;a href="https://css-tricks.com/front-of-the-front-back-of-the-front/"&gt;"front of the backend"&lt;/a&gt; to describe the illusive middle ground between the client side and the server side. Does this mean there is a "back of the frontend?"&lt;/p&gt;

&lt;p&gt;There is the HTML and CSS for the content and styling and JavaScript (or some sort of JavaScript framework) for the client side interaction. But the data fetching logic and state management can be decoupled from the content and styling itself, forming its own layer of the application. This is the space Redux and React Query play in.&lt;/p&gt;

&lt;p&gt;On the backend you have an operating system, server side language (or framework), and database for authentication, authorization, and persistence. But you can abstract a layer above that with an API mesh, serverless functions, or containers that let you ignore the actual operations of the underlying system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-else-should-be-included-in-the-definition-of-fullstack"&gt;
  &lt;/a&gt;
  What else should be included in the definition of "fullstack?"
&lt;/h2&gt;

&lt;p&gt;What about accessibility, internationalization, localization, security, deployment, DevOps, automated testing, design systems, data collection, analytics, emails, etc? How wide does the definition go? Is it even reasonable for us to expect a single developer to &lt;em&gt;ever&lt;/em&gt; be fullstack?&lt;/p&gt;

&lt;p&gt;Unfortunately I don't have the answer to that question. But as long as we are going to be selling the term for our bootcamps, our frameworks, and our podcasts, then we need to think carefully about what we mean when we use the term.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thank you to &lt;a href="https://twitter.com/ralex1993"&gt;Alex&lt;/a&gt; for his thoughtful notes and pushback on this piece.&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
