<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Algorithm Problems - Baby Steps in Providing Solutions Using JavaScript</title>
      <author>NJOKU SAMSON EBERE</author>
      <pubDate>Mon, 19 Jul 2021 10:50:05 +0000</pubDate>
      <link>https://dev.to/ebereplenty/algorithm-problems-baby-steps-in-providing-solutions-using-javascript-1edp</link>
      <guid>https://dev.to/ebereplenty/algorithm-problems-baby-steps-in-providing-solutions-using-javascript-1edp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Recruiters who are interested in the problem solving skills of their candidate, present them problems and ask them to write an algorithm for that problem. By so doing, recruiters are able to separate those who just copy and paste codes from those who really understand the syntax and how it works. But What is an Algorithm?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jump-to"&gt;
  &lt;/a&gt;
  JUMP TO:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#1"&gt;Steps in Solving an Algorithm Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3"&gt;25 Algorithm to Sharpen Your Problem Solving Skills&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4"&gt;Bonus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algorithm (pronounced AL-go-rith-um) is a procedure or formula for solving a problem, based on conducting a sequence of specified actions. A computer program can be viewed as an elaborate algorithm. In mathematics and computer science, an algorithm usually means a small procedure that solves a recurrent problem - &lt;a href="https://whatis.techtarget.com/definition/algorithm"&gt;whatis&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From the definition above, we can deduce that algorithm is used to solve problems and for one to build an effective algorithm, the person must have a good understanding of the problem being solved.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OAb-cqi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzto8gd1wyx01tjd1ieu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OAb-cqi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzto8gd1wyx01tjd1ieu.jpg" alt="Solving Problems With Algorithm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Algorithm or Problem Solving interviews are almost unavoidable today with the current trends in technology. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eYIbQ2nT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bujnnihdzgvm4icmxgk3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eYIbQ2nT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bujnnihdzgvm4icmxgk3.png" alt="Algorithm Interviews"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In view of this reality, how can you achieve an algorithm to solve a problem?&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps-in-solving-an-algorithm-problem"&gt;
  &lt;/a&gt;
  Steps in Solving an Algorithm Problem
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dzadx6fB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gidy88wsnragk2h5qug.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dzadx6fB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gidy88wsnragk2h5qug.jpg" alt="Steps in Problem Solving"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;UNDERSTAND&lt;/strong&gt; - Try to understand the problem and break it down into the smallest parts possible.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;STRATEGIZE&lt;/strong&gt; - Find out what tools are available for you in your programming language &lt;em&gt;(We are using JavaScript for the purpose of this article)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;IMPLEMENT&lt;/strong&gt; - Solve each of the small problems with those tools and combine the solutions to form one solution to the whole problem.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;For Example, if you are presented with a &lt;em&gt;word palindrome&lt;/em&gt; problem, how do you go about writing the algorithm to that problem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#lets-apply-the-steps-above"&gt;
  &lt;/a&gt;
  Let's apply the steps above
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3oz8xW1WD6hLm1oHHq/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3oz8xW1WD6hLm1oHHq/giphy.gif" alt="Applying the Steps for problem Solving"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-a-understand"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP A:&lt;/strong&gt; UNDERSTAND
&lt;/h3&gt;

&lt;p&gt;The big problem here is to check if the word we are given is the same if reversed. &lt;/p&gt;

&lt;p&gt;However, for us to make that happen, we have to provide solutions to smaller problems like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to keep a reference to the original word we are given.&lt;/li&gt;
&lt;li&gt;How to reverse the word.&lt;/li&gt;
&lt;li&gt;But for us to reverse the word we need to split the word into characters.&lt;/li&gt;
&lt;li&gt;If we eventually reverse it, we need to join the characters&lt;/li&gt;
&lt;li&gt;Finally, we need to compare the new word to the old one&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-b-strategize"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP B:&lt;/strong&gt; STRATEGIZE
&lt;/h3&gt;

&lt;p&gt;Some of the tools We have at our displosal include the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;variables&lt;/li&gt;
&lt;li&gt;.split()&lt;/li&gt;
&lt;li&gt;spread operator&lt;/li&gt;
&lt;li&gt;if...else... conditional statement&lt;/li&gt;
&lt;li&gt;ternary operator&lt;/li&gt;
&lt;li&gt;.reverse()&lt;/li&gt;
&lt;li&gt;.join()&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-c-implement"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP C:&lt;/strong&gt; IMPLEMENT
&lt;/h3&gt;

&lt;p&gt;Having broken down this problem into smaller bits, we have a way to keep a copy of the original word given to us using the &lt;code&gt;variable&lt;/code&gt; tool provided for us by JavaScript&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;orginalWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we cannot just reverse a string, we need to split the word and make it an array using the &lt;code&gt;.split("")&lt;/code&gt; method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;splittedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can reverse the array using the &lt;code&gt;.reverse()&lt;/code&gt; like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;splittedWord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is now reversed. But we need to return it to a string without anything separating the characters. So we can use the &lt;code&gt;.join("")&lt;/code&gt; to do that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, let's compare the word we were given initially, and the one we have now reversed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;orginalWord&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;newWord&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-code"&gt;
  &lt;/a&gt;
  Final Code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;orginalWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;splittedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;splittedWord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;orginalWord&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;newWord&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Someone else can solve the problem with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Notice how easy it is to Conquer any problem if you divide it. So basically, algorithm is all about how you can divide and conquer!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Practice, they say breeds perfection. So with that in mind, I am presenting you with the following series to help you get better in your problem solving skills. The series was made a while ago when I decided to embrace algorithm. That decision has improved my programming skills generally and I am sure that it will enhance yours too as well as you chances of winning at technical interviews.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So please, enjoy the series...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o7527WMiaRJmrWMTe/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o7527WMiaRJmrWMTe/giphy.gif" alt="enjoy the series"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-algorithm-to-sharpen-your-problem-solving-skills"&gt;
  &lt;/a&gt;
  25 Algorithm to Sharpen Your Problem Solving Skills
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-7-ways-to-reverse-a-string-15cb"&gt;Algorithm 101: 7 Ways to Reverse a String&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-13-ways-to-count-vowels-in-a-string-de5"&gt;Algorithm 101: 13 Ways to Count Vowels in a String&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-6-ways-to-find-the-most-recurring-character-in-a-string-5036"&gt;Algorithm 101: 6 Ways to Find the Most Recurring Character in a String&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-8-ways-to-capitalize-a-sentence-3bia"&gt;Algorithm 101: 8 Ways to Capitalize a Sentence&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-6-ways-to-check-if-a-word-is-a-palindrome-40a3"&gt;Algorithm 101: 6 Ways to Check if a Word is a Palindrome&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-find-hamming-distance-45mo"&gt;Algorithm 101: 3 Ways to Find Hamming Distance&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-6-ways-to-find-the-longest-word-in-a-sentence-3d89"&gt;Algorithm 101: 6 Ways to Find the Longest Word in a Sentence&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-9-ways-to-search-and-replace-a-word-24jk"&gt;Algorithm 101: 9 Ways to Search and Replace a Word&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-check-if-two-words-are-anagrams-1j6l"&gt;Algorithm 101: 3 Ways to Check If Two Words are Anagrams&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-create-pig-latin-513m"&gt;Algorithm 101: 3 Ways to Create Pig Latin&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-check-if-two-sentences-are-anagrams-55jc"&gt;Algorithm 101: 3 Ways to Check if Two Sentences are Anagrams&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-array-chunking-in-3-ways-1ank"&gt;Algorithm 202: Array Chunking in 3 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-array-merging-without-duplicates-in-4-ways-17h3"&gt;Algorithm 202: Array Merging Without Duplicates in 4 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-falsy-bouncer-in-4-ways-36p4"&gt;Algorithm 202: Falsy Bouncer in 4 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-where-i-belong-in-3-ways-1chk"&gt;Algorithm 202: Where I Belong in 3 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-reverse-an-integer-24gn"&gt;Algorithm 101: 3 Ways to Reverse an Integer&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-3-ways-to-sum-a-range-of-values-5g93"&gt;Algorithm 202: 3 Ways to Sum a Range of Values&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-my-interview-question-grouping-anagrams-in-3-ways-49i4"&gt;Algorithm 202 (My Interview Question): Grouping Anagrams in 3 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-4-ways-to-fizzbuzz-a-single-number-380d"&gt;Algorithm 101: 4 Ways to FizzBuzz a Single Number&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-2-ways-to-fizzbuzz-a-range-of-numbers-8f8"&gt;Algorithm 101: 2 Ways to FizzBuzz a Range of Numbers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-get-the-fibonacci-sequence-1i1c"&gt;Algorithm 101: 3 Ways to Get the Fibonacci Sequence&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-2-ways-to-find-the-largest-product-yielded-by-3-integers-fpf"&gt;Algorithm 101: 2 Ways to Find the Largest Product Yielded by 3 Integers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-interview-question-2-ways-to-determine-if-2-words-are-isomorphic-11ap"&gt;Algorithm 101 (Interview Question): 2 Ways to Determine if 2 Words are Isomorphic &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-interview-question-matching-parenthesis-in-2-ways-3381"&gt;Algorithm 202 (Interview Question): Matching Parenthesis in 2 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/hackerrank-sock-merchant-1cgh"&gt;Algorithm 202: Sock Merchant&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/66c2LdxdRxu4E/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/66c2LdxdRxu4E/giphy.gif" alt="BONUS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  BONUS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/how-many-tutorial-before-i-become-a-pro-newbie-asks-1fa"&gt;How Many Tutorials Before I become a Pro? - Newbie Asks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/3-things-to-help-you-land-your-first-software-engineering-role-46hn"&gt;3 Things to Help You Land Your First Software Engineering Job&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;With the forgoing, you can see that algorithm isn't as difficult as it looks. Basically, it is all about solving day to day problems. However without practicing, it will not be easy to solve problems easily.&lt;/p&gt;

&lt;p&gt;So I encourage you to follow and practice with the algorithm series presented above for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/EBEREGIT/Algorithms"&gt;Check out some of the solutions on github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>algorithms</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Video SDK Embed: Low-Code Prebuilt SDK 1.0 | videosdk.live</title>
      <author>videosdk.live</author>
      <pubDate>Mon, 19 Jul 2021 10:45:36 +0000</pubDate>
      <link>https://dev.to/videosdk/video-sdk-embed-low-code-prebuilt-sdk-1-0-videosdk-live-46e6</link>
      <guid>https://dev.to/videosdk/video-sdk-embed-low-code-prebuilt-sdk-1-0-videosdk-live-46e6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#now-building-a-video-conferencing-solution-is-as-easy-as-ordering-your-next-pizza-online"&gt;
  &lt;/a&gt;
  Now Building a Video Conferencing Solution Is As Easy As Ordering Your Next Pizza Online.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#presenting-you-the-prebuilt"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Presenting you the Prebuilt&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5bZ7yJLo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/video-sdk-linkedin-cover.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5bZ7yJLo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/video-sdk-linkedin-cover.jpg" alt="Video SDK Embed: Low-Code Prebuilt SDK 1.0"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following our announcement on launching the pre-built in the previous blog, we are excited to deliver the manual for the same. This blog will get the readers up and running with the pre-built in no time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-embed-video-calls-using-the-videosdklive-prebuilt"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How to embed video calls using the Videosdk.live pre-built&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Embedding a video call to your application becomes easy with Videosdk.live. With our Pre-built, you can add video calls on your website and application with just a few lines of code and nothing could be simpler than this. You can share URLs to the participants for the video calls and accommodate more than 5000 people over the same call.&lt;/p&gt;

&lt;p&gt;We provide you with a free set-up to experience how to use our prebuilt so you can make the best of it. We also offer you 10,000 minutes, free every month.&lt;/p&gt;

&lt;p&gt;Prebuilt SDK enables the opportunity to integrate real-time communication SDK without writing explicit code. It supports all modern javascript frameworks such as React JS, Vue, and Angular including Vanilla JS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#to-get-started-follow-the-steps"&gt;
  &lt;/a&gt;
  &lt;strong&gt;To get started, follow the steps&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;For better understanding, we have divided the prebuilt setup into few steps. Each step describes the code snippet that one needs to use while constructing integrating the SDK.&lt;/p&gt;

&lt;p&gt;The prebuilt has codes that sometimes become difficult for a fresher or an inexperienced developer. In that case, one can take the help of a developer to configure the setup. In aid, you can always reach us, we provide 24/7 customer support for our clients.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-calls-with-videosdklive-offer-users-amazing-features-with-quality-as-our-prior-most-concern"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Video calls with Videosdk.live offer users amazing features with quality as our prior most concern.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;10,000 minutes free each month&lt;/li&gt;
&lt;li&gt;Participant capacity up to 5,000&lt;/li&gt;
&lt;li&gt;End-to-end encrypted calls&lt;/li&gt;
&lt;li&gt;HIPAA Compliance in enterprise mode&lt;/li&gt;
&lt;li&gt;HD and Full HD Video calls&lt;/li&gt;
&lt;li&gt;Audio support of 16kHz to 48kHz&lt;/li&gt;
&lt;li&gt;360 Spatial Audio&lt;/li&gt;
&lt;li&gt;Intelligence Active Speaker Switch&lt;/li&gt;
&lt;li&gt;Real-time messaging&lt;/li&gt;
&lt;li&gt;Cloud recording&lt;/li&gt;
&lt;li&gt;Whiteboard and poll support&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's begin with the prebuilt setup. Read all the steps carefully before installing one in your application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-0-generate-access-token-in-node-js"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 0:&lt;/strong&gt; Generate access token in Node JS
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Access token generation (server-side code)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An access token is required to authenticate with Videosdk and make any API calls. You can generate one with the _ &lt;strong&gt;API key&lt;/strong&gt; _ and _ &lt;strong&gt;secret&lt;/strong&gt; _ mentioned in your developer portal at the Videosdk console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require("express");
const jwt = require("jsonwebtoken");
const cors = require("cors");
const request = require("request");

const app = express();
const port = 9000;
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

app.get("/get-token", (req, res) =&amp;gt; {
  const API_KEY = process.env.ZUJONOW_API_KEY;
  const SECRET_KEY = process.env.ZUJONOW_SECRET_KEY;
  const options = { expiresIn: "10m", algorithm: "HS256" };
  const payload = {
    apikey: API_KEY,
    permissions: ["allow_join", "allow_mod", "ask_join"], // Trigger permission.
  };
  const token = jwt.sign(payload, SECRET_KEY, options);
  res.json({ token });
});

app.listen(port, () =&amp;gt; {
  console.log(`Example app listening at http://localhost:${port}`);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The available permissions are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;_ &lt;strong&gt;allow_join&lt;/strong&gt; _: A participant will be permitted entry without request&lt;/li&gt;
&lt;li&gt;_ &lt;strong&gt;ask_join&lt;/strong&gt; _: A participant will not be permitted entry without request&lt;/li&gt;
&lt;li&gt;_ &lt;strong&gt;allow_mod&lt;/strong&gt; _: Allow participant to enable/disable other participant’s mic/ webcam&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The generated token must be sent in the _ &lt;strong&gt;Authorization&lt;/strong&gt; _ header for all API calls and it should also be used with the &lt;strong&gt;ZujoSDK.config(token&lt;/strong&gt;) method.&lt;/p&gt;

&lt;p&gt;After the initial step of access token generation, one reaches the next or the first step, creating or joining the meeting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-create-or-join-the-meeting"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 1: Create or join the meeting&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Get a meeting ID for a new meeting or validate an existing meeting ID to join a meeting. Below mentioned are two code snippets, where one is for a new meeting and the other one is for an existing meeting for joining.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a new meeting ID&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.post("/create-meeting/", (req, res) =&amp;gt; {
  const token = req.body.token;
  const ZUJONOW_API_ENDPOINT = `${ZUJONOW_API_ENDPOINT}/api/meetings`;

  const options = {
    method: "POST",
    headers: {
      Authorization: token,
    },
  };

  fetch(ZUJONOW_API_ENDPOINT, options)
    .then((response) =&amp;gt; response.json())
    .then((result) =&amp;gt; res.json(result)) // result will contain meetingId
    .catch((error) =&amp;gt; throw error);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OR&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Validate existing meeting ID for joining&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.get("/validate-meeting/:token", (req, res) =&amp;gt; {
  const token = req.params.token;
  const ZUJONOW_API_ENDPOINT = `${ZUJONOW_API_ENDPOINT}/api/meetings`;

  const options = {
    method: "POST",
    headers: {
      Authorization: token,
    },
  };

  fetch(ZUJONOW_API_ENDPOINT, options)
    .then((response) =&amp;gt; response.json())
    .then((result) =&amp;gt; res.json(result)) // result will contain meetingId
    .catch((error) =&amp;gt; throw error);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These two code snippets are the initial ones taking you further to the next part of the prebuilt, where you need to install the prebuilt in the web application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2: Install prebuilt SDK in your Web app&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One can install the prebuilt in your application by using either the &lt;strong&gt;script&lt;/strong&gt; or the &lt;strong&gt;npm package manager.&lt;/strong&gt; Please use the installation method suitable for your project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting up prebuilt SDK using&lt;/strong&gt; _ &lt;strong&gt;&lt;/strong&gt; _&lt;/p&gt;

&lt;p&gt;The easiest way to get started is by just adding our prebuilt script to your website.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script src="https://sdk.videosdk.live/embedded/index.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OR&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting up prebuilt SDK using NPM package manager&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another way is by installing _ &lt;strong&gt;&lt;a class="mentioned-user" href="https://dev.to/videosdk"&gt;@videosdk&lt;/a&gt;
.live/js-prebuilt&lt;/strong&gt; _ in your app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @videosdk.live/js-prebuilt

#OR#

yarn add @videosdk.live/js-prebuilt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Heading towards the final steps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3: Add script into your application&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Initialize _ &lt;strong&gt;VideoSDKMeeting&lt;/strong&gt; _ on the page where you want to start the meeting&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const videoMeeting = new VideoSDKMeeting();

const videoMeetingSpecs = {
  micEnabled: true,
  webcamEnabled: true,
  name: "/* NAME OF PARTICIPANT */",
  meetingId: "/* MEETING ID */",
  redirectOnLeave: "/* REDIRECT ON LEAVE */",
  chatEnabled: true,
  screenShareEnabled: true,
  pollEnabled: true,
  whiteBoardEnabled: true,
  participantCanToggleSelfWebcam: true,
  participantCanToggleSelfMic: true,
  raiseHandEnabled: true,
  token: "/* YOUR TOKEN */",
  containerId: null,
};

videoMeeting.init(videoMeetingSpecs);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just copy the script and paste it into your application on the page where you want the meeting to take place.&lt;/p&gt;

&lt;p&gt;Hold on! There is one final step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4: Run the Application&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once call _ &lt;strong&gt;init&lt;/strong&gt; _ and run the application, you will be able to see the meeting screen.&lt;/p&gt;

&lt;p&gt;Run the application with the prebuilt. Here is the video call API on your application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That’s it. You made it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Send the invite code to the participants or just open the same page in multiple tabs to join the meeting and appreciate yourself investing time on worthwhile goals.&lt;/p&gt;

&lt;p&gt;Connect with us. We are happy to serve you!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#find-our-documentation-here"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Find our documentation here:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;[&lt;/p&gt;

&lt;p&gt;Quickstart for Prebuilt JS | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;videosdk.live tutorials will help you to deep dive into details of all the SDK and API. We tried to include example of all the possible programming langaguges.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gyjQAFY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/img/videosdklive-thumbnail.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gyjQAFY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/img/videosdklive-thumbnail.jpg" alt="Video SDK Embed: Low-Code Prebuilt SDK 1.0"&gt;&lt;/a&gt;&lt;br&gt;
](&lt;a href="https://docs.videosdk.live/docs/tutorials/realtime-communication/prebuilt-sdk/quickstart-prebuilt-js"&gt;https://docs.videosdk.live/docs/tutorials/realtime-communication/prebuilt-sdk/quickstart-prebuilt-js&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Setup | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;Using prebuilt sdk&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.videosdk.live/docs/realtime-communication/sdk-reference/prebuilt-sdk-js/setup"&gt;Launching: Prebuilt Video SDK for developers 1.0&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-10000-minutes-free-every-month"&gt;
  &lt;/a&gt;
  &lt;strong&gt;🚀Get 10,000 minutes free every month🚀&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;(&lt;a href="https://www.videosdk.live"&gt;https://www.videosdk.live&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J2lZAuF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/http://blog.videosdk.live/content/images/2021/07/Untitled-design--7--1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J2lZAuF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/http://blog.videosdk.live/content/images/2021/07/Untitled-design--7--1.gif" alt="Launching: Prebuilt Video SDK for developers 1.0"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>devops</category>
      <category>android</category>
      <category>productivity</category>
    </item>
    <item>
      <title>🚀 Launching: Prebuilt Video SDK for developers 1.0 | videosdk.live</title>
      <author>videosdk.live</author>
      <pubDate>Mon, 19 Jul 2021 10:37:47 +0000</pubDate>
      <link>https://dev.to/videosdk/launching-prebuilt-video-sdk-for-developers-1-0-videosdk-live-39eh</link>
      <guid>https://dev.to/videosdk/launching-prebuilt-video-sdk-for-developers-1-0-videosdk-live-39eh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#immensely-glad-we-launch-our-prebuilt"&gt;
  &lt;/a&gt;
  Immensely glad, we launch our pre-built!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E52i0zmT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/Integrate-It-Anywhere.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E52i0zmT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/Integrate-It-Anywhere.jpg" alt="Launching: Prebuilt Video SDK for developers 1.0"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The modern world demands technologies out of the box. Each day a tech company announces something new to keep the community inclined and interested in their product. Altogether, bringing up something new to the users with creativity is the only key to enhance engagement. The good part is that real-time audio and video communication is seeing rapid advancements in the current time. Decades back our community began searching for long-distance modes of communication. Rather it is a corporate firm or a social community, each one seeks video communication.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#invest-10-minutes-shape-your-videocalling-api-with-an-embedded-prebuilt-code-its-that-simple"&gt;
  &lt;/a&gt;
  Invest 10 minutes. Shape your video-calling API with an embedded prebuilt code. It’s that simple!
&lt;/h3&gt;

&lt;p&gt;The easiest one-click video that we use for communication is skillfully curated by the developers. Videosdk.live introduces its API for video calls. Easy to construct, our APIs help developers secure a quality video experience for their clients, with a supportable prebuilt UI.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-idea-that-turned-into-motivation"&gt;
  &lt;/a&gt;
  The idea that turned into motivation
&lt;/h3&gt;

&lt;p&gt;Ever since technology expanded, people have made themselves comfortable with enormous technologies. One such successful technology is easy video conferencing. With several defined features, video conferencing enables communicating with people over a long distance.&lt;/p&gt;

&lt;p&gt;Video conferencing or video calling has been one of the most significant tools for people today. From big corporate conferences to small meetings, from family meetings to one-to-one video calls, each one needs video calling for face-to-face communication. Video conferencing has been a major demand of each industry today to connect with people. A layman user needs just a device and internet to connect to a video conference whereas a developer needs APIs to build a video calling feature for applications to deliver it to the end-user. That made us believe to use our skills for delivering something extraordinary for the developers’ community.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#from-developers-to-developers"&gt;
  &lt;/a&gt;
  From developers to developers
&lt;/h3&gt;

&lt;p&gt;This blog describes how simply a developer can build a video calling API with the help of embedded pre-built SDKs here at Videosdk.live. We have designed this API to minimize, or simply cut down the stress of the development of a product by the developers. Our pre-built UI helps developers to build their products with minimal effort. We here at Videosdk.live believe that our pre-builts can help a developer to curate its product in not more than 10 minutes, making themselves extremely organized and swift. With supremacy in our product pre-builts, assure minimal wastage of resources considering time and costs of development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-videosdklive-prebuilt-sdk"&gt;
  &lt;/a&gt;
  What is Videosdk.live Pre-built SDK?
&lt;/h2&gt;

&lt;p&gt;Videosdk.live brings their embedded pre-built SDK, simple and easy to use, for the developers. Among the various SDKs we offer, this blog describes the embedded pre-built SDK which one can easily substitute for the time taking procedures of integrating a video calling tool. We offer economic, time-efficient pre-built SDKs for developers accomplishing half of their tasks, making their work simpler and fast.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-makes-our-video-calling-apis-a-sure-shot-deal"&gt;
  &lt;/a&gt;
  What makes our Video Calling APIs a sure shot deal
&lt;/h3&gt;

&lt;p&gt;We offer multiple features that emphasize faster delivery of outputs with quality support. Our team works on delivering the best quality support to the developers where everything is designed with simplicity and decorated with modern tech. Here at Videosdk.live, we offer developers some all-time notable assistance.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We offer top &lt;strong&gt;browsing support&lt;/strong&gt; to developers on browsers like Chrome, Edge, Firefox, and Safari, providing flexible support to the users.&lt;/li&gt;
&lt;li&gt;We dispense efficient &lt;strong&gt;support to more than 98% of devices&lt;/strong&gt; , helping developers and users make it a fair deal to use.&lt;/li&gt;
&lt;li&gt;Videosdk.live designs its embedded pre-built SDKs in a &lt;strong&gt;simpler and easy-to-use&lt;/strong&gt; manner, making it a utility even for a fresher or an inexperienced developer.&lt;/li&gt;
&lt;li&gt;We help to create a &lt;strong&gt;one-click workplace&lt;/strong&gt; for video calls, establishing video conferences in one click, enabling a huge participant crowd at once.&lt;/li&gt;
&lt;li&gt;We build a &lt;strong&gt;stronger UI&lt;/strong&gt; for developers so that they can make their work simplified and less time consuming&lt;/li&gt;
&lt;li&gt;Videosdk.live works for &lt;strong&gt;security and privacy&lt;/strong&gt; , all the calls are end-to-end encrypted. We prioritize a user’s privacy of the utmost significance.&lt;/li&gt;
&lt;li&gt;We deliver astounding video calling with &lt;strong&gt;low latency and minimal disturbances,&lt;/strong&gt; which makes it fitter for communication.
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#our-apis-are-super-sleek"&gt;
  &lt;/a&gt;
  Our APIs are super sleek
&lt;/h3&gt;

&lt;p&gt;The Videosdk.live APIs give one an amazing video calling experience to make communication effective. We offer a high-quality video and audio experience for users with any mobile device.&lt;/p&gt;

&lt;p&gt;With our embedded SDK, a developer can embed a video call widget in the web application. It supports 98% of the devices across all platforms and adaptive video calling for better quality calls with low latency. Developers can also customize embedded-SDK to make it more convenient for an application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#experience-a-quick-set-up-of-video-calling-api-with-our-prebuilt-ui"&gt;
  &lt;/a&gt;
  Experience a quick set up of video calling API with our pre-built UI
&lt;/h3&gt;

&lt;p&gt;Build your one-click video calls in just a few minutes. We offer real-time communication with wholesome attributes and alluring audio and video quality. Videosdk.live has always developed its products with technical sustainability and modern creativity. Our attractive video calling SDKs also allow customization as per the developer's needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;High audio quality support&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The pre-built embedded SDKs allow developers to experience high-quality natural audio support with clear voice with no clutter, covering a full sound bandwidth. Get scalable, audio from 16kHz to 48 kHz with 360 spatial audio support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AI-Powered audio mixing and speaker switch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Experience AI-Powered features of voice and audio mixer with intelligent active speaker switch all with a qualitative approach.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Noise and disturbance cancellation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The pre-built allows cancellation of unwanted distractive sounds with its algorithms, making a meeting noise-free and crystal clear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;High video quality standards&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With low latency, the SDK ensures video conferencing of high quality with an adaptive quality supporting 98% of devices. Enjoy resolution scalable up to 2K.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HD and Full HD video calling support&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Enjoy video conferencing with HD and Full HD video conferencing screens, with ultra-wide and enhanced quality screen support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Screensharing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With our embedded pre-built SDK, get the feature of screen sharing, partially or entirely.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Notable recording and chat support&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Record the meetings and use them with the VoD facility. Get in-built chat support, with query raising and other functionalities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bonus activities&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An additional bonus of activities like whiteboard and polls, for education, health, and other use cases.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;These video call APIs are beautifully constructed for users of several industries. The developers as mentioned above get the customization features on hand so that they can curate a video calling feature for the sectors they work for, delivering it for their respective applications.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Easy and simple to use&lt;/li&gt;
&lt;li&gt;Developed with maximum diligence to avoid any sort of glitch&lt;/li&gt;
&lt;li&gt;Flexibility towards device support.&lt;/li&gt;
&lt;li&gt;One-click joining in the meetings&lt;/li&gt;
&lt;li&gt;Secured and encrypted&lt;/li&gt;
&lt;li&gt;Scalable video quality
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#use-cases-of-video-conferencing"&gt;
  &lt;/a&gt;
  Use cases of video conferencing
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Online health consultancy&lt;/li&gt;
&lt;li&gt;E-learning, or education over a long distance&lt;/li&gt;
&lt;li&gt;Social engagements&lt;/li&gt;
&lt;li&gt;Internal and external Business communication&lt;/li&gt;
&lt;li&gt;Religious and motivational sessions
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Videosdk.live is a platform that facilitates multiple features on its video calling API. We offer to build a video calling API in just 10-minutes with our pre-built SDKs. Our eminent features make a developer’s work less stressful. Our team puts all its effort into building products of top-notch quality, delivering the best each time to developers.&lt;/p&gt;

&lt;p&gt;Connect with us and get enriched with more such value content and an everlasting corporate relation.&lt;/p&gt;

&lt;p&gt;Find our documentation here:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Setup | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;Using prebuilt sdk&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.videosdk.live/docs/realtime-communication/sdk-reference/prebuilt-sdk-js/setup"&gt;Launching: Prebuilt Video SDK for developers 1.0&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-10000-minutes-free-every-month"&gt;
  &lt;/a&gt;
  &lt;strong&gt;🚀Get 10,000 minutes free every month🚀&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;(&lt;a href="https://www.videosdk.live"&gt;https://www.videosdk.live&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J2lZAuF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/http://blog.videosdk.live/content/images/2021/07/Untitled-design--7--1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J2lZAuF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/http://blog.videosdk.live/content/images/2021/07/Untitled-design--7--1.gif" alt="Launching: Prebuilt Video SDK for developers 1.0"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>videoconferencingapi</category>
      <category>videosdk</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>All about CSS before and after element. CSS pseudo-elements.</title>
      <author>Modern Web</author>
      <pubDate>Mon, 19 Jul 2021 10:31:51 +0000</pubDate>
      <link>https://dev.to/kunaal438/all-about-css-before-and-after-element-css-pseudo-elements-5g1n</link>
      <guid>https://dev.to/kunaal438/all-about-css-before-and-after-element-css-pseudo-elements-5g1n</guid>
      <description>&lt;p&gt;Hello, welcome. In this article we'll learn about CSS pseudo-elements.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-pseudoelements-"&gt;
  &lt;/a&gt;
  What is pseudo-elements ?
&lt;/h1&gt;

&lt;p&gt;Pseudo-elements allow you to insert content on the page without writing HTML for it. You can make whole content with CSS. But that content is not actually a DOM element.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-before-endraw-and-raw-after-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;:before&lt;/code&gt; and &lt;code&gt;:after&lt;/code&gt;
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nd"&gt;:before&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'this is before element'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'this is after element'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how we make &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; element in CSS. But, How does this will look like in HTML at the end.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  ::before element

  &lt;span class="nt"&gt;&amp;lt;element/&amp;gt;&lt;/span&gt;

  ::after element
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#lets-take-a-example"&gt;
  &lt;/a&gt;
  Let's take a example.
&lt;/h1&gt;

&lt;p&gt;Without before element.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kunaal_kumar/embed/KKmqQxN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;with before and after element.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kunaal_kumar/embed/ZEKyrqJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#content-property"&gt;
  &lt;/a&gt;
  Content property
&lt;/h1&gt;

&lt;p&gt;Now, for &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; elements &lt;code&gt;content&lt;/code&gt; property is very very important. Because, in order to make any pseudo element, you have to give some content. You cannot create element without content. And yes, I am saying this again and again because I forget this thing very often.&lt;/p&gt;

&lt;p&gt;Values for &lt;code&gt;content&lt;/code&gt; property :&lt;/p&gt;

&lt;p&gt;i) &lt;code&gt;a text&lt;/code&gt; :  &lt;code&gt;content: "this is a text";&lt;/code&gt; you can give text as a content.&lt;/p&gt;

&lt;p&gt;ii) &lt;code&gt;image&lt;/code&gt; : &lt;code&gt;content: url(image-path);&lt;/code&gt; You can also give image to the content. But, you cannot change the image size.&lt;/p&gt;

&lt;p&gt;iii) &lt;code&gt;Empty&lt;/code&gt; : &lt;code&gt;content: '';&lt;/code&gt; when you don't won't any text or image to show up. You can make it empty. It use a lot to create designs.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-endraw-or-raw-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;:&lt;/code&gt; or &lt;code&gt;::&lt;/code&gt; ?
&lt;/h1&gt;

&lt;p&gt;Now, we can make an element with single colon &lt;code&gt;:before&lt;/code&gt; or we can use double colon &lt;code&gt;::before&lt;/code&gt;. The only thing, you have to keep in mind is &lt;code&gt;::&lt;/code&gt; double colon is supported by all browsers except Internet explorer 8. So, if you want, internet explorer 8 support. You have to use &lt;code&gt;:&lt;/code&gt; colon.&lt;/p&gt;

&lt;p&gt;So, that's it about pseudo elements. I hope you understood each and everything. If you have doubt or I missed some point let me know in the comments.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#articles-you-may-found-useful"&gt;
  &lt;/a&gt;
  Articles you may found Useful
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/css-position-everything-you-need-for-good-developer-pfh"&gt;CSS Positions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/media-query-everything-you-need-for-responsive-design-b8g"&gt;CSS Media Query&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/display-flex-complete-guide-on-css-flex-box-2021-5bi2"&gt;CSS flex box&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And if you want to improve your webdev skills. You can watch tutorial on &lt;a href="https://youtu.be/ZeY9RicS2js"&gt;Disney+ clone&lt;/a&gt; clone by me. If you like, you can subscribe my youtube channel, and follow me on instagram. I create awesome web contents. [&lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;Subscribe&lt;/a&gt;], [&lt;a href="https://www.instagram.com/modern_web_channel/"&gt;Instagram&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Thanks For reading.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Live Streaming vs Video Conferencing | videosdk.live</title>
      <author>videosdk.live</author>
      <pubDate>Mon, 19 Jul 2021 10:31:03 +0000</pubDate>
      <link>https://dev.to/videosdk/live-streaming-vs-video-conferencing-videosdk-live-283l</link>
      <guid>https://dev.to/videosdk/live-streaming-vs-video-conferencing-videosdk-live-283l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-live-streaming"&gt;
  &lt;/a&gt;
  What is Live Streaming?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Wswp3JR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/video-conf-vs-live-streaming.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Wswp3JR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/video-conf-vs-live-streaming.jpg" alt="Live Streaming vs Video Conferencing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Live streaming refers to the concept of streaming digital video content over the internet. On a Live stream technology, one can watch, create, and share videos content online. It needs an internet connection, a smartphone, or a PC to enable the live streaming activity on a device.&lt;/p&gt;

&lt;p&gt;It is an aid to big corporates and small businesses for branding, marketing, and advancement. Live streaming has become a modern technology to make a digital presence in the community. In contemporary living, going digital is the only way out to make a successful existence. Even live streaming has today been popular with gaming, content creation, and education.&lt;/p&gt;

&lt;p&gt;Live streaming happens to broadcast media online over several social media platforms. A live streamer, at once can stream content over multiple platforms increasing reach with broader visibility. A live stream is organized by a host who invites the viewers to his streaming session. A live stream allows comment and chat facility on an ongoing streaming session. It also allows a huge number of viewers to participate in the stream.&lt;/p&gt;

&lt;p&gt;Live streaming is telecasted with a delay or lag of 5 to 10 seconds for the viewers. It is encoded in different resolutions, enabling the support for Adaptive Bitrate Streaming (ABS) and the good part is that live streaming can be recorded for viewing later using the VoD facility, allowing video playback. It is a boon that with unstable internet connectivity too the streaming on our device doesn’t stop, as it adjusts the viewing quality of the video. Unfortunately, if a viewer faces disconnection, live streaming is a benefit in this case, as it allows playback of the recorded stream.&lt;/p&gt;

&lt;p&gt;Introduction | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;Live streming lets you stream your live videos with just few lines of code. Reach to your audience across the globe.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f40YrG_L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/assets/images/live-streaming-20847dd496d7ef5166746aaec3747f49.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f40YrG_L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/assets/images/live-streaming-20847dd496d7ef5166746aaec3747f49.jpg" alt="Live Streaming vs Video Conferencing"&gt;&lt;/a&gt;&lt;br&gt;
(&lt;a href="https://docs.videosdk.live/docs/live-streaming/intro"&gt;https://docs.videosdk.live/docs/live-streaming/intro&lt;/a&gt;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-video-conferencing"&gt;
  &lt;/a&gt;
  What is Video Conferencing?
&lt;/h2&gt;

&lt;p&gt;Video conferencing is a technology that allows meeting in closed groups with close people. Video conferencing is today a prominent mode of communication in corporate houses. Video conferencing allows connecting people from all around the world on a single screen.&lt;/p&gt;

&lt;p&gt;Video conferencing connects people over a low latency video and audio transmission over IP. It allows talk and chat features over conferencing where people can be verbally communicative and can discuss and generate solutions. A video conference generally has limited participants, who are the ones invited by the host. Generally, video conferencing systems are secured with passcodes initiated by the host for the participants.&lt;/p&gt;

&lt;p&gt;A video conferencing system provides no lag in the delivery of messages to the participants. Under low latency streaming, video conferencing often causes participants a glitch, in case of poor connectivity. When a participant of a conference faces a power cut or a disconnection, the conference immediately stops for him. Concerning, he cannot view the previous discussions. A video conference can only be streamed on-demand when it is recorded.&lt;/p&gt;

&lt;p&gt;Introduction | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;Real-time comunication SDK is built with blend of webRTC and optimised UDP protocol. Our SDK helps developers to add real-time audio and video calls to any mobile app or web application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b-1qr1T2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/assets/images/Zujonow-whitelabel-min-7e7fcd47dedd07f03f4355427a764caf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b-1qr1T2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/assets/images/Zujonow-whitelabel-min-7e7fcd47dedd07f03f4355427a764caf.jpg" alt="Live Streaming vs Video Conferencing"&gt;&lt;/a&gt;&lt;br&gt;
(&lt;a href="https://docs.videosdk.live/docs/realtime-communication/intro"&gt;https://docs.videosdk.live/docs/realtime-communication/intro&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-cases"&gt;
  &lt;/a&gt;
  Use cases
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#live-streaming"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.videosdk.live/"&gt;LIVE STREAMING&lt;/a&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Virtual summits and events&lt;/li&gt;
&lt;li&gt;Public announcements&lt;/li&gt;
&lt;li&gt;Webinars&lt;/li&gt;
&lt;li&gt;Gaming&lt;/li&gt;
&lt;li&gt;Education&lt;/li&gt;
&lt;li&gt;Health care
&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#video-conferencing"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.videosdk.live/"&gt;VIDEO CONFERENCING&lt;/a&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Business communication&lt;/li&gt;
&lt;li&gt;Interviews&lt;/li&gt;
&lt;li&gt;Education&lt;/li&gt;
&lt;li&gt;Social media conversations&lt;/li&gt;
&lt;li&gt;Retail&lt;/li&gt;
&lt;li&gt;Telehealth
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;What does the blog explain?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This blog explains how live streaming contrasts with video conferencing. Both live streaming and video conferencing are real-time technologies. These are the modern technologies of the digitally trending community. Beyond par, we are increasingly consuming these forefront advancements. They have been among the most useful communication tools in recent times. In this blog, we will learn how these technologies have their pros and cons and how they are similar to and different from each other.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Live streaming - Pros and Cons&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROS&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A huge number of participants can join a live stream&lt;/li&gt;
&lt;li&gt;A live stream also works in an unstable internet connection&lt;/li&gt;
&lt;li&gt;It allows the video playback option&lt;/li&gt;
&lt;li&gt;A live stream can be recorded in HD quality&lt;/li&gt;
&lt;li&gt;It supports on-demand services&lt;/li&gt;
&lt;li&gt;A live stream supports streaming over multiple platforms at once&lt;/li&gt;
&lt;li&gt;Supports screen sharing&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;CONS&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Two-way communication is difficult&lt;/li&gt;
&lt;li&gt;It does not support participants’ visibility to the host&lt;/li&gt;
&lt;li&gt;A chat box is available only for comments
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Video conferencing - Pros and cons&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROS&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Possible two-way communication&lt;/li&gt;
&lt;li&gt;Supports screen sharing&lt;/li&gt;
&lt;li&gt;Allotted space for participants’ visibility&lt;/li&gt;
&lt;li&gt;Saves time and money&lt;/li&gt;
&lt;li&gt;Easy scheduling of meetings&lt;/li&gt;
&lt;li&gt;Real-time communication without lags&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;CONS&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A limited number of participants can join&lt;/li&gt;
&lt;li&gt;Poor video quality in case of unstable internet connection&lt;/li&gt;
&lt;li&gt;Limited streaming platform support
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Similarities between live streaming and video conferencing&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Live-action:&lt;/strong&gt; Both the technologies work on live platforms. They stream the content live to the viewers, where the viewers can chat and converse to bring out conclusions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Involvement of participants:&lt;/strong&gt; These technologies are designed to draw maximum engagement. Participants are allowed to join the stream with their audio and video by the hosts.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Screenshare:&lt;/strong&gt; Both live streaming and video conferencing allow screen sharing options, displaying pre-recorded content and images to the screen.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Chat features:&lt;/strong&gt; These technologies allow chat options for the participants in ongoing streaming. The participants can comment/converse with the host via chatbox.
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Dissimilarities between live streaming and video conferencing&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Viewer screen space-&lt;/strong&gt; Live streaming does not allow viewers to share screen space with the live streamer. One can only communicate via chat. Whereas in video conferencing, the participants have an allotted box where they can be seen as well as can see the other participants in the meeting.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Accessibility-&lt;/strong&gt; Live streaming is accessible to a huge number of viewers at once, also on different platforms. Whereas, in video conferencing, only limited participants are allowed into the meeting, making it a kind of closed group meeting.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Communication ease-&lt;/strong&gt; There is an ease of communication with video conferencing due to a limited audience in the meeting, where everyone can put their points to conclude. In a live stream, no conclusion can be derived as it is merely a stream where people can only watch certain content and comment on the same.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Scalability-&lt;/strong&gt; A live stream is encoded in several resolutions to make it available in a manageable quality for each device type and its connectivity. Whereas in video conferencing, the video outcome becomes poor due to low latency.
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-better-option"&gt;
  &lt;/a&gt;
  What is a better option?
&lt;/h2&gt;

&lt;p&gt;Both video conferencing and live streaming have their benefits and different use cases. It all depends on one’s need for the time. All you need is a mobile device and an internet connection whenever you think of using them.&lt;/p&gt;

&lt;p&gt;For instance, a company has launched a product for which it is looking for a public announcement, and also to increase its branding and market value. In this case, the company opts for live streaming where it makes an announcement that gets into the knowledge of millions of viewers. The company excels in its strategy with live streaming. In the same situation, if the company opts for video conferencing, it may convey its product to only some thousands of people, which also tends to be costly as well as gives a low reach to the product. These states live streaming to be a better option for announcements and huge engagements.&lt;/p&gt;

&lt;p&gt;Now for instance, if a company has to make some decisions with the team, which does not require external public at all. In this case, the company opts for video conferencing. The foremost reason is that video conferencing technology works in real-time, where the messages are delivered instantly to the receiver. This technology also keeps a window for each participant, which leads to the active participation of each one during the meet. Video conferencing is favorably a better option for small group communication, where the general external public is not kept as an ideal viewer.&lt;/p&gt;

&lt;p&gt;(&lt;a href="https://www.videosdk.live/"&gt;https://www.videosdk.live/&lt;/a&gt;)&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>devops</category>
      <category>android</category>
      <category>productivity</category>
    </item>
    <item>
      <title>What is Video on Demand? | videosdk.live</title>
      <author>videosdk.live</author>
      <pubDate>Mon, 19 Jul 2021 10:23:13 +0000</pubDate>
      <link>https://dev.to/videosdk/what-is-video-on-demand-videosdk-live-j55</link>
      <guid>https://dev.to/videosdk/what-is-video-on-demand-videosdk-live-j55</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KHXCOSVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/What-is-VOD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KHXCOSVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/What-is-VOD.png" alt="What is Video on Demand?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video on Demand (VoD) creates an online video library for the viewers, which they can access anytime at their ease with any compatible device. Unlike the traditional media broadcasting channels, which demanded viewers to watch videos at the time of broadcast only, VoD is different. It allows viewers to view content at their comfort.&lt;/p&gt;

&lt;p&gt;Video on Demand technology, the future of online content delivery has witnessed a rapid engagement in the current times. Today, the majority of the content is found attractive when it is in video format. There comes the idea of VoD. VoD is an abbreviation for Video on Demand. This system provides the technology of storing video content on the cloud in a compressed file format. Researchers have found that more than a written article or an e-mail, today, video content looks more alluring to the reader who has turned into a viewer. It is well said that whatever we visualize has more worth than whatever we read or listen to. The content visualized always holds more significance.&lt;/p&gt;

&lt;p&gt;With the increasing global population, the use of smartphones and internet connection has also increased. This has in turn led to an increase in demand for online digital content. Today the businesses have witnessed a rise in demand for videos, and to assure you, this is a never-ending demand which is creating endless opportunities. Video on Demand is a technology that serves to reap benefits to the content creators as well. It allows users to view videos at their comfort, whenever they want, and in whatsoever manner they choose to view them. Video on Demand allows flexible viewing facilities to the users. This blog explains the term Video on Demand in detail, about what it is, how it works, and its benefits.&lt;/p&gt;

&lt;p&gt;On a Video on Demand platform, one can play videos, seek the video forward and backward, pause and play, and watch later. It helps in managing videos, and deliver the content with the help of CDNs, which helps in providing fast and reliable content delivery to the businesses. Professionally, it also helps businesses to have full control over the content delivery and its distribution. It helps to customize the content delivery for businesses to deliver the apt data consensual by them. It sets an arrangement of pre-recorded data, which can be reviewed in the future.&lt;/p&gt;

&lt;p&gt;Often live streaming and VoD are considered similar but in reality, they are pretty different. Let us understand what is live streaming.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-live-streaming"&gt;
  &lt;/a&gt;
  What is Live Streaming?
&lt;/h2&gt;

&lt;p&gt;Live streaming is a concept that allows businesses to stream their content online. Viewers can watch the content on a real-time basis. The viewers can watch the streaming which is happening live and can also watch them later, if recorded, using VoD. On a live stream, the viewers can also pause, play, and make the videos play backward. Live streaming is valuable as it connects to its customers, creating a live bond with them. It also allows live chat with the viewers. VoD lacks a live chat facility, though it allows a well-versed playback video facility for the same recorded live stream.&lt;/p&gt;

&lt;p&gt;Live streaming helps businesses to make announcements for the public, media releases, and press conferences to increase their PR activity with the external environment. Live streaming is a beneficial tool as it helps businesses to boost their marketing and branding strategies too. A live stream can be later accessed as a VoD. the stream can also be accessed later with the help of the VoD facility.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-choose-an-ideal-video-on-demand-facility"&gt;
  &lt;/a&gt;
  How to choose an ideal Video on Demand facility?
&lt;/h3&gt;

&lt;p&gt;Choosing an ideal VoD facility is a must as it helps in making engagements better. The viewers are generally consumer-oriented which leads to a raised concern of security and a good system workforce, which doesn’t lag or create unusual issues for the general viewers. Analyzing business trends, good branding is necessary, but in the current trends, businesses have turned customer-oriented, where the features have been designed in accordance to the customer ease.&lt;/p&gt;

&lt;p&gt;Videosdk.live makes the client experience better. We infuse all the features of live streaming as well as video-on-demand at one platform. We make your experience worth sharing with others. We keep up with a huge product range, starting from&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Customizable API and SDK with UI library&lt;/li&gt;
&lt;li&gt;Low-latency scalable live streaming&lt;/li&gt;
&lt;li&gt;Video-on-demand facility&lt;/li&gt;
&lt;li&gt;Content Delivery Networks and more&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;All these products we serve to our clients on a single platform enhancing the consumer-development opportunities and user-friendly approach.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#videosdklive-offers-clients-amazing-video-on-demand-facilities"&gt;
  &lt;/a&gt;
  Videosdk.live offers clients amazing video on demand facilities
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;(1) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/intro"&gt;Whitelabel&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can host your videos on live streaming with the Whitelabel facility, engaging the screen with your branding and logo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(2) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/tutorials/stream-video-files-tutorial"&gt;Scalable streaming&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We cater to flawless, uninterrupted streaming, with the stream recording facility. We help you engage a million users&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(3) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/storage-api-reference/auth"&gt;Compatibility&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We are compatible with 98% of devices, including Android, iOS, and more. All we aim is to provide maximum engagement to your application&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(4) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/storage-api-reference/create-new-url"&gt;Customizable APIs and SDKs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Videosdk.live develop APIs and SDKs designed on the demand of its clients in any manner they wish&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(5) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/storage-api-reference/upload-file"&gt;Video on demand facility&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With the facility of live streaming, videosdk.live also allows a flexible VoD feature, where the clients can view the content at their ease.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(6) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/storage-api-reference/list-all-files"&gt;Video playback&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We also offer a facility of video playback, where the viewers get an option to loop the video, play and pause, and make their video fasten or slow as for their comfort.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(7) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/encoding-api-reference/auth"&gt;Secured accessibility&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We ensure secured access to your platform for your customers to make a better engagement platform for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(8) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/encoding-api-reference/create-encoding-job"&gt;Adaptive Live Streaming&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Videosdk.live caters to scalable streaming based on the device, supportive quality, and  internet bandwidth&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(9) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/encoding-api-reference/list-all-encoding-jobs"&gt;Adaptive Video Streaming&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We also provide services for streaming videos, with effective scalability and VoD facility, supporting the majority of devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(10) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/encoding-api-reference/get-encoding-job-details"&gt;Encoding&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Videosdk.live helps in encoding videos and images, compressing them into digital format, saving them as fluid data making them compatible with all mobile devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(11) &lt;a href="https://docs.videosdk.live/docs/live-streaming/api-reference/create-live-stream"&gt;Hosting&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We provide the facility of hosting videos, which are uploaded by the clients with us. We help in uploading the videos and hosting them to online platforms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(12) &lt;a href="https://docs.videosdk.live/docs/live-streaming/api-reference/get-live-stream"&gt;Content Delivery Network&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We provide a global CDN with global geo-replication and edge location delivery. Protected with DDos, we ensure faster delivery with enterprise-grade security.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(13) &lt;a href="https://docs.videosdk.live/docs/live-streaming/api-reference/update-live-stream"&gt;Multi-platform Streaming&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Stream live on several social media platforms all at once. Enjoy going live, consuming less time. Build a strong branding strategy with us.&lt;/p&gt;

&lt;p&gt;Videosdk.live is an ideal platform for users to develop their streaming platforms flawless with no extra effort. We customize our APIs and SDKs according to client preferences to increase their app engagement. The CDNs we use for storing the digital content are exclusively secured enabling reliable and scalable streaming.Videosdk.live excels in its features.&lt;/p&gt;

&lt;p&gt;Apart from the above facilities, we also deliver some additional features making ourselves a reliable platform to use. Connect with us and explore what you never explored before.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Reach us and get enriched with more such value content and an everlasting business corporate relation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#find-our-documentation-here"&gt;
  &lt;/a&gt;
  Find our documentation here
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#video-on-demand"&gt;
  &lt;/a&gt;
  Video On Demand
&lt;/h3&gt;

&lt;p&gt;Introduction | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;Video-on-demand API provides end-to-end solution for building scalable on demand video platform for millions of the users.&lt;br&gt;
(&lt;a href="https://docs.videosdk.live/docs/video-on-demand/intro"&gt;https://docs.videosdk.live/docs/video-on-demand/intro&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#live-streaming"&gt;
  &lt;/a&gt;
  Live Streaming
&lt;/h3&gt;

&lt;p&gt;Introduction | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;Live streming lets you stream your live videos with just few lines of code. Reach to your audience across the globe.&lt;/p&gt;

&lt;p&gt;(&lt;a href="https://docs.videosdk.live/docs/live-streaming/intro"&gt;https://docs.videosdk.live/docs/live-streaming/intro&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reach-out-to-us-we-are-the-happiest-to-serve-you"&gt;
  &lt;/a&gt;
  Reach out to us, we are the happiest to serve you
&lt;/h3&gt;

&lt;p&gt;Contact Us | videosdk.live&lt;/p&gt;

&lt;p&gt;Contact us for low latency live streaming, video on demand APIs&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JSS-eCPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.videosdk.live/videosdklive-thumbnail.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JSS-eCPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.videosdk.live/videosdklive-thumbnail.jpg" alt="What is Video on Demand?"&gt;&lt;/a&gt;&lt;br&gt;
(&lt;a href="https://videosdk.live/contact"&gt;https://videosdk.live/contact&lt;/a&gt;)&lt;/p&gt;

</description>
      <category>videoondemand</category>
      <category>vod</category>
      <category>livestreaming</category>
      <category>livestream</category>
    </item>
    <item>
      <title>Video On Demand SDK (VoD) | videosdk.live</title>
      <author>videosdk.live</author>
      <pubDate>Mon, 19 Jul 2021 10:15:44 +0000</pubDate>
      <link>https://dev.to/videosdk/video-on-demand-vod-videosdk-live-5476</link>
      <guid>https://dev.to/videosdk/video-on-demand-vod-videosdk-live-5476</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dYxmdQqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/06/adaptive-video-streaming.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dYxmdQqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/06/adaptive-video-streaming.jpg" alt="Introduction to Video On Demand"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video-on-demand API provides end-to-end solution for building scalable on-demand video platforms for millions of users.&lt;/p&gt;

&lt;p&gt;VOD APIs are divided into three major part&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-storage-api"&gt;
  &lt;/a&gt;
  1. Storage API
&lt;/h3&gt;

&lt;p&gt;These APIs are useful to store media on cloud with ease. It fetches all the meta-information with video records to make developer life much easy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-encoding-api"&gt;
  &lt;/a&gt;
  2. Encoding API
&lt;/h3&gt;

&lt;p&gt;Encoding API compresses video into multiple resolutions from 240p to 4K and also make it supported in 98% of the devices across the globe.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-streaming-api"&gt;
  &lt;/a&gt;
  3. Streaming API
&lt;/h3&gt;

&lt;p&gt;Streaming API distributes all the media files across the globe on more than 150 edge locations.&lt;/p&gt;

&lt;p&gt;Find out more about it&lt;/p&gt;

&lt;p&gt;Introduction | VideoSDK.live Documentation&lt;/p&gt;

&lt;p&gt;Video-on-demand API provides end-to-end solution for building scalable on demand video platform for millions of the users.&lt;/p&gt;

&lt;p&gt;(&lt;a href="https://docs.videosdk.live/docs/video-on-demand/intro"&gt;https://docs.videosdk.live/docs/video-on-demand/intro&lt;/a&gt;)&lt;/p&gt;

</description>
      <category>vodplatform</category>
      <category>vodcompanies</category>
      <category>videostreaming</category>
    </item>
    <item>
      <title> Real time communication SDK | videosdk.live</title>
      <author>videosdk.live</author>
      <pubDate>Mon, 19 Jul 2021 09:53:42 +0000</pubDate>
      <link>https://dev.to/videosdk/real-time-communication-sdk-videosdk-live-1i0a</link>
      <guid>https://dev.to/videosdk/real-time-communication-sdk-videosdk-live-1i0a</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lcaJPzqK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/06/unlimited-host.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lcaJPzqK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/06/unlimited-host.jpg" alt="Introduction to Real-time communication SDK"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Real-time communication SDK is built with blend of webRTC and optimised UDP protocol. Our SDK helps developers to add real-time audio and video calls to any mobile app or web application.&lt;/p&gt;

&lt;p&gt;With our embedded-sdk, you can embedded a video call widget in your web application. It supports 98% of the devices across all platforms and adaptive video calling for better quality calls with low latency. Developers can also customise embeded-sdk to make it more convenient for your application.&lt;/p&gt;

&lt;p&gt;Our research team has worked hard to handled all the edge cases so you just have to focus on what matters.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ways-to-start-developing"&gt;
  &lt;/a&gt;
  Ways to start developing
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-dashboard"&gt;
  &lt;/a&gt;
  1. Dashboard
&lt;/h3&gt;

&lt;p&gt;Create or schedule meetings instantly using dashboard and try it out.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-embedded-sdk"&gt;
  &lt;/a&gt;
  2. Embedded SDK
&lt;/h3&gt;

&lt;p&gt;Best way to start is embedded a working video call widget in your app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-programmable-api"&gt;
  &lt;/a&gt;
  3. Programmable API
&lt;/h3&gt;

&lt;p&gt;Programmable API enables opportunity to create and manage rooms directly from your backend server.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-custom-meetings-interface-sdk"&gt;
  &lt;/a&gt;
  4. Custom Meetings Interface SDK
&lt;/h3&gt;

&lt;p&gt;Our front-end SDKs provides fine control to design custom user interface and experience specifically for your needs.&lt;/p&gt;

&lt;p&gt;Find out more about it in documentation.&lt;/p&gt;

&lt;p&gt;Introduction | VideoSDK.live Documentation&lt;/p&gt;

&lt;p&gt;Real-time comunication SDK is built with blend of webRTC and optimised UDP protocol. Our SDK helps developers to add real-time audio and video calls to any mobile app or web application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b-1qr1T2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/assets/images/Zujonow-whitelabel-min-7e7fcd47dedd07f03f4355427a764caf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b-1qr1T2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/assets/images/Zujonow-whitelabel-min-7e7fcd47dedd07f03f4355427a764caf.jpg" alt="Introduction to Real-time communication SDK"&gt;&lt;/a&gt;&lt;br&gt;
(&lt;a href="https://docs.videosdk.live/docs/realtime-communication/intro"&gt;https://docs.videosdk.live/docs/realtime-communication/intro&lt;/a&gt;)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>android</category>
      <category>ios</category>
      <category>react</category>
    </item>
    <item>
      <title>Onstro-DB a fast DB</title>
      <author>Adwaith Rajesh</author>
      <pubDate>Mon, 19 Jul 2021 09:37:11 +0000</pubDate>
      <link>https://dev.to/adwaithrajesh/onstro-db-a-fast-db-5bn8</link>
      <guid>https://dev.to/adwaithrajesh/onstro-db-a-fast-db-5bn8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install onstro-db
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#lets-see-how-fast-it-is"&gt;
  &lt;/a&gt;
  Let's see how fast it is.
&lt;/h3&gt;

&lt;p&gt;In this example, we can make a DB with 4 columns and in which 2 columns have a default value. Which are added during &lt;strong&gt;Runtime&lt;/strong&gt;.&lt;br&gt;
We will be adding 10,000 values to the DB and check how fast it is.&lt;/p&gt;

&lt;p&gt;The test code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;onstrodb&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OnstroDb&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="n"&gt;test_schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"str"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"required"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"int"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"required"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;"place"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"str"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"default"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"canada"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;"alive"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"bool"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"default"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OnstroDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;in_memory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;schema&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;test_schema&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# generate the data to insert
&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10_000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"ad&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# insert the data into the DB
&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Elapsed Time: "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we first create all the data we want to insert and we time the insertion process.&lt;/p&gt;

&lt;p&gt;Here are the results.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Elapsed Time:  1.077016830444336
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Onstro-Db supports full CRUD operation, comes with a simple CLI, has a strict schema, and also prevents data duplication by default.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#as-you-can-see-this-thing-is-fast-to-know-more-visit-the-github-repo-here"&gt;
  &lt;/a&gt;
  As you can see this thing is fast. To know more visit the Github repo &lt;a href="https://github.com/Adwaith-Rajesh/onstro-db"&gt;here&lt;/a&gt;.
&lt;/h3&gt;

&lt;p&gt;Star and follow the repo for future updates.&lt;/p&gt;

</description>
      <category>python</category>
      <category>pandas</category>
      <category>database</category>
    </item>
    <item>
      <title>New benchmark: Mezon Router is up to 480 times faster than Leaf Router</title>
      <author>alexdodonov</author>
      <pubDate>Mon, 19 Jul 2021 09:20:32 +0000</pubDate>
      <link>https://dev.to/alexdodonov/new-benchmark-mezon-router-is-up-to-480-times-faster-than-leaf-router-mf2</link>
      <guid>https://dev.to/alexdodonov/new-benchmark-mezon-router-is-up-to-480-times-faster-than-leaf-router-mf2</guid>
      <description>&lt;p&gt;Hi all! Today we have one more benchmark.&lt;/p&gt;

&lt;p&gt;As usual we have two cases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;http server accepts request, launches php script, which handles this request, and then all script data is removed from memory. All following requests are processed in the same way. In this case very critical to launch script as soon as possible and we do not have time for long pre-compilations and preparations. Because all of it will be lost after the script will finish working;&lt;/li&gt;
&lt;li&gt;php script is launching, initiating all internal components (and router is one of them) and then starting processing requests. This case can be organized via for example react-php. It differs from the previous case because we can spend reasonable time to pre-compile routes for faster processing.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#the-first-case"&gt;
  &lt;/a&gt;
  The first case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// static routes&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateTetoStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/static/0'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateTetoStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/static/99'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateTetoStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/static/199'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /static/999 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// non static routes&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateTetoNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/param/0/1'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateTetoNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/param/99/1'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateTetoNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/param/199/1'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /param/999/1 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#the-second-case"&gt;
  &lt;/a&gt;
  The second case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// static routes&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateTetoStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/static/0'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/static/99'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/static/199'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /static/999 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// non static routes&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateTetoNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/param/0/1'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/param/99/1'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/param/199/1'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /param/1/999 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#ok-what-do-we-have"&gt;
  &lt;/a&gt;
  OK What do we have?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#the-first-case-static-routes"&gt;
  &lt;/a&gt;
  The first case + static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+------------------------------------+-------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
| benchmark                          | subject     | set | revs | its | mem_peak     | best          | mean          | mode          | worst         | stdev        | rstdev | diff    |
+------------------------------------+-------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
| CoffeeSingleRequestStaticBench     | benchStatic | 0   | 10   | 10  | 4,416,760b   | 47,939.100μs  | 57,073.950μs  | 52,448.314μs  | 92,250.800μs  | 12,711.502μs | 22.27% | 29.40x  |
| DVKSingleRequestStaticBench        | benchStatic | 0   | 10   | 10  | 4,873,600b   | 29,406.000μs  | 31,359.430μs  | 30,224.780μs  | 33,764.300μs  | 1,578.558μs  | 5.03%  | 16.15x  |
| HoaSingleRequestStaticBench        | benchStatic | 0   | 10   | 10  | 5,327,968b   | 50,925.400μs  | 55,086.900μs  | 52,131.973μs  | 69,609.000μs  | 5,744.275μs  | 10.43% | 28.38x  |
| IBSingleRequestStaticBench         | benchStatic | 0   | 10   | 10  | 5,115,480b   | 144,288.000μs | 156,082.490μs | 149,775.315μs | 179,781.900μs | 11,638.906μs | 7.46%  | 80.40x  |
| JoomlaSingleRequestStaticBench     | benchStatic | 0   | 10   | 10  | 4,402,888b   | 34,357.600μs  | 37,628.510μs  | 35,417.780μs  | 43,386.800μs  | 3,418.865μs  | 9.09%  | 19.38x  |
| LeafSingleRequestStaticBench       | benchStatic | 0   | 10   | 10  | 152,263,656b | 35,078.800μs  | 38,101.440μs  | 37,164.095μs  | 43,742.100μs  | 2,487.527μs  | 6.53%  | 19.63x  |
| MezonSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 4,403,296b   | 10,426.900μs  | 11,419.360μs  | 11,486.902μs  | 12,418.300μs  | 619.609μs    | 5.43%  | 5.88x   |
| MiladSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 35,129,704b  | 34,830.900μs  | 36,623.310μs  | 37,527.545μs  | 37,886.300μs  | 1,128.127μs  | 3.08%  | 18.87x  |
| PeceeSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 8,565,512b   | 44,259.500μs  | 47,010.690μs  | 46,139.941μs  | 49,370.700μs  | 1,646.278μs  | 3.50%  | 24.22x  |
| PowerSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 5,342,656b   | 23,509.500μs  | 27,317.570μs  | 26,116.556μs  | 37,681.900μs  | 3,827.772μs  | 14.01% | 14.07x  |
| SteampixelSingleRequestStaticBench | benchStatic | 0   | 10   | 10  | 4,402,920b   | 245,642.000μs | 252,848.030μs | 251,697.069μs | 266,980.900μs | 5,706.743μs  | 2.26%  | 130.25x |
| TetoSingleRequestStaticBench       | benchStatic | 0   | 10   | 10  | 6,760,328b   | 49,796.100μs  | 52,161.840μs  | 50,862.160μs  | 54,660.000μs  | 1,743.920μs  | 3.34%  | 26.87x  |
| ToroSingleRequestStaticBench       | benchStatic | 0   | 10   | 10  | 4,402,888b   | 1,598.300μs   | 1,941.310μs   | 1,947.188μs   | 2,284.000μs   | 178.139μs    | 9.18%  | 1.00x   |
| ZaphpaSingleRequestStaticBench     | benchStatic | 0   | 10   | 10  | 4,917,128b   | 39,126.200μs  | 41,894.490μs  | 40,677.525μs  | 50,615.000μs  | 3,206.580μs  | 7.65%  | 21.58x  |
+------------------------------------+-------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-first-case-nonstatic-routes"&gt;
  &lt;/a&gt;
  The first case + non-static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+--------+
| benchmark                         | subject    | set | revs | its | mem_peak     | best          | mean          | mode          | worst         | stdev        | rstdev | diff   |
+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+--------+
| CoffeeSingleRequestParamBench     | benchParam | 0   | 10   | 10  | 5,383,800b   | 64,149.900μs  | 68,643.870μs  | 66,966.558μs  | 77,000.900μs  | 3,921.354μs  | 5.71%  | 5.62x  |
| DVKSingleRequestParamBench        | benchParam | 0   | 10   | 10  | 4,865,984b   | 35,881.000μs  | 38,117.380μs  | 36,357.450μs  | 42,288.000μs  | 2,323.897μs  | 6.10%  | 3.12x  |
| HoaSingleRequestParamBench        | benchParam | 0   | 10   | 10  | 5,529,648b   | 55,389.700μs  | 59,949.570μs  | 58,228.467μs  | 69,895.800μs  | 4,100.430μs  | 6.84%  | 4.91x  |
| IBSingleRequestParamBench         | benchParam | 0   | 10   | 10  | 5,236,200b   | 174,096.700μs | 183,709.660μs | 182,310.005μs | 200,004.100μs | 6,536.611μs  | 3.56%  | 15.05x |
| JoomlaSingleRequestParamBench     | benchParam | 0   | 10   | 10  | 5,091,376b   | 43,591.300μs  | 48,020.070μs  | 44,911.551μs  | 75,717.400μs  | 9,302.832μs  | 19.37% | 3.93x  |
| LeafSingleRequestParamBench       | benchParam | 0   | 10   | 10  | 152,273,112b | 40,056.100μs  | 46,651.370μs  | 43,610.004μs  | 65,999.600μs  | 7,444.629μs  | 15.96% | 3.82x  |
| MezonSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 141,056,056b | 160,933.400μs | 172,964.680μs | 167,216.711μs | 199,617.400μs | 12,057.579μs | 6.97%  | 14.17x |
| MiladSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 35,988,240b  | 42,030.700μs  | 47,074.700μs  | 43,814.086μs  | 72,407.700μs  | 8,792.596μs  | 18.68% | 3.86x  |
| PeceeSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 8,149,696b   | 90,550.200μs  | 96,066.750μs  | 93,528.156μs  | 110,313.000μs | 5,935.073μs  | 6.18%  | 7.87x  |
| PowerSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 5,342,656b   | 24,573.500μs  | 26,827.200μs  | 25,561.859μs  | 31,686.900μs  | 2,271.591μs  | 8.47%  | 2.20x  |
| SteampixelSingleRequestParamBench | benchParam | 0   | 10   | 10  | 4,402,920b   | 270,994.300μs | 280,615.200μs | 283,062.232μs | 289,402.400μs | 6,105.135μs  | 2.18%  | 22.99x |
| TetoSingleRequestParamBench       | benchParam | 0   | 10   | 10  | 6,721,408b   | 66,515.100μs  | 69,275.460μs  | 70,647.850μs  | 72,914.600μs  | 2,245.638μs  | 3.24%  | 5.67x  |
| ToroSingleRequestParamBench       | benchParam | 0   | 10   | 10  | 4,402,888b   | 10,670.000μs  | 12,207.530μs  | 11,418.532μs  | 14,782.900μs  | 1,274.212μs  | 10.44% | 1.00x  |
| ZaphpaSingleRequestParamBench     | benchParam | 0   | 10   | 10  | 5,020,536b   | 53,622.100μs  | 63,750.200μs  | 57,301.614μs  | 79,378.700μs  | 9,849.251μs  | 15.45% | 5.22x  |
+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+--------------+--------+--------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-second-case-static-routes"&gt;
  &lt;/a&gt;
  The second case + static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+------------+
| benchmark                  | subject     | set | revs | its | mem_peak    | best          | mean          | mode          | worst         | stdev        | rstdev | diff       |
+----------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+------------+
| CoffeeReactStaticBench     | benchStatic | 0   | 10   | 10  | 4,402,888b  | 10,034.700μs  | 11,286.760μs  | 10,773.621μs  | 14,051.600μs  | 1,197.867μs  | 10.61% | 496.03x    |
| DVKReactStaticBench        | benchStatic | 0   | 100  | 10  | 4,402,888b  | 13,148.010μs  | 13,771.349μs  | 13,981.083μs  | 14,271.230μs  | 374.943μs    | 2.72%  | 605.23x    |
| HoaReactStaticBench        | benchStatic | 0   | 100  | 10  | 4,402,872b  | 4,298.550μs   | 4,763.865μs   | 4,589.042μs   | 5,725.870μs   | 416.916μs    | 8.75%  | 209.36x    |
| IBReactStaticBench         | benchStatic | 0   | 10   | 10  | 4,678,736b  | 30,335.300μs  | 32,897.550μs  | 33,364.751μs  | 34,822.400μs  | 1,411.764μs  | 4.29%  | 1,445.79x  |
| JoomlaReactStaticBench     | benchStatic | 0   | 10   | 10  | 4,402,888b  | 6,436.100μs   | 7,693.700μs   | 7,049.448μs   | 10,506.500μs  | 1,209.691μs  | 15.72% | 338.13x    |
| LeafReactStaticBench       | benchStatic | 0   | 10   | 10  | 17,027,288b | 9,771.700μs   | 10,912.610μs  | 10,306.522μs  | 14,403.800μs  | 1,344.440μs  | 12.32% | 479.59x    |
| MezonReactStaticBench      | benchStatic | 0   | 100  | 10  | 4,403,296b  | 18.780μs      | 22.754μs      | 19.670μs      | 47.190μs      | 8.421μs      | 37.01% | 1.00x      |
| MiladReactStaticBench      | benchStatic | 0   | 10   | 10  | 6,755,288b  | 17,780.200μs  | 19,608.880μs  | 18,943.244μs  | 22,691.900μs  | 1,404.706μs  | 7.16%  | 861.78x    |
| PeceeReactStaticBench      | benchStatic | 0   | 10   | 10  | 5,724,376b  | 22,200.700μs  | 23,723.330μs  | 23,272.309μs  | 25,580.900μs  | 1,023.059μs  | 4.31%  | 1,042.60x  |
| PowerReactStaticBench      | benchStatic | 0   | 10   | 10  | 4,510,072b  | 18,329.000μs  | 19,799.810μs  | 19,385.573μs  | 21,834.900μs  | 1,008.011μs  | 5.09%  | 870.17x    |
| SteampixelReactStaticBench | benchStatic | 0   | 10   | 10  | 4,402,888b  | 278,668.000μs | 294,515.740μs | 288,365.878μs | 351,544.700μs | 19,453.272μs | 6.61%  | 12,943.47x |
| TetoReactStaticBench       | benchStatic | 0   | 10   | 10  | 5,233,440b  | 4,675.600μs   | 5,433.200μs   | 5,129.949μs   | 6,929.700μs   | 654.188μs    | 12.04% | 238.78x    |
| ToroReactStaticBench       | benchStatic | 0   | 10   | 10  | 4,402,888b  | 397.800μs     | 528.510μs     | 467.933μs     | 796.000μs     | 122.898μs    | 23.25% | 23.23x     |
| ZaphpaReactStaticBench     | benchStatic | 0   | 10   | 10  | 4,402,888b  | 14,429.300μs  | 15,781.300μs  | 16,399.930μs  | 17,093.300μs  | 852.563μs    | 5.40%  | 693.56x    |
+----------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-second-case-nonstatic-routes"&gt;
  &lt;/a&gt;
  The second case + non-static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+------------+
| benchmark                  | subject     | set | revs | its | mem_peak    | best          | mean          | mode          | worst         | stdev        | rstdev | diff       |
+----------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+------------+
| CoffeeReactStaticBench     | benchStatic | 0   | 10   | 10  | 4,402,888b  | 10,034.700μs  | 11,286.760μs  | 10,773.621μs  | 14,051.600μs  | 1,197.867μs  | 10.61% | 496.03x    |
| DVKReactStaticBench        | benchStatic | 0   | 100  | 10  | 4,402,888b  | 13,148.010μs  | 13,771.349μs  | 13,981.083μs  | 14,271.230μs  | 374.943μs    | 2.72%  | 605.23x    |
| HoaReactStaticBench        | benchStatic | 0   | 100  | 10  | 4,402,872b  | 4,298.550μs   | 4,763.865μs   | 4,589.042μs   | 5,725.870μs   | 416.916μs    | 8.75%  | 209.36x    |
| IBReactStaticBench         | benchStatic | 0   | 10   | 10  | 4,678,736b  | 30,335.300μs  | 32,897.550μs  | 33,364.751μs  | 34,822.400μs  | 1,411.764μs  | 4.29%  | 1,445.79x  |
| JoomlaReactStaticBench     | benchStatic | 0   | 10   | 10  | 4,402,888b  | 6,436.100μs   | 7,693.700μs   | 7,049.448μs   | 10,506.500μs  | 1,209.691μs  | 15.72% | 338.13x    |
| LeafReactStaticBench       | benchStatic | 0   | 10   | 10  | 17,027,288b | 9,771.700μs   | 10,912.610μs  | 10,306.522μs  | 14,403.800μs  | 1,344.440μs  | 12.32% | 479.59x    |
| MezonReactStaticBench      | benchStatic | 0   | 100  | 10  | 4,403,296b  | 18.780μs      | 22.754μs      | 19.670μs      | 47.190μs      | 8.421μs      | 37.01% | 1.00x      |
| MiladReactStaticBench      | benchStatic | 0   | 10   | 10  | 6,755,288b  | 17,780.200μs  | 19,608.880μs  | 18,943.244μs  | 22,691.900μs  | 1,404.706μs  | 7.16%  | 861.78x    |
| PeceeReactStaticBench      | benchStatic | 0   | 10   | 10  | 5,724,376b  | 22,200.700μs  | 23,723.330μs  | 23,272.309μs  | 25,580.900μs  | 1,023.059μs  | 4.31%  | 1,042.60x  |
| PowerReactStaticBench      | benchStatic | 0   | 10   | 10  | 4,510,072b  | 18,329.000μs  | 19,799.810μs  | 19,385.573μs  | 21,834.900μs  | 1,008.011μs  | 5.09%  | 870.17x    |
| SteampixelReactStaticBench | benchStatic | 0   | 10   | 10  | 4,402,888b  | 278,668.000μs | 294,515.740μs | 288,365.878μs | 351,544.700μs | 19,453.272μs | 6.61%  | 12,943.47x |
| TetoReactStaticBench       | benchStatic | 0   | 10   | 10  | 5,233,440b  | 4,675.600μs   | 5,433.200μs   | 5,129.949μs   | 6,929.700μs   | 654.188μs    | 12.04% | 238.78x    |
| ToroReactStaticBench       | benchStatic | 0   | 10   | 10  | 4,402,888b  | 397.800μs     | 528.510μs     | 467.933μs     | 796.000μs     | 122.898μs    | 23.25% | 23.23x     |
| ZaphpaReactStaticBench     | benchStatic | 0   | 10   | 10  | 4,402,888b  | 14,429.300μs  | 15,781.300μs  | 16,399.930μs  | 17,093.300μs  | 852.563μs    | 5.40%  | 693.56x    |
+----------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see almost in all cases Mezon Router is faster than Leaf router.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h1&gt;

&lt;p&gt;More articles can be found in my &lt;a href="https://twitter.com/mezonphp"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-mezonrouter"&gt;
  &lt;/a&gt;
  What is mezon/router?
&lt;/h1&gt;

&lt;p&gt;mezon/router now is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;framework for routing with &lt;strong&gt;100% code coverage&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;10.0 points&lt;/strong&gt; on scrutinizer-ci.com&lt;/li&gt;
&lt;li&gt;router is a part of the &lt;a href="https://github.com/alexdodonov/mezon"&gt;Mezon Project&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Repo on github.com: &lt;a href="https://github.com/alexdodonov/mezon-router"&gt;https://github.com/alexdodonov/mezon-router&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#it-will-be-great-if-you-will-contribute-something-to-this-project-documentation-sharing-the-project-in-your-social-media-bug-fixing-refactoring-or-even-submitting-issue-with-question-or-feature-request-thanks-anyway-"&gt;
  &lt;/a&gt;
  It will be great if you will contribute something to this project. Documentation, sharing the project in your social media, bug fixing, refactoring, or even &lt;strong&gt;&lt;a href="https://github.com/alexdodonov/mezon-router/issues"&gt;submitting issue with question or feature request&lt;/a&gt;&lt;/strong&gt;. Thanks anyway )
&lt;/h1&gt;

</description>
    </item>
    <item>
      <title>Tell your users the remaining reading time, in CSS</title>
      <author>Fabrizio Calderan</author>
      <pubDate>Mon, 19 Jul 2021 09:15:49 +0000</pubDate>
      <link>https://dev.to/fcalderan/tell-your-users-the-remaining-reading-time-in-css-1mik</link>
      <guid>https://dev.to/fcalderan/tell-your-users-the-remaining-reading-time-in-css-1mik</guid>
      <description>&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; this demo must be tested in Chrome Canary 90+ with the &lt;code&gt;--enable-experimental-web-platform-features&lt;/code&gt; flag enabled;&lt;/p&gt;




&lt;p&gt;Recently, thanks to the new &lt;code&gt;@scroll-timeline&lt;/code&gt; property available on Chrome Canary, I have seen an &lt;a href="https://codepen.io/bramus/pen/WNGLpyV"&gt;interesting demo&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/bramus"&gt;@bramus&lt;/a&gt;
 where the user is aware of the time needed to read a page with a sticky progress bar that stretches horizontally, where its width is dependant on the current scrolling position of the root element.&lt;/p&gt;

&lt;p&gt;I've extended this idea a little bit by showing an &lt;strong&gt;animated countdown of the exact time needed to read the page&lt;/strong&gt;. All you need to do is to just set the time in minutes and the CSS animations will do the work for you. &lt;/p&gt;

&lt;p&gt;Demo (scroll the page until the end):&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/fcalderan/embed/JjNKoLP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-does-it-work"&gt;
  &lt;/a&gt;
  How does it work?
&lt;/h2&gt;

&lt;p&gt;Here is a step-by-step explanation&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-variables"&gt;
  &lt;/a&gt;
  The variables
&lt;/h3&gt;

&lt;p&gt;Basically, two variables &lt;code&gt;--ss&lt;/code&gt; and &lt;code&gt;--mm&lt;/code&gt; hold the values of seconds and minutes and two distinct animations change them. In order to make the interpolation of the values work in the keyframes, these variables have been registered as &lt;code&gt;integers&lt;/code&gt; properties through the &lt;a href="https://web.dev/css-props-and-vals/"&gt;Houdini's API&lt;/a&gt; integrated on Chrome.&lt;/p&gt;

&lt;p&gt;So the &lt;code&gt;--ss&lt;/code&gt; variable is declared in the CSS like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@property --ss {
  syntax: "&amp;lt;integer&amp;gt;";
  initial-value: 0;
  inherits: true;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;while the &lt;code&gt;--mm&lt;/code&gt; is declared instead in a &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; block, inside the markup because here is where we are going to set the minutes needed (e.g. &lt;code&gt;7&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
    @property --mm {
       syntax: "&amp;lt;integer&amp;gt;";
       initial-value: 7;
       inherits: true;
    }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since it's not (still) possibile to print out the value of a variable using the &lt;code&gt;content&lt;/code&gt; property I've set two counters and print their values through the &lt;code&gt;counter()&lt;/code&gt; function (with a leading &lt;code&gt;0&lt;/code&gt; when necessary)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;counter-reset: ss var(--ss);
...
content: counter(ss, decimal-leading-zero);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;counter-reset: mm var(--mm);
...
content: counter(mm, decimal-leading-zero);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#the-scrolltimeline"&gt;
  &lt;/a&gt;
  The scroll-timeline
&lt;/h3&gt;

&lt;p&gt;I've set the scroll-timeline animation in this way&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@scroll-timeline scroll {
  time-range: 60s;
  start: 200px;
  end  : calc(100% - 150px);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;time-range&lt;/code&gt; has been set to &lt;code&gt;60&lt;/code&gt; seconds in order to make the calculations of the animations easier (at least for my brain) . &lt;/p&gt;

&lt;p&gt;To give a meaningful example let's say that we want to start the countdown after &lt;code&gt;200px&lt;/code&gt; of scroll — to exclude the title or maybe a hero image, but you could even set it to &lt;code&gt;0&lt;/code&gt; or to another value of course — and we want to also stop it before a hypothetical footer &lt;code&gt;150px&lt;/code&gt; tall.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-animations"&gt;
  &lt;/a&gt;
  The animations
&lt;/h3&gt;

&lt;p&gt;This is the most intriguing part due to the tricky computations. Here is the animation of the minutes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@keyframes mins {
  to   { --mm: 0;  }
}

...
animation: mins 
   /* duration   */ 60s 
   /* timing     */ steps(var(--mm), start) 
   /* delay      */ calc(calc(60s / (calc(var(--mm)) - 1)) / 60 / var(--mm))
   /* repetition */ 1
   /* fill mode  */ forwards;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;@keyframes&lt;/code&gt; start from the value we have previously set and should decrease until &lt;code&gt;0&lt;/code&gt;, so the definition of the last keyframe is enough.&lt;/p&gt;

&lt;p&gt;The animation should takes &lt;code&gt;60s&lt;/code&gt; which is the same amount of time we defined for the &lt;code&gt;@scroll-timeline&lt;/code&gt;. The &lt;code&gt;delay&lt;/code&gt; expression is calculated so that the value of the minutes decreases immediately after &lt;code&gt;1s&lt;/code&gt; (e.g. switching from &lt;code&gt;7:00&lt;/code&gt; to &lt;code&gt;6:59&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;The animation of seconds is quite similar but in this case we need to specify the starting value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@keyframes secs {
  from { --ss: 59; }
  to   { --ss: 0;  }
}

...
animation: secs 
   /* duration   */ calc(60s / calc(var(--mm)))
   /* timing     */ linear
   /* delay      */ calc(calc(60s / (calc(var(--mm)) - 1)) / 60 / var(--mm))
   /* repetition */ var(--mm) 
   /* fill-mode  */ forwards;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The only difference here is the duration: seconds need to be updated faster than minutes, running &lt;code&gt;--mm&lt;/code&gt; times from &lt;code&gt;59&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt; with a &lt;code&gt;repetition&lt;/code&gt; of &lt;code&gt;--mm&lt;/code&gt;. Here the purpose of the &lt;code&gt;delay&lt;/code&gt; is just to wait the first update of the minutes.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#always-respect-user-preferences"&gt;
  &lt;/a&gt;
  Always respect user preferences
&lt;/h3&gt;

&lt;p&gt;The update of the seconds is amazing but it can be annoying for users who don't like continuous animations and that prefer a reduced motion.&lt;/p&gt;

&lt;p&gt;We may use a simple mediaquery:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@media (prefers-reduced-motion: reduce) {
  .countdown__display--ss {
    display: none;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and hide the element with the seconds.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Ta-da!”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;— &lt;em&gt;Wall-E&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#final-words-amp-thoughts"&gt;
  &lt;/a&gt;
  Final words &amp;amp; thoughts
&lt;/h2&gt;

&lt;p&gt;Feel free to &lt;a href="https://codepen.io/fcalderan/"&gt;follow me on Codepen&lt;/a&gt; or &lt;a href="https://twitter.com/fcalderan"&gt;Twitter&lt;/a&gt; where I usually talk about frontend and trees. Furthemore some days ago I wrote a related article about &lt;code&gt;@scroll-timeline&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/fcalderan/a-css-carousel-with-snapping-points-and-a-scroll-linked-navigation-5h6j"&gt;A CSS carousel with snapping points and a scroll-linked navigation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is a &lt;strong&gt;carbon free&lt;/strong&gt; article so I pledge to plant &lt;a href="https://ecologi.com/fcalderan?r=5f0f0ba9be14f7001a6f431a"&gt;25 trees with Ecologi&lt;/a&gt; &lt;strong&gt;plus 1 tree&lt;/strong&gt; for each retweet of &lt;a href="https://twitter.com/fcalderan/status/1417050737796915204"&gt;the announcement below&lt;/a&gt;👇 in the next 12 days &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RB0JwDaY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1417048991519412227/pu/img/KZNhuYDdrEe7suNS.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--xqNx82s_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1409213607255150592/sDnD9EM6_normal.jpg" alt="Fabrizio Calderan profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabrizio Calderan
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/fcalderan"&gt;@fcalderan&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      New article published on &lt;a href="https://t.co/ZCxAlz23D6"&gt;dev.to&lt;/a&gt;&lt;br&gt;&lt;a href="https://t.co/BDgEHteNYo"&gt;dev.to/fcalderan/tell…&lt;/a&gt;&lt;br&gt;«Tell your users the remaining reading time, in &lt;a href="https://twitter.com/hashtag/CSS"&gt;#CSS&lt;/a&gt; &lt;br&gt;&lt;br&gt;This is &lt;a href="https://twitter.com/hashtag/carbonfree"&gt;#carbonfree&lt;/a&gt; article: I'll plant 1 tree with &lt;a href="https://twitter.com/Ecologi_hq"&gt;@Ecologi_hq&lt;/a&gt;  for each retweet (see the article for the notes) 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      09:16 AM - 19 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1417050737796915204" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1417050737796915204" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1417050737796915204" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;&lt;small&gt;(up to 75 trees, retweets from human accounts with 20+ followers)&lt;/small&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
      <category>codepen</category>
    </item>
    <item>
      <title>Create a simple pomodoro timer in python</title>
      <author>Code_Jedi</author>
      <pubDate>Mon, 19 Jul 2021 09:11:40 +0000</pubDate>
      <link>https://dev.to/code_jedi/create-a-simple-pomodoro-timer-in-python-l97</link>
      <guid>https://dev.to/code_jedi/create-a-simple-pomodoro-timer-in-python-l97</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hey"&gt;
  &lt;/a&gt;
  Hey👋
&lt;/h2&gt;

&lt;p&gt;If you're looking for a pretty useful yet simple python project, you've come to the right place!&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#for-those-who-dont-know-what-a-pomodoro-timer-is"&gt;
  &lt;/a&gt;
  For those who don't know what a pomodoro timer is:
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;A pomodoro timer is a special type of timer used to increase productivity.&lt;/em&gt;&lt;br&gt;
It works something like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A pomodoro timer will give you ~25-30 minutes to work, then once you've finished working (thus completing 1 pomodoro), it will give you ~10 minutes to rest, then the timer will repeat the process.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;To get started with making a pomodoro timer in python, you'll first need to install the "plyer" library by running &lt;code&gt;pip install plyer&lt;/code&gt; or &lt;code&gt;pip3 install plyer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then import these 2 libraries at the beginning of your python file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import time
from plyer import notification
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, define the variable which will represent the amount of pomodoros completed by the user, as well as an indicator that the pomodoro timer has started:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import time
from plyer import notification

count = 0
print("The pomodoro timer has started, start working!")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#now-lets-make-the-actual-timer"&gt;
  &lt;/a&gt;
  Now let's make the actual timer!
&lt;/h3&gt;

&lt;p&gt;First, you'll need to put the timer in a &lt;code&gt;while True:&lt;/code&gt; loop nested inside an &lt;code&gt;if __name__ == "__main__":&lt;/code&gt; statement (if you're not familiar with it, here's a good explanation: &lt;a href="https://stackoverflow.com/questions/419163/what-does-if-name-main-do):"&gt;https://stackoverflow.com/questions/419163/what-does-if-name-main-do):&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if __name__ == "__main__":
    while True:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, make the first notification function which will notify the user when they've finished a pomodoro:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if __name__ == "__main__":
    while True:
        notification.notify(
            title = "Good work!",
            message = "Take a 10 minute break! You have completed " + str(count) + " pomodoros so far",
        )
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, this "notify()" function notifies the user that he/she has finished a pomodoro, and it indicates how many pomodoros the user has finished so far with the "count" variable.&lt;/p&gt;




&lt;p&gt;Next, you'll need to create the "notify()" function which will notify the user once his/her 10 minutes of break time are over:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if __name__ == "__main__":
    while True:
        notification.notify(
            title = "Good work!",
            message = "Take a 10 minute break! You have completed " + str(count) + " pomodoros so far",
        )
        notification.notify(
            title = "Back to work!",
            message = "Try doing another pomodoro...",
        )
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#your-pomodoro-timer-is-almost-finished"&gt;
  &lt;/a&gt;
  Your pomodoro timer is almost finished!
&lt;/h4&gt;

&lt;p&gt;The only things left to do are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set timeouts between the "notify()" functions.&lt;/li&gt;
&lt;li&gt;Increment the "count" variable every time the user finishes a pomodoro.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if __name__ == "__main__":
    while True:
        time.sleep(1800)
        count += 1
        notification.notify(
            title = "Good work!",
            message = "Take a 10 minute break! You have completed " + str(count) + " pomodoros so far",
        )
        time.sleep(600)
        notification.notify(
            title = "Back to work!",
            message = "Try doing another pomodoro...",
        )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#let-me-explain"&gt;
  &lt;/a&gt;
  Let me explain:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The first "time.sleep()" function waits 30 minutes(1800 seconds) before displaying the first notification, then before displaying the notification, the "count" variable is incremented since 30 minutes have passed, meaning that the user has done one pomodoro!&lt;/li&gt;
&lt;li&gt;Finally, the second "time.sleep()" function waits 10 minutes(600 seconds) before notifying the user that his/her 10 minute break is over.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#there-you-have-it"&gt;
  &lt;/a&gt;
  There you have it!
&lt;/h2&gt;

&lt;p&gt;If you put everything together, your pomodoro timer should look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import time
from plyer import notification

count = 0
print("The pomodoro timer has started, start working!")

if __name__ == "__main__":
    while True:
        time.sleep(1800)
        count += 1
        notification.notify(
            title = "Good work!",
            message = "Take a 10 minute break! You have completed " + str(count) + " pomodoros so far",
        )
        time.sleep(600)
        notification.notify(
            title = "Back to work!",
            message = "Try doing another pomodoro...",
        )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;Get the hottest programming stuff of the week in your inbox every Friday via &lt;a href="https://codejedi.substack.com/welcome"&gt;my newsletter&lt;/a&gt;!&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Byeeeee👋 &lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>sideprojects</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
