<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Lessons Learned from Building Businesses as a Technical Solo Founder</title>
      <author>Mo Boudra</author>
      <pubDate>Thu, 30 Dec 2021 07:58:27 +0000</pubDate>
      <link>https://dev.to/moboudra/lessons-learned-from-building-businesses-as-a-technical-solo-founder-5dpb</link>
      <guid>https://dev.to/moboudra/lessons-learned-from-building-businesses-as-a-technical-solo-founder-5dpb</guid>
      <description>&lt;p&gt;I've been working on my SaaS projects all by myself over the last four years, and I've had some failures and some success, here are some of the lessons that I've learned!&lt;/p&gt;

&lt;p&gt;Although it may look easy from the outside, doing all the development, marketing, customer service and everything else required to run a business takes a lot of time and effort, but it's not impossible. There are countless examples of highly successful businesses operated by a one-person team.&lt;/p&gt;

&lt;p&gt;Some examples that I know of are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a ref="nofollow" href="https://unicornplatform.com/"&gt;Unicorn Platform ($19k MRR)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a ref="nofollow" href="https://bannerbear.com/"&gt;Bannerbear ($27k MRR)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a ref="nofollow" href="https://nomadlist.com/"&gt;NomadList ($46K MRR)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As far as I know, they're all run by a single person doing all the things, including the development of the product. They're all very open about how they go about things and their blogs are a great source of inspiration!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tame-your-inner-perfectionist"&gt;
  &lt;/a&gt;
  Tame your inner perfectionist
&lt;/h2&gt;

&lt;p&gt;You have to let go of your ego and allow yourself to ship something that might embarrass you.&lt;/p&gt;

&lt;p&gt;Don't get me wrong, I am not talking about shipping a half-assed product or something that doesn't work . The hustle MVP mentality of building something functional in a weekend, and releasing it to see if anyone is desperate enough to buy your product is not sustainable either, there's a middle ground where you can be proud of your product but release with some rough edges.&lt;/p&gt;

&lt;p&gt;For some reason we think that when we release a project to the wild people will start flocking to the signup page, "you build it, they will come" right? but it's never the case, which yeah it is frustrating.&lt;/p&gt;

&lt;p&gt;You've spent all this time building this great but no one knows about it yet, marketing is as important if not more important than the development of the product, so make sure you allocate some time for that.&lt;/p&gt;

&lt;p&gt;In my experience, unless you already have an audience, it's going to be a long time form when you deploy your project to get paid customers that are not your family or buddies, so the earlier you launch that the earlier you can start getting real feedback and iterate on your product.&lt;/p&gt;

&lt;p&gt;Whenever I get the urge to spend a whole day refactoring simple things I ask myself if this will bring more value to the customer, if in the same amount of time that it will take me to refactor this little thing I can provide more value elsewhere I try to do that instead. I know, easier said than done :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#focus-on-what-energizes-you"&gt;
  &lt;/a&gt;
  Focus on what energizes you
&lt;/h2&gt;

&lt;p&gt;A business needs constant attention and you have to be able to put in the hours, even when you don't want to, the worst thing is having to work in areas that you don't enjoy. Make sure you work on something that uses your strengths as much as possible, this will also give you a competitive advantage against the competition.&lt;/p&gt;

&lt;p&gt;This is the reason why I decided to work on something like &lt;a href="https://geniebot.co"&gt;Genie&lt;/a&gt;, it's a problem that I am passionate about and I can see it evolve in many directions, which excites me and I know will keep me on my toes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-it-for-the-right-reasons"&gt;
  &lt;/a&gt;
  Do it for the right reasons
&lt;/h2&gt;

&lt;p&gt;I have realized that all my failed projects had something in common, they were all built for the wrong reasons. I was chasing a trend, trying to take advantage of a growth opportunity, or unconsciously copying someone else's idea.&lt;/p&gt;

&lt;p&gt;When that happens it eventually gets to a point where you don't have the energy to work on it anymore and lose motivation, whenever you start a new project you should ask whether you can see yourself working on this in the next years and if you don't then the idea might not be worth pursuing.&lt;/p&gt;

&lt;p&gt;You have to figure out the right reasons yourself as everyone has different priorities, my reason at the moment is that I'd like to make a living doing what I enjoy doing, so I start from there, and then pick something that can solve a real problem and turn it into a business, and not the other way around.&lt;/p&gt;

&lt;p&gt;It's been proven that most of what makes a business successful is being consistent and relentlessly market and improving your product to solve real problems, so ensuring that you work on something that you'll be able to still enjoy during years is a pretty great indicator of future success.&lt;/p&gt;




&lt;p&gt;I hope you found this insightful! Share if you did :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I am currently working on &lt;a href="https://geniebot.co"&gt;Genie&lt;/a&gt;, a platform that streamlines the process of building and deploying custom bots.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>technical</category>
      <category>founder</category>
      <category>financial</category>
      <category>independence</category>
    </item>
    <item>
      <title>ðŸ›‘ Stop Use Of Javascript Like This.</title>
      <author>CTen_A Live</author>
      <pubDate>Thu, 30 Dec 2021 07:51:17 +0000</pubDate>
      <link>https://dev.to/ctenlive/stop-use-of-javascript-like-this-oi9</link>
      <guid>https://dev.to/ctenlive/stop-use-of-javascript-like-this-oi9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello"&gt;
  &lt;/a&gt;
  Hello
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.Use Arrow function instead regular function.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thanks for Reading.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Create React App. Part 3 of 10: Routing</title>
      <author>101samovar</author>
      <pubDate>Thu, 30 Dec 2021 06:55:34 +0000</pubDate>
      <link>https://dev.to/101samovar/create-react-app-part-3-of-10-routing-gap</link>
      <guid>https://dev.to/101samovar/create-react-app-part-3-of-10-routing-gap</guid>
      <description>&lt;p&gt;We are creating a React App.&lt;br&gt;
The React MindMap App.&lt;br&gt;
We have done the layout.&lt;br&gt;
We have created icon buttons and toolbars.&lt;br&gt;
Now we need routing to change screens.&lt;/p&gt;

&lt;p&gt;Source code:&lt;br&gt;
&lt;a href="https://github.com/101samovar/react-mindmap.git"&gt;https://github.com/101samovar/react-mindmap.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our channel:&lt;br&gt;
&lt;a href="https://youtu.be/0XYtePSyFUs"&gt;https://youtu.be/0XYtePSyFUs&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Awesome VSCode extensions for a better coding experience [ Part 1 ]</title>
      <author>Hyperloop007</author>
      <pubDate>Thu, 30 Dec 2021 06:52:36 +0000</pubDate>
      <link>https://dev.to/hyperloop/awesome-vscode-extensions-for-a-better-coding-experience-part-1--3i9b</link>
      <guid>https://dev.to/hyperloop/awesome-vscode-extensions-for-a-better-coding-experience-part-1--3i9b</guid>
      <description>&lt;p&gt;Imagine yourself typing all the HTML boilerplate code when you decided to make a new project or imagine not being able to recall the name of that single property in css and searching the web for it. Why am I talking about all this? It's obvious because this kind of stuff would really suck. So, that brings us to the wonderful extensions that we have in vscode made by a lot of people and you can use them for free.&lt;/p&gt;

&lt;p&gt;What are vscode extensions anyway?&lt;/p&gt;

&lt;p&gt;VSCode extensions let you add debuggers and various tools to your environment and works through various custom settings that the extensions bring with them.&lt;/p&gt;

&lt;p&gt;VSCode extensions are a great way to reduce your workload and make it easy for you to write your code and format it. You can even create your own vscode extensions but we won't talk about it here. There are a lots of extensions available on vscode as of today but I will mention some of which I find really useful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Auto Close Tag:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As you can probably figure out from the name here this extension automatically closes the HTML/XML opening tags you write. You can customize or change the settings from the vscode auto close tag settings.&lt;br&gt;
It can even be used to close the self closing tags in HTML.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---TaGmQfL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xwgs7zwzi13bqlguqjif.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---TaGmQfL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xwgs7zwzi13bqlguqjif.gif" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Auto Rename Tag:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This very extension lets you rename both the opening and the closing tag at once saving you the pain of renaming the tags one by one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HjFaKrW0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix2qhh1ykrcudrisciol.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HjFaKrW0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix2qhh1ykrcudrisciol.gif" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Bracket Pair Colorizer:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This extension colors bracket pairs based on their positioning in the code i.e. bracket pairs adjacent to each other will have different set of color from each other.&lt;/p&gt;

&lt;p&gt;This makes the code look really clean and makes it easy to figure out the block of code you want to go to.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zWo1vZOX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlowfxqsmbh9j83c8ewq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zWo1vZOX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlowfxqsmbh9j83c8ewq.jpg" alt="Image description" width="859" height="421"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Indent Rainbows:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This extension is not all that different from the Bracket Pair Colorizer, just that it does the same with levels of indentations which can prove to be helpful in a language like python.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VwlXPE51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0eh2rsmjybtnmuc3mu4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VwlXPE51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0eh2rsmjybtnmuc3mu4.png" alt="Image description" width="443" height="156"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Live Server:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Not much needs to be said about one of the most popular and useful extensions of all in vscode where you can see live previews and changes of your work with just a single click.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8qdqkQeM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9fdsh89duovgb9luf8v1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8qdqkQeM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9fdsh89duovgb9luf8v1.gif" alt="Image description" width="880" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many more to come in part 2...&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>vscode</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>ChristmasLight Css</title>
      <author>0xKirz</author>
      <pubDate>Thu, 30 Dec 2021 05:42:31 +0000</pubDate>
      <link>https://dev.to/kirzin/christmaslight-css-593a</link>
      <guid>https://dev.to/kirzin/christmaslight-css-593a</guid>
      <description>&lt;p&gt;&lt;strong&gt;Merry Christmas &amp;amp; Happy New year Everyone&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BM9_6Xu6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sth2alarcjgu8nsvuqh1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BM9_6Xu6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sth2alarcjgu8nsvuqh1.png" alt="Image description" width="880" height="562"&gt;&lt;/a&gt;&lt;iframe height="600" src="https://codepen.io/kirzin/embed/RwLQQMZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>How to Rice Windows.</title>
      <author>Dhruv Anand</author>
      <pubDate>Thu, 30 Dec 2021 05:29:21 +0000</pubDate>
      <link>https://dev.to/ananddhruv295/how-to-rice-windows-2h12</link>
      <guid>https://dev.to/ananddhruv295/how-to-rice-windows-2h12</guid>
      <description>&lt;h2&gt;
  &lt;a href="#ricing-windows"&gt;
  &lt;/a&gt;
  &lt;em&gt;Ricing Windows&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wg5_8xod--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o1p30bfgxqu3gmi849es.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wg5_8xod--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o1p30bfgxqu3gmi849es.png" alt="Desktop Preview" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#make-your-desktop-look-sick-amp-clean"&gt;
  &lt;/a&gt;
  Make your Desktop look sick &amp;amp; clean.
&lt;/h5&gt;




&lt;p&gt;Here is a list if software and applications that I have used to rice my desktop. &lt;/p&gt;

&lt;p&gt;&lt;u&gt;Web Browser&lt;/u&gt; â–» &lt;strong&gt;Firefox&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;Music Streaming&lt;/u&gt; â–» &lt;strong&gt;Spotify&lt;/strong&gt; &lt;br&gt;
&lt;u&gt;Messaging Platform&lt;/u&gt; â–» &lt;strong&gt;Discord&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;Text Editor&lt;/u&gt; â–» &lt;strong&gt;Visual Studio Code&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;Terminal&lt;/u&gt;â–» &lt;strong&gt;Windows Terminal&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;File Manager&lt;/u&gt; â–» &lt;strong&gt;Files&lt;/strong&gt; &lt;br&gt;
&lt;u&gt;Wallpaper Manager&lt;/u&gt; â–» &lt;strong&gt;Lively&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;App Launcher&lt;/u&gt; â–» &lt;strong&gt;PowerToys Run&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;Status Bar&lt;/u&gt; â–» &lt;strong&gt;PolyBar&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;Music Widget&lt;/u&gt; â–» &lt;strong&gt;ModularPlayers&lt;/strong&gt;&lt;br&gt;
&lt;u&gt;Dock&lt;/u&gt; â–» &lt;strong&gt;Nexus&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Head over to my GitHub repository â†´&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/iDCoded"&gt;
        iDCoded
      &lt;/a&gt; / &lt;a href="https://github.com/iDCoded/Windows-Rice"&gt;
        Windows-Rice
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      How to rice Windows. 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;i&gt;Windows Ricing&lt;/i&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/65074550/147634871-af27d9fd-152c-4ea5-be52-48861ed60908.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4vKqtm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/65074550/147634871-af27d9fd-152c-4ea5-be52-48861ed60908.png" alt="Desktop"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Wallpaper&lt;/strong&gt; : Spaceman Wallpaper â†’ &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3bc9ba24d3301ac7fe8cf73062e44e7aba87e7d9fbb873b46422ca066ccc64b4/68747470733a2f2f6d796c69766577616c6c7061706572732e636f6d2f66616e746173792f73706163656d616e2d6a656c6c79666973682d6c6976652d77616c6c70617065722f"&gt;&lt;img src="https://camo.githubusercontent.com/3bc9ba24d3301ac7fe8cf73062e44e7aba87e7d9fbb873b46422ca066ccc64b4/68747470733a2f2f6d796c69766577616c6c7061706572732e636f6d2f66616e746173792f73706163656d616e2d6a656c6c79666973682d6c6976652d77616c6c70617065722f" alt="Here"&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;I have used &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a8926e4dcecc7bec7e3d82f91bce9d4ded6646cb77639656a7e97408c184c452/68747470733a2f2f6c6976656c7977616c6c70617065722e6e65742f"&gt;&lt;img src="https://camo.githubusercontent.com/a8926e4dcecc7bec7e3d82f91bce9d4ded6646cb77639656a7e97408c184c452/68747470733a2f2f6c6976656c7977616c6c70617065722e6e65742f" alt="Lively"&gt;&lt;/a&gt; for a live wallpaper.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Top bar&lt;/strong&gt; : &lt;a rel="noopener noreferrer" href="https://github.com/khanhas/Polybar"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOULg9Sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/khanhas/Polybar" alt="Polybar"&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/73d2b848a51f3c355407ca539ce9318245a9b2e4cf7b7dcd2eadcc27259f8875/68747470733a2f2f7777772e7261696e6d657465722e6e65742f"&gt;&lt;img src="https://camo.githubusercontent.com/73d2b848a51f3c355407ca539ce9318245a9b2e4cf7b7dcd2eadcc27259f8875/68747470733a2f2f7777772e7261696e6d657465722e6e65742f" alt="Rainmeter"&gt;&lt;/a&gt; to add Widgets.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Dock&lt;/strong&gt; : &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/2155e470231cba17281232606d788f55fc0da9a748585fe48cbfae2f4b930f26/68747470733a2f2f7777772e77696e737465702e6e65742f"&gt;&lt;img src="https://camo.githubusercontent.com/2155e470231cba17281232606d788f55fc0da9a748585fe48cbfae2f4b930f26/68747470733a2f2f7777772e77696e737465702e6e65742f" alt="Nexus"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Music Controller&lt;/strong&gt; : &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e724f97f5d9c028f73a9b0141325e113c3efe41f0ac13d0d20bf06b49358580c/68747470733a2f2f7777772e64657669616e746172742e636f6d2f6a61786f726967696e616c732f6172742f4d6f64756c6172506c61796572732d76312d332d383836353737323536"&gt;&lt;img src="https://camo.githubusercontent.com/e724f97f5d9c028f73a9b0141325e113c3efe41f0ac13d0d20bf06b49358580c/68747470733a2f2f7777772e64657669616e746172742e636f6d2f6a61786f726967696e616c732f6172742f4d6f64756c6172506c61796572732d76312d332d383836353737323536" alt="ModularPlayers"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
Applications&lt;/h1&gt;
&lt;h3&gt;
Discord&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/65074550/147639804-098fe178-7ede-4437-83c1-d50cc108d2ee.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XZpu0YpG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/65074550/147639804-098fe178-7ede-4437-83c1-d50cc108d2ee.png" alt="discord"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/iDCoded/Windows-Ricebetterdiscord.app/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vv-3L_yb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/iDCoded/Windows-Ricebetterdiscord.app/" alt="BetterDiscord"&gt;&lt;/a&gt; for &lt;strong&gt;Plugins&lt;/strong&gt; &amp;amp; &lt;strong&gt;Themes&lt;/strong&gt; to enhance Discord.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Theme&lt;/strong&gt; : &lt;a rel="noopener noreferrer" href="https://github.com/CapnKitten/Material-Discord"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p6l9UtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/CapnKitten/Material-Discord" alt="MaterialDiscord"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugins&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Plugins&lt;/th&gt;
&lt;th&gt;Links&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;AppNotifications&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://betterdiscord.app/plugin/AppNotifications" rel="nofollow"&gt;https://betterdiscord.app/plugin/AppNotifications&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;BetterImageViewer&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://1lighty.github.io/BetterDiscordStuff/?plugin=BetterImageViewer" rel="nofollow"&gt;https://1lighty.github.io/BetterDiscordStuff/?plugin=BetterImageViewer&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GameActivityToggle&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://betterdiscord.app/plugin/GameActivityToggle" rel="nofollow"&gt;https://betterdiscord.app/plugin/GameActivityToggle&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;SpotifyControls&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://betterdiscord.app/plugin/SpotifyControls" rel="nofollow"&gt;https://betterdiscord.app/plugin/SpotifyControls&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h3&gt;
Spotify&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/65074550/147640259-aa7d17a3-3f1a-442d-b290-06fbe7a1f63e.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MLRWKc1q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/65074550/147640259-aa7d17a3-3f1a-442d-b290-06fbe7a1f63e.png" alt="spotify"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/317e2b641f21fade5e938163f6625394c2ede2e15069754c41faadad84531308/68747470733a2f2f7370696365746966792e6170702f"&gt;&lt;img src="https://camo.githubusercontent.com/317e2b641f21fade5e938163f6625394c2ede2e15069754c41faadad84531308/68747470733a2f2f7370696365746966792e6170702f" alt="Spicetify-cli"&gt;&lt;/a&gt; Commandline tool to customize Spotify client.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Theme&lt;/strong&gt; : &lt;strong&gt;Dribbblish&lt;/strong&gt; Color scheme : &lt;strong&gt;Nord-dark&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Extensions&lt;/strong&gt; : &lt;strong&gt;Dribbblish&lt;/strong&gt;, &lt;strong&gt;Popup-Lyrics&lt;/strong&gt;, &lt;strong&gt;Full App Display&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Editor&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Visual Studio Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/65074550/147641740-3f65c4f6-2582-49bf-b5fb-e40007b5a328.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cWqfL_v5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/65074550/147641740-3f65c4f6-2582-49bf-b5fb-e40007b5a328.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Theme&lt;/strong&gt; : &lt;strong&gt;GitHub Dark&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Font&lt;/strong&gt; : &lt;strong&gt;Fira Code&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Terminal&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Windows Terminal&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/65074550/147642117-409d2389-6c13-428c-83d1-739022060ad8.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eYSlU7Yt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/65074550/147642117-409d2389-6c13-428c-83d1-739022060ad8.png" alt="windows terminal"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Colorscheme&lt;/strong&gt; : &lt;strong&gt;One Half Dark&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;System Info&lt;/strong&gt; : &lt;strong&gt;Screenfetch&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
File Manager&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Files&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/65074550/147641318-768e3acd-3bb9-447d-9148-227d17a6ae1d.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pTwG4lii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/65074550/147641318-768e3acd-3bb9-447d-9148-227d17a6ae1d.png" alt="files"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Custom Theme&lt;/strong&gt; : &lt;strong&gt;Glass&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
App Launcher&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;PowerToys Run&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/65074550/147641624-5eff79c0-975d-47a6-82ce-6c40061045e5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s----OCf1PQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/65074550/147641624-5eff79c0-975d-47a6-82ce-6c40061045e5.png" alt="powertoys run"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/iDCoded/Windows-Rice"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>windows</category>
      <category>ricing</category>
      <category>customization</category>
    </item>
    <item>
      <title>What is the "XSLT" equivalent for JSON? Here is the new answer</title>
      <author>suntong</author>
      <pubDate>Thu, 30 Dec 2021 04:33:55 +0000</pubDate>
      <link>https://dev.to/suntong/what-is-the-xslt-equivalent-for-json-here-is-the-new-answer-7la</link>
      <guid>https://dev.to/suntong/what-is-the-xslt-equivalent-for-json-here-is-the-new-answer-7la</guid>
      <description>&lt;h3&gt;
  &lt;a href="#prefix"&gt;
  &lt;/a&gt;
  Prefix
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;What is the "XSLT" equivalent for JSON?&lt;/em&gt;  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is the question that people had been asking &lt;a href="https://stackoverflow.com/questions/1618038/xslt-equivalent-for-json"&gt;more than 10 years ago&lt;/a&gt;. By then the &lt;code&gt;xslt&lt;/code&gt; is still the number one answer.&lt;br&gt;&lt;br&gt;
It's high time to take a look at the new kids in town now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-xslt"&gt;
  &lt;/a&gt;
  What is "XSLT"?
&lt;/h3&gt;

&lt;p&gt;XSLT stands for XSL Transformation. It is used to transform XML documents into into various other types of document (like transforming XML into HTML).&lt;/p&gt;

&lt;p&gt;It's most important purpose is transform data, from XML form into a format more presentable to human beings.&lt;br&gt;&lt;br&gt;
XSL is to XML is similar as CSS is to HTML. XSLT can be viewed as the rendering engine.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-new-choices-now"&gt;
  &lt;/a&gt;
  What are the new choices now?
&lt;/h3&gt;

&lt;p&gt;The second choice in the above answer had been &lt;a href="https://stedolan.github.io/jq/"&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt;, and I agree that it is very powerful.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;jq is like sed for JSON data - you can use it to slice and filter and map and transform structured data with the same ease that sed, awk, grep and friends let you play with text. There are install packages for different OS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But comparing to &lt;code&gt;jsonpath&lt;/code&gt; it is more difficult to learn to most people, which brings us to the first tool to recommend this time -- &lt;a href="https://github.com/go-jsonfile/jp/"&gt;&lt;code&gt;jp&lt;/code&gt;&lt;/a&gt;, because&lt;/p&gt;

&lt;p&gt;&lt;code&gt;jp&lt;/code&gt; is as simple as &lt;code&gt;jsonpath&lt;/code&gt; but as powerful as &lt;code&gt;jq&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-about-the-rendering-engine-part"&gt;
  &lt;/a&gt;
  How about the rendering engine part?
&lt;/h3&gt;

&lt;p&gt;The problem of both &lt;code&gt;jq&lt;/code&gt; or &lt;code&gt;jp&lt;/code&gt; is that although they can do data projection in any direction (doing data filtering in any way), their purpose are still focusing on data transformation, but when talking about rendering &lt;code&gt;json&lt;/code&gt; data into a format more presentable to human beings, then there is no better tools than &lt;a href="https://github.com/go-easygen/easygen/"&gt;&lt;code&gt;easygen&lt;/code&gt;&lt;/a&gt;. In fact, the &lt;code&gt;easygen&lt;/code&gt; is a universal code/text generator that not only works on &lt;code&gt;json&lt;/code&gt; data but it can take in data defined in YAML format as well. It can be used as any text (or html, or any other forms) generator for arbitrary purposes with arbitrary data and templates. It is built on top of the powerful Go template engine.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#to-put-them-together"&gt;
  &lt;/a&gt;
  To put them together
&lt;/h3&gt;

&lt;p&gt;So the other day, I&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;download &lt;code&gt;json&lt;/code&gt; data via API&lt;/li&gt;
&lt;li&gt;filter the &lt;code&gt;json&lt;/code&gt; data with the &lt;a href="https://github.com/go-jsonfile/jp/releases/tag/v0.2.2"&gt;&lt;code&gt;jp&lt;/code&gt;&lt;/a&gt; that supports filtering by regular expression (&lt;em&gt;hint: do you know any json filter that when given a video's file name, can tell a tv-series apart from a movie?&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;then present the &lt;code&gt;json&lt;/code&gt; data in human friendly format with the new &lt;code&gt;easygen&lt;/code&gt; that can read from &lt;code&gt;stdin&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;in the human friendly form, I need to convert the long number of size in bytes to the size in MB and GB, and I had to search for how to do calculation in Go template, but then was &lt;em&gt;delighted&lt;/em&gt; to realized that &lt;code&gt;easygen&lt;/code&gt; &lt;em&gt;already&lt;/em&gt; supports the &lt;a href="https://github.com/go-easygen/easygen/issues/25#cal"&gt;calculation in Go template&lt;/a&gt; long time ago.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll give a more concrete example in the next article.&lt;/p&gt;

&lt;p&gt;To me now,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;easygen&lt;/code&gt; is to &lt;code&gt;json&lt;/code&gt; what &lt;code&gt;xslt&lt;/code&gt; is to &lt;code&gt;xml&lt;/code&gt;, but much more powerful and versatile.&lt;/p&gt;

</description>
      <category>json</category>
      <category>transform</category>
      <category>easygen</category>
      <category>generator</category>
    </item>
    <item>
      <title>Binary Search Implementation In Java</title>
      <author>Pratik</author>
      <pubDate>Thu, 30 Dec 2021 04:32:10 +0000</pubDate>
      <link>https://dev.to/pratikdhame/binary-search-implementation-in-java-d0g</link>
      <guid>https://dev.to/pratikdhame/binary-search-implementation-in-java-d0g</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZhfnFtN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v56yyav4nozo3cw4do3j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZhfnFtN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v56yyav4nozo3cw4do3j.png" alt="Image description" width="880" height="701"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>My Visual studio Theme</title>
      <author>Prince Verma</author>
      <pubDate>Thu, 30 Dec 2021 04:23:20 +0000</pubDate>
      <link>https://dev.to/vermaprince123/my-visual-studio-theme-58bg</link>
      <guid>https://dev.to/vermaprince123/my-visual-studio-theme-58bg</guid>
      <description>&lt;p&gt;Try it at least once , I will 100% sure you love this theme !!!&lt;br&gt;
And give your valuable feedback.....&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tBU_2xZk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjpr3wnppi72dcoab8bx.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tBU_2xZk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjpr3wnppi72dcoab8bx.PNG" alt="Image description" width="880" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>ux</category>
      <category>design</category>
      <category>react</category>
    </item>
    <item>
      <title>JavaScript The Hard Parts-Part 1</title>
      <author>Osama Mohamed Ammar</author>
      <pubDate>Thu, 30 Dec 2021 03:49:42 +0000</pubDate>
      <link>https://dev.to/osamamammar/javascript-the-hard-parts-part-1-210a</link>
      <guid>https://dev.to/osamamammar/javascript-the-hard-parts-part-1-210a</guid>
      <description>&lt;p&gt;In the beginning, we need to be sure that we know a lot of things&lt;br&gt;
imagine, the sheet that you write in JavaScript is wrapped with a big thing called execution context.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So what is execution context?&lt;/strong&gt;&lt;br&gt;
Execution context simply is created to run the code of a function and has 2 parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Thread of execution&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Memory&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;How does JavaScript code run simply?&lt;/strong&gt;&lt;br&gt;
Line-by-line runs or â€™executesâ€™, each line â€” &lt;strong&gt;known as the thread of execution&lt;/strong&gt; and saves â€˜dataâ€™ like strings and arrays in the memory, so we can use that data later.&lt;/p&gt;

&lt;p&gt;Another thing, we should know the &lt;strong&gt;difference between parameter and argument.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When we called &lt;strong&gt;argument&lt;/strong&gt;, we mean the actual number or value that gets passed in, and the &lt;strong&gt;parameter&lt;/strong&gt; is the placeholder that awaits it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Call Stack?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JavaScript keeps track of what the function is currently running &lt;br&gt;
(whereâ€™s the thread of execution) there are two things that can happen for call stack:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run a function â†’add to call stack&lt;/li&gt;
&lt;li&gt;Finish running the function â†’JS removes it from the call stack&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the &lt;strong&gt;&lt;em&gt;three main cores in the JS engine&lt;/em&gt;&lt;/strong&gt; Now we can start reviewing all these concepts clearly all together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-example"&gt;
  &lt;/a&gt;
  For example:
&lt;/h2&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const num = 3;
function multiplyBy2 (inputNumber){
const result = inputNumber*2;
return result;
}
const output = multiplyBy2(num);
const newOutput = multiplyBy2(10);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;letâ€™s play around with that and show what the JavaScript engine will do.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wAn0Eagg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4586/1%2AL_OZCVopBaMgGTj-JAoVAw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wAn0Eagg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4586/1%2AL_OZCVopBaMgGTj-JAoVAw.png" alt="Image 1" width="880" height="424"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we say, imagine the code we have written is wrapped with something called execution context like a big rectangle, so we should have 2 parts&lt;br&gt;
memory(global memory) and thread of execution.&lt;/p&gt;

&lt;p&gt;When you look at the code example in the first line, we have a constant variable initialized with the number 3 so that will save in global memory.&lt;/p&gt;

&lt;p&gt;In the next line, we have a declaration function called multiplyBy2 this function body we are gonna take, bundle, store it in the computer memory like a string of characters, so we will represent it with a little box that will add to memory without running because we do not call this function yet.&lt;/p&gt;

&lt;p&gt;Now we wave down to where the next line we declare a constant output that stores a call function, so we canâ€™t store that in memory.&lt;br&gt;
We can only store values that fixed final things. We canâ€™t store instructions that tell go to do some work, so the something that tells me the right-hand side is a command canâ€™t store now is a parenthesis, so, for now, the constant output variable itâ€™s gonna remain uninitialized, and we will go running this command.&lt;br&gt;
This command will create an execution context containing two parts that we said above thread and memory (local to this function) look at the picture above.&lt;/p&gt;

&lt;p&gt;So before go to inside multiblyBy2 function we first handle the parameter in the memory(local memory), and it will take a value of the argument which is number 3, then after that, we can grab result hit result, and assign it to 6&lt;/p&gt;

&lt;p&gt;The final line inside a function is the interesting one, we have got a return result, so what is result mean JavaScript doesn't know automatically, so it goes hunting for it in our local memory, finds it's a number 6, and then takes that number and ships it returns it to output which means evaluate output to number 6, &lt;strong&gt;note&lt;/strong&gt; after that execution context will be deleted.&lt;/p&gt;

&lt;p&gt;Next line, we declare constant newOutput we put it in memory, but we don't know what is stored in newOutput yet, because we are going to do another execution context for the calling this function again as we did before, the image below illustrates this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jclMO17o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4258/1%2Adp8KMe0uBDLQ0TCeIWRUPg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jclMO17o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4258/1%2Adp8KMe0uBDLQ0TCeIWRUPg.png" alt="Image 2" width="880" height="433"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the function finishes or returns a value, the execution context will be deleted.&lt;/p&gt;

&lt;p&gt;JavaScript also has something called the call stack, JavaScript keeps track of what function is currently running by using the final part of understanding our platform cores of the JavaScript engine called the call stack, it's like a traditional way of storing information in our computer, the image below illustrates this.&lt;/p&gt;

&lt;p&gt;This is the call stack at the beginning of our program until when we're starting to call a function.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pnjgHaNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2An7H2EnSbDRCKgu6Ak21FWQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pnjgHaNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2An7H2EnSbDRCKgu6Ak21FWQ.png" alt="Image 3" width="458" height="572"&gt;&lt;/a&gt;&lt;br&gt;
So when we call multiplyBy2(3) the call stack will look like that.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gCExL4Vj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2Ai2ZKq0Awt_-OpUuatGKCpg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gCExL4Vj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2Ai2ZKq0Awt_-OpUuatGKCpg.png" alt="Image 4" width="464" height="564"&gt;&lt;/a&gt;&lt;br&gt;
After the return function happens, it popped up from the stack and returns to the same shape in the first image, According to our code example, the function after the first pop-up it will call again multiplyBy2(10).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ibLE2oD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AlurbsnvrvesRj_Aj3mMc0w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ibLE2oD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AlurbsnvrvesRj_Aj3mMc0w.png" alt="Call stack from right to left" width="464" height="564"&gt;&lt;/a&gt;&lt;br&gt;
After the function finish, the call stack will return to empty.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; if we have an inner function inside an outer function is already called that makes the inner function pushed to the call stack above outer function and after finished inner function, it will pop up from the stack and leave the outer function in the stack until it finishes and pop up from the call stack and make itâ€™s empty.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you got here&lt;/em&gt;, &lt;strong&gt;&lt;em&gt;thank you&lt;/em&gt;&lt;/strong&gt;. &lt;em&gt;Finally, this article is part of a collection of articles about JavaScript hard parts and behind the scenes, don't forget to follow it when it comes out.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What are objects in programming?</title>
      <author>Calin Baenen</author>
      <pubDate>Thu, 30 Dec 2021 01:53:52 +0000</pubDate>
      <link>https://dev.to/baenencalin/what-are-objects-in-programming-1nc9</link>
      <guid>https://dev.to/baenencalin/what-are-objects-in-programming-1nc9</guid>
      <description>&lt;p&gt;So, if you're new to programming, or just hang around people that are programmers, you may have heard of things called "objects".&lt;br&gt;
In this article, we will discuss what exactly objects are, and what they are like in certain languages.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-an-object"&gt;
  &lt;/a&gt;
  What is an object?
&lt;/h2&gt;

&lt;p&gt;At its most fundamental level, an object is a collection of data grouped together.&lt;/p&gt;

&lt;p&gt;Here's a classic example, a &lt;code&gt;Person&lt;/code&gt; object.&lt;br&gt;
Say we want to talk about a person in some code, people in the real world are more complex than a simple number, or a string of text (text, as the kind you're reading now, in programming is referred to as a "string").&lt;br&gt;
But, combining those last two, we get two basic properties all people have in common, name and age.&lt;/p&gt;

&lt;p&gt;So, we know all people have a name and an age, but how do we represent that?&lt;br&gt;
Well, not writing in any particular language, an object may be represented like following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    String name;
    Number age;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This says that this object (&lt;code&gt;o&lt;/code&gt;) contains some &lt;strong&gt;string&lt;/strong&gt; data called &lt;code&gt;name&lt;/code&gt; and some number data called &lt;code&gt;age&lt;/code&gt;.&lt;br&gt;
(The semicolons &lt;code&gt;;&lt;/code&gt; just separate the lines, like decoration.)&lt;br&gt;&lt;br&gt;
The idea of an object in programming is no different than the idea of having a subscript &lt;code&gt;i&lt;/code&gt; on a variable &lt;code&gt;V&lt;/code&gt; (Vi) in science (which stands for the "&lt;strong&gt;I&lt;/strong&gt;nitial &lt;strong&gt;V&lt;/strong&gt;elocity" of a real-world object).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#disambiguating-class-and-object"&gt;
  &lt;/a&gt;
  Disambiguating "class" and "object".
&lt;/h2&gt;

&lt;p&gt;If you've heard "object", you've likely also heard of "class".&lt;br&gt;
If you haven't, you can skip this, as it may just add confusion for the time-being.&lt;/p&gt;

&lt;p&gt;So, what is a class?&lt;br&gt;
A "class" is a general programming term that refers to the structure of an object.&lt;br&gt;
In fact, most people compare classes to blueprints, where the class is the blueprint and the object is the building (finished product).&lt;/p&gt;

&lt;p&gt;Classes in most programming languages are defined like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Person {
    String name;
    Number age;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This states there exists a class called &lt;code&gt;Person&lt;/code&gt;, whose members consist of a &lt;code&gt;name&lt;/code&gt; "field" and an &lt;code&gt;age&lt;/code&gt; "field", where a "field" is some named data.  &lt;/p&gt;

&lt;p&gt;But, classes are comprised of more than just the blueprint.&lt;br&gt;
Because in the real world, we actually use those plans to build something. - In programming, it's not much different.&lt;br&gt;
The "building" we make with this "blueprint" class is called an "instance", as in "I have an instance of a class.".&lt;br&gt;
Any building constructed with the &lt;code&gt;Person&lt;/code&gt; blueprint will always be a &lt;code&gt;Person&lt;/code&gt; instance (&lt;a href="https://www.analyticsvidhya.com/blog/2020/10/inheritance-object-oriented-programming/"&gt;but not always vice-versa&lt;/a&gt;; kind of like how all squares are rectangles, but not all rectangles are squares).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-objects-look-like-in-multiple-languages"&gt;
  &lt;/a&gt;
  What objects look like in multiple languages.
&lt;/h2&gt;

&lt;p&gt;Now that we know what an object and a class is, lets see how they look in various languages, in order of difficulty from easiest to understand to hardest to understand.&lt;br&gt;
In case you were thinking of dipping your toes into the water a little.&lt;br&gt;&lt;br&gt;
To help boost your understanding a little, all "people" (&lt;code&gt;Person&lt;/code&gt; instances) created will have the name "Tom" and will be fifteen (15) years old.&lt;br&gt;
In other words, the same thing will be shown, just in a bunch of different programming languages.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python.
&lt;/h3&gt;

&lt;p&gt;Python has simple object-classes that anyone can read!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
    &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Tom"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript.
&lt;/h3&gt;

&lt;p&gt;JavaScript allows you to create objects on their own, or from a blueprint.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Does the same thing as the last definition.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#java"&gt;
  &lt;/a&gt;
  Java.
&lt;/h3&gt;

&lt;p&gt;Java has classes but not raw objects, unlike JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;    &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/* ... */&lt;/span&gt;

&lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Tom"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C.
&lt;/h3&gt;

&lt;p&gt;C is one of the barest languages to exist, but it still provides us with a neat way to organize our data!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt;         &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/* ... */&lt;/span&gt;

&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;name:&lt;/span&gt; &lt;span class="s"&gt;"Tom"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nl"&gt;age:&lt;/span&gt;  &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
&lt;b&gt;&lt;/b&gt;&lt;center&gt;Thanks for reading!&lt;br&gt;Cheers!&lt;/center&gt;
&lt;/h1&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Time for a job change? ðŸ¤”</title>
      <author>Let's Code</author>
      <pubDate>Thu, 30 Dec 2021 00:46:12 +0000</pubDate>
      <link>https://dev.to/frontendengineer/time-for-change-469l</link>
      <guid>https://dev.to/frontendengineer/time-for-change-469l</guid>
      <description>&lt;p&gt;Prices ðŸ’² and services everywhere are continuing to soar ðŸ“ˆ at record levels AND the worth of money on our savings account is losing value over time. Although the yearly salary ðŸ’¶ increase helps, it seems to be not enough.&lt;/p&gt;

&lt;p&gt;The thought of a career ðŸ’¼ switch definitely came to mind as it may bring at least extra 20% more compensation. It is understandable if this option doesn't apply to many as everybody's situation are different - one is happy and job hopping is a bit risky. &lt;/p&gt;

&lt;p&gt;I am leaning on looking to better provide for my family. As a matter of fact I have couple of interviews lined up next week. What is your situation and are you considering it?&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://dev.to/frontendengineer/series/14457"&gt;resource&lt;/a&gt; might help you in case you need a refresher on interview.&lt;/p&gt;

</description>
      <category>career</category>
      <category>devjournal</category>
    </item>
  </channel>
</rss>
