<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Making the most boring website ever with TypeScript, NestJs, React and others. Part 2. </title>
      <author>NordicBeaver</author>
      <pubDate>Sun, 03 Oct 2021 19:18:59 +0000</pubDate>
      <link>https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-part-2-3p82</link>
      <guid>https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-part-2-3p82</guid>
      <description>&lt;p&gt;I made another video on how to make a very generic website for a local business. In this one we create a new NextJs project for client's side, make a homepage, add a new model for services and a way to manage them in the admin panel. Enjoy :).&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/hHjANr2Gjx0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-tip-from-the-video-snippets"&gt;
  &lt;/a&gt;
  A tip from the video: snippets.
&lt;/h2&gt;

&lt;p&gt;For some reason I was very reluctant to make my own snippets. A mean I used build-in ones, or the ones that come with extensions, but I never made my own. Until recently I was using css modules and I got &lt;em&gt;really&lt;/em&gt; tired typing import for my styles.&lt;/p&gt;

&lt;p&gt;So I decided to give it a shot. Turns out even if it does not save you tons of time, I mean typing is like 1% of programming, it surely makes you feel better. So I guess my advice is if you get annoyed about typing something over and over, consider turning that thing into a snippet.&lt;/p&gt;

&lt;p&gt;And here is that css modules snippet I was talking about for VS Code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Import css module"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; 
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"prefix"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"mcss"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"import styles from ./$TM_FILENAME_BASE.module.css'"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>react</category>
      <category>typescript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to use Bootstrap with Flask</title>
      <author>Sm0ke</author>
      <pubDate>Sun, 03 Oct 2021 19:09:44 +0000</pubDate>
      <link>https://dev.to/sm0ke/how-to-use-bootstrap-with-flask-e41</link>
      <guid>https://dev.to/sm0ke/how-to-use-bootstrap-with-flask-e41</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article explains &lt;strong&gt;&lt;a href="https://blog.appseed.us/how-to-use-bootstrap-with-flask/"&gt;How to use Bootstrap with Flask&lt;/a&gt;&lt;/strong&gt; and code professional web apps with a responsive layout. For newcomers, &lt;strong&gt;Bootstrap&lt;/strong&gt; is the most popular CSS framework with more than 150k Github stars and a huge ecosystem behind it. &lt;strong&gt;Flask&lt;/strong&gt; is an open-source framework used to code from simple one-page projects to complex APIs, microservices, or even complex eCommerce solutions.&lt;/p&gt;

&lt;p&gt;In order to make this article more useful, we will take a look at an open-source Flask project that provides a beautiful UI styled with Bootstrap in two flavors: a minimum version that uses components downloaded from the official &lt;strong&gt;Bootstrap Samples&lt;/strong&gt; page and a production-ready version with more pages (home, about, contact) and a complete set of components.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;Section #1 - &lt;strong&gt;What is Bootstrap&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Section #2 - &lt;strong&gt;What is Flask&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Section #3 - &lt;strong&gt;Set up the environment&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Section #4- &lt;strong&gt;Code a Flask app&lt;/strong&gt; (with authentication)&lt;/li&gt;
&lt;li&gt;Section #5 - &lt;strong&gt;Integrate a fully-fledged UI Kit&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Free sample with more modules: &lt;strong&gt;&lt;a href="https://appseed.us/apps/flask-apps/flask-pixel-bootstrap-uikit"&gt;Flask Bootstrap Pixel Lite&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4PYI6J9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nicdel27lh0rfoggbnp1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4PYI6J9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nicdel27lh0rfoggbnp1.png" alt="Bootstrap with Flask - Pixel Lite Sample."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-bootstrap"&gt;
  &lt;/a&gt;
  What is Bootstrap
&lt;/h2&gt;

&lt;p&gt;In a single sentence, Bootstrap helps us to code faster and easier user interfaces by providing a set of HTML, and CSS templates for creating UI components like buttons, dropdowns, forms, alerts, modals, tabs, accordions, etc. Reusing the assets provided by the Bootstrap framework we might win time and also improve the quality of our end-product.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Reasons to use Bootstrap&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Easy to use&lt;/strong&gt; - any developer with basic programming knowledge can use and combine Bootstrap components to prototype fast a web page.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Responsiveness&lt;/strong&gt; - Bootstrap components are built to adapt and display properly on desktop and mobile devices with a wide range of resolutions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Alive Community&lt;/strong&gt; - this amazing framework is actively supported and versioned by a huge open-source community&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cross-Browser Compatibility&lt;/strong&gt; - Bootstrap keeps up the codebase with the latest standards for a smooth deployment on all well-known browsers: Chrome, Safari, IE, or Firefox.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To getting started with Bootstrap and code a new web page is pretty easy. Just copy below snippet, save it locally and after, visualize the file using Chrome or Safari browser.  &lt;/p&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;My First Bootstrap Page&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

      &lt;span class="c"&gt;&amp;lt;!-- Bootstrap CSS --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-primary"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Get started with Bootstrap
    &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;       

    &lt;span class="c"&gt;&amp;lt;!-- Bootstrap Javascripts --&amp;gt;&lt;/span&gt;  
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;    
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Simple Bootstrap Page - browser view&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YoYtzv_1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rab10e2d762z0172qr0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YoYtzv_1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1rab10e2d762z0172qr0.png" alt="Bootstrap - Simple Page"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;In the same way we can download more &lt;a href="https://getbootstrap.com/docs/5.1/examples/"&gt;components and samples&lt;/a&gt; from the official website and build more complex pages with a left menu, a navigation bar, footer, and horizontal sections.  &lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bZTZsXWK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/preykd0p84gjnm1nlvb1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bZTZsXWK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/preykd0p84gjnm1nlvb1.png" alt="Bootstrap - Components and Samples."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-flask"&gt;
  &lt;/a&gt;
  What is Flask
&lt;/h2&gt;

&lt;p&gt;Flask is an open-source web framework coded in Python using a lightweight codebase and flexible by design. By default, Flask is not coming with a database or any other hard dependency empowering the developers with total freedom in terms of used modules and how to structure the project. To use Flask and code a test application, Python3 should be properly installed in the workstation and accessible in the terminal window.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;flask
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command install &lt;code&gt;Flask&lt;/code&gt; using &lt;code&gt;PIP&lt;/code&gt; the official package manager for Python. Once Flask is installed, we can code a simple app and run it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt; 
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'Flask is great!'&lt;/span&gt; 

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we execute the above snippet and open &lt;code&gt;http://localhost:5000&lt;/code&gt; in the browser we should see the message Flask is great. Even if not too much, we've just coded an usable Flask application that we can improve with more features and modules.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#set-up-environment"&gt;
  &lt;/a&gt;
  Set Up Environment
&lt;/h2&gt;

&lt;p&gt;To run successfully the all samples and code snippets provided in this article a minimal programming kit is required to be properly install in our workstation and fully accessible by the terminal window.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;A modern editor&lt;/strong&gt; - VSCode or Atom&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Python3&lt;/strong&gt; - a modern script language used for many types of projects&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;GIT&lt;/strong&gt; - a command-line tool used to download sources from Github&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;VSCode&lt;/strong&gt; - a popular and free code editor&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;VsCode helps us to visualize and edit the sources, execute our projects and investigate the issues that might occur during the programming process.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tV7T5yoC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmkgspzcy6r4d41zuhoe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tV7T5yoC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmkgspzcy6r4d41zuhoe.png" alt="VsCode - Modern Code Editor"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Python Interpreter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Python is a general-purpose coding language—which means that, unlike HTML, CSS, and JavaScript, it can be used for other types of programming and software development besides web development. Python is an interpreted language (translated into bytecode at runtime) and can be used for things like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic programming: using strings, adding numbers, open files&lt;/li&gt;
&lt;li&gt;Writing OS system scripts&lt;/li&gt;
&lt;li&gt;Back end (or server-side) web and mobile app development&lt;/li&gt;
&lt;li&gt;Desktop applications and software development&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Python can be downloaded and installed from the &lt;a href="https://www.python.org/"&gt;official website&lt;/a&gt; with just few clicks. Once is installed, we can check the installation in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python &lt;span class="nt"&gt;--version&lt;/span&gt;
Python 3.7.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wjzOtvfC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2nw43qgrtvrgbius9oy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wjzOtvfC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2nw43qgrtvrgbius9oy.png" alt="Programming Kit - Python Interpreter."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;GIT command-line versioning tool&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Git is a free version control system designed to handle everything from small to very large projects with speed and efficiency. Using GIT we can clone/download and manage projects from Github and BitBucket with ease.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1xjMvzc1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ygihkpt5tem70kacts5w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1xjMvzc1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ygihkpt5tem70kacts5w.png" alt="Programming Kit - GIT versioning tool."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;With this minimal set up we can move forward and code a simple Flask app that provides a session-based authentication and a few pages like SignIN, SignUP built with components downloaded from Bootstrap.  &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#code-flask-app-with-authentication"&gt;
  &lt;/a&gt;
  Code Flask App (with authentication)
&lt;/h2&gt;

&lt;p&gt;The project aims to be pretty simple with an intuitive codebase structure, SQLite persistence, and three pages (index, login, register) styled with Bootstrap 5. To cover all requirements a few Python modules should be installed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Flask&lt;/code&gt; - the framework that powers the app&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Flask-Login&lt;/code&gt; - a popular library used to manage the sessions&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Flask-Bcrypt&lt;/code&gt; - used for password encryption&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Flask-SqlAlchemy&lt;/code&gt; - a popular library to access the database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Regarding the codebase structure, Flask allows up to configure the files without any constraints. Here is a possible structure that isolates the design from the functional part (routes, models) nicely.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&amp;lt; PROJECT ROOT &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   |
   |-- app/
   |    |-- static/
   |    |    |-- &amp;lt;css, JS, images&amp;gt;    &lt;span class="c"&gt;# CSS files, Javascripts files&lt;/span&gt;
   |    |
   |    |-- templates/
   |    |    |
   |    |    |-- index.html           &lt;span class="c"&gt;# Index File&lt;/span&gt;
   |    |    |-- login.html           &lt;span class="c"&gt;# Login Page&lt;/span&gt;
   |    |    |-- register.html        &lt;span class="c"&gt;# Registration Page&lt;/span&gt;
   |    |    
   |    |
   |   config.py                      &lt;span class="c"&gt;# Provides APP Configuration &lt;/span&gt;
   |   forms.py                       &lt;span class="c"&gt;# Defines Forms (login, register) &lt;/span&gt;
   |   models.py                      &lt;span class="c"&gt;# Defines app models &lt;/span&gt;
   |   views.py                       &lt;span class="c"&gt;# Application Routes &lt;/span&gt;
   |
   |-- requirements.txt
   |-- run.py
   |
   |-- &lt;span class="k"&gt;**************************************&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this simple structure, the most relevant files are listed below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;run.py&lt;/code&gt; - the entry point and the value of FLASK_APP environment variable&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app directory&lt;/code&gt; bundles all files and assets used in our  project&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app/config.py&lt;/code&gt; - defines app configuration&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app/forms.py&lt;/code&gt; - defines SignIN, SignUP authentication forms&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app/models.py&lt;/code&gt; - defines the Users table (saves users and passwords)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;app/views.py&lt;/code&gt; - handles the app routing like login, logout and register&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another important location is the &lt;code&gt;templates directory&lt;/code&gt; where are defined the &lt;code&gt;index&lt;/code&gt; file and &lt;code&gt;SignIN&lt;/code&gt;, &lt;code&gt;SignUP&lt;/code&gt; pages. In order to use Bootstrap, the CSS and JS assets are loaded via CDN, a remote blazing-fast storage server without any local storage.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Index.html&lt;/strong&gt; - Styled with Bootstrap&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"author"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Mark Otto, Jacob Thornton, and Bootstrap contributors"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"generator"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Hugo 0.88.1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Flask Authentication | Bootstrap v5.1&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- CSS only --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/static/assets/css/custom.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;main&amp;gt;&lt;/span&gt;
       &lt;span class="c"&gt;&amp;lt;!-- PAGE Content --&amp;gt;&lt;/span&gt;    
    &lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- JavaScript Bundle with Popper --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code (simplified version for clarity proposes) will produce the following layout without built entirely from downloaded components. The functional part of our project detects if the user is authenticated or not and suggest to &lt;code&gt;login&lt;/code&gt; or &lt;code&gt;register&lt;/code&gt; a new account.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XA1Q3EPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ct5zlh19xhoab7gx4a5h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XA1Q3EPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ct5zlh19xhoab7gx4a5h.png" alt="Bootstrap and Flask - Index page"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Guest users are able to create a new account via a simple page as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A6OUxpgm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/151yfv5d6csuy2yaea20.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A6OUxpgm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/151yfv5d6csuy2yaea20.png" alt="Bootstrap and Flask - SignUP Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Flask Bootstrap Sample&lt;/strong&gt; - SignIN Page  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--orr-bWcW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nr0230kmacflflfm21i8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--orr-bWcW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nr0230kmacflflfm21i8.png" alt="Bootstrap and Flask - Login Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#integrate-pixel-lite"&gt;
  &lt;/a&gt;
  Integrate Pixel Lite
&lt;/h2&gt;

&lt;p&gt;Using a minimal UI kit might be ok for most projects but using a design crafted by an agency is probably better. In order to add more value to our sample we will use an open-source Bootstrap 5 design crafted by Themesberg: Pixel Lite. This amazing design comes with pre-built pages (signIn, signUp, about) and a rich set of UI components that we can use and combine. Bellow are the pages integrated into our simple project:&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Flask Pixel Bootstrap Kit - Freelancer Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WwB9MkcX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/unp5bmct9k6k942m88bo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwB9MkcX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/unp5bmct9k6k942m88bo.png" alt="Flask Bootstrap Pixel - Freelancer page"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Flask Pixel Bootstrap Kit - About Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s8HP203H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xgksbk82rqaqr27hyc6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s8HP203H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xgksbk82rqaqr27hyc6.png" alt="Flask Bootstrap Pixel - About page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can easily see that this new design is definitely better. Let's compile the free sample published on Github by following the build instructions provided in the &lt;a href="https://github.com/app-generator/flask-how-to-use-with-bootstrap/blob/main/README.md"&gt;README&lt;/a&gt; file saved at the root of the project.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone the project&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/flask-how-to-use-with-bootstrap.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;flask-how-to-use-with-bootstrap 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Install dependencies&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv &lt;span class="nb"&gt;env&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source env&lt;/span&gt;/bin/activate
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Set Up Environment&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;run.py
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;FLASK_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;development
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #5&lt;/strong&gt; - Start the app&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;flask run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default, the application will redirect guest users to authenticate (SignIN page). Once we create a new user and sign in, the app provides access to all private pages.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NgrzOQMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6silj8wpa66mv6wrmahv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NgrzOQMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6silj8wpa66mv6wrmahv.png" alt="Flask Bootstrap Pixel - Login page"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access: &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;More &lt;a href="https://appseed.us/apps/flask-apps"&gt;Flask Apps&lt;/a&gt; and &lt;a href="https://appseed.us/admin-dashboards/flask"&gt;Dashboards&lt;/a&gt; - free &amp;amp; commercial
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.admin-dashboards.com/bootstrap-5-templates/"&gt;Bootstrap 5 Templates&lt;/a&gt; - Open-source and FREE
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>boostrap</category>
      <category>flask</category>
    </item>
    <item>
      <title>Create Mirrored Cursor Movement with CSS and JavaScript</title>
      <author>Diana Le</author>
      <pubDate>Sun, 03 Oct 2021 17:54:43 +0000</pubDate>
      <link>https://dev.to/dianale_dev/create-mirrored-cursor-movement-with-css-and-javascript-249i</link>
      <guid>https://dev.to/dianale_dev/create-mirrored-cursor-movement-with-css-and-javascript-249i</guid>
      <description>&lt;p&gt;This week's Codepen Challenge was &lt;strong&gt;"Reflections"&lt;/strong&gt; so I created a pen where a light follows your cursor and is reflected on the opposite side:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pursuitofleisure/embed/LYLveKE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-up-the-light-and-its-reflection-in-the-html"&gt;
  &lt;/a&gt;
  Set up the light and its reflection in the HTML
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"flashlight"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"flashlight-reflection"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Super simple: we have a container, the flashlight and the flashlight's reflection as separate divs:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-up-the-css-and-position-the-lights"&gt;
  &lt;/a&gt;
  Set up the CSS and Position the Lights
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#flashlight&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nf"&gt;#flashlight-reflection&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.95&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#flashlight-reflection&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt; &lt;span class="m"&gt;#EB7347&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is also pretty simple. The container contains the background color and the boundary line down the middle. The cursor's flashlight and its reflection are styled almost exactly the same except for the colors and most importantly, the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; properties for the absolutely-positioned lights. The cursor has a &lt;code&gt;left&lt;/code&gt; property, but for the reflection we're going to use the &lt;code&gt;right&lt;/code&gt; property instead. This will make the JavaScript simpler later on:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dynamically-move-the-lights-with-javascript"&gt;
  &lt;/a&gt;
  Dynamically Move the Lights with JavaScript
&lt;/h2&gt;

&lt;p&gt;Let's walk through the more complicated parts of the JavaScript:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// set boundary of coordinates to parent div&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bounds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getBoundingClientRect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Move the cursor light and reflection on the mousemove event&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;moveFlashlight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// get mouse coordinates relative to parent&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientX&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientY&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// move the light with the cursor and put the cursor in the center&lt;/span&gt;
  &lt;span class="nx"&gt;flashlight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;flashlight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// move the reflection based on the cursor's position&lt;/span&gt;
  &lt;span class="nx"&gt;flashlightReflection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;flashlight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;flashlightReflection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;flashlight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#find-the-x-and-y-positions-of-the-cursor-with-raw-eventclientx-endraw-and-raw-eventclienty-endraw-"&gt;
  &lt;/a&gt;
  Find the X and Y Positions of the Cursor with &lt;code&gt;event.ClientX&lt;/code&gt; and &lt;code&gt;event.ClientY&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;This was actually easier than I expected. Because the lights are absolutely positioned, if we can find the X and Y coordinates of the mouse cursor, we can dynamically update the CSS position with JavaScript to follow the cursor with the &lt;code&gt;mousemove&lt;/code&gt; event. This article explains how to &lt;a href="https://www.gavsblog.com/blog/get-the-current-position-of-the-mouse-from-a-javascript-event"&gt;console.log the position of the cursor&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-the-boundary-to-be-the-parent-container"&gt;
  &lt;/a&gt;
  Set the Boundary to be the Parent Container
&lt;/h3&gt;

&lt;p&gt;But in this scenario, our lights are divs within a parent container, and if your container is not the full-width of the screen, you're going to get inconsistent X and Y values based on the browser width. So we'll need to set the &lt;a href="https://stackoverflow.com/questions/16154857/how-can-i-get-the-mouse-coordinates-relative-to-a-parent-div-javascript"&gt;boundaries for these values to be the parent&lt;/a&gt; to make it easier. This will always make the top left corner (0, 0).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#update-the-lights-css-the-cursor"&gt;
  &lt;/a&gt;
  Update the Light's CSS (the Cursor)
&lt;/h3&gt;

&lt;p&gt;Now that we have the X and Y coordinates we can move the flashlight to follow the cursor by changing the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; values. You'll notice I'm subtracting 20px from both the X and Y; this is because the light is 40px wide and 40px high and I want the cursor to be in the center.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#update-the-lights-reflection"&gt;
  &lt;/a&gt;
  Update the Light's Reflection
&lt;/h3&gt;

&lt;p&gt;Since we're mirroring on the Y-axis, in terms of moving up and down, the reflection's location will always match the cursor's Y-coordinates, so we set these equal to each other.&lt;/p&gt;

&lt;p&gt;For the X-axis, this is more complicated. As the cursor moves closer to the center or reflection line (to the right), the reflection should move closer (to the left). Conversely if the cursor moves farther away or to the left, the reflection should move to the right. I originally created a global variable to store the previous value of X, then check if the movement is increasing and if so, then to add or subtract the position of the reflection's X-position as needed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Unnecessary code&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;xFlashlight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;flashlightReflection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;flashlightReflection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then I realized this code was completely unnecessary because of the CSS. Remember the cursor light is using the &lt;code&gt;left&lt;/code&gt; property and the reflection is using the &lt;code&gt;right&lt;/code&gt; property, and they are set to the same value for their respective properties when initialized. Therefore the actual numeric values will always be the same, so we can take the reflection's &lt;code&gt;right&lt;/code&gt; value and set it equal to the cursor's &lt;code&gt;left&lt;/code&gt; value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This was a fun and difficult challenge since I had never tried anything similar, but you can see how it's relatively simple to mimic and follow cursor movement with CSS and JavaScript.&lt;/p&gt;

</description>
      <category>css</category>
      <category>codepen</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Interior Designing courses in Kolkata</title>
      <author>giftdesignacademy</author>
      <pubDate>Sun, 03 Oct 2021 17:53:10 +0000</pubDate>
      <link>https://dev.to/giftdesignacademy/interior-designing-courses-in-kolkata-86o</link>
      <guid>https://dev.to/giftdesignacademy/interior-designing-courses-in-kolkata-86o</guid>
      <description>&lt;p&gt;Interior Designing Course in Kolkata&lt;br&gt;
Interior Design is nothing but artistic planning of a property’s interior. It is all about providing a creative solution to a space. Interior Designing is a perfect reconciliation between art and practical functionality.&lt;/p&gt;

&lt;p&gt;For all those who have an interest in designing the interiors, come forward and join our interior designing course in Kolkata at GIFT Design Academy.&lt;/p&gt;

&lt;p&gt;Our interior designing course in Kolkata helps in a clear understanding of colors, space planning and construction materials. Our course is equally suitable for existing professionals and newcomers. You get to learn under an experienced team of interior professionals. It is sure that by the end of the course, you as an interior designer will be able to carve out magic out of normal spaces.&lt;/p&gt;

&lt;p&gt;We have a huge array of interior designing courses in Kolkata and the course fees entirely depends upon the course you go for. Some of the courses available are:&lt;br&gt;
1) 3 years professional interior designing course and management studies&lt;/p&gt;

&lt;p&gt;2) 2 years Professional Interior Designing course&lt;/p&gt;

&lt;p&gt;3) 1 year Professional Interior Designing course&lt;/p&gt;

&lt;p&gt;Any one who has passed graduation can apply for our interior designing courses in Kolkata. Minimum age requirement is 16 years. Basic knowledge of English will be an added advantage.&lt;/p&gt;

&lt;p&gt;Our interior designing course in Kolkata asks, thinks, crafts and iterates to create products that achieve results. Our interior designing institute in Kolkata provides a clear understanding of the following topics:&lt;/p&gt;

&lt;p&gt;1) Interior Design Fundamentals&lt;br&gt;
2) Design Principles&lt;br&gt;
3) Human Comfort&lt;br&gt;
4) Ergonomics&lt;br&gt;
5) Color Theory&lt;br&gt;
6) Materials&lt;br&gt;
7) Application&lt;br&gt;
8) Space Planning&lt;br&gt;
9) Aesthetic&lt;/p&gt;

&lt;p&gt;This interior design course is all about thinking innovatively, designing for a better social impact and all this comes with practical and project based learning. We encourage the students to develop solutions pertaining to current times and keeping sustainability in mind.&lt;br&gt;
visit us - &lt;a href="https://giftdesignacademy.com/"&gt;https://giftdesignacademy.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>startup</category>
      <category>gatsby</category>
      <category>mobile</category>
    </item>
    <item>
      <title>Python Project: Click-Bait Titles Generator (with infinity)</title>
      <author>Ihtesham Haider</author>
      <pubDate>Sun, 03 Oct 2021 17:26:06 +0000</pubDate>
      <link>https://dev.to/ihtesham_haider/python-project-click-bait-titles-generator-with-infinity-4iap</link>
      <guid>https://dev.to/ihtesham_haider/python-project-click-bait-titles-generator-with-infinity-4iap</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HR_Dxd8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujtpjyh9m7osjglfsvrz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HR_Dxd8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ujtpjyh9m7osjglfsvrz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Learn how to make clickbait or catchy titles generator with python and you can put this into your portfolio.&lt;/p&gt;

&lt;p&gt;Are you tired and you have a lot work to do like finding catchy article or blog headings if yes, this Click-bait generator will write millions of articles headers for you!!&lt;/p&gt;

&lt;p&gt;Today we will be making this powerful Python project with the help of only one module which is &lt;code&gt;random&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This program has functions for generating different kinds of clickbait titles. Each of them gets random words from STATES, NOUNS, PLACES,WHEN and list. This is a lot like Madlibs but it isn't madlibs because computer on by own do the work for us.&lt;/p&gt;

&lt;p&gt;Tricking people into your website is easy but creative content is difficult! But clickbait title generator made work some how easy for us. Now, my friend in this program there are a lot of text but the code is really straightforward which will make your day/night great.&lt;/p&gt;

&lt;p&gt;When you make this masterpiece you will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Know the basics of Python&lt;/li&gt;
&lt;li&gt;Know how to use functions&lt;/li&gt;
&lt;li&gt;Know format()&lt;/li&gt;
&lt;li&gt;Know how to manage things perfectly&lt;/li&gt;
&lt;li&gt;And will know how to smile! haha&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's get started!!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#code-discussion"&gt;
  &lt;/a&gt;
  Code | Discussion
&lt;/h2&gt;

&lt;p&gt;In this part we will just setting up the Constants.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import random

#The constants
OBJECT_PRONOUNS = ['Her', 'Him', 'Them']
SUSPECIOUS_PRONOUNS = ['Her', 'His', 'They']
PERSONAL_PRONOUNS = ['She', 'His', 'Their']
STATES = ['California', 'Texas', 'Florida', 'New York', 'Pennsylvania',
          'Illinois', 'Ohio', 'Georgia', 'North Carolina', 'Michigan']
NOUNS = ['Athlete', 'Clown', 'Shovel', 'Paleo Diet', 'Doctor',
         'Parent', 'Cat','Dog', 'Chicken', 'Robot', 'Video Game',
         'Avocado', 'Plastic Straw', 'Seriel Killer','Telephone Pyschic']
PLACES = [
    'House', 'Attic', 'Bank Deposit Box', 'School', 'Basement',
    'Workplace', 'Donut Shop', 'Apocalypse Bunker'
]
WHEN = ['Soon', 'This Year', 'Later', 'RIGHT NOW', 'Next Week']

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#discussion"&gt;
  &lt;/a&gt;
  DISCUSSION:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;import random&lt;/code&gt; if you're not familiar with this thing (random) you should give &lt;code&gt;2&lt;/code&gt; mins to read this &lt;a href="https://docs.python.org/3/library/random.html"&gt;Click to read&lt;/a&gt;
*Random generate random numbers for integers and other stuff if you have read it!!&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;#The constants&lt;/code&gt; In this part &lt;strong&gt;OBJECT_PRONOUNS, SUSPECIOUS_PRONOUNS, PERSONAL_PRONOUNS, STATES, NOUNS, PLACES, AND WHEN&lt;/strong&gt; work as the words which will be used as filling the blanks words.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#functions-and-loops"&gt;
  &lt;/a&gt;
  Functions and loops
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#The_main_Function
def main():
    print('|| Click Bait Headlline Generator ||')
    print('|| By Ihtesham Haider ||')

    print()
    print('Make your website Grow with Catchy Headlines!!')

    #The_main_loop
    while True:
        print('Please, enter the number of Click-Bait headlines to generate!: ')
        response = input('&amp;gt; ')

        if not response.isdecimal():
            print('Please Enter a number..')
        else:
            numberOfHeadlines = int(response)
            break
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#discussion"&gt;
  &lt;/a&gt;
  DISCUSSION:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;def main():&lt;/code&gt; the main function will have everything like:

&lt;ul&gt;
&lt;li&gt;While loops &lt;/li&gt;
&lt;li&gt;for loops etc&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;You can change the &lt;code&gt;print&lt;/code&gt; points if you want to! like change the name with yours By ---&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;while loop&lt;/code&gt; is the game changer this loop will generate the headlines or titles we want like if I want 1000 I will just input 1000 and it will generate it for me by this while loop.&lt;/li&gt;
&lt;li&gt;if have not read my previous python project discussion part so, I urge you to go the discussion part and this will become more easier to you.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for i in range(numberOfHeadlines):
        clickbaitType = random.randint(1, 8)

        if clickbaitType ==1:
            headline = generateAreMillennialsKillingHeadline()
        elif clickbaitType ==2:
            headline = generateWhatYouDontKnowHeadline()
        elif clickbaitType ==3:
            headline = generateBigCompaniesHateHerHeadline()
        elif clickbaitType ==4:
            headline = generateYouWontBelieveHeadline()
        elif clickbaitType ==5:
            headline = generateDontWantYouToKnowHeadline()
        elif clickbaitType ==6:
            headline = generateGiftIdeaHeadline()
        elif clickbaitType ==7:
            headline = generateReasonsWhyHeadline()
        elif clickbaitType ==8:
            headline = generateJobAutomatedHeadline()

        print(headline)
    print()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#discussion"&gt;
  &lt;/a&gt;
  DISCUSSION:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;for loop&lt;/code&gt; is used after &lt;code&gt;break&lt;/code&gt; method. This loop will organize the text like in consecutive order... one by one&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;random.randint(1,8)&lt;/code&gt; is really important because with this we will have organize structured titles. The loop will take titles from. One from &lt;code&gt;millenialsKillinHeadline&lt;/code&gt; and so on...&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;print()&lt;/code&gt; the empty print is used because of the last line which is really funny and it's an order!!
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; website = random.choice(['website', 'blog', 'Facebook', 'Google',
                             'Facebook', 'Tweeter', 'Instagram'])
    when = random.choice(WHEN).lower()
    print('Post these to our', website, when, 'or you\'re fired!')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#discussion"&gt;
  &lt;/a&gt;
  DISCUSSION:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;website&lt;/code&gt; has random.choice which will randomly choose in this list tuple one of the word which is in list and put in a sentence which you will see soon.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;when&lt;/code&gt; makes the when part lower with lower() method like small text.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;print&lt;/code&gt; has a warning! Post these to our (website) (randomly adopt from website list) one word. And when from WHEN.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#the-generator-part"&gt;
  &lt;/a&gt;
  The generator part!!
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def generateAreMillennialsKillingHeadline():
    noun = random.choice(NOUNS)
    return 'Are Millennials Killing the {} Industry?'.format(noun)

def generateWhatYouDontKnowHeadline():
    noun = random.choice(NOUNS)
    pluralNoun = random.choice(NOUNS) + 's'
    when = random.choice(WHEN)
    return 'Without This {}, {} Could Kill You {}'.format(noun, pluralNoun, when)

def generateBigCompaniesHateHerHeadline():
    pronoun = random.choice(OBJECT_PRONOUNS)
    state = random.choice(STATES)
    noun1 = random.choice(NOUNS)
    noun2 = random.choice(NOUNS)
    return 'Big Companies Hate {}! See How This {} {} Invented a Cheaper {}'.format(pronoun, state, noun1, noun2)

def generateYouWontBelieveHeadline():
    state = random.choice(STATES)
    noun = random.choice(NOUNS)
    pronoun = random.choice(SUSPECIOUS_PRONOUNS)
    place = random.choice(PLACES)
    return 'You Won\'t Believe What This {} {} Found in {} {}'. format(state, noun, pronoun, place)

def generateDontWantYouToKnowHeadline():
    pluralNoun1 = random.choice(NOUNS) + 's'
    pluralNoun2 = random.choice(NOUNS) + 's'
    return 'What {} Don\'t Want You To Know About {}'.format(pluralNoun1, pluralNoun2)

def generateGiftIdeaHeadline():
    number = random.randint(7, 15)
    noun = random.choice(NOUNS)
    state = random.choice(STATES)
    return '{} Gift Ideas to Give Your {} From {}'.format(number, noun, state)

def generateReasonsWhyHeadline():
    number1 = random.randint(3, 19)
    pluralNoun = random.choice(NOUNS) + 's'
    #number 2 should no longer than number1
    number2 = random.randint(1, number1)
    return '{} Reasons Why {} Are More Interesting Than You Think (Number {} Will Surprise You!)'.format(number1, pluralNoun, number2)

def generateJobAutomatedHeadline():
    state = random.choice(STATES)
    noun = random.choice(NOUNS)

    i = random.randint(0, 2)
    pronoun1 = SUSPECIOUS_PRONOUNS[i]
    pronoun2 = SUSPECIOUS_PRONOUNS[i]
    if pronoun1 == 'Their':
        return 'This {} {} Didn\'t Think Robots Would Take {} Job. {} Were Wrong.'.format(state, noun, pronoun1, pronoun2)
    else:
        return 'This {} {} Didn\'t Think Robots Would Take {} Job. {} Was Wrong'.format(state, noun, pronoun1, pronoun2)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#discussion"&gt;
  &lt;/a&gt;
  Discussion:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Each of &lt;code&gt;def&lt;/code&gt; means functions returns a different kind of headline/title.&lt;/li&gt;
&lt;li&gt;Like &lt;code&gt;def generateAreMillennialsKillingHeadline():&lt;/code&gt; will generate or returns &lt;code&gt;'Are Millennials Killing the {} Industry?'.format(noun)&lt;/code&gt; don't get overwhelmed I'm here to help whenever you need I'm here!. So this line will generate some kind of headline like "Are millenials killing the {noun will be take randomly like athelete or something!}"&lt;/li&gt;
&lt;li&gt;All the others will be taken the same. Like &lt;code&gt;def generateWhatYouDontKnowHeadline():&lt;/code&gt; this will generate or returns different kind of title... and so on..&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#last"&gt;
  &lt;/a&gt;
  last!
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#Let's generate some Clickbait catchy titles Play the button!
if __name__ == '__main__':
    main()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;when you run after this part the code you will see a message for input (for number!) when you put number like 2000 or 100 or maybe 10 the clickbait generator will generate random titles for you!.&lt;/p&gt;

&lt;p&gt;Now its your turn, play with this code! like change or add some other code to this and make it an amazing clickbait generator!.&lt;/p&gt;

&lt;p&gt;When you do let me know!.&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ihtesham-haider-079887218/"&gt;Linkedin&lt;/a&gt; &lt;a href="https://medium.com/@ihteshamhaider"&gt;Medium&lt;/a&gt; &lt;a href="https://twitter.com/techtimes101"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://colab.research.google.com/drive/12PsH8wLCK7OtTIFpVLCxOW7pF178zlCd?usp=sharing"&gt;Download the Code&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>python</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to implement a Blockchain Solution</title>
      <author>CyprianTinasheAarons</author>
      <pubDate>Sun, 03 Oct 2021 16:54:07 +0000</pubDate>
      <link>https://dev.to/cypriantinasheaarons/how-to-implement-a-blockchain-solution-1ija</link>
      <guid>https://dev.to/cypriantinasheaarons/how-to-implement-a-blockchain-solution-1ija</guid>
      <description>&lt;h2&gt;
  &lt;a href="#key-steps-for-implementing-a-blockchain-solution"&gt;
  &lt;/a&gt;
  Key Steps for implementing a Blockchain solution
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt; Identify the business requirements of the project&lt;/li&gt;
&lt;li&gt; Evaluate if your project can be implemented with centralized databases or digital signatures&lt;/li&gt;
&lt;li&gt; Form a mental picture of the benefits of implementing blockchain technology in your project&lt;/li&gt;
&lt;li&gt; Identify legacy technologies or practices that need to be replaced or augmented&lt;/li&gt;
&lt;li&gt; Do a cost-benefit analysis of introducing this new technology&lt;/li&gt;
&lt;li&gt; Identify the key stakeholders and participants of the blockchain system&lt;/li&gt;
&lt;li&gt; Agree on the governance framework of the operating network and build in accountability from the participants&lt;/li&gt;
&lt;li&gt; Agree on an implementation methodology&lt;/li&gt;
&lt;li&gt; Choose a blockchain platform based on your requirements &lt;/li&gt;
&lt;li&gt; Identify essential enterprise tools that need to be built to successfully operate the blockchain solution.   For example identity service&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#kool-implementation-strategies"&gt;
  &lt;/a&gt;
  Kool Implementation Strategies
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Have Stakeholders own and maintain a node on the blockchain network.&lt;/li&gt;
&lt;li&gt;Make use of Blockchain as a Service(Baas) cloud platforms.&lt;/li&gt;
&lt;li&gt;Access a public permissionless blockchain to record data. ( For example a public Bitcoin or Ethereum network )&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#popular-platforms-you-can-use-for-financial-applications"&gt;
  &lt;/a&gt;
  Popular platforms you can use for financial applications
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Ethereum - is a blockchain platform with its own cryptocurrency, called Ether (ETH) or Ethereum, and its own programming language, called Solidity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hyberledger Fabric - is an open-source, permissioned blockchain framework, started in 2015 by The Linux Foundation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stellar - is a blockchain-based distribution ledger network, Lumens is the cryptocurrency made specifically for that network, and XLM is the coin's symbol.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once you have executed the above steps properly you can proceed to build your blockchain solution.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thank you for reading. 😀 🙏 Follow me on &lt;a href="https://twitter.com/CyprianAarons"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Checkout my &lt;a href="//cyprianaarons.co.zw"&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/cyprianaarons"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>blockchain</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to Create Beautiful Gradients with CSS</title>
      <author>Mahesh </author>
      <pubDate>Sun, 03 Oct 2021 16:52:02 +0000</pubDate>
      <link>https://dev.to/ali6nx404/how-to-create-beautiful-gradients-with-css-2pjm</link>
      <guid>https://dev.to/ali6nx404/how-to-create-beautiful-gradients-with-css-2pjm</guid>
      <description>&lt;p&gt;Let's start this blog with a confession, I wrote this detailed thread for Twitter then I decided to turn it into the blog and upload it here too.&lt;/p&gt;

&lt;p&gt;I'm writing this blog because I found learning gradient a little bit difficult in my early days. there are different types of gradients available and we mostly end up using a basic linear-gradient, but the gradient is far more powerful than you think. &lt;/p&gt;

&lt;p&gt;In this, I'm going to cover all the basics and most important concepts of the gradient.&lt;/p&gt;

&lt;p&gt;in the next blog, I will share some real-world examples and more advanced usage of gradients.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-gradient"&gt;
  &lt;/a&gt;
  What is the gradient?
&lt;/h2&gt;

&lt;p&gt;CSS gradient allows you to create a smooth gradient between two colors, right up to impressive mixing and multiple gradients.&lt;/p&gt;

&lt;p&gt;Gradient makes the background more attractive than a solid color.&lt;/p&gt;

&lt;p&gt;We all know about Instagram but did you notice that the Instagram logo is also a gradient.&lt;/p&gt;

&lt;p&gt;The genius is in its simplicity.✨&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SV1fiSgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633173434812/y9zp75pwMt.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SV1fiSgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633173434812/y9zp75pwMt.jpeg" alt="logo.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-gradients"&gt;
  &lt;/a&gt;
  Types of gradients?
&lt;/h2&gt;

&lt;p&gt;There is three gradient function in CSS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Linear Gradient&lt;/li&gt;
&lt;li&gt;Radial gradient
&lt;/li&gt;
&lt;li&gt;Conic gradient &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's talk about each type in more detail.✨&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linear-gradient-"&gt;
  &lt;/a&gt;
  Linear Gradient -
&lt;/h2&gt;

&lt;p&gt;A linear gradient starts at one point and changes along a straight line to the endpoint. &lt;/p&gt;

&lt;p&gt;The direction of the linear gradient can be up/down, left/right, or diagonal.&lt;/p&gt;

&lt;p&gt;To create a linear gradient you must define at least two-color.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S0HxmYgu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633173951806/wpsVBpMtB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S0HxmYgu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633173951806/wpsVBpMtB.png" alt="condition gradient fg.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-linear-gradient-"&gt;
  &lt;/a&gt;
  Basic linear gradient -
&lt;/h3&gt;

&lt;p&gt;To create the most basic gradient you just need to specify two-color. Two colors are the minimum required but you can have color as much as you want.&lt;/p&gt;

&lt;p&gt;Without specifying angle will consider top-to-bottom.&lt;/p&gt;

&lt;p&gt;Example👇&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ali6nx404/embed/eYRadJG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changing-the-direction-of-gradient-"&gt;
  &lt;/a&gt;
  Changing the direction of Gradient -
&lt;/h3&gt;

&lt;p&gt;The values are "to top", "to bottom", "to left", and "to right" used to change direction.&lt;/p&gt;

&lt;p&gt;even we're free to use both the horizontal side (left or right), and the vertical side (top or bottom) after "to".&lt;/p&gt;

&lt;p&gt;Example 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IoTYLSlS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633277597829/ZQ2amrxwm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IoTYLSlS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633277597829/ZQ2amrxwm.png" alt="Gradient-3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#angle-for-changing-direction-"&gt;
  &lt;/a&gt;
  Angle for changing direction -
&lt;/h3&gt;

&lt;p&gt;We Are free to use an angle unit to specify the direction of the gradient.&lt;/p&gt;

&lt;p&gt;The values are equivalent -&lt;/p&gt;

&lt;p&gt;to top - 0deg,&lt;br&gt;
to bottom - 180deg,&lt;br&gt;
to left - 270deg,&lt;br&gt;
to right - 90deg.&lt;/p&gt;

&lt;p&gt;you can also use other angle units.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CHWDfvVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633277779121/NQVA3RKvx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CHWDfvVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633277779121/NQVA3RKvx.png" alt="Gradient-4.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#color-stop-"&gt;
  &lt;/a&gt;
  Color stop -
&lt;/h3&gt;

&lt;p&gt;One thing we didn't talk about as of now is "color-stop". Color stops are the colors you want to render smooth transitions among. &lt;/p&gt;

&lt;p&gt;A color-stop value, followed by one or two optional stop positions. in percentage or in length.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k9bFbzNf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633277860497/MbbXIUxFr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k9bFbzNf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633277860497/MbbXIUxFr.png" alt="Gradient-5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#radial-gradient-"&gt;
  &lt;/a&gt;
  Radial gradient -
&lt;/h2&gt;

&lt;p&gt;A radial gradient starts from a central point and radiates outwards towards the outer endpoint.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mgAgGC4P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633277986621/YZN8o--R3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mgAgGC4P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633277986621/YZN8o--R3.png" alt="radial gradient.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#before-we-move-further-lets-discuss-some-key-terms-"&gt;
  &lt;/a&gt;
  Before we move further let's discuss some key terms -
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Shape&lt;/li&gt;
&lt;li&gt;Position&lt;/li&gt;
&lt;li&gt;color-stop ( Same as linear one )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's dive deeper 👇&lt;/p&gt;

&lt;p&gt;✔ size - &lt;/p&gt;

&lt;p&gt;The size influences the ending shape of the gradient by taking the shape value you determined and instructing the gradient where to end.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;closest-side&lt;/li&gt;
&lt;li&gt;closest-corner&lt;/li&gt;
&lt;li&gt;farthest-side&lt;/li&gt;
&lt;li&gt;farthest-corner ( default one )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Detailed explanation 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LIRUCVSr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278025777/NyT-ns_k5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LIRUCVSr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278025777/NyT-ns_k5.png" alt="size.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;✔ Shape - &lt;/p&gt;

&lt;p&gt;This determines the shape of the gradient, and because we’re talking about radial gradients, &lt;/p&gt;

&lt;p&gt;they’re limited to being circular in nature. our shapes will be between an ellipse or a circle. &lt;/p&gt;

&lt;p&gt;✔ Position - &lt;/p&gt;

&lt;p&gt;This works the same way it does on background-position, So, keywords like “top,” “right,” “left,” and “center” will work here.  You can even use a combination like, “top center.” &lt;/p&gt;

&lt;p&gt;We can also specify an exact position using a numeric value, including the percentage. Default is center center.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-radial-gradient-"&gt;
  &lt;/a&gt;
  Basic Radial gradient -
&lt;/h3&gt;

&lt;p&gt;To create the most basic gradient you just need to specify two-color. Two colors are the minimum required but you can have color as much as you want.&lt;/p&gt;

&lt;p&gt;All others are default values because we are just specifying colors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8kK_ubKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278082925/-c3LLJslR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8kK_ubKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278082925/-c3LLJslR.png" alt="radial basic.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shaping-of-radial-gradient-"&gt;
  &lt;/a&gt;
  shaping of radial gradient -
&lt;/h3&gt;

&lt;p&gt;we already discussed shape and we have 2 values an ellipse or a circle.&lt;/p&gt;

&lt;p&gt;Let's see an example of both 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KgB1BadY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278125069/0HRkSL9YT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KgB1BadY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278125069/0HRkSL9YT.png" alt="shape fg.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sizing-of-radial-gradients-"&gt;
  &lt;/a&gt;
  Sizing of radial gradients -
&lt;/h3&gt;

&lt;p&gt;we already discussed all the sizing values, let's see one or two values in the example.&lt;/p&gt;

&lt;p&gt;for better understanding play with all values.&lt;/p&gt;

&lt;p&gt;example 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nu0mcs-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278151729/PHbcuJUFK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nu0mcs-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278151729/PHbcuJUFK.png" alt="sizing radial.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changing-position-"&gt;
  &lt;/a&gt;
  Changing Position  -
&lt;/h3&gt;

&lt;p&gt;We already talked about the positioning of the gradient.&lt;/p&gt;

&lt;p&gt;A radial gradient doesn’t have to start at the default center. It can specify a certain point.&lt;/p&gt;

&lt;p&gt;example 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rDy3pEmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278184827/TJd2waDkQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rDy3pEmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278184827/TJd2waDkQ.png" alt="position radial.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conic-gradient-"&gt;
  &lt;/a&gt;
  Conic gradient -
&lt;/h2&gt;

&lt;p&gt;A conic gradient has a center point in your box and starts from the top and goes around in a 360-degree circle.&lt;/p&gt;

&lt;p&gt;The conic-gradient function accepts the position and angle arguments. By default, the angle is 0 degrees which starts at the top, in the center&lt;/p&gt;

&lt;p&gt;Above we already talked about position or angle, so let's see some examples. &lt;/p&gt;

&lt;p&gt;👇👇&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-conic-gradient-"&gt;
  &lt;/a&gt;
  basic conic gradient -
&lt;/h3&gt;

&lt;p&gt;As like linear and radial gradients, all we need to create a conic gradient are two colors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YdvhSpD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278397599/bHiAFCKlj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YdvhSpD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278397599/bHiAFCKlj.png" alt="basic conic fg.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#positioning-"&gt;
  &lt;/a&gt;
  Positioning -
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7HaVoVfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278411536/apATwITOT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7HaVoVfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633278411536/apATwITOT.png" alt="position conic fg.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#easy-gradient-generators"&gt;
  &lt;/a&gt;
  Easy gradient generators 👇
&lt;/h2&gt;

&lt;p&gt;⚡ &lt;a href="https://gradientgenerator.com"&gt;https://gradientgenerator.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⚡ &lt;a href="https://cssgradient.io"&gt;https://cssgradient.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⚡ &lt;a href="https://colordesigner.io/gradient-generator"&gt;https://colordesigner.io/gradient-generator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is my first blog post and I would like to read your feedback as well as criticism.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>What’s new in Nuxt 3?</title>
      <author>Elise Patrikainen</author>
      <pubDate>Sun, 03 Oct 2021 16:31:04 +0000</pubDate>
      <link>https://dev.to/this-is-learning/what-s-new-in-nuxt-3-37lg</link>
      <guid>https://dev.to/this-is-learning/what-s-new-in-nuxt-3-37lg</guid>
      <description>&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@alexxingplus?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Alex Sherstnev&lt;/a&gt; on Unsplash.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Directly inspired by Sebastien Chopin’s talks on Nuxt Nations (which shall be soon available on Youtube) and &lt;a href="https://www.youtube.com/watch?v=ApUPE8b-m04"&gt;Daniel Roe’s talk at Vue.js Amsterdam 2021&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Nuxt 3 is going to be released very soon and brings a lot of entirely new things. It is not a simple upgrade to Vue 3, but &lt;strong&gt;a complete rewrite&lt;/strong&gt; of Nuxt 2, with a &lt;strong&gt;new rendering server&lt;/strong&gt; and, I believe, a &lt;strong&gt;new philosophy&lt;/strong&gt;. The definition of Nuxt itself has changed (cf &lt;a href="//nuxtjs.org"&gt;the official Nuxt website&lt;/a&gt;), it is not “a progressive meta-framework based on Vue.js” anymore but “an open-source framework making web development simple and powerful”.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: this is an article written right after the NuxtNation conference, where Nuxt 3 updates have been announced, and before the Nuxt 3 official release (on the 12th of October), so I apologize in advance for the lack of details on each point. The goal here is really to give a view at the macro-scale of Nuxt evolution. I will of course add more information as details are made available.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#a-bit-of-context"&gt;
  &lt;/a&gt;
  A bit of context
&lt;/h1&gt;

&lt;p&gt;Before diving into the changes, let’s have a quick overview of the context in which these evolutions are made. And, on this point, I found the introduction of &lt;a href="https://www.youtube.com/watch?v=ApUPE8b-m04"&gt;Daniel Roe’s talk&lt;/a&gt; extremely enlightening. He points out that some new trends are emerging in the JavaScript scene (and, more widely, in web development): &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;serverless architecture&lt;/strong&gt; and &lt;strong&gt;JAMstack:&lt;/strong&gt; 
which enhance faster, more secure, and loosely coupled web applications. Indeed, the serverless architecture enables abstracting some part of logic from an application to a distant infrastructure. On the other hand, Jamstack fosters pre-rendering of front-end clients and the use of microservice APIs.&lt;/li&gt;
&lt;li&gt;the apparition of &lt;strong&gt;new targets&lt;/strong&gt;:
&lt;strong&gt;Deno&lt;/strong&gt;, and &lt;strong&gt;‘workers’&lt;/strong&gt;, especially in serverless architecture (in that sense, this point is a consequence of the previous point).&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;transition&lt;/strong&gt; to &lt;strong&gt;TypeScript&lt;/strong&gt; and &lt;strong&gt;ES modules&lt;/strong&gt; (enhanced by the apparition of new generation dev tools bases on ES modules, such as Snowpack or Vite)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, as far as I understand, Nuxt 3 primarily aims to adapt to these global trends.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-in-nuxt-3"&gt;
  &lt;/a&gt;
  What's in Nuxt 3?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-the-support"&gt;
  &lt;/a&gt;
  1. The support
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Enhanced TypeScript: Nuxt 3 has been rewritten in TypeScript, and, apparently, the support seems outstanding, with more information and links to documentation than in a standard TypeScript project&lt;/li&gt;
&lt;li&gt;Vue 3 (obviously): including composables and the experimental Suspense API&lt;/li&gt;
&lt;li&gt;Webpack 5 support&lt;/li&gt;
&lt;li&gt;Vite.js: for development and production&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-the-very-new-and-exciting-things"&gt;
  &lt;/a&gt;
  2. The very &lt;strong&gt;new&lt;/strong&gt; and &lt;strong&gt;exciting&lt;/strong&gt; things
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The brand-new rendering engine, &lt;strong&gt;Nitro&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;Build for &lt;strong&gt;serverless&lt;/strong&gt; (see below):

&lt;ul&gt;
&lt;li&gt;Cold start extremely fast (5 ms)&lt;/li&gt;
&lt;li&gt;Universal: it can run on Node.js, Deno, serverless platforms (including cloudflare workers), and experimentally on web workers &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Hybrid approach&lt;/strong&gt;: Nitro enables mixing SSR and SSG in the same application&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;API routes&lt;/strong&gt;: Nitro preconfigures the integration of API endpoints (with apparently a similar routing system with the one provided for pages)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Nuxt &lt;strong&gt;CLI&lt;/strong&gt;, which, bring many new possibilities&lt;/li&gt;
&lt;li&gt;Nuxt &lt;strong&gt;dev tools&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Global &lt;strong&gt;auto imports&lt;/strong&gt;: to avoid the local import of very common functions (for example, “toRef” from the composition API)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-the-tools-to-make-migrations-and-crossversion-developments-easy"&gt;
  &lt;/a&gt;
  3. The tools to make &lt;strong&gt;migrations&lt;/strong&gt; and &lt;strong&gt;cross-version&lt;/strong&gt; developments easy
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Nuxt &lt;strong&gt;bridge&lt;/strong&gt; package, which gives support to most of Nuxt 3 features (excepted Vue 3) to Nuxt 2 projects&lt;/li&gt;
&lt;li&gt;Nuxt &lt;strong&gt;kit&lt;/strong&gt;, which takes care of &lt;strong&gt;modules compatibility&lt;/strong&gt; between Nuxt 2 and Nuxt 3&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#built-for-serverless"&gt;
  &lt;/a&gt;
  Built for serverless
&lt;/h1&gt;

&lt;p&gt;To me, the most impressive breakthrough is &lt;strong&gt;Nitro&lt;/strong&gt;, the new server that powers Nuxt 3. This is a subjective feeling after the conference, though, and maybe my mind will change when the repo is open (apparently, the new CLI would also bring many exciting new possibilities).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cold-start"&gt;
  &lt;/a&gt;
  Cold start
&lt;/h2&gt;

&lt;p&gt;Nitro is &lt;strong&gt;75 times faster on start&lt;/strong&gt; than Nuxt 2 engine, and only needs 5ms on cold start (and less in Cloudflare workers). &lt;br&gt;
To handle this, Nitro works differently from traditional servers. Common servers would, on start, enable all their functionalities, whereas Nitro only starts the functionalities which are relevant to the incoming request. For this, it &lt;strong&gt;tracks&lt;/strong&gt; which files are necessary for each request (with the &lt;a href="https://github.com/vercel/nft"&gt;nft&lt;/a&gt;, or Node File Trace, package from Vercel) and, according to that, &lt;strong&gt;cleverly code splits&lt;/strong&gt; the server bundle. Then, on the incoming request, a &lt;strong&gt;minimalist "orchestrator"&lt;/strong&gt; (which is based on the &lt;strong&gt;h3 framework&lt;/strong&gt;, "built for high performance and portability" by the Nuxt core team and available on &lt;a href="https://github.com/unjs"&gt;the unjs repo&lt;/a&gt;, cf below) decides which part of code to start.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#universal"&gt;
  &lt;/a&gt;
  Universal
&lt;/h2&gt;

&lt;p&gt;Nitro can run on &lt;strong&gt;Deno&lt;/strong&gt; and on &lt;strong&gt;any JS environment&lt;/strong&gt; (Node.js and workers). In particular, the worker environment support enables Nitro to be run on &lt;strong&gt;serverless platforms&lt;/strong&gt; and, experimentally, on &lt;strong&gt;browser workers&lt;/strong&gt;. &lt;br&gt;
To achieve this, the Nuxt team built themselves the set of libraries on which Nitro is based, which are available on &lt;a href="https://github.com/unjs"&gt;the unjs repo&lt;/a&gt;. A key point of unjs (which stands for Universal JavaScript Solutions) is to provide libraries that can run on any environment of the JavaScript ecosystem. &lt;br&gt;
Therefore, Nitro can build &lt;strong&gt;cross-platform outputs&lt;/strong&gt; (for example, it auto-mocks Node.js builtins with polyfills in builds addressed to non-Node environments). Another interesting feature is that Nitro can &lt;strong&gt;auto-detect the platform&lt;/strong&gt; on which it is deployed (Vercel, Netlify, Firebase, Cloudfare…) and adapt its build accordingly. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Nuxt definitely seems to have taken a &lt;strong&gt;turning point&lt;/strong&gt; with this third version. I was personally &lt;strong&gt;astonished&lt;/strong&gt; by this release announcement by the amount of updates and evolutions it brings. I really felt that Nuxt aims to provide &lt;strong&gt;innovations&lt;/strong&gt; that exceed the goal of being “the Vue.js meta-framework”.&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>nuxt</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Heart Diseases Prediction using Machine Learning </title>
      <author>vidhi-sareen</author>
      <pubDate>Sun, 03 Oct 2021 16:08:50 +0000</pubDate>
      <link>https://dev.to/vidhisareen/heart-diseases-prediction-using-machine-learning-3o7k</link>
      <guid>https://dev.to/vidhisareen/heart-diseases-prediction-using-machine-learning-3o7k</guid>
      <description>&lt;p&gt;Machine Learning is applied in a variety of fields all over the world. There is no exception in the healthcare industry. Machine Learning can help forecast the existence or absence of motor problems, heart ailments, and other diseases. Such information, if predicted in advance, can provide valuable insights to clinicians, allowing them to tailor their diagnosis and treatment to each individual patient.&lt;/p&gt;

&lt;p&gt;As a result, preventing heart disease has become more important than ever. Good data-driven systems for predicting cardiac illnesses can help to improve the overall research and preventive process, allowing more individuals to live a healthy lifestyle. This is where Machine Learning enters the picture. Machine Learning aids in the prognosis of heart illnesses, and the results are precise.&lt;/p&gt;

&lt;p&gt;The project included data processing and analysis of a heart disease patient dataset. Then, using various techniques, several models were trained, and predictions were made. KNN, Decision Tree, Random Forest, SVM, and Logistic Regression are just a few examples.&lt;/p&gt;

&lt;p&gt;To forecast the presence of cardiac disease in a patient, I employed a range of Machine Learning methods built in Python. This is a classification problem with a range of input features as parameters and a binary target variable for predicting whether heart disease is present or not.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nl0O9lo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03se0wq2gph2sbrq3rm5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nl0O9lo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03se0wq2gph2sbrq3rm5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-import-libraries"&gt;
  &lt;/a&gt;
  STEP 1- IMPORT LIBRARIES
&lt;/h3&gt;

&lt;p&gt;There are many libraries available in python. I have included:&lt;br&gt;
&lt;strong&gt;numpy&lt;/strong&gt;: To work with arrays&lt;br&gt;
&lt;strong&gt;pandas&lt;/strong&gt;: To work with csv files and data frames&lt;br&gt;
&lt;strong&gt;matplotlib&lt;/strong&gt;: To create charts using pyplot.&lt;br&gt;
&lt;strong&gt;train_test_split&lt;/strong&gt;: To split the dataset into training and testing data&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-import-dataset"&gt;
  &lt;/a&gt;
  STEP 2- IMPORT DATASET
&lt;/h3&gt;

&lt;p&gt;Since I am using dataset which is already present on Kaggle. So, I have downloaded it &lt;a href="https://www.kaggle.com/faressayah/predicting-heart-disease-using-machine-learning/data"&gt;Link&lt;/a&gt;. There are many datasets available online you can use that also. Next, I have use &lt;em&gt;&lt;code&gt;read_csv ()&lt;/code&gt;&lt;/em&gt; to read dataset and save it to some variable (I have used “set” variable) &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YtI2Ic7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jx8wrurz5ing3d4lmqm4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YtI2Ic7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jx8wrurz5ing3d4lmqm4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before any analysis its good to take all information of what your whole dataset consists off to have an optimal model. So, I have used the &lt;em&gt;&lt;code&gt;info ()&lt;/code&gt;&lt;/em&gt; method.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VJH-Kpqq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/217jvz8j0b5u5166jxfa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VJH-Kpqq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/217jvz8j0b5u5166jxfa.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see from the output above, there are a total of 13 features and 1 target variable, as well as no missing values, so there are no null values to worry about... LUCKY!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-understanding-the-data"&gt;
  &lt;/a&gt;
  STEP 3- UNDERSTANDING THE DATA
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Correlational Matrix&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Its very important to understand your data. So, to begin with, let’s start by looking at the feature correlation matrix and attempting to analyze it. &lt;code&gt;rcParams&lt;/code&gt; is used to set the figure size .The correlation matrix was then visualized using &lt;code&gt;pyplot&lt;/code&gt;. I've added names to the correlation matrix using &lt;code&gt;xticks&lt;/code&gt; and &lt;code&gt;yticks&lt;/code&gt;. &lt;em&gt;&lt;code&gt;.colorbar()&lt;/code&gt;&lt;/em&gt; displays the matrix's &lt;code&gt;colorbar&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bj6Weljg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n67uqhcpfgagtq3229qd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bj6Weljg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n67uqhcpfgagtq3229qd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By looking that this it's clear that no single feature has a particularly strong relationship with our desired value. In addition, some traits have a negative association with the goal value, while others have a positive correlation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Histogram&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The nicest aspect about this type of plot is that it only requires one command to generate the plots and it returns a wealth of information. Simply type &lt;em&gt;&lt;code&gt;variable.hist()&lt;/code&gt;&lt;/em&gt; into your command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K_u4dmNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cem9svbjrf1v7cw5vrbg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K_u4dmNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cem9svbjrf1v7cw5vrbg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Graphical Representation of relation between Attributes:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p_hTQKa0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1i0diqqe8mezcyinajo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p_hTQKa0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1i0diqqe8mezcyinajo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We observed that there are 207 men and 96 women data provided in the dataset.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1tZMXkRj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fl452dvuvfu7g6kdqedu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1tZMXkRj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fl452dvuvfu7g6kdqedu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We notice that females are more likely to have heart problems than males.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XnIan2gB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx5i2c8evsk4vztwrzgu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XnIan2gB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx5i2c8evsk4vztwrzgu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We notice ,that chest pain of '0', i.e. the ones with typical angina are much less likely to have heart problems.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CYMO62dc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjtqrx8rqamm3xgcf1nf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CYMO62dc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjtqrx8rqamm3xgcf1nf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We realize that people with restecg '1' and '0' are much more likely to have a heart disease than with restecg '2'.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PddhU39z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxn4obmbpb8mg7bx4rnp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PddhU39z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxn4obmbpb8mg7bx4rnp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;People with exang=1 i.e. Exercise induced angina are much less likely to have heart problems.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_hvCXQtB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1m2kgsiupj9phd5gawt1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_hvCXQtB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1m2kgsiupj9phd5gawt1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We observe that Slope '2' causes heart pain much more than Slope '0' and '1'.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4use-machine-learning-algorithms"&gt;
  &lt;/a&gt;
  STEP 4-USE MACHINE LEARNING ALGORITHMS
&lt;/h3&gt;

&lt;p&gt;In this project, I picked four algorithms and experimented with their various settings before comparing the results. I divided the dataset into two parts: training data and testing data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.Logistic Regression&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Logistic regression is a statistical analysis approach for predicting a data value based on previous data set measurements. In the field of machine learning, logistic regression has become an important technique. The method enables a machine learning application to classify incoming data using an algorithm based on historical data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--erdb4Urn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5bf62dh5jfbmo8fy9xk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--erdb4Urn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5bf62dh5jfbmo8fy9xk.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
    &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gG9Vzvh2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7jg9t0g2z2kmvsjigla.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gG9Vzvh2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7jg9t0g2z2kmvsjigla.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lGbDIpda--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m9nlatlhdwlxtgo9xh01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lGbDIpda--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m9nlatlhdwlxtgo9xh01.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, my training accuracy is 86.79% and testing accuracy 86.81%&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.K-nearest neighbors&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This classifier searches for the classes of a data point's K closest neighbors and assigns a class to that data point based on the majority class. The number of neighbors, on the other hand, can be modified. I varied the number of neighbors from one to twenty and calculated the test score in each case.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0lSkiqtK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fq1fcr4rg38x07jl842z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0lSkiqtK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fq1fcr4rg38x07jl842z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tlJa09nq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/noep4bw1z9djwcl7d93r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tlJa09nq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/noep4bw1z9djwcl7d93r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_HI3hN14--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bw7cwp6zohn76ry20l7x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_HI3hN14--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bw7cwp6zohn76ry20l7x.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;As you can see, my training accuracy is 86.79% and testing accuracy is 86.81% same as of logistic regression.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Support Vector machine&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By altering the distance between the data points and the hyperplane, this classifier seeks to construct a hyperplane that can divide the classes as much as feasible. The hyperplane is determined depending on several kernels.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GfWsBmUt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v05fduz9jw414qgu3cz4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GfWsBmUt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v05fduz9jw414qgu3cz4.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oVMy4ypl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtiyp7w822dyf2bu8vfh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oVMy4ypl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtiyp7w822dyf2bu8vfh.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qudwmh9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b98yz7zzm5bvw0uloncq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qudwmh9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b98yz7zzm5bvw0uloncq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see my training accuracy is 93.40% and testing accuracy is 87.91%&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 5-CONCLUSION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The project involved analysis of the heart disease patient dataset with proper data processing. Then, 3 models were trained and tested with maximum scores as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qudwmh9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b98yz7zzm5bvw0uloncq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qudwmh9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b98yz7zzm5bvw0uloncq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Form the comparison study; it is observed that the Support Vector Machine model turned out to be best classifier for heart disease prediction.&lt;/p&gt;

&lt;p&gt;Thank you for reading!! Feel free to share your thoughts and ideas.😄✨&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--32-iOSDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgxuazt3028nx4uyh8i8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--32-iOSDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgxuazt3028nx4uyh8i8.png" alt="Asset 1@2x-8"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hack-this-fall-20"&gt;
  &lt;/a&gt;
  &lt;strong&gt;HACK THIS FALL 2.0&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Hi FOLKS!!!✨🎊&lt;/p&gt;

&lt;p&gt;I'm ecstatic to share the news that I've been accepted as a "Hackathon Evangelist" for Hack This Fall 2.0!✨🎉 &lt;/p&gt;

&lt;p&gt;I'm so pumped to make a difference and contribute meaningfully to the hacker community with my amazing ML hacks!!! If you also want to make &lt;em&gt;#InnovateForGood&lt;/em&gt; then do register now for &lt;em&gt;Hack This Fall 2.0&lt;/em&gt; today itself.🎇&lt;/p&gt;

&lt;p&gt;Do register at: &lt;a href="https://hackthisfall.tech/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use this special code &lt;em&gt;“HTFHE066”&lt;/em&gt; to earn amazing and super exclusive goodies just for you.🤩🤩🤩&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>beginners</category>
      <category>hackthisfall</category>
      <category>innovateforgood</category>
    </item>
    <item>
      <title>AnitaB.org Open Source profile README on GitHub</title>
      <author>Isabel Costa</author>
      <pubDate>Sun, 03 Oct 2021 16:01:51 +0000</pubDate>
      <link>https://dev.to/isabelcmdcosta/anitab-org-open-source-profile-readme-on-github-3829</link>
      <guid>https://dev.to/isabelcmdcosta/anitab-org-open-source-profile-readme-on-github-3829</guid>
      <description>&lt;p&gt;GitHub &lt;a href="https://twitter.com/github/status/1438276928696463372"&gt;announced&lt;/a&gt; the other day, that Organizations can now have their own README.&lt;/p&gt;

&lt;p&gt;I love this feature! So when I had the chance I created one for &lt;a href="https://github.com/anitab-org"&gt;AnitaB.org Open Source&lt;/a&gt; community.&lt;/p&gt;

&lt;p&gt;One thing I’ve learned from being involved with Open Source is that not all communities work the same way. Each one has its mission, way of working, and contribution processes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Welcoming every type of contribution is one of our core values&lt;/strong&gt;, as is &lt;a href="https://opensource.com/article/21/8/beginner-open-source-community"&gt;being beginner-friendly&lt;/a&gt;. Having a &lt;strong&gt;README allows us to inform contributors of how we operate and how they can help us&lt;/strong&gt;. Now we can show what the community is about right when a contributor finds our organization page on GitHub. &lt;/p&gt;

&lt;p&gt;The first impression we want to pass to newcomers and our community is that they can contribute in multiple ways other than code if they want. So the first draft of our profile README aims to let our contributors know they can join us on &lt;a href="https://anitab-org.zulipchat.com/"&gt;Zulip&lt;/a&gt; and contribute to our community in various ways such as reviewing code, implementing features, testing our apps, reporting bugs, suggesting design improvements, blogging for our publication, etc... &lt;/p&gt;

&lt;p&gt;Here’s our profile README 🎉 which you can check out at &lt;a href="https://github.com/anitab-org"&gt;github.com/anitab-org&lt;/a&gt; (&lt;a href="https://github.com/anitab-org/.github/blob/main/profile/README.md"&gt;source code&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IaT85_7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6svf5abxumfonjkypx3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IaT85_7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6svf5abxumfonjkypx3.png" alt="anitab.org profile readme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have an organization on GitHub and would like to add this feature you can read about it here: &lt;a href="https://github.blog/changelog/2021-09-14-readmes-for-organization-profiles/"&gt;https://github.blog/changelog/2021-09-14-readmes-for-organization-profiles/&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>The upside and downside of lodash</title>
      <author>Muhammad Muhktar Musa</author>
      <pubDate>Sun, 03 Oct 2021 15:49:17 +0000</pubDate>
      <link>https://dev.to/mcube25/the-upside-and-downside-of-lodash-540d</link>
      <guid>https://dev.to/mcube25/the-upside-and-downside-of-lodash-540d</guid>
      <description>&lt;p&gt;Lodash is a modern javaScript utility library that delivers modularity, performance and other task.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#upside"&gt;
  &lt;/a&gt;
  Upside
&lt;/h4&gt;

&lt;p&gt;Lodash provides tools for making code cleaner and more functional. It supports modern browsing environments and helps in building modular applications. It makes working with arrays, numbers, objects and strings more easier. Lodash is also excellent for iterating arays, objects and strings as well as manipulating and testing values. Let us take a look at some lodash functions and how they improve functionality. We are going to compare them to the vanilla javaScript equivalent.&lt;br&gt;
 The aim is to understand how this functionalities are achieved under the hood.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#sortby"&gt;
  &lt;/a&gt;
  sortBy
&lt;/h4&gt;

&lt;p&gt;It creates an array of elements sorted in ascending order by the results of running each element in a collection through each iteratee. This method performs a stable sort. It also preserves the original sort order of equal elements. the iteratees are invoked with a single argument: (value). It returns the new sorted array.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#lodash"&gt;
  &lt;/a&gt;
  Lodash
&lt;/h5&gt;

&lt;p&gt;First we import the function from lodash&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; import {sortBy} from 'lodash';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we create an array of users&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const users = [
  { 'user': 'fred', 'age': 48 },
  { 'user': 'brand', 'age': 36 },
  { 'user': 'fred', 'age': 40 },
  { 'user': 'brand', 'age': 34 }
];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We now apply the the lodash sortBy function to the array&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;_.sortBy(users, function(o) { return o.user; });
// =&amp;gt; objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]

_.sortBy(users, ['user', 'age']);
// =&amp;gt; objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]

_.sortBy(users, 'user', function(o) {
  return Math.floor(o.age / 10);
});
// =&amp;gt; objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We get the above result.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#vanilla-javascript"&gt;
  &lt;/a&gt;
  Vanilla javaScript
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const users = [
  { 'user': 'fred', 'age': 48 },
  { 'user': 'brand', 'age': 36 },
  { 'user': 'fred', 'age': 40 },
  { 'user': 'brand', 'age': 34 }
];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const sortBy = (key) =&amp;gt; {
  return (a, b) =&amp;gt; (a[key] &amp;gt; b[key]) ? 1
   : ((b[key] &amp;gt; a[key]) ? -1 : 0);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We now use the native sort to modify the array in place. We also use the &lt;code&gt;concat()&lt;/code&gt; method to copy the array before sorting.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;users.concat().sort(sortBy('user'));
// =&amp;gt; objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]];

users.concat().sort(sortBy('user', 'age'));
// =&amp;gt; objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#curry"&gt;
  &lt;/a&gt;
  Curry
&lt;/h4&gt;

&lt;p&gt;Creates a function that accepts arguments of &lt;code&gt;func&lt;/code&gt; and either invokes &lt;code&gt;func&lt;/code&gt; returning its result if at least the number of arguments is specified or returns a &lt;code&gt;function&lt;/code&gt; that accepts the remaining &lt;code&gt;func&lt;/code&gt; arguments. The arguments of the &lt;code&gt;func&lt;/code&gt; maybe specified if &lt;code&gt;func.length&lt;/code&gt; is not sufficient&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#lodash"&gt;
  &lt;/a&gt;
  Lodash
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { curry } from 'lodash';
const abc = (a, b, c) =&amp;gt; [a, b, c];
const curried = curry(abc);
curried(3)(4)(5);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the code solution above check&lt;br&gt;
&lt;a href="https://dev.to/mcube25/javascript-advanced-functions-for-dummies-4i6g:"&gt;https://dev.to/mcube25/javascript-advanced-functions-for-dummies-4i6g:&lt;/a&gt; &lt;br&gt;
&lt;a href="https://dev.to/mcube25/javascript-advanced-functions-for-dummies-4i6g"&gt;check for more info on currying&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#vanilla-javascript"&gt;
  &lt;/a&gt;
  Vanilla javaScript
&lt;/h5&gt;

&lt;p&gt;First we define the number of expected arguments&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const curry = func =&amp;gt; {
  const expectedArgs = func.length;
  const curried = (...args) =&amp;gt; {

  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If enough arguments have been passed, we return the result of the function execution or else we continue adding to the list&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const curry = func =&amp;gt; {
  const expectedArgs = func.length;
  const curried = (...args) =&amp;gt; {
    return args.length &amp;gt;= expectedArgs
      ? func(...args)
      : (...args2) =&amp;gt; curried(...args.concat(args2))
  }
  return curried
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the code solution above check&lt;br&gt;
&lt;a href="https://dev.to/mcube25/javascript-advanced-functions-for-dummies-4i6g:"&gt;https://dev.to/mcube25/javascript-advanced-functions-for-dummies-4i6g:&lt;/a&gt; &lt;br&gt;
&lt;a href="https://dev.to/mcube25/javascript-advanced-functions-for-dummies-4i6g"&gt;check for more info on currying&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#chunk"&gt;
  &lt;/a&gt;
  Chunk
&lt;/h4&gt;

&lt;p&gt;It creates an array of elements split into groups the length of the size. The size will be the second argument provided to the function.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#lodash"&gt;
  &lt;/a&gt;
  Lodash
&lt;/h5&gt;

&lt;p&gt;Import chunk from lodash&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { chunk } from 'lodash';
chunk(['boy', 'girl', 'brother', 'sister', 'uncle', 'aunt'], 2);
//=&amp;gt;[['boy', 'girl'], ['brother', 'sister'], [uncle', 'aunt']];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If collection can’t be split evenly, the final chunk will be the remaining elements.&lt;br&gt;
Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chunk(['boy', 'girl', 'brother', 'sister', 'uncle', 'aunt', 'father'], 2);
//=&amp;gt;[['boy', 'girl'], ['brother', 'sister'], [uncle', 'aunt'], [father]];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#vanilla-javascript"&gt;
  &lt;/a&gt;
  Vanilla javaScript
&lt;/h5&gt;

&lt;p&gt;Using plain javaScript the lodash example can be written as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const chunk = (arr, arrSize, cache = []) =&amp;gt; {
  const temp = [...arr]
  if (arrSize &amp;lt;= 0) { return cache }
  while (temp.length) {
    cache.push(temp.splice(0, arrSize))
    return cache
  }
}
chunk(['boy', 'girl', 'brother', 'sister', 'uncle', 'aunt'], 2);
//=&amp;gt;[['boy', 'girl'], ['brother', 'sister'], [uncle', 'aunt']];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#pullat"&gt;
  &lt;/a&gt;
  pullAt
&lt;/h4&gt;

&lt;p&gt;This function removes elements from an array corresponding to indexes and returns an array of removed elements. This method mutates the array&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#lodash"&gt;
  &lt;/a&gt;
  Lodash
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { pullAt } from 'lodash';
const array = ['2', '3', '4', '5', '6'];
pullAt(array, [2, 4]);
//=&amp;gt;[4, 6]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#vanilla-javascript"&gt;
  &lt;/a&gt;
  Vanilla javaScript
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const pullAt = (arr, idxs) =&amp;gt; {
  idxs.reverse().map(
    idx =&amp;gt; arr.splice(idx, 1)[0]
  ).reverse()
};

pullAt(array, [2, 4]);
//=&amp;gt;[4, 6]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#remove"&gt;
  &lt;/a&gt;
  Remove
&lt;/h4&gt;

&lt;p&gt;This function removes all elements from an array that affirms or denies the subject in the proposition logic. It returns truthy for the array. It also returns an array of the removed elements. It is invoked with three arguments which are &lt;code&gt;(value, index, array)&lt;/code&gt;. It mutates the array&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#lodash"&gt;
  &lt;/a&gt;
  Lodash
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { remove } from 'lodash';
const array = [1, 2, 3, 4, 5];
const even = remove(array, n =&amp;gt; {
  return n % 2 === 0
});

// the array //=&amp;gt;[1, 3, 5];
// even //=&amp;gt; [2, 4];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#vanilla-javascript"&gt;
  &lt;/a&gt;
  Vanilla javaScript
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const remove = (array, ix) =&amp;gt; {
  const toRemove = [];
  const result = array.filter((item, i) =&amp;gt;
    ix(item) &amp;amp;&amp;amp; toRemove.push(i)
  )
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to not mutate the original array until the very end, we want to cache the indexes while preparing the result to return in the code above. Just before returning, we can remove the items making sure to start from the higher indexes to prevent them shifting at each removal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const remove = (array, ix) =&amp;gt; {
  const toRemove = [];
  const result = array.filter((item, i) =&amp;gt;
    ix(item) &amp;amp;&amp;amp; toRemove.push(i)
  )
  toRemove.reverse().forEach(i =&amp;gt; array.splice(i, 1))
  return result
}
const array = [1, 2, 3, 4, 5];
const even = remove(array, n =&amp;gt; {
  return n % 2 === 0
});

// the array //=&amp;gt;[1, 3, 5];
// even //=&amp;gt; [2, 4];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#reduce"&gt;
  &lt;/a&gt;
  Reduce
&lt;/h4&gt;

&lt;p&gt;This function reduces a collection to a value that is the accumulated result of running each element in the collection through an iteratee. Each successive invocation is supplied the return value of the previous. If the accumulator is not given, then the first element of the collection is used as the initial value. The iteratee is invoked with four arguments: &lt;code&gt;(accumulator, value, index, collection)&lt;/code&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#lodash"&gt;
  &lt;/a&gt;
  Lodash
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { reduce } from 'lodash';

reduce([3, 4], (sum, n) =&amp;gt; sum + n, 0);
//=&amp;gt;7 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#vanilla-javascript"&gt;
  &lt;/a&gt;
  Vanilla javaScript
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;array = [3, 4];
array.reduce((sum, n) =&amp;gt; sum + n, 0);
//=&amp;gt;7 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#before"&gt;
  &lt;/a&gt;
  Before
&lt;/h4&gt;

&lt;p&gt;It creates a function that invokes a &lt;code&gt;func&lt;/code&gt; with the &lt;code&gt;this&lt;/code&gt; binding and arguments of the created function while it is called less than &lt;code&gt;n&lt;/code&gt; times. Subsequent calls to the created function returns the result of the last &lt;code&gt;func&lt;/code&gt; invocation&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#lodash"&gt;
  &lt;/a&gt;
  Lodash
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { before } from 'lodash';

(t, fn) =&amp;gt; before(t, fn);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#vanilla-javascript"&gt;
  &lt;/a&gt;
  Vanilla javaScript
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const before = (t, fn) =&amp;gt; {
  let counter = 0;
  let res;
  return (...args) =&amp;gt; {
    counter++;
    if (counter &amp;lt;= t) {
      res = fn(...args);
      return res
    } else {
      return res
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#downside"&gt;
  &lt;/a&gt;
  Downside
&lt;/h4&gt;

&lt;p&gt;As can be seen, the amount of code written when using lodash is minimal compared to using plain javaScript. But the downside of using lodash in an application is that it increases the size of the application which in turn affects the performance of such applications.&lt;/p&gt;

</description>
      <category>functional</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Don't Use Create React App Until You Know This</title>
      <author>Jordan Burroughs</author>
      <pubDate>Sun, 03 Oct 2021 15:10:36 +0000</pubDate>
      <link>https://dev.to/jburroughs/don-t-use-create-react-app-until-you-know-this-1a2d</link>
      <guid>https://dev.to/jburroughs/don-t-use-create-react-app-until-you-know-this-1a2d</guid>
      <description>&lt;p&gt;The other day a co-worker noticed something interesting about our production code: You could view our original, perfectly formatted code in the browser. At first I was like, "But I built it for production, and therefore it &lt;em&gt;should&lt;/em&gt; be minified and unreadable, right?"&lt;/p&gt;

&lt;p&gt;I always thought &lt;a href="https://create-react-app.dev/"&gt;Create React App&lt;/a&gt; (CRA) handled that for me. Have I been lied to the entire time?&lt;/p&gt;

&lt;p&gt;Source maps.&lt;/p&gt;

&lt;p&gt;Yes, source maps were the reason. So I learned about them and thought it would be nice to shed some light on them so others, like myself, become aware of them and make more informed decisions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-source-maps"&gt;
  &lt;/a&gt;
  What are source maps?
&lt;/h2&gt;

&lt;p&gt;When building React apps with CRA, you are basically using webpack and babel to transpile, minify, and bundle the JavaScript/TypeScript code you wrote for deployment. During this process your files are manipulated in a way that they need a mapping to be put back together in the original form. That's where source maps come into play.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Source maps are just JSON files that essentially rebuild what the bundlers and transpilers changed. Their main purpose is to help debug your built, optimized code.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It makes sense that if you have a bug and view the stack trace, you want to see &lt;em&gt;your&lt;/em&gt; code and not the gibberish that webpack and babel spit out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-does-the-browser-show-everything"&gt;
  &lt;/a&gt;
  Why Does The Browser Show Everything?
&lt;/h2&gt;

&lt;p&gt;The environment variable &lt;code&gt;GENERATE_SOURCEMAP=true&lt;/code&gt; by default in CRA. That means once you build, the generated folder there will be extra ".map" files generated. It will look something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kLhfDIju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umy47vb64q3o08g0vlhr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kLhfDIju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umy47vb64q3o08g0vlhr.png" alt="Build folder with .map files"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The browser can then use the .map files to reconstruct the original code, and become viewable in browser dev tools.&lt;/p&gt;

&lt;p&gt;When &lt;code&gt;GENERATE_SOURCEMAP=false&lt;/code&gt;, the same code would look like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--udAavIrW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6psrp816kuts4pgkofgi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--udAavIrW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6psrp816kuts4pgkofgi.png" alt="Build folder without .map files"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's what the CRA docs say: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EHl-Xhsn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gslwov09z5wao5lk223j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EHl-Xhsn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gslwov09z5wao5lk223j.png" alt="Create React App documentation on GENERATE_SOURCEMAP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#should-i-generate-the-source-maps"&gt;
  &lt;/a&gt;
  Should I Generate The Source Maps?
&lt;/h2&gt;

&lt;p&gt;In the end, what am I going to do? Leave the source maps in or take them out. &lt;/p&gt;

&lt;p&gt;Personally, I believe it depends on your requirements, but mostly yes. I think CRA has it correct (as in by default, they are generated, &lt;strong&gt;but&lt;/strong&gt; can be overwritten).&lt;/p&gt;

&lt;p&gt;Below I've identified some points about generating source maps to help make your choice: &lt;/p&gt;

&lt;p&gt;For not having them:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A savvy user could see your source code 😬&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For having them:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;So what if they see your code? What are &lt;em&gt;they&lt;/em&gt; gonna do with it? 🤷🏽‍♂️&lt;/li&gt;
&lt;li&gt;It helps debug in production.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Yep, that's basically it. It seems to come down to whether you care if users see your source code and if you want to have the ability to debug in production.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Important Note: If you generate source maps, there are going to be extra .map files created. Although, these do **not&lt;/em&gt;* add to the bundle size because these files are only requested by the client when dev tools are open 😏*&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Let me know how you feel about generating source maps for production. Do you disable them, or leave them be?&lt;/p&gt;

&lt;p&gt;Also, if you want to fact check me, I'm all ears to understand more about source maps.&lt;/p&gt;

&lt;p&gt;Check out these resources I used to get learn about source maps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/oyetoket/is-it-safe-to-ship-javascript-source-maps-to-production-34p8"&gt;Dev.to post by Oyetoke Toby (see the comments too)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.html5rocks.com/en/tutorials/developertools/sourcemaps/"&gt;General info about source maps by Ryan Seddon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.sentry.io/platforms/javascript/guides/react/sourcemaps/"&gt;Sentry.io docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#thanks-for-reading-if-you-want-more-tech-tips-software-stuff-and-bussin-blogs-you-can-throw-me-a-follow-on-twitter"&gt;
  &lt;/a&gt;
  Thanks for reading! If you want more tech tips, software stuff, and bussin' blogs, you can throw me a follow on &lt;a href="https://www.twitter.com/JBurroughsTech"&gt;Twitter&lt;/a&gt;🔥🤘🏽🐶
&lt;/h3&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>webpack</category>
      <category>react</category>
    </item>
  </channel>
</rss>
