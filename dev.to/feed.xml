<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Explicit ESM in Node.js with .mjs</title>
      <author>Tierney Cyren</author>
      <pubDate>Mon, 14 Jun 2021 21:40:43 +0000</pubDate>
      <link>https://dev.to/bnb/explicit-esm-in-node-js-with-mjs-3ooh</link>
      <guid>https://dev.to/bnb/explicit-esm-in-node-js-with-mjs-3ooh</guid>
      <description>&lt;p&gt;A while ago, Node.js introduced support for ECMAScript Modules (ESM). ESM is the &lt;strong&gt;standardized&lt;/strong&gt; modules implementation that's been built-in to JavaScript. This differs rather significantly from CommonJS (CJS), which is the module system that Node.js has shipped with for over a decade that make them &lt;em&gt;relatively&lt;/em&gt; incompatible.&lt;/p&gt;

&lt;p&gt;There are a number of different components of Node.js that have been intentionally structured to allow you to use &lt;strong&gt;standard&lt;/strong&gt; (as in, how the ECMAScript Specification defines it) ESM by default and extend/augment that experience if you'd like to.&lt;/p&gt;

&lt;p&gt;Today, I want to get into one of the baisc elements of ESM in Node.js: the &lt;code&gt;.mjs&lt;/code&gt; and &lt;code&gt;.cjs&lt;/code&gt; extensions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-raw-mjs-endraw-and-raw-cjs-endraw-"&gt;
  &lt;/a&gt;
  Why &lt;code&gt;.mjs&lt;/code&gt; (and &lt;code&gt;.cjs&lt;/code&gt;)?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-quick-answer"&gt;
  &lt;/a&gt;
  The Quick Answer
&lt;/h3&gt;

&lt;p&gt;The straightforward answer to this is that having different file extensions allows you to be explicit in how you want to run your code - &lt;code&gt;.mjs&lt;/code&gt; will always be run as ESM, &lt;code&gt;.cjs&lt;/code&gt; will always be run as CommonJS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-answer-with-context"&gt;
  &lt;/a&gt;
  The Answer With Context
&lt;/h3&gt;

&lt;p&gt;Because of the differences in how ESM and CommonJS work, Node.js runs them differently by default. This results in the runtime needing an indicator about which way you want to run your code - as ESM or as CommonJS.&lt;/p&gt;

&lt;p&gt;There's three different ways that this indicator could be expressed: explicitly, implicitly, and by default.&lt;/p&gt;

&lt;p&gt;To not break over a decade of projects and over a million modules that are expecting to Just Work, the default the project landed on was CommonJS - sensible, especially when you consider millions of lines of code and multitudes of applications already running in this way.&lt;/p&gt;

&lt;p&gt;The way to &lt;em&gt;explicitly&lt;/em&gt; assert that the code you're running is ESM and should be run as such is to just use the &lt;code&gt;.mjs&lt;/code&gt; file extension (which, if you're concerned, is also supported in web browsers as long as the &lt;code&gt;Content-Type: text/javascript&lt;/code&gt; header is sent and is actually &lt;a href="https://v8.dev/features/modules#mjs"&gt;recommended by V8&lt;/a&gt;). The official overview of this is documented in the &lt;a href="https://nodejs.org/api/packages.html#packages_determining_module_system"&gt;determining module system&lt;/a&gt; section of the Node.js Packages documentation.&lt;/p&gt;

&lt;p&gt;When you use &lt;code&gt;.mjs&lt;/code&gt;, Node.js &lt;em&gt;knows&lt;/em&gt; that you've written ESM and will parse your JavaScript as such. The same is true for &lt;code&gt;.cjs&lt;/code&gt; - Node.js &lt;em&gt;knows&lt;/em&gt; that &lt;code&gt;.cjs&lt;/code&gt; should run as CommonJS, and will parse your JavaScript as CommonJS.&lt;/p&gt;

</description>
      <category>node</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How I plan to solve hiring in tech</title>
      <author>Syed Faraaz Ahmad</author>
      <pubDate>Mon, 14 Jun 2021 21:30:24 +0000</pubDate>
      <link>https://dev.to/faraazahmad/how-i-plan-to-solve-hiring-in-tech-13mn</link>
      <guid>https://dev.to/faraazahmad/how-i-plan-to-solve-hiring-in-tech-13mn</guid>
      <description>&lt;p&gt;Let's be real, no one likes the hiring process in tech. Neither you the developer who has to memorize all the algorithms again and cram tens or hundreds of Leetcode questions, nor the interviewer who has to ask the same questions over and over to different candidates and wonders how much work they could've gotten done if they hadn't spent all this time interviewing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The interviewers don't hate you&lt;/strong&gt; though, they're not putting you through this torture because they like it. They've been in your shoes, they know the process sucks. They're a victim of the system just like you. Companies want the best possible candidates in the shortest possible time and this is what the hiring process has always been, so that's what the interviewers follow.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--UPQKLpVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1389254817843920898/E-1yQI0f_normal.jpg" alt="Madison Kanna profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Madison Kanna
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/madisonkanna"&gt;@madisonkanna&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Itâ€™s absolutely wild that being good at interviewing for the developer job and being good at the actual job are two completely separate skills.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:47 PM - 10 May 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1391812235375222786" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1391812235375222786" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1391812235375222786" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#actually-test-them-for-the-job"&gt;
  &lt;/a&gt;
  Actually test them for the job
&lt;/h2&gt;

&lt;p&gt;I don't think this process gives the best possible candidates, or even in the shortest possible time. If you want the best possible candidate for the job then test them for skills they'll actually be using on the job. For example, if it's a backend developer you want, test them on their knowledge in backend, chances are you'll find a much better backend developer and the candidates will respect you for the process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-waste-their-time"&gt;
  &lt;/a&gt;
  Don't waste their time
&lt;/h2&gt;

&lt;p&gt;People have things to do. Most people aren't sitting around all day preparing for your interview or solving the 100th take-home problem they've been given this month. One take-home problem solved in an interview should be applicable to another interview. This saves everybody a lot of time and you  can skip to the explanation part of the problem.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rerFTyO_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1066332461393620993/5o_5mely_normal.jpg" alt="FlatTsunSociety profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        FlatTsunSociety
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @reaper20736
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Get a call asking to attend an interview. Immediately worried, the call was surprisingly short. Email company to confirm I have an interview. Automatic response says they'll reply in 48 hrs, 100hrs pass no reply. Show up, no one knows about the interview. &lt;br&gt;Why do people do this?
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:00 AM - 08 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1402083073026519041" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1402083073026519041" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1402083073026519041" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#dont-ghost-them-seriously"&gt;
  &lt;/a&gt;
  Don't ghost them (seriously!)
&lt;/h2&gt;

&lt;p&gt;Look, I get it. It sucks to give people bad news, especially when there's lots of candidates applying for a single job. It's time consuming and soul crushing, but it needs to be done. As a candidate it's way worse to be left waiting for a reply not knowing what happened than getting a rejection in a fairly quick amount of time.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwGYpiGt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1396212283148279813/pKHoOBB5_normal.jpg" alt="Thorne Melcher profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Thorne Melcher
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/existentialenso"&gt;@existentialenso&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Iâ€™m really crumpling from the stress from this job search. Tech interview cycles are long and intense.&lt;br&gt;&lt;br&gt;I have so little time to find a job before things get bad and feel so off my game from how anxious I am about not knowing when my next paycheck will be.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      00:36 AM - 13 Feb 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1227753280933105665" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1227753280933105665" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1227753280933105665" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#reduce-the-stress"&gt;
  &lt;/a&gt;
  Reduce the stress
&lt;/h2&gt;

&lt;p&gt;Candidates are under a lot of stress when leading up to an interview and that can negatively impact how they perform in the interview. Unless the job you're interviewing for has people dealing with extreme stress on a daily basis, it is better to try and reduce the candidates' stress. Give them choices, make them comfortable and in the end you might just have a lot of options to choose from at the end :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-put-it-in-practice"&gt;
  &lt;/a&gt;
  Lets put it in practice!
&lt;/h3&gt;

&lt;p&gt;These are some of the fundamentals that I think could really help improve hiring in tech. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you've ever interviewed candidates for a job&lt;/strong&gt; I would love to know what problems you face while hiring and what steps you've taken to help ease them.&lt;/p&gt;

&lt;p&gt;Tell me the problems you've faced as a candidate and we can all come together to solve them.&lt;/p&gt;

</description>
      <category>hiring</category>
      <category>discuss</category>
      <category>help</category>
    </item>
    <item>
      <title>Salary Negotiation Techniques</title>
      <author>Alec</author>
      <pubDate>Mon, 14 Jun 2021 20:52:07 +0000</pubDate>
      <link>https://dev.to/alecbsherman/salary-negotiation-techniques-3bha</link>
      <guid>https://dev.to/alecbsherman/salary-negotiation-techniques-3bha</guid>
      <description>&lt;p&gt;This is a full outline of how you can become a top negotiator when interviewing for a job.&lt;/p&gt;

&lt;p&gt;When I was starting out I always negotiated better compensation plans than others in the office, even when they were smarter, had a more formal education, or had more years of experience.&lt;/p&gt;

&lt;p&gt;Although I started programming when I was 14 years old, my career and passion was sales from the age of 18 to 30.  Being a bit OCD I studied everything I could to be a great salesperson. Zig Ziglar was my idol.  When I switched careers at 30 to software development, those negotiating tactics really paid off.&lt;/p&gt;

&lt;p&gt;I used these techniques to negotiate top pay, virtual office, travel and extensive fringe benefits for positions from software developer up to Chief Technology Officer but this works for any job position.&lt;/p&gt;

&lt;p&gt;This video shows how to find out how much your job position pays.  Then goes over &lt;strong&gt;basic&lt;/strong&gt; negotiating strategies and lastly &lt;strong&gt;advanced&lt;/strong&gt; negotiating tips to not only getting more money but a better quality of life.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aEA7HvJqGJs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>salary</category>
    </item>
    <item>
      <title>Routing with Express</title>
      <author>ShasheeshPurohit</author>
      <pubDate>Mon, 14 Jun 2021 20:36:51 +0000</pubDate>
      <link>https://dev.to/shasheeshpurohit/routing-with-express-pag</link>
      <guid>https://dev.to/shasheeshpurohit/routing-with-express-pag</guid>
      <description>&lt;p&gt;You might be familiar with routes if you've worked with node. Routes help us to organize our app in terms of separate modules. The bigger the app gets the more the number of routes, but then that's where the magic of EXPRESS comes in play.&lt;/p&gt;

&lt;p&gt;What is express?&lt;/p&gt;

&lt;p&gt;Express.js, or simply Express, is a back end web application framework for Node.js, released as free and open-source software under the MIT License. It is designed for building web applications and APIs.&lt;/p&gt;

&lt;p&gt;Express provides you with a bundle of functions that help you to organize your code better and to focus more on what to do rather than worrying about how it's being done, that's the magic of all frameworks right?&lt;/p&gt;

&lt;p&gt;So let's begin by writing our first ever express app and see how we can use the power of Express Router to organize and maintain our code better.&lt;/p&gt;

&lt;p&gt;Let us take a scenario where we're building an e-commerce app and write APIs for it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our main file &lt;code&gt;index.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express')
const app = express()

app.use(express.json())

//Products

let idCounter = 3

const products=[
 {
  id: 1,
  name: "Jeans",
  price: "5000",
 },
{
  id: 2,
  name: "Tee",
  price: "2500",
}
]

app.get("/", (req,res)=&amp;gt;{
res.send("Hello World!")

})

app.get("/products", (req,res)=&amp;gt;{
res.json(products)
})

app.post("/products", (req,res)=&amp;gt;{
 const {name, price} = req.body

 const product = {id: idCounter++, name, body}
 products.push(product)
 res.json({products, success: true})
})

app.listen(3000, (req,res)=&amp;gt;{
 console.log("Hey! The server is on!")
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the above route will fetch you the data you have in your products array in JSON form.&lt;/p&gt;

&lt;p&gt;It looks simple at the moment right? Yeah now imagine different modules of your apps such as wish list, cart, users and what not. Don't you think you're in for a nightmare while routing everything in such a way that they are as simple as possible and easy to understand but are still getting very complicated to remember?&lt;/p&gt;

&lt;p&gt;That's where the magic of Express comes into play. With Express Routes you can organize your code in such a manner, where the routes can be as simple as possible and very easy to remember.&lt;/p&gt;

&lt;p&gt;Let's take a look at how we achieve that.&lt;/p&gt;

&lt;p&gt;Considering the products module as an example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We first create another file named &lt;code&gt;product.router.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express')
const Router = express.Router()

Router.get("/",(req,res)=&amp;gt;{
 res.json({success: true}) //For testing
})

module.exports = router

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;making changes in our &lt;code&gt;index.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express')
const app = express()

const products = require ('product.router.js') // Importing router

app.use(express.json())

app.use("/products", products)

//Products

let idCounter = 3

const products=[
 {
  id: 1,
  name: "Jeans",
  price: "5000",
 },
{
  id: 2,
  name: "Tee",
  price: "2500",
}
]

app.get("/", (req,res)=&amp;gt;{
res.send("Hello World!")

})

app.get("/products", (req,res)=&amp;gt;{
res.json(products)

})

app.post("/products", (req,res)=&amp;gt;{
 const {name, price} = req.body

 const product = {id: idCounter++, name, body}
 products.push(product)
 res.json({products, success: true})
})

app.listen(3000, (req,res)=&amp;gt;{
 console.log("Hey! The server is on!")
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What actually happens when we import and use our router is :&lt;/p&gt;

&lt;p&gt;The "/products" path is actually triggering our router and inside our router "/products" route is defined directly by "/"&lt;/p&gt;

&lt;p&gt;Hence when you have further paths such as "/products/:id", this will be defined in our product router as "/:id". &lt;/p&gt;

&lt;p&gt;This is a relatively small app as of now but you will realize it's importance once you reach a stage where you have to add a large number of routes.&lt;/p&gt;

&lt;p&gt;Lets now make the final changes in our &lt;code&gt;product.router.js&lt;/code&gt; and &lt;code&gt;index.js&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;index.js
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express')
const app = express()

const products = require ('product.router.js') // Importing router

app.use(express.json())

app.use("/products", products)

app.get("/", (req,res)=&amp;gt;{
res.send("Hello World!")

})

app.listen(3000, (req,res)=&amp;gt;{
 console.log("Hey! The server is on!")
})

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;product.router.js
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
const express = require('express')
const Router = express.Router()

//Products

let idCounter = 3

const products=[
 {
  id: 1,
  name: "Jeans",
  price: "5000",
 },
{
  id: 2,
  name: "Tee",
  price: "2500",
}
]

Router.get("/",(req,res)=&amp;gt;{
 res.json(products)
})

Router.post("/", (req,res)=&amp;gt;{
 const {name, price} = req.body

 const product = {id: idCounter++, name, body}
 products.push(product)
 res.json({products, success: true})
})

module.exports = router

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can see how organized the code looks with the routes related to "products" all merged into a separate file.&lt;/p&gt;

&lt;p&gt;But wait that's not it, Express gives you some more advantage in this. What's that?&lt;/p&gt;

&lt;p&gt;Well instead of separately defining "Route.get" and "Route.post" for the same route "/" we can tweak the code some more, here's how:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;product.router.js
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
const express = require('express')
const Router = express.Router()

//Products

let idCounter = 3

const products=[
 {
  id: 1,
  name: "Jeans",
  price: "5000",
 },
{
  id: 2,
  name: "Tee",
  price: "2500",
}
]

Router.Route("/")      //Notice how the syntax has changed here
.get((req,res)=&amp;gt;{
 res.json(products)
})
.post((req,res)=&amp;gt;{
 const {name, price} = req.body

 const product = {id: idCounter++, name, body}
 products.push(product)
 res.json({products, success: true})
})

module.exports = router

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Did you see how we used "Router.route("/")" and then placed and get and post just below it for the same path.&lt;/p&gt;

&lt;p&gt;Hope you found this useful for your projects and do follow me on LinkedIn to get updates on my future blogs :)&lt;/p&gt;

&lt;p&gt;LinkedIn - &lt;a href="https://www.linkedin.com/in/shasheeshpurohit/"&gt;https://www.linkedin.com/in/shasheeshpurohit/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>express</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>Python Testing 201 with pytest</title>
      <author>Matt Layman</author>
      <pubDate>Mon, 14 Jun 2021 20:13:46 +0000</pubDate>
      <link>https://dev.to/mblayman/python-testing-201-with-pytest-2jh1</link>
      <guid>https://dev.to/mblayman/python-testing-201-with-pytest-2jh1</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fv259R38gqc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;For Python Frederick's September presentation, I presented on Python testing. In the presentation, I explained more of the features of pytest that went beyond the basics that we explored in March.&lt;/p&gt;

&lt;p&gt;The recording from the talk is available on YouTube. &lt;a href="https://www.youtube.com/watch?v=fv259R38gqc&amp;amp;list=PLFcKEo4b_n1wMFhbiedpMgh2VRT5uICuF&amp;amp;index=2"&gt;Check it out!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this presentation, I focused on a few big areas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating tests with a wide variety of example data using &lt;code&gt;@pytest.mark.parametrize&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Advice on organizing your test suite as the suite grows.&lt;/li&gt;
&lt;li&gt;Exploring fixtures as a tool for setup and reuse.&lt;/li&gt;
&lt;li&gt;Examining some useful built-in fixtures.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Questions? Feel free to mention me on Twitter at &lt;a href="https://twitter.com/mblayman"&gt;@mblayman&lt;/a&gt; so I can try to respond to your question.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>5 Razones de por quÃ© aprender EKS practicando</title>
      <author>mariomerco</author>
      <pubDate>Mon, 14 Jun 2021 20:12:13 +0000</pubDate>
      <link>https://dev.to/aws-builders/5-razones-de-por-que-aprender-eks-practicando-1ale</link>
      <guid>https://dev.to/aws-builders/5-razones-de-por-que-aprender-eks-practicando-1ale</guid>
      <description>&lt;p&gt;Alguna vez has estado en la posiciÃ³n de aprender alguna herramienta nueva sobre tecnologÃ­a y piensas &lt;strong&gt;"esto es increÃ­ble!"&lt;/strong&gt; pero cuando comienzas a aplicarla encuentras varios problemas que lo hacen realmente mÃ¡s difÃ­cil? Bueno, si has estado allÃ­, &lt;strong&gt;definitivamente trabajas en TI!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No es un secreto que las tecnologÃ­as de la informaciÃ³n evolucionan todo el tiempo y muy rÃ¡pido, haciendo que las cosas sean mejores y mÃ¡s rÃ¡pidas, pero tambiÃ©n a veces un poco abrumadoras. E incluso mÃ¡s allÃ¡ de eso, Â¡este escenario podrÃ­a suceder en muchos otros dominios del conocimiento y experiencias de vida!&lt;/p&gt;

&lt;p&gt;Ahora, aterrizando mÃ¡s en nuestro tema, Kubernetes en AWS, hay muy buenos ejemplos, documentaciones, laboratorios y ejercicios que pueden ayudar a comenzar con nuevos conocimientos, por lo que esto le brinda las herramientas como piezas de &lt;em&gt;Lego&lt;/em&gt; para construir su propia soluciÃ³n, ya sea desde cero o con alguna lÃ­nea de base. Esto es genial y funciona asÃ­ en la mayorÃ­a de las piezas de TI.&lt;/p&gt;

&lt;p&gt;Pero hay veces en las que es necesario realmente mirar un proyecto (ya sea algo pequeÃ±o, incluso) y llevarlo de la mano con Kubernetes, porque en la teorÃ­a se pueden obviar cosas que en la prÃ¡ctica son necesarias y que solo es (la practica) la que podrÃ¡ llenarlas. En otras palabras, &lt;strong&gt;no es lo mismo aprender a manejar una bicicleta por video tutoriales que montÃ¡ndote en una&lt;/strong&gt;. Por eso les dejo aquÃ­ 5 razones por quÃ© aprender &lt;strong&gt;EKS&lt;/strong&gt; practicando.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-kubernetes-es-complicado-demasiadas-piezas-movi%C3%A9ndose"&gt;
  &lt;/a&gt;
  1. Kubernetes es complicado: demasiadas piezas moviÃ©ndose
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wb0d2IGx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nk7mpo68acqyj5wcfnq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wb0d2IGx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nk7mpo68acqyj5wcfnq.jpg" alt="Complicado"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si bien Kubernetes se estÃ¡ convirtiendo cada vez mÃ¡s en un estÃ¡ndar cuando se habla de orquestaciÃ³n de contenedores, tambiÃ©n es cierto que el manejo de las cargas de trabajo de producciÃ³n es un desafÃ­o. Kubernetes es un conjunto de mÃºltiples componentes como lÃ­nea de base, luego comienza a contar a medida que implementas pods, configmaps, secretos, servicios y un largo etc. (ni siquiera hablamos de CRDs ...), por lo que antes de comprometer algo en producciÃ³n, requiere probar, no solo la aplicaciÃ³n en sÃ­, sino su infraestructura implementada en Kubernetes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-las-redes-necesitan-atenci%C3%B3n"&gt;
  &lt;/a&gt;
  2. Las redes necesitan atenciÃ³n
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fPn1u3wV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/852epm7i3sb3rljqduk2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fPn1u3wV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/852epm7i3sb3rljqduk2.jpg" alt="Red"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A medida que comience a implementar sus aplicaciones (especialmente si se comunican entre sÃ­), inmediatamente se enfrentarÃ¡ con DNS, IP, equilibrio de carga, etc. Aunque la mayor parte de esto se maneja con conceptos simples de Kubernetes, su infraestructura subyacente requiere una infraestructura de red bien establecida.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-los-permisos-de-iam-son-muy-detallados"&gt;
  &lt;/a&gt;
  3. Los permisos de IAM son muy detallados
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M_MjZ2el--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a09ukhnz55fmv4uy08xx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M_MjZ2el--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a09ukhnz55fmv4uy08xx.jpg" alt="Permisos"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si los desarrolladores tienen un acceso amplio al espacio de AWS, codificarÃ¡n sus aplicaciones usando el SDK de AWS probablemente sin preocuparse por los permisos ... Â¡hasta que obtenga Kubernetes! Los contenedores intentarÃ¡n solicitar acceso a la API de AWS y, si el rol de IAM que abarca la aplicaciÃ³n no estÃ¡ configurado con los permisos adecuados, simplemente fallarÃ¡.&lt;/p&gt;

&lt;p&gt;Hay varias soluciones para esto, como &lt;a href="https://github.com/jtblin/kube2iam"&gt;Kube2IAM&lt;/a&gt;, &lt;a href="https://github.com/uswitch/kiam"&gt;KIAM&lt;/a&gt; y &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html"&gt;IAM Roles for Service Accounts&lt;/a&gt; que, si estamos en AWS y EKS (ejecutÃ¡ndose en instancias EC2), esta es mi opciÃ³n de preferencia ðŸ˜Ž.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-la-automatizaci%C3%B3n-tambi%C3%A9n-requiere-pruebas"&gt;
  &lt;/a&gt;
  4. La automatizaciÃ³n tambiÃ©n requiere pruebas
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zy5dKyZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7uf3lkg4r44hl3fpkjh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zy5dKyZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7uf3lkg4r44hl3fpkjh.jpg" alt="AutomatizaciÃ³n"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;La automatizaciÃ³n estÃ¡, en la mayorÃ­a de los casos, relacionada con la codificaciÃ³n, y la codificaciÃ³n tambiÃ©n estÃ¡ relacionada con errores. Entonces, en este caso, tomarÃ­a la palabra "prÃ¡ctica" reemplazada por "prueba". Entonces, los flujos de trabajo de CICD que quizÃ¡s desee crear son, al final, un cÃ³digo que se ejecuta en algÃºn lugar y puede tener problemas. Es por eso que tener varios entornos (al menos un entorno de PRUEBA) antes del de producciÃ³n es importante para probar realmente cÃ³mo se realizarÃ¡ el aprovisionamiento de sus recursos.&lt;/p&gt;

&lt;p&gt;Kubernetes tambiÃ©n se incluye en esta secciÃ³n, porque automatiza la orquestaciÃ³n de contenedores segÃºn las configuraciones que proporciones. Pero si sus configuraciones son incorrectas, podrÃ­an llevarlo a un problema de implementaciÃ³n o un entorno mal configurado.&lt;/p&gt;

&lt;p&gt;En resumen, siempre &lt;strong&gt;PRUEBA!&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-cuidado-con-el-orprie"&gt;
  &lt;/a&gt;
  5. Cuidado con el $orpri$e$ ðŸ’²ðŸ’²ðŸ’²
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxlrs8Fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/trnbijxmqh8chc1tjppy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxlrs8Fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/trnbijxmqh8chc1tjppy.jpg" alt="Malgastando dinero"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Esto es simple: &lt;strong&gt;Cuantos mÃ¡s nodos agregue, mÃ¡s dinero pagarÃ¡&lt;/strong&gt;. Por ejemplo, una de las ideas principales de tener contenedores y Kubernetes encima es &lt;strong&gt;Ajuste de escala automÃ¡tico&lt;/strong&gt;, y hay varias formas, &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-autoscaler.html"&gt;Ajuste de escala automÃ¡tico de clÃºster&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/horizontal-pod-autoscaler.html"&gt;Horizontal Pod Autoscaler&lt;/a&gt; y &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/vertical-pod-autoscaler.html"&gt;Vertical Pod Autoscaler&lt;/a&gt;. Lo mejor para configurar todo esto siempre depende del tipo de aplicaciÃ³n que estÃ© creando. TendrÃ¡ que entender cÃ³mo se comporta, cuÃ¡l es la mejor mÃ©trica para escalar, etc. y si esto no se toma con cuidado, podrÃ­a escalar sin realmente necesitarlo y costarle mucho mÃ¡s. ** Â¡O, incluso peor! **, podrÃ­a reducirse de manera muy agresiva y daÃ±ar su disponibilidad y respuestas, Â¡impactando directamente al usuario final! AsÃ­ que es mejor estar preparado probando escenarios y desarrollando una estrategia de revisiÃ³n de estas tareas a medida que su negocio aumente en usuarios finales.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#suena-aterrador"&gt;
  &lt;/a&gt;
  Suena aterrador ðŸŽƒ
&lt;/h2&gt;

&lt;p&gt;Y puede que si lo sea ðŸ˜…, pero realmente EKS ha ido creciendo y madurando en las herramientas que provee para hacer mÃ¡s fÃ¡cil su aprendizaje y mantenimiento. Desde Managed Worker Nodes, add-ons y actualizaciones automÃ¡ticas, hasta correr contenedores en Fargate (a lo Serverless) y miles de integraciones opensource por la comunidad de Kubernetes, de AWS y de ambos! AsÃ­ que, aunque suene complejo, EKS brinda facilidades para hacerlo un servicio atractivo y una soluciÃ³n productiva, segura y efectiva en costo.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;PD:&lt;/em&gt; Si tienes subscripciÃ³n de A Cloud Guru, te invito a mi curso &lt;a href="https://acloudguru.com/course/a-practical-guide-to-amazon-eks"&gt;A Practical Guide To Amazon EKS&lt;/a&gt;, donde muchos de estos temas los cubrimos &lt;strong&gt;practicando!&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>eks</category>
      <category>kubernetes</category>
      <category>aws</category>
      <category>spanishaws</category>
    </item>
    <item>
      <title>5 Tips To Increase Your Programming Productivity</title>
      <author>Rezaul karim</author>
      <pubDate>Mon, 14 Jun 2021 19:40:06 +0000</pubDate>
      <link>https://dev.to/rezaulkarim/5-tips-to-increase-your-programming-productivity-50m0</link>
      <guid>https://dev.to/rezaulkarim/5-tips-to-increase-your-programming-productivity-50m0</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qIoGizvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623698860639/5cbBBA8a-.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qIoGizvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623698860639/5cbBBA8a-.jpeg" alt="working-time-planning-work-schedule-organize-works-productivity-tasks-time-management-illustration-set_102902-1897.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#programming-productivity"&gt;
  &lt;/a&gt;
  Programming Productivity
&lt;/h2&gt;

&lt;p&gt;Hello everybody. So today we are going to discuss about 5 tips to increasing programming productivity. Tip number one&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-leverage-the-power-of-habit"&gt;
  &lt;/a&gt;
  1. Leverage The Power of Habit:
&lt;/h3&gt;

&lt;p&gt;Leverage The Power of Habit is to build productive routines. I asked you guys for book recommendations on Twitter and one of the books I got was The Power of Habit now, I actually started listening to the audio book of it and I thought it was really interesting because it helped me understand how I became more productive in the past years.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cz6TLwWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623698978989/03_dHeZEa.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cz6TLwWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623698978989/03_dHeZEa.jpeg" alt="top-view-break-bad-habit-concept_23-2148540741.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And now that I can pinpoint that it was because I was building A habit out of the things I want to be productive on that. I was able to make a routine and start cranking out code videos work stuff. You name it? Now essentially what you want to do is for the next 21 days do something every day. This could be coding flossing or whatever you want that you think is productive and after 21 days will be so hard for you to stop thatâ€™ll become second nature to you tip. Number two,&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-start-multitasking"&gt;
  &lt;/a&gt;
  2. Start multitasking:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3oOsjI4X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699032433/vCOmfxoUN.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3oOsjI4X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699032433/vCOmfxoUN.jpeg" alt="workforce-organization-management_335657-3158.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try Start multitasking the mundane stuff for things that doesnâ€™t require much concentration to do. Do something else thatâ€™s more productive while you do that. It would save you surprisingly a lot of time. For example when I clean my room or do something super boring that I usually do not like at all. I would just you know, whip out an audio book and just start listening to it and that way I can actually learn stuff. Why do those mundane tasks? Another example would be when I brush my teeth, I would read. Else or I would check my social media accounts and then little by little Iâ€™m actually saving a lot of time in the long run. Tip number three,&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-keep-yourself-busy-and-accountable-with-deadlines-and-stakeholders"&gt;
  &lt;/a&gt;
  3. keep yourself busy and accountable with deadlines and stakeholders:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HpSexezo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699074394/OYPrIfJttE.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HpSexezo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699074394/OYPrIfJttE.jpeg" alt="project-deadline-job-organization-poster_107791-1627.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now. One of the things I like to do is actually to fill out my calendar with lots of focus blocks and deadlines. That way I barely have time to procrastinate the deadlines I set for myself or even better that I promise to other people will keep me accountable for actually Completing the projects that way I canâ€™t procrastinate because I just have a lot to finish and a lot of people are depending on me to finish them. Tip number four&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-when-taking-a-break-dont-think-about-work-just-have-fun"&gt;
  &lt;/a&gt;
  4. When taking a break donâ€™t think about work just have fun:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HO5yaaaQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699128049/m3z5P0XqO.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HO5yaaaQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699128049/m3z5P0XqO.jpeg" alt="happy-tiny-business-people-dancing-having-fun-drinking-wine-corporate-party-team-building-activity-corporate-event-idea-concept-pinkish-coral-bluevector-isolated-illustration_335657-1414.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is important because I see a lot of people have faster productive time, but they also have faster fun time. For example. I see a lot of people studying while watching TV shows thatâ€™s terrible because you end up not enjoying the show nor learning the things youâ€™re trying to learn. So what I give myself a break I make sure I donâ€™t think about anything else. I love TV shows. So I turn off my phone and immerse myself and surprisingly youâ€™ll actually learn a lot more by doing that like, for example, I love to watch Pop videos and actually On the law of cinematography by dissecting these videos and just focusing on it. But if I was quoting while watching these Pop videos, Iâ€™d never appreciate them as much. Tip number 5&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-exercise-to-increase-programming-productivity"&gt;
  &lt;/a&gt;
  5. Exercise to increase programming productivity!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M4TvAmes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699157568/3EEUnJTM2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M4TvAmes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699157568/3EEUnJTM2.jpeg" alt="horizontal-shot-female-hand-being-raised-while-making-physical-exercises-with-weighting-agent-being-isolated-yellow-background-weight-loss-fitness-concept_295783-11709.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now Iâ€™m a big fan of weightlifting so I might be biased here but I truly believe that exercising will make you sharper exercise. In helps you relieve stress because it releases endorphins which are feel good hormones. That way allows you to refresh your mind and be a lot more productive throughout the day. It doesnâ€™t even need to be super intense. As long as you get your heart rate up and work on moving your body more you feel the benefits right away exercise is a powerful habit and can be a good Hammer too, you know Teaching you to how to build these productive habits. So I highly recommend going to the gym or exercising regularly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#last-word-about-increasing-your-programming-productivity"&gt;
  &lt;/a&gt;
  Last word about increasing your programming productivity!
&lt;/h2&gt;

&lt;p&gt;So in conclusion, the most important point I want to get across is that if you really want to be good at something or you want to change an aspect of your life then make it a habit.And improve your programming productivity. Now you might say. Oh, yeah, itâ€™s not as easy as it sounds though. And youâ€™re absolutely right.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You know building habits extremely hard and I find it hard myself. But if you really care about thing you want to achieve then you will put the effort into it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and thatâ€™s why I want to keep myself accountable for what I say. So basically choose something that you always want to do or something that you want to get good at and together. Weâ€™ll make it a new habit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mrezaulkarim.com/5-tips-to-increase-programming-productivity/"&gt;Read this article on my blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more exciting tips and tricks please read our  &lt;a href="https://mrezaulkarim.com/blog/"&gt;others articles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find My page on Instagram:  &lt;a href="//instagram.com/stack.content"&gt;@stack.content&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>devops</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Code Review process</title>
      <author>leslysandra</author>
      <pubDate>Mon, 14 Jun 2021 19:27:21 +0000</pubDate>
      <link>https://dev.to/codeinspector/code-review-process-n8d</link>
      <guid>https://dev.to/codeinspector/code-review-process-n8d</guid>
      <description>&lt;p&gt;&lt;strong&gt;Code Review&lt;/strong&gt; is indeed a critical process during software development. Among different types of processes that can exist for doing software development and code reviewing, I'd like to highlight some, here.&lt;/p&gt;

&lt;p&gt;This one (image below) might be very well known among many developers. Create another &lt;em&gt;branch&lt;/em&gt; for development, work there all changes and updates, and... &lt;strong&gt;pull request&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pull requests let you tell others about changes you've pushed to a branch in a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before your changes are merged into the base branch.&lt;/em&gt; &lt;a href="https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests"&gt;source: Docs GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you are noted by the team (or reviewer) about the pull request, there is the &lt;em&gt;"Code Reviews" and "Commits"&lt;/em&gt;&lt;br&gt;
All those reviews and checks are very important just before merging to the &lt;strong&gt;master branch&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8AG9WXoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og536i6g0zshfbdgpgo9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8AG9WXoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og536i6g0zshfbdgpgo9.png" alt="Code Review process"&gt;&lt;/a&gt; &lt;a href="https://www.researchgate.net/publication/343576513_Code_Reviewer_Recommendations_as_a_Multi-Objective_Problem_Balancing_Expertise_Availability_and_Collaborations"&gt;Image Reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember, that avoiding (forgetting, ignoring,...) code review can help adding more and more to your &lt;strong&gt;technical debt&lt;/strong&gt;. (&lt;a href="https://dev.to/codeinspector/technical-debt-a-software-epidemic-57bp"&gt;Read here&lt;/a&gt; for more info about tech debt)&lt;/p&gt;

&lt;p&gt;Let's check one more example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-Lx2EVp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1179bzpla6mj15r8682f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-Lx2EVp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1179bzpla6mj15r8682f.png" alt="Investigating the effectiveness of peer code review in distributed software development based on objective and subjective data"&gt;&lt;/a&gt; &lt;a href="https://www.researchgate.net/publication/328541762_Investigating_the_effectiveness_of_peer_code_review_in_distributed_software_development_based_on_objective_and_subjective_data"&gt;Image reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What I like from the example above is the importance of &lt;em&gt;"peer review"&lt;/em&gt; and &lt;em&gt;"automated review process"&lt;/em&gt;.&lt;br&gt;
We should not forget the importance of team work during the software development process. Also, &lt;em&gt;"automating"&lt;/em&gt; the coding review helps you learn more about your coding style as well as remembering good coding practices for a great software project legacy.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I know there are other plenty processes for software development and code review&lt;/em&gt; that might also be customized for each team, project, etc. What is your process?&lt;/p&gt;

&lt;p&gt;Psss, for automated code review, check out &lt;a href="http://code-inspector.com/"&gt;Code Inspector&lt;/a&gt; to get started for free analyzing your code quality and calculating your tech debt in your projects at GitHub or GitLab or BitBucket.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>software</category>
      <category>github</category>
    </item>
    <item>
      <title>Making a basic deepCopy function in JS</title>
      <author>Lakshya Thakur</author>
      <pubDate>Mon, 14 Jun 2021 19:27:16 +0000</pubDate>
      <link>https://dev.to/lapstjup/making-a-basic-deepcopy-function-in-js-1hof</link>
      <guid>https://dev.to/lapstjup/making-a-basic-deepcopy-function-in-js-1hof</guid>
      <description>&lt;p&gt;By default in JS, if we try to make a copy of an object, say &lt;code&gt;obj&lt;/code&gt;, then either of the two helps us create &lt;strong&gt;Shallow&lt;/strong&gt; copies :-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Object.assign({}, obj)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{...obj}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the notorious yet popular &lt;code&gt;JSON.parse(JSON.stringify(obj))&lt;/code&gt; workaround can help us make a deep copy with the following limitations :-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If &lt;code&gt;obj&lt;/code&gt; has &lt;strong&gt;methods&lt;/strong&gt;, they won't be copied.&lt;/li&gt;
&lt;li&gt;If &lt;code&gt;obj&lt;/code&gt; has &lt;strong&gt;circular references&lt;/strong&gt;, the above would simply throw an error.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This gives us an opportunity to make our own &lt;code&gt;deepCopy&lt;/code&gt; function which can deal with the above limitations.&lt;/p&gt;

&lt;p&gt;Let's dive into its epic creation via a conversation between &lt;strong&gt;Shalu&lt;/strong&gt; and &lt;strong&gt;Deepu&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt; - I had a JS interview today and the interviewer asked me to build a custom &lt;code&gt;deepCopy(obj)&lt;/code&gt; function to do guess what ? DEEP COPYING !!! But I only knew &lt;code&gt;JSON.parse(JSON.stringify(obj))&lt;/code&gt; workaround which clearly had limitations as pointed by the interviewer. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt; - Don't worry. We will try to implement our own basic &lt;code&gt;deepCopy(obj)&lt;/code&gt; function which also takes care of those limitations. We will start simple, and gradually transform our function for the requirements. Take a look at this function :-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;deepCopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;newObj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;deepCopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newObj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt; - Well that's not gradual at all....&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt; -  Okay wait....&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--08OXkBly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EjuLKFkVcAEgU7p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--08OXkBly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EjuLKFkVcAEgU7p.jpg" alt="let me explain"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt; - We are initializing &lt;code&gt;newObj&lt;/code&gt; to an empty &lt;code&gt;Array&lt;/code&gt; or a &lt;code&gt;POJO&lt;/code&gt; (Plain Old JavaScript Object) on basis of whether &lt;code&gt;obj&lt;/code&gt; is an array or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;newObj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;deepCopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newObj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Suppose &lt;code&gt;obj&lt;/code&gt; was &lt;code&gt;{ name:'Saitama', age:'26' }&lt;/code&gt;, then &lt;code&gt;Object.entries(obj)&lt;/code&gt; would return an array&lt;code&gt;[ ['name','Saitama'],['age','26'] ]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So we are looping over de-structured &lt;code&gt;key&lt;/code&gt;-&lt;code&gt;value&lt;/code&gt; pair from this array and performing a conditional check. &lt;/p&gt;

&lt;p&gt;The check is that if type of &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;object&lt;/code&gt;, then assign the result of &lt;code&gt;deepCopy(value)&lt;/code&gt; to &lt;code&gt;newObj[key]&lt;/code&gt; else just assign &lt;code&gt;value&lt;/code&gt; itself. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt; - Wait a minute !!! We are calling &lt;code&gt;deepCopy(...)&lt;/code&gt; from within &lt;code&gt;deepCopy(...)&lt;/code&gt;. Isn't that recursion ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FhqMj6tn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/originals/4a/cb/83/4acb83efaab972a7bb25ec62a333753f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FhqMj6tn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/originals/4a/cb/83/4acb83efaab972a7bb25ec62a333753f.jpg" alt="goddamn right"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This use-case requires recursion. We don't know how many layers of nested objects our main &lt;code&gt;obj&lt;/code&gt; might have. We only know that if the corresponding &lt;code&gt;value&lt;/code&gt; for a &lt;code&gt;key&lt;/code&gt; is not of type &lt;code&gt;object&lt;/code&gt;, we can safely put the same &lt;code&gt;key&lt;/code&gt;-&lt;code&gt;value&lt;/code&gt; pair in our &lt;code&gt;newObj&lt;/code&gt;. For the rest, we need to call &lt;code&gt;deepCopy(value)&lt;/code&gt; again. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt; - But wait !!! What about &lt;strong&gt;Functions&lt;/strong&gt; ? They are also JS Objects only right ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c1DekgDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://memegenerator.net/img/instances/54099479.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1DekgDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://memegenerator.net/img/instances/54099479.jpg" alt="obama you are right"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They indeed are but their &lt;code&gt;typeof&lt;/code&gt; is &lt;code&gt;function&lt;/code&gt;. And this particular thing really works for us since we only need to assign these functions as &lt;code&gt;value&lt;/code&gt; to a particular &lt;code&gt;key&lt;/code&gt; and not worry about any nesting which is in the case of &lt;code&gt;{ }&lt;/code&gt; or &lt;code&gt;[ ]&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt; - So this is it right ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt; - Well not quite yet. The above will fail tragically in the case of circular references.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--isB3og1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media2.giphy.com/media/d2ZbrRZxocUzcakM/200.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--isB3og1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media2.giphy.com/media/d2ZbrRZxocUzcakM/200.gif" alt="no failure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P1-AiSMU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://66.media.tumblr.com/aaa2ab7bebab006f26602038121e4b6e/tumblr_o5abkii8SS1tfbtrwo1_400.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P1-AiSMU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://66.media.tumblr.com/aaa2ab7bebab006f26602038121e4b6e/tumblr_o5abkii8SS1tfbtrwo1_400.gif" alt="why tell me why"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt; - Remember how we are recursing whenever the type of &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;object&lt;/code&gt; ? Now consider that after 3 depths of recursion, we arrive at a &lt;code&gt;key&lt;/code&gt; whose &lt;code&gt;value&lt;/code&gt; is again the main &lt;code&gt;obj&lt;/code&gt; i.e. there is a circular reference from a nested &lt;code&gt;key&lt;/code&gt; to the main &lt;code&gt;obj&lt;/code&gt; itself. This will result in an infinite loop of menace !!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xlGljWDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/U2BASTIsaw8WQ/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xlGljWDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/U2BASTIsaw8WQ/giphy.gif" alt="infinity"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt; - Oh damn!!! How would you handle this ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt; - Well let's see what do we have at disposal. We need a mechanism to not recurse over already processed or seen object references. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt; - Cool so let's make a new obj, say , &lt;code&gt;const seen = { }&lt;/code&gt; and use it as a dictionary.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt; - Well we need object references as key and &lt;code&gt;{ }&lt;/code&gt; only takes &lt;strong&gt;strings&lt;/strong&gt; as &lt;strong&gt;keys&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dUogqOfL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.kym-cdn.com/entries/icons/original/000/027/475/Screen_Shot_2018-10-25_at_11.02.15_AM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dUogqOfL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.kym-cdn.com/entries/icons/original/000/027/475/Screen_Shot_2018-10-25_at_11.02.15_AM.png" alt="Pikachu meme face"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt; - We can make use of &lt;code&gt;Map&lt;/code&gt; or &lt;code&gt;Set&lt;/code&gt; here with the latter making more sense. And to take things up a notch, let's make use of &lt;code&gt;WeakSet&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt; - Why &lt;code&gt;WeakSet&lt;/code&gt; ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt; - Because &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet"&gt;MDN&lt;/a&gt; says so !!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Functions that call themselves recursively need a way of guarding against circular data structures by tracking which objects have already been processed. WeakSets are ideal for this purpose.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt; - Alright I am excited for the final code &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jdNvlaBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.giphy.com/media/pUs87dXYIIrTy/source.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jdNvlaBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.giphy.com/media/pUs87dXYIIrTy/source.gif" alt="excited"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MgF-FzoR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gifer.com/fxsc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MgF-FzoR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gifer.com/fxsc.gif" alt="here we go"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;deepCopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;seen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;WeakSet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;logic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;seen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;seen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;newObj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;logic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newObj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;logic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt; - Damn that's quite big now. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deepu&lt;/strong&gt; - Well the flow is still simple. What we now did is initialize a &lt;code&gt;WeakSet&lt;/code&gt; by the name &lt;code&gt;seen&lt;/code&gt; inside &lt;code&gt;deepCopy(...)&lt;/code&gt;. And since we always needed access to &lt;code&gt;seen&lt;/code&gt; while recursing, we extract all our recursion logic inside this &lt;code&gt;logic(...)&lt;/code&gt; function. Also note we have applied the check using &lt;code&gt;seen&lt;/code&gt; for the &lt;code&gt;obj&lt;/code&gt; reference and if it doesn't exist, we add it to &lt;code&gt;seen&lt;/code&gt;. Else, we don't bother performing the &lt;strong&gt;for loop&lt;/strong&gt; logic for it and return the &lt;code&gt;obj&lt;/code&gt; as it is. At the end of &lt;code&gt;deepCopy(...)&lt;/code&gt; function we call &lt;code&gt;logic(obj)&lt;/code&gt; (which will internally recurse as needed) as well as return its result.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shalu&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ynHte-4Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://lifesfinewhine.com/wp-content/uploads/2018/10/graphic-post.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ynHte-4Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://lifesfinewhine.com/wp-content/uploads/2018/10/graphic-post.gif" alt="wow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you everyone who read it till here. This is an implementation that I have tried without referring anything online with the mindset that how will I do this if asked in an interview. Obviously the flow will be the same minus the incredible gifs ðŸ˜‰ and you are free to evaluate me as an interviewer&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus-fancy-reduce-edit"&gt;
  &lt;/a&gt;
  BONUS - Fancy Reduce edit
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;deepCopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;seen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;WeakSet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;logic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;seen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;seen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;newObj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;newObj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;logic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newObj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;logic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>uiweekly</category>
      <category>concepts</category>
    </item>
    <item>
      <title>Coding Boot-camps vs College vs Self Taught</title>
      <author>Ankur Tyagi</author>
      <pubDate>Mon, 14 Jun 2021 19:08:03 +0000</pubDate>
      <link>https://dev.to/tyaga001/coding-boot-camps-vs-college-vs-self-taught-2fdh</link>
      <guid>https://dev.to/tyaga001/coding-boot-camps-vs-college-vs-self-taught-2fdh</guid>
      <description>&lt;h1&gt;
  &lt;a href="#coding-bootcamps-vs-college-vs-self-taught"&gt;
  &lt;/a&gt;
  Coding Bootcamps vs College vs Self Taught
&lt;/h1&gt;

&lt;p&gt;There are many possible paths to a career in software development. &lt;/p&gt;

&lt;p&gt;However, the choice will impact the amount of time you spend studying and the cost of your education. &lt;/p&gt;

&lt;p&gt;It is worth spending some time deciding which one is right for you.&lt;/p&gt;

&lt;p&gt;These days, you can define three different primary paths from a starting point to a career in development.&lt;/p&gt;

&lt;p&gt;They are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coding Bootcamps.&lt;/li&gt;
&lt;li&gt;Self-Taught.&lt;/li&gt;
&lt;li&gt;College. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With these three paths open to you, youâ€™re left with a decision: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Which one should you pursue?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Coding bootcamps offer a range of courses where students can learn the skills they need through a comprehensive curriculum in a shortened period of time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#coding-boot-camps-usually-run-for-several-weeks-although-there-are-boot-camps-that-can-run-for-a-year"&gt;
  &lt;/a&gt;
  Coding boot camps usually run for several weeks, although there are boot camps that can run for a year.
&lt;/h3&gt;

&lt;p&gt;There is one advantage that boot camps offer that universities are still working towards catching up.&lt;/p&gt;

&lt;p&gt;Pretty much every single popular coding boot camp currently active has a major focus on the current trending technologies, &lt;/p&gt;

&lt;p&gt;Such as React, Vue, MongoDB, Express, and the like.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;And some boot camp offers 1 on 1 mentorship from real programmers that work in the field.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And so students get real-time feedback on relevant topics that are happening.&lt;/p&gt;

&lt;p&gt;And that is one great benefit that universities can not offer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;College is, well, college. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#you-can-earn-a-degree-based-on-a-selected-major-and-complete-its-requirements"&gt;
  &lt;/a&gt;
  You can earn a degree based on a selected major and complete its requirements.
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;I personally attended college and went through a 4-year plan in order to get my degree in Computer Science.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The College curriculum has changed very little during the past decade. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I know because I talk to many programmers all the time, and the ones that are recent graduates are still debating whether C++ or Java is the king of code.&lt;/p&gt;

&lt;p&gt;Ask yourself the following questions, if you are thinking of attending a university program:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What field am I looking to get into after?&lt;/li&gt;
&lt;li&gt;Do I plan to continue with higher education.&lt;/li&gt;
&lt;li&gt;Do I want to teach at some point?&lt;/li&gt;
&lt;li&gt;Do companies that I want to work for require a degree?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The programming language you decide on plays a huge role in your future prospects and your ability to progress both beyond your education and in the job market.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For example, JavaScript gives you a good opening into both the front-end and back-end development.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#selftaught-developers-can-learn-any-language-that-interests-them"&gt;
  &lt;/a&gt;
  Self-Taught developers can learn any language that interests them.
&lt;/h3&gt;

&lt;p&gt;Bootcamp developers are slightly more restricted.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;College developers get the most structured and detailed education in their languages.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The rising costs of education are on every studentâ€™s mind these days&lt;/p&gt;

&lt;p&gt;Self-Taught students tend to spend the least amount of money on their educations.&lt;/p&gt;

&lt;p&gt;Bootcamp students generally pay a small fee to purchase courses or enrollment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Colleges are usually the most expensive option.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Self-Taught developers donâ€™t necessarily have a duration to their programs, because their programs last as long as theyâ€™re interested in learning&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;And, to some extent, weâ€™re all self-taught.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pick the right languages &amp;amp; study in the right way, you can be job-ready in under a year.&lt;/p&gt;

&lt;p&gt;Bootcamps tend to last anywhere from a few weeks to a few months. &lt;/p&gt;

&lt;p&gt;Some boot camps are longer and more structured.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;College programs range from two-year degrees to four-year degrees and more.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-right-for-you"&gt;
  &lt;/a&gt;
  What's right for you?
&lt;/h2&gt;

&lt;p&gt;That's the most important question you can ask. &lt;/p&gt;

&lt;p&gt;Because there is no "wrong" answer technically.&lt;/p&gt;

&lt;p&gt;Just like there is no wrong answer between learning to ride a skateboard or a bicycle. &lt;/p&gt;

&lt;p&gt;It depends.&lt;/p&gt;

&lt;p&gt;While in the past companies required degrees from 4-year universities (minimum), there are many more companies these days that have gotten rid of such requirements.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I have seen plenty of boot camp graduates receive offer letters from startups to the biggest tech companies.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you do the work and you bring the skills, there is no reason why the answer would be otherwise.&lt;/p&gt;

&lt;p&gt;Whichever route you choose, you really just have to go all in and embrace whatever it demands of you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The answer to this question remains a personal choice.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading. &lt;/p&gt;

&lt;p&gt;If you like this you might be you are interested in my eBook as well.&lt;/p&gt;

&lt;p&gt;I have recently written a book for developer growth &amp;amp; shared my 11+ years of experience.&lt;/p&gt;

&lt;p&gt;Grab the book now at a discounted price... &lt;a href="https://gumroad.com/l/nextgendev/grow"&gt;ThePrimeGuide&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OtPEzgRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622969340878/j1oDA44p8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OtPEzgRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622969340878/j1oDA44p8.png" alt="book.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;"Don't miss out" Follow your mentor  on Twitter ðŸ‘‰ &lt;a href="https://twitter.com/TheAnkurTyagi"&gt;TheAnkurTyagi&lt;/a&gt; &lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>Top Programming Languages in 2021</title>
      <author>Danish Saleem</author>
      <pubDate>Mon, 14 Jun 2021 18:24:19 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/top-programming-languages-in-2021-1mbd</link>
      <guid>https://dev.to/mrdanishsaleem/top-programming-languages-in-2021-1mbd</guid>
      <description>&lt;h3&gt;
  &lt;a href="#typescript"&gt;
  &lt;/a&gt;
  TypeScript
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt; is a well-known name. Since its release in 2014, it is growing rapidly and maintaining its place in the list of top 10 striking programming languages 2021. It is developed by Microsoft. Well, it has emerged in response to growing dissatisfaction with JavaScript.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rust"&gt;
  &lt;/a&gt;
  Rust
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a multi-paradigm programming language designed for performance and safety, especially safe concurrency While Rust is syntactically similar to C++ one thing that it can guarantee is memory safety by using a borrow checker to validate references.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; is trending nowadays like never before. It is the biggest competitor to JavaScript. Especially because of the rising trend of AI. Most, often, Python is used in Data Science, Machine Learning, Web Development, Computer Science Education, Computer Vision, and Image Processing, Game Development.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.javascript.com/"&gt;JavaScript&lt;/a&gt; is a scripting language that enables you to create dynamically updating content, control multimedia, animate images, and pretty much everything else.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kotlin"&gt;
  &lt;/a&gt;
  Kotlin
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://kotlinlang.org/"&gt;Kotlin&lt;/a&gt; was developed by the Jet Brains team in an attempt to find &lt;strong&gt;&lt;em&gt;something better than Java&lt;/em&gt;.&lt;/strong&gt; Many experts claim that the goal has been achieved. Like Go, Kotlin cannot be called the trendist programming language. But statistics show that demand is growing. The effortless interoperation between Java and Kotlin makes Android development faster and enjoyable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#go"&gt;
  &lt;/a&gt;
  Go
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://golang.org/"&gt;Go&lt;/a&gt; is the least known of all the programming languages, but that doesn't mean it is something you neglect. It was developed by Google in 2007 for APIs and web applications. In the past few years, Go has become one of the fastest-growing programming languages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dart"&gt;
  &lt;/a&gt;
  Dart
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://dart.dev/"&gt;Dart&lt;/a&gt; is a client-optimized programming language for apps on multiple platforms. It was developed by Google and is used to build mobile, desktop, server, and web applications. Dart is an object-oriented, class-based, garbage-collected language with C-style syntax.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ccc"&gt;
  &lt;/a&gt;
  C/C++/C
&lt;/h3&gt;

&lt;p&gt;Yes, these are three different programming languages. But, as we said the main focus is the scope. &lt;a href="https://www.youtube.com/watch?v=KJgsSFOSQv0&amp;amp;ab_channel=freeCodeCamp.org"&gt;C&lt;/a&gt;/&lt;a href="https://www.w3schools.com/cpp/"&gt;C++&lt;/a&gt;/&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/"&gt;C#&lt;/a&gt; are equally often used for game development. Not only in Gaming Industry but Embedded applications such as robotics, Operating systems, drivers, Desktop applications such as graphics suites, desktop word processors, etc. uses this language.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>career</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>1NF and 2NF</title>
      <author>hebaShakeel</author>
      <pubDate>Mon, 14 Jun 2021 18:17:24 +0000</pubDate>
      <link>https://dev.to/hebashakeel/1nf-and-2nf-2dbj</link>
      <guid>https://dev.to/hebashakeel/1nf-and-2nf-2dbj</guid>
      <description>&lt;p&gt;&lt;strong&gt;Normalization&lt;/strong&gt;: It is a way to reduce/minimize data redundancy (repetition of data). It can be achieved by splitting the table into many tables.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First Normal Form (1NF)&lt;/strong&gt;:&lt;br&gt;
-&amp;gt; It is the property of converting ER Diagram into the Relational Database.&lt;br&gt;
-&amp;gt; The Relational Database is implicitly in 1NF.&lt;br&gt;
-&amp;gt; All attributes should be atomic [ only one value in a tuple is allowed].&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DgBXOiJW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xriheeqs7h5usyss8c0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DgBXOiJW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xriheeqs7h5usyss8c0i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Here, SMobile has multiple values which are not allowed. They have to be taken individually.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Approach-1&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yS10TTE5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0eun6yu9pt54uu5aibg2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yS10TTE5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0eun6yu9pt54uu5aibg2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
This approach creates a lot of redundancy in the table. Therefore it is not a suitable approach.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Approach-2&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C33VblB7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkmeqihmwlef8n1ktpq7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C33VblB7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkmeqihmwlef8n1ktpq7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
This approach also has redundancy but less when compared to the previous Approach. This is because the tables have now been split into two.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prime Attributes(Key):&lt;/strong&gt;&lt;br&gt;
Those attributes which participate in the Candidate key.&lt;br&gt;
&lt;strong&gt;Example 1&lt;/strong&gt;&lt;br&gt;
R(ABCD), CKs: {A, BD}&lt;br&gt;
Therefore PA = {A,B,D}&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2&lt;/strong&gt;&lt;br&gt;
R(ABCDEFG), CKs: {AB, BC, CD, F}&lt;br&gt;
Therefore PA = {A,B,C,D,F}&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Non-Prime Attributes(Non-Key):&lt;/strong&gt;&lt;br&gt;
Those attributes which do not participate in Candidate Key.&lt;br&gt;
&lt;strong&gt;Example 1&lt;/strong&gt;&lt;br&gt;
R(ABCD), CKs: {A, BD}&lt;br&gt;
Therefore NPA = {C}&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2&lt;/strong&gt;&lt;br&gt;
R(ABCDEFG), CKs: {AB, BC, CD, F}&lt;br&gt;
Therefore NPA = {E,G}&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Partial Dependency:&lt;/strong&gt;&lt;br&gt;
If subset of any Candidate Key derives a non-key attribute.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
R(ABCD) FDs : {AB-&amp;gt;CD, B-&amp;gt;D}&lt;br&gt;
CK =&amp;gt; {AB}&lt;br&gt;
B-&amp;gt;D, B is a subset of AB and it derives non-key, therefore it is a partial dependency.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Second Normal Form (2NF):&lt;/strong&gt;&lt;br&gt;
=&amp;gt; If a relation 'R' is in &lt;strong&gt;1NF&lt;/strong&gt; (and)&lt;br&gt;
=&amp;gt; If every &lt;strong&gt;non-prime attribute&lt;/strong&gt; is fully dependent on any complete CK (or) No &lt;strong&gt;Partial Dependency&lt;/strong&gt; exists.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Allowed in 2NF:&lt;/strong&gt;&lt;br&gt;
=&amp;gt; Non-Prime determines Non-Prime&lt;br&gt;
=&amp;gt; Non-Prime determines Prime&lt;br&gt;
=&amp;gt; Prime determines Prime&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not-Allowed in 2NF:&lt;/strong&gt;&lt;br&gt;
=&amp;gt; Prime determines Non-Prime&lt;/p&gt;

</description>
      <category>database</category>
      <category>computerscience</category>
    </item>
  </channel>
</rss>
