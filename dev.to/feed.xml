<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>05 Essential Design Resources Sites For Web Designers</title>
      <author>Md Abu Taher</author>
      <pubDate>Mon, 30 Aug 2021 11:54:10 +0000</pubDate>
      <link>https://dev.to/helloabutaher/05-essential-design-resources-sites-for-web-designers-4hjk</link>
      <guid>https://dev.to/helloabutaher/05-essential-design-resources-sites-for-web-designers-4hjk</guid>
      <description>&lt;p&gt;If you are a web designer or you are developing a web project and you want to get a top-notch design, then you will need to get design inspiration from some of the best sites. Here you will find the top 5 design resource sites for web designers.&lt;/p&gt;

&lt;p&gt;Web designing is a challenging task. Web developers need to keep in mind the technical and logical issues while developing a web project. At the same time, developers need to keep the end-user in mind and design a project which is not only informative but also visually appealing.&lt;/p&gt;

&lt;p&gt;If you are always looking for the best design resources for websites, then this collection is something every developer should bookmark. It is a compilation of the best design resources and libraries that can help you in developing an eye-catching and visually appealing project.&lt;/p&gt;

&lt;p&gt;Here we are going to share with you the best resources that will take you to the next level of website designing and development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top 05 Best Resources for UI / UX Designers and Developer&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.uihut.com/"&gt;UIHUT&lt;/a&gt;- 12000 Exclusive Design Resources&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Explore 12,000+ Exclusive Design Resources Download thousands of templates, illustrations, icons, and graphic assets for web and mobile app design without paying designer prices .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Significant advantages of UIHUT&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;1000+ web Templates UI&lt;br&gt;
2500+ Illustration&lt;br&gt;
7000+ Icons&lt;br&gt;
500+ Mobile Screen UI&lt;br&gt;
100+ Web App UI&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zippypixels.com/"&gt;ZippyPixels&lt;/a&gt;–Best Mockups Template&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zippypixels.com/"&gt;ZippyPixels&lt;/a&gt;is a one-stop-shop for professional pixel art and graphic design resources. The website boasts an enormous library of free and premium design assets from mockups, print designs, web graphics, icons and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Significant advantages of ZippyPixels&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;BUNDLES&lt;br&gt;
MOCKUPS &lt;br&gt;
PRINT &lt;br&gt;
GRAPHICS &lt;br&gt;
WEB &lt;br&gt;
MOBILE &lt;br&gt;
FREEBIES&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pixelbuddha.net/"&gt;PixelBuddah &lt;/a&gt;–EXCLUSIVE DESIGN RESOURCES:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pixelbuddha.net/"&gt;PixelBuddah &lt;/a&gt;is a designer’s holy grail of graphics. Here, you’ll find everything from crisp icon sets to classic design packages to modern UI templates and even full web software libraries. There’s no end to what you can do with Pixelbuddah behind you – your hard work will be sure to pay off by making your clients (and impress the heck out of everyone else too).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Significant advantages of Pixelbuddah&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;beautiful UI templates &lt;br&gt;
web design tool-kits&lt;br&gt;
icon sets&lt;br&gt;
graphics&lt;br&gt;
Mockups&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medialoot.com/"&gt;MediaLoot&lt;/a&gt; -Graphic Design Resources for all&lt;/p&gt;

&lt;p&gt;Marvelously well-designed, ridiculously cheap and competitively priced, the graphic products at MediaLoot should be considered by any designer or photography enthusiast who intends to create a lookbook of her own. Whether you’re interested in creating mockups, presenting a photoshoot collection, or showing off your latest design work on Dribbble, the shop offers lots of free downloads for personal use. If you are planning to use this resource in a commercial project, though, it’s important that you make a purchase first because it will serve as your permission slip to let others know that we gave you permission to use these images.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Significant advantages of MediaLoot&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Thousands of fonts&lt;br&gt;
icons&lt;br&gt;
Graphics&lt;br&gt;
templates&lt;br&gt;
interfaces, and mores&lt;/p&gt;

&lt;p&gt;&lt;a href="https://graphicriver.net/"&gt;GraphicsRiver&lt;/a&gt;&lt;br&gt;
-Discover 914,427 fonts, logos &amp;amp; presentations&lt;br&gt;
Unsurprisingly, &lt;/p&gt;

&lt;p&gt;GraphicRiver is an Envato-owned market, which specializes in the distribution of digital resources. By specializing in all things raster and vector graphics, this online marketplace has successfully built a large following of designers who are frequently returning to purchase new and up-to-date products. &lt;/p&gt;

&lt;p&gt;As a leader within its industry, GraphicRiver can provide potential customers with an ample amount of options to choose from when they are out purchasing their digital designs!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Significant advantages of GraphicRiver&lt;/strong&gt; :&lt;/p&gt;

&lt;p&gt;Web Themes &amp;amp; Templates&lt;br&gt;
Code&lt;br&gt;
Video&lt;br&gt;
Audio&lt;br&gt;
Graphics&lt;br&gt;
Photos&lt;br&gt;
3D Files&lt;br&gt;
Conclusion:&lt;/p&gt;

&lt;p&gt;Designers are always on the lookout for the best UI Graphics resources and resources to develop an amazing UI. That is what we have tried to provide here. To save your time, we have listed the best resources that are available on the internet. The resources are free for both commercial and personal use.&lt;/p&gt;

&lt;p&gt;We hope you found this post useful when looking for resources to makeover your project. By using this post you can makeover your project by giving it an awesome look. If you have any other questions or concerns about any resources mentioned in this post, please contact us anytime at  UIHUT.&lt;/p&gt;

&lt;p&gt;Thank you for reading, we are always excited when one of our posts is able to provide useful information on a topic like this!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Week Wise Data Structures and Algorithms Schedule for Placements. (Part-2) </title>
      <author>saksham garg</author>
      <pubDate>Mon, 30 Aug 2021 11:46:00 +0000</pubDate>
      <link>https://dev.to/sakshamceo/week-wise-data-structures-and-algorithms-schedule-for-placements-part-2-1i0d</link>
      <guid>https://dev.to/sakshamceo/week-wise-data-structures-and-algorithms-schedule-for-placements-part-2-1i0d</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the part-2.&lt;br&gt;
For Part-1- You can visit below.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/sakshamceo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MmDIdBSL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--yGL8TQcP--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/502876/8fdf72c1-1361-4932-a42a-5b5eddf07061.jpeg" alt="sakshamceo"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sakshamceo/complete-data-structures-and-algorithms-roadmap-for-placements-part-1-551b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Complete Data Structures and Algorithms Roadmap for Placements (Part-1)&lt;/h2&gt;
      &lt;h3&gt;saksham garg ・ Aug 29 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dsa&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#datastructure&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#interview&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h4&gt;
  &lt;a href="#there-are-different-strategies"&gt;
  &lt;/a&gt;
  There are Different strategies
&lt;/h4&gt;

&lt;p&gt;1) Either you can Finish the entire syllabus once and then move to detailed practice questions. On &lt;a href="https://leetcode.com/"&gt;Leetcode&lt;/a&gt; and &lt;a href="https://a2oj.herokuapp.com/"&gt;A2OJ&lt;/a&gt;. Side by side sharpen your DSA skills by giving &lt;strong&gt;Short contests&lt;/strong&gt; on &lt;em&gt;Codeforces&lt;/em&gt; and &lt;strong&gt;Long Contests&lt;/strong&gt; on &lt;em&gt;Codechef&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;2) Or you can got to &lt;a href="https://www.codechef.com/LEARNDSA/?itm_medium=navmenu&amp;amp;itm_campaign=learndsa"&gt;Codechef DSA Learning Series&lt;/a&gt; and my favorite &lt;a href="https://a2oj.herokuapp.com/"&gt;A2OJ&lt;/a&gt;. Pick Questions topic wise and try solving. You will come across new concepts at every new question and then you can learn them as well.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#week-wise-study-plan"&gt;
  &lt;/a&gt;
  Week wise Study Plan
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Week 1&lt;/strong&gt;&lt;br&gt;
Basic Maths + Practise Questions&lt;br&gt;
Array Introduction and Operations&lt;br&gt;
STL (very very imp)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Week 2&lt;/strong&gt;&lt;br&gt;
Array Practise Questions&lt;br&gt;
Sorting Algorithms + Practise Questions&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Week 3&lt;/strong&gt;&lt;br&gt;
Matrix/Strings + Practise Questions &lt;br&gt;
Basic Bit Manipulation + Practise Questions&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Week 4&lt;/strong&gt;&lt;br&gt;
Hashing + Practise Questions &lt;br&gt;
Linked List Introduction and Operations&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Week 5&lt;/strong&gt;&lt;br&gt;
Linked List Practise Questions &lt;br&gt;
Stack Introduction and Operations&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Week 6&lt;/strong&gt;&lt;br&gt;
Stack Practise Questions&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Week 7&lt;/strong&gt;&lt;br&gt;
Queue Introduction and Operations&lt;br&gt;
Queue Practise Questions &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Week 8&lt;/strong&gt;&lt;br&gt;
Tree Introduction and Operations&lt;br&gt;
Tree Practise Questions &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Week 9-10&lt;/strong&gt;&lt;br&gt;
Heap/Graph Introduction and Operations&lt;br&gt;
Heap/Graph Practise Questions&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Week 11&lt;/strong&gt;&lt;br&gt;
REVISE TREES,GRAPHS, STACKS QUEUES&lt;br&gt;
Recursion + Practice Question&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Week 12-14&lt;/strong&gt;&lt;br&gt;
Greedy Algorithm Introduction and Implementation&lt;br&gt;
Greedy Algorithm Practise Questions &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Week 15-17&lt;/strong&gt;&lt;br&gt;
BackTracking/Dynamic Programming Introduction and Implementation, BackTracking/Dynamic Programming Practise Questions&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#for-programing-practice-question-love-babbars-dsa-450-questions-are-sufficient-do-34-easy-questions-and-1-tough-question-at-bare-minimum-per-day-from-each-topic"&gt;
  &lt;/a&gt;
  For Programing Practice Question -&lt;a href="https://drive.google.com/file/d/1FMdN_OCfOI0iAeDlqswCiC2DZzD4nPsb/view"&gt;Love Babbar's DSA 450 questions&lt;/a&gt; are sufficient. &lt;em&gt;Do 3-4 Easy Questions and 1 Tough Question&lt;/em&gt; (At bare minimum) &lt;em&gt;per day&lt;/em&gt; from &lt;em&gt;each Topic&lt;/em&gt;
&lt;/h4&gt;

&lt;p&gt;❤️ &lt;em&gt;Like and Follow&lt;/em&gt; &lt;/p&gt;

</description>
      <category>datastructure</category>
      <category>programming</category>
      <category>dsa</category>
      <category>python</category>
    </item>
    <item>
      <title>SQL Injection 101</title>
      <author>prosperyong</author>
      <pubDate>Mon, 30 Aug 2021 11:18:32 +0000</pubDate>
      <link>https://dev.to/yongdev/sql-injection-101-1cc8</link>
      <guid>https://dev.to/yongdev/sql-injection-101-1cc8</guid>
      <description>&lt;p&gt;Security flaws such as SQL injection allow an attacker to meddle with a database query. It allows an attacker to access data that they would not usually be able to. Data belonging to other users, or any other data that the programme itself has access to, may be included in this. As a result, the application's content or behaviour can be permanently altered by an attacker in many instances.&lt;/p&gt;

&lt;p&gt;Sometimes, an attacker can use a denial-of-service attack in conjunction with a SQL injection attack to compromise a server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sql-injection-what-is-it"&gt;
  &lt;/a&gt;
  SQL Injection - What is It?
&lt;/h2&gt;

&lt;p&gt;SQL Injection (Sqli) is a sort of injection attack that allows malicious SQL queries to be executed. These statements are used to operate a database server that is hidden behind a web app. By exploiting SQL Injection vulnerabilities, attackers are able to circumvent application security controls. SQL Injection is a technique that allows hackers to add, edit, or remove entries in a database by bypassing the authentication and permission of a web page or online application.&lt;br&gt;
Any website or online application that uses a SQL database, such as  Oracle, SQL Server,MySQL, or others, may be vulnerable to the SQL Injection vulnerability. Cybercriminals may use it to obtain illegal access to your sensitive data, including your customer information, personal information, and more, Security experts consider SQL Injection attacks to be one of the web's oldest, most common, and most serious weaknesses. Injections are the number one danger to online application security, according to the OWASP organisation &lt;a href="https://owasp.org/www-project-top-ten/"&gt;(Open Web Application Security Project)&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#an-sql-injection-attack-how-it-works-and-why-it-is"&gt;
  &lt;/a&gt;
  An SQL Injection Attack: How It Works and Why it Is
&lt;/h2&gt;

&lt;p&gt;An attacker must first discover immune - compromised user inputs on a web page or web application in order to launch a SQL Injection attack against them. Such user input is used directly in a SQL query on a web page or web application that contains a SQL Injection vulnerability. The attacker has the ability to produce input material and modify it. Malicious payloads are commonly used to describe this type of material. As soon as the attacker delivers this material to the database, malicious SQL instructions are performed.&lt;/p&gt;

&lt;p&gt;In relational databases, SQL is the query language of choice. Access, change and delete data is possible with it. As a result, SQL databases are used by many online apps and websites to store all the data. Additionally, you can utilise SQL commands to perform operating-system commands in specific situations. SQL Injection attacks can have significant repercussions if they succeed.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is possible for hackers to discover other users' passwords by using SQL Injections on the database. Then, they can pose as these users and get access to their accounts. Alternatively, the impersonated user may be an administrator of a database with full access capabilities.&lt;/li&gt;
&lt;li&gt;SQL allows you to retrieve and produce data from a database using a query language. Unpatched SQL Injection flaws might enable a hacker access to all of the information contained within an organization's database server.&lt;/li&gt;
&lt;li&gt;Some database servers allow you to connect to the operating system through the database server itself. This might be deliberate or unintentional. SQL Injection might be used in such a scenario to attack the internal network behind a firewall.&lt;/li&gt;
&lt;li&gt;SQL also allows you to add and edit data in a database. Example: An attacker might use SQL Injection in a banking software to manipulate balances and move money to their account.&lt;/li&gt;
&lt;li&gt;As well as deleting entries, you can also drop tables using SQL. In spite of database backups, loss of data might impair app availability until backups are restored, assuming they are made. In addition, backups may not include the most current data, which might be problematic.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These attacks can be classified as in-band (using database faults or UNION commands), blind, and out-of-band (using a remote server). Please see the following articles for further information about them: &lt;a href="https://owasp.org/www-community/attacks/SQL_Injection"&gt;SQL Injections&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#an-example-of-sql-injection"&gt;
  &lt;/a&gt;
  An Example of SQL Injection
&lt;/h2&gt;

&lt;p&gt;To begin, let's look at a basic example. An attacker can circumvent application security by exploiting a SQL Injection vulnerability to authenticate as the administrator.&lt;/p&gt;

&lt;p&gt;A web server executes the following pseudocode. Authentication with a username and password is demonstrated in this example. Username and password are stored in a table named users in the sample database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Define POST variables
user = $_POST['username'];
pass = $_POST['password'];

# SQL query vulnerable to SQLi
sql = “SELECT id FROM users WHERE username=’” + user + “’ AND password=’” + pass + “’”

# Execute the SQL statement
database.execute(sql)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;SQL Injection is possible in these input fields. An attacker might utilise SQL instructions in the input to change the SQL statement that the database server executes. They could, for example, use a single quote technique to change the pass field to:&lt;code&gt;badguy' OR 1=1&lt;/code&gt;&lt;br&gt;
So, the database server executes this SQL query:&lt;br&gt;
&lt;code&gt;SELECT id FROM users WHERE username='username' AND password='password' OR 1=1'&lt;/code&gt;&lt;br&gt;
The &lt;code&gt;WHERE&lt;/code&gt; clause returns the first id from the users table  regardless what the &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; are because of the &lt;code&gt;OR 1=1&lt;/code&gt;statement. The administrator is frequently the initial user &lt;code&gt;id&lt;/code&gt; in a database. The attacker not only gets administrator access but also bypasses authentication.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-prevent-an-sql-injection"&gt;
  &lt;/a&gt;
  How to Prevent an SQL Injection
&lt;/h2&gt;

&lt;p&gt;SQL Injection issues can be difficult to prevent. SQLi vulnerability subtypes, SQL database engines, and programming languages all have different protection methods. If you want to make your online application safe, there are a few broad strategic guidelines to follow.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-1-train-yourself-and-stay-mindful"&gt;
  &lt;/a&gt;
  Step 1: Train yourself and stay mindful
&lt;/h4&gt;

&lt;p&gt;If you want to make your online application safe, everyone engaged in creating it has to know about SQL Injections. All your developers, QA personnel, DevOps, and SysAdmins should receive appropriate security training. You might start by directing them to this &lt;a href="https://owasp.org"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2-dont-rely-on-any-input-from-the-user"&gt;
  &lt;/a&gt;
  Step 2: Don't rely on any input from the user.
&lt;/h4&gt;

&lt;p&gt;You should consider all user input to be suspect. As long as a user input is utilised in a SQL query, there is a possibility of SQL Injection occurring. Use the same approach when dealing with input from authorised and/or internal users.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-3take-advantage-of-the-newest-technology"&gt;
  &lt;/a&gt;
  Step 3:Take advantage of the newest technology.
&lt;/h4&gt;

&lt;p&gt;There's no SQLi security in older web development tools. Ensure that you're using the newest version of the development environment and language, as well as the latest technology associated with those environments/languages Use PDO instead of MySQLi, for example, in PHP.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-4-using-whitelists-instead-of-blacklists"&gt;
  &lt;/a&gt;
  Step 4: Using whitelists instead of blacklists.
&lt;/h4&gt;

&lt;p&gt;The usage of blacklists should not be used to censor the input of users. A smart attacker will almost always find a method to get around your blacklist. Whenever feasible, only employ tight whitelists to validate and restrict user inputs.&lt;br&gt;
Step 5: Scan on a frequent basis.&lt;br&gt;
It is possible for your developers to add SQL Injections, or for other libraries/modules/software to do so. A web vulnerability scanner should be used to check your online applications on a regular basis.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-6-verify-your-methods"&gt;
  &lt;/a&gt;
  Step 6: Verify your methods.
&lt;/h4&gt;

&lt;p&gt;Don't try to create SQLi protection from the ground up. Almost all of today's programming tools have techniques for protecting against SQLi. Such techniques should be used instead of attempting to try something new from scratch Use structured query language, for example, or stored procedures.&lt;/p&gt;

</description>
      <category>sql</category>
      <category>security</category>
      <category>php</category>
      <category>server</category>
    </item>
    <item>
      <title>📖 Go Fiber by Examples: Testing the application</title>
      <author>Vic Shóstak</author>
      <pubDate>Mon, 30 Aug 2021 11:10:55 +0000</pubDate>
      <link>https://dev.to/koddr/go-fiber-by-examples-testing-the-application-1ldf</link>
      <guid>https://dev.to/koddr/go-fiber-by-examples-testing-the-application-1ldf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hey, DEV friends! 👋 &lt;/p&gt;

&lt;p&gt;Today I'm going to share with you another chapter from my canceled book &lt;strong&gt;Easy Development with GoFiber&lt;/strong&gt; (I talked about it in the &lt;a href="https://dev.to/koddr/go-fiber-by-examples-how-can-the-fiber-web-framework-be-useful-487a"&gt;first article&lt;/a&gt; of this series). Actually, this chapter was supposed to be in the practical part of the book (&lt;em&gt;the article series&lt;/em&gt;), but I purposely pulled it out as the third chapter.&lt;/p&gt;

&lt;p&gt;I think application testing is just as important in understanding how the web framework works under the hood. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#plan-for-the-chapter-3"&gt;
  &lt;/a&gt;
  Plan for the Chapter 3
&lt;/h2&gt;

&lt;p&gt;In this third article (or chapter), we will review the topic of the &lt;a href="https://github.com/gofiber/fiber"&gt;Fiber&lt;/a&gt; application testing for beginners on real example. &lt;/p&gt;

&lt;p&gt;And we’re going to cover the following 👇&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  📝 Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#reasons-for-testing"&gt;Reasons for testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-does-the-test-function-include"&gt;What does the test function include?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#creating-a-test-function"&gt;Creating a test function&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#tip-for-vs-code-users"&gt;Tip for VS Code users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#test-code-and-detailed-description"&gt;Test code and detailed description&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reasons-for-testing"&gt;
  &lt;/a&gt;
  Reasons for testing
&lt;/h2&gt;

&lt;p&gt;Testing written code is a very useful and needed skill, so we will start this article with a review of the &lt;strong&gt;Fiber&lt;/strong&gt; application testing process. &lt;/p&gt;

&lt;p&gt;We will use both the features built into the language and the framework for testing and some third-party tools. For example, the very popular &lt;strong&gt;Go&lt;/strong&gt; testing package &lt;a href="https://github.com/stretchr/testify"&gt;Testify&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;☝️ &lt;strong&gt;Note:&lt;/strong&gt; Don't worry if you've never written unit-tests in your &lt;strong&gt;Go&lt;/strong&gt; applications, because it's a very easy process to understand!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-the-test-function-include"&gt;
  &lt;/a&gt;
  What does the test function include?
&lt;/h2&gt;

&lt;p&gt;The test function is very similar to the usual &lt;strong&gt;Go&lt;/strong&gt; function, but has only the purpose of checking the incoming conditions on strictly defined test cases. To avoid confusion between them, always add the &lt;code&gt;_test&lt;/code&gt; suffix to the name of the test file, and begin the name of the test function itself with the word Test.&lt;/p&gt;

&lt;p&gt;For example, if we need to cover the &lt;code&gt;SomeFuncToExample&lt;/code&gt; function, which is in the &lt;code&gt;example.go&lt;/code&gt; file, we need to create a new file named &lt;code&gt;example_text.go&lt;/code&gt;, in which we need to place a test function named &lt;code&gt;TestSomeFuncToExample(t *testing.T)&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;☝️ &lt;strong&gt;Note:&lt;/strong&gt; Also, note that the test file must be inside the same &lt;strong&gt;Go&lt;/strong&gt; package as the function to be tested.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Typically, each test function contains:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A structure that describes the incoming conditions.&lt;/li&gt;
&lt;li&gt;A collection of test cases, according to the structure.&lt;/li&gt;
&lt;li&gt;A test instance of an application with some simple state.&lt;/li&gt;
&lt;li&gt;A loop with test logic inside, to do an enumeration of test cases.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-test-function"&gt;
  &lt;/a&gt;
  Creating a test function
&lt;/h2&gt;

&lt;p&gt;Now, let's look at an example of such a test function on a very simple example: we're going to check one of the application paths for what HTTP methods it gives back.&lt;/p&gt;

&lt;p&gt;If it gives a status of HTTP 200 OK, then this test case will be successful (&lt;em&gt;PASS&lt;/em&gt;). In the case, if it will give a status of HTTP 404 Not Found, then it will fail. But we will be ready for this error.&lt;/p&gt;

&lt;p&gt;Such a test case is needed to test our target function not only for a positive scenario, but also for a negative (&lt;em&gt;FAIL&lt;/em&gt;) scenario, which may also occur as a result of using the application in the future.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-for-vs-code-users"&gt;
  &lt;/a&gt;
  Tip for VS Code users
&lt;/h3&gt;

&lt;p&gt;If you write code in &lt;a href="https://code.visualstudio.com/"&gt;VS Code&lt;/a&gt; with the &lt;a href="https://code.visualstudio.com/docs/languages/go"&gt;Go tools&lt;/a&gt; plugin (like me 😋), it has a built-in generator for unit-tests that generates a starting template for testing a particular function:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1KbGngOE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgxyqsclrg9vbd84dfsx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1KbGngOE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgxyqsclrg9vbd84dfsx.png" alt="VS Code unit-test"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click them and a template like this will be created:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_RSZavcO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/languages/go/completion-signature-help.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_RSZavcO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/languages/go/completion-signature-help.gif" alt="VS Code Go tools demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-code-and-detailed-description"&gt;
  &lt;/a&gt;
  Test code and detailed description
&lt;/h3&gt;

&lt;p&gt;OK! Let's write our first unit-test. As always, please follow the comments in the code, it will help you understand what is going on in each of the lines.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="c"&gt;// ./go/testing.go&lt;/span&gt;

&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;routes&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="s"&gt;"net/http/httptest"&lt;/span&gt;
  &lt;span class="s"&gt;"testing"&lt;/span&gt;

  &lt;span class="s"&gt;"github.com/gofiber/fiber/v2"&lt;/span&gt;
  &lt;span class="s"&gt;"github.com/stretchr/testify/assert"&lt;/span&gt; &lt;span class="c"&gt;// add Testify package&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;TestHelloRoute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;// Define a structure for specifying input and output data&lt;/span&gt;
  &lt;span class="c"&gt;// of a single test case&lt;/span&gt;
  &lt;span class="n"&gt;tests&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;description&lt;/span&gt;  &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="c"&gt;// description of the test case&lt;/span&gt;
    &lt;span class="n"&gt;route&lt;/span&gt;        &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="c"&gt;// route path to test&lt;/span&gt;
    &lt;span class="n"&gt;expectedCode&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;    &lt;span class="c"&gt;// expected HTTP status code&lt;/span&gt;
  &lt;span class="p"&gt;}{&lt;/span&gt;
    &lt;span class="c"&gt;// First test case&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="s"&gt;"get HTTP status 200"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="s"&gt;"/hello"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;expectedCode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="c"&gt;// Second test case&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="s"&gt;"get HTTP status 404, when route is not exists"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="s"&gt;"/not-found"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;expectedCode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;404&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c"&gt;// Define Fiber app.&lt;/span&gt;
  &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;fiber&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;New&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="c"&gt;// Create route with GET method for test&lt;/span&gt;
  &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/hello"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fiber&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Return simple string as response&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SendString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, World!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="c"&gt;// Iterate through test single test cases&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;tests&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;// Create a new http request with the route from the test case&lt;/span&gt;
    &lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;httptest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;// Perform the request plain with the app,&lt;/span&gt;
    &lt;span class="c"&gt;// the second argument is a request latency&lt;/span&gt;
    &lt;span class="c"&gt;// (set to -1 for no latency)&lt;/span&gt;
    &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;// Verify, if the status code is as expected&lt;/span&gt;
    &lt;span class="n"&gt;assert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Equalf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expectedCode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusCode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alright, now let's go into more detail only about the logic of the test function, which is in the for loop. The other parts of the test function should already be familiar to you from other sections of this article.&lt;/p&gt;

&lt;p&gt;So, at the very beginning of the loop, using the standard &lt;strong&gt;Go&lt;/strong&gt; package called &lt;a href="https://pkg.go.dev/net/http/httptest"&gt;httptest&lt;/a&gt;, we create a new HTTP request with the GET method to be sent to the routing address from the test case.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;☝️ &lt;strong&gt;Note:&lt;/strong&gt; It's the following line: &lt;code&gt;resp, _ := app.Test(req, 1)&lt;/code&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This passes the newly created HTTP request to the Test function built into the &lt;strong&gt;Fiber&lt;/strong&gt; web framework, which we looked at earlier in this article. This is required so that the application instance can process the request.&lt;/p&gt;

&lt;p&gt;The next step is to compare two HTTP statuses: the one obtained from the request and the one we specified in the test case. Here we first encounter the most frequently used function &lt;code&gt;assert.Equalf&lt;/code&gt; from the &lt;strong&gt;Testify&lt;/strong&gt; package, the purpose of which is simply to compare two values. If the values match completely, the test will be considered passed.&lt;/p&gt;

&lt;p&gt;Running this test with the command &lt;code&gt;go test -v ./...&lt;/code&gt;, we will see that test was successful:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;=== RUN   TestHelloRoute
--- PASS: TestHelloRoute (0.00s)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Congratulations! 🎉 We just wrote a unit-test for a function, and it succeeded. Yes, that was just one use case, but trust me, the same thing is waiting in real applications.&lt;/p&gt;

&lt;p&gt;We will see it for ourselves in the next parts of this series.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;We wrote our first test case for the application, using the &lt;code&gt;Test&lt;/code&gt; method and the third-party package called &lt;strong&gt;Testify&lt;/strong&gt;. I truly hope that now it will be much easier for you to write tests for your &lt;strong&gt;Fiber&lt;/strong&gt; (&lt;em&gt;and not only&lt;/em&gt;) web applications!&lt;/p&gt;

&lt;p&gt;In the next article, we will be working with internal and external &lt;strong&gt;Fiber&lt;/strong&gt; middleware, third-party packages and boilerplate.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photos-and-videos-by"&gt;
  &lt;/a&gt;
  Photos and videos by
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Clint McKoy &lt;a href="https://unsplash.com/photos/App9lCSl2uA"&gt;https://unsplash.com/photos/App9lCSl2uA&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Go Team at Google &lt;a href="https://code.visualstudio.com/docs/languages/go"&gt;https://code.visualstudio.com/docs/languages/go&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S.
&lt;/h2&gt;

&lt;p&gt;If you want more articles like this on this blog, then post a comment below and subscribe to me. Thanks! 😘&lt;/p&gt;

</description>
      <category>go</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>testing</category>
    </item>
    <item>
      <title>Best coding practices.</title>
      <author>Aatmaj</author>
      <pubDate>Mon, 30 Aug 2021 10:56:07 +0000</pubDate>
      <link>https://dev.to/aatmaj/best-coding-practices-hoe</link>
      <guid>https://dev.to/aatmaj/best-coding-practices-hoe</guid>
      <description>&lt;h3&gt;
  &lt;a href="#best-coding-practices"&gt;
  &lt;/a&gt;
  Best coding practices.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Always name your variables and functions with the utmost care and explain them thoroughly.&lt;/li&gt;
&lt;li&gt;Keep documentation concise but descriptive.&lt;/li&gt;
&lt;li&gt;The reading time for programs is much more than the writing time. Hence, the code must be such that the reading is easier to do. A little more time spent in making the code lucid goes a long way in saving time later.&lt;/li&gt;
&lt;li&gt;Each function must do only one task but do it well.&lt;/li&gt;
&lt;li&gt;Treat each function as a BlackBox- each function must hide something.&lt;/li&gt;
&lt;li&gt;Keep the connections simple. Avoid global variables wherever possible.&lt;/li&gt;
&lt;li&gt;If you use global variables, document them thoroughly. Not doing so will cause side effects.&lt;/li&gt;
&lt;li&gt;The quality of the test data is more important than its quantity.&lt;/li&gt;
&lt;li&gt;Program testing can show the presence of bugs, but never their absence. You cannot ever guarantee 100% correct code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Adapted from the book &lt;a href="https://www.amazon.in/Data-Structures-Program-Design-2e/dp/8177584235"&gt;Data Structures and Program Design in C&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>React if you use replit</title>
      <author>Timothy Rowell</author>
      <pubDate>Mon, 30 Aug 2021 10:52:18 +0000</pubDate>
      <link>https://dev.to/codeboi/react-if-you-use-repl-it-2k1e</link>
      <guid>https://dev.to/codeboi/react-if-you-use-repl-it-2k1e</guid>
      <description>&lt;p&gt;If you use &lt;a href="https://replit.com/"&gt;repl.it&lt;/a&gt; kindly react with the heart or unicorn. If you don't then react with a comment saying no and explain why you don't. Or suggest any other code editors would be nice.&lt;/p&gt;

</description>
      <category>poll</category>
      <category>debate</category>
      <category>codequality</category>
      <category>replit</category>
    </item>
    <item>
      <title>4 custom react hooks that will make your development easier</title>
      <author>Abdullah Furkan Özbek</author>
      <pubDate>Mon, 30 Aug 2021 10:49:51 +0000</pubDate>
      <link>https://dev.to/afozbek/4-custom-react-hooks-that-will-make-your-development-easier-4gle</link>
      <guid>https://dev.to/afozbek/4-custom-react-hooks-that-will-make-your-development-easier-4gle</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-usetoggle"&gt;
  &lt;/a&gt;
  1. useToggle
&lt;/h2&gt;

&lt;p&gt;Basically, what this hook does is that, it takes a parameter with value true or false and toggles that value to opposite. It's useful when we want to take some action into it's opposite action.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For example;&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;show and hide modal, &lt;/li&gt;
&lt;li&gt;show more/show less text, &lt;/li&gt;
&lt;li&gt;open/close side menu.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Hook&lt;/span&gt;
&lt;span class="c1"&gt;// Parameter is the boolean, with default "false" value&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useToggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Initialize the state&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Define and memorize toggler function in case we pass down the comopnent,&lt;/span&gt;
    &lt;span class="c1"&gt;// This function change the boolean value to it's opposite value&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Usage&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Call the hook which returns, current value and the toggler function&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isTextChanged&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsTextChanged&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useToggle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setIsTextChanged&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isTextChanged&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Toggled&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Click to Toggle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-useonclickoutside"&gt;
  &lt;/a&gt;
  2. useOnClickOutside
&lt;/h2&gt;

&lt;p&gt;This hook allows you to detect clicks outside of a specified element. &lt;/p&gt;

&lt;p&gt;By abstracting this logic out into a hook we can easily use it across all of our components that need this kind of functionality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For Example;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;dropdown menus,&lt;/li&gt;
&lt;li&gt;tooltips,&lt;/li&gt;
&lt;li&gt;modals&lt;/li&gt;
&lt;li&gt;etc..
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Hook&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useOnClickOutside&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Do nothing if clicking ref's element or descendent elements&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mousedown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;touchstart&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mousedown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;touchstart&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Usage&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Create a ref that we add to the element for which we want to detect outside clicks&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;// State for our modal&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isModalOpen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setModalOpen&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// Call hook passing in the ref and a function to call on outside click&lt;/span&gt;
  &lt;span class="nx"&gt;useOnClickOutside&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setModalOpen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isModalOpen&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          👋 Hey, I'm a modal. Click anywhere outside of me to close.
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setModalOpen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Open Modal&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-usesubmit"&gt;
  &lt;/a&gt;
  3. useSubmit
&lt;/h2&gt;

&lt;p&gt;Instead of recreating  loading and form states we can also move that logic inside a hook called useSubmit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Hook&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;submitFunction&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;submitFunction&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;finally&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Usage&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mySubmitFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Timeout Finished&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mySubmitFunction&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Click me&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Loading...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-usemediaquery"&gt;
  &lt;/a&gt;
  4. useMediaQuery
&lt;/h2&gt;

&lt;p&gt;If you want to write css in js or you just want to add some sideEffect to the specific device or breakpoint this hook is for you.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Hook&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useMediaQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;(min-width: 576px)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setMatches&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;media&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matchMedia&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setMatches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setMatches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Usage&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isTablet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMediaQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;(max-width: 1200px)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://usehooks.com/"&gt;useHooks&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://usehooks-typescript.com/"&gt;useHooks(🔥).ts&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.30secondsofcode.org/"&gt;30 seconds of code&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard"&gt;In reactJS, how to copy text to clipboard?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>hooks</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Git Remove Local and Remote Tag : The Final Guide</title>
      <author>ZigRazor</author>
      <pubDate>Mon, 30 Aug 2021 10:27:46 +0000</pubDate>
      <link>https://dev.to/zigrazor/git-remove-local-and-remote-tag-the-final-guide-534n</link>
      <guid>https://dev.to/zigrazor/git-remove-local-and-remote-tag-the-final-guide-534n</guid>
      <description>&lt;p&gt;On &lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt;, &lt;strong&gt;tags&lt;/strong&gt; are often used in order to tag specific commits that may be more important than others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt; may be used in order to bookmark certain events : releases, bug-fixes or just to add an informative and descriptive note to a commit.&lt;/p&gt;

&lt;p&gt;On &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;, tags are often associated with actual product releases for example.&lt;/p&gt;

&lt;p&gt;However, in some cases, you may want to delete Git tags easily locally or remotely.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#delete-a-local-git-tag"&gt;
  &lt;/a&gt;
  Delete a local Git tag
&lt;/h2&gt;

&lt;p&gt;In order to delete a local Git tag, use the &lt;code&gt;git tag&lt;/code&gt; command with the &lt;code&gt;-d&lt;/code&gt; option.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git tag -d &amp;lt;tag_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example, if you wanted to delete a local tag named “v0.1” on your commit list, you would run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git tag -d v0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Deleted tag 'v0.1' (was 88f2a35)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you try to delete a Git tag that does not exist, you will simply be notified that the tag does not exist.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git tag -d v0.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the output will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;error: tag 'v0.2' not found.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to make sure that tags were correctly deleted, simply list your existing tags using the tag command and the &lt;code&gt;-l&lt;/code&gt; option.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git tag -l
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#delete-a-remote-git-tag"&gt;
  &lt;/a&gt;
  Delete a remote Git tag
&lt;/h2&gt;

&lt;p&gt;In order to delete a remote Git tag, use the &lt;code&gt;git push&lt;/code&gt; command with the &lt;code&gt;-–delete&lt;/code&gt; option and specify the tag name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push --delete origin &amp;lt;tagname&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Back to the previous example, if you want to delete the remote Git tag named “v0.1”, you would run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push --delete origin v0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the output will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;To https://github.com/ZigRazor/repo.git
 - [deleted]         v0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To delete a remote Git tag, you can also use the &lt;code&gt;git push&lt;/code&gt; command and specify the tag name using the refs syntax.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin :refs/tags/&amp;lt;tag&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Back to the example, in order to delete a tag named “v0.1”, you would run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin :refs/tags/v0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the output will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;To https://github.com/ZigRazor/repo.git
 - [deleted]         v0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why should we specify the “refs/tags” instead of just specifying the tagname?&lt;/p&gt;

&lt;p&gt;In some cases, your tag may have the same name as your branch.&lt;/p&gt;

&lt;p&gt;If you tried to delete your Git tag without specifying the “refs/tags” you would get the following error&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin :v1.0
error: dst refspec v1.0 matches more than one.
error: failed to push some refs to '&amp;lt;repository&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As a consequence, you need to specify that you are actually trying to delete a Git tag and not a Git repository.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this tutorial, you learnt how you can easily delete a local and a remote Git tag.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;For More "The Final Guide" see the &lt;a href="https://dev.to/zigrazor/the-final-guide-index-4954"&gt;Index Page&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to show which Git branches have changed recently</title>
      <author>Robert Rees</author>
      <pubDate>Mon, 30 Aug 2021 10:19:29 +0000</pubDate>
      <link>https://dev.to/rrees/how-to-show-which-git-branches-have-changed-recently-2g83</link>
      <guid>https://dev.to/rrees/how-to-show-which-git-branches-have-changed-recently-2g83</guid>
      <description>&lt;p&gt;I will admit to some bad working habits, one of them is working on multiple things at the same time rather trying to focus exclusively on one unit of work and completing it before I move on to the next thing. This means that I sometimes have multiple Github branches that I'm working on for a repository. Unfortunately this intersects with another bad habit I have of not cleaning up my local branches frequently. The two combined mean that when I'm slicing between tasks I often find it difficult to find the branch I was working on before I switched tasks.&lt;/p&gt;

&lt;p&gt;Enter Git &lt;a href="https://git-scm.com/docs/git-branch#Documentation/git-branch.txt---sortltkeygt"&gt;sorts&lt;/a&gt; to save me!&lt;/p&gt;

&lt;p&gt;By default Git sorts branches lexically but using the &lt;code&gt;committerdate&lt;/code&gt; sort you instead get the branches from the most recently committed to the last commit date.&lt;/p&gt;

&lt;p&gt;Git sorts can also be reversed by putting the minus sign before the sort name.&lt;/p&gt;

&lt;p&gt;This effectively brings back the branches in the order you last changed them.&lt;/p&gt;

&lt;p&gt;To summarise then:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git branch --sort=-committerdate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Allows you to see which branches you changed most recently in a repository.&lt;/p&gt;

</description>
      <category>git</category>
      <category>workflow</category>
    </item>
    <item>
      <title>How to Serve images in next Gen Formats?</title>
      <author>Syed Saadullah Shah</author>
      <pubDate>Mon, 30 Aug 2021 10:16:19 +0000</pubDate>
      <link>https://dev.to/wpsyed/how-to-serve-images-into-next-gen-formats-p9f</link>
      <guid>https://dev.to/wpsyed/how-to-serve-images-into-next-gen-formats-p9f</guid>
      <description>&lt;p&gt;Google do recommend converting images from png, jpeg to webp formats that’s why serve images in next gen formats suggestion comes in Google page speed insights. If you don’t know how to fix this issue in your worpdress website then stay here. I will go over a little bit about serving images to next gen formats.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    * [What is Webp]
    * [Use webp plugin]
    * [Convert images to webp by using free tools]
    * [ShortPixe]
    * [Imagify]
    * [Optimole]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Webp is the latest gen formats for images like png, jpeg images. Google prefer smaller size of images that you should use on your web pages. To serve your images in webp formats you simply need to use free tools that we are going to cover later.&lt;/p&gt;

&lt;p&gt;Webp images are 26% smaller in size compare to jpeg and png files. On the other hand you can server your high quality images to webp format without losing the quality. This will result in both faster speeds and better PSI reports.&lt;/p&gt;

&lt;p&gt;Average webp file size compare to jpeg and png. img source&lt;br&gt;
Here is an example of both webp and jpeg file images and you can see there is no difference at all however webp file is almost 10% smaller than jpeg.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#use-webp-plugin"&gt;
  &lt;/a&gt;
  Use webp plugin
&lt;/h1&gt;

&lt;p&gt;Using a third party webp plugin will save you some time and increase page load time by making a copy of your original images and making the file size smaller.&lt;/p&gt;

&lt;p&gt;If you are getting this error down to the google page speed insights report:&lt;/p&gt;

&lt;p&gt;Serve images in next gen formats&lt;br&gt;
then you simply need to use some of these free WordPress tools that I have listed down below.&lt;/p&gt;

&lt;p&gt;1.Shortpixel (free/paid)&lt;br&gt;
2.Imagify (free/paid)&lt;br&gt;
3.optimole (free)&lt;br&gt;
4.EWWW Image optimizer (free/paid)&lt;br&gt;
5.Wpsmush (Free/paid)&lt;/p&gt;

&lt;p&gt;The one I recommend for you is webp converter for media. This plugin is super fast and lightweight and less bloated then others. The developer is well skilled and he coded the plugin in his own way.&lt;/p&gt;

&lt;p&gt;Belive me after actiavating this plugin the issue was completely resolved on google page speed insights. I will show you how you can do the same.&lt;/p&gt;

&lt;p&gt;Go Over to WordPress dashboard and Add New Plugin.&lt;/p&gt;

&lt;p&gt;Webp converter for media optimize your images&lt;/p&gt;

&lt;p&gt;After installing and activating the plugin you have to go to setting of this plugin. Now if your server/web host allows htaccess files than it’s fine if does not then you have to select the second option to continue the conversion process.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#webp-converter-for-media-plugin-settings"&gt;
  &lt;/a&gt;
  webp converter for media plugin settings
&lt;/h1&gt;

&lt;p&gt;But via htaccess files method is recommended by default in this plugin. After all go to bottom of the setting and click on force regenerate all images.&lt;/p&gt;

&lt;p&gt;You can also select the quality of your images but, I prefer selecting 85% because it is the perfect for high quality images so you will never lose the quality of your images.&lt;/p&gt;

&lt;p&gt;force convert all images from jpeg to webp&lt;br&gt;
This plugin will create copies of your original images and serve them into next gen formats. Now let me show you how I solved this issue quickly at google page speed insights.&lt;/p&gt;

&lt;p&gt;To convert your images from jpeg to webp files install webp converter for media.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serve-images-in-next-gen-formats"&gt;
  &lt;/a&gt;
  serve images in next gen formats
&lt;/h3&gt;

&lt;h1&gt;
  &lt;a href="#convert-images-to-webp-using-free-online-tools"&gt;
  &lt;/a&gt;
  Convert Images To WebP Using Free Online Tools
&lt;/h1&gt;

&lt;p&gt;if you hate installing third party plugins. Then there are some free tools that you can use to server your iamges in next gen formats. One of my favourite one is CloudConvert’s WebP Converter also a popular choice.&lt;/p&gt;

&lt;p&gt;convert images to next gen formats with cloudconvert webp converter&lt;/p&gt;

&lt;p&gt;&lt;a href="//wpsyed.com"&gt;for more wp speed up guides&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#shortpixel"&gt;
  &lt;/a&gt;
  Shortpixel
&lt;/h1&gt;

&lt;p&gt;Shortpixel is a great plugin and it has more than 300,000+ Active Installations. The plugin allows you to optimize your images and help you to make your website faster by lazy loading your images.&lt;/p&gt;

&lt;p&gt;You can check this option if you want Shortpixel to serve your images in next gen formats.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#imagify"&gt;
  &lt;/a&gt;
  Imagify
&lt;/h1&gt;

&lt;p&gt;Imagify is again by far the best plugin but it is limited. If you have tons of images on your website then you have to buy extra credit from imagify. Otherwise I recommend you to stick around with webp converter for media.&lt;/p&gt;

&lt;p&gt;Imagify has more than 500,000+ Active Installations in WordPress.&lt;/p&gt;

&lt;p&gt;imagify image optimization plugin for wordpress&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#optimole"&gt;
  &lt;/a&gt;
  Optimole
&lt;/h1&gt;

&lt;p&gt;You can replace any image optimization plugin with optimole after installing optimole you have to get an API key to activate it. After that your all images will be compressed and converted to webp or serve scaled from Cloudfront CDN.&lt;/p&gt;

&lt;p&gt;All over this plugin has more than 5 starts rating so you can read more reviews. I don’t comment on this plugin because I don’t personally used it for a while.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;All right wrapping up this tutorial was all about images optimization and serve images in next gen formats which clearly means that it can improve your web page load time if you follow this guide step by step. And google do like fast websites. If you have any question related to speed security and performance then please let me know in the comment box. I will be happy to hear from you guys.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>wordpress</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>Install asdf (ruby, nodejs and yarn) in WSL2</title>
      <author>Michelle Loh</author>
      <pubDate>Mon, 30 Aug 2021 10:03:10 +0000</pubDate>
      <link>https://dev.to/michellelwt/install-asdf-ruby-nodejs-and-yarn-in-wsl2-207o</link>
      <guid>https://dev.to/michellelwt/install-asdf-ruby-nodejs-and-yarn-in-wsl2-207o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-wsl2"&gt;
  &lt;/a&gt;
  What is WSL2
&lt;/h2&gt;

&lt;p&gt;Read &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10"&gt;Microsoft WSL2 Documentation&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-asdf"&gt;
  &lt;/a&gt;
  What is asdf
&lt;/h2&gt;

&lt;p&gt;Read &lt;a href="http://asdf-vm.com/"&gt;asdf virtual manager Documentation&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-wsl2"&gt;
  &lt;/a&gt;
  Install WSL2
&lt;/h2&gt;

&lt;p&gt;Video Reference: &lt;a href="https://www.youtube.com/watch?v=_fntjriRe48&amp;amp;t=704s"&gt;WSL 2: Getting started&lt;/a&gt; (Watch from Overview until PowerShell Commands (0:00 - 8.23))&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-installing-asdf"&gt;
  &lt;/a&gt;
  Before installing asdf
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;In your Ubuntu, type &lt;code&gt;code .&lt;/code&gt; to open up Visual Studio Code (VS Code)&lt;/li&gt;
&lt;li&gt;Open your terminal in VS Code&lt;/li&gt;
&lt;li&gt;In your terminal, it should be in already be Linux not Windows (You are in Windows if you have something like &lt;code&gt;PS C:\Users\&amp;gt;&lt;/code&gt;), go to linux by typing &lt;code&gt;wsl&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ PS C:\Users\&amp;gt;wsl

# Go to root directory
$ &amp;lt;user_name&amp;gt;: cd /
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Do the following to get dependencies for wsl2 (else you might get the error: &lt;code&gt;BUILD FAILED (Ubuntu 20.04 using ruby-build 20210804)&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information related to solving this problem: read &lt;a href="https://discuss.rubyonrails.org/t/installing-rails-on-ubuntu-20-04-showing-build-failed-error/75642/4"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt install autoconf bison build-essential libssl-dev libyaml-dev libreadline-dev zlib1g-dev libncurses-dev libffi-dev libgdbm-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#install-asdf"&gt;
  &lt;/a&gt;
  Install asdf
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Follow the documentation of in &lt;a href="http://asdf-vm.com/"&gt;asdf virtual manager Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo apt install curl git
$ git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;. $HOME/.asdf/asdf.sh&lt;/code&gt; and &lt;code&gt;. $HOME/.asdf/completions/asdf.bash&lt;/code&gt; in the end of &lt;code&gt;.bashrc&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;Call &lt;code&gt;code ~/.bashrc&lt;/code&gt; in your terminal&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#add-plugins"&gt;
  &lt;/a&gt;
  Add plugins
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ asdf plugin add ruby
$ asdf plugin add nodejs
$ asdf plugin add yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#install-language"&gt;
  &lt;/a&gt;
  Install language
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Install ruby, nodejs and yarn latest version (or you can specify the version needed)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ asdf install ruby latest
$ asdf install nodejs latest
$ asdf install yarn latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Check the version installed (the versions mentioned here is the latest version I downloaded)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ asdf list
nodejs
  16.8.0
ruby
  3.0.2
yarn
  1.22.11
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add to your shell
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ asdf shell ruby 3.0.2
$ asdf shell nodejs 16.8.0
$ asdf shell yarn 1.22.11
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add to global
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ asdf global ruby 3.0.2
$ asdf global nodejs 16.8.0
$ asdf shell yarn 1.22.11
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#install-gems"&gt;
  &lt;/a&gt;
  Install gems
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Check where is languages installed
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ $ type -a ruby
ruby is /home/&amp;lt;user&amp;gt;/.asdf/shims/ruby

$ type -a node
node is /home/&amp;lt;user&amp;gt;/.asdf/shims/node

$ type -a yarn
yarn is /home/&amp;lt;user&amp;gt;/.asdf/shims/yarn
yarn is /mnt/c/Program Files (x86)/Yarn/bin/yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Check whic ruby and gems your directory is referring to (in case you have more than ruby installed)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ which ruby
/home/&amp;lt;user&amp;gt;/.asdf/shims/ruby

$ which gem
/home/&amp;lt;user&amp;gt;/.asdf/shims/gem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;If not in &lt;code&gt;.asdf/shims&lt;/code&gt;, do &lt;code&gt;asdf reshim ruby 3.0.2&lt;/code&gt; (specify the version yourself, mine here is 3.0.2)&lt;/li&gt;
&lt;li&gt;Install gems
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ gem install rails
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The rest can follow &lt;a href="https://www.youtube.com/watch?v=Ji2jhj7t0bk&amp;amp;t=317s"&gt;Installing Ruby on Rails Using asdf&lt;/a&gt; (starting 5:24)&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10"&gt;Microsoft WSL2 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://asdf-vm.com/"&gt;asdf virtual manager Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_fntjriRe48&amp;amp;t=704s"&gt;WSL 2: Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discuss.rubyonrails.org/t/installing-rails-on-ubuntu-20-04-showing-build-failed-error/75642/4"&gt;BUILD FAILED (Ubuntu 20.04 using ruby-build 20210804)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=njM3-eejlho"&gt;Installing asdf and using it to install Go, Python &amp;amp; Terraform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Ji2jhj7t0bk&amp;amp;t=317s"&gt;Installing Ruby on Rails Using asdf&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>wsl2</category>
      <category>asdf</category>
      <category>ruby</category>
      <category>node</category>
    </item>
    <item>
      <title>Pull Requests for Dummies</title>
      <author>Adriano Martins</author>
      <pubDate>Mon, 30 Aug 2021 09:48:50 +0000</pubDate>
      <link>https://dev.to/reviewpad/pull-requests-for-dummies-2baj</link>
      <guid>https://dev.to/reviewpad/pull-requests-for-dummies-2baj</guid>
      <description>&lt;p&gt;&lt;em&gt;Debate about code reviews is often dominated by debate about pull requests. The confusion between the two is so common we have made it a point to clarify that they are not the same quite often. So what are pull requests? And why are they called that way?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Imagine you're writing a book.&lt;/p&gt;

&lt;p&gt;(&lt;a href="https://reviewpad.com/blog/series-for-dummies/"&gt;You knew that was coming&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;In this case, you're writing collaboratively. Let's say it's a non-fiction book, or a technical manual. Something that requires a certain degree of responsibility and accuracy.&lt;/p&gt;

&lt;p&gt;You will need to figure out a strategy to make sure there are as few mistakes as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-about-version-control"&gt;
  &lt;/a&gt;
  How about… version control?
&lt;/h2&gt;

&lt;p&gt;If this is a collaborative work, then it stands to reason that you will want to keep your file (let's say a Word document) somewhere everyone can easily find it and work on it. Let's say you keep your manuscript on Dropbox.&lt;/p&gt;

&lt;p&gt;You (or any one of the other authors) are working on a specific chapter, so you download the manuscript that the team is keeping online. You would never edit the manuscript directly, that would be way too risky. You create a temporary version, and label it as such.&lt;/p&gt;

&lt;p&gt;You do your work, write your lines, make sure everything is to your liking, and then what do you do?&lt;/p&gt;

&lt;p&gt;You upload it to the Dropbox, always making sure that it's labeled correctly as a temporary version. Why? Because you would like feedback from your colleagues before &lt;strong&gt;pulling&lt;/strong&gt; everything together (notice our word choice there 🧐).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-a-simple-word-for-asking-for-feedback"&gt;
  &lt;/a&gt;
  What's a simple word for asking for feedback?
&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;review&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Dictionaries are interesting.&lt;/p&gt;

&lt;p&gt;Anyway, your colleagues will then look at your brand new text and they will carefully look over it. They will correct mistakes, leave notes and suggestions, make recommendations, and, of course, if all is well, simply accept it.&lt;/p&gt;

&lt;p&gt;When this is done, and the author of the new chapter is confident he's answered all the queries and fixed all the problems, they can then &lt;strong&gt;request&lt;/strong&gt; whoever is responsible for the manuscript to &lt;strong&gt;pull&lt;/strong&gt; his changed text into the main document.&lt;/p&gt;

&lt;p&gt;And that is what a &lt;strong&gt;pull request&lt;/strong&gt; is.&lt;/p&gt;

&lt;p&gt;When a developer finishes a task, they will start a process to &lt;strong&gt;join the new code to the project&lt;/strong&gt;. For that purpose, they will ask whoever's in charge of the project to &lt;strong&gt;pull&lt;/strong&gt; the changes from their working branch to the main branch. Voilá, a request to pull changes: a pull-request.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-its-not-a-review-but-it-implies-a-review"&gt;
  &lt;/a&gt;
  So it's not a review, but it implies a review?
&lt;/h2&gt;

&lt;p&gt;Most of the time, yes.&lt;/p&gt;

&lt;p&gt;Unless the changes are very trivial, it would be irresponsible to pull changes into the main branch without performing a code review.&lt;/p&gt;

&lt;p&gt;What happens frequently is the opposite: code reviews happen all the time without the need for a pull request.&lt;/p&gt;

&lt;p&gt;A developer might want to review the changes between different states of a project for many different purposes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Auditing the source code is always important;&lt;/li&gt;
&lt;li&gt;Reviewing code without making it visible to everyone else in the project (pull-requests are always visible), for whatever reason;&lt;/li&gt;
&lt;li&gt;Reviewing the code when the project is scattered across many repositories;&lt;/li&gt;
&lt;li&gt;There are even some software development methodologies that don't use pull requests at all! And they still review code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope this helped clear up what pull requests are, and why they are often wrongly mistaken for code reviews. Are there any topics you'd like us to cover next on this series?&lt;/p&gt;

&lt;p&gt;If so, you know where to find us on Twitter (&lt;a href="http://twitter.com/codereviewpad/"&gt;@reviewpad&lt;/a&gt;)!&lt;/p&gt;

</description>
      <category>pullrequest</category>
      <category>git</category>
      <category>explainlikeimfive</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
