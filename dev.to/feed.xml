<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>My bio</title>
      <author>Baboi JÃºnior</author>
      <pubDate>Tue, 05 Oct 2021 18:03:20 +0000</pubDate>
      <link>https://dev.to/homolibero014/my-bio-4b8a</link>
      <guid>https://dev.to/homolibero014/my-bio-4b8a</guid>
      <description>&lt;p&gt;Hello, my name is Baboi and I'm a technology lover.&lt;br&gt;
I'm now working for the justice at Superior Council of Magistracy of the Public Ministry and in my free times I learn new technologies and develop solutions to help the society.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Launching A SonarQube Docker Container</title>
      <author>Shariq</author>
      <pubDate>Tue, 05 Oct 2021 18:02:58 +0000</pubDate>
      <link>https://dev.to/shariq/launching-a-sonarqube-docker-container-2p1</link>
      <guid>https://dev.to/shariq/launching-a-sonarqube-docker-container-2p1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-sonarqube"&gt;
  &lt;/a&gt;
  What Is SonarQube
&lt;/h2&gt;

&lt;p&gt;SonarQube, before 2013 known as Sonar, is a tool for inspecting code quality with static analysis, bug detection, code smells, and security vulnerabilities. It's best to run these scans at build time with your CI/CD tools such as Jenkins or GitLab CI/CD. There are plenty of tools with which SonarQube can integrate seamlessly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-should-i-use-sonarqube"&gt;
  &lt;/a&gt;
  Why Should I Use SonarQube
&lt;/h3&gt;

&lt;p&gt;SonarQube has a few advantages over its alternatives. Namely, it has a long history as it's been continuously developed since 2008 as an open-source tool. Additionally, if you are integrating SonarQube within your CI/CD pipelines, you can automatically stop build and deployments if any of the analyses run don't meet your pre-defined thresholds. It supports over 25 programming languages, including Java, Swift, JavaScript, and C#. The full list can be &lt;a href="https://www.sonarqube.org/features/multi-languages/"&gt;found here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It's basically free automated code review for every single push, merge, and deployment!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-docker"&gt;
  &lt;/a&gt;
  Why Docker
&lt;/h2&gt;

&lt;p&gt;For most use cases, a Docker container running SonarQube will be ample for testing if you want to bring a SAST tool into your main production pipelines. Docker makes it easy to build and destroy images with minimal impact on your systems. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.shariq.dev/blog/docker-series/pt-1-installing-docker-and-docker-compose"&gt;Installing Docker and Docker Compose&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Be sure to have Docker installed and running on your system. See the guide tagged above for help!&lt;/p&gt;

&lt;p&gt;I'll cover the installation steps for a bare minimum test instance and also a more reliable solution that can be torn down and rebuilt with no data loss (well you still can lose data if you wipe the database and volumes).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-instance"&gt;
  &lt;/a&gt;
  Test Instance
&lt;/h3&gt;

&lt;p&gt;To pull the &lt;a href="https://hub.docker.com/_/sonarqube/"&gt;official SonarQube Docker image&lt;/a&gt;, run the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--name&lt;/span&gt; sonarqube &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;SONAR_ES_BOOTSTRAP_CHECKS_DISABLE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-p&lt;/span&gt; 9000:9000 &lt;span class="se"&gt;\&lt;/span&gt;
    sonarqube:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#somewhat-reliable-test-instance"&gt;
  &lt;/a&gt;
  Somewhat Reliable Test Instance
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;You need a running instance of one of the &lt;a href="https://docs.sonarqube.org/latest/requirements/requirements/"&gt;supported databases&lt;/a&gt;. I opted for PostgreSQL.&lt;/li&gt;
&lt;li&gt;Then you'll need to create three new Docker volumes.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker volume create &lt;span class="nt"&gt;--name&lt;/span&gt; sonarqube_data
docker volume create &lt;span class="nt"&gt;--name&lt;/span&gt; sonarqube_logs
docker volume create &lt;span class="nt"&gt;--name&lt;/span&gt; sonarqube_extensions
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now pull the image and bind to the database and volumes.&lt;/p&gt;

&lt;p&gt;If using Oracle will have to install the extension first. Find it &lt;a href="https://www.oracle.com/database/technologies/appdev/jdbc-downloads.html"&gt;here&lt;/a&gt; and move it to the &lt;code&gt;sonarqube_extensions/jdbc-driver/oracle&lt;/code&gt; location]&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--name&lt;/span&gt; sonarqube &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;SONAR_JDBC_URL&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;INSERT JDBC URL&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;SONAR_JDBC_USERNAME&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;INSERT JDBC USERNAME&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;SONAR_JDBC_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;INSERT JDBC PASSWORD&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-v&lt;/span&gt; sonarqube_data:/opt/sonarqube/data &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-v&lt;/span&gt; sonarqube_extensions:/opt/sonarqube/extensions &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-v&lt;/span&gt; sonarqube_logs:/opt/sonarqube/logs &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-p&lt;/span&gt; 9000:9000 &lt;span class="se"&gt;\&lt;/span&gt;
    sonarqube:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't include the curly braces.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#breakdown"&gt;
  &lt;/a&gt;
  Breakdown
&lt;/h3&gt;

&lt;p&gt;I'll dissect each of the Docker commands and flags above if you're new to this.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker&lt;/code&gt; simply invokes the Docker daemon that you have installed.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;run&lt;/code&gt; has three use cases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pull the image from Docker Hub. You can specify other locations from Docker Hub, but that's not for this tutorial.&lt;/li&gt;
&lt;li&gt;Create a container based on the image. Think of the image as a class and the container as an instance of that class i.e. an object.&lt;/li&gt;
&lt;li&gt;Start the container based on the parameters provided as flags to Docker.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;-d&lt;/code&gt; is shorthand for detached. This will keep your terminal on its current instance instead of porting you into a new container's terminal instance.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--name sonarqube&lt;/code&gt; is, well, the name you want to assign the container. If you don't include it, Docker will assign it a random name like jubilant_powerwasher. In this case, it will be sonarqube. Much better.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true&lt;/code&gt; is adding and setting the environment variable &lt;code&gt;SONAR_ES_BOOTSTRAP_CHECKS_DISABLE&lt;/code&gt;. This will disable some checks that a production level SonarQube determines are necessary with its ElasticSearch integration and could otherwise break your build. Generally, these are memory checks to make sure there's enough available for smooth operation. When using an external database, this setting will be ignored. Bootstrap checks will run every time and probably fail your build.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-p 9000:9000&lt;/code&gt; binds the &lt;a href="http://localhost"&gt;localhost&lt;/a&gt;'s port 9000 to the Docker container's port of 9000. The localhost port (the first number) can be changed to any open port you have, but the container port (the second number, after the colon) is pre-determined by whoever created the image. Do not change the second port number.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sonarqube:latest&lt;/code&gt; is the final parameter passed. It tells Docker which image to pull and what version (identified as tags after the colon). In this case, it's pulling the latest version, which at the time of writing this article is &lt;code&gt;9.0.1-community&lt;/code&gt;. You could replace the &lt;code&gt;latest&lt;/code&gt; tag with this explicit version or &lt;code&gt;lts&lt;/code&gt; which is &lt;code&gt;8.9.2-community&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-steps"&gt;
  &lt;/a&gt;
  Final Steps
&lt;/h2&gt;

&lt;p&gt;You can now navigate to &lt;a href="http://localhost:9000"&gt;localhost:9000&lt;/a&gt; in your web browser and be presented with the login screen. The default log-in credentials for SonarQube are username: admin and password: admin.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-note-about-databases"&gt;
  &lt;/a&gt;
  A Note About Databases
&lt;/h3&gt;

&lt;p&gt;SonarQube runs with an embedded H2 instance for its database on initial creation after these specific steps. This is okay for the actual testing of SonarQube but bad in a real-world scenario. Be sure to bind it to a persistent relational database. Support exists for Oracle, Microsoft SQL Server, and PostgreSQL.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#troubleshooting"&gt;
  &lt;/a&gt;
  Troubleshooting
&lt;/h2&gt;

&lt;p&gt;To see the logs for your container, run the following. This section of the document will be updated as I find more errors (or readers tell me about them!)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker logs sonarqube
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bootstrap-checks-failed"&gt;
  &lt;/a&gt;
  Bootstrap checks failed
&lt;/h3&gt;

&lt;p&gt;If you're getting this or a similar error message, follow the below steps.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ERROR: &lt;span class="o"&gt;[&lt;/span&gt;1] bootstrap checks failed. You must address the points described &lt;span class="k"&gt;in &lt;/span&gt;the following &lt;span class="o"&gt;[&lt;/span&gt;1] lines before starting Elasticsearch.
bootstrap check failure &lt;span class="o"&gt;[&lt;/span&gt;1] of &lt;span class="o"&gt;[&lt;/span&gt;1]: max virtual memory areas vm.max_map_count &lt;span class="o"&gt;[&lt;/span&gt;65530] is too low, increase to at least &lt;span class="o"&gt;[&lt;/span&gt;262144]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will need to increase the memory areas available. However, be sure to understand the &lt;a href="https://www.suse.com/support/kb/doc/?id=000016692"&gt;risks associated with doing so&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;vim /etc/sysctl.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the following line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;vm.max_map_count&lt;span class="o"&gt;=&lt;/span&gt;262144
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Source the new settings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;sysctl &lt;span class="nt"&gt;--system&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#everything-docker-is-frozen"&gt;
  &lt;/a&gt;
  Everything Docker is frozen
&lt;/h3&gt;

&lt;p&gt;Restart the Docker daemon. Worst case, restart the machine. With volumes and databases set up, you shouldn't lose any data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;service docker restart
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>docker</category>
      <category>testing</category>
      <category>codequality</category>
      <category>sonar</category>
    </item>
    <item>
      <title>Detasheet: Google Sheets as a Database</title>
      <author>Nathan Pham</author>
      <pubDate>Tue, 05 Oct 2021 18:01:54 +0000</pubDate>
      <link>https://dev.to/phamn23/detasheet-google-sheets-as-a-database-5h08</link>
      <guid>https://dev.to/phamn23/detasheet-google-sheets-as-a-database-5h08</guid>
      <description>&lt;p&gt;Have you ever considered using Google Sheets as a database? You haven't? Well you just did! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-why"&gt;
  &lt;/a&gt;
  The Why
&lt;/h2&gt;

&lt;p&gt;Google Sheets is free, provides a built-in method to visualize data (with charts and graphs), and allows you to export data in a variety of formats. &lt;/p&gt;

&lt;p&gt;Obviously, Google Sheets was never intended to be a database. The API is verbose and would be difficult to reuse across new projects. &lt;/p&gt;

&lt;p&gt;As a result, I created &lt;a href="https://www.npmjs.com/package/detasheet"&gt;Detasheet&lt;/a&gt;! Detasheet is a wrapper around the official Google Sheets API, allowing you to intuitively create and manage databases.&lt;/p&gt;

&lt;p&gt;The documentation is available on &lt;a href="https://github.com/nathan-pham/detasheet"&gt;Github&lt;/a&gt; (give it a star!) or &lt;a href="https://www.npmjs.com/package/detasheet"&gt;NPM&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#it-works"&gt;
  &lt;/a&gt;
  It Works!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i0iVg7Mh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u4jysz15z24c85526xr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i0iVg7Mh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u4jysz15z24c85526xr.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dilfkzDO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0i0qc83rfdf6qcbomoyc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dilfkzDO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0i0qc83rfdf6qcbomoyc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lessons-learned"&gt;
  &lt;/a&gt;
  Lessons Learned
&lt;/h2&gt;

&lt;p&gt;OAuth is an absolute nightmare to deal with. It also doesn't make much sense to request a refresh token when initializing and interacting with the database should be relatively permanent. I opted to create a service account instead, using a private key and client email to authenticate my Google Sheets client. &lt;/p&gt;

&lt;p&gt;After creating the service client, I realized I could read spreadsheets but not write to them. I found out that you could actually share your documents to the service account, which enabled realtime editing. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GsZbFyHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixp0mydioumfcngvha6v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GsZbFyHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixp0mydioumfcngvha6v.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Internally, I tried to use some bleeding-edge object-oriented JavaScript (Node v14+), like real private methods.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;authorize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;authorize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// won't work!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I've also had experience publishing modules to NPM before, so it wasn't that difficult (literally just &lt;code&gt;npm publish --access public&lt;/code&gt;). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Detasheets was definitely an interesting and fun experiment. If you actually build something with it, let me know!&lt;/p&gt;

</description>
      <category>googlecloud</category>
      <category>javascript</category>
      <category>showdev</category>
    </item>
    <item>
      <title>9 questions to ask nontechnical folks before working on a project</title>
      <author>Ryland King ð </author>
      <pubDate>Tue, 05 Oct 2021 17:58:40 +0000</pubDate>
      <link>https://dev.to/rylandking/9-questions-to-ask-nontechnical-folks-before-working-on-a-project-3gf6</link>
      <guid>https://dev.to/rylandking/9-questions-to-ask-nontechnical-folks-before-working-on-a-project-3gf6</guid>
      <description>&lt;h4&gt;
  &lt;a href="#1-whats-your-website-do-today"&gt;
  &lt;/a&gt;
  1/ What's your website do today?
&lt;/h4&gt;

&lt;p&gt;Encourage them to complain about what's frustrating them. Learn their true problems. &lt;/p&gt;

&lt;p&gt;Once done, repeat their problems back to them.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-what-does-your-ideal-website-accomplish"&gt;
  &lt;/a&gt;
  2/ What does your ideal website accomplish?
&lt;/h4&gt;

&lt;p&gt;Wrong Answer: "It gets more customers."&lt;br&gt;
Right Answer: âIt enables us to sell our products to people who live far from our store location.â  &lt;/p&gt;

&lt;p&gt;Learn their ideal end-state. Repeat it back to them. They'll love hearing you understand.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-can-you-tell-me-more-about-x"&gt;
  &lt;/a&gt;
  3/ Can you tell me more about X?
&lt;/h4&gt;

&lt;p&gt;Keep them talking with phrases like:&lt;/p&gt;

&lt;p&gt;What do you mean?&lt;br&gt;
Why is it done that way?&lt;br&gt;
How do you like that? &lt;/p&gt;

&lt;p&gt;Extract as much as possible about their pains, needs, and use-cases.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-whos-responsible-for-design"&gt;
  &lt;/a&gt;
  4/ Who's responsible for design?
&lt;/h4&gt;

&lt;p&gt;Clarify that design is separate from development.  &lt;/p&gt;

&lt;p&gt;Are you responsible for design? Do you have to find the person? Are they giving you a design?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-how-many-different-component-amp-page-layouts"&gt;
  &lt;/a&gt;
  5/ How many different component &amp;amp; page layouts?
&lt;/h4&gt;

&lt;p&gt;Devs are infamously optimistic. &lt;/p&gt;

&lt;p&gt;Use the number of layouts to help estimate your project timeline. &lt;/p&gt;

&lt;p&gt;You should overestimate the time you think it'll take on every project â even double it! You may still be under.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-whos-responsible-for-content"&gt;
  &lt;/a&gt;
  6/ Who's responsible for content?
&lt;/h4&gt;

&lt;p&gt;Content is a beast of its own.&lt;/p&gt;

&lt;p&gt;Make sure it's crystal clear exactly who owns content creation. Add that to your estimates.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#7-what-3rd-party-services-will-we-use"&gt;
  &lt;/a&gt;
  7/ What 3rd party services will we use?
&lt;/h4&gt;

&lt;p&gt;It's likely they won't have an exact answer.&lt;/p&gt;

&lt;p&gt;Audit their existing site, propose services based on their needs, and recommend tech based on what their in-house teams may be using.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#8-how-will-we-communicate-during-the-project"&gt;
  &lt;/a&gt;
  8/ How will we communicate during the project?
&lt;/h4&gt;

&lt;p&gt;Check-in consistently â even if you don't have an update.   &lt;/p&gt;

&lt;p&gt;Simply message them, "No new updates since we chatted last." They will appreciate it and you may get new info from them.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#9-offer-multiple-tiers"&gt;
  &lt;/a&gt;
  9/ Offer multiple tiers.
&lt;/h4&gt;

&lt;p&gt;Offer 3 tiers of solutions from "everything and more" to "just the basics." &lt;/p&gt;

&lt;p&gt;Let them move items around and customize their own tier. This will help you land more deals because you give the client flexibility.&lt;/p&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;If this helped you, let me know by giving the article a like. :-) &lt;/p&gt;

&lt;p&gt;Also, I'm building a website builder for NextJS. If you're interest in testing it out email me at &lt;a href="mailto:ryland@stackbit.com"&gt;ryland@stackbit.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;â¤ï¸ More articles to come!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>Top 7 Featured DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 05 Oct 2021 17:52:14 +0000</pubDate>
      <link>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-1l1d</link>
      <guid>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-1l1d</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#happy-hacktoberfest"&gt;
  &lt;/a&gt;
  Happy Hacktoberfest!
&lt;/h2&gt;

&lt;p&gt;Hacktoberfest is here and this post from &lt;a class="mentioned-user" href="https://dev.to/ayushi7rawat"&gt;@ayushi7rawat&lt;/a&gt;
 is a great primer on what it's all about. We hope all participants have a blast this month! &lt;em&gt;Pro tip; We're celebrating on DEV, too! Learn how to maximize your Hacktoberfest experience in partnership with this community &lt;a href="https://dev.to/devteam/hacktoberfest-2021-is-here-4a3l"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/ayushi7rawat" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NP9DC7xq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--rSq1_0WY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/602187/e7a9f681-495a-4ca8-aa6e-c572f3a99f2a.jpg" alt="ayushi7rawat"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ayushi7rawat/beginner-s-guide-to-hacktoberfest-2021-24d1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Beginner's guide to Hacktoberfest 2021&lt;/h2&gt;
      &lt;h3&gt;Ayushi Rawat  ã» Sep 30 ã» 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#hacktoberfest&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#computerscience&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#mere-semantics-are-crucial"&gt;
  &lt;/a&gt;
  Mere Semantics (... are crucial!)
&lt;/h2&gt;

&lt;p&gt;"A semantically correct HTML tag informs the browser and the developer about its content. It also helps keyboards and assistive technologies to navigate through a website." &lt;/p&gt;

&lt;p&gt;-&lt;a class="mentioned-user" href="https://dev.to/polgarj"&gt;@polgarj&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;I learned a lot from this article and I hope you do, too!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/polgarj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cjWlF5iv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GD42SaIS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/453470/3b14ce30-941e-4f9e-a830-61c342d1e4ba.jpg" alt="polgarj"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/polgarj/a-short-guide-to-help-you-pick-the-correct-html-tag-56l9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A short guide to help you pick the correct HTML tag&lt;/h2&gt;
      &lt;h3&gt;Jozsef Polgar ã» Sep 28 ã» 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#promises-promises"&gt;
  &lt;/a&gt;
  Promises, Promises
&lt;/h2&gt;

&lt;p&gt;A clear and concise explanation of promises and async/await in JavaScript â with a singing analogy ð¤ Thanks, &lt;a class="mentioned-user" href="https://dev.to/santan47"&gt;@santan47&lt;/a&gt;
&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/santan47" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bhefq3ve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--_m2UqHwH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/617037/0ce86226-e5db-45bb-85ab-9e6af265aa63.jpeg" alt="santan47"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/santan47/promise-async-await-in-javascript-mlb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Promise &amp;amp; Async await in JavaScript.&lt;/h2&gt;
      &lt;h3&gt;Santan kr Sharma ã» Sep 29 ã» 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-doppler-effect-securing-and-managing-your-facebook-amp-google-api-keys"&gt;
  &lt;/a&gt;
  The Doppler Effect: Securing and Managing Your Facebook &amp;amp; Google API keys.
&lt;/h2&gt;

&lt;p&gt;Following the widespread Facebook outage this week, proper organization and security of Facebook (and Google!) processes is top of mind. &lt;a class="mentioned-user" href="https://dev.to/zion"&gt;@zion&lt;/a&gt;
 delivers with this tutorial all about using Doppler to manage API keys securely and in a straightforward manner. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/zion" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uW-fD0YW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--raTz_OO2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/629105/b7e4e2fa-ea9a-49b0-97c8-d24f9714c26d.jpg" alt="zion"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/zion/facebook-and-google-authentication-with-node-js-and-doppler-maf" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Facebook and Google Authentication with Node.js and Doppler&lt;/h2&gt;
      &lt;h3&gt;Ekekenta Odioyenfe .C ã» Sep 28 ã» 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#mind-blown"&gt;
  &lt;/a&gt;
  Mind = Blown
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/trekhleb"&gt;@trekhleb&lt;/a&gt;
 shows us how train a car in a simulator to do self-parking using a genetic algorithm â need I say more? So cool.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/trekhleb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_xKZvdeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vEQB6cia--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/75714/b0158eeb-ee34-4382-9afd-ca9f9bede62c.JPG" alt="trekhleb"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/trekhleb/self-parking-car-in-500-lines-of-code-58ea" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Self-Parking Car in &amp;lt;500 Lines of Code&lt;/h2&gt;
      &lt;h3&gt;Oleksii Trekhleb ã» Sep 28 ã» 25 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#what-it-means-to-have-good-commits-and-how-to-accomplish-it"&gt;
  &lt;/a&gt;
  What it Means to Have Good Commits â and How to Accomplish It.
&lt;/h2&gt;

&lt;p&gt;Another super relevant guide for Hacktoberfest! &lt;a class="mentioned-user" href="https://dev.to/mishmanners"&gt;@mishmanners&lt;/a&gt;
 reviews how to make good commits and how good commits make you a great team player in this article&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mishmanners" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Rph_F4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ak56TdXS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/397557/4eb4ece3-2832-407c-b933-f1b4b58829e6.jpg" alt="mishmanners"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mishmanners/how-to-make-a-good-git-commit-1ed7" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to make a good `git commit`&lt;/h2&gt;
      &lt;h3&gt;Michelle Mannering ã» Oct 1 ã» 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#git&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#how-chris-got-the-job"&gt;
  &lt;/a&gt;
  How Chris Got the Job
&lt;/h2&gt;

&lt;p&gt;HUGE congrats to &lt;a class="mentioned-user" href="https://dev.to/dailydevtips1"&gt;@dailydevtips1&lt;/a&gt;
 for landing a job at Daily.dev. Find out how he made it happen in this post. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/dailydevtips1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0-ei4oTN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--edQh_ULI--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/370165/083a25f4-e79b-42c4-9e5f-0332b834ca5e.png" alt="dailydevtips1"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/dailydevtips1/how-i-landed-a-job-at-daily-dev-50ii" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How I landed a job at Daily.dev&lt;/h2&gt;
      &lt;h3&gt;Chris Bongers ã» Oct 1 ã» 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>Unpaid CTO adventures: Getting my fiancee`s business to generating 100k a month.</title>
      <author>Nick DeJesus</author>
      <pubDate>Tue, 05 Oct 2021 17:43:50 +0000</pubDate>
      <link>https://dev.to/dayhaysoos/unpaid-cto-adventures-getting-my-fiancee-s-business-to-generating-100k-a-month-2004</link>
      <guid>https://dev.to/dayhaysoos/unpaid-cto-adventures-getting-my-fiancee-s-business-to-generating-100k-a-month-2004</guid>
      <description>&lt;p&gt;You ever wonder about what people do at the C-level of a company? I did too, and no matter how many times people described it to me or I looked it up, it still never really clicked. That is until my fianceÃ¨, &lt;a href="https://twitter.com/parissAthena"&gt;Pariss&lt;/a&gt;, decided to launch her own business, Black Tech Pipeline (BTP). I've been witnessing her growth as an entrepreneur, Founder, CEO, and overall business woman. I'm extremely proud of how she's been handling it all on this first-time journey. &lt;/p&gt;

&lt;p&gt;One side-effect of Pariss launching her business was me somehow becoming her CTO. It's different from what you might expect for most CTO's. I'm in an unpaid position and held in this role indefinitely. Since this is the case, I've been alongside Pariss in this journey of learning and growing, but on the technical side. Black Tech Pipeline has also become my baby, and I see the great potential it has to become one of the best digital platforms on the internet. With that being said, I have a better understanding of what C-level exec people worry and care about. &lt;/p&gt;

&lt;p&gt;To oversimplify everything: &lt;/p&gt;

&lt;p&gt;CEO's have to make sure that the business can make money and scale.&lt;/p&gt;

&lt;p&gt;CTO's have to help the CEO with their goal, but focus on the tech side of things to make that goal come true.&lt;/p&gt;

&lt;p&gt;These roles can look wildly different for everyone. It really depends on the business itself and what the people running it envision it to become. This is why my take may sound so vague.&lt;/p&gt;

&lt;p&gt;Right now, BTP is doing &lt;em&gt;very&lt;/em&gt; well, but I have a feeling that I can help Pariss grow and scale it into a business that can be generating $100,000 a month. There is a lot of context that needs to be painted for me to get to that part, so let me break down her business and give insight on the things I've had to care about as Unpaid CTO.&lt;/p&gt;

&lt;p&gt;In this blog post, I'm going to break down my fianceÃ©âs business model and talk about how I, Unpaid CTO, plan to alleviate a lot of the work that Pariss has on her shoulders, while also helping Black Tech Pipeline make more money.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-business"&gt;
  &lt;/a&gt;
  The business:
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Black Tech Pipeline&lt;/em&gt;â¨&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blacktechpipeline.com"&gt;blacktechpipeline.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BTP is a job board and recruiting agency focused on connecting Black technologists to open job opportunities in the tech industry.  &lt;/p&gt;

&lt;p&gt;First order of business, as CTO, was for me to build the website!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blacktechpipeline.com"&gt;https://blacktechpipeline.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BTP has two business models: A job board and a recruiting service.&lt;/p&gt;

&lt;p&gt;The job board:&lt;/p&gt;

&lt;p&gt;Every company on the BTP job board receives a landing page that contains content around that companies values, diversity, equity, and inclusion (DE&amp;amp;I) initiatives, safety policies, what type of leadership they have, an overview of their interview process, benefits, and images of their team.&lt;/p&gt;

&lt;p&gt;Companies interested in being on the BTP job board have to take a discovery call with Pariss. She wants to learn more about the interested company, share more information on BTP, and talk about whether partnering may be a good fit or not. After every call, they receive an automated rate sheet that details BTP's services and pricing structure. If the company is interested in partnering, Pariss sends the company a legal agreement, and once that's signed, the company receives a questionnaire to fill out that Pariss uses to build them their landing page for the job board. Every job board is completely unique, thanks to MDX (I'll talk a bit about that later).&lt;/p&gt;

&lt;p&gt;Recruitment:&lt;/p&gt;

&lt;p&gt;BTP has a talent database with over 1,500 Black tech candidates from all around the world! They're mainly in the US, but also in Canada, the EU, UK, and Africa. They range from junior, to mid-level, to senior, and up. They're diverse in gender, education, tech stack, field in tech, and more.&lt;/p&gt;

&lt;p&gt;When companies are interested in recruitment, Pariss sends them a form that asks questions about the roles they'd like her and her team to source for, and anything they should keep in mind while sourcing. Then, Pariss and her sourcing assistants search the talent database for candidates that fit the requirements of that companies open roles. They connect interested candidates over to those companies, and if the company hires a BTP candidate, BTP gets a 20% cut of the hires first year base salary- standard pricing for recruiting. &lt;/p&gt;

&lt;p&gt;BTP's recruitment service has a unique and valuable model. After a company hires a candidate through recruitment, there is a 90 day check-in model where Pariss meets with the candidate and the organization separately, virtually, and bi-weekly to make sure that everything the hire is having a good experience and being set up for success. If there are any issues with the employer, she works with them on reviewing policies or procedures to improve the hires experience and to help the company retain them. So not only is her service a recruiting platform, her clients are also paying for transparent feedback on themselves as an employer that will improve the current and futures hires experience.&lt;/p&gt;

&lt;p&gt;She does have other miscellaneous revenue streams from the website but we're not going to get into those.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-business-has-been-doing"&gt;
  &lt;/a&gt;
  How business has been doing
&lt;/h2&gt;

&lt;p&gt;Phenomenal! Since launching BTP in September 2020, Pariss is averaging around 20k a month and business isn't slowing down at all. She's partnered with some of the biggest companies in the world, as well as start ups and everything in between. She has many returning clients and gets new ones from word of mouth, news articles and social media. She hasn't had to do any outreach at all.&lt;/p&gt;

&lt;p&gt;Honestly, if she wanted to continue this way forever, I don't think it's a bad idea as a life style business. If you think in terms of scalability and growth, there are definitely things that can be worked on, but I'll get to that in a moment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-current-stack"&gt;
  &lt;/a&gt;
  The current stack:
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#gatsby-hosted-on-netlify"&gt;
  &lt;/a&gt;
  Gatsby hosted on Netlify
&lt;/h4&gt;

&lt;p&gt;Gatsby was my go-to choice for me on this because I absolutely love how you can process and format data and bake it into a GraphQL layer. We knew we'd be needing a job board for the site and would have to have a page for every client. To keep things simple and affordable, I wanted to use Markdown as the source of data and figured I could use Gatsby's life cycle methods to build out the pages.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#forestry-cms"&gt;
  &lt;/a&gt;
  Forestry CMS
&lt;/h4&gt;

&lt;p&gt;I wanted a CMS that connected directly to GitHub that also allowed you to create Markdown files. They have a very generous free-tier and it allowed her the ability to launch her business until she could afford to pay.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#mdx"&gt;
  &lt;/a&gt;
  MDX
&lt;/h4&gt;

&lt;p&gt;I love MDX so much! MDX allows you to use React in Markdown files. With MDX, she's given enough flexibility on the landing pages for companies to speak from their own voices and brand the way they want to. If you look at each page on the job board, they are completely unique. Most job boards have a specified format that displays the same amount of data per employer. Some clients have videos, some have more pictures than others and they're all in whatever order they want.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Magic links ðª&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Conceptually, magic links are a form of passwordless login.&lt;/p&gt;

&lt;p&gt;We use magic links that allow clients to update the job board roles on their own. Instead of giving them a log in, they use the magic link on an interface that actually updates the Black Tech Pipeline GitHub repo, which then triggers a Netlify build. &lt;/p&gt;

&lt;p&gt;We got help setting this up by an agency called &lt;a href="https://upstatement.com/"&gt;Upstatement&lt;/a&gt;. Would highly recommend hiring them for marketing, design or dev work, they have some geniuses over there!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Airtable
We hold all the candidate data in Airtable. It's been a tremendous help with getting kicked off, however, we are starting to find it limiting and might have to look elsewhere (my biggest problem to solve, yet).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-problems"&gt;
  &lt;/a&gt;
  The Problems
&lt;/h2&gt;

&lt;p&gt;Earlier, I said that business is going great and it'd be totally fine if Pariss wanted to continue the way she is now. From a scalibility perspective, there's quite a few problems we have:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#black-tech-pipeline-cant-run-without-pariss"&gt;
  &lt;/a&gt;
  Black Tech Pipeline can't run without Pariss
&lt;/h4&gt;

&lt;p&gt;Pariss literally &lt;em&gt;is&lt;/em&gt; the business. There is no way that Black Tech Pipeline can function without her existence. This might sound nice because it places a really heavy importance on an individual, which allows for extreme job security, but there are quite a few issues with this. When a person is the business itself, that usually means there aren't enough systems in place that help the business move along  to reach its full potential. It also means that she is doing a lot of the work on her own.&lt;/p&gt;

&lt;p&gt;I believe that a good solution for this is to set her up so that BTP is a business that anyone could run. We could set up very detailed documentation to talk through processes we have in place, and/or leverage my Unpaid CTO skills to build something that handles some of these processes for her (spoilers).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#airtable-isnt-sustainable-long-term"&gt;
  &lt;/a&gt;
  Airtable isn't sustainable long term
&lt;/h4&gt;

&lt;p&gt;If you're a candidate that's part of the database, you submit your data once and that's that. If something changes, like location or number, you have to resubmit instead of updating your data. We'd like to actually start putting out ads to get more candidates in the database, but we are hesitant to do that while everything is relying on Airtable at the moment.&lt;/p&gt;

&lt;p&gt;It would be ideal to allow candidates to submit their application and keep it up to date over time. This would make us feel better about the integrity of our data.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#getting-a-hold-of-candidates-is-hard"&gt;
  &lt;/a&gt;
  Getting a hold of candidates is hard
&lt;/h4&gt;

&lt;p&gt;Recruiting seems easy because you're simply asking people if they'd like to interview for a high paying job. However, it's not that simple at all. The solution to this, in my perspective, wouldn't be to build something to contact people easier and faster. If people want to be available, they will be available. Along with waiting for replies, sourcing also requires a lot of time and energy to search and reach out.&lt;/p&gt;

&lt;p&gt;I think the answer here would be to increase the amount of candidates in our database. Right now, we have over 1,500 candidates and it's hard to get them to reply to cold emails in general. If we had a database with over 10,000 candidates, perhaps our chances of getting a response would be easier. If there was a way to increase the chance of individual responses alone, I'd go that route but I can't think of a reasonable way to go about solving that.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#we-cant-display-candidate-data"&gt;
  &lt;/a&gt;
  We can't display candidate data
&lt;/h4&gt;

&lt;p&gt;Many clients have asked if there was a way that they could view the candidates in the database themselves but we can't allow it. We always want to vet employers and understand their DE&amp;amp;I and safety practices before introducing them to our candidates. We also want to keep track of who's reaching out to who, and where everyone is in their interview process. &lt;/p&gt;

&lt;p&gt;However, finding a way to allow employers to source candidates themselves would give us back a lot of time to focus on other tasks and allows the recruitment model to scale itself. It's an interesting obstacle to overcome. &lt;/p&gt;

&lt;p&gt;So to quickly recap on the problems:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We need more systems in place to handle Pariss' tasks. We want BTP to be in a position where other people can run it on their own.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Airtable was great for starting but not ideal long term. Mostly want to allow candidates to update their data as time goes on.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It's too hard to recruit as more and more companies request that service. It's very time consuming and it's hard to get candidates to respond.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can't give clients direct access to the database.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ultimately, the recruiting part of her business is a significant money making part. We'd like to get better at landing recruits by increasing the number of candidates in the database, but  Airtable is not going to scale well for that. It's sort of a chicken and egg problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The Solution
&lt;/h2&gt;

&lt;p&gt;I'm going to build a platform for Black Tech Pipeline, a web app on Next JS and AWS Amplify. Both Candidates and Employers will both be able to create accounts and will get assigned specific roles.&lt;/p&gt;

&lt;p&gt;Candidates will be able to upload similar data to what they do now in the Airtable database, but also get the ability to update info as things change and delete their info from the backend.&lt;/p&gt;

&lt;p&gt;Pariss and her assistants will be able to search the database as they already do with Airtable, but the integrity of the data will be better since I can set up forms with validation and formatting a bit better than Airtable can.&lt;/p&gt;

&lt;p&gt;There's also something I want to try out and see if I can take things further.&lt;/p&gt;

&lt;p&gt;We want to give the employers the ability to search the an anonymous version of the talent database. Basically, there will be only enough information to know if they would be interested in talking to the candidate, not enough to identify. We also will give the candidates a space in the form for an "anonymous pitch", where we ask them to write a paragraph about their experiences and what they're looking for in a way that doesn't give away who they are. &lt;/p&gt;

&lt;p&gt;I want to provide a system where an employer will "like" an anonymous candidates profile, Black Tech Pipeline employees will get notified of that interest, and they can go and reach out to the candidates on the employer's behalf if they want. It can also be looked at as a way of "bookmarking" a candidate for future reference. This, of course, is optional for companies that have active recruiters.&lt;/p&gt;

&lt;p&gt;To be honest, I'm probably going to need to talk to some lawyers about this "anonymous search" approach, but I'm excited to do some exploring.&lt;/p&gt;

&lt;p&gt;If things go really well, Pariss will be able to land multiple 4-5 recruits a month, which would bring her around 100k a month (if most salaries are near 100k and she takes 20% cut of first year salary). From there, she'll get so tied up in consultations with her hires and employer partners that she'll have to use those funds to hire more people to help her run the business, taking things to the next level.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;If you've made it this far, I want to say thank you so much for reading. I really enjoy my role as Unpaid CTO and figured I'd share parts of what it's like having such an important role. I've already started building and want to say I'm maybe 60% through the things I've detailed above, I'll be saving much more technical blog posts for later. &lt;/p&gt;

&lt;p&gt;If anyone has any questions or suggestions, feel free to hit me up on Twitter!&lt;/p&gt;

</description>
      <category>business</category>
      <category>cto</category>
      <category>diversity</category>
    </item>
    <item>
      <title>Smart Banking Landing Page Design</title>
      <author>Moinul_h</author>
      <pubDate>Tue, 05 Oct 2021 17:36:50 +0000</pubDate>
      <link>https://dev.to/gphmoinul/smart-banking-landing-page-design-2hmj</link>
      <guid>https://dev.to/gphmoinul/smart-banking-landing-page-design-2hmj</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hvQQm3rk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sucs6ufm1lgr1j5ecbo1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hvQQm3rk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sucs6ufm1lgr1j5ecbo1.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Designer! Here we have uploaded a new Free Smart Banking Landing Page Web App design.&lt;/p&gt;

&lt;p&gt;Smart Banking is a credit card designed to help you spend less and save more. It features no late fees, constant rewards, and an easy path to credit score improvement. Sign up now.&lt;/p&gt;

&lt;p&gt;Download up to thirteen thousand web templates, mobile app templates, illustrations, 3d illustrations, SVG icons, and graphic assets for Figma, Sketch, and Adobe XD. from UIHUT.&lt;/p&gt;

&lt;p&gt;This Free Smart Banking Landing Page web app design available file Figma, Sketch, Adobe XD&lt;/p&gt;

&lt;p&gt;After all, you can go to UIHUT use this coupon code âmoy10â to get a 10% extra off for a lifetime deal.&lt;/p&gt;

&lt;p&gt;UIHUT is a design resources platform for UX/UI designers, developers, and founders. Our high-quality design resources will help you to speed up the design process. Resources:&lt;/p&gt;

&lt;p&gt;1000+ Web Templates (Figma, Sketch, XD)&lt;br&gt;
 2500+ Illustrations (Figma, Sketch, XD)&lt;br&gt;
8000+ SVG Icons&lt;br&gt;
500+ Mobile App Screens (Figma, Sketch, XD)&lt;br&gt;
 100+ UI Assets for Web Application (Figma, Sketch, XD)&lt;/p&gt;

&lt;p&gt;We are uploading more resources every day.&lt;br&gt;
Thanks with us.&lt;/p&gt;

</description>
      <category>webtemplates</category>
      <category>onlinebankingtemplate</category>
      <category>uidesignresources</category>
      <category>smartbankingpage</category>
    </item>
    <item>
      <title>Scrape API based site with Python</title>
      <author>Bishwas Bhandari</author>
      <pubDate>Tue, 05 Oct 2021 17:31:53 +0000</pubDate>
      <link>https://dev.to/bishwasbh/scrape-api-based-site-with-python-4a46</link>
      <guid>https://dev.to/bishwasbh/scrape-api-based-site-with-python-4a46</guid>
      <description>&lt;p&gt;Welcome to our another, web scraping with Python tutorial series. Today, we gonna do API web scraping with Python. I think scraping API based website is the easiest thing, weâll ever do in your lifetime. We will be dealing with tokens, sessions, headers and form data. In short, todayâs learning will be called API web scraping Python.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LVy34KUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8l2bl8kafy2utkhdtykm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LVy34KUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8l2bl8kafy2utkhdtykm.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.webmatrices.com/scrape-api-based-site-with-python/"&gt;Learn More&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>webscraping</category>
      <category>testing</category>
    </item>
    <item>
      <title>Destructuring</title>
      <author>NRF</author>
      <pubDate>Tue, 05 Oct 2021 17:16:21 +0000</pubDate>
      <link>https://dev.to/nrf/destructuring-4bn7</link>
      <guid>https://dev.to/nrf/destructuring-4bn7</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is part of the first installment of a series I'm calling &lt;strong&gt;JavaScript You Must Know&lt;/strong&gt;. The aim of this series is to go over various fundamentals of the JavaScript language that a developer must know/understand before moving forward with any of the modern JavaScript frameworks like React, Angular, and Vue. Learning these fundamentals in parallel with the frameworks would also be acceptable.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This first installment of the series focuses on syntax-related topics and is called &lt;strong&gt;JavaScript You Must Know -- Essential Syntax&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;Destructuring, also called &lt;strong&gt;destructuring assignment&lt;/strong&gt;, is when individual elements of an iterable are extracted and assigned to variables. By far the most common use cases for it are with Arrays and Objects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#array-destructuring"&gt;
  &lt;/a&gt;
  Array Destructuring
&lt;/h2&gt;

&lt;p&gt;Let's say we have an array, &lt;code&gt;rgba&lt;/code&gt;, which defines the red, green, blue, and alpha values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We wish to extract thsoe values and store them in individual variables called &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt;, &lt;code&gt;blue&lt;/code&gt;, and &lt;code&gt;alpha&lt;/code&gt;. The old-school way to do this would be something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;red&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output: 100 100 0 0.2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With destructuring, it would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output: 100 100 0 0.2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note the square brackets on the &lt;em&gt;left hand side&lt;/em&gt; of the assignment at line 2. These square brackets signify that a destructuring assignment is being requested. Once it is determined that a destructuring is required, the expected value on the right hand side of the assignment is an iterable; which in our case is an array.&lt;/p&gt;

&lt;p&gt;With array destructuring, the values of an array are assigned to the variabes from left to right. This means that the value at index 0 will be assigned to the first variable, the value at index 1 will be assigned to the second variable, and so on. If a value is not required to be stored, we can simply skip naming it and move on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output: 100 100 0.2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we deleted the variable &lt;code&gt;blue&lt;/code&gt; but didn't change the positions of any of the other variables. That's why at the end we only have &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt;, and &lt;code&gt;alpha&lt;/code&gt; declared with the correct values.&lt;/p&gt;

&lt;p&gt;The right hand side of the assignment can be the array literal itself. The following is perfectly valid and would give the same results as our second-last example above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#left-hand-side-has-more-variables"&gt;
  &lt;/a&gt;
  Left hand side has more variables
&lt;/h3&gt;

&lt;p&gt;In case the &lt;em&gt;left hand side&lt;/em&gt; of the assignment has more variables than the elements of the array:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The extra variables will be declared but will have no value assigned to them. Therefore they will be &lt;code&gt;undefined&lt;/code&gt;. In the example below, since a 4th element doesn't exist in the array &lt;code&gt;rgb&lt;/code&gt;, &lt;code&gt;alpha&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rgb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="c1"&gt;// left hand side of the assignment below has more variables than elements in the array&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output: 100 100 0 undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The variables can be assigned a &lt;em&gt;default value&lt;/em&gt;. If a corresponding element is available on the right hand side, the variable's value will be updated. Otherwise, the default value will be used. In the next example, &lt;code&gt;green&lt;/code&gt; is set to 100 (even though a default value is present) via destructuring assignment and &lt;code&gt;alpha&lt;/code&gt; retains its default value of 0.2 since it doesn't have a corresponding element in the array &lt;code&gt;rgb&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rgb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#right-hand-side-has-more-variables"&gt;
  &lt;/a&gt;
  Right hand side has more variables
&lt;/h3&gt;

&lt;p&gt;In case the &lt;em&gt;right hand side&lt;/em&gt; of the assignment has more elements than the variables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If there are more elements in the array than the variables being declared, then the assignment will be carried out normally and the extra elements of the arary will have no effect whatsoever. As an example, we'll again take the &lt;code&gt;rgba&lt;/code&gt; array but only extract the &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt;, and &lt;code&gt;blue&lt;/code&gt; values and leave &lt;code&gt;alpha&lt;/code&gt; alone.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output: 100 100 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Finally, we can use the &lt;strong&gt;rest syntax&lt;/strong&gt; to gather any and all remaining values neatly into an array. Notice, in the example below, that &lt;code&gt;restOfThePlanets&lt;/code&gt; is an actual array with all the remaining elements of &lt;code&gt;planetsInTheSolarSystem&lt;/code&gt;. This is the same as using &lt;strong&gt;rest parameters&lt;/strong&gt; to gather all the arguments to a function into an array.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;planetsInTheSolarSystem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercury&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Venus&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Earth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mars&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jupiter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Saturn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Uranus&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Neptune&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// is Pluto a planet?&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;firstPlanet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;secondPlanet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thirdPlanet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;restOfThePlanets&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;planetsInTheSolarSystem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstPlanet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;secondPlanet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thirdPlanet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;restOfThePlanets&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// output: "Mercury" "Venus" "Earth" ["Mars", "Jupiter", "Saturn", "Uranus", "Neptune"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;ð¡ just a tip&lt;/p&gt;

&lt;p&gt;Array destructuring can be used to easily swap the values of two variables.&lt;/p&gt;


&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output: 20 10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#object-destructuring"&gt;
  &lt;/a&gt;
  Object Destructuring
&lt;/h2&gt;

&lt;p&gt;When it comes to objects, the destructuring assignment has one very important difference from array destructuring: with objects, the variables on the &lt;em&gt;left hand side&lt;/em&gt; of the assignment are used to look-up the values from the object on the &lt;em&gt;right hand side&lt;/em&gt; (the order doesn't matter). Also, curly braces &lt;code&gt;{}&lt;/code&gt; are used instead of square brackets &lt;code&gt;[]&lt;/code&gt; to signal an object destructuring.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;studentRecords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Plump Sunny&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;chemistry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;B+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mathematics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;studentRecords&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output: "107: Plump Sunny"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's go through the destructuring in detail. The curly braces &lt;code&gt;{}&lt;/code&gt; on the left hand side of the assignment signal that an object destructuring is requested and, this automatically implies, that there should be an object on the right hand side of the assignment. Next, the first variable is called &lt;code&gt;id&lt;/code&gt;, the JavaScript engine will look for a key called &lt;code&gt;id&lt;/code&gt; in the &lt;code&gt;studentRecords&lt;/code&gt; object. If &lt;code&gt;id&lt;/code&gt; is found in &lt;code&gt;studentRecords&lt;/code&gt;, its value will be assigned to the &lt;code&gt;id&lt;/code&gt; variable. If &lt;code&gt;id&lt;/code&gt; is not found, then the &lt;code&gt;id&lt;/code&gt; variable will be &lt;code&gt;undefined&lt;/code&gt;. The same process is followed for the &lt;code&gt;name&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;Object destructuring is very useful and is used by programmers extensively. And for good reason too as it makes the code very concise. Note that the order in which the variables appear is not important here (as opposed to &lt;strong&gt;array destructuring&lt;/strong&gt; where the order is important).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;studentRecords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Plump Sunny&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;chemistry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;B+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mathematics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;studentRecords&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output: "107: Plump Sunny"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the example above, even though we swapped the &lt;code&gt;id&lt;/code&gt; and the &lt;code&gt;name&lt;/code&gt; variables on the left hand side of the assignment, each variable still gets the correct value from the &lt;code&gt;studentRecords&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;Since the variable names are used to look-up the values from an object, one might think if we can rename the variables when destructuring an object. The answer is that we can by using the following syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;studentRecords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Plump Sunny&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;chemistry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;B+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mathematics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;phy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;chemistry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;chem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;mathematics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;maths&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;studentRecords&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Physics: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;phy&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;
Chemistry: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;chem&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;
Mathematics: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;maths&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that the variables that got declared in the end are called &lt;code&gt;phy&lt;/code&gt;, &lt;code&gt;chem&lt;/code&gt;, and &lt;code&gt;maths&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[console output]:&lt;/p&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Physics: A
Chemistry: B+
Mathematics: A+
&lt;/code&gt;&lt;/pre&gt;

&lt;/blockquote&gt;

&lt;p&gt;An easy way to remember the syntax is to imagine talking to the JavaScript engine like: "Hey JS, get physics as phy, chemistry as chem, and mathematics as maths from the object &lt;code&gt;studentRecords&lt;/code&gt;."&lt;/p&gt;

&lt;p&gt;Just like with arrays, we can provide &lt;strong&gt;default values&lt;/strong&gt; to the variables as well as use the &lt;strong&gt;rest syntax&lt;/strong&gt;. The only difference is that using the rest syntax with object will return an object rather than an array (which makes sense).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;studentRecords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Plump Sunny&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;chemistry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;B+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mathematics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// using default value for 'age'&lt;/span&gt;
&lt;span class="c1"&gt;// using the rest syntax to initialize 'grades'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;N/A&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;grades&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;studentRecords&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; / Age: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;
Grades: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;grades&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;[console output]:&lt;/p&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;107: Plump Sunny / Age: N/A
Grades:
{'physics':'A','chemistry':'B+','mathematics':'A+'}
&lt;/code&gt;&lt;/pre&gt;

&lt;/blockquote&gt;

&lt;p&gt;Here &lt;code&gt;age&lt;/code&gt; was assigned "N/A" because no key called &lt;code&gt;age&lt;/code&gt; was found in the &lt;code&gt;studentRecords&lt;/code&gt; object so the default value of &lt;code&gt;age&lt;/code&gt; was used. Moreover, notice that &lt;code&gt;grades&lt;/code&gt; is an object that contains all the remaining key/value pairs from &lt;code&gt;studentRecords&lt;/code&gt;. Got a bit fancy here by using &lt;code&gt;JSON.stringify()&lt;/code&gt;. All this function does is take a valid JavaScript object and returns the same object as a string that can be printed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-in-function-parameters"&gt;
  &lt;/a&gt;
  Use in function parameters
&lt;/h3&gt;

&lt;p&gt;One of the most useful uses of object destructuring is in function parameters. Let's first understand the problem. Imagine there is a function that expects, as its arguments, a student's id and that student's grades in all the different classes. The end result might look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;wantStudentDataForSomeReason&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;chemistry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mathematics&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// todo: do something with all that data&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;studentRecords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Plump Sunny&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;chemistry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;B+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mathematics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// time to call our function&lt;/span&gt;
&lt;span class="nx"&gt;wantStudentDataForSomeReason&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;studentRecords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;studentRecords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;studentRecord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chemistry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;studentRecord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mathematics&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is easy to see that calling &lt;code&gt;wantStudentDataForSomeReason()&lt;/code&gt; is a chore. Not only did we have to input each of the values individually, we also had to make sure that the values are in the same order as in the function's definition. Furthermore, what if one or more values was not available in the &lt;code&gt;studentRecords&lt;/code&gt; object!&lt;/p&gt;

&lt;p&gt;A nifty trick to avoid all of this trouble is to use object destructuring right in the parameters list of the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;wantStudentDataForSomeReason&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;chemistry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mathematics&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// todo: do something with all that data&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that the parameters are not individual variables any more but are surrounded by curly braces. Now, if an object is passed as an argument to this function, object destructuring will take place and the variables will get the correct values if they exist.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;wantStudentDataForSomeReason&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;chemistry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mathematics&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// todo: do something with all that data&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;studentRecords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Plump Sunny&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;chemistry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;B+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mathematics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// time to call our function&lt;/span&gt;
&lt;span class="nx"&gt;wantStudentDataForSomeReason&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;studentRecords&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once again, the function call in the last line of the code example above will basically resut in the following destructuring assignment to take place:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;chemistry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mathematics&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;studentRecords&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Truly an amazing use of destructuring. Now we don't have to refer to the list of parameters in the function's definition and the order doesn't matter as well. As for the missing values, any missing value will automatically be assigned &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-in-apis"&gt;
  &lt;/a&gt;
  Use in APIs
&lt;/h3&gt;

&lt;p&gt;APIs usually return a lot of data and, more often than not, the application does not need all of the data returned by the API. Instead of keeping the whole object returned by the API, we can used destructuring and keep only what we need.&lt;/p&gt;

&lt;p&gt;As an example, let's consider the API of &lt;a href="http://randomuser.me"&gt;randomuser.me&lt;/a&gt;. The API returns a &lt;code&gt;results&lt;/code&gt; array within a JavaScript object which looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;results&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gender&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;first&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;brad&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;last&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gibson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;location&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;street&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;9278 new road&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;city&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;kilcoole&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;state&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;waterford&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;postcode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;93027&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;coordinates&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;latitude&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;20.9267&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;longitude&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-7.9310&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;timezone&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;offset&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-3:30&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Newfoundland&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;brad.gibson@example.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;uuid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;155e77ee-ba6d-486f-95ce-0e0c0fb4b919&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;silverswan131&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;firewall&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;salt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;TQA1Gz7x&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;md5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dc523cb313b63dfe5be2140b0c05b3bc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sha1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;7a4aa07d1bedcc6bcf4b7f8856643492c191540d&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sha256&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;74364e96174afa7d17ee52dd2c9c7a4651fe1254f471a78bda0190135dcd3480&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dob&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1993-07-20T09:44:18.674Z&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;age&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;registered&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2002-05-21T10:59:49.966Z&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;age&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;phone&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;011-962-7516&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cell&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;081-454-0666&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;PPS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0390511T&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;picture&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;large&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://randomuser.me/api/portraits/men/75.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;medium&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://randomuser.me/api/portraits/med/men/75.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;thumbnail&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://randomuser.me/api/portraits/thumb/men/75.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nat&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;IE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;seed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fea8be3e64777240&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;results&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;page&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is a lot of data. Let's say that we only need the gender, email, and the cell from the returned data. We can use object destructuring on the returned data and extract only what we need.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;randomProfile&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://randomuser.me/api/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;gender&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;randomProfile&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's take this a step further and extract the first and last name from the data. Take some time to look at how the data given to us by the API is structured. Note that there is another object inside of our &lt;code&gt;results[0]&lt;/code&gt; object called name which in turn has the keys &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; for the first and last name. To extract data from a nested object like this, we have to tell the JavaScript engine that we're looking for a nested object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;randomProfile&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://randomuser.me/api/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;last&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;randomProfile&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We added this part to our destructuring assignment: &lt;code&gt;name: { first, last }&lt;/code&gt;. By adding this, we're basically telling the JavaScript engine to look for an object within the current object called &lt;code&gt;name&lt;/code&gt; and extract the values of the keys &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt;. Notice that in the end the declared variables are &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; and not &lt;code&gt;name.first&lt;/code&gt; and &lt;code&gt;name.last&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;randomProfile&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://randomuser.me/api/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;first&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;last&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lastName&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;randomProfile&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;ðð» Subscribe to my newsletter: &lt;a href="https://www.bracketsinstitute.com/newsletter-subscription"&gt;click here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ðð» Follow me on twitter: &lt;a href="https://twitter.com/bi_nrf"&gt;click here&lt;/a&gt;&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>WASM is AWSM</title>
      <author>vibalijoshi</author>
      <pubDate>Tue, 05 Oct 2021 17:10:10 +0000</pubDate>
      <link>https://dev.to/vibalijoshi/wasm-is-awsm-3a98</link>
      <guid>https://dev.to/vibalijoshi/wasm-is-awsm-3a98</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;We live in times where you learn JS to write server side code and desktop apps (electron), and you also learn C++ / Rust to create browser apps.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Does this sound strange? well this is kindaaa true ð¦&lt;/p&gt;

&lt;p&gt;With advent of JavaScript runtime environments like Node.js it is possible to write server side code with JS and not learn other languages like PHP,  C++, Java and JSP, Python,  Ruby on Rails. Hence a single person can just master JavaScript and write both frontend and backend code without any hassle.  &lt;/p&gt;

&lt;p&gt;Even though JavaScript is no doubt the most known language, not everyone is a master in it. Let's say you make a game using unity and C++ and you want to make it available for the web (as in the browser) but for that you would require to learn JavaScript. This would restrict a lot of possible amazing talented people who want to contribute to the web but cannot. &lt;strong&gt;Here is where the the gangsta WebAssembly arrives.&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wasm"&gt;
  &lt;/a&gt;
  WASM
&lt;/h2&gt;

&lt;p&gt;WASM or WebAssembly allows programmers to write application for the web other than the beloved JavaScript. You can write code in languages such as C, C++, Rust, Python, Go and even COBOL! FYI WebAssembly is a low-level assembly-like language.&lt;br&gt;
As mentioned the case of a game developer above; The WASM format removes the need for browser plug-ins to support online gaming and makes it possible to support graphics-heavy games. &lt;/p&gt;

&lt;p&gt;You can use it for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Better execution for languages and toolkits that are currently cross-compiled to the Web (C/C++, GWT, â¦)&lt;/li&gt;
&lt;li&gt;Image / video editing&lt;/li&gt;
&lt;li&gt;Games: Casual games that need to start quickly, AAA games that have heavy assets, Game portals (mixed-party/origin content).&lt;/li&gt;
&lt;li&gt;Peer-to-peer applications (games, collaborative editing, decentralized and centralized).
and many more, check out &lt;a href="https://webassembly.org/docs/use-cases/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As the MDN Docs say:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;WebAssembly is a new type of code that can be run in &lt;strong&gt;modern web&lt;br&gt;
browsers&lt;/strong&gt; â it is a &lt;strong&gt;low-level assembly-like language&lt;/strong&gt; with a compact&lt;br&gt;
&lt;strong&gt;binary format&lt;/strong&gt; that runs with &lt;strong&gt;near-native performance&lt;/strong&gt; and provides&lt;br&gt;
languages such as &lt;strong&gt;C/C++, C# and Rust&lt;/strong&gt; with a compilation target so that&lt;br&gt;
they can run on the web. It is also designed to run alongside&lt;br&gt;
JavaScript, &lt;strong&gt;allowing both to work together.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#browser-support"&gt;
  &lt;/a&gt;
  Browser support
&lt;/h3&gt;

&lt;p&gt;Firefox and Chrome browsers currently support the wasm format on Linux, MacOS, Windows and Android. The latest versions of Edge and Safari now include WebAssembly support as well.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rpSLbNYo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8fmjs4r2ov60u4nzd9x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rpSLbNYo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8fmjs4r2ov60u4nzd9x.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#low-level-assemblylike-language"&gt;
  &lt;/a&gt;
  Low level assembly-like language
&lt;/h3&gt;

&lt;p&gt;This is how WASM works under the hood in very simple words:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;High level languages like C, C++ and Rust are compiled into binary format, that is, .wasm and text format .wat.&lt;/li&gt;
&lt;li&gt;The source code written in C, C++ and Rust is compiled to .wasm using a compiler.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9O1FueTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dg92pmmug97ve6325u7j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9O1FueTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dg92pmmug97ve6325u7j.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#compatibility-with-js"&gt;
  &lt;/a&gt;
  Compatibility with JS
&lt;/h3&gt;

&lt;p&gt;Remember â â &lt;br&gt;
It is not an alternative to JavaScript. It works alongside JavaScript, replacing &lt;strong&gt;asm.js&lt;/strong&gt; (WASM's old competitor) as the compilation target for C/C++ applications.&lt;br&gt;
Bonus read: &lt;a href="https://hacks.mozilla.org/2017/03/why-webassembly-is-faster-than-asm-js/"&gt;Why WebAssembly is Faster Than asm.js&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#lets-give-it-a-try"&gt;
  &lt;/a&gt;
  Let's give it a try!
&lt;/h3&gt;

&lt;p&gt;Here is the list of languages that web assembly supports:&lt;br&gt;
&lt;a href="https://github.com/appcypher/awesome-wasm-langs#contents"&gt;https://github.com/appcypher/awesome-wasm-langs#contents&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Without any setup&lt;/em&gt;&lt;/strong&gt; : To just get a feel about how the whole webAssembly concept looks like you can check out &lt;a href="https://webassembly.studio/"&gt;WebAssembly Studio&lt;/a&gt; : an online IDE tool developed by Mozilla that can be used to compile C/C++ and Rust code into WebAssembly (WASM).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tTaZc6dw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8m7ts52lihuvk6mysu0z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tTaZc6dw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8m7ts52lihuvk6mysu0z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Setup required:&lt;/em&gt;&lt;/strong&gt; If you are a C/C++ lover you can use &lt;a href="http://kripken.github.io/emscripten-site/"&gt;Emscripten&lt;/a&gt; : a complete compiler toolchain to WebAssembly. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;C/C++ code can be compiled to .wasm using Emscripten SDK. Later, the .wasm code can be used with the help of javascript in your html file to display the output.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ino-WSkp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzc8vkcdfp4am0bjrro8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ino-WSkp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzc8vkcdfp4am0bjrro8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you prefer Rust then try: &lt;a href="https://www.hellorust.com/setup/wasm-target/"&gt;rustc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#compiling-cc-to-webassembly"&gt;
  &lt;/a&gt;
  Compiling C/C++ to WebAssembly
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;As explained above we would need to set up Emscripten Environment for C/C++.&lt;/li&gt;
&lt;li&gt;Setup the Emscripten SDK following &lt;a href="https://emscripten.org/docs/getting_started/downloads.html"&gt;these instructions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;We use emscripten to generate everything we need to run our code, as WebAssembly, in the browser.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In new directory make a .c file and name it  &lt;code&gt;demo.c&lt;/code&gt; . Copy paste this code to this program file.&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&amp;lt;emscripten/emscripten.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello World&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Now, using the terminal window you used to enter the Emscripten compiler environment, navigate to the same directory as your  &lt;code&gt;demo.c&lt;/code&gt;  file, and run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;emcc demo.c -s WASM=1 -o demo.html
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The options weâve passed in with the command are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;-s WASM=1&lt;/code&gt;  â Specifies that we want wasm output. If we donât specify this, Emscripten will just output  &lt;a href="http://asmjs.org/"&gt;asm.js&lt;/a&gt;, as it does by default.&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;-o demo.html&lt;/code&gt;  â Specifies that we want Emscripten to generate an HTML page to run our code in (and a filename to use), as well as the wasm module and the JavaScript "glue" code to compile and instantiate the wasm so it can be used in the web environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point in your source directory you should have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  The binary wasm module code &lt;code&gt;demo.wasm&lt;/code&gt; : A WebAssembly file generally ends with &lt;code&gt;.wasm&lt;/code&gt; and it contains the &lt;strong&gt;binary instructions&lt;/strong&gt; as well as &lt;strong&gt;data&lt;/strong&gt; (&lt;em&gt;memory&lt;/em&gt;) generated during compilation.&lt;/li&gt;
&lt;li&gt;  A JavaScript file containing glue code to translate between the native C functions, and JavaScript/wasm &lt;code&gt;demo.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  An HTML file to load, compile, and instantiate your wasm code, and display its output in the browser &lt;code&gt;demo.html&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-run-this"&gt;
  &lt;/a&gt;
  How to run this?
&lt;/h3&gt;

&lt;p&gt;Open the resulting &lt;code&gt;demo.html&lt;/code&gt; in your browser. Make sure that it is updated to avoid any compatibility issues. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-output"&gt;
  &lt;/a&gt;
  The output
&lt;/h3&gt;

&lt;p&gt;If you successfully followed this then you would get this output in your browserâs JavaScript console. &lt;a href="https://wordpress.org/support/article/using-your-browser-to-diagnose-javascript-errors/"&gt;Here is how you can find your console&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-wg4Jph--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sgltzrwtky3i8hcj8tqs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-wg4Jph--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sgltzrwtky3i8hcj8tqs.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;("Hello World" would be displayed)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Congratulations! You did it ð&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h3&gt;

&lt;p&gt;You can also learn web assembly and write native code directly. But it is quite tough hence people do not prefer that. &lt;/p&gt;

&lt;p&gt;Interested to know more? Read the undisputed &lt;a href="https://developer.mozilla.org/en-US/docs/WebAssembly"&gt;MDN docs on WebAssembly&lt;/a&gt; &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>From Free Software to Open Source</title>
      <author>AbcSxyZ</author>
      <pubDate>Tue, 05 Oct 2021 17:05:26 +0000</pubDate>
      <link>https://dev.to/abcsxyz/from-free-software-to-open-source-520c</link>
      <guid>https://dev.to/abcsxyz/from-free-software-to-open-source-520c</guid>
      <description>&lt;h1&gt;
  &lt;a href="#from-free-software-to-open-source"&gt;
  &lt;/a&gt;
  From Free Software to Open Source
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#beginning-of-the-software-industry"&gt;
  &lt;/a&gt;
  Beginning of the software industry
&lt;/h2&gt;

&lt;p&gt;The open source history takes its root in the software history, computers and software weren't what we know today.&lt;br&gt;
Back in 1945, at the end of the World War II, the &lt;a href="https://en.wikipedia.org/wiki/ENIAC"&gt;Eniac&lt;/a&gt; was the first electronic computers with a weight of 30 tons and scientifics were programming in binary using &lt;a href="https://www.computerhope.com/jargon/p/punccard.htm"&gt;punch cards&lt;/a&gt;. The good old times !&lt;/p&gt;

&lt;p&gt;Computers &amp;amp; softwares were used by universities and the US army, it wasn't accessible for the general public. Slowly, computers started to be more available, size &amp;amp; price were reducing, software has gone electronic, and the corporate world started to look at it with a &lt;a href="https://time.com/4271506/census-bureau-computer-history/"&gt;first commercial computer&lt;/a&gt; sold in 1951. &lt;strong&gt;At the beginning of computers, companies were making money by selling hardware, source code of softwares were freely distributed as a commodity to use a computer.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With more and more computers, the need for softwares got bigger every day. In 50's &amp;amp; 60's, a nascent industry has emerged : the &lt;a href="https://en.wikipedia.org/wiki/Software_industry"&gt;software industry&lt;/a&gt;. Specialized companies appeared to provide software products and services. During 70's came a new wave of computer democratization with the beginning of what was called &lt;a href="https://en.wikipedia.org/wiki/Microcomputer"&gt;microcomputers&lt;/a&gt;, when computers became personal. Some big companies we know today grew up during this wave : 1975 foundation of Micro-soft, 1977 creation of Apple &amp;amp; Oracle, 1972 foundation of SAP...&lt;br&gt;
Software was becoming a real business.&lt;/p&gt;

&lt;p&gt;With this new industry, software has become &lt;strong&gt;proprietary software&lt;/strong&gt;. To maintain control over software, a company had no interest in sharing its source code but only its binary form. In 1975, Bill Gates sent an &lt;em&gt;&lt;a href="https://archive.nytimes.com/www.nytimes.com/library/cyber/surf/072397mind-letter.html"&gt;Open Letter to Hobbyist&lt;/a&gt;&lt;/em&gt; denouncing copyright infringement of the Micro-Soft Altair BASIC interpreter by the &lt;a href="https://en.wikipedia.org/wiki/Homebrew_Computer_Club"&gt;Homebrew Computer Club&lt;/a&gt;. The US Copyright Act of 1976 strengthen protection of 'literary work', which apply to software. Legal actions took place, companies sued to protect their rights like the &lt;em&gt;&lt;a href="https://en.wikipedia.org/wiki/Apple_Computer,_Inc._v._Franklin_Computer_Corp."&gt;Apple Computer, Inc. v. Franklin Computer Corp.&lt;/a&gt;&lt;/em&gt; decision.&lt;/p&gt;

&lt;p&gt;Free of charge at the beginning, software became a trade secret protected by copyright.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#birth-of-free-software"&gt;
  &lt;/a&gt;
  Birth of Free Software
&lt;/h2&gt;

&lt;p&gt;In reaction to this industry and to software privatization, a part of the IT ecosystem would react. Technically, because replication of source code is costless and they were also a hacking/sharing culture, access to the code was important. In 1976, the term copyleft appear for the first time in the Tiny BASIC program of Li-Chen Wang as an opposition to copyleft rights.&lt;/p&gt;

&lt;p&gt;At the beginning of 80's, a programmer and hacker of the MIT Artificial Intelligence Laboratory was going to start a crusade, a life mission, against proprietary software : &lt;strong&gt;Richard Matthew Stallman&lt;/strong&gt;, also known as RMS. Motivated by various reasons, he was witnessing a sharing decrease in the industry, experienced struggle with a printer using proprietary software he couldn't fix, saw the evolution of software industry, his personal values... In September 1983, Richard Stallman announced the &lt;em&gt;&lt;a href="https://www.gnu.org/gnu/initial-announcement.en.html"&gt;GNU project&lt;/a&gt;&lt;/em&gt;. In order to 'help humanity', the project aims to provide a free Unix operating system to run a computer : a kernel, an editor, a shell, a compiler, a debugger...&lt;/p&gt;

&lt;p&gt;Mid-80's, a software was already available, Emacs, and with it came the question of distribution, and specifically the licensing question. One major move of Richard Stallman was to create his own license for the project, the &lt;a href="https://www.free-soft.org/gpl_history/emacs_gpl.html"&gt;GNU Emacs Public License&lt;/a&gt; who will become later the widely used &lt;a href="https://tldrlegal.com/license/gnu-general-public-license-v3-(gpl-3)"&gt;GNU General Public License&lt;/a&gt;, giving a legal basis to copyleft. According to &lt;a href="https://www.gnu.org/gnu/thegnuproject.html"&gt;RMS&lt;/a&gt;, &lt;em&gt;'copyleft uses copyright law, but flips it over to serve the opposite of its usual purpose: instead of a means for restricting a program, it becomes a means for keeping the program free'.&lt;/em&gt; One particularity of GNU GPL, to force sharing, is to be a &lt;a href="https://en.wikipedia.org/wiki/Viral_license"&gt;viral license&lt;/a&gt; : derivative work must be shared &amp;amp; GNU GPL compliant.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Free software&lt;/strong&gt; was born.&lt;/p&gt;

&lt;p&gt;Stallman fought for users freedom, freedom to use, to study, to share and to modify a software. Through this commitment and the &lt;a href="https://www.fsf.org/"&gt;Free Software Foundation&lt;/a&gt;, he became the pioneer of the &lt;strong&gt;free software movement&lt;/strong&gt;, a movement for 'freedom and justice'.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;For Stallman, free software matters not because software is special and deserves a special freedom; indeed, he acknowledges that "there are more important issues of freedom - the issues of freedom that everybody's heard of are much more important than this: freedom of speech, freedom of the press, free assembly."" Free software matters because all freedoms matter, and software happens to be the domain in which Stallman can contribute most.&lt;/em&gt;&lt;br&gt;&lt;br&gt;
Glyn Moody - Rebel Code&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By 1990, the GNU system was almost complete: emacs, gcc, bash, gdb, glibc... the only major missing component was the kernel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linux-the-inspirer-of-open-source"&gt;
  &lt;/a&gt;
  Linux, the inspirer of Open Source
&lt;/h2&gt;

&lt;p&gt;Two major events for the IT industry occurred in 1991. Gently, the Internet &lt;a href="https://data.worldbank.org/indicator/IT.NET.USER.ZS"&gt;democratization&lt;/a&gt; was starting to reach the general public, Tim Berners-Lee launched this year the first website of the World Wide Web, facilitating the use of Internet. In August of the same year, a finish student, &lt;em&gt;Linus Torvalds&lt;/em&gt;, &lt;a href="https://www.cs.cmu.edu/~awb/linux.history.html"&gt;announced the first version&lt;/a&gt; of a kernel software he did on his free time, as a hobby. Unnamed by the time, it's known today as &lt;strong&gt;Linux&lt;/strong&gt;. Internet explosion and the arrival of Linux, combined with the free software movement, was creating a fertile ground for the emergence of open source.&lt;/p&gt;

&lt;p&gt;Involuntarily, the tools Linus Torvalds was using and the way he was developing Linux with other programmers will had future major impact. To build his kernel, and to use his computer on top of it, because they were freely available he was using GNU tools, mainly bash and the C compiler gcc. On the first release of the kernel, Linus created his own license, which allow the use and modification of the program, but restrict the commercial activity. This license clause created issues within the community when users wanted to redistribute paid copies in computers club for example, just to reimburse their expenses. In 1992, to solve this and because Linus was already familiar with the GNU project, Linux switched to the GNU General Public License and became a free software.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;I felt that the availability of gcc was very important to the project, so picking the GPLv2 as a homage to gcc was appropriate.&lt;/em&gt;&lt;br&gt;&lt;br&gt;
Linus Torvalds &lt;a href="https://www.datacenterknowledge.com/archives/2016/08/23/linus-torvalds-early-linux-history-gpl-license-money"&gt;interview&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The way Linus was producing Linux matter. Beginning of the 1991 summer break, work started alone for Linus. &lt;em&gt;'I did nothing else, seven days a week, ten hours a day.'&lt;/em&gt; But he won't be alone for too long.&lt;br&gt;&lt;br&gt;
The first announcement of Linux, in August 1991, happened in the mailing list of the kernel Minix &lt;code&gt;comp.os.minix&lt;/code&gt;. As a student who just share his work, he was open to others, asking &lt;em&gt;'feedback on things people like/dislike in minix'&lt;/em&gt;, or saying &lt;em&gt;'Any suggestions are welcome, but I won't promise I'll implement them :-)'&lt;/em&gt;. In months, years, from a couple of curious the Linux kernel attracted hundreds to thousands of contributors. With the Linux kernel and the tools of the GNU project, it was for people a powerful set of software freely available worldwide to run a computer : &lt;strong&gt;the GNU/Linux operating system&lt;/strong&gt;. At the end of 90's, Linux was already a powerful kernel used in critical area and even began to shape the foundations of the World Wide Web.&lt;/p&gt;

&lt;p&gt;Linux became a reliable and efficient software build with a large community of developers, and was challenging proprietary operating system. Linux wasn't the only software built in this way, but because a kernel is essential to run a computer, the scale &amp;amp; demand was unique. The way they were producing collaboratively the kernel was questioning software development models of the time like the &lt;a href="https://en.wikipedia.org/wiki/Brooks%27s_law"&gt;Brooks's law&lt;/a&gt;.&lt;br&gt;
&lt;em&gt;Eric Steven Raymond&lt;/em&gt;, a software developer who was around this ecosystem, noticed it. For his own project, Fetchmail, he tried to find some patterns of the Linux development process to build his software. With this successful trial, in 1997 he decided to publish the essay &lt;strong&gt;&lt;em&gt;"&lt;a href="http://www.catb.org/~esr/writings/cathedral-bazaar/"&gt;The Cathedral and the Bazaar&lt;/a&gt;"&lt;/em&gt;&lt;/strong&gt; to share his discovery. He was defining two ways to produce a software. The Cathedral way, the classic software development model done in a controlled environment with a well-defined team, and the Bazaar way, where the development environment is more anarchic and open to the outside.&lt;/p&gt;

&lt;p&gt;"The Cathedral and the Bazaar" influenced hugely other actors of the IT ecosystem. One of them was Netscape, a company who was writing a web browser. They decided to follow the model and opened their source code in February 1998. A new browser was going to born from this code : &lt;strong&gt;Mozilla Firefox&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;
With this increasing interest, with projects switching to and trying this model, a meeting with Eric Raymond happened in the same month of February. To name the phenomenon and to avoid confusion about the term 'free' in free software, Christine Peterson suggested the word &lt;strong&gt;"Open Source"&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Open Source was born and the &lt;a href="https://opensource.org/"&gt;Open Source Initiative&lt;/a&gt; was created to promote this decentralized software development model and to encourage &lt;strong&gt;open collaboration&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Article from a series for the project &lt;a href="https://github.com/AbcSxyZ/Open-Source-Education"&gt;Open Source Education&lt;/a&gt; to give pedagogical content during the &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>tutorial</category>
      <category>hacktoberfest</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Time Zones Are Hard</title>
      <author>Jeffrey Fate</author>
      <pubDate>Tue, 05 Oct 2021 17:04:39 +0000</pubDate>
      <link>https://dev.to/jeffreyfate/time-zones-are-hard-4pan</link>
      <guid>https://dev.to/jeffreyfate/time-zones-are-hard-4pan</guid>
      <description>&lt;p&gt;I recently saw this on Twitter (hope it doesn't trigger any of you):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;NEW TIME ZONES!!!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KzFs2I5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FAv7UPuVEAA87S9.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--sS_bPZiK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1369555721033904131/SkcVjCe3_normal.jpg" alt="Maz Jovanovich profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Maz Jovanovich
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @maz_jovanovich
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      PSA: As of today, Australia has 5 time zones once again. Apologies in advance to our overseas friends trying to make sense of this temporal anarchy. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:47 AM - 03 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1444524436548296705" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1444524436548296705" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1444524436548296705" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#whats-the-big-deal"&gt;
  &lt;/a&gt;
  What's The Big Deal?
&lt;/h2&gt;

&lt;p&gt;Imagine your application has users throughout Australia. They probably include people in the three red states in the right image above; where time is different during daylight saving time.&lt;/p&gt;

&lt;p&gt;Let's also say your application has a feature that is very time-dependent. Let's say live TV recording. Users set recordings based on the schedule, in their local time. They expect not to miss recording their favorite shows.&lt;/p&gt;

&lt;p&gt;Without updating and releasing a new version, everyone in the 3 states with a new time zone (only during DST) could miss recording a show at what is now 9pm.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#problems-everywhere"&gt;
  &lt;/a&gt;
  Problems Everywhere
&lt;/h2&gt;

&lt;p&gt;There aren't many devices or applications or services that don't depend on correct time. DRM. Caching. Shoe launches. Events. Reminders.&lt;/p&gt;

&lt;p&gt;I bet most people reading this have stored or fetched time that needed to be displayed in the correct time zone. Perhaps you didn't convert the time, but I bet it had to be converted somewhere downstream.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fix-it"&gt;
  &lt;/a&gt;
  Fix It
&lt;/h2&gt;

&lt;p&gt;One solution to this problem is to do away with time zones altogether. As amazing as this would be for us, the chances are extremely low. If the United States can't convert to metric, there is basically no chance the entire world will ditch time zones.&lt;/p&gt;

&lt;p&gt;Time for an engineering solution.&lt;/p&gt;

&lt;p&gt;One possible solution is to only persist UTC (coordinated universal time) for any date-time. This gets us partway there. No users (ok, maybe a couple) will want to enter time in UTC, so we'll probably have to convert it. Here's where it gets tricky.&lt;/p&gt;

&lt;p&gt;This amazing video by Computerphile puts it better than I could.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-5wpm-gesOY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Let's see if we can find a solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#user-first"&gt;
  &lt;/a&gt;
  User First
&lt;/h2&gt;

&lt;p&gt;Let's start with a user story:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;As a TV lover, I want to record my show in my local time, so that I can watch it later&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;How do we know the local time? Location. There are a few different ways to know location: IP address, Geolocation API, GPS, asking where the user is, more. Now that we have the location, we must find the time zone.&lt;/p&gt;

&lt;p&gt;This is the part I don't have a solid abstraction for. We must somehow map that location (latitude/longitude, city name, address) to the correct time zone. The most accurate is latitude/longitude, but we must fallback to a less precise location too.&lt;/p&gt;

&lt;p&gt;Is it feasible to map the borders of each time zone and do our best to match locations to those borders?&lt;/p&gt;

&lt;p&gt;The rest of the solution is simple enough. Once we have the correct time zone, we can convert UTC to the local time and we're done.&lt;/p&gt;

&lt;p&gt;Logic that does this should be encapsulated into something that can be easily integrated and reused. Something like a REST API or a local library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#just-an-exercise"&gt;
  &lt;/a&gt;
  Just An Exercise
&lt;/h2&gt;

&lt;p&gt;I admit, this appears to have been solved already, but I thought it was a fun exercise. A reminder that we always have to think about time.&lt;/p&gt;

&lt;p&gt;Here are some of the resources I found while trying to better understand time zones:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/david-dick/time-zone-olson/blob/master/lib/Time/Zone/Olson.pm"&gt;Olson Time Zones&lt;/a&gt;&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/unicode-org/cldr/master/common/supplemental/windowsZones.xml"&gt;Windows Time Zones&lt;/a&gt;&lt;br&gt;
&lt;a href="https://timezonedb.com/references/get-time-zone"&gt;TimeZoneDB&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.washingtonpost.com/news/worldviews/wp/2016/02/12/the-radical-plan-to-destroy-time-zones-2/"&gt;The radical plan to destroy time zones&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.wired.co.uk/article/universal-time-zones"&gt;What would happen if we abolished time zones altogether?&lt;/a&gt;&lt;br&gt;
&lt;a href="https://theconversation.com/the-hazards-of-living-on-the-right-side-of-a-time-zone-border-116630"&gt;The hazards of living on the right side of a time zone border&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.theguardian.com/news/2019/jan/11/watching-the-sun-not-the-clock-sleep-body-clocks-daylight-saving-time"&gt;Why we should be watching the sun, not the clock&lt;/a&gt;&lt;/p&gt;

</description>
      <category>timezones</category>
    </item>
  </channel>
</rss>
