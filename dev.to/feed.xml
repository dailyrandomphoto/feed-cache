<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React Hooks Portfolio üòç</title>
      <author>Said Mounaim</author>
      <pubDate>Sat, 22 May 2021 18:50:42 +0000</pubDate>
      <link>https://dev.to/said_mounaim/react-hooks-portfolio-4if9</link>
      <guid>https://dev.to/said_mounaim/react-hooks-portfolio-4if9</guid>
      <description>&lt;h1&gt;
  &lt;a href="#said-mounaim"&gt;
  &lt;/a&gt;
  Said MOUNAIM
&lt;/h1&gt;

&lt;p&gt;
  
    &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2LQgHMuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/N9mXnwr/sm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2LQgHMuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/N9mXnwr/sm.png"&gt;&lt;/a&gt;
  
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#to-view-a-live-example-click-here"&gt;
  &lt;/a&gt;
  To view a live example, &lt;strong&gt;&lt;a href="https://saidmounaim.netlify.app/"&gt;click here&lt;/a&gt;&lt;/strong&gt;.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;These instructions will get you a copy of the project up and running on your local machine for development and testing purposes.&lt;/p&gt;

&lt;p&gt;You'll need &lt;a href="https://git-scm.com"&gt;Git&lt;/a&gt; and &lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; (which comes with &lt;a href="http://npmjs.com"&gt;npm&lt;/a&gt;) installed on your computer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node@v10.16.0 or higher
npm@6.9.0 or higher
git@2.17.1 or higher
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How To Use
&lt;/h2&gt;

&lt;p&gt;From your command line, clone and run SMPortfolio:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Clone this repository&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/saidMounaim/SMPortfolio.git

&lt;span class="c"&gt;# Go into the repository&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;SMPortfolio

&lt;span class="c"&gt;# Install dependencies&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="c"&gt;#Start's development server&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#technologies-used"&gt;
  &lt;/a&gt;
  Technologies Used
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://styled-components.com/"&gt;styled-components&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.react-reveal.com/"&gt;react-reveal&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.npmjs.com/package/react-lottie"&gt;react-lottie&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>100daysofcode</category>
      <category>portfolio</category>
    </item>
    <item>
      <title>What Is Simulated Annealing?</title>
      <author>Luke Garrigan</author>
      <pubDate>Sat, 22 May 2021 18:31:47 +0000</pubDate>
      <link>https://dev.to/lukegarrigan/what-is-simulated-annealing-kpn</link>
      <guid>https://dev.to/lukegarrigan/what-is-simulated-annealing-kpn</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-simulated-annealing"&gt;
  &lt;/a&gt;
  What Is Simulated Annealing?
&lt;/h1&gt;

&lt;p&gt;Today I‚Äôve been playing around with  &lt;strong&gt;simulated annealing&lt;/strong&gt;, which is just a  &lt;a href="https://www.wikiwand.com/en/Simulated_annealing#:~:text=Simulated%20annealing%20(SA)%20is%20a,space%20for%20an%20optimization%20problem."&gt;probabilistic technique for approximating the global optimum&lt;/a&gt;. Don‚Äôt let that put you off, it sounds far more complicated than it really is.&lt;/p&gt;

&lt;p&gt;The name of the algorithm is stolen from  &lt;a href="https://www.wikiwand.com/en/Annealing_(metallurgy)"&gt;metallurgy&lt;/a&gt;. Annealing is a heat treatment that alters the physical and sometimes chemical properties of a material, it involves heating a metal and then slowly cooling at a specific rate.&lt;/p&gt;

&lt;p&gt;I have put together a really simple example to help explain the purpose and application of such an algorithm.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hill-climbing"&gt;
  &lt;/a&gt;
  Hill climbing
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs say our protagonist is a skier. Skiers ‚Äì I assume ‚Äì always want to get to the highest point of the mountain so they can ski as fast as possible. Let‚Äôs write a very simple algorithm that determines how the skier climbs the mountain.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;findHighestPoint&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;heightOfHillToRight&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Seems simple enough. If the position to our right is the same height or higher let‚Äôs move to the right, otherwise let‚Äôs move to the left.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BQvsp04---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/codeheir.com/wp-content/uploads/2021/05/1-1.gif%3Fresize%3D716%252C537%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BQvsp04---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/codeheir.com/wp-content/uploads/2021/05/1-1.gif%3Fresize%3D716%252C537%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We‚Äôve cracked it haven‚Äôt we? Our skier can find the top of every mountain?&lt;/p&gt;

&lt;p&gt;Not quite:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QpU_xSYS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/codeheir.com/wp-content/uploads/2021/05/2-1.gif%3Fresize%3D716%252C537%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QpU_xSYS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/codeheir.com/wp-content/uploads/2021/05/2-1.gif%3Fresize%3D716%252C537%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our skier has hit what we call the  &lt;a href="https://www.wikiwand.com/en/Maxima_and_minima"&gt;local maxima&lt;/a&gt;, where it thinks it‚Äôs at the highest point. In order for the skier to find the global maxima (Highest point) it‚Äôll first need to go down before it goes up. This is where simulated annealing comes in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-algorithm"&gt;
  &lt;/a&gt;
  The algorithm
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Choose a neighbour&lt;/li&gt;
&lt;li&gt; Calculate the cost of the neighbour &lt;/li&gt;
&lt;li&gt; Compare the new cost with the old cost

&lt;ol&gt;
&lt;li&gt; &lt;code&gt;if (newCost &amp;lt; oldCost)&lt;/code&gt;: move to neighbour&lt;/li&gt;
&lt;li&gt; &lt;code&gt;if (newCost &amp;gt; oldCost&lt;/code&gt;):  &lt;em&gt;potentially&lt;/em&gt;  move to neighbour&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt; Repeat until a solution is found or we reach the maximum iterations&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let‚Äôs put this into plain English for our simple hill climbing example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Choose a neighbour&lt;/strong&gt;: This will simply be a position on the hill the skier can move to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Calculate the cost of the neighbour&lt;/strong&gt;: This is the height of the hill at that position, so for us the higher the better - meaning the cost goes up as the hill goes down.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Compare the new cost with the old cost&lt;/strong&gt;: So if the new position is at a higher point on the mountain then we will move to that position. If the new position is not at a higher point on the mountain we will potentially move to that position (This is the important bit).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-temperature"&gt;
  &lt;/a&gt;
  The temperature
&lt;/h2&gt;

&lt;p&gt;The temperature is very important to the algorithm, it controls the probability of us choosing to go down the hill in the hope to go up at a later point.&lt;/p&gt;

&lt;p&gt;The temperature will start at 1.0 and will be decreased each iteration by some constant, in my example I use 0.99.&lt;/p&gt;

&lt;p&gt;The equation that we‚Äôre going to use to determine the acceptance probability, i.e the probability of us going down the hill is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;newScore&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For a given neighbour, the probability will get smaller as the iterations tick by (Because the temperature decreases each iteration). Meaning the likelihood of us choosing to go down decreases.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;simulatedAnnealing&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;minTemp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;neighbour&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getNeighbours&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;neighbour&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;neighbour&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;neighbour&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;prob&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;neighbour&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alpha&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;    

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lets-put-it-to-the-test"&gt;
  &lt;/a&gt;
  Let‚Äôs put it to the test
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qOu5x4wa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/05/3-1.gif%3Fresize%3D716%252C537%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qOu5x4wa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/05/3-1.gif%3Fresize%3D716%252C537%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Awesome, in this example you can see how the temperature decreased as it tried to go back down the hill towards the end but eventually decided against it!&lt;/p&gt;

&lt;p&gt;Let‚Äôs try a more complicated example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W1ZCASH1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/05/4-1.gif%3Fresize%3D716%252C537%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W1ZCASH1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/codeheir.com/wp-content/uploads/2021/05/4-1.gif%3Fresize%3D716%252C537%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Well, I had a lot of fun implementing that, if you want to have a trawl through the code I wrote or mess with the algorithm yourself ‚Äì  &lt;a href="https://editor.p5js.org/codeheir/sketches/bGSBBXpdN"&gt;go here&lt;/a&gt;  and have a play!&lt;/p&gt;

&lt;p&gt;I took a lot of inspiration for this blog from this  &lt;a href="http://katrinaeg.com/simulated-annealing.html"&gt;post by Katrina Ellison&lt;/a&gt; &lt;br&gt;
 and got the hill climbing idea from this  &lt;a href="https://www.youtube.com/watch?v=S9vs05eAGN0"&gt;video by Erir Schirtzinger&lt;/a&gt;  so credit to them!&lt;/p&gt;

&lt;p&gt;I hope you've enjoyed this blog, if you do by some miracle enjoy my blabbering then head over to my blogging site at codeheir.com where I write weekly blogs about whatever in the world of programming has my attention!&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Storing Dotfiles in a Git Repo</title>
      <author>Mat Jones</author>
      <pubDate>Sat, 22 May 2021 17:54:21 +0000</pubDate>
      <link>https://dev.to/matjones/storing-dotfiles-in-a-git-repo-342i</link>
      <guid>https://dev.to/matjones/storing-dotfiles-in-a-git-repo-342i</guid>
      <description>&lt;p&gt;Everyone has seen those &lt;code&gt;dotfiles&lt;/code&gt; repositories on GitHub. There's lots of different ways to manage them, but the method I use now requires no extra tooling (other than &lt;code&gt;git&lt;/code&gt; and a command line shell of your choice), no symbolic links to get files into the right locations, can be triggered from any directory on disk, and is easy to replicate on a new system.&lt;/p&gt;

&lt;p&gt;Basically what we're going to do is set up a git repository at &lt;code&gt;~/.cfg&lt;/code&gt; or &lt;code&gt;~/.dotfiles&lt;/code&gt; or any directory within your home directory of your choosing (although you probably &lt;em&gt;don't&lt;/em&gt; want to use &lt;code&gt;~/.config&lt;/code&gt; since that is the default value of &lt;code&gt;[$XDG_CONFIG_HOME](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html)&lt;/code&gt;), and a shell alias to help manage and control it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-repo"&gt;
  &lt;/a&gt;
  Creating the Repo
&lt;/h2&gt;

&lt;p&gt;If you're setting this up the first time, there's a few steps you'll need to take to set up. First, create the repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init &lt;span class="nt"&gt;--bare&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.dotfiles
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This creates a "bare" git repository at &lt;code&gt;~/.dotfiles&lt;/code&gt;. Now we'll set up an alias to interact with it from any directory on disk. Add the following alias to your &lt;code&gt;~/.bashrc&lt;/code&gt; or &lt;code&gt;~/.zshrc&lt;/code&gt; or &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; file, then &lt;code&gt;source&lt;/code&gt; the file:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# make sure the --git-dir is the same as the&lt;/span&gt;
&lt;span class="c"&gt;# directory where you created the repo above.&lt;/span&gt;
&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;config&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"git --git-dir=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.dotfiles --work-tree=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;--work-tree=$HOME&lt;/code&gt; option sets the directory that the repository tracks to your home directory. Now, since there's probably more files in your home directory that you &lt;em&gt;don't&lt;/em&gt; want in the repo than files you &lt;em&gt;do&lt;/em&gt; want in the repo, you should configure the repo to not show untracked files by default. We can do that by setting a repository-local configuration option.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;config config &lt;span class="nt"&gt;--local&lt;/span&gt; status.showUntrackedFiles no
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#tracking-files"&gt;
  &lt;/a&gt;
  Tracking Files
&lt;/h2&gt;

&lt;p&gt;To track files in our new &lt;code&gt;~/.dotfiles&lt;/code&gt; repo, we just need to add them. From any directory on disk, you can run the following command to add your &lt;code&gt;~/.bashrc&lt;/code&gt; or &lt;code&gt;~/.zshrc&lt;/code&gt; or &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt; file to your new dotfiles repo:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;config add ~/.bashrc
config add ~/.zshrc
config add ~/.config/fish/config.fish

config commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Add .bashrc/.zshrc/config.fish file"&lt;/span&gt;
config push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#installing-on-a-new-system"&gt;
  &lt;/a&gt;
  Installing on a New System
&lt;/h2&gt;

&lt;p&gt;Of course, the main point of doing this is to easily sync your config across new machines. We can easily do this with a small bash script to initialize the system's dotfiles from your git repository.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;

git clone &lt;span class="nt"&gt;--bare&lt;/span&gt; git@github.com:mrjones2014/dotfiles.git &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.dotfiles

&lt;span class="c"&gt;# define config alias locally since the dotfiles&lt;/span&gt;
&lt;span class="c"&gt;# aren't installed on the system yet&lt;/span&gt;
&lt;span class="k"&gt;function &lt;/span&gt;config &lt;span class="o"&gt;{&lt;/span&gt;
   git &lt;span class="nt"&gt;--git-dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.dotfiles/ &lt;span class="nt"&gt;--work-tree&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt; &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# create a directory to backup existing dotfiles to&lt;/span&gt;
&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; .dotfiles-backup
config checkout
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 0 &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Checked out dotfiles from git@github.com:mrjones2014/dotfiles.git"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;else
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Moving existing dotfiles to ~/.dotfiles-backup"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    config checkout 2&amp;gt;&amp;amp;1 | egrep &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\s&lt;/span&gt;&lt;span class="s2"&gt;+&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | &lt;span class="nb"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'print $1'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; | xargs &lt;span class="nt"&gt;-I&lt;/span&gt;&lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="nb"&gt;mv&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; .dotfiles-backup/&lt;span class="o"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c"&gt;# checkout dotfiles from repo&lt;/span&gt;
config checkout
config config status.showUntrackedFiles no
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, installing your dotfiles on a new system is as simple as running:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl https://raw.githubusercontent.com/mrjones2014/dotfiles/master/scripts/config-init | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#thats-really-it"&gt;
  &lt;/a&gt;
  That's Really It
&lt;/h2&gt;

&lt;p&gt;That's really all there is to it. Now you can easily add and track changes to dotfiles via your new &lt;code&gt;config&lt;/code&gt; shell alias.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;config add ~/.config/something/somefile
config commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"add somefile"&lt;/span&gt;
config push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Comment below with your dotfiles repo links! Feel free to browse mine for inspiration.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mrjones2014"&gt;
        mrjones2014
      &lt;/a&gt; / &lt;a href="https://github.com/mrjones2014/dotfiles"&gt;
        dotfiles
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      My UNIX dotfiles; configuration for fish shell, vim/neovim, etc.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Installing on a New System&lt;/h1&gt;
&lt;p&gt;You can run the following to get these dotfiles installed on your system. It will make a backup of your existing dotfiles.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;curl https://raw.githubusercontent.com/mrjones2014/dotfiles/master/scripts/config-init &lt;span class="pl-k"&gt;|&lt;/span&gt; bash&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Manual Config&lt;/h2&gt;
&lt;h3&gt;
Package Manamement&lt;/h3&gt;
&lt;p&gt;You'll need/want to install &lt;a href="https://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt;. For Apple Silicon Macs you'll need to run the &lt;code&gt;brew&lt;/code&gt; install script
as well as &lt;code&gt;brew&lt;/code&gt; itself through Rosetta until Homebrew is updated to support Apple Silicon natively
See &lt;a href="https://stackoverflow.com/questions/64882584/how-to-run-the-homebrew-installer-under-rosetta-2-on-m1-macbook/64883440" rel="nofollow"&gt;here&lt;/a&gt; for how to do so.&lt;/p&gt;
&lt;h3&gt;
Packages&lt;/h3&gt;
&lt;p&gt;There are some global installations that are required for some of the shell and nvim CoC configuration. The &lt;code&gt;check-globals.fish&lt;/code&gt; script should output help text
for installing them if they're missing.&lt;/p&gt;
&lt;h3&gt;
Shell&lt;/h3&gt;
&lt;p&gt;You'll need to install &lt;a href="https://github.com/fish-shell/fish-shell"&gt;Fish Shell&lt;/a&gt; before the shell config will work, since its a Fish config.&lt;/p&gt;
&lt;h2&gt;
Neovim Config&lt;/h2&gt;
&lt;p&gt;The Neovim configuration is using some Lua-based plugins, like TreeSitter for syntax highlighting, Telescope for file finding and live grep
which means you‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mrjones2014/dotfiles"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



</description>
      <category>bash</category>
      <category>vim</category>
      <category>dotfiles</category>
      <category>git</category>
    </item>
    <item>
      <title>Virtualizing the CPU</title>
      <author>thesystemsprogrammer</author>
      <pubDate>Sat, 22 May 2021 17:40:51 +0000</pubDate>
      <link>https://dev.to/thesystemsprogrammer/virtualizing-the-cpu-30a8</link>
      <guid>https://dev.to/thesystemsprogrammer/virtualizing-the-cpu-30a8</guid>
      <description>&lt;p&gt;Have you ever wondered how your 6-core MacBook is able to run more than 6 programs at once? Each core is executing one instruction at a time, it‚Äôs bizarre to me that it‚Äôs able to run more than 6 applications. That‚Äôs the magic of the operating system.&lt;/p&gt;

&lt;p&gt;The most fundamental piece of hardware in a computer is its CPU. The CPU (central processing unit) executes instructions given to it and performs logic computations very quickly. In this article, we‚Äôll talk about how the operating system makes it seem like all the programs on your computer have exclusive access to the CPU resource, when in reality, it‚Äôs shared across all of them.&lt;/p&gt;

&lt;p&gt;To do this, the operating system uses an abstraction called a process. A process is an executing instance of a program. Each process is given some time to use the CPU and then that access is revoked and another process is given some time to use the CPU. This happens so quickly, humans don‚Äôt notice a pause when using these programs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#process-initialization"&gt;
  &lt;/a&gt;
  Process Initialization
&lt;/h2&gt;

&lt;p&gt;So how does a program get run in the first place? A program is just a file with data in it. The data is stored on a computer‚Äôs disk. To run a program, the operating system must first take the data on disk and move it to memory since a CPU cannot directly access the disk. For a CPU to interact with the disk, it must initiate an I/O request which, at a high level, involves sending messages back and forth between itself and the disk‚Äôs controller. The I/O is complete once the data is moved from disk into memory. Additionally, the operating system will allocate some stack and heap memory for the process to use during run-time.&lt;/p&gt;

&lt;p&gt;Once a process has been created it is put into the READY state. The operating system groups processes into different states which can be generically categorized as READY, RUNNING, or BLOCKED. READY implies that the operating system can schedule it to be run on a CPU. Once the operating system has scheduled a program to run it is put in the RUNNING state as its instructions are executed on the CPU. Now, say the program wants to interact with disk, instead of waiting for the disk I/O to complete, which can take awhile, the process is put in a BLOCKED state in which it is descheduled from the CPU. During this time, another READY process can run on the CPU. Once disk I/O is completed, the process is put back into the READY state where the operating system can choose to schedule it again.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resource-sharing"&gt;
  &lt;/a&gt;
  Resource Sharing
&lt;/h2&gt;

&lt;p&gt;Wait a minute...if the operating system schedules a process to run on the CPU and the CPU is running the instructions of that process, how is the operating system able to tell the CPU to start executing the instructions of a different process? What if that process runs in an infinite-loop, does that mean no other processes on the operating system will be able to run? After all, the operating system is also just software running on the CPU. The answer to this question is a hardware-based timer-interrupt. This timer-interrupt runs at a predetermined interval and when it is run, the CPU jumps to a specific location in memory and starts executing instructions at that memory address. This memory address is the operating systems timer interrupt handler. At a high-level, the interrupt handler will determine whether or not the currently running process has been running too long and needs to be descheduled in favor of another READY process. If that‚Äôs the case, then the operating system will make the switch.&lt;/p&gt;

&lt;p&gt;But what does ‚Äúmake the switch‚Äù even mean? The operating system has to take the state of the currently running process, save it into the operating system‚Äôs memory, take the state of the to-be-scheduled process from the operating system‚Äôs memory, load it and then run it on the CPU. The state that we‚Äôre referring to here is the CPUs registers. When a CPU does logical operations, it operates on values stored in registers on the CPU. Things like the memory address of the currently executing instruction are stored in a register.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scheduling"&gt;
  &lt;/a&gt;
  Scheduling
&lt;/h2&gt;

&lt;p&gt;One thing we didn‚Äôt talk about in detail is how the operating system decides what program should be run next. Scheduling is a widely studied discipline but we will only touch a brief part of it. The goals of an operating system scheduler are generally to minimize the amount of idle time (the amount of time a process isn‚Äôt running) while also ensuring fairness (all processes get an equal chunk of time to run). Let‚Äôs look at a couple scheduling policies and understand their pros and cons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First-in First-Out&lt;/strong&gt; This implies that a process that is scheduled will run to completion before another process is scheduled on the operating system. The benefit is that there is no overhead of context switching (saving registers into memory and then loading them again later) so it may minimize the amount of time necessary for all programs to reach completion. However, it‚Äôs not necessarily fair. What happens if program A is constantly running and never stops? Program B which was added after program A will never run!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Round Robin&lt;/strong&gt; Round robin works by always switching the scheduled process during a timer interrupt. It gives each process a time slice and once that time slice has expired, the next process in line is scheduled. This scheduling policy is the most fair but the constant context switches could drastically degrade performance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Now that we understand how the physical resource of the CPU is virtualized by the operating system, it should make more sense how the operating system is able to give the illusion that all processes have exclusive access to the CPU. One burning question you may have is: how does the operating give each process the illusion that it each has its own address space?&lt;/p&gt;

&lt;p&gt;If you have any questions, don‚Äôt hesitate to email me at &lt;a href="//mailto:contact@thesystemsprogrammer.com"&gt;contact@thesystemsprogrammer.com&lt;/a&gt; or DM me on Twitter &lt;a href="https://twitter.com/asystemshacker"&gt;@asystemshacker&lt;/a&gt;&lt;/p&gt;

</description>
      <category>systems</category>
      <category>hardware</category>
      <category>computerscience</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The Vim Reference</title>
      <author>Richard</author>
      <pubDate>Sat, 22 May 2021 17:37:33 +0000</pubDate>
      <link>https://dev.to/merichard123/the-vim-reference-55b8</link>
      <guid>https://dev.to/merichard123/the-vim-reference-55b8</guid>
      <description>&lt;p&gt;Recently I decided to learn vim after hearing how much Ben Awad loves it. I though maybe it could boost my productivity too. I am still getting use to it, but right now it seems pretty fun.&lt;/p&gt;

&lt;p&gt;Now to the reference. Here are some useful commands and what they do: &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#using-vim"&gt;
  &lt;/a&gt;
  Using Vim
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Open Vim: &lt;code&gt;vim filename&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Closing Vim:

&lt;ul&gt;
&lt;li&gt; &lt;code&gt;:wq&lt;/code&gt; -&amp;gt; save and quit&lt;/li&gt;
&lt;li&gt; &lt;code&gt;:q&lt;/code&gt; -&amp;gt;  quit and not save&lt;/li&gt;
&lt;li&gt; &lt;code&gt;:w&lt;/code&gt; -&amp;gt; save and not quit&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#movements"&gt;
  &lt;/a&gt;
  Movements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; Hitting gg will take you to the top of file&lt;/li&gt;
&lt;li&gt; G takes you to the bottom&lt;/li&gt;
&lt;li&gt; } and { navigate code blocks&lt;/li&gt;
&lt;li&gt; o adding a new line and put into insert mode&lt;/li&gt;
&lt;li&gt; O adding a new line above and put into insert mode&lt;/li&gt;
&lt;li&gt; w will jump to next word b will take you back&lt;/li&gt;
&lt;li&gt; &lt;code&gt;:number&lt;/code&gt; will take you to line number&lt;/li&gt;
&lt;li&gt; 0 will take you to the start of the line&lt;/li&gt;
&lt;li&gt; 0 + w  or ^ will take you to the first word of a line&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;h j k l&lt;/code&gt; to move up down left and right &lt;/li&gt;
&lt;li&gt;
a move over by  1 and set insert mode&lt;/li&gt;
&lt;li&gt;
A  jump to end and set insert mode &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#editing"&gt;
  &lt;/a&gt;
  Editing
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Hitting "i" in command mode lets you insert &lt;/li&gt;
&lt;li&gt;Hitting shift + i will set insert mode at the beginning of the line &lt;/li&gt;
&lt;li&gt;Then esc puts you back into command mode &lt;/li&gt;
&lt;li&gt;Hitting dd  will delete a line and copy to clip board &lt;/li&gt;
&lt;li&gt;Hitting d + } will delete a whole block of code&lt;/li&gt;
&lt;li&gt;Hitting 10 dd will delete 10 lines&lt;/li&gt;
&lt;li&gt;Hitting &lt;code&gt;u&lt;/code&gt; will undo &lt;/li&gt;
&lt;li&gt;Hitting ctrl + r will redo&lt;/li&gt;
&lt;li&gt; Hitting yy will copy a line&lt;/li&gt;
&lt;li&gt; p to paste bellow P to paste above&lt;/li&gt;
&lt;li&gt; x remove a letter where the cursor is&lt;/li&gt;
&lt;li&gt; number x remove number letters before cursor&lt;/li&gt;
&lt;li&gt; ~ swap the case of the letter prefix with number for multiple characters&lt;/li&gt;
&lt;li&gt;&lt;p&gt;. redo&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;$ will take you to the end of a line&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;W will jump spaces and B reverses that&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;f + char find and place cursor on char&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;t + charfind and place cursor before char&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;% take you to and from closing brackets&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;d + % remove code between brackets&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;c + w change mode and word will remove a word and set insert mode&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;D remove everthing from cursor onwards&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;c + t + char edit from cursor to char&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;C change whole line&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;d + t + char delete from cursor to char&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;* take you to occurances of the word where your cursor is&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;; take you to next instance after using a find command&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;r + char replace letter at cursor with char prefix with number for multiple replaces&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;R allow to replace lots of letters into replace mode&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/word highlight all occurances of word&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#macros"&gt;
  &lt;/a&gt;
  Macros
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Press q to start recording then select a hotkey. Now run some commands and hit q to end. Then hit @ hotkey to replay a command. Prefix &lt;code&gt;@&lt;/code&gt; with a number to replace that many times&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#visual-mode-v"&gt;
  &lt;/a&gt;
  Visual Mode: V
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Select text with movement commands then you can hit:

&lt;ul&gt;
&lt;li&gt;
d to delete&lt;/li&gt;
&lt;li&gt;After selected &amp;gt; or &amp;lt; to indent code.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
shift + v selects the whole line and puts you into visual mode.&lt;/li&gt;
&lt;li&gt;
v + move select from cursor while move&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#visual-block-mode"&gt;
  &lt;/a&gt;
  Visual Block Mode
&lt;/h4&gt;

&lt;p&gt;ctrl + v enter visual block mode. Now you can select columns and hit &lt;code&gt;r&lt;/code&gt; to replace things.&lt;br&gt;
In visual block mode hitting shift i will allow you to type and then after you hit esc the text will appear in all places selected.&lt;/p&gt;




&lt;p&gt;Thank you for referring to this guide, I hope you found it useful.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Photo by Bich Tran from Pexels&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>vim</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>‚≠êBuilding a Quiz Application in Python [video]</title>
      <author>The Nerdy Dev</author>
      <pubDate>Sat, 22 May 2021 17:18:54 +0000</pubDate>
      <link>https://dev.to/thenerdydev/building-a-quiz-application-in-python-video-17k2</link>
      <guid>https://dev.to/thenerdydev/building-a-quiz-application-in-python-video-17k2</guid>
      <description>&lt;p&gt;In this video, we will learn how we can create a Quiz Application using Python. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/kqa-BYI46ss"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Follow me on:&lt;br&gt;
üëâ Twitter: &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt;&lt;br&gt;
üëâ Instagram: &lt;a href="https://instagram.com/thenerdydev"&gt;https://instagram.com/thenerdydev&lt;/a&gt;&lt;br&gt;
üëâ YouTube: &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - Make sure to subscribe to my YouTube Channel for FREE content on Web Development and loads of other technologies. &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Consecutive difference of elements in an Array</title>
      <author>Mayank Pathak</author>
      <pubDate>Sat, 22 May 2021 16:39:07 +0000</pubDate>
      <link>https://dev.to/mayankpathak/consecutive-difference-of-elements-in-an-array-3hih</link>
      <guid>https://dev.to/mayankpathak/consecutive-difference-of-elements-in-an-array-3hih</guid>
      <description>&lt;p&gt;Hiüëã guys, In this post we gonna check a most basic but most important programming problem in which we have to find the consecutive difference of elements in a given Array. This problem I came across when I was giving a codingüë®‚Äçüíª testüß™ during my placement üë®‚Äç‚úàÔ∏è season.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-description"&gt;
  &lt;/a&gt;
  Problem description
&lt;/h3&gt;

&lt;p&gt;You are given with a circular array. Your task is calculate the difference between two consecutive number. And if difference is greater than ‚Äòk‚Äô, print 1 else print 0&lt;/p&gt;

&lt;p&gt;Input Description: You are given two numbers ‚Äòn‚Äô, ‚Äôm‚Äô. Next line contains n space separated integers.&lt;/p&gt;

&lt;p&gt;Output Description: Print 1 if the difference is greater than ‚Äòm‚Äô.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sample Input :&lt;/em&gt;&lt;br&gt;
5 15&lt;br&gt;
50 65 85 98 35&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sample Output :&lt;/em&gt;&lt;br&gt;
 0 1 0 1 0&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cjTk1xYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ey26wxo1vv0r2oxkt6rg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cjTk1xYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ey26wxo1vv0r2oxkt6rg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#logic-to-follow-to-comeup-with-the-solution-"&gt;
  &lt;/a&gt;
  Logic to follow to come-up with the solution :
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Declare the required sets of variables to use in the code.&lt;/li&gt;


&lt;li&gt;Input the user input size of the array and its elements.&lt;/li&gt;

&lt;li&gt;Now iterate from initialization as 0 till the second last element.&lt;/li&gt;

&lt;li&gt;And inside it finds the absolute difference of two consecutive numbers, also if the difference is greater than the inputted value then prints 1 or in other case print 0.&lt;/li&gt;

(Absolute convert the -ve computed value into +ve. Ex. abs (-15) to (15)

&lt;li&gt;Now iterate from second last element till the last element, this is done to compute the difference of last and first element of the array.&lt;/li&gt;

&lt;li&gt;Similarly, inside it find the absolute difference of two consecutive numbers, also if the difference is greater than the inputted value then prints 1 or in other case print 0.&lt;/li&gt;

&lt;li&gt;At last we get the required set of the 1‚Äôs and 0‚Äôs by computing the absolute difference.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#now-lets-come-to-the-coding-part-of-the-problem"&gt;
  &lt;/a&gt;
  Now let's come to the coding part of the problemüë®‚Äçüíª
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Code ‚úç&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;
int main() {
    int n,k;
    cin&amp;gt;&amp;gt;n&amp;gt;&amp;gt;k;
    int a[n];
    for(int i=0;i&amp;lt;n;i++)
    {
        cin&amp;gt;&amp;gt;a[i];
    }
    for(int i=0;i&amp;lt;n-1;i++)
    {
        if(abs(a[i]-a[i+1])&amp;gt;k)
        {
            cout&amp;lt;&amp;lt;"1 ";
        }
        if(abs(a[i]-a[i+1])&amp;lt;=k)
        {
            cout&amp;lt;&amp;lt;"0 ";
        }
    }
      for(int i=n-1;i&amp;lt;n;i++)
    {
        if(abs(a[n-1]-a[0])&amp;gt;k)
        {
            cout&amp;lt;&amp;lt;"1";
        }
        if(abs(a[n-1]-a[0])&amp;lt;=k)
        {
            cout&amp;lt;&amp;lt;"0";
        }
    }
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Sample Input&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5 15
50 65 85 98 35
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Sample Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;0 1 0 1 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hence with the required set of problem we came across to know one of the important problem in Array and we can make the concept array strong with practicing such kinds of problem as much as we can.&lt;/p&gt;

&lt;p&gt;Hope with this you learned and acquired some basic knowledge on C++ Programming.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drop a Love‚ù§&lt;/strong&gt; if you likedüëç this post, then share ü§ùthis with your friends and if anything is confusing or incorrect then let me know in the comment section.&lt;/p&gt;

&lt;p&gt;Thanks from my side, this is Mayank, keep learning and exploring !!&lt;/p&gt;

&lt;p&gt;Support Me to write great articles by Clickingüëá&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/mayankpathak"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meet you in the next article......till than see yaü§ö&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>cpp</category>
      <category>programming</category>
    </item>
    <item>
      <title>Tell Me About A Time You Had To Manage Conflicting Priorities | Facebook Behavioral Interview Series</title>
      <author>The Interview Sage</author>
      <pubDate>Sat, 22 May 2021 16:03:06 +0000</pubDate>
      <link>https://dev.to/theinterviewsage/tell-me-about-a-time-you-had-to-manage-conflicting-priorities-facebook-behavioral-interview-series-24fc</link>
      <guid>https://dev.to/theinterviewsage/tell-me-about-a-time-you-had-to-manage-conflicting-priorities-facebook-behavioral-interview-series-24fc</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/B0o4X3Z3_cE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before we discuss this question, let us recap what the Behavioral Interview Round at Facebook is.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i8RAbw1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8ob8tjoldnkf5h1vyn6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i8RAbw1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8ob8tjoldnkf5h1vyn6.png" alt="What is a Behavioral Interview Round at Facebook?" title="What is a Behavioral Interview Round at Facebook?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Behavioral Interview Round is also known as the Jedi Interview round at Facebook.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is about you and your history, your r√©sum√©, and your motivation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The purpose of this interview is to assess whether the candidate will thrive in Facebook's peer-to-peer, minimal process, and unstructured engineering organization.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Software Engineers, the behavioral interview is actually part behavioral and part coding. The coding part is a shorter version of the usual coding interviews and is included to supplement the other two coding interviews to get an additional coding signal.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips-amp-tricks-to-effectively-prepare-for-behavioral-interviews"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" alt="Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews" title="Behavioral Interview Tips &amp;amp; Tricks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Know yourself! Take the time to review your r√©sum√©, as the interviewer will almost certainly ask about key events in your work history.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have concrete examples or anecdotes to support each of the questions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Familiarize yourself with &lt;a href="https://investor.fb.com/resources/"&gt;Facebook's mission statement&lt;/a&gt; and its &lt;a href="https://www.facebook.com/careers/facebook-life/"&gt;five core values&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be Bold&lt;/li&gt;
&lt;li&gt;Focus on Impact&lt;/li&gt;
&lt;li&gt;Move Fast&lt;/li&gt;
&lt;li&gt;Be Open&lt;/li&gt;
&lt;li&gt;Build Social Value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be yourself! Be open and honest about your successes and failures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be humble and focus on teamwork, leadership, and mentorship qualities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, let us review how to effectively answer the question on Managing Conflicting Priorities in the interview.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#question-tell-me-about-a-time-you-had-to-manage-conflicting-priorities"&gt;
  &lt;/a&gt;
  Question: Tell me about a time you had to manage conflicting priorities
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0eHelyj3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7n47zkssroaqlfcimge.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0eHelyj3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7n47zkssroaqlfcimge.png" alt="Tell me about a time you had to manage conflicting priorities" title="Tell me about a time you had to manage conflicting priorities"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://www.youtube.com/watch?v=ObFGBUF-TuQ&amp;amp;t=1032s"&gt;Video Explanation&lt;/a&gt; with Evaluation Criteria, Response Framework, Tips &amp;amp; Tricks, and a Special Case of "Never Had Conflicting Priorities".&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Time management is a crucial part of everyone's career.&lt;/p&gt;

&lt;p&gt;Interviewers often ask candidates to tell about a time when they had to manage conflicting or shifting priorities at their workplace.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#evaluation-criteria"&gt;
  &lt;/a&gt;
  Evaluation Criteria
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qHPdurfW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7n8fhyj1cmct6ld7hgr5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qHPdurfW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7n8fhyj1cmct6ld7hgr5.png" alt="Evaluation Criteria for Tell me about a time you had to manage conflicting priorities" title="Evaluation Criteria for 'Tell me about a time you had to manage conflicting priorities'"&gt;&lt;/a&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E6CGLkdV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgzfo514ghbly8pqgoaw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E6CGLkdV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgzfo514ghbly8pqgoaw.png" alt="Evaluation Criteria for Tell me about a time you had to manage conflicting priorities" title="Evaluation Criteria for 'Tell me about a time you had to manage conflicting priorities'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everyone deals with conflicting priorities and shifting deadlines in their jobs.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;By this question, the interviewer's goal is to evaluate:

&lt;ul&gt;
&lt;li&gt;How you manage your time,&lt;/li&gt;
&lt;li&gt;Exercise judgment,&lt;/li&gt;
&lt;li&gt;Communicate, and&lt;/li&gt;
&lt;li&gt;Shift gears when needed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They want to know if you can handle competing priorities and understand the implications of missing deadlines.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The interviewers are trying to assess whether you can work under challenging situations or unstructured environments and distinguish between the urgent and the important.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They are also looking to see if your coworkers can rely on you to get the work done.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#response-framework"&gt;
  &lt;/a&gt;
  Response Framework
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nSH4xQoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuistwhyp13ozqg8yhdv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nSH4xQoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuistwhyp13ozqg8yhdv.png" alt="Response Framework for Tell me about a time you had to manage conflicting priorities" title="Response Framework for 'Tell me about a time you had to manage conflicting priorities'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our advice is to pick a compelling and honest story that can articulate a real-life experience where you had to manage conflicting priorities and shifting deadlines at your workplace.&lt;/p&gt;

&lt;p&gt;Describe the situation, the events that occurred, and explain how the priorities shifted while working on a particular project. It can be that your manager or coworker might hand you a last-minute request that is of higher importance or something genuinely urgent comes up for which you had to drop everything else.&lt;/p&gt;

&lt;p&gt;Explain to the interviewer how you evaluated and decided your plan of action and how you communicated about this shift with your manager, coworkers, and other stakeholders. If your current task cannot be deprioritized for some reason, describe to the interviewer how you handled it by asking for additional help or resources from your manager.&lt;/p&gt;

&lt;p&gt;Finally, express how the outcome and the impact were beneficial to the company or team.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-amp-tricks"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w34FWAYp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vb19csfac95k2e2uy5g1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w34FWAYp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vb19csfac95k2e2uy5g1.png" alt="Tips and Tricks" title="Tips &amp;amp; Tricks for 'Tell me about a time you had to manage conflicting priorities'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Always remain calm and professional.

&lt;ul&gt;
&lt;li&gt;Refrain from being negative and avoid blaming your employer, coworkers, or manager.&lt;/li&gt;
&lt;li&gt;Companies generally do not like to hire people who are always pointing fingers at others.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use a compelling story that is honest and believable.

&lt;ul&gt;
&lt;li&gt;It is most desirable to describe a real-life example to the interviewer to show that you have actually faced such a situation in your career and not just talk about a generic strategy.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Do not sugarcoat your answer with irrelevant details.

&lt;ul&gt;
&lt;li&gt;Spend more time talking about the actions you took to handle the conflicting priorities.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Show that you proactively communicated about the shift to all the stakeholders to keep them well informed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Focus on the business impact that you had on your company or team.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare the response for this question beforehand, as it will be tough to structure your answer on the spot during the interview.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not memorize the answer as it should come naturally, and you should sound confident to the interviewer.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#special-case-never-had-conflicting-priorities"&gt;
  &lt;/a&gt;
  Special Case: Never Had Conflicting Priorities
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eJXo4NCw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfdkozfzw58zwu7t2oim.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eJXo4NCw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfdkozfzw58zwu7t2oim.png" alt="Special Case: Never Had Conflicting Priorities" title="Special Case: Never Had Conflicting Priorities"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It may be the case that you actually never had to face conflicting priorities and shifting deadlines in your workplace. New Grads and entry-level software engineers usually fall under this category.&lt;/p&gt;

&lt;p&gt;If you are in such a situation, do not end your answer by simply saying that you never had a conflicting priority in your workplace. Instead, try to use a real experience from your college. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Handling multiple courses and projects,&lt;/li&gt;
&lt;li&gt;Dividing the time between your part-time job and coursework, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will help the interviewer evaluate you on various attributes that we mentioned earlier, like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How you manage your time,&lt;/li&gt;
&lt;li&gt;Exercise judgment,&lt;/li&gt;
&lt;li&gt;Communicate, and&lt;/li&gt;
&lt;li&gt;Shift gears when needed.&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#preparation-material"&gt;
  &lt;/a&gt;
  Preparation Material
&lt;/h1&gt;

&lt;p&gt;Learn more about the Evaluation Criteria, Response Framework, and Tips &amp;amp; Tricks to effectively prepare and answer the top questions asked in the Behavioral Interviews at Facebook. Certain special cases are also discussed which are usually faced by the candidates during these interviews.&lt;/p&gt;

&lt;p&gt;‚¨áÔ∏è &lt;a href="https://www.buymeacoffee.com/interviewsage/e/30176"&gt;Detailed Written Notes on Top Facebook Behavioral Interview Questions&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-behavioral-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook Behavioral Interview
&lt;/h1&gt;

&lt;p&gt;If you have not read our first article on Top Facebook Behavioral Interview Questions, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-behavioral-interview-questions-part-1-2a0o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top Facebook Behavioral Interview Questions (Part 1)&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage „Éª May 15 „Éª 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-system-design-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook System Design Interview
&lt;/h1&gt;

&lt;p&gt;In case if you have not read our series on Cracking the Facebook System Design Interview, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-system-design-interview-questions-31np" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top Facebook System Design Interview Questions (Part 1)&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage „Éª Jan 4 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h1&gt;

&lt;p&gt;üë©‚Äçüíª &lt;a href="https://www.educative.io/courses/grokking-the-system-design-interview?aff=KQZl"&gt;Best System Design Interview Course&lt;/a&gt;&lt;br&gt;
üíª &lt;a href="https://www.educative.io/courses/grokking-the-coding-interview?aff=KQZl"&gt;Grokking the Coding Interview&lt;/a&gt;&lt;br&gt;
ü§ñ &lt;a href="https://www.educative.io/courses/grokking-the-machine-learning-interview?aff=KQZl"&gt;Best Machine Learning Interview Course&lt;/a&gt;&lt;br&gt;
üìö &lt;a href="https://smarturl.it/InterviewPrepBook"&gt;Recommended Interview Preparation Book (on Amazon)&lt;/a&gt;&lt;br&gt;
üí∞ &lt;a href="https://educative.io/TheInterviewSage"&gt;Exclusive 10% off on Educative Unlimited for first 100 users&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--121vjxPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/o2l00b1bt3nl8fdfb0nn.png" alt="Buy Me a Coffee"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;‚òïÔ∏è Buy us a Coffee at &lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;BuyMeACoffee.com/InterviewSage&lt;/a&gt;
&lt;/center&gt;



&lt;blockquote&gt;
&lt;p&gt;This article is part of the series on Behavioral Interviews at Facebook. So, follow us to get notified when our next article in this series is published. Thanks for reading! &lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__553012"&gt;
  
    .ltag__user__id__553012 .follow-action-button {
      background-color: #3b49df !important;
      color: #f9fafa !important;
      border-color: #3b49df !important;
    }
  
    &lt;a href="/theinterviewsage" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/theinterviewsage"&gt;The Interview Sage&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/theinterviewsage"&gt;Our goal is to create Software Eng Interview tutorials to help you get a job at companies like Facebook, Google, Apple, &amp;amp; Amazon. We will deep-dive into System Design, Coding, &amp;amp; Behavioral interviews.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;/blockquote&gt;

&lt;p&gt;üì∏ Some images used are from free&lt;span&gt;pik&lt;/span&gt;.com: Freepik, pch.vector, vectorjuice, pikisuperstar, raw&lt;span&gt;pixel&lt;/span&gt;.com, slidesgo, stories, Upklyak, jcomp&lt;/p&gt;

&lt;p&gt;&lt;a href="https://disclosureanddisclaimer.theinterviewsage.com/"&gt;Full Disclosure &amp;amp; Disclaimer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>career</category>
    </item>
    <item>
      <title>Build a Node.js graphQL API with NestJS and Prisma</title>
      <author>Yuval Hazaz</author>
      <pubDate>Sat, 22 May 2021 15:29:38 +0000</pubDate>
      <link>https://dev.to/yuvalhazaz/building-e-commerce-application-with-node-js-and-graphql-api-5dn5</link>
      <guid>https://dev.to/yuvalhazaz/building-e-commerce-application-with-node-js-and-graphql-api-5dn5</guid>
      <description>&lt;p&gt;Building an API requires spending too much time on boilerplate and repetitive coding. Defining the data model, connecting the database to the server, creating the API endpoints, add security and permissions layer, logging, validation, identity management, sorting, filtering, pagination... the list is long. &lt;/p&gt;

&lt;p&gt;In this post, I will show you how to create all these using Amplication. We will generate a GraphQL API for an e-commerce application, built with Node.JS, NestJS, Prisma, PostgreSQL,  and some additional great open-source technologies. &lt;/p&gt;

&lt;p&gt;Amplication is an open-source developers' platform that generates an API and a client based on your data model. It saves hours and even days of boilerplate coding. &lt;/p&gt;

&lt;p&gt;You can use the UI or a CLI to define the data model, and Amplication generates everything you need to start building your next app. The generated source code is fully readable and editable, written in TypeScript, and it even includes tests. &lt;/p&gt;

&lt;p&gt;By the end of this tutorial, you will have the source code of the backend and client, and you will be able to start writing the custom business logic of your API, or creating the coolest client application or mobile app to work with the API. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-generated-code"&gt;
  &lt;/a&gt;
  The Generated Code
&lt;/h2&gt;

&lt;p&gt;So, let's first have a high-level overview of the generated source code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H-u5yWLK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjp23cop3wycdchkg9t1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H-u5yWLK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjp23cop3wycdchkg9t1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The generated source-code shown in this post is available in &lt;a href="https://github.com/amplication/e-commerece-sample"&gt;https://github.com/amplication/e-commerece-sample&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can see that Amplication generates two separate projects for us -  "admin-ui", and "server". &lt;br&gt;
The "server" folder contains the Node.JS code for our GraphQL API, and the "admin-ui" contains the React-Admin code for an admin application that connects to the API and provides CRUD operations for all our data models.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lets-start"&gt;
  &lt;/a&gt;
  Let's Start
&lt;/h2&gt;

&lt;p&gt;For this post, I will use the CLI to create our data model. You can also use Amplication's UI to do it. &lt;/p&gt;

&lt;p&gt;To learn how to install Amplication CLI and authenticate with the server, see this doc &lt;a href="https://docs.amplication.com/docs/cli"&gt;https://docs.amplication.com/docs/cli&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Create app
amp apps:create "my-e-commerce-api" --set-current

# Create "Customer" entity
amp entities:create Customer --set-current
amp entities:fields:create "First Name"
amp entities:fields:create "Last Name"
amp entities:fields:create "Email"
amp entities:fields:create "Phone"
amp entities:fields:create "Comments"

# Create "Address" entity
amp entities:create Address --set-current
amp entities:fields:create "First Name"
amp entities:fields:create "Last Name"
amp entities:fields:create "Address 1"
amp entities:fields:create "Address 2"
amp entities:fields:create "City"
amp entities:fields:create "State"
amp entities:fields:create "Country"
amp entities:fields:create "Zip"
amp entities:fields:create "Phone"
amp entities:fields:create "Is Default"
amp entities:fields:create "Customer"

# Create "Product" entity
amp entities:create Product --set-current
amp entities:fields:create "Title"
amp entities:fields:create "Vendor"
amp entities:fields:create "Price"

# Create "Image" entity
amp entities:create Image --set-current
amp entities:fields:create "Src"
amp entities:fields:create "Width"
amp entities:fields:create "Height"
amp entities:fields:create "Product"

# Create "Order" entity
amp entities:create Order --set-current
amp entities:fields:create "Customer"
amp entities:fields:create "Address"
amp entities:fields:create "Comments"
amp entities:fields:create "Total Price"
amp entities:fields:create "User"

# Create "Line Item" entity
amp entities:create LineItem --set-current
amp entities:fields:create "Order"
amp entities:fields:create "Product"
amp entities:fields:create "Price"
amp entities:fields:create "Quantity"

# Commit the new entities and generate the code
amp apps:commit --message="create initial entities"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After executing this script, we can use Amplication's UI to see that all our data models were created, and if needed we can also change any of the settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ue1jCayT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tuug5jidmjjzlja6yawn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ue1jCayT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tuug5jidmjjzlja6yawn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it... Our source code is ready for download.&lt;/p&gt;

&lt;p&gt;We can simply click on "Download code" to get a ZIP file. &lt;/p&gt;

&lt;p&gt;Here is an example of the generated files for our customer entity, including the Customer model, DTOs, GraphQL resolver, Service, and tests. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rf9M6Wgx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jy5q7b3p3xyfugu2nno.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rf9M6Wgx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jy5q7b3p3xyfugu2nno.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is an example of the generated code for our Customer service &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BdiXz3Nv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srhdwok8629a35a2n07z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BdiXz3Nv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srhdwok8629a35a2n07z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's Next
&lt;/h2&gt;

&lt;p&gt;At this point, you can proceed in any of the following ways:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Connect to a GitHub account to automatically create a Pull Request with your source code in a Github repository. &lt;br&gt;
&lt;a href="https://docs.amplication.com/docs/sync-with-github"&gt;https://docs.amplication.com/docs/sync-with-github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the Sandbox environment provided by Amplication with a live instance of your application for further development and testing. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deploy your application in a Docker container to any server or online service. &lt;br&gt;
&lt;a href="https://docs.amplication.com/docs/deploy"&gt;https://docs.amplication.com/docs/deploy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Customize your server code&lt;br&gt;
&lt;a href="https://docs.amplication.com/docs/how-to/custom-code"&gt;https://docs.amplication.com/docs/how-to/custom-code&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build a custom client application to work with your new server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keep making changes in your data models and re-generate your application code. When connected to a GitHub account you will also get a new Pull Request with every change you make.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#try-it-now"&gt;
  &lt;/a&gt;
  Try it now
&lt;/h2&gt;

&lt;p&gt;Start using Amplication by visiting &lt;a href="https://amplication.com/"&gt;https://amplication.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#opensource"&gt;
  &lt;/a&gt;
  Open-Source
&lt;/h2&gt;

&lt;p&gt;Amplication is an open-source project.&lt;/p&gt;

&lt;p&gt;Please leave a comment and tell me what you think about it. We are also open to feature requests and suggestions on our GitHub repo&lt;br&gt;
&lt;a href="https://github.com/amplication/amplication"&gt;https://github.com/amplication/amplication&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you need support, you can reach us on our Discord channel &lt;a href="https://discord.gg/KSJCZ24vj2"&gt;https://discord.gg/KSJCZ24vj2&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>opensource</category>
      <category>graphql</category>
      <category>github</category>
    </item>
    <item>
      <title>Python if...else statements</title>
      <author>Chris Bongers</author>
      <pubDate>Sat, 22 May 2021 15:24:20 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/python-if-else-statements-2ejh</link>
      <guid>https://dev.to/dailydevtips1/python-if-else-statements-2ejh</guid>
      <description>&lt;p&gt;Since I'm still new to exploring the Python world, I thought it would be good to understand the syntax behind if...else statements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-if-statement-in-python"&gt;
  &lt;/a&gt;
  Basic if statement in Python
&lt;/h2&gt;

&lt;p&gt;Let's start by looking at a regular if statement.&lt;br&gt;
In python this will be used as the following syntax.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# do something
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You might want to check a variable for True/False, check if a number is higher/lower, or a string is a certain value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Chris"&lt;/span&gt;
&lt;span class="n"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Number is positive"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"Chris"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Chris in the building"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Boolean is true"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will result in the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Number is positive
Chris in the building
Boolean is true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#multiple-returns-for-an-if-statement"&gt;
  &lt;/a&gt;
  Multiple returns for an if statement
&lt;/h2&gt;

&lt;p&gt;The cool part about this is that we can have multiple returns by using the correct indentation.&lt;/p&gt;

&lt;p&gt;Let's say we need two lines of prints.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Number is positive"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This is a second positive line"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That will return both lines if the statement is met!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ifelse-in-python"&gt;
  &lt;/a&gt;
  If...else in python
&lt;/h2&gt;

&lt;p&gt;As you may have guessed, this also gives us an excellent opportunity to use an else statement if the if fails.&lt;/p&gt;

&lt;p&gt;The logic for that is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# do something
&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# do something else
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's try that out with a better use case.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Number is bigger then 20"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"It's a smaller number"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running this code will result in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;It's a smaller number
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#adding-another-if"&gt;
  &lt;/a&gt;
  Adding another if
&lt;/h2&gt;

&lt;p&gt;The if...else might be a good solution for static boolean checks. In most real-world examples, you might want to add a specific second, third, or more if.&lt;/p&gt;

&lt;p&gt;For that, we can use the &lt;code&gt;elif&lt;/code&gt;, which states if the previous condition was not met, try this one.&lt;br&gt;
This can still fall back to an &lt;code&gt;else&lt;/code&gt; if we define one.&lt;/p&gt;

&lt;p&gt;The logic:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# do thing 1
&lt;/span&gt;&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# do thing 2
&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# do something else
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's try that out by checking if a number is smaller or equal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"A is greater than B"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"A and B are equal"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"B is greater than A"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which will result in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A and B are equal
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This kind of &lt;code&gt;elif&lt;/code&gt; statement can be used multiple times.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>Roundup of my Accessibility Resources</title>
      <author>Stephanie Eckles</author>
      <pubDate>Sat, 22 May 2021 15:17:16 +0000</pubDate>
      <link>https://dev.to/5t3ph/roundup-of-my-accessibility-resources-3ijd</link>
      <guid>https://dev.to/5t3ph/roundup-of-my-accessibility-resources-3ijd</guid>
      <description>&lt;p&gt;May 20 was Global Accessibility Awareness Day (#GAAD) and turns out - I created quite a bit of content about digital accessibility (a11y) last year!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-and-accessibility"&gt;
  &lt;/a&gt;
  CSS and Accessibility
&lt;/h2&gt;

&lt;p&gt;CSS can strongly impact accessibility. Learn ways you can use CSS to improve accessibility by reviewing this tutorial covering:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Focus Visibility&lt;/li&gt;
&lt;li&gt;Focus vs. Source Order&lt;/li&gt;
&lt;li&gt;Zoom and Reflow&lt;/li&gt;
&lt;li&gt;Sizing Targets&lt;/li&gt;
&lt;li&gt;Respecting User Settings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://ModernCSS.dev/a11y-css"&gt;Read more on ModernCSS &amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#color-contrast-and-interactive-elements"&gt;
  &lt;/a&gt;
  Color Contrast and Interactive Elements
&lt;/h2&gt;

&lt;p&gt;Despite high general awareness of color contrast for a11y, what can be missed is how to handle contrast across &lt;em&gt;states&lt;/em&gt; of interactive elements, like buttons.&lt;/p&gt;

&lt;p&gt;Learn more about button contrast and generate an accessible palette with the help of &lt;a href="https://buttonbuddy.dev"&gt;ButtonBuddy.dev&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#practice-evaluating-inaccessible-experiences"&gt;
  &lt;/a&gt;
  Practice Evaluating Inaccessible Experiences
&lt;/h2&gt;

&lt;p&gt;So, what does an &lt;em&gt;inaccessible&lt;/em&gt; experience look like?&lt;/p&gt;

&lt;p&gt;Try out evaluating &lt;a href="https://a11y-fails.netlify.app"&gt;this test site&lt;/a&gt; (motion warning).&lt;/p&gt;

&lt;p&gt;And then practice identifying and submitting a review of issues by &lt;a href="https://github.com/5t3ph/a11y-fails"&gt;opening a PR into the project&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automate-generating-accessible-color-palettes"&gt;
  &lt;/a&gt;
  Automate Generating Accessible Color Palettes
&lt;/h2&gt;

&lt;p&gt;Selecting a color contrast safe palette &lt;em&gt;used&lt;/em&gt; to be what I spent a significant amount of time on.&lt;/p&gt;

&lt;p&gt;The a11y-color-tokens package automates developing contrast safe text and background color pairs. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/a11y-color-tokens"&gt;More info and package download &amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-accessible-crossbrowser-form-styles"&gt;
  &lt;/a&gt;
  Create Accessible, Cross-Browser Form Styles
&lt;/h2&gt;

&lt;p&gt;Forms rule the web, &amp;amp; can quickly create accessibility issues, too. HTML semantics &amp;amp; carefully applied CSS are required for accessible form inputs.&lt;/p&gt;

&lt;p&gt;Learn how to develop cross-browser, accessible form styles with my &lt;a href="//5t3ph.dev/a11y-forms"&gt;full egghead.io video course&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-about-common-a11y-failures"&gt;
  &lt;/a&gt;
  Learn About Common a11y Failures
&lt;/h2&gt;

&lt;p&gt;On the podcast I co-host - &lt;a href="https://wordwrap.dev"&gt;Word Wrap&lt;/a&gt; - we did a two-part mini-series on a11y topics you might be missing that apply to &lt;em&gt;all&lt;/em&gt; websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wordwrap.dev/episodes/008/"&gt;Common Accessibility Failures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wordwrap.dev/episodes/009/"&gt;WCAG Success Criteria You May Not Be Meeting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Drop a comment of your favorite accessibility resources, or something you learned from these!&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>a11y</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>My experience skimming the cutting-edge dream front-end stack</title>
      <author>joon</author>
      <pubDate>Sat, 22 May 2021 15:14:06 +0000</pubDate>
      <link>https://dev.to/fly/my-experience-skimming-the-cutting-edge-dream-front-end-stack-46ka</link>
      <guid>https://dev.to/fly/my-experience-skimming-the-cutting-edge-dream-front-end-stack-46ka</guid>
      <description>&lt;p&gt;Probably going to be a quick and messy post. More of a dev log. Keep this in mind and try to bear with me.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;TLDR; I tried using Vite + svelte + tailwind stack. As a React / Nextjs developer, I don't think I'll be using vite with svelte or either separately anytime soon.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A backend co-worker introduced &lt;a href="https://news.ycombinator.com/item?id=26972400"&gt;this post&lt;/a&gt; a few weeks ago and since then I had vite under my radar for a bit.&lt;/p&gt;

&lt;p&gt;Quite recently I started experiencing performance issues in my code and I started to wonder whether ditching React for svelte in high-frequency data handling required scenarios might be a good idea. (The performance issues were resolved by throttling renders so it wasn't really necessary)&lt;/p&gt;

&lt;p&gt;And suddenly on a Saturday night, I thought 'f* it, let's give it a go'&lt;/p&gt;

&lt;p&gt;I literally copy &amp;amp; pasted &lt;a href="https://github.com/codechips/svelte-typescript-setups/tree/master/svelte-vite-typescript"&gt;this code&lt;/a&gt; added all the dependencies via the CLI to use the latest ones, fixed some settings here and there until finally &lt;code&gt;yarn dev&lt;/code&gt; displayed the following.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---9oYoNfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iblcwaezn0uvc021p88p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---9oYoNfp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iblcwaezn0uvc021p88p.png" alt="Vite speeds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vite-is-fast-but"&gt;
  &lt;/a&gt;
  Vite is fast. But...
&lt;/h3&gt;

&lt;p&gt;Comparing the time for the website to appear from the moment I press enter on &lt;code&gt;yarn dev&lt;/code&gt;? Not really. You know that animated circle next to the tab that goes round and round in a mesmerizing way when the site is loading? It took that exactly 4 cycles for a very simple site to load. Honestly, I think my nextjs setup would've been faster. (I presume that the speeds could increase in scale, but I wasn't willing to test that)&lt;/p&gt;

&lt;p&gt;Obviously, it was not a properly tested benchmark but just a 'feeling' - but whether or not this 'feeling' was misplaced or not, conclusively I didn't really feel like the hassle of switching was worth it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#and-worst-of-all"&gt;
  &lt;/a&gt;
  and worst of all
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;11:46:54 PM [vite] Internal server error: No parent could be found
  Plugin: vite:css
  File: /Users/my-directory/svelte-vite-ts-tailwind/src/Wisdom.svelte?svelte&amp;amp;type=style&amp;amp;lang.css
      at /Users/my-directory/svelte-vite-ts-tailwind/src/Wisdom.svelte?svelte&amp;amp;type=style&amp;amp;lang.css:1:188
      at findParent (/Users/my-directory/svelte-vite-ts-tailwind/node_modules/tailwindcss/lib/lib/substituteClassApplyAtRules.js:218:9)
      at /Users/my-directory/svelte-vite-ts-tailwind/node_modules/tailwindcss/lib/lib/substituteClassApplyAtRules.js:228:33
      at /Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:151:16
      at /Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:74:18
      at AtRule.each (/Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:60:16)
      at AtRule.walk (/Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:71:17)
      at /Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:79:24
      at Root.each (/Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:60:16)
      at Root.walk (/Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:71:17)
      at Root.walkAtRules (/Users/my-directory/svelte-vite-ts-tailwind/node_modules/postcss/lib/container.js:149:17)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;what?&lt;/em&gt; I had no idea what to do with this error and the stack trace did 0 help.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.google.com/search?q=vite+css+Internal+server+error%3A+No+parent+could+be+found&amp;amp;oq=vite+css+Internal+server+error%3A+No+parent+could+be+found&amp;amp;aqs=chrome..69i57.1125j0j1&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;Google?&lt;/a&gt;&lt;br&gt;
not really helpful at all.&lt;/p&gt;

&lt;p&gt;It wasn't hard to land at my personal conclusion - vite may or may not have amazing DX perks speed-wise at scale, but realistically speaking, it's not going to reduce dev times but increase it at its current state.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-tailwind"&gt;
  &lt;/a&gt;
  About tailwind
&lt;/h3&gt;

&lt;p&gt;Since I &lt;a href="https://dev.to/fly/i-front-end-and-hate-css-here-s-how-i-deal-with-it-3na7"&gt;personally hate css&lt;/a&gt;, ever since I tried tailwind I've never looked back - it's a godsend imo. Use it whenever possible if you're like me.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-svelte"&gt;
  &lt;/a&gt;
  About Svelte
&lt;/h3&gt;

&lt;p&gt;This is a &lt;strong&gt;very&lt;/strong&gt; biased opinion coming from a React/Nextjs fanatic. So svelte doesn't seem to even want to support multiple components in a single file - &lt;a href="https://github.com/sveltejs/svelte/issues/2940"&gt;link&lt;/a&gt;. And I respect that. But personally I think file splitting should be an option and not mandatory. And the second I saw that it wasn't possible, it was a red flag for me.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PLn-8CCc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nbn2xxcidpgdv2mvv32.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PLn-8CCc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nbn2xxcidpgdv2mvv32.png" alt="Screen Shot 2021-05-23 at 12.09.11 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, the syntax personally felt very alien but this is obviously due to myself being too accustomed to React's syntax. But the &lt;code&gt;await - then&lt;/code&gt; syntax above looked awesome for quick prototyping. Other than that, I haven't looked too deep into svelte to give any other opinion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up.
&lt;/h3&gt;

&lt;p&gt;Svelte's speed benefits? I'm sure they're plenty. But I think I'll manage atm.&lt;/p&gt;

&lt;p&gt;Vite? Until the majority of probably frequent errors show up on the first page of search results on google - No.&lt;/p&gt;

&lt;p&gt;I think I'll stick to nextjs/tailwind for the time being.&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>vite</category>
      <category>tailwindcss</category>
      <category>devjournal</category>
    </item>
  </channel>
</rss>
