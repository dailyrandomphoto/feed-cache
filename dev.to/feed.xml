<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Happy LGBTQIA+ Pride Month! ‚ù§Ô∏è </title>
      <author>dev.to staff</author>
      <pubDate>Tue, 01 Jun 2021 15:56:55 +0000</pubDate>
      <link>https://dev.to/devteam/happy-lgbtqia-pride-month-1j7b</link>
      <guid>https://dev.to/devteam/happy-lgbtqia-pride-month-1j7b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#its-finally-one-of-our-favorite-times-of-the-year-pride-month"&gt;
  &lt;/a&gt;
  It's finally one of our favorite times of the year ‚Äî Pride Month! üåà
&lt;/h2&gt;

&lt;p&gt;As many of you know, every year in June*, many countries around the world celebrate the diverse spectrum of LGBTQIA+ individuals and the great strides and sacrifices they have made throughout history to be seen, heard, respected, and safe to live life authentically. Many of our friends, family members, mentors, colleagues, and role models are members of the LGBTQIA+ community ‚Äî many of you here on DEV are as well! &lt;/p&gt;

&lt;p&gt;This month and always, we honor and celebrate alongside you.&lt;/p&gt;

&lt;p&gt;You also might remember that in previous years, we have celebrated Pride Month by collecting stories from our LGBTQIA+ community members. We're continuing this tradition in 2021 with an added focus on amplifying organizations already doing important work with and for LGBTQIA+ individuals. Read on to find out how you can celebrate Pride Month with us...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pride-month-at-dev"&gt;
  &lt;/a&gt;
  Pride Month at DEV
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-share-your-story-amp-hear-from-others"&gt;
  &lt;/a&gt;
  1. Share Your Story &amp;amp; Hear From Others
&lt;/h3&gt;

&lt;p&gt;If you identify as an LGBTQIA+ individual and you'd like to share your experience as a person in software development, we'd love to hear from you. &lt;a href="https://dev.to/new/devpride"&gt;This template&lt;/a&gt; is here to use as a jumping-off point, but please feel free to start from scratch if you prefer! Just remember to use the tag &lt;a href="//dev.to/t/devpride"&gt;#devpride&lt;/a&gt; so we can find (and share!) your post easily. When you're done, we'd love if you could drop the link to your post in the comments below (hint: use the DEV post liquid tag to embed your work) ‚ù§Ô∏è &lt;/p&gt;

&lt;p&gt;If you are an ally, we encourage you to keep an eye on this tag throughout the month and learn more about the experiences of the LGBTQIA+ community members here on DEV.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-learn-about-lgbtqia-organizations-doing-amazing-work"&gt;
  &lt;/a&gt;
  2. Learn About LGBTQIA+ Organizations Doing Amazing Work
&lt;/h3&gt;

&lt;p&gt;We also wanted to make some space in this year's Pride Month celebration to recognize several organizations doing fantastic work with and for LGBTQIA+ folks in tech. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here is a list of tech-focused LGBTQIA+ organizations we respect ‚Äî and a bit about how they are celebrating Pride Month.&lt;/em&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#out-in-tech"&gt;
  &lt;/a&gt;
  &lt;a href="https://outintech.com/"&gt;Out in Tech&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;is a nonprofit organization dedicated to uniting the LGBTQIA+ tech community by creating opportunities for members to advance their careers, grow their networks, and use technology for good. They place a unique emphasis on kindness, knowledge, belonging, and joy. &lt;/p&gt;

&lt;p&gt;In honor of Pride Month, Out in Tech is hosting "Out in Tech Pride" ‚Äî an event focused on building equity in tech through courage and conviction. They will be celebrating some of their favorite LGBTQIA+ and allied tech leaders across streaming, retail, fintech, and other industries. &lt;/p&gt;

&lt;p&gt;&lt;a href="http://outintech.com/pride"&gt;&amp;gt;&amp;gt;Learn more about Out in Tech's Pride celebration here&lt;/a&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lesbians-who-tech-amp-allies"&gt;
  &lt;/a&gt;
  &lt;a href="https://lesbianswhotech.org/"&gt;Lesbians Who Tech &amp;amp; Allies&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;is a community of LGBTQIA+ women, non-binary, and trans individuals in technology. Their goals are to become more visible to and connected with one another and encourage more women, queer folks, trans individuals, and Black and Brown people to join the tech field. Lesbians Who Tech welcomes allies to join and support their organization, too! &lt;/p&gt;

&lt;p&gt;In celebration of Pride Month, Lesbians Who Tech &amp;amp; Allies is hosting "(Not IRL) Pride Summit" ‚Äî a 5-day virtual event focused on enhancing their leadership and technical skills and discussing ways we can do better as global citizens fighting oppression. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://lesbianswhotech.org/pridesummit2021/"&gt;&amp;gt;&amp;gt;Learn more about Lesbians Who Tech &amp;amp; Allies' Pride Summit here&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#start-out"&gt;
  &lt;/a&gt;
  Start Out
&lt;/h4&gt;

&lt;p&gt;is a nonprofit dedicated to growing the number of LGBTQIA+ entrepreneurs in tech and other fields, while increasing their diversity, impact, and empowerment. &lt;/p&gt;

&lt;p&gt;Start Out has many events throughout the year. For Pride Month, the organization is hosting a "Wine Down Wednesday'' event on June 30th ‚Äî a Pride-themed virtual networking opportunity for LGBTQIA+ founders and innovators. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.eventbrite.com/e/networking-community-presents-wine-down-wednesday-tickets-152441758403"&gt;&amp;gt;&amp;gt;Learn more about Start Out's ‚ÄúWine Down Wednesday (Pride-Edition)‚Äù Event here&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#trans-tech-social-enterprises"&gt;
  &lt;/a&gt;
  Trans Tech Social Enterprises
&lt;/h4&gt;

&lt;p&gt;is an incubator for LGBTQIA+ talent. TransTech's work is dedicated to empowering trans, lesbian, gay, bisexual, and queer people and allies with practical, career-ready skills and economic empowerment. Its members have access to a vibrant digital community, training series, and co-working spaces in Chicago, Illinois.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.transtechsocial.org/training/"&gt;&amp;gt;&amp;gt;In honor of Pride Month, we invite you to explore TTSE‚Äôs on-demand training options&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feel free to comment with any other meetups, groups, networks, and/or organizations focused on making technology more friendly and accessible for LGBTQIA+ folks.&lt;/strong&gt; You can also create a &lt;a href="//dev.to/listings"&gt;DEV Listing&lt;/a&gt; to broadcast any events that you or your company/organization are hosting and embed them in this thread.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#a-very-happy-pride-month-to-all-in-the-comments-below-wed-love-if-you-shared"&gt;
  &lt;/a&gt;
  &lt;strong&gt;A very happy Pride Month to all!&lt;/strong&gt; In the comments below, we'd love if you shared...
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Links to your &lt;a href="https://dev.to/new/devpride"&gt;Pride stories&lt;/a&gt; (‚Äì don‚Äôt forget to use the DEV post liquid tag!)&lt;/li&gt;
&lt;li&gt;Any other LGBTQIA+ organizations we should know about&lt;/li&gt;
&lt;li&gt;Links to Pride Month/LGBTQIA+ DEV Listings for events/initiatives you or your company/organization are hosting&lt;/li&gt;
&lt;li&gt;Any other thoughts you have about this important global celebration &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;*We would also like to acknowledge that while Pride Month does take place in June for a host of countries, many celebrate it during other months of the year. We learned so much about when and how different countries and regions celebrate Pride from &lt;a href="https://www.iglta.org/Events/Gay-Pride-Calendar"&gt;this calendar&lt;/a&gt;. Check it out!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here's to LGBTQIA+ Pride üíú &lt;/p&gt;

</description>
      <category>devpride</category>
    </item>
    <item>
      <title>Understand Polymorphism once for all</title>
      <author>Mateo Cerquetella</author>
      <pubDate>Tue, 01 Jun 2021 15:44:49 +0000</pubDate>
      <link>https://dev.to/mateocerquetella/understand-polymorphism-once-for-all-4po</link>
      <guid>https://dev.to/mateocerquetella/understand-polymorphism-once-for-all-4po</guid>
      <description>&lt;p&gt;The main reason for using interfaces is to achieve polymorphism and to provide developers with the ability to implement interface methods in their own way in the future.&lt;/p&gt;

&lt;p&gt;In this example I will use TypeScript and I will put the repository at the end of the note&lt;/p&gt;

&lt;p&gt;Suppose we have an interface and three classes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0oVbLVu2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cn3ocgbfbn4n8ncc3b7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0oVbLVu2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cn3ocgbfbn4n8ncc3b7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the connector interface.&lt;/p&gt;

&lt;p&gt;Now we are going to implement the Wifi communication.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7fpZw_fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mnzvistko2uy5cfcv22b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7fpZw_fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mnzvistko2uy5cfcv22b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we have developed our concrete class called WifiConnector which has its own implementation of type Connector.&lt;/p&gt;




&lt;p&gt;Now we are creating our System which has a Connector component. This is called dependency injection.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aaNvLJaw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kklf9jlkzs835v31expf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aaNvLJaw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kklf9jlkzs835v31expf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#lets-look-at-this-line-of-code-"&gt;
  &lt;/a&gt;
  Let's look at this line of code ...
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BL9kFv8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5bv3eg9ia2ccylaoitn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BL9kFv8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5bv3eg9ia2ccylaoitn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connector is an interface and must have the method doConnect().&lt;/p&gt;

&lt;p&gt;Now, since Connector is an interface, the System class has much more flexibility.&lt;/p&gt;

&lt;p&gt;We can pass any type that has implemented the Connector interface.&lt;br&gt;
In the future, the developer will achieve more flexibility.&lt;/p&gt;




&lt;p&gt;For example, now the developer wants to add a Bluetooth  connection module:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HsMzfubu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hi92hzcrf4uoo9zg25dc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HsMzfubu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hi92hzcrf4uoo9zg25dc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We see that WifiConnector and BluetoothConnector have their own implementation.&lt;br&gt;
There is a different way to connect.&lt;/p&gt;

&lt;p&gt;So we can pass any of them to the System class as a constructor parameter. This is called polymorphism.&lt;/p&gt;

&lt;p&gt;The System class is now not aware of whether it is Bluetooth or Wifi. We can even add another communication module such as Infrared, Bluetooth5 and whatever, simply by implementing the Connector interface.&lt;/p&gt;

&lt;p&gt;This is called &lt;a href="https://en.wikipedia.org/wiki/Duck_typing"&gt;&lt;strong&gt;Duck Typing&lt;/strong&gt;&lt;/a&gt;. The connector type is now dynamic since doConnect() is just a placeholder and the developer implements it as their own.&lt;/p&gt;

&lt;p&gt;Here is the &lt;a href="https://github.com/MateoCerquetella/polymorphism-ts"&gt;&lt;strong&gt;repository&lt;/strong&gt;&lt;/a&gt; in case you need it and thanks for reading!&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>polymorphism</category>
      <category>programming</category>
      <category>oop</category>
    </item>
    <item>
      <title>Every Icon you need in reactJS project. ft. react-icons</title>
      <author>Mohammed Nadeem Shareef</author>
      <pubDate>Tue, 01 Jun 2021 15:44:40 +0000</pubDate>
      <link>https://dev.to/shareef/every-icon-you-need-in-reactjs-project-ft-react-icons-48ao</link>
      <guid>https://dev.to/shareef/every-icon-you-need-in-reactjs-project-ft-react-icons-48ao</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-developers"&gt;
  &lt;/a&gt;
  Hello Developers üëãüëãüëã
&lt;/h2&gt;

&lt;p&gt;I just wanna share an awesome library(or whatever it is called) for &lt;strong&gt;Icons&lt;/strong&gt; in &lt;strong&gt;ReactJS&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reacticons"&gt;
  &lt;/a&gt;
  React-Icons
&lt;/h3&gt;

&lt;p&gt;React-Icons enables you to use famous icon provider's icons in React component format.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;React Icons have Icons from&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Font Awesome&lt;/li&gt;
&lt;li&gt;Heroicons&lt;/li&gt;
&lt;li&gt;Typicons&lt;/li&gt;
&lt;li&gt;VS Code Icons&lt;/li&gt;
&lt;li&gt;css.gg&lt;/li&gt;
&lt;li&gt;And a lot.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#show-me-the-code"&gt;
  &lt;/a&gt;
  Show me the code ü§ìü§ìü§ì
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    npm install react-icons --save
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;IconName&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-icons/Icon-Provider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;HiAcademicCap&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-icons/hi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And it will give you something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;HiAcademicCap&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And Kabooom! You have your Icon.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customizing-icons"&gt;
  &lt;/a&gt;
  Customizing Icons
&lt;/h3&gt;

&lt;p&gt;We have few options to play around also&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;size&lt;/li&gt;
&lt;li&gt;color&lt;/li&gt;
&lt;li&gt;style&lt;/li&gt;
&lt;li&gt;className&lt;/li&gt;
&lt;li&gt;And some-others&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;let's see the code in action&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;HiAcademicCap&lt;/span&gt;
        &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"blue"&lt;/span&gt;
        &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"3rem"&lt;/span&gt;
        &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"black-color"&lt;/span&gt;
    &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Here, first preferance will be given to &lt;strong&gt;style&lt;/strong&gt; color (red)&lt;/li&gt;
&lt;li&gt;Then to &lt;strong&gt;color&lt;/strong&gt; property(blue), then to the color in our &lt;strong&gt;className&lt;/strong&gt; (black)&lt;/li&gt;
&lt;li&gt;To increse the side we have &lt;strong&gt;size&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#enjoylearning"&gt;
  &lt;/a&gt;
  EnjoyLearning.
&lt;/h1&gt;

&lt;p&gt;Closing here üëãüëãüëã&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is &lt;strong&gt;Shareef&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://github.com/shareef99"&gt;GitHub&lt;/a&gt;&lt;br&gt;
My &lt;a href="https://portfolio.shareef.vercel.app/"&gt;Portfolio&lt;/a&gt;&lt;br&gt;
Twitter &lt;a href="https://twitter.com/shareefBhai99"&gt;ShareefBhai99&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/nadeem-shareef-7a8394182/"&gt;Linkedin&lt;/a&gt;&lt;br&gt;
&lt;a href="https://react-icons.github.io/react-icons/"&gt;React-Icons&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>react</category>
      <category>reacticons</category>
      <category>webdev</category>
      <category>icons</category>
    </item>
    <item>
      <title>High Performance Images: 2021 Guide</title>
      <author>Todd H. Gardner</author>
      <pubDate>Tue, 01 Jun 2021 15:37:07 +0000</pubDate>
      <link>https://dev.to/requestmetrics/high-performance-images-2021-guide-48g8</link>
      <guid>https://dev.to/requestmetrics/high-performance-images-2021-guide-48g8</guid>
      <description>&lt;p&gt;Images engage users, drive clicks, and generally make everything better--&lt;em&gt;except performance&lt;/em&gt;. Images are giant blobs of bytes that are usually the slowest part of your website. This 2021 guide has everything you need to know for fast images on the web.&lt;/p&gt;

&lt;p&gt;Images are big. Really big. The bytes required for an image dwarf most site's CSS and JavaScript assets. Slow images will &lt;strong&gt;damage your Core Web Vitals&lt;/strong&gt;, impacting your SEO and costing you traffic. Images are usually the element driving &lt;a href="https://requestmetrics.com/web-performance/largest-contentful-paint"&gt;Largest Contentful Paint (LCP)&lt;/a&gt; and load delays can increase your &lt;a href="https://requestmetrics.com/web-performance/cumulative-layout-shift"&gt;Cumulative Layout Shift (CLS)&lt;/a&gt;. If you're not familiar with these metrics, check them out in the &lt;strong&gt;&lt;a href="https://requestmetrics.com/web-performance/measure-web-performance"&gt;Definitive Guide to Measuring Web Performance&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This guide covers optimizing your &lt;em&gt;image format&lt;/em&gt;, &lt;em&gt;resolution&lt;/em&gt;, &lt;em&gt;quality&lt;/em&gt;, as well as &lt;em&gt;embedded images&lt;/em&gt; and &lt;em&gt;lazy-loading&lt;/em&gt;. Let's get started!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-image-format"&gt;
  &lt;/a&gt;
  1. Image Format
&lt;/h2&gt;

&lt;p&gt;First and foremost, your images need to be in the correct format. Image formats are designed for a particular &lt;em&gt;kind&lt;/em&gt; of image, so using the wrong format can make a big image even worse.&lt;/p&gt;

&lt;p&gt;A good general rule is to &lt;strong&gt;use jpg for photographs&lt;/strong&gt; and &lt;strong&gt;use pngs for graphics&lt;/strong&gt;. Here's a quick example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ssGM6RLM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqqaw43qslc9mafid8v1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ssGM6RLM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqqaw43qslc9mafid8v1.png" alt="Sloth Photograph and Graphic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the left is a photograph of our buddy Sam, the sloth. As a JPG, the file is only &lt;strong&gt;32.7 kilobytes&lt;/strong&gt;. Convert the same file to a PNG, and it more than doubles to &lt;strong&gt;90.6 kilobytes&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;The right is an illustration of Sam, and is better served as a PNG. It's only &lt;strong&gt;5.5 kilobytes&lt;/strong&gt;. But converting it to a JPG balloons it to &lt;strong&gt;11.3 kilobytes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Note that graphic illustrations tend to be significantly smaller than photographs. Be sure to consider this when designing the look and feel of your pages.&lt;/p&gt;

&lt;p&gt;There's &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types"&gt;lots of other formats too&lt;/a&gt;! If you have artwork as vectors (lines and paths), SVG is a perfect format. Newer browsers support newer formats as well, like AVIF and WebP, which might be even smaller.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-responsive-image-resolution"&gt;
  &lt;/a&gt;
  2. Responsive Image Resolution
&lt;/h2&gt;

&lt;p&gt;Your website will not be viewed the same way by everyone. Some of your users will have a huge 1600px wide display. Others may have a 900px tablet or a 600px phone. A 1200px wide image would need a lot of wasteful bytes for those smaller devices, where the image will get scaled down anyway.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CnLuApR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgz4le7hc8krypqbh5u9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CnLuApR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgz4le7hc8krypqbh5u9.png" alt="Responsive Image Resolution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why not scale down the images &lt;em&gt;before&lt;/em&gt; your users download them? Use &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images"&gt;HTML responsive attributes&lt;/a&gt; to describe the sizes available for an image, and when to use them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"picture-1200.jpg"&lt;/span&gt;
  &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"picture-600.jpg   600w,
          picture-900.jpg   900w,
          picture-1200.jpg 1200w"&lt;/span&gt;
  &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 900px) 100vw, 1200px"&lt;/span&gt;
  &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"my awesome picture"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"900"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1200"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, the base image is 1200px wide, and that's also the default &lt;code&gt;src&lt;/code&gt;. The &lt;code&gt;srcset&lt;/code&gt; defines 3 images at 600, 900, and 1200px wide. The &lt;code&gt;sizes&lt;/code&gt; uses CSS media queries to hint the browser on the viewable size available for the image. If the window is less than 900px wide, the frame will be fullwidth, 100vw. Otherwise, the frame will never be bigger than 1200px wide.&lt;/p&gt;

&lt;p&gt;Most image tools, like Photoshop, &lt;a href="https://www.gimp.org/"&gt;Gimp&lt;/a&gt;, and &lt;a href="https://www.getpaint.net/"&gt;Paint.NET&lt;/a&gt;, can export images at multiple resolutions. Your native image viewer can probably do some limited resizing as well. To automate this on a large scale, you may want to consider a command line tool like &lt;a href="https://imagemagick.org/index.php"&gt;ImageMagick&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hiding-images-on-mobile"&gt;
  &lt;/a&gt;
  Hiding Images on Mobile
&lt;/h3&gt;

&lt;p&gt;For some websites, you may not want to show an image on mobile devices at all because they are simply too big. Setting a &lt;code&gt;display:none&lt;/code&gt; style on the image isn't very helpful because the browser will still waste time and bytes downloading the image. Instead, you can use &lt;code&gt;sizes&lt;/code&gt; to tell the browser when the image will not be shown.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"picture-1200.jpg"&lt;/span&gt;
  &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"picture-600.jpg   600w,
          picture-900.jpg   900w,
          picture-1200.jpg 1200w"&lt;/span&gt;
  &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 600px) 0, 600px"&lt;/span&gt;
  &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"my awesome picture"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"900"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1200"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For screen sizes less than 600px, the frame of the image is 0px wide. So the browser knows it doesn't have to bother downloading anything because there is nothing to show.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-image-quality"&gt;
  &lt;/a&gt;
  3. Image Quality
&lt;/h2&gt;

&lt;p&gt;Aside from image format and resolution, there are often settings to adjust the &lt;em&gt;quality&lt;/em&gt; of the image using &lt;strong&gt;lossy compression&lt;/strong&gt;. These are algorithms that remove parts of an image that you wouldn't notice, but still take up space. Check out this example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Laq8rnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zffck8pzyfofua1hbleu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Laq8rnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zffck8pzyfofua1hbleu.png" alt="Image Optimization"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This reduction is accomplished by pulling out unused colors, or by combining colors and pixels that too similar to notice. But you don't need to worry about that, most optimization tools can detect the appropriate level of quality for an image. &lt;a href="https://tinypng.com/"&gt;TinyPNG&lt;/a&gt; and &lt;a href="https://github.com/imagemin/imagemin"&gt;ImageMin&lt;/a&gt; are great for this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-embedding-images"&gt;
  &lt;/a&gt;
  4. Embedding Images
&lt;/h2&gt;

&lt;p&gt;Sometimes an image is essential for a webpage to be useful, such as a button, logo, or icon. Once you've optimized it as small as you can make it, the only way to go faster is to &lt;em&gt;embed the image on the page&lt;/em&gt;. This will save a network request and show an image as soon as the document starts rendering.&lt;/p&gt;

&lt;p&gt;You embed an image by converting it into a &lt;em&gt;base64 string&lt;/em&gt; and putting it right in the html tag, like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wIvCB-WD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1utzcbzyua3wvvizneg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wIvCB-WD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1utzcbzyua3wvvizneg.png" alt="Base64 Embedded Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This may look strange, but it's 100% supported as a &lt;em&gt;data url&lt;/em&gt;. The &lt;code&gt;src&lt;/code&gt; defines the format as a PNG image thats base64 encoded. The remainder is the actual contents of the image, in this case a small red dot.&lt;/p&gt;

&lt;p&gt;Google uses embedded images frequently in the display of search results. One of the many reasons Google feels so fast. &lt;a href="https://requestmetrics.com/web-performance/performance-profiling-google"&gt;Check out our review of Google's performance&lt;/a&gt; and what you can learn from it.&lt;/p&gt;

&lt;p&gt;Here's a &lt;a href="https://www.base64-image.de/"&gt;handy web tool for converting your images to base64&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-lazyloading-images"&gt;
  &lt;/a&gt;
  5. Lazy-Loading Images
&lt;/h2&gt;

&lt;p&gt;Websites have a lot of images that don't need to be loaded right away. But the browser doesn't know what images it will need, so its gotta download them all! Downloading the extra images creates lag and network congestion that slows down the critical images.&lt;/p&gt;

&lt;p&gt;Instead, tell the browser to be lazy! Lazy-loading is a technique to tell the browser to wait to download certain images until they are visible to the user. This can have &lt;em&gt;huge&lt;/em&gt; impacts to &lt;a href="https://requestmetrics.com/web-performance/largest-contentful-paint"&gt;Largest Contentful Paint (LCP)&lt;/a&gt; performance because the browser can focus on the critical elements to render.&lt;/p&gt;

&lt;p&gt;The HTML spec is experimenting with a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-loading"&gt;&lt;code&gt;loading&lt;/code&gt; attribute&lt;/a&gt; for lazy-loading images, but it is still experimental. Safari doesn't support it yet, so it's not particularly useful for most websites yet. Fortunately, &lt;em&gt;we can do it with JavaScript!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There are a few lazy-loading libraries, like &lt;a href="https://github.com/aFarkas/lazysizes"&gt;lazysizes&lt;/a&gt;. These libraries handle a lot of the edge cases and browser compatibility of doing this, but essentially they run code like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;lazyEls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[].&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;[data-src]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;lazyObserver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;IntersectionObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isIntersecting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;data-src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;lazyObserver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unobserve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;lazyEls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;lazyObserver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code uses the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"&gt;IntersectionObserver&lt;/a&gt; to detect when an element is visible. When an image is visible, it moves the &lt;code&gt;data-src&lt;/code&gt; attribute to &lt;code&gt;src&lt;/code&gt;, and the image downloads. You can apply the same pattern to &lt;code&gt;srcset&lt;/code&gt; and for any number of elements.&lt;/p&gt;

&lt;p&gt;You utilize this by renaming the &lt;code&gt;src&lt;/code&gt; attribute to &lt;code&gt;data-src&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;data-src=&lt;/span&gt;&lt;span class="s"&gt;"picture-1200.jpg"&lt;/span&gt;
  &lt;span class="na"&gt;loading=&lt;/span&gt;&lt;span class="s"&gt;"lazy"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lazy"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This markup uses both the experimental &lt;code&gt;loading&lt;/code&gt; attribute as well as the generic attribute we can use with a JavaScript function or library.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#layout-sizing"&gt;
  &lt;/a&gt;
  Layout Sizing
&lt;/h3&gt;

&lt;p&gt;With late-loading images, it is even more important to specify the sizing of images to prevent &lt;em&gt;Layout Shift&lt;/em&gt;. Layout shifts are when the positioning of elements changes during load because of dynamically sized content. &lt;a href="https://requestmetrics.com/web-performance/cumulative-layout-shift"&gt;Read more about layout shift and the impact on performance&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You prevent this by specifying a &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; attribute on your images.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;data-src=&lt;/span&gt;&lt;span class="s"&gt;"picture-1200.jpg"&lt;/span&gt;
  &lt;span class="na"&gt;loading=&lt;/span&gt;&lt;span class="s"&gt;"lazy"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"lazy"&lt;/span&gt;
  &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1200"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"900"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that the height and width attributes. It's not 1200px, it's just 1200. It also doesn't do exactly what you'd expect--the size of this element will not necessarily be 1200x900, it will be whatever the CSS styling and layout says it needs to be. But the browser remembers the &lt;em&gt;aspect ratio&lt;/em&gt; from these attributes so that the height of an image will be correct given it's width.&lt;/p&gt;

&lt;p&gt;So if your layout only has 800px wide for the image, the browser will know, without downloading the image, to reserve 600px of height as well to maintain the aspect ratio.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;These techniques will greatly speed your website and images. The correct format, resolution, quality, and load order for your images can transform the end user experience of your website for the better. Not sure how users see your website today? Try out &lt;a href="https://requestmetrics.com/"&gt;performance monitoring from Request Metrics&lt;/a&gt; to track your real-user performance metrics.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>performance</category>
    </item>
    <item>
      <title>Organizing my life with Todoist</title>
      <author>Tyler V. (he/him)</author>
      <pubDate>Tue, 01 Jun 2021 15:36:32 +0000</pubDate>
      <link>https://dev.to/terabytetiger/organizing-my-life-with-todoist-49lo</link>
      <guid>https://dev.to/terabytetiger/organizing-my-life-with-todoist-49lo</guid>
      <description>&lt;p&gt;For the month of May, I wanted to commit myself to doing something I've been trying to ease into for a while now - finding a better way to manage my To-do list than pen/paper. &lt;/p&gt;

&lt;p&gt;I've tried slowly migrating from paper to digital in the past, leaving myself with the mess of having to compare the physical and digital lists to determine what I should be working on. &lt;/p&gt;

&lt;p&gt;So for May, I'm diving in and going all digital with &lt;a href="https://todoist.com/"&gt;Todoist&lt;/a&gt; - even if this ends up not being the perfect platform for me long-term, I want to stay with a single platform for the whole month just for testing purposes. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-0"&gt;
  &lt;/a&gt;
  Week 0
&lt;/h2&gt;

&lt;p&gt;The first part of this experiment was to get things set up for my newly more digital lifestyle. I quickly checked over the features of a few different To-do apps and decided on Todoist since I had used it (very) briefly before. &lt;/p&gt;

&lt;p&gt;The most dreadful part was determining how I wanted to organize things, which Todoist is nice enough to offer a &lt;a href="https://todoist.com/productivity-methods"&gt;quick quiz&lt;/a&gt; to help get started with. Based on the quiz, I am best suited for Task Blocking/Batching/Day Theming - which tracks based on what I know about myself. &lt;/p&gt;

&lt;p&gt;The way I set Todoist up at this point is with the following Projects: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Personal&lt;/li&gt;
&lt;li&gt;Work&lt;/li&gt;
&lt;li&gt;Photography&lt;/li&gt;
&lt;li&gt;Shopping&lt;/li&gt;
&lt;li&gt;Housework&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Photography is a bit of a flex spot, since Photography could just as easily be slotted in as a label under the Personal Project - but I'm going to feel that out as the month moves along. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-science"&gt;
  &lt;/a&gt;
  Additional Science
&lt;/h3&gt;

&lt;p&gt;Along side Todoist, I'm also exploring &lt;a href="https://toggl.com/"&gt;Toggl&lt;/a&gt; to help motivate me to focus more on single tasks at a time (Which is partially why I'm even writing this article). I'm not really sure if I'll do anything with the time track data, but I know that putting a timer and task name together is a solid way to motivate myself! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-1"&gt;
  &lt;/a&gt;
  Week 1
&lt;/h2&gt;

&lt;p&gt;With the first work week of reorganizing my life in the books, I really like Todoist so far. The one thing I realized is super annoying is that the push notification reminders at the time the task is due is locked behind their "Pro" subscription paywall. Even so, most of what I'm using this for is things I need to be on my computer to do anyways, so that's not the biggest deal (right now).&lt;/p&gt;

&lt;p&gt;I've re-grouped my projects a bit. I removed the "Shopping" and "Housework" projects since both of those felt like they could just be a tag in "Personal" and added:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"Blog Posts" as a place to throw any ideas for posts that I have (cleaning up my dashboard on DEV a bit üòÖ) . The biggest advantage to having the ideas in Todoist over DEV is the clear subtasks of what needs to be done yet on each post. No more having to go to edit mode to see which posts are still waiting on a header image! &lt;/li&gt;
&lt;li&gt;"Templates" as a place to create a task that will be recurring, but not on a set schedule. This is heavily inspired by &lt;a href="https://dev.to/aspittel/how-i-manage-my-life-with-trello-35m4"&gt;Ali's post&lt;/a&gt; and seems to be the best way to handle creating a template task in Todoist. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm noticing that I might be creating too broad of tasks right now - and/or not leveraging sub-tasks enough because of the extra step to get to the add sub-task page. After next week I might circle back to see if I still feel like this is happening. &lt;/p&gt;

&lt;p&gt;At the time of writing, I currently have 37 tasks (not including templates). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-2"&gt;
  &lt;/a&gt;
  Week 2
&lt;/h2&gt;

&lt;p&gt;The theme for this week is &lt;em&gt;Granularity&lt;/em&gt;. Now that a majority of my bigger tasks are set up, I've been adding the associated sub-tasks and smaller tasks to do when I have a spare 10 minutes. &lt;/p&gt;

&lt;p&gt;My largest complaint with Todoist is still the hiding of push notification reminders behind the paywall - especially with trying to schedule sub-tasks. &lt;/p&gt;

&lt;p&gt;At the time of writing I have 32 tasks (not including templates). &lt;/p&gt;

&lt;p&gt;Shorter update for this week because I'm trying to work with what I have set up without making too many changes too quickly üòÖ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-3"&gt;
  &lt;/a&gt;
  Week 3
&lt;/h2&gt;

&lt;p&gt;Maybe this is a bit against the nature of a To-do list and what Todoist is meant for, but holy wow would I love to have a way to create a "note". Even though this would likely devolve into an organization nightmare for myself, I found myself looking for a notes section for each Todoist Project that would allow me to add static notes that aren't things to be done, don't have sub-tasks, but would be good to see as periodic reminders when working within a Project. &lt;/p&gt;

&lt;p&gt;This week I've been expanding my lists to include more of my non-work tasks with some mixed results. Anything that needs to be done at a computer has been working perfectly, but I never really check Todoist on my phone, so not having access to push notification reminders really prevents it from fitting nicely into my life. If I continue to try and leverage Todoist after this month, it will almost certainly involve adjusting my passive app checking on my phone or splurging a bit for the pro plan. &lt;/p&gt;

&lt;p&gt;At the time of writing I have 50 Non-template tasks - this really shows my expansion to include more outside of work tasks. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#week-4"&gt;
  &lt;/a&gt;
  Week 4
&lt;/h2&gt;

&lt;p&gt;Time for the thrilling conclusion - how did things go this month? &lt;/p&gt;

&lt;p&gt;First off, we'll start with the non-todoist portion - I completely gave up on toggl after the first week. It just wasn't having the effect I was hoping for and was more a hassle to try and figure out than a motivator to get more done for me. &lt;/p&gt;

&lt;p&gt;So now for Todoist. Something I noticed looking through my tasks for this review is that some items have been sitting in my queue for the whole month, but also... they weren't really intended to get done this month? I ended up creating a sub-section to throw long term tasks in and I think that's fine, I just need to remember to look through them once a week to remember what all is out there. &lt;/p&gt;

&lt;p&gt;Overall I think this month was successful from a work perspective, but not so much for my personal life/goals. The lack of push notifications for specific tasks meant that even when I did things I had scheduled in Todoist, I wasn't checking them off until the next day 9 out of 10 times. After the second week, I had largely started ignoring the daily task notification (since it doesn't tell you what the tasks are, just opens the app). I do believe this would be corrected with the pro plan, but I'm not sure if I want to go that far yet. Maybe if my work life is still feeling good in Todoist next month I'd be able to justify taking the leap. &lt;/p&gt;

&lt;p&gt;At the time of writing I have 40 tasks (non-templates) and completed 151 tasks this month (38 scheduled and 153 completed once I publish this I suppose). &lt;/p&gt;

&lt;p&gt;This was a fun experiment and I look forward to continuing for at least the short term to continuing to use Todoist for work! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So - how do you handle your to-do list? I love to hear how people manage their time/tasks, so let me know in the comments below! üëá&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>How to start a B2B marketplace</title>
      <author>Alex</author>
      <pubDate>Tue, 01 Jun 2021 15:30:36 +0000</pubDate>
      <link>https://dev.to/alexanderkdev/how-to-start-a-b2b-marketplace-3o51</link>
      <guid>https://dev.to/alexanderkdev/how-to-start-a-b2b-marketplace-3o51</guid>
      <description>&lt;p&gt;Nowadays the B2B business model is just starting to take off. Entrepreneurs seek solutions and improve their businesses‚Äô performance. The B2B model‚Äôs key feature is the frequency and transaction volume, made on the market.&lt;br&gt;
There are 3 main sectors of B2B:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;B2B Marketplace for Buyers and Sellers (e-commerce platform);&lt;/li&gt;
&lt;li&gt;Marketplace for B2B services;&lt;/li&gt;
&lt;li&gt;B2B rental marketplace. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In our article we tell you about best example applications, set the market trend and create consumer expectations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;E-commerce platforms: Amazon, Alibaba, eBay, and others.&lt;/li&gt;
&lt;li&gt;B2B services marketplace: Thumbtack, Fiverr, Upwork, and others.&lt;/li&gt;
&lt;li&gt;B2B rental marketplace: Airbnb and others.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, how to define the distinctive idea and purpose of the project?&lt;br&gt;
An original idea is what identifies your business from competitors and builds a unique interaction with your customers. Please, answer the following questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are the problems in cooperation between business partners?&lt;/li&gt;
&lt;li&gt;What causes these problems?&lt;/li&gt;
&lt;li&gt;What is the possible solution to these problems?&lt;/li&gt;
&lt;li&gt;How can this solution be presented to the masses using the marketplace?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Deciding exactly how your application will earn is one of the most important tasks. One earning scheme can push away your potential clients, while another one can attract. You should think about possible types of monetization like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Transaction fees.&lt;/li&gt;
&lt;li&gt;Subscription.&lt;/li&gt;
&lt;li&gt;Advertising. &lt;/li&gt;
&lt;li&gt;Additional functions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you decide to create a B2B Marketplace, provide a platform for the sale, rental or services of some entrepreneurs to others and have already identified a goal, you will need to learn more about the basic functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Registration algorithm;&lt;/li&gt;
&lt;li&gt;The presence of a registered profile and its status (perhaps even a rating);&lt;/li&gt;
&lt;li&gt;Product catalog (product database with a template field);&lt;/li&gt;
&lt;li&gt;Cloud storage;&lt;/li&gt;
&lt;li&gt;Search by software;&lt;/li&gt;
&lt;li&gt;In-app payment (payment gateway);&lt;/li&gt;
&lt;li&gt;Checkout (template questionnaires);&lt;/li&gt;
&lt;li&gt;Reviews under the product card from buyers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As your business expands, advanced features become true ‚Äúmagic wands‚Äù that facilitate and automate a huge part of your and client's business processes. &lt;br&gt;
Notifications. &lt;br&gt;
Product delivery monitoring. &lt;br&gt;
Recommendations system. &lt;br&gt;
Integration with social networks. &lt;br&gt;
Recommendations system. &lt;br&gt;
Search filters.&lt;br&gt;
Live chat.&lt;br&gt;
The ‚ÄúExceed Team‚Äù is interested in developing entrepreneurship and is ready to take on your B2B Marketplace project. If you still have questions and would like to know more details about developing an application of this kind, write to us.&lt;br&gt;
&lt;a href="https://exceed-team.com/contact"&gt;https://exceed-team.com/contact&lt;/a&gt;&lt;/p&gt;

</description>
      <category>b2b</category>
      <category>marketplace</category>
      <category>business</category>
      <category>webdev</category>
    </item>
    <item>
      <title>FRP - Fast Reserve Proxy - Connect To Database In Private Network</title>
      <author>Vu Dao</author>
      <pubDate>Tue, 01 Jun 2021 15:22:38 +0000</pubDate>
      <link>https://dev.to/vumdao/frp-fast-reserve-proxy-connect-to-database-in-private-network-4bdg</link>
      <guid>https://dev.to/vumdao/frp-fast-reserve-proxy-connect-to-database-in-private-network-4bdg</guid>
      <description>&lt;h3&gt;
  &lt;a href="#to-support-the-requirement-of-accessing-database-with-proper-permission-and-high-security-this-post-show-you-how-to-open-connection-to-database-servers-such-as-postgresql-redis-mongodb-etc-within-officie-network-using-frp-fast-reserve-proxy"&gt;
  &lt;/a&gt;
  &lt;strong&gt;To support the requirement of accessing database with proper permission and high security, this post show you how to open connection to database servers such as postgresql, redis, mongodb, etc. within officie network using FRP - Fast Reserve Proxy&lt;/strong&gt;
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#whats-in-this-document"&gt;
  &lt;/a&gt;
  What‚Äôs In This Document
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#-What-is-FRP?"&gt;What is FRP?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="//#-Create-FPR-Server-Using-AWS-CDK-2.0"&gt;Create FPR Server Using AWS CDK 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Set-up-connection-to-Database-In-Private-Network"&gt;Set up connection to Database In Private Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#what-is-frp"&gt;
  &lt;/a&gt;
  üöÄ &lt;strong&gt;&lt;a href="#-What-is-FRP?"&gt;What is FRP?&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/fatedier/frp"&gt;frp&lt;/a&gt; is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the Internet. As of now, it supports TCP and UDP, as well as HTTP and HTTPS protocols, where requests can be forwarded to internal services by domain name.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FWCXJNk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/k8s-frp/blob/master/img/frp.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FWCXJNk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/k8s-frp/blob/master/img/frp.png%3Fraw%3Dtrue" alt="Alt-Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-fpr-server-using-aws-cdk-20"&gt;
  &lt;/a&gt;
  üöÄ &lt;strong&gt;&lt;a href="//#-Create-FPR-Server-Using-AWS-CDK-2.0"&gt;Create FPR Server Using AWS CDK 2.0&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Using CDK will help to spread of the infra to multiple regions&lt;/li&gt;
&lt;li&gt;The stack includes:

&lt;ul&gt;
&lt;li&gt;Create EC2 instance (type t3a.nano) and then run &lt;code&gt;setup.sh&lt;/code&gt; script to start fprs systemD service&lt;/li&gt;
&lt;li&gt;Allocation EIP to the EC2 instance&lt;/li&gt;
&lt;li&gt;Create record set &lt;code&gt;frps.cloudopz.co&lt;/code&gt; point to the EIP&lt;/li&gt;
&lt;li&gt;Create record set of &lt;code&gt;frps&lt;/code&gt; in VPC private zone
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
from constructs import Construct
from aws_cdk.aws_s3_assets import Asset
from aws_cdk import (
    Stack, Duration, App, Environment, Tags,
    aws_ec2 as ec2,
    aws_route53 as _route53
)


dirname = os.path.dirname(__file__)


class RunAllAtOnce:
    def __init__(self):
        app = App()
        _env = Environment(region='eu-central-1')
        pattern = 'fra'
        ec2_stack = EC2FrpsStackCreate(app, f"frps-ec2-{pattern}", env=_env, pattern=pattern)
        eip_stack = EIPFrpsStackAttach(app, f"frps-eip-{pattern}", instance_id=ec2_stack.instance.instance_id,
                                       env=_env, pattern=pattern)
        Route53FrpsStack(app, id=f"Route53{pattern}FrpsStack", env=_env, pattern=pattern,
                         eip=eip_stack.eip.ref, private_ip=ec2_stack.instance.instance_private_ip)

        app.synth()


class EC2FrpsStackCreate(Stack):
    def __init__(self, scope: Construct, id: str, env, pattern, **kwargs) -&amp;gt; None:
        super().__init__(scope, id, env=env, **kwargs)
        self.instance = None

        vpc = ec2.Vpc.from_vpc_attributes(self, "VPC", vpc_id='vpc-abc123',
                                          availability_zones=['eu-central-1a'],
                                          public_subnet_ids=['subnet-xyz456'])

        vpc_sg = ec2.SecurityGroup.from_security_group_id(self, f'{pattern}-p1.vpc', 'sg-123456')


        # Root volume
        ebs_root_dev = ec2.EbsDeviceProps(delete_on_termination=True,
                                          volume_type=ec2.EbsDeviceVolumeType.GP2, volume_size=8)
        block_root_volume = ec2.BlockDeviceVolume(ebs_device=ebs_root_dev)
        block_root_device = ec2.BlockDevice(device_name='/dev/xvda', volume=block_root_volume)

        # Instance
        self.instance = ec2.Instance(self, f"{pattern}FrpsInstance",
                                     instance_type=ec2.InstanceType("t3a.nano"),
                                     machine_image=ec2.AmazonLinuxImage(
                                         generation=ec2.AmazonLinuxGeneration.AMAZON_LINUX_2
                                     ),
                                     vpc=vpc,
                                     security_group=vpc_sg,
                                     instance_name=f'{pattern}-frps',
                                     block_devices=[block_root_device],
                                     key_name='frps-key'
                                     )

        Tags.of(self.instance).add(key='Name', value=f'{pattern}-frps')
        Tags.of(self.instance).add(key='cfn.frps.stack', value='ec2-stack')

        # Script in S3 as Asset
        asset = Asset(self, "Asset", path=os.path.join(dirname, "setup.sh"))
        local_path = self.instance.user_data.add_s3_download_command(
            bucket=asset.bucket,
            bucket_key=asset.s3_object_key
        )

        # Userdata executes script from S3
        self.instance.user_data.add_execute_file_command(
            file_path=local_path
        )
        asset.grant_read(self.instance.role)


class EIPFrpsStackAttach(Stack):
    def __init__(self, scope: Construct, id: str, env, pattern, instance_id, **kwargs) -&amp;gt; None:
        super().__init__(scope, id, env=env, **kwargs)
        self.eip = None

        self.eip = ec2.CfnEIP(scope=self, id=f'FRPSEIP{pattern}', domain='vpc')
        ec2.CfnEIPAssociation(self, "EIPFRPSAttachment", instance_id=instance_id,
                              allocation_id=self.eip.attr_allocation_id)


class Route53FrpsStack(Stack):

    def __init__(self, scope: Construct, id: str, env, pattern, eip, private_ip, **kwargs) -&amp;gt; None:
        super().__init__(scope, id, env=env, **kwargs)

        vc_io_hosted_zone = 'ZONEID'
        hz = _route53.HostedZone.from_hosted_zone_attributes(
            self, id=f"Frps{pattern}HostedZone", hosted_zone_id=vc_io_hosted_zone, zone_name='cloudopz.co')

        record = f'{pattern}-frps'
        _route53.ARecord(
            scope=self, id=f'frps{pattern}Record', target=_route53.RecordTarget.from_ip_addresses(eip),
            zone=hz, record_name=record, ttl=Duration.seconds(60)
        )

        """ Create frps record on fra-vc-p1.zone zone """
        vc_p_zone = 'ZVPCZONEID'
        vc_p_hz = _route53.HostedZone.from_hosted_zone_attributes(
            self, id=f"Frps{pattern}VCPHostedZone", hosted_zone_id=vc_p_zone, zone_name='cloudopz.zone'
        )
        frps_record = 'frps'
        _route53.ARecord(
            scope=self, id=f'frps{pattern}VCPRecord', target=_route53.RecordTarget.from_ip_addresses(private_ip),
            zone=vc_p_hz, record_name=frps_record, ttl=Duration.seconds(60)
        )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#set-up-connection-to-database-in-private-network"&gt;
  &lt;/a&gt;
  üöÄ &lt;strong&gt;&lt;a href="#-Set-up-connection-to-Database-In-Private-Network"&gt;Set up connection to Database In Private Network&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VH8DZkD3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/k8s-frp/blob/master/img/flow.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VH8DZkD3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/k8s-frp/blob/master/img/flow.png%3Fraw%3Dtrue" alt="Alt-Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;frps.cloudopz.co&lt;/code&gt; is record set point to public IP of the frp server (An EC2 instance), security group of the EC2 should allow only ports within office network or VPN&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FRP server uses private network in order to talk with FRP client which is a k8s service and contains protocol methods, as well as binding port to connect to databases&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Structure of project:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚ö° $ tree
.
‚îú‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ start.sh
‚îî‚îÄ‚îÄ frpc.ini
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Build image and then push to ECR &lt;code&gt;cloudopz/frpc:latest&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deploy FRP client in k8s as a statefulset service&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: frpc
spec:
  serviceName: "frpc"
  replicas: 1
  selector:
    matchLabels:
      ss: frpc
  template:
    metadata:
      labels:
        ss: frpc
    spec:
      containers:
      - name: frpc
        image: cloudopz/frpc:latest
      restartPolicy: Always
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#monitor-frp-using-dashboard-at-port-7500"&gt;
  &lt;/a&gt;
  üöÄ &lt;strong&gt;Monitor FRP using dashboard at port 7500&lt;/strong&gt;
&lt;/h3&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fb1IBXSo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/k8s-frp/blob/master/img/dashboard.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fb1IBXSo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/k8s-frp/blob/master/img/dashboard.png%3Fraw%3Dtrue" alt="Alt-Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  üöÄ &lt;strong&gt;&lt;a href="#-Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;There are many ways to provide connection to database, please share what you experienced&lt;/li&gt;
&lt;li&gt;Providing connection to database for developer shoud restrict permission by granting proper permission on specific database/schema only&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="https://dev.to/vumdao"&gt;üå† Blog&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href="https://github.com/vumdao/k8s-frp"&gt;Github&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href="https://stackoverflow.com/users/11430272/vumdao"&gt;stackoverflow&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/in/vu-dao-9280ab43/"&gt;Linkedin&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/groups/12488649/"&gt;Group&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href="https://www.facebook.com/CloudOpz-104917804863956"&gt;Page&lt;/a&gt;
  &lt;span&gt; ¬∑ &lt;/span&gt;
  &lt;a href="https://twitter.com/VuDao81124667"&gt;Twitter üå†&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>aws</category>
      <category>frp</category>
      <category>cdk</category>
      <category>cloudopz</category>
    </item>
    <item>
      <title>Polypane 6.1: Readability, Content Chaos and rewritten event sync engine</title>
      <author>Kilian Valkhof</author>
      <pubDate>Tue, 01 Jun 2021 15:09:09 +0000</pubDate>
      <link>https://dev.to/polypane/polypane-6-1-readability-content-chaos-and-rewritten-event-sync-engine-mf8</link>
      <guid>https://dev.to/polypane/polypane-6-1-readability-content-chaos-and-rewritten-event-sync-engine-mf8</guid>
      <description>&lt;p&gt;Polypane 6.1 adds two new debug tools and a much more performant, completely rewritten interaction syncing engine along with numerous smaller improvements and bug fixes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What's Polypane?&lt;/strong&gt; &lt;a href="https://polypane.app"&gt;Polypane is a web browser for developers&lt;/a&gt;, designers and anyone that works on web projects. It shows sites in multiple fully synced &lt;em&gt;panes&lt;/em&gt; and has tons of features that help with responsive design, accessibility and overall site quality.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#readability-debug-tool"&gt;
  &lt;/a&gt;
  Readability debug tool
&lt;/h2&gt;

&lt;p&gt;The readability debug tool will calculate how difficult each sentence on your page is. Darker, redder sentences are harder to understand while lighter, greener sentences are easier to read.&lt;/p&gt;

&lt;p&gt;We calculate this using the Automated Readability Index (ARI), which works well for most western, European languages. For pages in Arabic it uses the Automatic Arabic Readability Index (AARI). If you know of other languages that have a Readability Index algorithm, please let us know!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nfl8vueA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://polypane.app/doc-img/overlays/readability.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nfl8vueA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://polypane.app/doc-img/overlays/readability.png" alt="Polypane screenshot of the docs page with Readability active"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a really neat way to check which of your sentences might be a little on the complex sites and should be rewritten.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#content-chaos-debug-tool"&gt;
  &lt;/a&gt;
  Content chaos debug tool
&lt;/h2&gt;

&lt;p&gt;The Content chaos debug tool will randomly halve, double or triple the content of each text node on your page. This is a perfect way to test if your layout wont break when there is unexpected text content (such as much longer titles for things than were used in the design, or languages that take significant more or less space).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iijhRgIl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://polypane.app/doc-img/overlays/contentchaos.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iijhRgIl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://polypane.app/doc-img/overlays/contentchaos.png" alt="Polypane screenshot of the docs page with Content Chaos active"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rewritten-interaction-event-sync-engine"&gt;
  &lt;/a&gt;
  Rewritten interaction event sync engine
&lt;/h2&gt;

&lt;p&gt;Polypane is the only browser that syncs &lt;strong&gt;all&lt;/strong&gt; your user interactions out of the box: scrolling, clicking, keyboard input, form events, typing and hovers. Making this feature performant is a difficult problem, since you need the same thing to happen at the same time across all panes.&lt;/p&gt;

&lt;p&gt;In 6.1 we have completely rewritten our syncing engine (bringing it up to the third engine we've built for this). We were able to take out an intermediate component that improves performance a lot and at the same time is able to more accurately sync interaction events across panes.&lt;/p&gt;

&lt;p&gt;In particular, you'll notice a higher frame rate for scrolling and animations on hover are much smoother across panes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#about-browsersync"&gt;
  &lt;/a&gt;
  About Browsersync
&lt;/h3&gt;

&lt;p&gt;Starting in Polypane 6.1, we will automatically disable the built-in syncing when we detect Browsersync with &lt;code&gt;ghostMode&lt;/code&gt; turned on.&lt;/p&gt;

&lt;p&gt;Browsersync has always been slightly slower than Polypane's internal syncing, and what was essentially happening was that Browsersync was continuously resetting the scroll position after Polypane had updated it, leading to a very janky experience.&lt;/p&gt;

&lt;p&gt;Polypane has been showing a warning but unfortunately not many people are aware of the option to turn off &lt;code&gt;ghostMode&lt;/code&gt;, or even realise they have Browsersync running in their project in the first place. That's why we decided it was better to instead disable the scroll syncing in Polypane, even though it is more performant.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ndhugV5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://polypane.app/blogs/polypane-6-1/imagepanel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ndhugV5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://polypane.app/blogs/polypane-6-1/imagepanel.png" alt="Image overview outline panel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#images-overview-in-outline-panel"&gt;
  &lt;/a&gt;
  Images overview in outline panel
&lt;/h2&gt;

&lt;p&gt;The online panel now gives you a list of all the images on a page along with their current source, alt text, title, shown dimensions, aspect ratio and actual dimensions when they differ from the shown dimensions.&lt;/p&gt;

&lt;p&gt;When the alt text is missing we'll show a warning, and you can right-click any image to save it to disk.&lt;/p&gt;

&lt;p&gt;Like the node tooltip, we'll only show the actual size when it differs from the shown dimensions, and we only show the aspect ratio if it's not the same as the pixel value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#smaller-improvements"&gt;
  &lt;/a&gt;
  Smaller improvements
&lt;/h2&gt;

&lt;p&gt;Polypane inlines stylesheets to enable access to them from the elements panel. We've made this optional which can be&lt;br&gt;
slightly faster, at the expense of not showing all the styles in the elements panel. Starting in 6.1 we also rewrite&lt;br&gt;
inlined stylesheet so that linked resources (like background images) work correctly.&lt;/p&gt;

&lt;p&gt;Polypane now includes the Angular DevTools in the selection of devtools extensions.&lt;/p&gt;

&lt;p&gt;We updated our color handling throughout the application making it much more performant. This is most noticable when editing a color&lt;br&gt;
in the Elements panel.&lt;/p&gt;

&lt;p&gt;It's now no longer possible to navigate to a Facebook, Twitter or Instagram URL in Polypane. We did this &lt;del&gt;as a productivity measure&lt;/del&gt;&lt;br&gt;
because these sites have server security settings that make Electron applications (of which Polypane is one) crash. We could&lt;br&gt;
disable the security settings for these sites but we would rather wait for Electron to be fixed, so we're keeping a close eye on that.&lt;/p&gt;

&lt;p&gt;Logging in with Google was broken in Polypane 6 but it now works again.&lt;/p&gt;

&lt;p&gt;Read through the full changelog to see the other improvements made.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-polypane-61"&gt;
  &lt;/a&gt;
  Get Polypane 6.1
&lt;/h2&gt;

&lt;p&gt;Polypane will automatically update on Mac and Windows. Linux users need to download the new version from&lt;br&gt;
&lt;a href="https://dev.to/download/"&gt;the download page&lt;/a&gt; and if you're on Mac and Windows but don't want to wait on the update popup, find&lt;br&gt;
your download there as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't have Polypane yet? There is a free 14 day trial available. &lt;a href="https://dashboard.polypane.app/register"&gt;Get it here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#full-changelog"&gt;
  &lt;/a&gt;
  Full Changelog
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;New features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;New&lt;/strong&gt; Readability debug tool&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;New&lt;/strong&gt; Content chaos testing debug tool (Thanks Rik!)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;New&lt;/strong&gt; Interaction syncing engine rewritten to v3&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;New&lt;/strong&gt; Images overview in outline panel&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;New&lt;/strong&gt; Option to disable inlining stylesheets&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;New&lt;/strong&gt; Angular DevTools now available in the devtools extensions installer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Improvements&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Pane load performance improvements&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Remove jank when animating hover styles&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Clicks are not synced when they create a new tab (when cmd or ctrl is pressed)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Support shorthand notation in combination with custom properties for hover syncing&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Prevent Polypane from opening urls that are known to cause crashes&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Inlined stylesheets no longer overwrite background images&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Increase opacity for unfocused scrollbar (Thanks Sam!)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Form elements now use the Polypane accent color&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Improve performance of color picker in elements panel&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Upgrade Chromium version&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Better color consistency for dark mode&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Outline Link checking now ignores javascript, blob and data links&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Polypane shows a warning when a site wants Location API access but there is no Google API key (Thanks Eric!)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Mode switcher shortcut is changed so cmd + m for minimize works (Thanks Charlie!)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved&lt;/strong&gt; Scroll syncing is now disabled when Browsersync with ghostMode is detected&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;** Fixes **&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Log in with Google works again&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Fix auto reloading not starting immediately&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; CSS injection in Live reload for Default mode (Thanks Winston!)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Disabling hover sync also blocked showing the target url on hover&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Copy button for empty description was missing (Thanks Charlie!)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Alignment issues in the Outline panel on Mac&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Editing text nodes in elements panel sometimes didn't work&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Prevent tooltip overlay misalignment on some sites&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Prevent duplicate inlining of stylesheets&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Polypane console can now print 'null' messages&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Escape HTML in attributes in overlay tooltip&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Missing rel="noopener" warning was sometimes shown incorrectly&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Replace panes button for custom workspaces now replaces panes again (Thanks Sam!)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Elements panel not always showing background image declarations&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fix&lt;/strong&gt; Show correct version number in getting started page&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>javascript</category>
      <category>design</category>
    </item>
    <item>
      <title>Choosing a Message Broker: Kafka vs RabbitMQ vs AWS SQS/SNS</title>
      <author>Michael Haberman</author>
      <pubDate>Tue, 01 Jun 2021 15:05:10 +0000</pubDate>
      <link>https://dev.to/aspecto/choosing-a-message-broker-kafka-vs-rabbitmq-vs-aws-sqs-sns-20na</link>
      <guid>https://dev.to/aspecto/choosing-a-message-broker-kafka-vs-rabbitmq-vs-aws-sqs-sns-20na</guid>
      <description>&lt;p&gt;Microservice applications rely heavily on messaging and asynchronous communications to keep everything working smoothly. &lt;/p&gt;

&lt;p&gt;Choosing the right message broker is one of the first critical choices you must make when developing the services that need to communicate with each other. &lt;/p&gt;

&lt;p&gt;Making the ‚Äúright‚Äù choice can be a battle of features and edge cases that can be challenging to differentiate between. &lt;/p&gt;

&lt;p&gt;In this article, I‚Äôll help provide a bit of guiding light by providing an overview of a few of the more well-known message brokers ‚Äì Kafka, RabbitMQ, and AWS SQS/SNS. &lt;/p&gt;

&lt;p&gt;I‚Äôll explore the driving forces behind them, the general messaging model they follow and do my best to provide some guidance on selecting the broker that is right for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apache-kafka"&gt;
  &lt;/a&gt;
  Apache Kafka
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://kafka.apache.org/"&gt;Kafka&lt;/a&gt; is an open-source message broker developed and maintained primarily by the &lt;a href="https://www.apache.org/foundation/"&gt;Apache Software Foundation&lt;/a&gt;, with the assistance of the open-source community.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#key-features"&gt;
  &lt;/a&gt;
  Key Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Focus on streamable content, working with large data streams&lt;/li&gt;
&lt;li&gt;Message persistence and reprocessing capabilities are core features&lt;/li&gt;
&lt;li&gt;On-site hosting with third party options&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kafka provides optimized stream-based processing of events, with a publish/subscribe model driving the communications between consumers. &lt;/p&gt;

&lt;p&gt;These events can be subdivided into topics, allowing for greater organization of your distributed application‚Äôs communication patterns, and are partitioned onto multiple servers within a cluster, allowing for a resilient and highly performant message delivery system.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#technical-details-and-deployment"&gt;
  &lt;/a&gt;
  Technical Details and Deployment
&lt;/h3&gt;

&lt;p&gt;Apache &lt;a href="https://kafka.apache.org/documentation/streams/"&gt;provides SDKs&lt;/a&gt; in several different languages.&lt;/p&gt;

&lt;p&gt;Kafka is designed to be deployed on-site, within your own application‚Äôs architecture. This can be on a set of stand-alone servers, a virtual machine, or a Docker container.&lt;/p&gt;

&lt;p&gt;Multiple vendors offer Kafka hosting as a service, such as &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/kafka-hosting.html"&gt;AWS&lt;/a&gt;, &lt;a href="https://www.cloudkarafka.com/"&gt;CloudKarafka&lt;/a&gt;, and &lt;a href="https://aiven.io/kafka"&gt;Aiven&lt;/a&gt;, or in virtual machines.&lt;/p&gt;

&lt;p&gt;Below is some sample JS code for &lt;a href="https://kafka.js.org/docs/getting-started"&gt;getting started&lt;/a&gt; with Apache Kafka events:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { Kafka } = require('kafkajs')
const kafka = new Kafka({
 clientId: 'my-app',
 brokers: ['localhost:9092']
})

// this produces a message
async function produce() {
 const producer = kafka.producer()
 await producer.connect()
 await producer.send({
   topic: 'TOPIC_NAME',
   messages: [
     { key: 'key1', value: 'hello world' },
   ],
 })
}

async function consume() {
 const consumer = kafka.consumer({ groupId: 'my-group' })
 await consumer.connect()
 await consumer.subscribe({ topic: 'TOPIC_NAME' })
 await consumer.run({
   eachMessage: async ({ topic, partition, message }) =&amp;gt; {
     console.log({
       key: message.key.toString(),
       value: message.value.toString(),
       headers: message.headers,
     })
   },
 })
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#strengths-amp-weaknesses"&gt;
  &lt;/a&gt;
  Strengths &amp;amp; Weaknesses
&lt;/h3&gt;

&lt;p&gt;Kafka has a high focus on data stream throughput, something that shows in their &lt;a href="https://www.confluent.io/blog/kafka-fastest-messaging-system/"&gt;performance statistics&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This focus on processing streams of data results in a system with high throughput, allowing for complex processing of large data streams. &lt;/p&gt;

&lt;p&gt;Kafka‚Äôs routing capabilities for those streams of data are relatively limited when compared to other message brokers ‚Äì a gap that is continually getting smaller as these products improve. &lt;/p&gt;

&lt;p&gt;To summarize, Kafka is a powerful solution that can provide robust and fault-tolerant high-performance message streaming, letting you confidently drive your application‚Äôs behavior.&lt;/p&gt;

&lt;p&gt;Depending on your bandwidth and resources, you can abstract away as much or as little of the hosting as you feel comfortable, making Kafka a solid choice that will scale with your traffic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rabbitmq"&gt;
  &lt;/a&gt;
  RabbitMQ
&lt;/h2&gt;

&lt;p&gt;Like Kafka, &lt;a href="https://www.rabbitmq.com/"&gt;RabbitMQ&lt;/a&gt; is another open-source message broker. Originally developed by Rabbit Technologies, the technology has through a series of acquisitions ended up under the ownership of VMWare.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#key-features"&gt;
  &lt;/a&gt;
  Key Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Focus on messaging-based communication, with support for large data streams&lt;/li&gt;
&lt;li&gt;Complex routing capabilities provided as a core feature&lt;/li&gt;
&lt;li&gt;On-site hosting with third party options&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;RabbitMQ uses the publish/subscribe model as well, sending message objects in their binary form to different named queues, which can be dynamically created and destroyed. &lt;/p&gt;

&lt;p&gt;RabbitMQ is designed to operate both in isolation and as part of a cluster, providing enough configurable power to drive any set of redundancy or data safety needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#technical-details-and-deployment"&gt;
  &lt;/a&gt;
  Technical Details and Deployment
&lt;/h3&gt;

&lt;p&gt;RabbitMQ provides several &lt;a href="https://www.rabbitmq.com/devtools.html"&gt;client libraries&lt;/a&gt; in a wide variety of languages.&lt;/p&gt;

&lt;p&gt;It can be deployed on-site, on anything from a full server to a container, or on one of several cloud providers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.stackhero.io/en/services/RabbitMQ"&gt;Stackhero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cloudamqp.com/"&gt;CloudAMQP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.compose.com/databases/rabbitmq"&gt;Compose&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following sample code, written in Node.js using the AMQPLIB package, should provide a small sample of what it might be like to work with RabbitMQ:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const amqp = require('amqplib/callback_api');
amqp.connect('amqp://localhost', function(error0, connection) {
 if (error0) {
   throw error0;
 }
 connection.createChannel(function(error1, channel) {
   if (error1) {
     throw error1;
   }
   const queue = 'hello-queue';
   const msg = 'Hello world!';

   channel.assertQueue(queue, {
     durable: false
   });

   // Sending message to queue
   channel.sendToQueue(queue, Buffer.from(msg));
   console.log("Sent message", msg);

   // Consuming messages
   channel.consume(queue, function(msg) {
     console.log("Received message", msg.content.toString());
   }, { noAck: true });
 });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#strengths-amp-weaknesses"&gt;
  &lt;/a&gt;
  Strengths &amp;amp; Weaknesses
&lt;/h3&gt;

&lt;p&gt;RabbitMQ has the power to handle workloads of nearly any size, and can effectively scale alongside your application as your user base grows.&lt;/p&gt;

&lt;p&gt;With a  focus on messaging-based delivery and complex routing scenarios, RabbitMQ is extremely adaptable to any application architecture. &lt;/p&gt;

&lt;p&gt;While originally there was no great support for data stream processing, and messages were generally only processed once without the capacity to reprocess a stream, both of these gaps have closed as RabbitMQ has continued to grow. &lt;/p&gt;

&lt;p&gt;With the ability to take ownership of the things you want and outsource the rest, RabbitMQ can fit into any appropriate role in your application‚Äôs infrastructure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-web-services-sqssns"&gt;
  &lt;/a&gt;
  Amazon Web Services SQS/SNS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/sns/"&gt;SNS&lt;/a&gt; and &lt;a href="https://aws.amazon.com/sqs/"&gt;SQS&lt;/a&gt; represent two different ways of looking at distributed messaging.&lt;/p&gt;

&lt;p&gt;SNS is highly focused on message delivery, offering a publish-subscribe model to quickly distribute a message to an array of clients (e.g., mobile devices, HTTPS endpoints, other AWS services).&lt;/p&gt;

&lt;p&gt;SQS, by comparison, is focused on the successful delivery and processing of messages by individual clients.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#key-features"&gt;
  &lt;/a&gt;
  Key Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Two products allowing for both broadcast messaging and pub/sub&lt;/li&gt;
&lt;li&gt;Quick setup and configuration using AWS&lt;/li&gt;
&lt;li&gt;No hosting available outside of AWS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While SNS will broadcast the same message to an array of recipients, SQS will distribute queue messages to single subscribers for processing.&lt;/p&gt;

&lt;p&gt;SNS takes a push-based approach to notifications, allowing for automated responses to notification activity, while SQS tends to focus more on a polling-style mechanism with some additional event-driven functionality supported.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#technical-details"&gt;
  &lt;/a&gt;
  Technical Details
&lt;/h3&gt;

&lt;p&gt;AWS provides a general SDK with access to most AWS services (SQS and SNS included) in &lt;a href="https://aws.amazon.com/tools/"&gt;several popular languages&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The below sample code uses the AWS SDK to demonstrate the process of working with SNS and SQS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// SNS - publish
const AWS = require('aws-sdk');
AWS.config.update({ region: 'REGION' });

const publishParams = {
 Message: 'MESSAGE_TEXT',
 TopicArn: 'TOPIC_ARN'
};

const publishTextPromise = new AWS.SNS({ apiVersion: '2010-03-31' }).publish(publishParams).promise();

publishTextPromise.then(
 function(data) {
   console.log(`Message ${publishParams.Message} sent to topic ${publishParams.TopicArn}`);
 }).catch(
 function(err) {
   console.error(err, err.stack);
 });

// SNS - Subscribe
const subscribeParams = {
 TopicArn : 'TOPIC_ARN'
}
const subscribePromise = new AWS.SNS({ apiVersion: '2010-03-31' }).listSubscriptionsByTopic(subscribeParams).promise();
subscribePromise.then(
 function(data) {
   console.log(data);
 }).catch(
 function(err) {
   console.error(err, err.stack);
 }
);

// SQS - send
const sqs = new AWS.SQS({ apiVersion: '2012-11-05' });
const queueURL = "SQS_QUEUE_URL";

const sendParams = {
 DelaySeconds: 10,
 MessageAttributes: {
   "Title": {
     DataType: "String",
     StringValue: "Some String"
   }
 },
 MessageBody: "Something!",
 QueueUrl: queueURL
};

sqs.sendMessage(sendParams, function(err, data) {
 if (err) {
   console.log("Error sending to SQS", err);
 } else {
   console.log("Success sending to SQS", data.MessageId);
 }
});

// SQS - receive
const receiveParams = {
 AttributeNames: [
   "SentTimestamp"
 ],
 MaxNumberOfMessages: 10,
 MessageAttributeNames: [
   "All"
 ],
 QueueUrl: queueURL,
 VisibilityTimeout: 20,
 WaitTimeSeconds: 0
};

sqs.receiveMessage(receiveParams, function(err, data) {
 if (err) {
   console.log("Receive Error", err);
 } else if (data.Messages) {
   console.log("Received messages:", JSON.stringify(data.Messages))
 }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#strengths-amp-weaknesses"&gt;
  &lt;/a&gt;
  Strengths &amp;amp; Weaknesses
&lt;/h3&gt;

&lt;p&gt;AWS SQS and SNS, together, can be used to build the backbone of a highly scalable, highly resilient distributed application.&lt;/p&gt;

&lt;p&gt;With ties into many other AWS services (such as AWS Lambda), these two tools can help you easily grow your application‚Äôs communications, while providing you with all the tools you need to manage the underlying complexities of the service interactions. &lt;/p&gt;

&lt;p&gt;If your web application is already running on AWS, set-up time is effectively zero, with much less complexity than many of the other systems. This does potentially come at the expense of a larger AWS bill as the number of messages grows. &lt;/p&gt;

&lt;p&gt;While Kafka and RabbitMQ don‚Äôt provide a default message size limit, AWS provides some limits around SQS and SNS messages ‚Äì converting the messages into S3 objects after they reach a certain size.&lt;/p&gt;

&lt;p&gt;We published a &lt;a href="https://www.aspecto.io/blog/how-to-send-large-sqs-sns-messages-with-node-js/"&gt;detailed article on how you can overcome this size limit&lt;/a&gt; ‚Äì I highly recommend browsing it to get a feel for how SQS in particular manages large messages.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;[You can find our SQS/SNS Producer/Consumer Library inside. It provides an ability to pass payloads through s3]&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;SQS and SNS being cloud-first do add the additional complication of being vendor-locked to a specific service, whereas other message brokers resolve this by providing local installation and maintenance capabilities.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#choosing-the-right-message-broker"&gt;
  &lt;/a&gt;
  Choosing The Right Message Broker
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6s4uJvtH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5osbyu9grpfnvcy9psr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6s4uJvtH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5osbyu9grpfnvcy9psr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Generally speaking, there are two considerations you should be thinking about when choosing a broker:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#consideration-1-the-type-of-messages-you-send"&gt;
  &lt;/a&gt;
  Consideration #1: The Type of Messages You Send
&lt;/h3&gt;

&lt;p&gt;The first step to choosing a message broker is determining what messages you‚Äôll be sending, and what their general format will be. &lt;/p&gt;

&lt;p&gt;The characteristics of these messages will drive the questions that need to be asked about each platform‚Äôs offering, though most will be roughly equivalent in terms of feature set ‚Äì meaning that at a general level, every solution listed above supports the functionality needed to serve as a message broker for a scalable distributed application. &lt;/p&gt;

&lt;p&gt;From a pure feature perspective, one solution is as good as another.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#consideration-2-your-daily-work-and-applications-infrastructure"&gt;
  &lt;/a&gt;
  Consideration #2: Your Daily Work and Applications‚Äô Infrastructure
&lt;/h3&gt;

&lt;p&gt;This is where secondary considerations come into play. Think about your day-to-day work and systems and ask yourself:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are you building an application exclusively in AWS? Maybe SQS and SNS make the most sense for establishing your inter-service communication&lt;/li&gt;
&lt;li&gt;Are you more interested in writing your application than maintaining the piped data between its components? Then a third-party hosted solution might be the best option for allowing you to focus on your strengths while growing your codebase&lt;/li&gt;
&lt;li&gt;Are you highly focused on speed of delivery and minimal latency? Then Kinesis might be right up your alley (we‚Äôll go over Kinesis on another article, so stay tuned), while an application more focused on verified delivery and redundancy might choose a different technology.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The requirements of your application‚Äôs infrastructure and behavioral patterns will drive the choice at this level.&lt;/p&gt;

&lt;p&gt;With the above taken into the account, and with the caveat that it is hard ‚Äì and somewhat unfair ‚Äì to reduce these large tech products down to a couple of lines of recommendations, &lt;strong&gt;here are some guidelines on choosing the right message broker:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you care about message retention and being able to easily re-process data, Kafka is likely your best option&lt;/li&gt;
&lt;li&gt;If you are more concerned with being able to maintain and implement a complex set of routing rules, RabbitMQ is likely your best choice&lt;/li&gt;
&lt;li&gt;If you‚Äôre a small startup looking to get up and running quickly, with minimal overhead, AWS SQS/SNS is a great option given its quick setup and cost structure&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#getting-endtoend-visibility-into-a-message-journey"&gt;
  &lt;/a&gt;
  Getting End-to-end Visibility Into a Message Journey
&lt;/h2&gt;

&lt;p&gt;One element you‚Äôll want to evaluate is how to best maintain the final product. Once your application is sending messages, how do we track things down when they go wrong? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://opentelemetry.io/"&gt;OpenTelemetry&lt;/a&gt; is a set of SDKs and tools that can be used to set up observability for your distributed application, providing you the means to troubleshoot the distributed messaging driving your application when things go wrong.&lt;/p&gt;

&lt;p&gt;Here‚Äôs a quick &lt;a href="https://www.aspecto.io/blog/how-to-achieve-end-to-end-microservices-visibility-in-asyn-messaging-with-opentelemetry/"&gt;step-by-step guide on implementing OpenTelemetry in your distributed applications&lt;/a&gt;, allowing you to achieve end-to-end visibility into a message journey. The guide demonstrates how to do so with Kafka as the message broker.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;[PS: grab your OpenTelemetry Kafkajs Instrumentation for Node.js inside.]&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you‚Äôre building an application that is ‚Äúdistributed‚Äù in any way, odds are you‚Äôll need to handle asynchronous communications between components of your application at some point. &lt;/p&gt;

&lt;p&gt;Messages ‚Äì and the brokers that deliver them ‚Äì will play a critical role in the infrastructure driving your application. &lt;/p&gt;

&lt;p&gt;The above summary is by no means exhaustive ‚Äì I would probably need another thousand words just to make a solid start at capturing the complete message broker landscape ‚Äì but should hopefully provide some quality information that you can use when making your decision. &lt;/p&gt;

&lt;p&gt;The key is to fully understand the requirements for your application, and how those requirements fit into the capabilities of the message brokers you are evaluating.&lt;/p&gt;

&lt;p&gt;There is ultimately no ‚Äúwrong‚Äù answer to which message broker you choose, but hopefully, the above information helps point you in the right direction.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;About Aspecto

Aspecto is an OpenTelemetry-based troubleshooting platform 
that helps developers prevent distributed application 
issues from their local dev environment, 
and across the entire development cycle.

You can think of it as the 
Chrome DevTools for your distributed applications.

Aspecto is used for detecting and 
troubleshooting microservices-based distributed systems, 
and preventing software failures before deployment.

Visit us at Aspecto.io
for more microservices tutorials
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>aws</category>
      <category>microservices</category>
    </item>
    <item>
      <title>Using Postman Automation to Test API Endpoints Protected by Okta‚Äôs PKCE Flow</title>
      <author>Andy T. Tran</author>
      <pubDate>Tue, 01 Jun 2021 15:03:43 +0000</pubDate>
      <link>https://dev.to/giantmachines/using-postman-automation-to-test-api-endpoints-protected-by-okta-s-pkce-flow-1bn</link>
      <guid>https://dev.to/giantmachines/using-postman-automation-to-test-api-endpoints-protected-by-okta-s-pkce-flow-1bn</guid>
      <description>&lt;p&gt;&lt;a href="https://www.postman.com/"&gt;Postman&lt;/a&gt; is a great tool for testing our APIs and streamlining backend development. One of the big hurdles, however, is testing API endpoints that are protected. There are some imperfect workarounds that require us to manually enter our credentials each time we need to retrieve an access token. But through painstaking trial and error, I‚Äôve put together a solution to automate the Postman login process with the click of a button! In this blog, I will go over step-by-step how you can create the same automated Postman login setup. The following requests are based on &lt;a href="https://developer.okta.com/"&gt;the Okta platform&lt;/a&gt; and Okta‚Äôs &lt;a href="https://developer.okta.com/docs/guides/implement-auth-code-pkce/overview/"&gt;authorization code flow with PKCE documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br&gt;
Collection and Environment Variables Setup&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create a &lt;a href="https://learning.postman.com/docs/getting-started/creating-the-first-collection/#:~:text=your%20first%20collection-,Postman%20Collections%20are%20a%20group%20of,you%20can%20organize%20into%20folders.&amp;amp;text=However%2C%20as%20your%20Postman%20usage,a%20group%20for%20easier%20access."&gt;collection&lt;/a&gt; under &lt;em&gt;Collections &amp;gt; + &amp;gt; Create New Collection&lt;/em&gt;. We‚Äôll name this collection ‚ÄúOkta Login,‚Äù but this can be named anything you like. The collection will allow us to use &lt;a href="https://learning.postman.com/docs/running-collections/intro-to-collection-runs/"&gt;runners&lt;/a&gt; to run all our requests at once.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Setup our &lt;a href="https://learning.postman.com/docs/sending-requests/managing-environments/"&gt;environment variables&lt;/a&gt; based on &lt;a href="https://developer.okta.com/docs/guides/implement-auth-code/use-flow/"&gt;Okta‚Äôs authorization code flow docs&lt;/a&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aWrrez5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xf2yk4g7bsh5ja6kmk5o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aWrrez5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xf2yk4g7bsh5ja6kmk5o.png" alt="Postman Environment Variables Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;em&gt;email&lt;/em&gt; and &lt;em&gt;password&lt;/em&gt; are the user credentials.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;oktaUrl&lt;/em&gt; (Okta domain) and &lt;em&gt;oktaClientId&lt;/em&gt; (Client ID) can be found within the general settings of your Okta app.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;redirectUri&lt;/em&gt; must match one of the URIs that you have approved for your Okta application. These &lt;a href="https://developer.okta.com/docs/guides/implement-auth-code/use-flow/"&gt;redirect URI&lt;/a&gt; value(s) can be found under the &lt;em&gt;Login redirect URIs&lt;/em&gt; field in your Okta &lt;em&gt;Applications&lt;/em&gt; settings (screenshot below). If your application doesn‚Äôt already have a redirect URI, you can set it up with a http://localhost:3000. As part of the authorization code flow, users are redirected back to your client application via the redirectUri after logging in with Okta. In our case, we won‚Äôt be redirecting anywhere, but the redirectUri is required as a parameter of the request. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZAhyQd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jtegvz0xvyo175zihinp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZAhyQd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jtegvz0xvyo175zihinp.png" alt="Okta App Settings Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;em&gt;codeChallenge&lt;/em&gt; and &lt;em&gt;codeVerifier&lt;/em&gt; values can be generated here: &lt;a href="https://tonyxu-io.github.io/pkce-generator/"&gt;https://tonyxu-io.github.io/pkce-generator/&lt;/a&gt;. The code challenge and code verifier values are used in the &lt;a href="https://www.loginradius.com/blog/async/pkce/#:~:text=PKCE%20is%20mainly%20useful%20for,Code%20Verifier%20and%20Code%20challenge."&gt;Proof Key of Code Exchange (PKCE)&lt;/a&gt; flow. You can find more details on Okta‚Äôs implementation &lt;a href="https://developer.okta.com/docs/guides/implement-auth-code-pkce/use-flow/"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;authServer&lt;/em&gt; is set as &lt;code&gt;default&lt;/code&gt; unless you have created a custom auth server.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;sessionToken&lt;/em&gt;, &lt;em&gt;authorizationCode&lt;/em&gt;, and &lt;em&gt;accessToken&lt;/em&gt; can be left blank, as we will programatically fill in these values from our requests.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will tidy things up by using &lt;a href="https://learning.postman.com/docs/sending-requests/variables/"&gt;Postman variables&lt;/a&gt;. We can access these environment variables by adding two curly braces around our environment variable name. For example, instead of typing ‚Äúhttp://localhost:3000,‚Äù we can just use &lt;code&gt;{{redirectUri}}&lt;/code&gt;. This helps keep our variables consistent and easily managed/updated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;Creating Requests&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1.First, we will create a POST request to your Okta domain + &lt;code&gt;/api/v1/authn&lt;/code&gt;. Since we have this value set in our environment variable, we can just use &lt;code&gt;{{oktaUrl}}/api/v1/authn&lt;/code&gt; in the URL. In the JSON body of the request, we will send our username and password.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Z_NB-qL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h79i4ch4cdbo5l0j3hrt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Z_NB-qL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h79i4ch4cdbo5l0j3hrt.png" alt="Auth Flow Step 1 Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the authentication piece of the flow. Okta will return all the user info, including the session token. Since we want to automate this process, we will create a script so that this session token is saved into an environment variable. We can add scripts within the &lt;em&gt;&lt;a href="https://learning.postman.com/docs/writing-scripts/test-scripts/"&gt;Tests&lt;/a&gt;&lt;/em&gt; section. Add the script below to the &lt;em&gt;Tests&lt;/em&gt; section of this first request.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;responseBody&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sessionToken&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sessionToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Status code is 200&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;have&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Response returns a session token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;have&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sessionToken&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.Next, create a GET request to &lt;code&gt;{{oktaUrl}}/oauth2/default/v1/authorize&lt;/code&gt;. We will need to exchange that session token for an authorization code, which will involve sending a few values as query parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;client_id=&lt;code&gt;{{oktaClientId}}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;scope=openid&lt;/li&gt;
&lt;li&gt;redirect_uri=&lt;code&gt;{{redirectUri}}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;response_type=code&lt;/li&gt;
&lt;li&gt;state=state&lt;/li&gt;
&lt;li&gt;sessionToken=&lt;code&gt;{{sessionToken}}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;code_challenge=&lt;code&gt;{{codeChallenge}}&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details on what the parameters are used for, you can check out the docs &lt;a href="https://developer.okta.com/docs/guides/implement-auth-code/use-flow/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OyMGwm7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6y1cwqsnpqhgg1tpqwb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OyMGwm7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6y1cwqsnpqhgg1tpqwb.png" alt="Auth Flow Step 2 Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will save the authorization code from Okta's response to this request as an environment variable. Add the following script to the &lt;em&gt;tests&lt;/em&gt; section of this second request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;responseUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;postman&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getResponseHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Location&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;authorizationCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;responseUrl&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;responseUrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/code=&lt;/span&gt;&lt;span class="se"&gt;([^&lt;/span&gt;&lt;span class="sr"&gt;&amp;amp;&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;authorizationCode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;authorizationCode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Status code is 302&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;have&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;302&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Response returns an authorization code&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;authorizationCode&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3.Last, we will create a POST request to &lt;code&gt;{{oktaUrl}}/oauth2/{{authServer}}/v1/token?state=state&lt;/code&gt; to exchange the authorization code for our access token. We will need to send this in a &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; format with the following query parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;grant_type=authorization_code&lt;/li&gt;
&lt;li&gt;redirect_uri=&lt;code&gt;{{redirectUri}}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;code=&lt;code&gt;{{authorizationCode}}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;code_verifier=&lt;code&gt;{{codeVerifier}}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;client_id=&lt;code&gt;{{oktaClientId}}&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VAwXPWg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgbsbhebkhx82jk6ohwz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VAwXPWg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgbsbhebkhx82jk6ohwz.png" alt="Auth Flow Step 3 Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will finally save the access token that we need from Okta's response to this request as an environment variable. Add the the following script to the &lt;em&gt;tests&lt;/em&gt; section of this third request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;responseBody&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;accessToken&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Status code is 200&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;have&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Response returns an access token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;pm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;have&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;access_token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;span&gt;Running Our Collection and Final Setup&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now that we have everything setup, we can simply run our collection using Postman runners. To do this, double click on the &lt;em&gt;Okta Login&lt;/em&gt; collection. You will see the &lt;em&gt;Run&lt;/em&gt; button, which opens up the &lt;em&gt;Runner&lt;/em&gt; tab.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ja5KzROR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hkr1iv3kclvdzebo1sa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ja5KzROR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hkr1iv3kclvdzebo1sa.png" alt="Okta Login Collection Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We then can click on &lt;em&gt;Run Okta Login&lt;/em&gt; and voila! We have our access token saved in our environment variables, and we can now use it to hit protected endpoints on our server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ya70SNeF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na1gxyo5rztqyybd6vcv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ya70SNeF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na1gxyo5rztqyybd6vcv.png" alt="Postman Runner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;Access Token Usage&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Accessing our protected routes is possible now that we have our access token. In the authorization tab of your request, select &lt;em&gt;Bearer Token&lt;/em&gt; from the drop-down menu. Add &lt;code&gt;{{accessToken}}&lt;/code&gt; as the value for &lt;em&gt;Token&lt;/em&gt; and presto‚Ä¶ we can now make API requests as if we were logged in as a user!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--48kS2uSv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pku5ixlu51fe92r2t1dv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--48kS2uSv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pku5ixlu51fe92r2t1dv.png" alt="Access Token Usage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;Conclusion&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using Postman collection runners to get our Okta access token makes API testing and backend development much more streamlined. Since we can programmatically get our access token, this collection can also be useful in creating full regression tests to ensure that all endpoints (including the protected ones) are working as expected. This setup can also be tweaked to be used with other identity providers that utilize the authorization code flow, such as Auth0, AWS Cognito, etc. If you have any questions or improvements, let me know in the comments below! &lt;/p&gt;

</description>
      <category>productivity</category>
      <category>tutorial</category>
      <category>postman</category>
      <category>okta</category>
    </item>
    <item>
      <title>Will Self-Supervised Visual Transformers Replace Pre-Trained CNNs?</title>
      <author>Hugo</author>
      <pubDate>Tue, 01 Jun 2021 14:58:40 +0000</pubDate>
      <link>https://dev.to/zumolabs/will-self-supervised-visual-transformers-replace-pre-trained-cnns-4j7o</link>
      <guid>https://dev.to/zumolabs/will-self-supervised-visual-transformers-replace-pre-trained-cnns-4j7o</guid>
      <description>&lt;p&gt;Pre-trained CNNs are still king when training models for computer vision use cases. However, the emerging popularity of Visual Transformers (ViTs), and subsequent consensus about their unsupervised learning capabilities, gives unexpected space for ViTs to usurp the throne.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pretrained-cnns"&gt;
  &lt;/a&gt;
  Pre-Trained CNNs
&lt;/h1&gt;

&lt;p&gt;Convolutional Neural Networks work by sliding a pattern (formally known as the kernel, but also referred to as a "feature map") across an image (Slide 1). This sliding strategy is effective because it acts as a natural form of translation invariance: once a CNN can recognize something in one part of the image, it will recognize it in any part of the image [1]. However, this approach leads to a kind of fragility: feature maps are often overfit to a particular texture or object size.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--koHY4O-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rravd458nij591e86fz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--koHY4O-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rravd458nij591e86fz.png" alt="Slide 1: CNNs and Feature Maps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Building up feature maps requires a ton of data, and CNNs are usually pre-trained on a large generic dataset like COCO or ImageNet-the latter boasting over one million images and around 1,000 categories. Further, a pre-trained CNN can be fine-tuned to new tasks by cutting out the model head and retraining with a new, often much smaller, dataset (Slide 2).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zW8AZixI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8hgurjjqfh57dj73cp1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zW8AZixI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8hgurjjqfh57dj73cp1.png" alt="Slide 2: Pre-training and fine-tuning."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#transformers"&gt;
  &lt;/a&gt;
  Transformers
&lt;/h1&gt;

&lt;p&gt;Transformers have been popular in natural language processing (NLP) for quite some time. They work through a concept known as "self-attention," which pays certain input parts more attention than others [3]. In NLP, this allows for specific words within a sentence to be identified as more important. There are different types of attention and plenty of nuance for the experts to argue over, but the words "attention" and "focus" are good mental models of how these networks learn.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#selfsupervised-vit"&gt;
  &lt;/a&gt;
  Self-Supervised ViT
&lt;/h1&gt;

&lt;p&gt;Self-supervised training is a little different in that it does not require labels-you don't need to tell the model that the object in an image belongs to the category "cat," for example. Instead, a self-supervised training technique might involve cropping an image, feeding it through multiple networks, and then getting them all to agree on which features in the image are essential (Slide 3). This type of learning technique, called DINO [3], successfully trained visual transformers (transformers for visual tasks, e.g., images). The ViTs trained with DINO ended up surprisingly effective for classification tasks, reaching 80% top-1 accuracy on ImageNet. Inspecting the self-attention maps of these ViTs also shows that they can very precisely segment out objects in an image (Slide 4).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dnJIPpIN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/on2pdhpm8xcj4ukft1b0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dnJIPpIN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/on2pdhpm8xcj4ukft1b0.png" alt="Slide 3: Self-supervised training."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AxQ9zBAh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39aros0k882lpnsndrzz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AxQ9zBAh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39aros0k882lpnsndrzz.png" alt="Slide 4: Self-attention in ViT."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, the bold prediction: self-supervised ViTs will eventually replace pre-trained CNNs as the go-to feature encoders for computer vision tasks. There are still unanswered questions, such as whether ViTs will generalize outside the training distribution better than CNNs. But one thing is sure: not requiring labels during training will enable using much larger datasets. Consider the difference in capacity between ImageNet and a self-supervised ViT trained on the entire internet of images‚Ä¶&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Thanks for reading our latest paper exploration. If you love computer vision, check out zpy [4], our open-source synthetic data development toolkit. It's everything you need to generate and iterate on synthetic training data for computer vision. Your feedback, commits, and feature requests are invaluable as we continue to build a more robust set of tools for generating synthetic data. Meanwhile, if you could use support with a particularly tricky problem, please reach out.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h1&gt;

&lt;p&gt;[1] CS231n Convolutional Neural Networks for Visual Recognition‚Ää-‚ÄäConvolutional Neural Networks (&lt;a href="https://cs231n.github.io/convolutional-networks/"&gt;https://cs231n.github.io/convolutional-networks/&lt;/a&gt;)&lt;br&gt;
[2] Transformer: A Novel Neural Network Architecture for Language Understanding (&lt;a href="https://ai.googleblog.com/2017/08/transformer-novel-neural-network.html"&gt;https://ai.googleblog.com/2017/08/transformer-novel-neural-network.html&lt;/a&gt;)&lt;br&gt;
[3] Emerging Properties in Self-Supervised Vision Transformers (&lt;a href="https://arxiv.org/pdf/2104.14294.pdf"&gt;https://arxiv.org/pdf/2104.14294.pdf&lt;/a&gt; ).&lt;br&gt;
[4] zpy (github.com/ZumoLabs/zpy)&lt;/p&gt;

</description>
      <category>deeplearning</category>
      <category>datascience</category>
      <category>python</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>How to start competitive coding!</title>
      <author>Rishabh Dwivedi</author>
      <pubDate>Tue, 01 Jun 2021 14:54:38 +0000</pubDate>
      <link>https://dev.to/rishabh062/how-to-start-competitive-coding-ce4</link>
      <guid>https://dev.to/rishabh062/how-to-start-competitive-coding-ce4</guid>
      <description>&lt;h3&gt;
  &lt;a href="#competitive-programmingcp-is-a-mind-sport-usually-held-over-the-internet-or-a-local-network-involving-participants-trying-to-program-according-to-provided-specifications"&gt;
  &lt;/a&gt;
  Competitive programming(CP) is a mind sport usually held over the Internet or a local network, involving participants trying to program according to provided specifications.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#basic-requirement-for-cp-is"&gt;
  &lt;/a&gt;
  Basic requirement for CP is.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Participation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Basically CP demands regular participation on various contest which held over internet.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Learning&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are participation but not learning new concepts then it is of no use. You need to maintain both.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Patience&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most important thing you need to learn is patience while doing the problems. Some time you will not get AC or green tick for particular problem but must not loose hope. You need to explore it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-steps-in-learning-competitive-programming"&gt;
  &lt;/a&gt;
  Basic steps in learning Competitive programming:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Choose well known programming language.&lt;/strong&gt;&lt;br&gt;
Choosing a correct programming language is great concert here. Although you can do CP in any language but usually C++/C or JAVA is most preferred because of speed and time of execution which is great in this language. Python is slow as compared to C/C++ and JAVA, that's why very less number of programmers used to do Competitive Programming.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Choosing some platform for practising competitive programming.&lt;/strong&gt;&lt;br&gt;
There are many platform present where you can practice and take part in contest.&lt;br&gt;
Some of them are.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.codechef.com/"&gt;Codechef&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://codeforces.com/"&gt;Codeforces&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://leetcode.com/"&gt;Leetcode&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://practice.geeksforgeeks.org/"&gt;GeeksforGeeks&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.hackerrank.com/"&gt;Hackerrank&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Learn Data Structures and Algorithms.&lt;/strong&gt;&lt;br&gt;
Data Structures are something that helps you in making the program more efficient. Algorithms are something that use various data structures to implement the logic and solve the program.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Learn them from here.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/data-structures/"&gt;GeeksforGeeks-DS&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.geeksforgeeks.org/fundamentals-of-algorithms/"&gt;GeeksforGeeks-Algo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Last--&amp;gt; Practice practice Practice a lot.&lt;/strong&gt;&lt;br&gt;
If you want to become excel on that you need to practice and keep learning from your mistake .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#start-your-journey-as-soon-as-possible-and-enjoy-this-sports"&gt;
  &lt;/a&gt;
  Start your journey as soon as possible and enjoy this sports.
&lt;/h3&gt;

&lt;p&gt;Visit my &lt;em&gt;codechef&lt;/em&gt; profile--&amp;gt; &lt;a href="https://www.codechef.com/users/rishabh062"&gt;Rishabh&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow me here.&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://twitter.com/Rishabh07147212"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.linkedin.com/in/rishabh-dwivedi-28737b1a0"&gt;Linkedln&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>watercooler</category>
      <category>discuss</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
