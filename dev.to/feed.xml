<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Resources for enthusiasts - software dev. &amp; cybersecurity</title>
      <author>Prakhar Yadav</author>
      <pubDate>Thu, 17 Jun 2021 11:15:19 +0000</pubDate>
      <link>https://dev.to/prakh_r/resources-for-enthusiasts-software-dev-cybersecurity-1gha</link>
      <guid>https://dev.to/prakh_r/resources-for-enthusiasts-software-dev-cybersecurity-1gha</guid>
      <description>&lt;p&gt;Hey folks. Tell me if this happens to you as well.&lt;br&gt;
I find myself often torn up between my interests in web development and cybersecurity. I try to learn stuff in both the paths but it becomes very exhausting.&lt;br&gt;
Sounds familiar?&lt;/p&gt;

&lt;p&gt;When it comes to learning, multitasking is not really a friend. Better progress is made when we pick up one thing and achieve the target. But the FOMO (fear of missing out) on the other thing distracts too much.&lt;/p&gt;

&lt;p&gt;To deal with this, I at least try to stay up-to-date on the latest developments, outside of my learning time, through &lt;strong&gt;podcasts&lt;/strong&gt;, &lt;strong&gt;news-boards&lt;/strong&gt; &amp;amp; &lt;strong&gt;twitter&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here are my go-to resources for cybersecurity:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://darknetdiaries.com/"&gt;Darknet Diaries podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pod.link/909407206"&gt;Kaspersky Transatlantic Cable podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bbc.co.uk/programmes/w13xtvg9/episodes/downloads"&gt;Lazarus Heist podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://malicious.life/"&gt;Malicious Life podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://softwareengineeringdaily.com/"&gt;Software Engineering Daily podcast &amp;amp; newsboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/devdiscuss"&gt;DEV Discuss podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codenewbie.org/podcast"&gt;Codenewbie podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.darkreading.com/"&gt;DarkReading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://threatpost.com/"&gt;ThreatPost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kaspersky.co.in/blog/"&gt;Kaspersky Daily&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These podcasts and articles are the ones that help me &amp;amp; I hope you find them helpful as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--katmilUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jj26ofrnkboxclrxmjii.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--katmilUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jj26ofrnkboxclrxmjii.jpg" alt="CodeWithP logo"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>beginners</category>
      <category>devjournal</category>
      <category>webdev</category>
    </item>
    <item>
      <title>😡 Agonies, Despair and self hosted Redash BI server on Microsoft Azure cloud platform 😋 part 1 </title>
      <author>alxizr</author>
      <pubDate>Thu, 17 Jun 2021 10:51:14 +0000</pubDate>
      <link>https://dev.to/alxizr/agonies-despair-and-self-hosted-redash-bi-server-on-microsoft-azure-cloud-platform-4e73</link>
      <guid>https://dev.to/alxizr/agonies-despair-and-self-hosted-redash-bi-server-on-microsoft-azure-cloud-platform-4e73</guid>
      <description>&lt;p&gt;Hello everyone,&lt;/p&gt;

&lt;p&gt;Thank you for joining in today to talk about the open source BI tool named Redash. We will focus today mainly on how to set up a self hosted Redash server in the cloud starting from a local environment setup. We will see the nuances hidden in the process and try to 'debug' on the fly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;You may wonder about the article's title to be a bit... maybe negative ?! Well i *** you not but the amount of energy and time wasted on solving simple issues is tremendous. I am writing this article so you potentially and hopefully won't go into the rabbit hole as a public service.&lt;/p&gt;

&lt;p&gt;Let's hit the road!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Before we begin, as always we want to know what is the minimum for us to be able to start and be efficient and productive.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-us/free/"&gt;Azure Account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.docker.com/products/docker-desktop/"&gt;Docker&lt;/a&gt; - You do need to be famalier with docker, docker compose and yaml configurations file. In case you are not, I will suggest visiting and reading &lt;a href="https://dev.to/alxizr/that-time-when-you-thought-you-knew-y-a-ml-5302"&gt;this&lt;/a&gt; article.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#general-setup"&gt;
  &lt;/a&gt;
  General setup
&lt;/h2&gt;

&lt;p&gt;We want to understand which services integrate with Redash so we can have a minimalistic working example. We will list now what we need for us for the purpose of this article and later we will see what and where we can add aditional services that you may fancy for you custom self hosted setup.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Service List

&lt;ul&gt;
&lt;li&gt;nginx server&lt;/li&gt;
&lt;li&gt;redis server&lt;/li&gt;
&lt;li&gt;postgresql database&lt;/li&gt;
&lt;li&gt;Redash server&lt;/li&gt;
&lt;li&gt;Redash scheduler&lt;/li&gt;
&lt;li&gt;Redash worker x 3 (optional, minimum is 2)&lt;/li&gt;
&lt;li&gt;pgAdmin (optional, GUI for postgresql)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see there is quite a bit to it. We need all these services to be configured and to be available to work in harmony with one another so the goal to have a self hosted Redash is successful.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#local-environment"&gt;
  &lt;/a&gt;
  Local Environment
&lt;/h2&gt;

&lt;p&gt;In this step we will configure our development environment that is going to be almost the exact same as our operational cloud environment. We will use docker compose for this purpose, so install it if you don't already have it installed. I provided a link eralier in the prerequisites section.&lt;/p&gt;

&lt;p&gt;We are going to write a docker compose file that is going to be a bit hefty. We will not use external files (.env files), because when we are ready to proceed to the cloud setup, there is no option to be dependant on external files, this way we will make ourselves used to the same perspective.&lt;/p&gt;

&lt;p&gt;Let's first understand what these services are for in the list we wrote earlier. Redash is a python based application, so as postgresql and they work perfectly together. The reason we need a database for the Redash application itself is basically for the application management and maintenance. Redash is dependat on other data sources in order to display the BI you fancy. The use of Redis server in the setup is for caching and queueing purposes and Nginx server is there to be a reverse proxy. We will see that the nginx server is a customized one for the Redash purposes. We will take a look why we need the Redash workers later on.&lt;/p&gt;

&lt;p&gt;No we will write our docker compose file, we will fetch all our services from &lt;a href="https://hub.docker.com/"&gt;docker hub&lt;/a&gt;. I would suggest that you explore it for the specific services that we are going to be using and also maybe other services that you are interested in. In my opinion the instructions written in docker hub are a greate resource.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# docker-compose.yml&lt;/span&gt;

&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3.9"&lt;/span&gt;

&lt;span class="na"&gt;x-environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;&amp;amp;base_environment&lt;/span&gt;
    &lt;span class="na"&gt;PYTHONUNBUFFERED&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="na"&gt;REDASH_WEB_WORKERS&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;
    &lt;span class="na"&gt;REDASH_LOG_LEVEL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;INFO"&lt;/span&gt;
    &lt;span class="na"&gt;REDASH_RATELIMIT_ENABLED&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;false"&lt;/span&gt;
    &lt;span class="na"&gt;REDASH_REDIS_URL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;redis://redis_server:6379/0"&lt;/span&gt;
    &lt;span class="na"&gt;REDASH_MAIL_DEFAULT_SENDER&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;redash@example.com"&lt;/span&gt;
    &lt;span class="na"&gt;REDASH_ADDITIONAL_QUERY_RUNNERS&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;redash.query_runner.python"&lt;/span&gt;
    &lt;span class="na"&gt;REDASH_DATABASE_URL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;postgresql://postgresuser:postgrespassword@postgresdb/redash"&lt;/span&gt;


&lt;span class="na"&gt;x-base_redash&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;&amp;amp;base_redash&lt;/span&gt;
  &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_environment&lt;/span&gt;
  &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;redash/redash:8.0.2.b37747&lt;/span&gt;
  &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;


&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# redis&lt;/span&gt;
  &lt;span class="na"&gt;redis_server&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;redis:alpine&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;redis_server_local&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;unless-stopped&lt;/span&gt;

  &lt;span class="c1"&gt;# database&lt;/span&gt;
  &lt;span class="na"&gt;postgresdb&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgres:alpine&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgresdb_server_local&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5432:5432"&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;POSTGRES_HOST_AUTH_METHOD&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;trust"&lt;/span&gt;
      &lt;span class="na"&gt;POSTGRES_USER&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgresuser&lt;/span&gt;
      &lt;span class="na"&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgrespassword&lt;/span&gt;
      &lt;span class="na"&gt;POSTGRES_DB&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;redash&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./postgres-data:/var/lib/postgresql/data&lt;/span&gt;

  &lt;span class="c1"&gt;# pgAdmin&lt;/span&gt;
  &lt;span class="na"&gt;pgAdmin&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;pgAdmin_local"&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dpage/pgadmin4&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;11100:80"&lt;/span&gt;
      &lt;span class="c1"&gt;# - "11443:443"&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;False"&lt;/span&gt;
      &lt;span class="na"&gt;PGADMIN_DEFAULT_EMAIL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;alex@mail.com&lt;/span&gt;
      &lt;span class="na"&gt;PGADMIN_DEFAULT_PASSWORD&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;password&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;postgresdb&lt;/span&gt;

    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./pgadmin:/var/lib/pgadmin&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./pgadmin/backup:/var/lib/pgadmin/storage&lt;/span&gt;

  &lt;span class="c1"&gt;# redash server&lt;/span&gt;
  &lt;span class="na"&gt;server&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_redash&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5000:5000"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5678:5678"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;8081:8080"&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;postgresdb&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;redis_server&lt;/span&gt;

  &lt;span class="c1"&gt;# redash scheduler&lt;/span&gt;
  &lt;span class="na"&gt;scheduler&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_redash&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;scheduler&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_environment&lt;/span&gt;
      &lt;span class="na"&gt;QUEUES&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;celery"&lt;/span&gt;
      &lt;span class="na"&gt;WORKERS_COUNT&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

  &lt;span class="c1"&gt;# redash worker 1&lt;/span&gt;
  &lt;span class="na"&gt;scheduled_worker&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_redash&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;worker&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_environment&lt;/span&gt;
      &lt;span class="na"&gt;QUEUES&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;scheduled_queries"&lt;/span&gt;
      &lt;span class="na"&gt;WORKERS_COUNT&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

  &lt;span class="c1"&gt;# redash worker 2&lt;/span&gt;
  &lt;span class="na"&gt;adhoc_worker&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_redash&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;worker&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_environment&lt;/span&gt;
      &lt;span class="na"&gt;QUEUES&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;queries"&lt;/span&gt;
      &lt;span class="na"&gt;WORKERS_COUNT&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;

  &lt;span class="c1"&gt;# redash worker 3&lt;/span&gt;
  &lt;span class="na"&gt;scheduled_worker&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_redash&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;worker&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_environment&lt;/span&gt;
      &lt;span class="na"&gt;QUEUES&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;schemas"&lt;/span&gt;
      &lt;span class="na"&gt;WORKERS_COUNT&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

  &lt;span class="c1"&gt;# nginx - pay attention to the image name&lt;/span&gt;
  &lt;span class="na"&gt;nginx&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;redash/nginx:latest&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;8080:80"&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
    &lt;span class="na"&gt;links&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;server:redash&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we finished writing our docker compose yml configurations file we are ready to spin up our local environment and see it in action. We want to open the terminal in the same directory where we saved our docker-compose.yml file and also open docker desktop. Now run the next command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose &lt;span class="nt"&gt;-f&lt;/span&gt; docker-compose.yml up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see that the docker images are pulled from docker hub and and all the links are created one after the other. In the end of the startup you should see all containers available and colored green to indicate that they are healty. You also can see that the terminal is now blocked because of all the logs we that are streamed to it. We did it on purpose actually, we needed to see the logs. Obviousely we could run it in detached mode. I guess that maybe you want to see if Redash is working now? Let's locate the nginx container inside docker desktop, hover on that row and click on the 'open in browser' button.&lt;/p&gt;

&lt;p&gt;Surprise! it doesn't work!! But why ? We did everything right. Well that is the first neuance. There is one more command we need to run to make it work locally. As our terminal is busy with the logs stream, I want to open a new terminal and run inside of it a one time command. You can close it after we are done.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose &lt;span class="nt"&gt;-f&lt;/span&gt; docker-compose.yml run server create_db
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command tells the Redash server to run a pre configured database setup script so it will be able to manage itself. You need to pay attention and make sure that this command ends successfully other wise no Redash for you!&lt;/p&gt;

&lt;p&gt;I would like to take the opportunity now and talk about another neuance here. If you remember we are using a specific version of Redash image (look at the anchor declaration), other images, older ones, may fail and crash during the last command that we run to setup the database. In case that happens, pay attention what you need to do, the solution is very easy but it took us a very long while to figure it out. You will have to create a database named 'redash' manually inside the postgresql server instance. I suggest using the pgAdmin instance that we listed as one of our services availabe locally. You can either use the same details as i wrote here in the connection string and the environment values that i set for postgres or you can change it. What ever you like. So once you connected to the postgres server instance and created the 'redash' database, just run the last command again.&lt;/p&gt;

&lt;p&gt;Now let's go back to the browser and refresh. VOILÀ! At this point you should be seeing blanc, fresh Redash instance welcome screen that is asking you to create the first account with username as email and password to take the role of an admin.&lt;/p&gt;

&lt;p&gt;As agreed in the beginning, we are not going to actually create the dashboards and actually make use of the BI capabilities. We are only talking about the setup here. Once we are finished with also creating our Azure cloud environment for Redash, we will take a look at some other configurations we need in order to make use of it properly.&lt;/p&gt;

&lt;p&gt;I want to discuss about the docker compose configurations file. You can see that we make use of YAML anchors here. We actually have 2 of them. One for describing a Redash base service and the other is for the environment variables we want to pass to each instance. The service named 'server' is the one that runs the Redash application and it gets everything that the base_redash object contains, the Redash workers on the other hand, well they need a specific configurations on top of the base_redash object. We obviousely could write everything inline but i guess you can understand that we would get a mile long configurations file. If we can reuse instead of replicate then this is what we will do. The workers fill in for particular roles and each of them needs a specific configurations to do it. We pass via the environment these configurations, as you can see we actually extend and overide the base_environemnt object with each worker instance. The special '&amp;lt;&amp;lt;' double chevron right sign is used inside the YAML language to merge and override key: value pairs in the same object. What we did was declaring key: value pairs in the global obejct and override it as we needed to and also we added additinal keys QUEUES, WORKERS_COUNT that holds different values per worker (again, i will recommend reading the article i linked in the beggining to understand YAML better).&lt;/p&gt;

&lt;p&gt;As this discussion / guide is getting to be a bit long, I decided to split it to 2 parts. We will end now this part with a working local environment so you could explore a bit on your own and I will release the second part once i finish it hopefully over the wekend.&lt;/p&gt;




&lt;p&gt;Part 2 is coming... &lt;br&gt;
Stay tuned for next&lt;br&gt;
Like, subscribe, comment and whatever ...&lt;br&gt;
Goodbye&lt;/p&gt;

</description>
      <category>devops</category>
      <category>azure</category>
      <category>docker</category>
      <category>redash</category>
    </item>
    <item>
      <title>News of RPA cutting down about 10 million jobs in India</title>
      <author>dbc2201</author>
      <pubDate>Thu, 17 Jun 2021 10:26:17 +0000</pubDate>
      <link>https://dev.to/dbc2201/news-of-rpa-cutting-down-about-10-million-jobs-in-india-38c1</link>
      <guid>https://dev.to/dbc2201/news-of-rpa-cutting-down-about-10-million-jobs-in-india-38c1</guid>
      <description>&lt;p&gt;Recently, there has been a lot of commotion in the news where people are talking about "their worst fears coming to reality", "robots taking over the world", etc. The headlines being somewhere like robots forcing companies to cut down on about 10 million jobs, saving them about 7 lakh crore of money in revenues. People are freaking out over it as if their jobs will be gone now and they will be left helpless.&lt;/p&gt;

&lt;p&gt;Seems plausible, right? So I wanted to shed some light around the topic, since I'm currently studying RPA professionally as part of my job currently and soon will be teaching other professionals on how to get ready for RPA in their jobs. So, I'm not an "expert" on the subject, but being closely related to the IT industry in India for about 7+ years now, and now seeing RPA in action with my own eyes for some time, I thought I could help clear out the confusions people have about the subject and news.&lt;/p&gt;

&lt;p&gt;First of all, RPA (Robotic Process Automation) is basically creating some software (or code) called "robots", which can do some menial, monotonous process for an employee of a company. According to UiPath (a company working extensively with RPA, valued at 1 billion dollars) says this about RPA &lt;strong&gt;"RPA is the technology that allows computer software to mimic actions typically performed by humans interacting with digital systems to execute business processes."&lt;/strong&gt;. Scary, right? &lt;/p&gt;

&lt;p&gt;Well, not so much. RPA is currently not at a position where it could be applied to all the jobs of the IT industry in the worlds, or it could possibly take over complete aspects of a person's job. Currently, it is more suited to some specific areas like: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Payroll Processing&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Payroll processing refers to the actions that companies take to pay their employees - keeping track of their presence, of their salaries, bonuses and taxes. &lt;br&gt;
Payroll processing needs manual intervention month after month, every year. An RPA system can be used to extract the details that are required from handwritten time sheets and calculate the pay from their stipulated contracts and pay them as well (by even ordering the necessary bank transactions).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Client Information Updates&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Any organization that has implemented a CRM faces all sorts of related issues - the client-base is spread across many geographies, there are frequent calls to the back-end databases, and updates and changes are coming from all sources.&lt;br&gt;
RPA solutions can process these requests in batches instead of one after the other, reducing the load on the back-end systems and ensuring better performance and data quality across the whole application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Renewal Process&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Irrespective of industry, the contract renewal process is in general a complex process, but not necessarily due to exceptions and complications, but rather to the number of operations and the synchronization between different departments and systems.&lt;br&gt;
Robots can take over the entire process, starting with the standardized communication with the client, processing the changes, drafting the documents and updating the internal systems accordingly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Financial Statement Reconciliation&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Financial statement reconciliation covers all the operations (done mostly by the accounting teams) of matching orders, payments, losses, margins, and so on, with accounts and financial statements. It is a common process that an organization needs to manage in order to ensure clean records and reliable financial documents.&lt;br&gt;
This process is well handled by the RPA software robots. Once they are set up, they can seamlessly replace the humans who would have to do these jobs, from the beginning to the end.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Compliance Reporting&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
As organizations grow, it becomes increasingly difficult to closely monitor the compliance requirements that each department has to follow: reporting to authorities, complying with the internal procedures, audit requirements, and so on.&lt;br&gt;
Robots can be set up to cover all these needs, with a low error rate and low human intervention.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Customer Complaint Processing&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Irrespective of industry, customer complaints are always on the radar. Their number and substance is an important indicator of the business health and good predictor of the future of the company.&lt;br&gt;
Through RPA, customer complaints can be categorized based on keywords and other criteria, and possible solutions can be suggested to the customers right away. By doing so, the customer complaints can be answered 24 x 7 instead of 8 hours a day and only 5 days a week.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If I were to define RPA, I would RPA is a way of easing up the repetitive parts of a person's job, by creating specialized robots to do it. But it is a long way from actually taking over the job itself. So, people do not need to worry a lot, even if it looks like there are things that you do in the above list, and it could be taken over by a robot, it is not going to happen soon, so you will get some time to potentially upgrade your skills to get a better job.&lt;/p&gt;

&lt;p&gt;Hope I was able to help you put your mind at ease, if you would like to know more, please watch these videos&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/dJ9c2xq6mas"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/davZONRujxE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pcRrKFsjqtU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3R67RGjZoOM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>rpa</category>
      <category>jobs</category>
      <category>india</category>
      <category>news</category>
    </item>
    <item>
      <title>Build API to deliver slack messages with no code</title>
      <author>Kartik Grewal</author>
      <pubDate>Thu, 17 Jun 2021 10:23:41 +0000</pubDate>
      <link>https://dev.to/kartik0709/build-api-to-deliver-slack-messages-with-no-code-54hb</link>
      <guid>https://dev.to/kartik0709/build-api-to-deliver-slack-messages-with-no-code-54hb</guid>
      <description>&lt;p&gt;Every day so many people depend on slack to stay updated in their daily life. Hence, we may need to deliver some message or an alert to slack programmatically via an API in our product or webapp. This is a simple guide to show how you can achieve the same with no coding, to quickly hook up slack with your webapp.&lt;/p&gt;

&lt;p&gt;Our goal is to create an endpoint that we can trigger to send our message on the slack. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We head over to &lt;a href="https://app.canonic.dev"&gt;Canonic&lt;/a&gt; and sign in using our social accounts. Next, we click on &lt;strong&gt;Create New&lt;/strong&gt; to create a project for our application. Click on next, then click on create to complete the process.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xUspkPvb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xUspkPvb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-1.png" alt="https://canonic.s3.amazonaws.com/public/devto/SW-1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create new project screen&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A popup asking your first table name will appear. If not, you can click on the &lt;strong&gt;+&lt;/strong&gt; icon in the header to create a new table. Let's name our first &amp;amp; only table for this project as &lt;strong&gt;Messages.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fo--lgU4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fo--lgU4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-2.png" alt="https://canonic.s3.amazonaws.com/public/devto/SW-2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We create a text field named "Message" as we'll need it in the API &amp;amp; also to store the messages we send out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Z-c-irX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Z-c-irX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-3.png" alt="https://canonic.s3.amazonaws.com/public/devto/SW-3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We hit deploy on the top right, and we'll be provided with a hosted backend. a database &amp;amp; basic CRUD endpoints per table to help us create an API for our slack.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;strong&gt;API&lt;/strong&gt; tab on the left to start adding the slack webhook. We select the &lt;strong&gt;createMessage&lt;/strong&gt; block in mutations. Click on the &lt;strong&gt;+&lt;/strong&gt; button. It'll open up a new webhook settings on the right hand side.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gqmhdrjm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gqmhdrjm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-4.png" alt="https://canonic.s3.amazonaws.com/public/devto/SW-4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select &lt;strong&gt;Message&lt;/strong&gt; type → Choose &lt;strong&gt;Slack&lt;/strong&gt; from the list of providers &amp;amp; you'll be provided with 2 fields for settings. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Trigger URL → This is the url which will be generated by slack&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Message Body → Message to send to slack channels. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BtB5SD4b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BtB5SD4b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-5.png" alt="https://canonic.s3.amazonaws.com/public/devto/SW-5.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For &lt;strong&gt;Trigger URL →&lt;/strong&gt; You'll need to create a webhook endpoint on Slack. Follow the slack documentation to help you through - &lt;a href="https://api.slack.com/messaging/webhooks"&gt;https://api.slack.com/messaging/webhooks&lt;/a&gt;. After you complete this guide, you should have a slack webhook endpoint, something like this - &lt;a href="https://hooks.slack.com/services/T012R73FZ4N/xxxxxx/4AVxuBwqSNVRZMsZ1tihdLln"&gt;https://hooks.slack.com/services/x&lt;/a&gt;xx/xxxx/xxxxx&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;For Message Body →&lt;/strong&gt; We want to send the text found in the message field of the API to slack. So we can make use of Handlebars templates &amp;amp; simply write &lt;code&gt;{{message}}&lt;/code&gt; in that field. This will extract the message field from the API payload and forward it to slack.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The above concludes the setup for the API that was required. Now let's start using this API to start sending messages to our slack channels.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Triggering Slack API:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This will require a combination of things that we need for securely connecting our application with this API.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Access token for our API&lt;/li&gt;
&lt;li&gt;Documentation for the API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Access Tokens&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;strong&gt;Settings&lt;/strong&gt; using left side menu. Go to &lt;strong&gt;Access&lt;/strong&gt; tokens tab.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EnmPIPk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EnmPIPk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-6.png" alt="https://canonic.s3.amazonaws.com/public/devto/SW-6.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;strong&gt;Create a new token,&lt;/strong&gt; and provide it a suitable name and permissions. Click on &lt;strong&gt;Create.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vgtlrCzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vgtlrCzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-7.png" alt="https://canonic.s3.amazonaws.com/public/devto/SW-7.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You've successfully generated an access token for your API. Copy it &amp;amp; save it some place safe as &lt;strong&gt;you won't be able to see it again&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qMEU4Djd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qMEU4Djd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-8.png" alt="https://canonic.s3.amazonaws.com/public/devto/SW-8.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Head over to the docs tab using the left-hand side, and you'll find documentation for &lt;strong&gt;createMessage&lt;/strong&gt; API (the API block where we added our webhook).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vbhdMAw6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vbhdMAw6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-9.png" alt="https://canonic.s3.amazonaws.com/public/devto/SW-9.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Testing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After completing all the necessary steps, we're finally ready to deliver our first message to the slack using API. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Let's copy the &lt;strong&gt;CURL&lt;/strong&gt; command that was mentioned in the documentation. Fill in your access token and paste it into the terminal.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Our curl command will look something like this.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜  ~ curl 'https://xxxx.hem.canonic.dev/api/messages' \
  --request POST \
  --header "Content-type: application/json" \
  --header "Authorization: xxxxxx-xxxxx-xxxx" \
  --data '{
    "input": {
      "message": "Hello Slack! How are you?",
    }
  }'
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;A successful response will look like this:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{"data":{"message":"Hello Slack! How are you?","_id":"60bf30ee2529700009fd2a4a","createdAt":"2021-06-08T08:57:18.316Z","updatedAt":"2021-06-08T08:57:18.316Z","__v":0,"id":"60bf30ee2529700009fd2a4a"},"error":null,"success":true}%
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;And show up on your slack like this!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--25Dl7roe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--25Dl7roe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/SW-10.png" alt="https://canonic.s3.amazonaws.com/public/devto/SW-10.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And just like that, we can setup an alerting or notification system for slack. You can also add more fields apart from message like name. This will allow you to formulate a much better structured in message body.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Hi {{ name }},

My message - {{ message }}

Thanks
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Find detailed documentation for this feature here - &lt;a href="https://docs.canonic.dev/concepts/webhook-providers/slack"&gt;https://docs.canonic.dev/concepts/webhook-providers/slack&lt;/a&gt;&lt;/p&gt;

</description>
      <category>frontend</category>
      <category>javascript</category>
      <category>api</category>
      <category>nocode</category>
    </item>
    <item>
      <title>Apply rules and automations to your npm registries</title>
      <author>Daniel Parmenvik</author>
      <pubDate>Thu, 17 Jun 2021 10:03:49 +0000</pubDate>
      <link>https://dev.to/danielp/apply-rules-and-automations-to-your-npm-registries-41bl</link>
      <guid>https://dev.to/danielp/apply-rules-and-automations-to-your-npm-registries-41bl</guid>
      <description>&lt;p&gt;Most developers would rather be coding than spend time managing dependencies. To keep up with the fast releases proper tooling is a necessity.&lt;/p&gt;

&lt;p&gt;Manually monitoring dependencies for known vulnerabilities is both a time sink and a liability. Performing point-in-time checks will eventually mean you regret why you didn't do it automatically.&lt;/p&gt;

&lt;p&gt;Spending time making sure that all teams and systems only use the same approved dependencies, across different environments, is also neither productive or fun.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/danielp/how-to-use-secure-private-npm-registries-36m9"&gt;Managing dependencies securely and efficiently&lt;/a&gt; involves the need of a tool that offloads some of the work for you. So you can focus on other things - and avoid human error. &lt;/p&gt;

&lt;p&gt;Watch this video to learn how &lt;a href="https://docs.bytesafe.dev/plugins/"&gt;Plugins&lt;/a&gt; and &lt;a href="https://docs.bytesafe.dev/policies/"&gt;Policies&lt;/a&gt; in Bytesafe let you apply business rules and automations for your secure private npm registries - so you don't have to.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/6fqkKu51O94"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;🧑‍💻 Sit back, relax and let Byteasafe's plugins &amp;amp; policies do the work for you.&lt;/p&gt;

&lt;p&gt;🔍 &lt;strong&gt;Here are just a few use cases:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;✅ Lock versions for a registry with &lt;a href="https://bytesafe.dev/posts/freeze-registry-states/"&gt;Freeze&lt;/a&gt; - making sure every user gets the exact same versions from the registry that you used for development - A powerful way to lock dependencies after development is completed, before passing it to QA/Testing or build systems.&lt;/p&gt;

&lt;p&gt;✅ &lt;a href="https://docs.bytesafe.dev/policies/block/"&gt;Block&lt;/a&gt; specific packages or packages with known vulnerabilities&lt;/p&gt;

&lt;p&gt;✅ &lt;a href="https://docs.bytesafe.dev/plugins/version-auto-increment/"&gt;Auto increment&lt;/a&gt; package versions on publish to the registry - so you don’t have to manually step the version before every publish&lt;/p&gt;

&lt;p&gt;✅ &lt;a href="https://docs.bytesafe.dev/plugins/forward/"&gt;Auto forward&lt;/a&gt; package versions to linked upstream registries. Storing maintainer tokens securely in Bytesafe + using &lt;a href="https://docs.bytesafe.dev/plugins/forward/"&gt;Forward&lt;/a&gt; plugins removes the need to share maintainer tokens (and avoid security risks).&lt;/p&gt;

&lt;p&gt;There is more to discover! &lt;a href="https://login.bytesafe.dev/signup"&gt;Give Bytesafe a try&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/bytesafedev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xa6AP1T3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3uehdo8j7i2g40bk382.png" alt="Follow Bytesafe on Twitter"&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/bytesafe?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-bytesafe"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DhhoEKYZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.producthunt.com/widgets/embed-image/v1/featured.svg%3Fpost_id%3D300547%26theme%3Dlight" alt="Bytesafe - A better way to control your software supply chain | Product Hunt"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>timetrace: New features of the time tracking CLI</title>
      <author>Dominik Braun</author>
      <pubDate>Thu, 17 Jun 2021 09:45:52 +0000</pubDate>
      <link>https://dev.to/dominikbraun/timetrace-new-features-of-the-time-tracking-cli-2d62</link>
      <guid>https://dev.to/dominikbraun/timetrace-new-features-of-the-time-tracking-cli-2d62</guid>
      <description>&lt;p&gt;Since its initial release in May, a lot of powerful features have been added to &lt;a href="https://github.com/dominikbraun/timetrace"&gt;timetrace&lt;/a&gt;, a simple time tracking CLI. I'm going to introduce some of the features present in timetrace v0.10.0 in this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-timetrace"&gt;
  &lt;/a&gt;
  Installing timetrace
&lt;/h2&gt;

&lt;p&gt;If you're on macOS, you can simply use Homebrew:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew tap dominikbraun/timetrace
brew install timetrace
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;timetrace is available for all major platforms. Check out the &lt;a href="https://github.com/dominikbraun/timetrace#installation"&gt;installation instructions&lt;/a&gt; and pick yours.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Basic usage:&lt;/strong&gt; If you're new to timetrace, &lt;a href="https://dev.to/dominikbraun/tracking-my-working-time-using-timetrace-4hj4"&gt;Tracking my working time using timetrace&lt;/a&gt; might be a good read. There also are &lt;a href="https://github.com/dominikbraun/timetrace#readme"&gt;detailed examples and the CLI reference&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#fire-project-modules"&gt;
  &lt;/a&gt;
  🔥 Project modules
&lt;/h2&gt;

&lt;p&gt;With version 0.7.0, support for &lt;em&gt;project modules&lt;/em&gt; has been added to timetrace. Project modules are sub-projects of an existing project.&lt;/p&gt;

&lt;p&gt;For example, we could create a project called &lt;code&gt;make-coffee&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace create project make-coffee
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Project modules are the exact same thing as projects, expect that they can be associated with a parent project. This association is marked by an &lt;code&gt;@&lt;/code&gt;. For example, &lt;code&gt;grind-beans@make-coffee&lt;/code&gt; is a module of the project &lt;code&gt;make-coffee&lt;/code&gt;. Therefore, creating this project is fairly simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace create project grind-beans@make-coffee
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;timetrace recognizes those modules. For example, when listing all records for a given project, its modules will be included:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace list records today -p make-coffee
+-----+-------------------------+---------+-------+------------+
|  #  |   PROJECT               |  START  |  END  |  BILLABLE  |
+-----+-------------------------+---------+-------+------------+
|   1 | make-coffee             | 08:28   | 08:35 | no         |
|   2 | grind-beans@make-coffee | 08:25   | 08:27 | no         |
+-----+-------------------------+---------+-------+------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To view all projects along with their modules, just run &lt;code&gt;timetrace list projects&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fire-revert-changes-to-projects-and-records"&gt;
  &lt;/a&gt;
  🔥 Revert changes to projects and records
&lt;/h2&gt;

&lt;p&gt;timetrace v0.8.0 introduced the &lt;code&gt;--revert&lt;/code&gt; flag for the &lt;code&gt;edit project&lt;/code&gt;, &lt;code&gt;delete project&lt;/code&gt;, &lt;code&gt;edit record&lt;/code&gt; and &lt;code&gt;delete record&lt;/code&gt; commands. It allows to restore the resource prior to its modification.&lt;/p&gt;

&lt;p&gt;For example, let's delete the &lt;code&gt;make-coffee&lt;/code&gt; project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace delete project make-coffee
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Oops! That shouldn't have happened. Let's restore the state of the project prior to the &lt;code&gt;delete&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace delete project make-coffee --revert
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;--revert&lt;/code&gt; flag reverts the change introduced by the previous command, thus our project exists again.&lt;/p&gt;

&lt;p&gt;Edited or deleted records can be restored the exact same way. The following command will edit the newest record and lengthen it by 1 hour:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace edit record latest --plus 1h
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will increase the end time of the records by 1 hour.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Hint:&lt;/strong&gt; To get a list of the available records of today and the record key for editing them, use &lt;code&gt;timetrace list records today&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If this was a mistake, reverting the previous command is very simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace edit record latest --revert
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The end time of the record will now be the same as before.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fire-an-enhanced-tracking-status"&gt;
  &lt;/a&gt;
  🔥 An enhanced tracking status
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;timetrace status&lt;/code&gt; command got some love with timetrace v0.9.0 and v0.10.0, addressing some requested features.&lt;/p&gt;

&lt;p&gt;First of all, &lt;code&gt;status&lt;/code&gt; now not only calculates the overall work time of the current day but also the overall &lt;em&gt;break time&lt;/em&gt;. How long have you been taking breaks today? Take a look at the right column!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eKRWAomu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07r5abkba1scqk64jjif.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eKRWAomu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07r5abkba1scqk64jjif.png" alt="The current tracking status"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#print-your-custom-status"&gt;
  &lt;/a&gt;
  Print your custom status
&lt;/h3&gt;

&lt;p&gt;It is also possible to print the tracking status in your custom format using the &lt;code&gt;--format&lt;/code&gt; flag. There is a &lt;a href="https://github.com/dominikbraun/timetrace#print-the-tracking-status"&gt;pre-defined set of variables&lt;/a&gt;. For example, &lt;code&gt;{project}&lt;/code&gt; will be replaced with the name of the current project.&lt;/p&gt;

&lt;p&gt;To print an output like &lt;code&gt;Currently working on make-coffee - Worked today: 2h&lt;/code&gt;, issue the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace status --format "Currently working on {project} - Worked today: {trackedTimeToday}"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another new option is &lt;code&gt;--output&lt;/code&gt;. It allows the users to specify an output format. The default is the table shown above, but it is also possible to output the same data as JSON:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace status --output json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will produce the following output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"project"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"web-store"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"trackedTimeCurrent"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1h 45min"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"trackedTimeToday"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"7h 30min"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"breakTimeToday"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0h 30min"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that the JSON keys are the same as the formatting variables used by &lt;code&gt;--format&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This also enables a simple &lt;a href="https://github.com/dominikbraun/timetrace#starship-integration"&gt;Starship integration&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Now you're good to give those features a try, bookmark the project or provide some feedback!&lt;/p&gt;

&lt;p&gt;⭐ &lt;strong&gt;&lt;a href="https://github.com/dominikbraun/timetrace"&gt;dominikbraun/timetrace&lt;/a&gt;&lt;/strong&gt; ⭐&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>productivity</category>
      <category>go</category>
      <category>cli</category>
    </item>
    <item>
      <title>Learn How to Run Appwrite With Your Own Custom Proxy or Load Balancer</title>
      <author>Damodar Lohani</author>
      <pubDate>Thu, 17 Jun 2021 09:39:31 +0000</pubDate>
      <link>https://dev.to/appwrite/learn-how-to-run-appwrite-with-your-own-custom-proxy-or-load-balancer-28k</link>
      <guid>https://dev.to/appwrite/learn-how-to-run-appwrite-with-your-own-custom-proxy-or-load-balancer-28k</guid>
      <description>&lt;p&gt;Appwrite was designed to be flexible and customizable, and that was one of the main reasons we designed it using the Microservices architecture. Thanks to this design, it's very easy to adjust and deploy Appwrite on any existing architecture, especially container-based architectures. &lt;/p&gt;

&lt;p&gt;When deploying Appwrite in your own architecture, you might already have your own load balancer or proxy server for handling routing between different services. If this is your case, you might not need to use the Appwrite built-in Traefik load balancer. This post will demonstrate how you can easily replace the Appwrite load balancer with an Nginx proxy. Although we use Nginx for this example, the same can be applied to any proxy or load balancer that your heart desires.&lt;/p&gt;

&lt;p&gt;First, in the &lt;code&gt;docker-compose.yml&lt;/code&gt;, comment out the &lt;code&gt;traefik&lt;/code&gt; service. Now we will add &lt;code&gt;nginx&lt;/code&gt; service to replace &lt;code&gt;traefik&lt;/code&gt; and act as the entry point for Appwrite stack.&lt;/p&gt;

&lt;p&gt;Below the &lt;code&gt;traefik&lt;/code&gt; service, add the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;nginx&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;80:80&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;443:443&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./config:/etc/nginx&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;appwrite-certificates:/etc/ssl/private&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;appwrite&lt;/span&gt;
    &lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;gateway&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;appwrite&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we have added &lt;code&gt;./config&lt;/code&gt; volume. It contains the &lt;code&gt;nginx&lt;/code&gt; config. Create &lt;code&gt;config/nginx.conf&lt;/code&gt; file and add the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight conf"&gt;&lt;code&gt;&lt;span class="n"&gt;events&lt;/span&gt; {
    &lt;span class="n"&gt;worker_connections&lt;/span&gt; &lt;span class="m"&gt;1024&lt;/span&gt;;
}

&lt;span class="n"&gt;http&lt;/span&gt; {
    &lt;span class="n"&gt;server&lt;/span&gt; {
        &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;;
        &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;443&lt;/span&gt;;

        &lt;span class="c"&gt;# config for setting up and handling Appwrite SSL
&lt;/span&gt;
        &lt;span class="c"&gt;# ssl_certificate           /etc/ssl/private/YOUR_DOMAIN/cert.crt;
&lt;/span&gt;        &lt;span class="c"&gt;# ssl_certificate_key       /etc/ssl/private/YOUR_DOMAIN/cert.key;
&lt;/span&gt;        &lt;span class="c"&gt;# ssl on;
&lt;/span&gt;        &lt;span class="c"&gt;# ssl_session_cache  builtin:1000  shared:SSL:10m;
&lt;/span&gt;        &lt;span class="c"&gt;# ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
&lt;/span&gt;        &lt;span class="c"&gt;# ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
&lt;/span&gt;        &lt;span class="c"&gt;# ssl_prefer_server_ciphers on;
&lt;/span&gt;
        &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;appwrite&lt;/span&gt;;

        &lt;span class="n"&gt;location&lt;/span&gt; / {
            &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;-&lt;span class="n"&gt;Real&lt;/span&gt;-&lt;span class="n"&gt;IP&lt;/span&gt; $&lt;span class="n"&gt;remote_addr&lt;/span&gt;;
            &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;-&lt;span class="n"&gt;Forwarded&lt;/span&gt;-&lt;span class="n"&gt;For&lt;/span&gt; $&lt;span class="n"&gt;proxy_add_x_forwarded_for&lt;/span&gt;;
            &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;-&lt;span class="n"&gt;Forwarded&lt;/span&gt;-&lt;span class="n"&gt;Proto&lt;/span&gt; $&lt;span class="n"&gt;scheme&lt;/span&gt;;
            &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="n"&gt;Host&lt;/span&gt; $&lt;span class="n"&gt;host&lt;/span&gt;;
            &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;-&lt;span class="n"&gt;Forwarded&lt;/span&gt;-&lt;span class="n"&gt;Host&lt;/span&gt; $&lt;span class="n"&gt;host&lt;/span&gt;;
            &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;-&lt;span class="n"&gt;Forwarded&lt;/span&gt;-&lt;span class="n"&gt;Port&lt;/span&gt; $&lt;span class="n"&gt;server_port&lt;/span&gt;;
            &lt;span class="n"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;://&lt;span class="n"&gt;appwrite&lt;/span&gt;;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Unlike the default Traefik instance that comes with Appwrite, the Nginx container doesn't handle SSL certificates automatically. For having valid SSL connections, you'll need to configure your own certificates or integrate with tools like Letsencrypt.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/discord"&gt;Appwrite Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appwrite.io/docs"&gt;Appwrite Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appwrite.io/"&gt;Appwrite Homepage&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite"&gt;Appwrite Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>appwrite</category>
      <category>proxy</category>
      <category>nginx</category>
      <category>traefik</category>
    </item>
    <item>
      <title>Solution: Number of Subarrays with Bounded Maximum</title>
      <author>seanpgallivan</author>
      <pubDate>Thu, 17 Jun 2021 09:20:40 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-number-of-subarrays-with-bounded-maximum-3mmh</link>
      <guid>https://dev.to/seanpgallivan/solution-number-of-subarrays-with-bounded-maximum-3mmh</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/discuss/1278426"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-795-medium-number-of-subarrays-with-bounded-maximum"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/"&gt;Leetcode Problem #795 (&lt;em&gt;Medium&lt;/em&gt;): Number of Subarrays with Bounded Maximum&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We are given an array &lt;code&gt;nums&lt;/code&gt; of positive integers, and two positive integers &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; (&lt;code&gt;left &amp;lt;= right&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Return the number of (contiguous, non-empty) subarrays such that the value of the maximum array element in that subarray is at least &lt;code&gt;left&lt;/code&gt; and at most &lt;code&gt;right&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [2, 1, 4, 3]&lt;br&gt;left = 2&lt;br&gt;right = 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;There are three subarrays that meet the requirements: [2], [2, 1], [3].&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, and &lt;code&gt;nums[i]&lt;/code&gt; will be an integer in the range &lt;code&gt;[0, 10^9]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The length of &lt;code&gt;nums&lt;/code&gt; will be in the range of &lt;code&gt;[1, 50000]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The key to this problem is realizing that we're dealing with overlapping &lt;strong&gt;triangular number&lt;/strong&gt; issues. Importantly, the total number of possible subarrays that are contained within any larger subarray is the &lt;strong&gt;N&lt;/strong&gt;th triangular number, where &lt;strong&gt;N&lt;/strong&gt; is the length of that larger subarray. &lt;/p&gt;

&lt;p&gt;So the &lt;strong&gt;nums&lt;/strong&gt; array starts with the (&lt;strong&gt;nums.length&lt;/strong&gt;)th triangular number total subarrays. We want to exclude any subarray that includes a number larger than &lt;strong&gt;right&lt;/strong&gt;, however. The easiest way to do this is to consider numbers larger than &lt;strong&gt;right&lt;/strong&gt; to be dividers, splitting &lt;strong&gt;nums&lt;/strong&gt; into many subarrays. We can add the triangular number for each of these resulting subarrays together to be the total number of subarrays that exclude numbers higher than &lt;strong&gt;right&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To do this, we can iterate through &lt;strong&gt;nums&lt;/strong&gt; and keep track of how many contiguous numbers are less than &lt;strong&gt;right&lt;/strong&gt; (&lt;strong&gt;mid&lt;/strong&gt;) and each point that &lt;strong&gt;mid&lt;/strong&gt; increments, we can add &lt;strong&gt;mid&lt;/strong&gt; to &lt;strong&gt;ans&lt;/strong&gt;, representing the increase to the next triangular number. The value for &lt;strong&gt;mid&lt;/strong&gt; will then reset whenever we see a number higher than &lt;strong&gt;right&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;But this only does half of the problem, because we still have to also exclude any subarray that does not have any number at least &lt;strong&gt;left&lt;/strong&gt; high. To do this, we can use a similar method as for &lt;strong&gt;mid&lt;/strong&gt;. We can keep track of how many contiguous numbers are lower than &lt;strong&gt;left&lt;/strong&gt; (&lt;strong&gt;low&lt;/strong&gt;) and &lt;em&gt;decrease&lt;/em&gt; &lt;strong&gt;ans&lt;/strong&gt; by that amount every time it increments, representing the next triangular number. Similar to &lt;strong&gt;mid&lt;/strong&gt;, &lt;strong&gt;low&lt;/strong&gt; will reset whenever we see a number at least &lt;strong&gt;left&lt;/strong&gt; high.&lt;/p&gt;

&lt;p&gt;Once we're done iterating, we can &lt;strong&gt;return ans&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Visual example:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--55uX-1_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/zr940xS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--55uX-1_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/zr940xS.png" alt="Visual 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;nums&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(1)&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;numSubarrayBoundedMax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;low&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;mid&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;low&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;low&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;numSubarrayBoundedMax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;low&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;low&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;low&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;low&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;numSubarrayBoundedMax&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;low&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;low&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;low&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numSubarrayBoundedMax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;low&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;low&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;low&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>SDK vs API - What's the Difference?</title>
      <author>Akash</author>
      <pubDate>Thu, 17 Jun 2021 09:18:29 +0000</pubDate>
      <link>https://dev.to/applozic/sdk-vs-api-what-s-the-difference-12ec</link>
      <guid>https://dev.to/applozic/sdk-vs-api-what-s-the-difference-12ec</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/PbSt-qJwU68"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Hello everyone! I'm Akash from &lt;a href="https://www.applozic.com/"&gt;Applozic&lt;/a&gt;, and today we'll take a look at what SDKs and APIs are, and how they differ from each other.&lt;/p&gt;

&lt;p&gt;So, what is an SDK?&lt;/p&gt;

&lt;p&gt;SDK stands for Software Development Kit. It is a collection of software development tools in one installable package. They facilitate the app development process.&lt;/p&gt;

&lt;p&gt;So an SDK contains: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Documents&lt;/li&gt;
&lt;li&gt;Code samples&lt;/li&gt;
&lt;li&gt;APIs &lt;/li&gt;
&lt;li&gt;Code libraries&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s now summarize how SDK works.&lt;/p&gt;

&lt;p&gt;SDKs work with specific programming languages. They are easy to use because the goal is to make the jobs of developers easier, and save developers from writing code for already existing functionalities&lt;/p&gt;

&lt;p&gt;Let’s have a look at some examples of SDK:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A good example is Android SDK - they have all the elements needed to create the app such as sample source code, debugger, required libraries, amongst other things.&lt;/li&gt;
&lt;li&gt;Another example is Cloud SDK for Google Cloud Platforms - these contain tools that you need to manage applications and software in a Google Cloud Platform. Cloud SDK is a set of tools, including gcloud, gsutil, and bq command-line tools, client libraries &amp;amp; local emulators for developing with Google Cloud.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we now know what an SDK is, let's move on to APIs. What exactly is an API?&lt;/p&gt;

&lt;p&gt;APIs, which stand for Application Programming Interfaces, make the software development process easy by permitting a seamless and secure data transfer between two apps. It also helps to improve the exchange of functionality between two applications. So in essence, APIs allow two applications to talk to each other, relaying data from one end to another.&lt;/p&gt;

&lt;p&gt;Let’s review some examples of APIs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login with Facebook
When using websites, you can often find the option to log in using your Facebook account. It means that the website uses Facebook Login API to integrate their service and help users skip the sign-up process.&lt;/li&gt;
&lt;li&gt;Third-Party Payments 
You can often see the payment options of PayPal, Apple Pay, or Google Pay. It means that the payment system integrates these services through API.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, what are the key differences between SDKs and APIs?&lt;/p&gt;

&lt;p&gt;Even though both concepts are indeed overlapped and interrelated, let's differentiate their purposes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An SDK is the toolbox you need to build applications while and API establishes communication between two applications; &lt;/li&gt;
&lt;li&gt;An SDK may contain APIs, but APIs cannot contain SDKs;&lt;/li&gt;
&lt;li&gt;SDKs are easy to use and faster to integrate while APIs don’t have code libraries and are easy to modify;&lt;/li&gt;
&lt;li&gt;SDKs contain all you need to communicate with another software and all you need to build software while APIs deliver a request from one app to another software and deliver a response back to the requesting app;&lt;/li&gt;
&lt;li&gt;Developers always use an SDK to build apps, but APIs only come in when there is a need to have external communication with other platforms.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In fact, APIs and SDKs are both solution-bringers to developers, but each one is special in its way.&lt;/p&gt;

&lt;p&gt;So, is the difference clear now? If you have any doubts or queries about APIs or SDKs, feel free to drop a comment in the comment section below!&lt;/p&gt;

</description>
      <category>sdk</category>
      <category>api</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>IHP v0.11.0 brings Server-Side Components and Joins!</title>
      <author>digitallyinduced</author>
      <pubDate>Thu, 17 Jun 2021 09:00:21 +0000</pubDate>
      <link>https://dev.to/digitallyinduced/ihp-v0-11-0-brings-server-side-components-and-joins-4pp2</link>
      <guid>https://dev.to/digitallyinduced/ihp-v0-11-0-brings-server-side-components-and-joins-4pp2</guid>
      <description>&lt;p&gt;We've just released IHP v0.11.0, which includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Server-Side-Components, similar to React or elm&lt;/li&gt;
&lt;li&gt;Joins, for more complex queries&lt;/li&gt;
&lt;li&gt;IHP.FileStorage, which makes it easy to store files on AWS S3 or any other compatible service&lt;/li&gt;
&lt;li&gt;...and more!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#serversidecomponents-aka-you-dont-need-react"&gt;
  &lt;/a&gt;
  Server-Side-Components aka. you don't need React
&lt;/h2&gt;

&lt;p&gt;IHP's new Server-Side-Components allow you to build React-like components on the server (as the name implies). This allows you to build highly interactive pages without having to worry about server vs. client state, and no change of environment - as everything is still in Haskell.&lt;/p&gt;

&lt;p&gt;Let's look at an example component, a basic counter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight haskell"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- everything starts with the normal module definition and imports&lt;/span&gt;
&lt;span class="kr"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Web.Component.Counter&lt;/span&gt; &lt;span class="kr"&gt;where&lt;/span&gt;

&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;IHP.ViewPrelude&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;IHP.ServerSideComponent.Types&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;IHP.ServerSideComponent.ControllerFunctions&lt;/span&gt;

&lt;span class="c1"&gt;-- Followed by a type definition for the state.&lt;/span&gt;
&lt;span class="c1"&gt;-- This means there will never be any surprise what the state contains.&lt;/span&gt;
&lt;span class="c1"&gt;-- In this case it's simply an Int, so a number.&lt;/span&gt;
&lt;span class="kr"&gt;data&lt;/span&gt; &lt;span class="kt"&gt;Counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Counter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="kt"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;-- Then comes a list of possible actions that can be used to update the state.&lt;/span&gt;
&lt;span class="c1"&gt;-- If you've used redux or the elm architecture, this should be familiar.&lt;/span&gt;
&lt;span class="c1"&gt;-- Defining what actions are available means it's there won't be any surprises here either, and future developers can immediately see what behavior this component supports.&lt;/span&gt;
&lt;span class="kr"&gt;data&lt;/span&gt; &lt;span class="kt"&gt;CounterController&lt;/span&gt;
    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;IncrementCounterAction&lt;/span&gt;
    &lt;span class="kr"&gt;deriving&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Eq&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Show&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;-- just one line of boilerplate to generate some code that we really don't want to write ourselves...&lt;/span&gt;
&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deriveSSC&lt;/span&gt; &lt;span class="n"&gt;''CounterController&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;-- The heart of any component are&lt;/span&gt;
&lt;span class="c1"&gt;-- 1. the render function, taking care of turning the state into html&lt;/span&gt;
&lt;span class="c1"&gt;-- 2. action handlers, which update the state based on selected actions&lt;/span&gt;
&lt;span class="kr"&gt;instance&lt;/span&gt; &lt;span class="kt"&gt;Component&lt;/span&gt; &lt;span class="kt"&gt;Counter&lt;/span&gt; &lt;span class="kt"&gt;CounterController&lt;/span&gt; &lt;span class="kr"&gt;where&lt;/span&gt;
    &lt;span class="c1"&gt;-- but first, we need to define the default state&lt;/span&gt;
    &lt;span class="n"&gt;initialState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Counter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;-- the render function takes the state and return HTML&lt;/span&gt;
    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="kt"&gt;Counter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;hsx&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        Current: {value} &amp;lt;br /&amp;gt;
        &amp;lt;button onclick="callServerAction('IncrementCounterAction')"&amp;gt;Plus One&amp;lt;/button&amp;gt;
    &lt;span class="o"&gt;|]&lt;/span&gt;

    &lt;span class="c1"&gt;-- this is the handler for the IncrementCounterAction&lt;/span&gt;
    &lt;span class="c1"&gt;-- the function takes a state and the action, modifies the state (in this case incrementing the counter's value) and returns the new value&lt;/span&gt;
    &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="kt"&gt;IncrementCounterAction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;do&lt;/span&gt;
        &lt;span class="n"&gt;state&lt;/span&gt;
            &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;incrementField&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;
            &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pure&lt;/span&gt;

&lt;span class="c1"&gt;-- this allows us to use 'incrementField' to increment the counter&lt;/span&gt;
&lt;span class="kr"&gt;instance&lt;/span&gt; &lt;span class="kt"&gt;SetField&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt; &lt;span class="kt"&gt;Counter&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt; &lt;span class="kr"&gt;where&lt;/span&gt; &lt;span class="n"&gt;setField&lt;/span&gt; &lt;span class="n"&gt;value'&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the result is a beautiful counter, all controlled server-side:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EnyjXSDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/2072185/121806628-ee284a80-cc50-11eb-9602-061046783c7b.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EnyjXSDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/2072185/121806628-ee284a80-cc50-11eb-9602-061046783c7b.gif" alt='A short video showing part of a webpage with the headline "Counter demo", some text that says "Current: 0" and a button that says "Plus One", which is being clicked a couple of times. Every click increases the number after "Current" by one.'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's a little gif showcasing a more complex use-case of a filterable and sortable table:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---sh-yKLB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/2072185/121806754-7a3a7200-cc51-11eb-9d31-ec8254b2824a.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---sh-yKLB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/2072185/121806754-7a3a7200-cc51-11eb-9d31-ec8254b2824a.gif" alt="A short video showing a webpage with a table with titles and &amp;quot;published at&amp;quot; dates. Underneath there's an input element. When something is typed in the input, the rows are filtered based on the input's value. Clicking on the &amp;quot;published at&amp;quot; column title sorts the rows by that column."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ihp.digitallyinduced.com/Guide/server-side-components.html"&gt;To learn more check out the documentation.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#joins"&gt;
  &lt;/a&gt;
  Joins
&lt;/h2&gt;

&lt;p&gt;If you've tried to do complex queries involving joins of multiple tables in IHP, this was previously a little bit of a hassle. With first-class support for joins, there's now a completely type-safe way to do anything you can imagine.&lt;/p&gt;

&lt;p&gt;Here's an example of how you can select all posts that were written by a user with the name "Tom":&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight haskell"&gt;&lt;code&gt;&lt;span class="n"&gt;tomPosts&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="kt"&gt;Post&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;innerJoin&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="kt"&gt;User&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;authorId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;filterWhereJoinedTable&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="kt"&gt;User&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Tom"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here's a more complex example that selects all posts that were tagged by a tag named "haskell" in the case of a many-to-many relationship:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight haskell"&gt;&lt;code&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="kt"&gt;Posts&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;innerJoin&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="kt"&gt;Tagging&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;postId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;innerJoinThirdTable&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="kt"&gt;Tag&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="kt"&gt;Tagging&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;tagId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;filterWhereJoinedTable&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="kt"&gt;Tag&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;tagText&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"haskell"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#ihpfilestorage-to-store-files-in-aws-s3compatible-services"&gt;
  &lt;/a&gt;
  IHP.FileStorage to store files in AWS S3-compatible services
&lt;/h2&gt;

&lt;p&gt;Instead of having to manually use the APIs of AWS S3, you can now use our special support for these services to upload anything you'd like.&lt;/p&gt;

&lt;p&gt;Check out this example for an action used to upload a logo of a company to S3:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight haskell"&gt;&lt;code&gt;&lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="kt"&gt;UpdateCompanyAction&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;companyId&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;company&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;fetch&lt;/span&gt; &lt;span class="n"&gt;companyId&lt;/span&gt;
    &lt;span class="n"&gt;company&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;'&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;uploadToStorage&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;logoUrl&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;ifValid&lt;/span&gt; &lt;span class="nf"&gt;\&lt;/span&gt;&lt;span class="kr"&gt;case&lt;/span&gt;
            &lt;span class="kt"&gt;Left&lt;/span&gt; &lt;span class="n"&gt;company&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="kt"&gt;EditView&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="kt"&gt;Right&lt;/span&gt; &lt;span class="n"&gt;company&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;do&lt;/span&gt;
                &lt;span class="n"&gt;company&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;company&lt;/span&gt; &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;updateRecord&lt;/span&gt;
                &lt;span class="n"&gt;redirectTo&lt;/span&gt; &lt;span class="kt"&gt;EditCompanyAction&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see it's not much different from any other action used to update the company data. All the magic happens due to one line: &lt;code&gt;|&amp;gt; uploadToStorage #logoUrl&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can do much more though, for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use ImageMagick to do pre-processing of the uploaded image file (resizing, conversion,...)&lt;/li&gt;
&lt;li&gt;generate secure, signed download URLs for private files&lt;/li&gt;
&lt;li&gt;in development, files are stored on-disk in the &lt;code&gt;static/&lt;/code&gt; folder for ease of debugging and offline-only development&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find out how to use it and configure it for your project &lt;a href="http://ihp.digitallyinduced.com/Guide/file-storage.html"&gt;in the documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#case-insensitivity"&gt;
  &lt;/a&gt;
  Case Insensitivity
&lt;/h2&gt;

&lt;p&gt;We've added &lt;code&gt;filterWhereCaseInsensitive&lt;/code&gt; and &lt;code&gt;validateIsUniqueCaseInsensitive&lt;/code&gt;, which do exactly what you expect them to do.&lt;/p&gt;

&lt;p&gt;If you're using IHP's login, be aware that these functions are now used for checking the emails. This increases UX for your users, but in case someone messed up and created two accounts - one with some letters of their email uppercase, one not - you will have to migrate that account.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you haven't tried out IHP yet, now's a great time to do so. We'll be at ZuriHack (huge Haskell Hackathon), so &lt;a href="https://zfoh.ch/zurihac2021/"&gt;sign up for free&lt;/a&gt; there if you haven't already and get an introduction to IHP from us directly!&lt;/p&gt;

</description>
      <category>functional</category>
      <category>haskell</category>
      <category>showdev</category>
    </item>
    <item>
      <title>How to create a simple Floating Button with Xamarin.Forms/MAUI</title>
      <author>Federico Navarrete</author>
      <pubDate>Thu, 17 Jun 2021 08:57:46 +0000</pubDate>
      <link>https://dev.to/fanmixco/how-to-create-a-simple-floating-button-with-xamarin-forms-maui-4k7i</link>
      <guid>https://dev.to/fanmixco/how-to-create-a-simple-floating-button-with-xamarin-forms-maui-4k7i</guid>
      <description>&lt;p&gt;For a while, I have been trying to search how to create a simple Floating Button and this is my final code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;AbsoluteLayout&amp;gt;&lt;/span&gt;
     &lt;span class="c"&gt;&amp;lt;!--Other components--&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;ImageButton&lt;/span&gt; &lt;span class="na"&gt;Source=&lt;/span&gt;&lt;span class="s"&gt;"plus.png"&lt;/span&gt; 
            &lt;span class="na"&gt;BackgroundColor=&lt;/span&gt;&lt;span class="s"&gt;"Green"&lt;/span&gt;
        &lt;span class="na"&gt;CornerRadius=&lt;/span&gt;&lt;span class="s"&gt;"80"&lt;/span&gt;
            &lt;span class="na"&gt;AbsoluteLayout.LayoutFlags=&lt;/span&gt;&lt;span class="s"&gt;"PositionProportional"&lt;/span&gt;  
            &lt;span class="na"&gt;AbsoluteLayout.LayoutBounds=&lt;/span&gt;&lt;span class="s"&gt;".95,.95,80,80"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/AbsoluteLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;Source&lt;/code&gt; is the picture you want to use.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;BackgroundColor&lt;/code&gt; is the color you want to use in HEX.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;CornerRadius&lt;/code&gt; is to create the form.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;AbsoluteLayout.LayoutBounds&lt;/code&gt; is the location.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will be the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.stack.imgur.com/FMDkR.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5hMwEt90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/FMDkR.png" alt="example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can get the icon from:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://materialdesignicons.com"&gt;https://materialdesignicons.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I got some inspiration from here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/a/54519048/1928691"&gt;https://stackoverflow.com/a/54519048/1928691&lt;/a&gt;&lt;/p&gt;

</description>
      <category>xamarinforms</category>
      <category>xamarin</category>
      <category>maui</category>
    </item>
    <item>
      <title>How's your experience with Xcode? (I want to cry 😭)</title>
      <author>Keff</author>
      <pubDate>Thu, 17 Jun 2021 08:34:14 +0000</pubDate>
      <link>https://dev.to/nombrekeff/how-s-your-experience-with-xcode-i-want-to-cry-2lc6</link>
      <guid>https://dev.to/nombrekeff/how-s-your-experience-with-xcode-i-want-to-cry-2lc6</guid>
      <description>&lt;h3&gt;
  &lt;a href="#have-you-used-xcode-if-so-what-has-your-experience-been-so-far"&gt;
  &lt;/a&gt;
  Have you used Xcode? If so, what has your experience been so far?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ScwhYGeQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zintposrzjc2s4k7tqpk.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ScwhYGeQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zintposrzjc2s4k7tqpk.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Not to shit on them but,&lt;/strong&gt; in my case it's been one of the worst developer experiences I've had in all my career...&lt;/p&gt;

&lt;p&gt;I could ramble about it for hours, but I prefer to hear what other people have to say. But I might publish another post, ranting about my experience.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>dev</category>
      <category>ios</category>
    </item>
  </channel>
</rss>
