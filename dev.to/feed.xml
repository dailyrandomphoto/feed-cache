<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to get a user’s LinkedIn account, Twitter username, and more from a single line of code</title>
      <author>Abel Lifaefi Mbula</author>
      <pubDate>Fri, 29 Oct 2021 20:35:32 +0000</pubDate>
      <link>https://dev.to/bam92/how-to-get-a-users-linkedin-account-twitter-username-and-more-from-a-single-line-of-code-5bgl</link>
      <guid>https://dev.to/bam92/how-to-get-a-users-linkedin-account-twitter-username-and-more-from-a-single-line-of-code-5bgl</guid>
      <description>&lt;p&gt;Users' data is the gold for your business. But, how do you know more about your users when you only have or collect a piece of information like phone numbers or emails?&lt;/p&gt;

&lt;p&gt;We are living in a digital age where people are more connected than ever before and almost everyone is on social media like Twitter or LinkedIn. One way to know more about your users is to go on the social media they are. But, this will only help if you have a tiny number of users because you have to &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Try whether they are on Twitter or LinkedIn or another social media&lt;/li&gt;
&lt;li&gt;Manually go on the user social media account to have information&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is not productive for your business, and you shouldn’t even try it. There need to be something better to help you. Like gold, the quality of data is also important. &lt;/p&gt;

&lt;p&gt;Looking around, we could not find a suitable solution that could help us enough, just like you. So, we developed one, and we call it Kelvin Data. Kelvin Data can be used by developers through an API (GraphQL or RESTful) or by anyone through a web portal. &lt;/p&gt;

&lt;p&gt;Your business is so important to us, so we have designed Kelvin Data with that in mind. We focus on structuring and organizing data from around the web to make it accessible and easy-to-use so that you have a ready to use data set while still continuing running your business.&lt;/p&gt;

&lt;p&gt;Let’s take a deep dive here to see how to use Kelvin Data to better know your users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kelvin-data-101"&gt;
  &lt;/a&gt;
  Kelvin Data 101
&lt;/h2&gt;

&lt;p&gt;No matter what your site or app does, knowing more about your users gives you more opportunities. Let’s see some of them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can easily fight fraud&lt;/li&gt;
&lt;li&gt;Send email based on their location&lt;/li&gt;
&lt;li&gt;Increase your sale power&lt;/li&gt;
&lt;li&gt;And more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks to Kelvin Data, you can achieve your goal with easy, no matter what it is. Here is how it works.&lt;/p&gt;

&lt;p&gt;First, you need an API key for authentication with us. You can find one here. Now that you have a valid key, you can make a call to our API by providing us with at least one piece of information you have for your user, like email or phone number.&lt;/p&gt;

&lt;p&gt;Let’s consider an example. Your user email is &lt;a href="mailto:jared@ycombinator.com"&gt;jared@ycombinator.com&lt;/a&gt;. The API endpoint you’ll call looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://api.kelvindata.com/rest/v1/search-v2?email=jared@ycombinator.com&amp;amp;apiKey=your-apikey-here"&gt;https://api.kelvindata.com/rest/v1/search-v2?email=jared@ycombinator.com&amp;amp;apiKey=your-apikey-here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this is the result you’ll have (I’m using the web portal &lt;a href="https://www.kelvindata.com/search"&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9-Jjc-cJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt93xdispro88chuhhql.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9-Jjc-cJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qt93xdispro88chuhhql.PNG" alt="Kelvin search" width="880" height="626"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Kelvin Data is a powerful and simple platform whose mission is to structure and organize data from around the web to make it accessible and easy-to-use. We offer flexible &lt;a href="https://www.kelvindata.com/pricing"&gt;pricing plans&lt;/a&gt; to meet your business needs. &lt;a href="https://www.kelvindata.com/sign-in"&gt;Sign up&lt;/a&gt; to get started, or &lt;a href="//mailto:Hello@KelvinData.com"&gt;contact us&lt;/a&gt; to learn more.&lt;/p&gt;

</description>
      <category>api</category>
    </item>
    <item>
      <title>20 Machine Learning Questions and Answer To Destroy Your Interview/</title>
      <author>Avi Arora</author>
      <pubDate>Fri, 29 Oct 2021 19:42:57 +0000</pubDate>
      <link>https://dev.to/aarora4/20-machine-learning-questions-and-answer-to-destroy-your-interview-1e3g</link>
      <guid>https://dev.to/aarora4/20-machine-learning-questions-and-answer-to-destroy-your-interview-1e3g</guid>
      <description>&lt;h2&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;In this article you will find essential machine learning interview questions that are geared towards beginners preparing for job or internship interviews. The questions in this article are general and cover a large breadth of information.&lt;/p&gt;

&lt;p&gt;If you are looking for more specific and niche questions geared towards Intermediate and Advanced readers, I recommend you check out some of my other &lt;strong&gt;topic specific machine learning question lists&lt;/strong&gt; below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://analyticsarora.com/11-unique-machine-learning-interview-questions-on-primary-component-analysis/"&gt;Primary Component Analysis&lt;/a&gt;&lt;br&gt;&lt;a href="https://analyticsarora.com/8-unique-machine-learning-interview-questions-on-backpropagation/"&gt;Backpropagation&lt;/a&gt;&lt;br&gt;&lt;a href="https://analyticsarora.com/8-unique-machine-learning-interview-questions-about-random-forests/"&gt;Random Forest&lt;/a&gt;&lt;br&gt;&lt;a href="https://analyticsarora.com/quickly-master-gradient-boosted-decision-trees-ml-interview-qa/"&gt;Gradient Boosted Decision Trees&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Without further ado, let's get into the quiz! You can take the interactive quiz here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://analyticsarora.com/20-machine-learning-questions-and-answer-to-destroy-your-interview/"&gt;https://analyticsarora.com/20-machine-learning-questions-and-answer-to-destroy-your-interview/&lt;/a&gt;&lt;/p&gt;




</description>
      <category>machinelearning</category>
      <category>beginners</category>
      <category>quiz</category>
      <category>datascience</category>
    </item>
    <item>
      <title>TMA - Too Many Acronyms (webdev edition)</title>
      <author>Eugene Kopich</author>
      <pubDate>Fri, 29 Oct 2021 19:14:18 +0000</pubDate>
      <link>https://dev.to/web2033/tma-too-many-acronyms-webdev-edition-1la5</link>
      <guid>https://dev.to/web2033/tma-too-many-acronyms-webdev-edition-1la5</guid>
      <description>&lt;p&gt;Web developers love three-letter acronyms. Here's some:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;API - Application Programming Interface&lt;/li&gt;
&lt;li&gt;AWS - Amazon Web Services&lt;/li&gt;
&lt;li&gt;BEM - Block, Element, Modifier&lt;/li&gt;
&lt;li&gt;CDN - Content Delivery Network&lt;/li&gt;
&lt;li&gt;CLI - Command Line Interface&lt;/li&gt;
&lt;li&gt;CLS - Cumulative Layout Shift&lt;/li&gt;
&lt;li&gt;CMS - Content Management System&lt;/li&gt;
&lt;li&gt;CSR - Client-side Rendering&lt;/li&gt;
&lt;li&gt;CSS - Cascading Style Sheets&lt;/li&gt;
&lt;li&gt;DDD - Domain Driven Design&lt;/li&gt;
&lt;li&gt;DNS - Domain Name System&lt;/li&gt;
&lt;li&gt;DOM - Document Object Model&lt;/li&gt;
&lt;li&gt;DRY - Don’t Repeat Yourself&lt;/li&gt;
&lt;li&gt;ESM - ECMAScript modules&lt;/li&gt;
&lt;li&gt;FID - First Input Delay&lt;/li&gt;
&lt;li&gt;GCP - Google Cloud Platform&lt;/li&gt;
&lt;li&gt;GPL - General Public Licence&lt;/li&gt;
&lt;li&gt;GUI - Graphical User Interface&lt;/li&gt;
&lt;li&gt;HMR - Hot Module Replacement&lt;/li&gt;
&lt;li&gt;IDE - Integrated Development Environment&lt;/li&gt;
&lt;li&gt;ISR - Incremental Static Regeneration&lt;/li&gt;
&lt;li&gt;JSX - JavaScript XML&lt;/li&gt;
&lt;li&gt;LCP - Largest Contentful Paint&lt;/li&gt;
&lt;li&gt;LTS - Long Term Support&lt;/li&gt;
&lt;li&gt;MDN - Mozilla Developer Network&lt;/li&gt;
&lt;li&gt;MPA - Multi Page Application&lt;/li&gt;
&lt;li&gt;MVC - Model-View-Controller&lt;/li&gt;
&lt;li&gt;MVP - Minimum Viable Product&lt;/li&gt;
&lt;li&gt;NPM - Node Package Manager&lt;/li&gt;
&lt;li&gt;OOP - Object-Oriented Programming&lt;/li&gt;
&lt;li&gt;OSS - Open-Source Software&lt;/li&gt;
&lt;li&gt;PWA - Progressive Web Apps&lt;/li&gt;
&lt;li&gt;SDK - Software Development Kit&lt;/li&gt;
&lt;li&gt;SEO - Search Engine Optimization&lt;/li&gt;
&lt;li&gt;SFC - Single File Component&lt;/li&gt;
&lt;li&gt;SPA - Single Page Application&lt;/li&gt;
&lt;li&gt;SQL - Structured Query Language&lt;/li&gt;
&lt;li&gt;SSG - Static Site Generation&lt;/li&gt;
&lt;li&gt;SSL - Secure Socket Layer&lt;/li&gt;
&lt;li&gt;SSR - Server-Side Rendering&lt;/li&gt;
&lt;li&gt;SVG - Scalable Vector Graphics&lt;/li&gt;
&lt;li&gt;SWC - Speedy web compiler&lt;/li&gt;
&lt;li&gt;SWR - stale-while-revalidate&lt;/li&gt;
&lt;li&gt;TDD - Test Driven Development&lt;/li&gt;
&lt;li&gt;TTI - Time to Interactive&lt;/li&gt;
&lt;li&gt;UMD - Universal Module Definition&lt;/li&gt;
&lt;li&gt;URL - Uniform Resource Locator&lt;/li&gt;
&lt;li&gt;VCS - Version Control System&lt;/li&gt;
&lt;li&gt;XML - Extensible Markup Language&lt;/li&gt;
&lt;li&gt;XSS - Cross Site Scripting&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>developer</category>
      <category>learning</category>
    </item>
    <item>
      <title>Multi-Tenancy with Nodejs and mongoDb </title>
      <author>Code Salley</author>
      <pubDate>Fri, 29 Oct 2021 19:04:55 +0000</pubDate>
      <link>https://dev.to/codesalley/multi-tenancy-with-nodejs-and-mongodb-3gn1</link>
      <guid>https://dev.to/codesalley/multi-tenancy-with-nodejs-and-mongodb-3gn1</guid>
      <description>&lt;p&gt;The main concept of multi-tenancy is privacy and data segregation, With MongoDB architecture ( Database and collections ). It’s easy to allocate collection for tenants database &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XpnY1MAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvbl5wkcok8k6en3dmzo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XpnY1MAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvbl5wkcok8k6en3dmzo.png" alt="Erb diagram" width="880" height="469"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should have a simple npm application setup and install &lt;code&gt;mongoose&lt;/code&gt; by running;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Implement a logic to handle MongoDB database connection and switching. In this scenario I will use two different approaches, switching between database's using &lt;code&gt;useDb&lt;/code&gt; and &lt;code&gt;disconnect&lt;/code&gt; and &lt;code&gt;reconnect&lt;/code&gt; ( this is useful for test cases only )&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect and disconnect approach&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// mongoose import &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// a function that takes database name and database url as import and return a mongoose connection&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connectDb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;databaseName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`mongodb connected to &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;connectDb&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with the above usage, all we need is the database name and database URL, We check the database name to see if it's already open, if open we just return mongoose object else we close all open connections and reconnect to the database using the URL we passed in. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useDb(recommended) approach&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// mongoose import &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// a function that takes database name and database url as import and return a mongoose connection&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;connectDb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;databaseName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
                           &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`mongodb connected to &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;connectDb&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A very simple approach, with &lt;code&gt;useDb&lt;/code&gt; all we need is an open connection or create a new connection then return a new instance of MongoDB by passing the database name to the &lt;code&gt;useDb&lt;/code&gt; function from an open MongoDB connection. In other cases you might have separate models(schema) for tenants, Here is an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// connect to mongodb&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dbUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
                           &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// connect to prefer database&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useDb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;databaseName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// use model(schema) preferred&lt;/span&gt;
&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;modelName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Keep tenants locked up!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/__salley"&gt;twitter: code salley&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>mongodb</category>
      <category>multitenancy</category>
    </item>
    <item>
      <title>Connecting to MySQL database in java</title>
      <author>DALLINGTON ASINGWIRE</author>
      <pubDate>Fri, 29 Oct 2021 18:58:28 +0000</pubDate>
      <link>https://dev.to/dallington256/connecting-to-mysql-database-in-java-3lej</link>
      <guid>https://dev.to/dallington256/connecting-to-mysql-database-in-java-3lej</guid>
      <description>&lt;p&gt;In this post, we're going to see Java Database Connectivity (&lt;b&gt;JDBC&lt;/b&gt;) with MySQL. Connecting to database to have CRUD operations like &lt;b&gt;INSERT&lt;/b&gt;, &lt;b&gt;SELECT&lt;/b&gt;, &lt;b&gt;UPDATE&lt;/b&gt; and &lt;b&gt;DELETE&lt;/b&gt; is the "center of gravity" of almost every backend technology.&lt;br&gt;
To connect java application with the MySQL database, mysqlconnector.jar file is required to be loaded. You can download this file from here; &lt;a href="https://dev.mysql.com/downloads/windows/installer/8.0.html"&gt;Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To load the jar file, you can do this by setting the classpath permanently. To do this,  go to environment variable then click on new tab. In variable name write &lt;b&gt;classpath&lt;/b&gt; and in variable value paste the path to the mysqlconnector.jar file by appending mysqlconnector.jar as &lt;b&gt;C:\yourfolder\mysql-connector-java-8.0.25&lt;/b&gt;;&lt;br&gt;
Then create a new project in your java text editor say Eclipse, Netbeans.&lt;/p&gt;

&lt;p&gt;Next, load mysqlconnector.jar file in your project by right clicking on it. I'm using &lt;b&gt;Eclipse&lt;/b&gt; as my text editor, do the following to load the jar file in your project.&lt;br&gt;
&lt;b&gt;1.&lt;/b&gt;Right-click on your project.&lt;br&gt;
&lt;b&gt;2.&lt;/b&gt;Select Build Path.&lt;br&gt;
&lt;b&gt;3.&lt;/b&gt;Click on Configure Build Path.&lt;br&gt;
&lt;b&gt;4.&lt;/b&gt;Click on Libraries, select Add External JARs.&lt;br&gt;
&lt;b&gt;5.&lt;/b&gt;Select the jar file from the required folder.&lt;br&gt;
&lt;b&gt;6.&lt;/b&gt;Click and Apply and Ok.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; For whatever text editor you are using, You should be able to load that file.&lt;br&gt;
Next after loading the jar file in your project, create a java class say &lt;b&gt;Users&lt;/b&gt; to illustrate how to connect java to MySql database using com.mysql.jdbc.Driver driver class.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Code Example&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.sql.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Users&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt; 

&lt;span class="nc"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.mysql.cj.jdbc.Driver"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Class.forName("com.mysql.jdbc.Driver"); // this has been deprecated&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;connectionString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"jdbc:mysql://localhost:3306/db_name"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_username"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_password"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DriverManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connectionString&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_username&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_password&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  

            &lt;span class="nc"&gt;Statement&lt;/span&gt; &lt;span class="n"&gt;stmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createStatement&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
            &lt;span class="nc"&gt;ResultSet&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;stmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;executeQuery&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"select * from users"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
            &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;firstName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"first_name"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;lastName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"last_name"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;telephone_no&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tel_no"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"address"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;


            &lt;span class="nc"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;dateCreated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getDate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"created_at"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;isActive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getBoolean&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"isActive"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;user_role&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"user_role"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

            &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s, %s, %s,
                             %s, %s, %s, %s, %s, %s\n"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
                             &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lastName&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dateCreated&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                             &lt;span class="n"&gt;isActive&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_role&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                             &lt;span class="n"&gt;telephone_no&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
          &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt; 
     &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
   &lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;  
  &lt;span class="o"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Code Explanation:&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;b&gt;Class.forName()&lt;/b&gt; is the method loads the driver class for the mysql database (com.mysql.jdbc.Driver).&lt;/li&gt;
&lt;li&gt;Next, we establish a database connection using &lt;b&gt;getConnection()&lt;/b&gt; method on DriverManager class which takes in the url for the database host, database username and password.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;con.createStatement()&lt;/b&gt; is used to create a statement instance on the database connection object (con). Statement is used for accessing database. Statement interface cannot accept parameters and is useful when you are making static SQL statements at runtime like SELECT.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;executeQuery()&lt;/b&gt; method on the statement object(stmt) returns result set by fetching data from database by selecting data from users table.&lt;/li&gt;
&lt;li&gt;In the next line, we use &lt;b&gt;while loop&lt;/b&gt; and &lt;b&gt;rs.next&lt;/b&gt; to iterate through the rows of data from users table in database and then capture cell data using getString(), getInt(), getDate() and getBoolean() to capture string, integer, date and boolean column data from the schema which are later printed on the screen using System.out.println().&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;b&gt;UPDATE QUERY CODE SNIPPET&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.mysql.cj.jdbc.Driver"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;connectionString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"jdbc:mysql://localhost:3306/db_name"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_username"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_password"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DriverManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connectionString&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_username&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_password&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
 &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"UPDATE users SET first_name= ?,
                 last_name=? where id = ?"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="nc"&gt;PreparedStatement&lt;/span&gt; &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prepareStatement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Dallington"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setInt&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;executeUpdate&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; We use PreparedStatement interface not Statement when executing sql updates in java. PreparedStatement is suitable when you want to use SQL statements many times and it accepts input parameters at runtime which is not the same case with Statement interface.&lt;br&gt;
&lt;b&gt;DELETE QUERY CODE SNIPPET&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.mysql.cj.jdbc.Driver"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;connectionString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"jdbc:mysql://localhost:3306/db_name"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_username"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_password"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DriverManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connectionString&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_username&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_password&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"DELETE FROM users where id = ?"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="nc"&gt;PreparedStatement&lt;/span&gt; &lt;span class="n"&gt;preparedStmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
      &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prepareStatement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;execute&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because we pass parameters (e.g id in our code example) during the delete query at runtime, that's why we use PreparedStatement interface.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;INSERT QUERY CODE SNIPPET&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.mysql.cj.jdbc.Driver"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;connectionString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"jdbc:mysql://localhost:3306/db_name"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_username"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;db_password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yourdatabase_password"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DriverManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getConnection&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connectionString&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_username&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                                           &lt;span class="n"&gt;db_password&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;" insert into users (first_name, last_name, 
         username, telephone_no, age, address, isActive)"&lt;/span&gt;
        &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" values (?, ?, ?, ?, ?, ?, ?)"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

      &lt;span class="nc"&gt;PreparedStatement&lt;/span&gt; &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prepareStatement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Dallington"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Asingwire"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Dalton"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"25670000000"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Kampala"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;   
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBoolean&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;preparedStmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;execute&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Conclusion:&lt;/b&gt; That's how you can have CRUD operations in java using driver class; &lt;b&gt;com.mysql.jdbc.Driver&lt;/b&gt;. Hope you can use this as the building block for more interesting projects in java. Thank you for taking time to read through this post, see you in the next one!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>What is a Design Doc?</title>
      <author>Anjan Shomooder</author>
      <pubDate>Fri, 29 Oct 2021 18:20:13 +0000</pubDate>
      <link>https://dev.to/thatanjan/what-is-a-design-doc-293f</link>
      <guid>https://dev.to/thatanjan/what-is-a-design-doc-293f</guid>
      <description>&lt;p&gt;A software design doc is really important. Especially if you are working on a large project or you are working in a large company. But&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is a design doc?&lt;/li&gt;
&lt;li&gt;Why does design doc exist?&lt;/li&gt;
&lt;li&gt;How can we write a design doc?&lt;/li&gt;
&lt;li&gt;Example of design docs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will tackle these questions and also we will see an example of a design doc created by me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note:
&lt;/h2&gt;

&lt;p&gt;I am very new to design docs. I am just sharing what I have learned. If you see any mistakes just let me know. I will be glad to learn more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-design-doc-exist"&gt;
  &lt;/a&gt;
  Why do design doc exist?
&lt;/h2&gt;

&lt;p&gt;Suppose you have a blogging website where people can read blogs but can not interact because the website doesn't have authentication. Now you want to add authentication to the site. So, that's a new feature.&lt;/p&gt;

&lt;p&gt;We all know that what could happen when we add new features. Code breaks, ui, and API changes, we get more bugs, and so on. So, while adding new features we also have to keep in mind that our real application doesn't get messed up.&lt;/p&gt;

&lt;p&gt;So, we have to plan and design our software efficiently so that our software works properly. That's the main goal of software design docs.&lt;/p&gt;

&lt;p&gt;If you have a good design doc, then the whole team will be focused on specific ideas. It will reduce ambiguity and conflict between team members.&lt;/p&gt;

&lt;p&gt;It is very crucial for the future too. Because in the future when you modify the code more, you will get to know what you have done before and why you have done it. Also if another developer comes to develop the software, he will understand how the code has been developed.&lt;/p&gt;

&lt;p&gt;If you are still reading this then I hope you have a little understanding of why do we need a software design doc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-design-doc"&gt;
  &lt;/a&gt;
  What is a design doc?
&lt;/h2&gt;

&lt;p&gt;A design doc is like a wedding planner before you even marry someone. Or you can say a business plan even before you start the business. In a design doc, you create the whole plan for the design doc. Your design doc should include topics from the idea to the solution. So, that everyone's goal stays clear.&lt;/p&gt;

&lt;p&gt;By the way, this blog is originally published on &lt;a href="https://www.culescoding.space/blog/what-is-a-design-doc"&gt;cules coding website.&lt;/a&gt;. I would be glad if you give it a visit.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FXxhTGG0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wweh84szhb8y59n24jou.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FXxhTGG0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wweh84szhb8y59n24jou.png" alt="Image description" width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-do-we-write-a-design-doc"&gt;
  &lt;/a&gt;
  How do we write a design doc?
&lt;/h2&gt;

&lt;p&gt;Just because we call it a design doc that doesn't mean that you have to be a fancy designer. You can add cool graphics but mostly you have to do the writing.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-to-include-in-a-design-doc"&gt;
  &lt;/a&gt;
  What to include in a design doc?
&lt;/h2&gt;

&lt;p&gt;Now, this depends on developers and projects. Different people have different opinions. I am a noob in design docs. Other developers know this far better than I do.&lt;br&gt;
But I believe a design doc should have at least these topics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Problem: This would be a summary of the problems that you want to solve.&lt;/li&gt;
&lt;li&gt;Solution: Here you will describe the possible solutions.&lt;/li&gt;
&lt;li&gt;New features: The new features that will solve the problems should be listed here.&lt;/li&gt;
&lt;li&gt;UI changes: If your application has a UI, then describe the changes that will come to the user interface.&lt;/li&gt;
&lt;li&gt;Database changes: If your application has a database, then write the changes that you will do to the design.&lt;/li&gt;
&lt;li&gt;API changes: As it says, point out the changes in your API design.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have created a simple design doc for my &lt;a href="https://culescoding.space"&gt;Cules Coding&lt;/a&gt; website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZTh6tIFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrr31fqei10lbz70y8gz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZTh6tIFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrr31fqei10lbz70y8gz.png" alt="Image description" width="880" height="1139"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TsR7wyDq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9nup50hyn0m6w102p01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TsR7wyDq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9nup50hyn0m6w102p01.png" alt="Image description" width="880" height="1139"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I want to add user authentication to the website so that users can interact with the blogs.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#when-to-create-a-design-doc"&gt;
  &lt;/a&gt;
  When to create a design doc?
&lt;/h2&gt;

&lt;p&gt;If you are having a large scale application then a design doc will be helpful. You will not want to create a design doc just for a simple to-do app. That will be unnecessary. You will build the app with the time of writing a design doc.&lt;/p&gt;

&lt;p&gt;And that's all I know about design docs. I know the explanation might not be good. But I have shared all I know.&lt;br&gt;
If I have made any mistakes please let me know in the comment section.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#shameless-plug"&gt;
  &lt;/a&gt;
  Shameless Plug
&lt;/h2&gt;

&lt;p&gt;I have made a video about how to build a carousel postcard with React, Material-UI, and Swiper.js.&lt;br&gt;
If you are interested you can check the video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NDyjI7hd4uE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can also demo the application form &lt;a href="https://insta-carousel-demo.vercel.app/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" alt="Screenshot of Insta Carousel" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please like and subscribe to &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt;. It motivates me to create more content like this.&lt;/p&gt;

&lt;p&gt;If you have any questions, please comment down below.&lt;br&gt;
You can reach out to me on social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
.&lt;br&gt;
Stay safe. Goodbye.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  About me
&lt;/h2&gt;
&lt;h4&gt;
  &lt;a href="#why-do-i-do-what-i-do"&gt;
  &lt;/a&gt;
  Why do I do what I do?
&lt;/h4&gt;

&lt;p&gt;The Internet has revolutionized our life. I want to make the internet more beautiful and useful.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-do-i-do"&gt;
  &lt;/a&gt;
  What do I do?
&lt;/h4&gt;

&lt;p&gt;I ended up being a full-stack software engineer.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-can-i-do"&gt;
  &lt;/a&gt;
  What can I do?
&lt;/h4&gt;

&lt;p&gt;I can develop complex full-stack web applications like social media applications or e-commerce sites.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-have-i-done"&gt;
  &lt;/a&gt;
  What have I done?
&lt;/h4&gt;

&lt;p&gt;I have developed a social media application called &lt;a href="https://con-fession.vercel.app/"&gt;Confession&lt;/a&gt;. The goal of this application is to help people overcome their imposter syndrome by sharing our failure stories.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XbQiTDS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjay62pz7byne4d8ja8v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XbQiTDS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjay62pz7byne4d8ja8v.png" alt="Alt Text" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also love to share my knowledge. So, I run a youtube channel called &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt; where I teach people full-stack web development, data structure algorithms, and many more. So, Subscribe to Cules Coding so that you don't miss the cool stuff.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#want-to-work-with-me"&gt;
  &lt;/a&gt;
  Want to work with me?
&lt;/h2&gt;

&lt;p&gt;I am looking for a team where I can show my ambition and passion and produce great value for them.&lt;br&gt;
Contact me through my email or any social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
. I would be happy to have a touch with you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#contacts"&gt;
  &lt;/a&gt;
  Contacts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Email: &lt;a href="mailto:thatanjan@gmail.com"&gt;thatanjan@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;linkedin: &lt;a href="https://linkedin.com/in/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;portfolio: &lt;a href="https://thatanjan.me/"&gt;anjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (personal): &lt;a href="https://instagram.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (youtube channel): &lt;a href="https://instagram.com/cules_coding/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="https://twitter.com/thatAnjan"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Facebook: &lt;a href="https://www.facebook.com/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Blogs you might want to read:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/setup-eslint-prettier-with-typescript-and-react"&gt; Eslint, prettier setup with TypeScript and react &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-client-side-rendering"&gt;What is Client-Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-server-side-rendering"&gt;What is Server Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/everything-you-need-to-know-about-tree-data-structure"&gt;Everything you need to know about tree data structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/13-reasons-why-you-should-use-Nextjs"&gt;13 reasons why you should use Nextjs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Videos might you might want to watch:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rSa8sUC8m_4"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T-n0mrssDiw"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Be_C_Op8Tx8"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KYLBb1W1ZBA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>node</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Tips to become a great programmer</title>
      <author>John</author>
      <pubDate>Fri, 29 Oct 2021 18:17:19 +0000</pubDate>
      <link>https://dev.to/jnb/tips-to-become-a-great-programmer-4fig</link>
      <guid>https://dev.to/jnb/tips-to-become-a-great-programmer-4fig</guid>
      <description>&lt;p&gt; A good programmer is someone who always looks both ways before crossing a one-way street. ~Doug Linder&lt;/p&gt;

&lt;p&gt;Let me start by saying that I do not consider myself to be a competent coder. I consider my coding abilities to be mediocre, and I am still learning and have a long way to go before I am even remotely satisfied with them.Yes, I am better at programming than a lot of others, but that is just because they are lazy and choose to sit about idle all day instead of programming. Their dreadful abilities make my less dreadful abilities appear fantastic.&lt;/p&gt;

&lt;p&gt;So most of the tips I will mention below are lessons learnt from failed endeavours, they are what I have wanted to be and I am not. So lets dive in. &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/tips-to-become-a-great-programmer/"&gt;Tips to become a great programmer&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>4 Consejos para ser un mejor desarrollador</title>
      <author>Ariel Calix</author>
      <pubDate>Fri, 29 Oct 2021 17:58:12 +0000</pubDate>
      <link>https://dev.to/arielcalix/4-consejos-para-ser-un-mejor-desarrollador-21f6</link>
      <guid>https://dev.to/arielcalix/4-consejos-para-ser-un-mejor-desarrollador-21f6</guid>
      <description>&lt;p&gt;Como desarrolladores de software creemos la mayor parte del tiempo que somos mejores que los demás y que por la cantidad de libros, notas, estudios y/o publicaciones que hemos leído estamos preparados para cualquier escenario en el que tengamos problemas.&lt;/p&gt;

&lt;p&gt;Pero, la realidad es que no es así. Lo que te dará mayor conocimiento y dominio de las técnicas y lenguajes que uses para el desarrollo son los proyectos que hayas logrado concluir. En pocas palabras la experiencia. Así que el día de hoy dejaré 4 consejos para ser un mejor desarrollador.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-mejora-tu-forma-de-escribir-c%C3%B3digo"&gt;
  &lt;/a&gt;
  1. Mejora tu forma de escribir código
&lt;/h2&gt;

&lt;p&gt;Generalmente a la hora de escribir código creemos que escribirlo de manera difícil y que los únicos que lo entiendan seamos nosotros significa un código perfecto. Pero la verdad es que no es nada, pero nada cerca de la realidad. Por ejemplo.&lt;/p&gt;

&lt;p&gt;Al escribir un código para una función que calcula un promedio es común escribirlo de la siguiente manera:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   int a[10] = [1,2,3,4,5,6,7,8,9,10];
   int b;
   int p;

   for (int c=0; c&amp;lt;10; c++) {
      b =+ a[c];
      if (c=a.length-1) {
            p = b/a.length;
      }
   }
   return p
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Si observas es algo difícil entender de que trata el código. Debido a que usamos letras para escribir el código. Pero si en lugar de letras usamos nombres descriptivos, el resultado es el siguiente:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   int elementosPromedio[10] =[1,2,3,4,5,6,7,8,9,10];
   int sumaTotalElementos;
   int promedio;

//En los ciclos es propio utilizar letras ya que no son variables
//en tiempo de ejecucion.

   for (int i; i &amp;lt;10; i++) {
      sumaTotalElementos =+ elementosPromedio[i];
      if (i=elementosPromedio.length-1) {
         promedio =sumaTotalElementos/elementosPromedio.length;
      }
   }
   return promedio
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Como puedes observar en el segundo ejemplo se puede ver la diferencia entre extractos de código que hacen la misma función y que difieren en la lectura y comprensión del mismo. &lt;em&gt;Un programador potente es el que escribe codigo que es fácil de entender o interpretar&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-utiliza-una-nomenclatura"&gt;
  &lt;/a&gt;
  2. Utiliza una nomenclatura
&lt;/h2&gt;

&lt;p&gt;Otra de las cosas que consideramos como algo ideal cuando escribimos código (mente de desarrollador) es el uso de nombres de muchos tipos y creemos que entre más tipos de nomenclatura usemos en mismo bloque más demostramos nuestra capacidad como desarrollador. Pero la realidad es que lo único que estas demostrando es la dificultad que tengas para seguir normas/estandares para tus desarrollos. Pará ello puedes implementar cualquiera de las nomenclaturas que existen. Por ejemplo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;camelCase/UpperCamelCase&lt;/li&gt;
&lt;li&gt;PascalCase&lt;/li&gt;
&lt;li&gt;snake_case&lt;/li&gt;
&lt;li&gt;kebab-case&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;De este modo tendrás un estándar en la manera que llamas a tus variables. No podemos decir que uno es mejor que otro. Pero cada uno mejora la comprensión del código de tu proyecto. Aprende a implementarlos y tu código se verá mejor.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-aprende-pero-aprende-bien"&gt;
  &lt;/a&gt;
  3. Aprende pero aprende bien
&lt;/h2&gt;

&lt;p&gt;Otro punto que consideramos que nos convierte en mejor desarrollador es saber de todos los lenguajes un poco, este principio está bien si eres un arquitecto o un administrador de proyecto, Pero si eres un desarrollador, es algo muy lejano a la verdad. Generalmente a las empresas no les impresiona que sepas cosas básicas de VB, C#, C/C++, JS/TS. Esto es simple ya que una empresa que tiene un área de IT ya tiene sus rubricas para el desarrollo, arquitecturas y estándares. Por lo que para ser un buen desarrollador, toma un lenguaje (el que quieras) y aprende ese lenguaje hasta que lo domines. No sólo lo básico, destaca por manejar el lenguaje y ser capaz de resolver cualquier problema usando ese lenguaje. Además de eso aprender patrones de diseño te resultará una mejor práctica que aprender el lenguaje en sí mismo. Dado que con los patrones sabrás como resolver un problema en cualquier lenguaje.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-no-critiques-el-trabajo-de-otros"&gt;
  &lt;/a&gt;
  4. No critiques el trabajo de otros
&lt;/h2&gt;

&lt;p&gt;En este punto mencionamos a los desarrolladores tóxicos. Aquellos que al revisar el código de otra persona o con el simple hecho de atender a una consulta, empiezan a decir, &lt;em&gt;"esto no es así", "esto lo haría de está forma", "no se porque este lenguaje",&lt;/em&gt; y un sin fin de formas de quejarse o criticar a los demás e incluso decir que una idea es terrible o solicitar cambios como:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cambiar el nombre de una variable, ejemplo:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   salarioEmpleado;
   sueldoEmpleado;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Cambiar el código de una función fácil de entender, por uno que es igual de fácil de entender pero es por preferencia de él.&lt;/li&gt;
&lt;li&gt;Dividir algo en varias lineas si en una linea se veía bien.&lt;/li&gt;
&lt;li&gt;Colocar algo en una sola linea en lugar de varias lineas sin beneficio para el código.&lt;/li&gt;
&lt;li&gt;Inventar nombres técnicos o no compartir documentación.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un desarrollador no tóxico, querra que sus compañeros se desarrollen y sean capaces de dar solución a los problemas, siempre para la continuidad del negocio.&lt;/p&gt;

&lt;p&gt;Como consejo, aprende a ser prudente, ayudar a tus compañeros de equipo, guiarlos, de está manera podrás desarrollar tu potencial y desarrollar el potencial de las demás personas en tu equipo.&lt;/p&gt;

&lt;p&gt;Ten en cuenta que cuando el conocimiento se comparte se multiplica, cuando no se comparte pierde su valor y recuerda no importa cual sea el nivel técnico que tengas, si eres un desarrollador desagradable nadie querra trabajar contigo.&lt;/p&gt;

&lt;p&gt;Imagen por &lt;a href="https://unsplash.com/@jefflssantos?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Jefferson Santos&lt;/a&gt; atraves de &lt;a href="https://unsplash.com/s/photos/code?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>:strong_migrations for Elixir - catch unsafe migrations easily</title>
      <author>Patryk Woziński</author>
      <pubDate>Fri, 29 Oct 2021 17:56:20 +0000</pubDate>
      <link>https://dev.to/patryk/strongmigrations-for-elixir-catch-unsafe-migrations-easily-3731</link>
      <guid>https://dev.to/patryk/strongmigrations-for-elixir-catch-unsafe-migrations-easily-3731</guid>
      <description>&lt;p&gt;Hey, hey! I just published my next small open-source library (actually, it's a "port" from Ruby). Thanks to &lt;code&gt;:strong_migrations&lt;/code&gt; you can catch all unsafe things that happening in your application's migrations like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;remove column&lt;/li&gt;
&lt;li&gt;rename column&lt;/li&gt;
&lt;li&gt;drop table&lt;/li&gt;
&lt;li&gt;add index non-concurrently&lt;/li&gt;
&lt;li&gt;add index concurrently in a transaction&lt;/li&gt;
&lt;li&gt;drop index concurrently in a transaction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;... and soon much more like migrations that are adding NOT NULL, etc. There are also a few configuration possibilities, so you can prepare everything to meet your application's requirements.&lt;/p&gt;

&lt;p&gt;Any feedback or feedback is welcome. That is my first time when I was working on the AST - that's also why I've opened an issue with the "help wanted" label. It's related to refactoring possibilities of the AST parser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/patrykwozinski/strong_migrations"&gt;https://github.com/patrykwozinski/strong_migrations&lt;/a&gt;&lt;/p&gt;

</description>
      <category>elixir</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Material Kit 2 - Free Python/Jinja template</title>
      <author>Sm0ke</author>
      <pubDate>Fri, 29 Oct 2021 17:53:00 +0000</pubDate>
      <link>https://dev.to/sm0ke/material-kit-2-free-pythonjinja-template-5akc</link>
      <guid>https://dev.to/sm0ke/material-kit-2-free-pythonjinja-template-5akc</guid>
      <description>&lt;p&gt;Hello Coders, &lt;/p&gt;

&lt;p&gt;This article presents an open-source &lt;strong&gt;Jinja Template&lt;/strong&gt; built on top of &lt;strong&gt;&lt;a href="https://github.com/app-generator/jinja-material-kit"&gt;Material Kit 2&lt;/a&gt;&lt;/strong&gt;, a colorful Bootstrap 5 design. The product, available for download directly from Github, can be used to style any Python-based web app that uses Flask, Django or any other compatible framework. For newcomers, &lt;strong&gt;&lt;a href="https://jinja-material-kit.appseed-srv1.com/"&gt;Material Kit 2&lt;/a&gt;&lt;/strong&gt; is a popular design developed by Creative-Tim agency with more than 160k downloads. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://jinja-material-kit.appseed-srv1.com/"&gt;Jinja Material Kit&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://github.com/app-generator/jinja-material-kit"&gt;Jinja Material Kit&lt;/a&gt; - Source Code&lt;/li&gt;
&lt;li&gt;✨ More &lt;a href="https://appseed.us/jinja-template"&gt;Jinja Templates&lt;/a&gt; - a curated index&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DkI-9n_1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgp0oe7i430jo17mghfl.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DkI-9n_1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgp0oe7i430jo17mghfl.gif" alt="Material Kit 2 - Free Python/Jinja template" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Probably the most easier way to use the product is to follow the Docker set up (steps listed on the README file): &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone the sources&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/jinja-material-kit.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;jinja-material-kit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull   &lt;span class="c"&gt;# download dependencies&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build  &lt;span class="c"&gt;# local set up&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up     &lt;span class="c"&gt;# start the app in Docker&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the above commands are executed, the product should be up &amp;amp; running in the browser on address &lt;code&gt;http://localhost:85&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gdFhEsF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gaow6ydgerkwrw3dwkn2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gdFhEsF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gaow6ydgerkwrw3dwkn2.png" alt="Jinja Material Kit - Contact page." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Jinja Material 2 - Components Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---SR6w1bK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fn4k0qpjumsgp3mbgysm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---SR6w1bK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fn4k0qpjumsgp3mbgysm.png" alt="Jinja Material 2 - Components Page" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Jinja Material 2 - Team Cards&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4-8___n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek28vj86y88vahjxxnif.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4-8___n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek28vj86y88vahjxxnif.png" alt="Jinja Material 2 - Team Cards" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#official-product-information"&gt;
  &lt;/a&gt;
  Official Product Information
&lt;/h2&gt;

&lt;p&gt;The most complex and innovative UI Kit Made by Creative Tim. Check our latest Freebie Bootstrap 5 UI Kit with a fresh, new design inspired by Google's Material Design 2. Designed for those who like bold elements and beautiful websites, Material Kit 2 is ready to help you create stunning websites and web apps.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WxDg40b7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx87j4tv6a78vcyucfn1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WxDg40b7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx87j4tv6a78vcyucfn1.png" alt="Material Kit 2 - FREE BOOTSTRAP 5 UI KIT." width="800" height="600"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Fully Coded Elements&lt;/strong&gt; - Material Kit 2 is built with over 60 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, which you can easily modify using SASS files and classes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example Pages&lt;/strong&gt; - If you want to get inspiration or just show something directly to your clients, you can jump-start your development with our pre-built example pages. You will be able to quickly set up the basic structure for your web project.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://bit.ly/3u2lZc6"&gt;Material Kit 2&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;✨ More &lt;a href="https://appseed.us/jinja-template"&gt;Jinja Templates&lt;/a&gt; - provided by AppSeed &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>material</category>
      <category>uikit</category>
      <category>opensource</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 29 Oct 2021 17:31:38 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-1p73</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-1p73</guid>
      <description>&lt;p&gt;Hey there! &lt;/p&gt;

&lt;p&gt;Looking back on this past week, what was something you were proud of accomplishing?&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Trying out a new recipe... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Congrats on your wins! I hope you all have a great day! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/Ote7fuZrFEV12yjvs5/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Ote7fuZrFEV12yjvs5/giphy.gif" alt="Dog with sunglasses saying happy friday" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>JavaScript Internal Property`[[]]` </title>
      <author>Dani Schuhman</author>
      <pubDate>Fri, 29 Oct 2021 17:20:57 +0000</pubDate>
      <link>https://dev.to/dani8439/javascript-internal-property-1nl2</link>
      <guid>https://dev.to/dani8439/javascript-internal-property-1nl2</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@dtopkin1?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Dayne Topkin&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/private?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maybe one day you were playing in the dev browser, and one day come across something that seemed a bit different. &lt;/p&gt;

&lt;p&gt;You've printed things out to the console, and something odd appears.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function foo() { 
    console.log("Hello")
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;foo.prototype
{constructor: ƒ}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Clicking on the arrow for the constructor, will return an object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{constructor: ƒ}
constructor: ƒ foo()
arguments: null
caller: null
length: 0
name: "foo"
prototype: {constructor: ƒ}
[[FunctionLocation]]: VM572:1
[[Prototype]]: ƒ ()
[[Scopes]]: Scopes[2]
[[Prototype]]: Object
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What on earth are those double brackets &lt;code&gt;[[]]&lt;/code&gt;? &lt;/p&gt;

&lt;p&gt;It's the internal property. In JavaScript, objects have an internal property known as &lt;code&gt;Prototype&lt;/code&gt;. You can also see that there is a &lt;code&gt;Scopes&lt;/code&gt; inside of these double brackets as well once clicking inside an object. &lt;/p&gt;

&lt;p&gt;Whenever there are &lt;code&gt;[[]]&lt;/code&gt; that appear, it's an internal property that can't be accessed by our code. Both &lt;code&gt;Scopes&lt;/code&gt; and &lt;code&gt;Prototype&lt;/code&gt; are internal properties of the &lt;code&gt;foo&lt;/code&gt; object. &lt;/p&gt;

&lt;p&gt;What's pretty cool, and also very helpful when clicking on the &lt;code&gt;Scopes&lt;/code&gt; internal property, is that when working with some concepts, say, a closure, clicking on the scopes property will show the closure itself.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let f;

const g = function() {
    const a = 23;
    f = function() {
        console.log(a * 2);
    };
};

g();
f();

console.dir(f)

// Returns
ƒ f()
arguments: null
caller: null
length: 0
name: "f"
prototype: {constructor: ƒ}
[[FunctionLocation]]: VM495:3
[[Prototype]]: ƒ ()
[[Scopes]]: Scopes[3]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Clicking on the &lt;code&gt;Scopes&lt;/code&gt; internal property, we can see where the closure lives.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[[Scopes]]: Scopes[3]
0: Closure (g) {a: 23}
1: Script {f: ƒ, g: ƒ}
2: Global {0: Window, window: Window, self: Window, docum...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's pretty cool, isn't it? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/11003021/what-internal-property-in-ecmascript-is-defined-for"&gt;StackOverFlow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://javascript.info/private-protected-properties-methods"&gt;JavaScript Info - Private Protected Properties&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
