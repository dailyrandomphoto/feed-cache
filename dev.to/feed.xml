<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React page routes made easy!!</title>
      <author>hillary</author>
      <pubDate>Sat, 03 Jul 2021 22:42:16 +0000</pubDate>
      <link>https://dev.to/hills2003/react-page-routes-made-easy-3nc6</link>
      <guid>https://dev.to/hills2003/react-page-routes-made-easy-3nc6</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Ever wondered how to implement page routes in a complex react application?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;worry not cuz i ve'gat a solution for y'all&lt;/p&gt;

&lt;p&gt;an npm package @dev_hills/easyroutes ,it makes routing between pages as easy as easy!!&lt;/p&gt;

&lt;p&gt;npm i @dev_hills/easyroute and you are all set-up, it accepts a single prop which is basically an array of objects.&lt;/p&gt;

&lt;p&gt;//[{path:"/about",component:"About"}]&lt;/p&gt;

&lt;p&gt;you can as well pass in any number of objects to the array , thats all you need as property to get up and running with this cool package ..&lt;/p&gt;

&lt;p&gt;check it out guys&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>gatsby</category>
      <category>html</category>
    </item>
    <item>
      <title>Bogo sort algorithm</title>
      <author>Aya Bouchiha</author>
      <pubDate>Sat, 03 Jul 2021 22:31:26 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/bogo-sort-algorithm-4l0m</link>
      <guid>https://dev.to/ayabouchiha/bogo-sort-algorithm-4l0m</guid>
      <description>&lt;p&gt;Hi, today, I'm going to talk about ridiculous sorting algorithms which are called &lt;em&gt;Bogo sort&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#definition-of-bogo-sort"&gt;
  &lt;/a&gt;
  Definition of Bogo sort
&lt;/h2&gt;

&lt;p&gt;Bogo sort: called also &lt;em&gt;stupid sort&lt;/em&gt;, &lt;em&gt;slow sort&lt;/em&gt;, &lt;em&gt;monkey sort&lt;/em&gt; is a type of sorting algorithms, it works by shuffling randomly array elements until the array is sorted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-amp-space-complexity"&gt;
  &lt;/a&gt;
  Time &amp;amp; Space complexity
&lt;/h2&gt;

&lt;p&gt;Time complexity: &lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Best case: O(n)&lt;/li&gt;
&lt;li&gt; Average case: O(n!) &lt;/li&gt;
&lt;li&gt; Worst case: infinte ( &lt;em&gt;because there is no guarantee that a randome suffling will ever produce a sorted array&lt;/em&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The space complexity of &lt;em&gt;Bogo sort&lt;/em&gt; is O(1)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation-of-bogo-sort-using-python"&gt;
  &lt;/a&gt;
  Implementation of Bogo sort using Python
&lt;/h2&gt;

&lt;p&gt;for getting a random integer to shuffle the array we need to import &lt;strong&gt;randint&lt;/strong&gt; from the random module&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#shuffle-function"&gt;
  &lt;/a&gt;
  Shuffle function
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;randomInt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randomInt&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randomInt&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#issorted-function"&gt;
  &lt;/a&gt;
  isSorted function
&lt;/h3&gt;

&lt;p&gt;we should implement a function that checks if the array is sorted, if the function returned True, It means the array is sorted and we need to break the loop, else (&lt;em&gt;returned False&lt;/em&gt;) we'll shuffle it again until the array will be sorted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isSorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bogo-sort"&gt;
  &lt;/a&gt;
  Bogo sort
&lt;/h3&gt;

&lt;p&gt;this function shuffles the array randomly until it is sorted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;BogoSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# while the array is not sorted
&lt;/span&gt;    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;isSorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# if the array is sorted
&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-code"&gt;
  &lt;/a&gt;
  Final Code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isSorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;randomInt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randomInt&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randomInt&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;BogoSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;isSorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Have an amazing day!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references-and-useful-resources"&gt;
  &lt;/a&gt;
  References and useful resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/bogosort-permutation-sort/"&gt;https://www.geeksforgeeks.org/bogosort-permutation-sort/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://rosettacode.org/wiki/Sorting_algorithms/Bogosort"&gt;https://rosettacode.org/wiki/Sorting_algorithms/Bogosort&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=DaPJkYo2quc"&gt;https://www.youtube.com/watch?v=DaPJkYo2quc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;#day_21&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>computerscience</category>
      <category>codenewbie</category>
      <category>python</category>
    </item>
    <item>
      <title>What I Learned This Week: Next.js and API Keys</title>
      <author>Desiree Lerma</author>
      <pubDate>Sat, 03 Jul 2021 21:14:30 +0000</pubDate>
      <link>https://dev.to/desilerma25/what-i-learned-this-week-next-js-and-api-keys-3ig5</link>
      <guid>https://dev.to/desilerma25/what-i-learned-this-week-next-js-and-api-keys-3ig5</guid>
      <description>&lt;p&gt;If you've read my previous blogs then you're aware that I have been learning Next.js recently as I tackle my next project, WatchNext. If you have not read my previous blogs, a quick update for you: I kickstarted a new project to keep the gears in my brain spinning as I search for my first engineering role. During the kickoff process, I quickly encountered an obstacle (I wanted this projet to be frontend only). That obstacle being, how to properly hide my keys on a frontend application without them accidentally being exposed to a client after deployment. Nicholas Papadakis recommended using Next.js and thus my journey to learn it began.&lt;/p&gt;

&lt;p&gt;Now that we're caught up let's get to the point of this blog. API KEYS!&lt;/p&gt;

&lt;p&gt;The main tidbit of information that I've learned while exploring Next.js is how to keep my secret keys an actual secret. Next.js offers you the ability to create an API directory within your Pages directory. This API directory allows you to create API endpoints for your applications. You can then access these endpoints to get data from your external API as needed. The best thing... everything in it will be private! Including your ENV variables. Seeing as this was my first major obstacle this is a &lt;strong&gt;GREAT&lt;/strong&gt; bonus for me and my current needs.&lt;/p&gt;

&lt;p&gt;Using ENV variables is a tad different than how you would implement them on a backend application. To utilize them in Next.js, you will create a file in the highest level of your application and title it &lt;code&gt;.env.local&lt;/code&gt; (don't forget to ensure it is included in your &lt;code&gt;.gitignore&lt;/code&gt; file so you don't accidentally make it public!). In this file is where you will store your ENV variable like you would normally do in the backend. Now, to access it, you would interpolate it where it's needed and call &lt;code&gt;process.env.ENV_VAR_NAME&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/// In .env.local
API_SECRET=PUT_SECRET_HERE

// Whichever file you need to call the ENV variable, within the API directory
const URL = 'https://myapi.org/info?api_key=${process.env.API_SECRET}'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;VIOLA!!&lt;/strong&gt; You have accessed your external API without exposing your precious keys or creating a backend.&lt;/p&gt;

&lt;p&gt;If what you've read so far about Next.js sounds like it can be useful to you, I would highly recommend using Next.js for your next project or even migrating a current project that you have to utilize the benefits that Next.js has to offer.&lt;br&gt;
Just a reminder, I am still learning and growing. I am open to any tips and tricks you may have as well as open to answering any questions you may have to the best of my ability. Happy learning! &lt;/p&gt;

&lt;p&gt;Resources: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/docs/basic-features/environment-variables"&gt;https://nextjs.org/docs/basic-features/environment-variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>nextjs</category>
      <category>devjournal</category>
      <category>react</category>
    </item>
    <item>
      <title>Easy way to manage multiple git accounts using ssh</title>
      <author>Shahid Ullah Khan</author>
      <pubDate>Sat, 03 Jul 2021 20:58:53 +0000</pubDate>
      <link>https://dev.to/shahidullahkhankhattak/easy-way-manage-multiple-git-accounts-using-ssh-41hk</link>
      <guid>https://dev.to/shahidullahkhankhattak/easy-way-manage-multiple-git-accounts-using-ssh-41hk</guid>
      <description>&lt;p&gt;If you’re having problems managing different ssh keys for your different git accounts, This article is for you! follow below steps to do it easily.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;: Nodejs, Npm&lt;/p&gt;

&lt;p&gt;You will need to install and use npm package called ssh-keyman. &lt;a href="https://www.npmjs.com/package/ssh-keyman"&gt;(Click here to view docs)&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-installation"&gt;
  &lt;/a&gt;
  Step 1 — Installation
&lt;/h2&gt;

&lt;p&gt;Run below command to install ssh-keyman package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i &lt;span class="nt"&gt;-g&lt;/span&gt; ssh-keyman
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2-initialisation"&gt;
  &lt;/a&gt;
  Step 2 — Initialisation
&lt;/h2&gt;

&lt;p&gt;Now initialise ssh-keyman using below command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-i&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By running above command, this package will setup everything up in your system. It will create a default environment in your system &amp;amp; copy your current ~/.ssh/ content to default environment.&lt;/p&gt;

&lt;p&gt;Now let’s assume we‘ve two different repositories from two different github profiles &lt;strong&gt;githubx&lt;/strong&gt; and &lt;strong&gt;githuby&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-create-environment-for-your-account"&gt;
  &lt;/a&gt;
  Step 3 — Create environment for your account.
&lt;/h2&gt;

&lt;p&gt;Now let’s create two environments, One for githubx and other for githuby.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-c&lt;/span&gt; githubx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above command will create a profile called &lt;strong&gt;githubx&lt;/strong&gt; in your system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--35CA9ufq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32dgjae4izx4vx61d1y6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--35CA9ufq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32dgjae4izx4vx61d1y6.png" alt="Create githubx environment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Similarly, Create another environment for our another github account githuby.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-c&lt;/span&gt; githuby
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pe64cgI9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec5am3x13batnbsl8ug9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pe64cgI9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec5am3x13batnbsl8ug9.png" alt="Create githuby environment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we’ve both environments setup for githubx and githuby.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-setup-ssh-keys"&gt;
  &lt;/a&gt;
  Step 4 — Setup SSH Keys.
&lt;/h2&gt;

&lt;p&gt;Let’s now create ssh key for your githubx account. For that we need to switch to githubx environment.&lt;/p&gt;

&lt;p&gt;To switch to githubx environment run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-s&lt;/span&gt; githubx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9MqHCaIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tno94c3qwv1145wcj50h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9MqHCaIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tno94c3qwv1145wcj50h.png" alt="Switch githubx environment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we’re in githubx environment, Let’s generate ssh keys for githubx.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen &lt;span class="nt"&gt;-t&lt;/span&gt; rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;once the key is generated, use that key in your GitHub account, copy contents of ~/.ssh/id_rsa.pub and paste it in github’s ssh key section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aWeqhMGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzdp2kn2x6wmzs7png1x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aWeqhMGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzdp2kn2x6wmzs7png1x.png" alt="Github add key"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Repeat the above process for githuby account.&lt;/strong&gt;&lt;br&gt;
I.e&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Switch to githuby environment
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-s&lt;/span&gt; githuby
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;br&gt;
sh&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Generate key for githuby environment.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keygen &lt;span class="nt"&gt;-t&lt;/span&gt; rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Similarly login to githuby account in the browser and add the contents of ~/.ssh/id_rsa.pub to github create key’s key section.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#step-5-start-using-and-switching"&gt;
  &lt;/a&gt;
  Step 5 — Start using and switching.
&lt;/h2&gt;

&lt;p&gt;So, If you want to work in repos from githubx account, simply switch to githubx environment using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-s&lt;/span&gt; githubx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when ever you push or pull the code from git, keys for githubx will be used.&lt;/p&gt;

&lt;p&gt;Similarly if you want to work in repos from githuby account, simply switch to githuby environment using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh-keyman &lt;span class="nt"&gt;-s&lt;/span&gt; githuby
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And when ever you push or pull code from git, keys for githuby will be used.&lt;/p&gt;

</description>
      <category>ssh</category>
      <category>github</category>
      <category>managesshkeys</category>
      <category>bitbucket</category>
    </item>
    <item>
      <title>The Richest Man in Babylon by George S Clason</title>
      <author>Sandor Dargo</author>
      <pubDate>Sat, 03 Jul 2021 20:10:02 +0000</pubDate>
      <link>https://dev.to/sandordargo/the-richest-man-in-babylon-by-george-s-clason-292a</link>
      <guid>https://dev.to/sandordargo/the-richest-man-in-babylon-by-george-s-clason-292a</guid>
      <description>&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/1939438632/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1939438632&amp;amp;linkId=f075962475cbe35d1a89d6e11310dd09"&gt;The Richest Man in Babylon&lt;/a&gt; was first published in 1926, almost one hundred years ago. We might think about it as the father of all modern personal finance advice books.&lt;/p&gt;

&lt;p&gt;Especially if we consider that it's based on a collection of parables that were written 4,000 years ago in the ancient city of Babylon, the richest city in that world.&lt;/p&gt;

&lt;p&gt;They understood some basic correlations that many still get wrong. Now, let's see some of the main ideas.&lt;/p&gt;

&lt;p&gt;IMG BABYLON&lt;/p&gt;

&lt;p&gt;If you are dedicated you can read the book in one afternoon, it's only about 120 pages. Due to obvious reasons, I'm only going to highlight 2 sets of rules and a story.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#seven-cures-for-a-lean-purse"&gt;
  &lt;/a&gt;
  Seven cures for a lean purse
&lt;/h2&gt;

&lt;p&gt;When Sargon, the King of Babylon returned from war, he saw that his people couldn't support themselves.&lt;/p&gt;

&lt;p&gt;As a cure, he ordered the richest man in Babylon, Arkad, to teach people how to acquire money.&lt;/p&gt;

&lt;p&gt;Arkad gladly accepted the order - I guess it was better than losing his head - and he shared the 7 following rules:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#start-thy-purse-fattening"&gt;
  &lt;/a&gt;
  Start thy purse fattening
&lt;/h3&gt;

&lt;p&gt;No matter how small money you earn, always pay yourself first in the sense that you save 10%.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#control-thy-expenditures"&gt;
  &lt;/a&gt;
  Control thy expenditures
&lt;/h3&gt;

&lt;p&gt;It really comes from the previous point that you should not spend more than what you have. In fact, you should not spend more than 90% of your income. This is so easy, but if you just think about all the consumer credits, so many people don't get it right.&lt;/p&gt;

&lt;p&gt;And there is another thought that is worth pondering:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"Confuse not the necessary expenses with thy desires."&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes, we want many things, but that's not our necessity. It's not necessary to have the latest smartphone, to have takeaway lunches or even to live in a relatively spacious apartment. It's good if you can afford that, but don't spend more than you have...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-thy-gold-multiply"&gt;
  &lt;/a&gt;
  Make thy gold multiply
&lt;/h3&gt;

&lt;p&gt;Saving 10% of what you earn is great, but it will only take you so far. You also have to invest the money, so that it will also earn and start to grow your savings with the help of compound interest.&lt;/p&gt;

&lt;p&gt;Let's say that for 10 years you save $10 a month. By the end of the 120 months, you will have $1,200.&lt;/p&gt;

&lt;p&gt;With a 3% interest that money would become $1,400, but with a 6% almost $1,650.&lt;/p&gt;

&lt;p&gt;Maybe that's not very impressive. The power of compound interests manifests more with a longer timescale; after 20 years, the above numbers would be: $2,400 (2%), $3,200 (3%) and $4,640 (6%).&lt;/p&gt;

&lt;p&gt;Start saving money as early as possible to benefit more from compound interests.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#guard-thy-treasures-against-loss"&gt;
  &lt;/a&gt;
  Guard thy treasures against loss
&lt;/h3&gt;

&lt;p&gt;Look for safe investments where you will not lose your principal. Also, you should not invest all your eggs, in the same basket, diversify your portfolio.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-of-thy-dwelling-a-profitable-investment"&gt;
  &lt;/a&gt;
  Make of thy dwelling a profitable investment
&lt;/h3&gt;

&lt;p&gt;Professionals still debate on this point 4,000 years later. It's about owning your own home. This book suggest to own your home, to decrease your expenditures, so that you can save, you can invest more.&lt;/p&gt;

&lt;p&gt;I think it depends on how good investments you can find and what's the price of a good rental, how frequently do you want to change neighbourhood, city, country, etc.&lt;/p&gt;

&lt;p&gt;Nevertheless, owning your own home is the fifth cure of a lean purse.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#insure-a-future-income"&gt;
  &lt;/a&gt;
  Insure a future income
&lt;/h3&gt;

&lt;p&gt;Make some investments that will ensure that you and/or your family will not lack resources once you'll not be able to earn money or when you're gone.&lt;/p&gt;

&lt;p&gt;Nowadays this would either mean that you set up a retirement portfolio or a set of passive income flows.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#increase-thy-ability-to-earn"&gt;
  &lt;/a&gt;
  Increase thy ability to earn
&lt;/h3&gt;

&lt;p&gt;If you feel that you cannot earn enough money, go on and invest first in yourself. Learn some skills, increase your value so that you can earn more money, enough money that can support your desired lifestyle.&lt;/p&gt;

&lt;p&gt;We, developers, are in a quite good position both in terms of knowledge and resources to improve us. Yet, we should not forget that learning is a lifelong activity, especially in our field. &lt;/p&gt;

&lt;p&gt;Let's go and learn something that will increase our value and we can earn more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-five-laws-of-gold"&gt;
  &lt;/a&gt;
  The five laws of gold
&lt;/h2&gt;

&lt;p&gt;The five laws of gold are mostly about general rules of building wealth. I don't quote them, because of the old language used in the book.&lt;/p&gt;

&lt;p&gt;First, make sure that you save at least 10% of what you make. The more you can save, the faster your wealth builds up. Less than 10% will unlikely be enough.&lt;/p&gt;

&lt;p&gt;Second, you have to look for a profitable investment, so that you can benefit from compounding.&lt;/p&gt;

&lt;p&gt;Third, don't be careless with your money, seek out for advice of wise, experienced people.&lt;/p&gt;

&lt;p&gt;Fourth, don't invest in businesses that you don't understand that you're unfamiliar with. You'll lose money. Invest in something you understand and with the help, with the guidance of other experienced people.&lt;/p&gt;

&lt;p&gt;Fifth, don't chase butterflies, don't get into tricksters, schemes, just with the hope of a romantic return of investment. Be realistic. The slow and steady wins the race.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#having-strong-work-ethic-is-the-most-important"&gt;
  &lt;/a&gt;
  Having strong work ethic is the most important
&lt;/h2&gt;

&lt;p&gt;What had the biggest impression on me, was the last story &lt;em&gt;The Luckiest Man In Babylon&lt;/em&gt;. The merchant prince, Sharru Nada was riding at the head of his caravan. On his side, there was Hadan Gula riding, the grandson of his ancient partner Arad Gula.&lt;/p&gt;

&lt;p&gt;Sharra Nada always felt he owed a debt of gratitude to Arad Gula, such gratitude that he would never be able to repay.&lt;/p&gt;

&lt;p&gt;His grandson was not the type he liked. He wore expensive jewels, fancy clothes and he didn't like to work. He thought that work was for slaves and he was not a slave.&lt;/p&gt;

&lt;p&gt;In fact, he didn't even get the point, why this guy at the head of the caravan was working so hard. Why did his grandfather work so hard?&lt;/p&gt;

&lt;p&gt;I will not share the whole story here, you can check out the book. The point is that both Sharru Nada and Arad Gula used to be slaves at a certain point in their lives. With the right attitude, diligence and perseverance they became free. They became free because they had the right mindset and busted their asses off.&lt;/p&gt;

&lt;p&gt;By the end of the story, by the end of their ride, Hadan Gula understood the point of work and it doesn't belittle anyone, on the contrary working hard towards a goal is a noble act.&lt;/p&gt;

&lt;p&gt;This is why I keep saying that the most important thing that you can get from your parents is not wealth, but the right attitude. It's possible to change attitude, but much more difficult than amassing enough money that is enough for you. (And I clearly don't speak about billions of dollars here.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/1939438632/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1939438632&amp;amp;linkId=f075962475cbe35d1a89d6e11310dd09"&gt;The Richest Man in Babylon&lt;/a&gt; is clearly a book that I recommend reading. Maybe the money advice will bring you only so far, maybe you already know all that and you put aside at least 10% of your money and invest it wisely. I'm more than happy for you.&lt;/p&gt;

&lt;p&gt;Maybe you already have sources of passive income, maybe you don't even need to work (full-time) anymore.&lt;/p&gt;

&lt;p&gt;But with all the parables, with all the stories, this book is a nice reminder of important concepts of wealth-building and values that will bring you forward in your life.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/1939438632/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=sandordargo-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=1939438632&amp;amp;linkId=f075962475cbe35d1a89d6e11310dd09"&gt;Read it&lt;/a&gt; if you haven't!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-deeper"&gt;
  &lt;/a&gt;
  Connect deeper
&lt;/h2&gt;

&lt;p&gt;If you liked this article, please &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hit on the like button,
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/gvcv1j"&gt;subscribe to my newsletter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;and let's connect on &lt;a href="https://twitter.com/SandorDargo"&gt;Twitter&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>books</category>
      <category>watercooler</category>
      <category>history</category>
      <category>finance</category>
    </item>
    <item>
      <title>Javascript Hacks</title>
      <author>SIDDHANT JOHARI</author>
      <pubDate>Sat, 03 Jul 2021 20:08:16 +0000</pubDate>
      <link>https://dev.to/siddhant_johari_8fdecc7b7/javascript-hacks-3j48</link>
      <guid>https://dev.to/siddhant_johari_8fdecc7b7/javascript-hacks-3j48</guid>
      <description>&lt;p&gt;There are many amazing features in javascript that can make your life much simpler, In this blog, I have added 20 features that every javascript developer should know.&lt;/p&gt;

&lt;p&gt;1.Resize the Array using an array. length.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;2.Swapping of two Numbers.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;3 Concatenating two or more arrays without causing server overload.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;4.Use Filter in a different way.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;5.Iterate on the map from 0 to n.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;6.Replace all occurrences of a word in a string&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;7.Shortcut for conditions.&lt;br&gt;
Here, I am explaining basic two examples we can implement in multiple ways.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;8.String to number / Number to string.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;9.Use the console in different ways.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;10.Use console.table&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;11.Get the items near to last index of an array.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;12.Get n power of any number.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;13.Check the falsy or truly value.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;14.Call a function by its name stored in a string using eval function.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;15.typeof Operator.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;16.yeild keyword&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;17.function* in javascript.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;18.new.target in javascript&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;19.label statement.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;20.Rest parameters Syntax.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Conclusion:&lt;br&gt;
Thanks for reading it, In this blog I have explained some of the most used features of javascript, I will explain more features in next blog,&lt;br&gt;
Please give feedback in responses.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>Agora vamos falar de ARIA</title>
      <author>Luiza Gatti</author>
      <pubDate>Sat, 03 Jul 2021 20:02:19 +0000</pubDate>
      <link>https://dev.to/luizagatti/agora-vamos-falar-de-aria-2i0l</link>
      <guid>https://dev.to/luizagatti/agora-vamos-falar-de-aria-2i0l</guid>
      <description>&lt;p&gt;Antes de mais nada, se você não leu &lt;a href="https://dev.to/luizagatti/como-aumentar-o-alcance-do-seu-site-um-guia-de-acessibilidade-811"&gt;minha história anterior&lt;/a&gt;, volta lá e dá uma lida porque ela serve de introdução para essa aqui.&lt;/p&gt;

&lt;p&gt;A sigla ARIA (Accessible Rich Internet Applications) significa Aplicações para a Internet Ricas em Acessibilidade, que definem as formas de tornar o conteúdo e as aplicações da internet mais acessíveis.&lt;/p&gt;

&lt;p&gt;A ARIA permite a marcação de algumas regiões importantes na página que servirão para auxiliar na navegação (para ajudar quem usa um leitor de tela, por exemplo). É um conjunto de atributos especiais para acessibilidade que pode ser adicionado a qualquer linguagem de marcação, mas é especialmente adequado para o HTML, e todos os exemplos que trarei serão nessa linguagem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BU73Rz3p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fq7rhmf6493bktnaitr0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BU73Rz3p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fq7rhmf6493bktnaitr0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#primeira-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Primeira regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Sempre que você puder usar um elemento nativo HTML5 ou atributo com semântica e comportamento que você precisa já incorporados, em vez de redefinir um elemento e adicionar o ARIA para torná-lo acessível, opte pelo HTML5.&lt;/p&gt;

&lt;p&gt;Em quais casos isso pode não ser possível?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quando o recurso está disponível em HTML5, mas não está implementado; ou está implementado, mas não dá suporte a acessibilidade;&lt;/li&gt;
&lt;li&gt;Se as restrições de design visual excluem o uso de um elemento nativo específico, porque o elemento não pode ser estilizado conforme necessário;&lt;/li&gt;
&lt;li&gt;Se o recurso não estiver disponível em HTML.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#segunda-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Segunda regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Não altere a semântica nativa, a menos que seja realmente necessário.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Não faça:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h2 role="tab"&amp;gt;tab de cabeçalho&amp;lt;/h2&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Faça:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div role="tab"&amp;gt;&lt;br&gt;
   &amp;lt;h2&amp;gt;tab de cabeçalho&amp;lt;/h2&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Nota: Se um elemento não interativo for usado como base para um elemento interativo, pessoas desenvolvedoras terão que adicionar a semântica usando ARIA e o comportamento apropriado usando scripts. No caso de um botão, por exemplo, é muito melhor e mais fácil usar apenas um botão.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#terceira-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Terceira regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Todos os controles interativos de ARIA devem ser utilizáveis via teclado.&lt;/p&gt;

&lt;p&gt;Se você cria uma ferramenta onde a pessoa pode clicar, tocar, arrastar, soltar, deslizar ou rolar, a pessoa também deve ser capaz de navegar até a ferramenta e executar uma ação equivalente usando o teclado.&lt;/p&gt;

&lt;p&gt;Todas as ferramentas interativas devem ser programadas para responder aos pressionamentos de tecla padrão ou combinações de pressionamento de tecla quando aplicável.&lt;/p&gt;

&lt;p&gt;Por exemplo, se estiver usando &lt;code&gt;role="button"&lt;/code&gt;, o elemento deve ser capaz de receber o foco e a pessoa usuária deve conseguir ativar a ação associada ao elemento usando Enter (WIN OS) ou Return (MAC OS) e a tecla de espaço.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#quarta-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Quarta regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Não use &lt;code&gt;role="presentation"&lt;/code&gt; ou &lt;code&gt;aria-hidden="true"&lt;/code&gt; em um elemento visível e focalizável. Usar qualquer uma dessas propriedades em um elemento que pode ser visível e focalizável irá resultar em pessoas usuárias clicando em ‘nada’.&lt;br&gt;
Um elemento que for oculto usando &lt;code&gt;display: none&lt;/code&gt; também será removido da árvore de acessibilidade, o que torna desnecessária a adição de &lt;code&gt;aria-hidden="true"&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#quinta-regra-de-uso-de-aria"&gt;
  &lt;/a&gt;
  Quinta regra de uso de ARIA
&lt;/h1&gt;

&lt;p&gt;Todos os elementos interativos devem ter um nome acessível.&lt;/p&gt;

&lt;p&gt;Um elemento interativo só tem um nome acessível quando sua propriedade de nome (name ou equivalente) está preenchida.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Não faça:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;label&amp;gt;Insira seu nome&amp;lt;/label&amp;gt; &amp;lt;input type="text"/&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Faça:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;label for="user-name"&amp;gt;Insira seu nome&amp;lt;/label&amp;gt;&lt;br&gt;
&amp;lt;input type="text" id="user-name"/&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;O correto acima tem um nome acessível porque o elemento de entrada é um elemento rotulável e o elemento de rótulo é usando corretamente para associar o texto à entrada.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#o-que-adicionar-role-faz-com-a-sem%C3%A2ntica-nativa"&gt;
  &lt;/a&gt;
  O que adicionar "role" faz com a semântica nativa?
&lt;/h1&gt;

&lt;p&gt;Ao adicionar a função ARIA, estamos substituindo a semântica da função nativa na árvore de acessibilidade e, portanto, ARIA afeta diretamente o que é relatado a uma tecnologia assistiva.&lt;br&gt;
Por exemplo, esse código:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h1 role=button&amp;gt;text&amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fica assim na árvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ba_YBTad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9708hvsg9ylzhu0wq5m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ba_YBTad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9708hvsg9ylzhu0wq5m.png" alt="Heading text - push button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adicionar a ARIA &lt;strong&gt;não&lt;/strong&gt; fará com que o elemento pareça ou se comporte de maneira diferente para as pessoas que não estão usando tecnologia assistiva. A função &lt;strong&gt;não altera&lt;/strong&gt; os comportamentos, estados e propriedades do elemento host, apenas a semântica da função nativa. Por exemplo, esse código:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;button role="heading" aria-level=1&amp;gt; Texto &amp;lt;/button&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fica assim na árvore de acessibilidade:&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JG0B6Dka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qykj1543amelouxkk73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JG0B6Dka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qykj1543amelouxkk73.png" alt="Na primeira linha temos: (none) - heading. Na segunda linha temos: text - editable text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mas ele ainda pode ser pressionado, ainda está na ordem padrão do tab, ainda se parece com um botão e ainda dispara as ações associadas a ele quando pressionado. É por isso que é um erro de conformidade com o HTML5 transformar um botão em um heading.&lt;/p&gt;

&lt;p&gt;Nota: alterar a role de um elemento não adiciona comportamentos, propriedades ou estados àquela função. O ARIA não muda a aparência ou a ação no browser. Por exemplo, quando os links são estilizados para se comportarem como botões, adicionar &lt;code&gt;role="button"&lt;/code&gt; não é suficiente. Também é necessário fazer funcionar como um botão, incluindo um manipulador de eventos de chave que escuta a tecla de espaço como os botões nativos fazem.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#uso-de-rolepresentation-ou-rolenone"&gt;
  &lt;/a&gt;
  Uso de "role=presentation" ou "role=none"
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;role="presentation"&lt;/code&gt; ou seu sinônimo &lt;code&gt;role="none"&lt;/code&gt; remove a semântica do elemento onde ele está. Por exemplo, esse código:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h1 role="presentation"&amp;gt; Texto &amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fica assim na árvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_zKOpGxn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ylq9jxook2472peznv3n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_zKOpGxn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ylq9jxook2472peznv3n.png" alt="text - editable text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Em outras palavras, é apenas relatado na árvore como uma string de texto, sem qualquer significado semântico.&lt;/p&gt;

&lt;p&gt;Para elementos sem &lt;em&gt;children&lt;/em&gt; obrigatórios, quaisquer outros elementos aninhados dentro de um com &lt;code&gt;role="presentation/none"&lt;/code&gt; preservam sua semântica. Por exemplo, esse código:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h1 role="presentation"&amp;gt;&amp;lt;abbr&amp;gt; API &amp;lt;/abbr&amp;gt;&amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Fica assim na árvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WzJwVXV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bf3uslad2vnr77qs13g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WzJwVXV8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bf3uslad2vnr77qs13g.png" alt="Na primeira linha: (none) - abbr. Na segunda linha: API - editable text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para elementos com children obrigatórios (como &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; ou &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;) quaisquer filhos obrigatórios aninhados dentro do primeiro elemento com a &lt;code&gt;role="presentation/none"&lt;/code&gt; também tem a sua semântica removida. Por exemplo, esse código:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table role="presentation"&amp;gt;
   &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;
         &amp;lt;abbr&amp;gt; API &amp;lt;/abbr&amp;gt;
      &amp;lt;/td&amp;gt;
   &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fica assim na árvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h25Ohj3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr7hlfiek4aeytqq47lc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h25Ohj3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr7hlfiek4aeytqq47lc.png" alt="Na primeira linha: (none) - abbr. Na segunda linha: API - editable text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nota: quaisquer elementos que não sejam filhos obrigatórios do elemento com uma &lt;code&gt;role="presentation/none"&lt;/code&gt; mantém sua semântica. Isso inclui outros como lista ou tabelas aninhadas. Por exemplo, esse código que consiste em uma tabela com outra tabela aninhada:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;table&amp;gt;
   &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;
         &amp;lt;table&amp;gt;
            &amp;lt;tr&amp;gt;
               &amp;lt;td&amp;gt;
                  &amp;lt;abbr&amp;gt; API &amp;lt;/abbr&amp;gt;
               &amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
         &amp;lt;/table&amp;gt;
      &amp;lt;/td&amp;gt;
   &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fica assim na árvore de acessibilidade:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--056AG_gD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvg95kfegshf6vdrp8cc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--056AG_gD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvg95kfegshf6vdrp8cc.png" alt="(none) - table | (none) - row | (none) - cell | (none) - table | API - row | (none) - cell | (none) abbr | API - editable"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ao adicionar role="presentation/none" na tabela mais externa, é assim que fica a árvore:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hzeGC7Ct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxu0zej60wmbmm06xaxa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hzeGC7Ct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxu0zej60wmbmm06xaxa.png" alt="(none) - table | API - row | (none) - cell | (none) - abbr | API - editable"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#uso-de-arialabel-arialabelledby-e-ariadescribedby"&gt;
  &lt;/a&gt;
  Uso de aria-label, aria-labelledby e aria-describedby
&lt;/h1&gt;

&lt;p&gt;Atualmente &lt;code&gt;aria-label&lt;/code&gt;, &lt;code&gt;aria-labelledby&lt;/code&gt; e &lt;code&gt;aria-describedby&lt;/code&gt; tem um suporte melhor em associar conteúdo de texto a um subconjunto interativo de elementos (por exemplo &lt;code&gt;&amp;lt;div role="main"&amp;gt;&lt;/code&gt; ou &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;). Essas três opções não funcionam de forma consistente em links, o suporte a conteúdo embedado e conteúdo agrupado é inconsistente em navegadores, tecnologia assistiva e sistemas operacionais, mas podem ser usados com segurança em controles de formulário HTML5, incluindo vários tipos de &lt;code&gt;input&lt;/code&gt; e os elementos &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; e &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;.&lt;br&gt;
O exemplo a seguir de aria-labelledby com várias referências usa um intervalo com um &lt;code&gt;tabindex=-1&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#uso-de-roleapplication"&gt;
  &lt;/a&gt;
  Uso de role=application
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#como-raw-roleapplication-endraw-afeta-um-leitor-de%C2%A0tela"&gt;
  &lt;/a&gt;
  Como &lt;code&gt;role=application&lt;/code&gt; afeta um leitor de tela?
&lt;/h2&gt;

&lt;p&gt;Em muitos leitores de tela populares, a maioria dos pressionamentos de tecla são capturados pelo leitor e não pela página da web quando a pessoa usuária está no modo de navegação. Isso é necessário para a navegação eficiente de uma página. Quando o modo de aplicativo está definido, muitos leitores de tela param de interceptar os pressionamentos de tecla e passam todos os pressionamentos de tecla diretamente para o navegador. Assim, a pessoa usuária não conseguirá navegar na página tão facilmente. Por exemplo, não serão capazes de pular a página por títulos ou ler um parágrafo de texto estático linha por linha. No entanto, vários leitores de tela não se comportam de maneira diferente quando há um conjunto de &lt;code&gt;role=application&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ent%C3%A3o-quando-devemos-usar"&gt;
  &lt;/a&gt;
  Então quando devemos usar?
&lt;/h2&gt;

&lt;p&gt;Ao determinar quando devemos usar essa propriedade precisamos levar em consideração também as vantagens dos atalhos de teclado do leitor de tela em relação à perda desses recursos. Geralmente não deve ser usado e, se for, devem ser realizados testes de usabilidade com pessoas usuárias de leitores de tela.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Não usamos&lt;/strong&gt; &lt;code&gt;role=application&lt;/code&gt; se um conjunto de controles tiver apenas esses widgets que fazem parte do HTML padrão. Isso também se aplica se você marcá-los e criar um modelo de interação usando funções WAI-ARIA em vez de widgets HTML padrão:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;text box&lt;/code&gt; (também se aplica a telefone, pesquisa e senha)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;textarea&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;checkbox&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;button&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;radio button&lt;/code&gt; (normalmente dentro de um fieldset/legend)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select + option&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;link&lt;/code&gt;, &lt;code&gt;paragraphs&lt;/code&gt;, &lt;code&gt;headings&lt;/code&gt; e outros elementos que são clássicos/nativos de documentos web&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nota: não é recomendado que sejam desenvolvidos widgets de entrada de texto personalizados. Quase sempre é melhor usar os inputs nativos.&lt;/p&gt;

&lt;p&gt;Também &lt;strong&gt;não usamos&lt;/strong&gt; &lt;code&gt;role=application&lt;/code&gt; se seu widget for de algum dos seguintes tipos mais dinâmicos e não nativos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tree view&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slider&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;table&lt;/code&gt; que tenha elementos focalizáveis e que esteja sendo navegado pelas teclas de seta, por exemplo uma lista de mensagens de e-mail. Outros exemplos interativos são grids, tree grids, etc&lt;/li&gt;
&lt;li&gt;Uma lista de guias (&lt;code&gt;tab&lt;/code&gt;, &lt;code&gt;tablist&lt;/code&gt;) onde a pessoa usuária seleciona guias pelas teclas de seta para a direita e para a esquerda. Lembre-se que você tem que implementar o modelo de navegação para esse caso&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;dialog&lt;/code&gt; e &lt;code&gt;alertdialog&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;toolbar&lt;/code&gt; e &lt;code&gt;toolbar buttons&lt;/code&gt;, &lt;code&gt;menus&lt;/code&gt; e &lt;code&gt;menu items&lt;/code&gt; e similares&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Você &lt;strong&gt;deve usar&lt;/strong&gt; &lt;code&gt;role=application&lt;/code&gt; se o conteúdo que está fornecendo consistir apenas em controles interativos focalizáveis e, principalmente, widgets avançados que emulam um aplicativo desktop real. Observe que, apesar de muitas coisas agora serem chamadas de aplicativo web, a maior parte do conteúdo com que esses aplicativos trabalham ainda são informações baseadas em documentos, sejam postagens e comentários de blogs, feeds e até mesmo acordeões que mostram e ocultam certos tipos de informação. Ainda lidamos principalmente com documentos na web, embora eles possam ter uma aparência semelhante a um desktop na superfície.&lt;/p&gt;

&lt;p&gt;Em resumo: as vezes que você realmente irá usar o &lt;code&gt;role=application&lt;/code&gt; serão &lt;strong&gt;muito raras&lt;/strong&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#onde-usar-o-raw-roleapplication-endraw-quando-ele-for-relevante"&gt;
  &lt;/a&gt;
  Onde usar o &lt;code&gt;role=application&lt;/code&gt; quando ele for relevante?
&lt;/h2&gt;

&lt;p&gt;Coloque-o no elemento contido mais próximo de seu widget, por exemplo, a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; superior a seu elemento.&lt;br&gt;
Como regra geral, se sua página consiste em mais de 90 ou 95% de widgets, &lt;code&gt;role=application&lt;/code&gt; &lt;em&gt;pode ser&lt;/em&gt; apropriado. Mesmo assim, verifique se realmente é o caso. &lt;strong&gt;Jamais&lt;/strong&gt; use &lt;code&gt;role=application&lt;/code&gt; em um elemento amplamente contido, como o &lt;code&gt;body&lt;/code&gt;, se sua página consistir principalmente em widgets tradicionais ou elementos de página, como links com os quais a pessoa usuária não precisa interagir no modo de foco. Isso causará enormes dores de cabeça para qualquer pessoa usuária de tecnologia assistiva.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fun%C3%A7%C3%B5es-e-propriedades-de-aria-n%C3%A3o-dispon%C3%ADveis-como-recursos-em-html"&gt;
  &lt;/a&gt;
  Funções e propriedades de ARIA não disponíveis como recursos em HTML
&lt;/h3&gt;

&lt;p&gt;Abaixo estão listadas as funções e propriedades ARIA não consideradas disponíveis nativamente em HTML. Claro que muitas funções e propriedades fornecidas pelo ARIA, que podem ser usadas para transmitir informações à pessoas usuárias, não estão disponíveis em HTML.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#aria-roles"&gt;
  &lt;/a&gt;
  ARIA Roles
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#alert"&gt;&lt;code&gt;alert&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#alertdialog"&gt;&lt;code&gt;alertdialog&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#application"&gt;&lt;code&gt;application&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#directory"&gt;&lt;code&gt;directory&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#document"&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#feed"&gt;&lt;code&gt;feed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#grid"&gt;&lt;code&gt;grid&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#gridcell"&gt;&lt;code&gt;gridcell&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#group"&gt;&lt;code&gt;group&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#log"&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#marquee"&gt;&lt;code&gt;marquee&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#menu"&gt;&lt;code&gt;menu&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#menubar"&gt;&lt;code&gt;menubar&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#menuitemcheckbox"&gt;&lt;code&gt;menuitemcheckbox&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#menuitemradio"&gt;&lt;code&gt;menuitemradio&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#none"&gt;&lt;code&gt;none&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#note"&gt;&lt;code&gt;note&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#presentation"&gt;&lt;code&gt;presentation&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#scrollbar"&gt;&lt;code&gt;scrollbar&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#search"&gt;&lt;code&gt;search&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#status"&gt;&lt;code&gt;status&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#switch"&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tab"&gt;&lt;code&gt;tab&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tablist"&gt;&lt;code&gt;tablist&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tabpanel"&gt;&lt;code&gt;tabpanel&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#timer"&gt;&lt;code&gt;timer&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#toolbar"&gt;&lt;code&gt;toolbar&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tooltip"&gt;&lt;code&gt;tooltip&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#tree"&gt;&lt;code&gt;tree&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#treegrid"&gt;&lt;code&gt;treegrid&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#treeitem"&gt;&lt;code&gt;treeitem&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#estados-e-propriedades-aria-atributos-aria"&gt;
  &lt;/a&gt;
  Estados e propriedades ARIA (atributos aria-*)
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-activedescendant"&gt;&lt;code&gt;aria-activedescendant&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-atomic"&gt;&lt;code&gt;aria-atomic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-busy"&gt;&lt;code&gt;aria-busy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-controls"&gt;&lt;code&gt;aria-controls&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-describedby"&gt;&lt;code&gt;aria-describedby&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-dropeffect"&gt;&lt;code&gt;aria-dropeffect&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-expanded"&gt;&lt;code&gt;aria-expanded&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-flowto"&gt;&lt;code&gt;aria-flowto&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-grabbed"&gt;&lt;code&gt;aria-grabbed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-haspopup"&gt;&lt;code&gt;aria-haspopup&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-hidden"&gt;&lt;code&gt;aria-hidden&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-label"&gt;&lt;code&gt;aria-label&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby"&gt;&lt;code&gt;aria-labelledby&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-level"&gt;&lt;code&gt;aria-level&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-live"&gt;&lt;code&gt;aria-live&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-orientation"&gt;&lt;code&gt;aria-orientation&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-owns"&gt;&lt;code&gt;aria-owns&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-posinset"&gt;&lt;code&gt;aria-posinset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-pressed"&gt;&lt;code&gt;aria-pressed&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-relevant"&gt;&lt;code&gt;aria-relevant&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-setsize"&gt;&lt;code&gt;aria-setsize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/#aria-sort"&gt;&lt;code&gt;aria-sort&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#refer%C3%AAncias"&gt;
  &lt;/a&gt;
  Referências
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/WAI/"&gt;Iniciativa de Acessibilidade Web (WAI) do W3C&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/TR/wai-aria-1.1/"&gt;Accessible Rich Internet Applications (WAI-ARIA) 1.1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.w3.org/TR/wai-aria-practices/"&gt;WAI-ARIA Authoring Practices 1.1&lt;/a&gt;&lt;/p&gt;

</description>
      <category>a11y</category>
    </item>
    <item>
      <title>Git Conflict resolution made simple</title>
      <author>José Muñoz</author>
      <pubDate>Sat, 03 Jul 2021 19:58:37 +0000</pubDate>
      <link>https://dev.to/jdmg94/git-conflict-resolution-made-simple-1jac</link>
      <guid>https://dev.to/jdmg94/git-conflict-resolution-made-simple-1jac</guid>
      <description>&lt;p&gt;Have you ever tried to merge a Pull Request and it seems to have a conflict on file that you changed intentionally?&lt;/p&gt;

&lt;p&gt;When it comes to conflict resolution, it can be a painful experience sometimes, even when you all you’re doing is accepting the incoming changes.&lt;/p&gt;

&lt;p&gt;Git can be intimidating sometimes, and most people tend to prefer a GUI to manage their versioning and source control. But sometimes using the CLI can be the better option.&lt;/p&gt;

&lt;p&gt;I’m the kind of weird that likes to do things on the CLI when possible, so I have a small life-hack that has saved me so much time during conflict resolution.&lt;/p&gt;

&lt;p&gt;In this example we are going to imagine we are trying to make a PR from &lt;code&gt;development&lt;/code&gt; to &lt;code&gt;staging&lt;/code&gt;, once you’ve created the PR you notice there is a few conflicts and the PR can’t be merged right away. Don’t panic, we can fix this with the power of the CLI! &lt;/p&gt;

&lt;p&gt;Make sure you have the latest version of your destination branch (in this case &lt;code&gt;staging&lt;/code&gt;) checked out on your local environment.&lt;/p&gt;

&lt;p&gt;Go to your source branch (in this case its &lt;code&gt;development&lt;/code&gt;) and run: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;git pull origin staging —strategy ours&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will accept the history of the source branch over the destination branch and resolve the conflicting files  for you. Now you can safely push the resolution to your remote and the PR you submitted should now be mergeable.&lt;/p&gt;

&lt;p&gt;The CLI can be an intimidating place, but sometimes it can be the fastest way to achieve a task. Merge strategies are one of the most powerful options you can use from the git source control system, and there’s many more strategies that allow you to get even more flexibility from these options, I’ll leave a couple of links below where you can learn more about git merge strategies, thanks for reading!&lt;/p&gt;

&lt;p&gt;Links: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/docs/merge-strategies"&gt;https://git-scm.com/docs/merge-strategies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/git/tutorials/using-branches/merge-strategy"&gt;https://www.atlassian.com/git/tutorials/using-branches/merge-strategy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>productivity</category>
      <category>lifehack</category>
    </item>
    <item>
      <title>Vue Academy #1: Scoped style</title>
      <author>CodeOzz</author>
      <pubDate>Sat, 03 Jul 2021 18:35:09 +0000</pubDate>
      <link>https://dev.to/codeozz/vue-academy-1-scoped-style-5g0e</link>
      <guid>https://dev.to/codeozz/vue-academy-1-scoped-style-5g0e</guid>
      <description>&lt;p&gt;Welcome to the first vue academy ! It will be a list of lot of article on vue! I have 2.5 years of experience in this and I can teach a few thing about this ! &lt;/p&gt;

&lt;p&gt;For this course we will focus on &lt;code&gt;scoped&lt;/code&gt; attribute in CSS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-quick-example-"&gt;
  &lt;/a&gt;
  A quick example :
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nc"&gt;.toto&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'toto'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Hi &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#why-its-bad"&gt;
  &lt;/a&gt;
  Why it's bad
&lt;/h3&gt;

&lt;p&gt;It will work but your class can be used in any other component. So if you change &lt;code&gt;toto&lt;/code&gt; class, it can impact other component style (&lt;code&gt;side effect&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;If you want to declare general class, you should create a properly file for this.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;

&lt;p&gt;The solution to create a class that can be used by only one component is the attribute &lt;code&gt;scoped&lt;/code&gt; in &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt; &lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nc"&gt;.toto&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;CSS will be applied to the elements of the current component &lt;code&gt;only&lt;/code&gt;. This is similar to the style encapsulation found in &lt;code&gt;Shadow DOM&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-its-work-in-deep"&gt;
  &lt;/a&gt;
  How it's work in deep
&lt;/h3&gt;

&lt;p&gt;When you will compile your code, the code above will be equal to&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nc"&gt;.toto&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;data-v-f3f3eg9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'toto'&lt;/span&gt; &lt;span class="na"&gt;data-v-f3f3eg9&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Hi &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;As you can see it's very simple &amp;amp; basic but very strong. Vue will &lt;strong&gt;inject&lt;/strong&gt; an attribute on the &lt;code&gt;scoped class&lt;/code&gt; and apply this attribute on each element that include the &lt;code&gt;scoped class&lt;/code&gt; !.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>Why I switched from VsCode to WebStorm</title>
      <author>Daniel Castro</author>
      <pubDate>Sat, 03 Jul 2021 18:12:39 +0000</pubDate>
      <link>https://dev.to/dcastro/why-i-switched-from-vscode-to-webstorm-36dh</link>
      <guid>https://dev.to/dcastro/why-i-switched-from-vscode-to-webstorm-36dh</guid>
      <description>&lt;p&gt;I want to start saying that I'm not trying to claim that WebStorm is better than VsCode and it is because I think that someone can feel more comfortable in VsCode rather than WebStorm or even in another tool, like Vim, Sublime Text, whatever. I just want to share with you why I decided to move to WebStorm and why I'm still using it and maybe you could consider using it too!.&lt;/p&gt;

&lt;p&gt;The first reason why I decided to start using WebStorm is because I changed my computer, and as a developer with a lot of work I needed to start coding as fast as I could, so I downloaded VsCode because that was the editor which I used to use, then I realised that I did not have all my plugins that I had in my previous computer (obviously) and I did not even remember their names, it was very frustrating. After 1 hour trying to set up my VsCode environment I remembered that I wanted to test WebStorm so I thought this was the perfect moment.&lt;/p&gt;

&lt;p&gt;I downloaded it and I launched it. The first thing that I saw was that beautiful Darcula theme that I love so much, I actually had tried to find something similar for VsCode but I had not found anything so beautiful. Well, I know, if you are reading this you are looking for some reasons more interesting than a theme, I just wanted to say that I love this theme for coding &amp;lt;3.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#todo-comments"&gt;
  &lt;/a&gt;
  TODO comments
&lt;/h3&gt;

&lt;p&gt;When I opened my codebase in WebStorm is I was able to see my TODO comments highlighted, I remember that in VsCode I had to install a plugin in order to get this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ERES3Yq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd1fgd8elz0xcbqe4mrc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ERES3Yq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kd1fgd8elz0xcbqe4mrc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#auto-import"&gt;
  &lt;/a&gt;
  Auto Import
&lt;/h3&gt;

&lt;p&gt;This is really amazing and I know VsCode has something similar but I'm 100% sure that it is not as accurate as this. I usually copy/paste code between files and it is very common that in my copied code I have some dependencies, it was truly good when I pasted my code and WebStorm automatically found all dependencies and included them at the top of my file. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git-integration"&gt;
  &lt;/a&gt;
  Git Integration
&lt;/h3&gt;

&lt;p&gt;After coding some hours I got my first conflict in some of my files and it was really surprising when I came across a friendly interface where I was able to resolve conflicts easily. I can leave you some screenshots here but you will have to test it by yourself to notice that it is very good.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#debugger"&gt;
  &lt;/a&gt;
  Debugger
&lt;/h3&gt;

&lt;p&gt;This is my WebStorm favorite thing. As a Full Stack Developer I have to code in both React and NodeJS. I think the best friend that a programmer can have is a great debugger, whether you are working in frontend or backend you will need a way to find errors easily. The WebStorm debugger is really useful. You can set it up fast and start using it. You can set breakpoints on your code and see all your variable values in a good interface. This is useful for both Frontend and Backend but if you are a Backend developer you will love this at the very beginning. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#refactor"&gt;
  &lt;/a&gt;
  Refactor
&lt;/h3&gt;

&lt;p&gt;Doing refactor is not a headache anymore if you have WebStorm. If you have been coding for a while I'm sure you have found yourself renaming a variable in your code, this can be really annoying but in WebStorm it is really easy, you just have to go to Refactor -&amp;gt; Rename and it will rename your variable in all the places you're using it and the most important thing is that it won't open all the files where you're using it like VsCode does. It is just an example of the Refactor feature.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;These are just some of the things that I like about WebStorm. I wanted to keep this article short and just share with you my experience of using WebStorm. I almost forgot to say that WebStorm is not a Text Editor, it is a JavaScript IDE and if you decide to use it you will probably notice an increment in your RAM memory use.&lt;/p&gt;

&lt;p&gt;Let me know in the comments section if you have already used WebStorm and what your experience has been. I will be waiting for your opinion.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>performance</category>
      <category>programming</category>
    </item>
    <item>
      <title>Containment, Specialization and Inheritance in React-Native/React</title>
      <author>Shivam Gupta</author>
      <pubDate>Sat, 03 Jul 2021 17:37:00 +0000</pubDate>
      <link>https://dev.to/shivambmgupta/containment-specialization-and-inheritance-in-react-native-react-dlo</link>
      <guid>https://dev.to/shivambmgupta/containment-specialization-and-inheritance-in-react-native-react-dlo</guid>
      <description>&lt;p&gt;In this blog, I’m going to talk about Containment, Specialization and Inheritance in React-Native/React, the difference between them and how you can use them to reuse your code.&lt;/p&gt;

&lt;p&gt;First, while the examples shown below are related to react-native, the theory is also applicable to react. The concepts might help you to go DRY. Let’s discuss these points one by one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#containment"&gt;
  &lt;/a&gt;
  Containment
&lt;/h2&gt;

&lt;p&gt;When you wrap your component(s) within a higher-order component, it’s a containment. Some components don’t know their children ahead of time. Some common cases are Sidebar, Dialog. And for the sake of reusability, some components better be generic.&lt;/p&gt;

&lt;p&gt;The following problem can make this clear:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-statement"&gt;
  &lt;/a&gt;
  Problem Statement:
&lt;/h3&gt;

&lt;p&gt;We have a table of n rows and two columns. The columns can hold not just the text but any other JSX component (Button, Image, Icon) too. &lt;strong&gt;However, it’s is known that it’s going to be a text for 80% of the time&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution:
&lt;/h3&gt;

&lt;p&gt;React containment model can be useful in these cases.&lt;br&gt;
The idea is to create a wrapper — GenericRow that can hold any JSX component. Furthermore, we can create a CustomRow for Text component only. This is also called Specialization. Yes, I know that I’ve been talking a lot, so let me write the code for you:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* Generic Row that doesn’t know about its children */&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GenericRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="cm"&gt;/* Left column or Left child */&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;column&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
   &lt;span class="cm"&gt;/* Right column or Right child */&lt;/span&gt;    
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;column&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/View&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * Specialization of our Generic Row
 * This component is going to be used when it’s known that left and right are texts
 **/&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CustomRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Generic&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="cm"&gt;/* Left child */&lt;/span&gt;
   &lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&amp;gt; &lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;   &lt;span class="cm"&gt;/* Right Child */&lt;/span&gt;
   &lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&amp;gt; &lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/* Child of CustomRow | First Row */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;NameRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CustomRow&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Developer’s Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shivam Gupta&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/* Second Row for the age */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AgeRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CustomRow&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Age&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;22&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/* Action: Connect | Third row */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ConnectActionRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="cm"&gt;/* Notice Generic Row not a CustomRow! */&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;GenericRow&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Connect&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&amp;gt; } right = {&amp;lt;Button title="Hit me!" /&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, CustomRow is a specialization of the GenericRow which is going to be used frequently as per the problem statement. Notice that the ConnectActionRow component is contained by the GenericRow and not by the CustomRow, unlike the NameRow and AgeRow.&lt;/p&gt;

&lt;p&gt;Just using concepts of containment, we have the code which is easier to read, debug and maintain.&lt;/p&gt;

&lt;p&gt;Now let’s talk about specialization.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#specialization"&gt;
  &lt;/a&gt;
  Specialization:
&lt;/h2&gt;

&lt;p&gt;Sometimes a component is a special case of the other component. For example, Error Text (traditionally, bold and red) is a special case of Text.&lt;/p&gt;

&lt;p&gt;The following problem will help you understand this better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-statement"&gt;
  &lt;/a&gt;
  Problem Statement:
&lt;/h3&gt;

&lt;p&gt;You’re creating a medium-sized non-trivial react-native application that is going to have 20 screens. You require to prompt the danger text (for validation error) on at least 7 to 8 screens.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution:
&lt;/h3&gt;

&lt;p&gt;You’ll create a separate component for it. Of course! Any sane developer would do that. If that’s the case you already know about Specialization. For beginners, let me just write a code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fontFamily&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="cm"&gt;/* User may overwrite the color, or fontWeight using his own style. */&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt; 
      &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bold&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; 
         &lt;span class="cm"&gt;/* Notice this written after the our style, letting user to overwrite color and fontWeight. */&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;]}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, the idea for this implementation is to use the DRY principle and at the same time allow the user of this component to overwrite our default stying whenever the developer wants.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#inheritance"&gt;
  &lt;/a&gt;
  Inheritance
&lt;/h2&gt;

&lt;p&gt;React neither prefers nor does provide anything much for inheritance. Most of the time, you’re not going to need it. Whatever you could do using inheritance, you can achieve the same using Containment or Specialization. The following is the statement from the react’s official documentation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“At Facebook, we use React in thousands of components, and we haven’t found any use cases where we would recommend creating component inheritance hierarchies.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#difference-between-containment-specialization-and-inheritance"&gt;
  &lt;/a&gt;
  Difference between Containment, Specialization and Inheritance
&lt;/h2&gt;

&lt;p&gt;While Containment, Speicializtion and Inheritance may sound similar but they are very different. The following may help you understand it.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The table CONTAINS/HAS rows.
   &lt;em&gt;Neither table is a specialization of rows, nor it’s an inheritance.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Pulsar IS a Bike.
   &lt;em&gt;Neither this is an example of containment nor specialization.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Welcome Dialog is a special case of Dialog.
   &lt;em&gt;Neither this is an example of containment nor inheritance.&lt;/em&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The difference between containment and inheritance is of IS/HAS relationship.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The main objective of the containment and specialization concept is to follow the DRY (Don’t Repeat Yourself) principle. Because redundant code is hard to maintain, harder to debug and using these concepts will make your code maintainable and less error-prone.&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>react</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to install popular Linux distros</title>
      <author>Florencia Gonzalez</author>
      <pubDate>Sat, 03 Jul 2021 17:27:06 +0000</pubDate>
      <link>https://dev.to/rightonhana/how-to-install-popular-linux-distros-c05</link>
      <guid>https://dev.to/rightonhana/how-to-install-popular-linux-distros-c05</guid>
      <description>&lt;p&gt;Probably there are hundred or thousands of articles on how to install Linux but I made this mainly for myself, but maybe you find it useful too.&lt;/p&gt;

&lt;p&gt;I will show you how to do it in 5 simple steps. The steps are almost the same for every popular distro.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-download-a-program-to-create-a-bootable-usb-drive"&gt;
  &lt;/a&gt;
  Step 1 : Download a program to create a bootable USB drive
&lt;/h2&gt;

&lt;p&gt;First of all you will need a pendrive. Without one we can't do so much... &lt;/p&gt;

&lt;p&gt;Download a program to create bootable USB drive. There are many programs for that, here are some of them: &lt;a href="https://unetbootin.github.io/"&gt;UNetbootin&lt;/a&gt;, &lt;a href="https://rufus.ie/en_US/"&gt;Rufus&lt;/a&gt;, &lt;a href="https://www.etcher.net/"&gt;Etcher&lt;/a&gt;, &lt;a href="https://www.linuxliveusb.com/"&gt;Linux Live USB Creator&lt;/a&gt; and there are many more.&lt;/p&gt;

&lt;p&gt;Not all of them are for all Operating Systems so you will need to check if they are available for your OS. For example, UNetbootin if for Windows, Linux or Mac OS but Rufus is only for Windows.&lt;/p&gt;

&lt;p&gt;Once you picked the program you like, download it and install it in your Operating System.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-download-the-linux-iso"&gt;
  &lt;/a&gt;
  Step 2 : Download the Linux .iso
&lt;/h2&gt;

&lt;p&gt;There are several Linux distros you can install. The most popular is &lt;a href="https://ubuntu.com/"&gt;Ubuntu&lt;/a&gt; and is the one I recommend to install if it is your first time. You can check all the Linux distros &lt;a href="https://upload.wikimedia.org/wikipedia/commons/8/8c/Linux_Distribution_Timeline_Dec._2020.svg"&gt;here&lt;/a&gt; (there are a lot of them as you can see 😂).&lt;/p&gt;

&lt;p&gt;Once you picked the distro you want, go to their website and download the .iso file. Here is the Ubuntu download &lt;a href="https://ubuntu.com/download/desktop"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the case of Ubuntu, you can choose between the LTS (long-term support) version or the latest one. I personally always choose the latest one but you can install the version you want.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-create-the-bootable-usb-drive"&gt;
  &lt;/a&gt;
  Step 3 : Create the bootable USB drive
&lt;/h2&gt;

&lt;p&gt;Plug in the pendrive and open the program you installed in Step 1.&lt;/p&gt;

&lt;p&gt;Load the .iso file to the program, select the pendrive to install the Linux image and click in the confirm button.&lt;/p&gt;

&lt;p&gt;Now you just need to wait until the program finished doing its magic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-configurate-the-boot-order"&gt;
  &lt;/a&gt;
  Step 4 : Configurate the Boot order
&lt;/h2&gt;

&lt;p&gt;Without removing your pendrive, reboot your PC and go to the BIOS/UEFI.&lt;/p&gt;

&lt;p&gt;Depending on the PC you can access the BIOS by clicking F2, fn + F2, or delete just before it starting booting/loading your Operating System. If you are not sure which key you need to press to access the BIOS on your computer, you can google it (for example, "how to get into MSI BIOS").&lt;/p&gt;

&lt;p&gt;Once you are on the BIOS you will need to fix the boot order priorities. The "USB" option should be the first one.&lt;br&gt;
The BIOS are different so if you have some issues changing the configuration of the boot order, you always can google how to do it with your specific computer ("How I change the boot order priority in MSI").&lt;/p&gt;

&lt;p&gt;Normally on the BIOS you will have a "cheatsheet" on how to move in there and how change settings, for example:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HXuvPn3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/3MiqAIQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HXuvPn3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/3MiqAIQ.png" alt="BIOS cheatsheet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, save and exit from the BIOS and do not remove the pendrive for the next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5-install-linux"&gt;
  &lt;/a&gt;
  Step 5 : Install Linux
&lt;/h2&gt;

&lt;p&gt;This step will vary depending on the Linux distro you choose on Step 2.&lt;/p&gt;

&lt;p&gt;When you exit the BIOS, the PC will restart and you will see a simple Command interface who will guide you on the installation.&lt;/p&gt;

&lt;p&gt;And done!! You now have Linux installed on your PC! 🎉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus!
&lt;/h2&gt;

&lt;p&gt;I normally install Linux in a partition on my PC and I always have the problem that Windows boots before Linux. &lt;/p&gt;

&lt;p&gt;To change the booting order, you should reboot your PC and go to the BIOS. Once you are in the BIOS, Change the booting priority so that Linux is the first one.&lt;/p&gt;

&lt;p&gt;Again, if you have any problem changing the boot priority I recommend how to do it with your specific computer.&lt;/p&gt;

&lt;p&gt;Now your PC will boot with Linux as default 🎉&lt;/p&gt;

&lt;p&gt;Thanks for checking out this article! Hope you find it useful!&lt;/p&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
      <category>opensource</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
