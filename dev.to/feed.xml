<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Clean Loading Animation</title>
      <author>Jatin Sharma</author>
      <pubDate>Thu, 02 Dec 2021 10:24:28 +0000</pubDate>
      <link>https://dev.to/j471n/clean-loading-animation-4cl9</link>
      <guid>https://dev.to/j471n/clean-loading-animation-4cl9</guid>
      <description>&lt;p&gt;In this article, we are going to build another loading animation with pure CSS. First, let's look at what are we building -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RPDCe5tR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/npSZAhG.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RPDCe5tR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/npSZAhG.gif" alt="preview" width="433" height="266"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's look at the code now - &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"loading_container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"loading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;loading...&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have the main &lt;code&gt;div&lt;/code&gt; with class &lt;code&gt;loading_container&lt;/code&gt; and it has two children &lt;code&gt;loading&lt;/code&gt; and &lt;code&gt;h3&lt;/code&gt;. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;loading&lt;/code&gt; - It is the main loader for this animation&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;h3&lt;/code&gt; : it is the text which you can see in the preview&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Outer Loading Container */&lt;/span&gt;
&lt;span class="nc"&gt;.loading_container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Loader */&lt;/span&gt;
&lt;span class="nc"&gt;.loading&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3rem&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;animate&lt;/span&gt; &lt;span class="m"&gt;2s&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Animation */&lt;/span&gt;
&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;animate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;360deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* loading text */&lt;/span&gt;
&lt;span class="nc"&gt;.loading_container&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;h3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#codepen"&gt;
  &lt;/a&gt;
  Codepen
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/j471n/embed/gOWbjam?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;See the Pen &lt;a href="https://codepen.io/j471n/pen/gOWbjam"&gt; loading-animation-#3&lt;/a&gt; by Jatin (&lt;a href="https://codepen.io/j471n"&gt;@j471n&lt;/a&gt;) on &lt;a href="https://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So after that you can use it anywhere in your project. And let me know what do you think about it. If you like it then consider a follow.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can now extend your support by buying me a Coffee.😊👇&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/j471n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee" width="545" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#also-read"&gt;
  &lt;/a&gt;
  Also Read
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/curved-css-timeline-5ab3"&gt;Curved Timeline in CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/how-to-use-web-storage-api-3o28"&gt;How to use Web Storage API? &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/10-css-resources-that-you-should-bookmark-46l6"&gt;10 CSS Resources that you should bookmark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Bug or a simple error happened in dev.to </title>
      <author>aykacode</author>
      <pubDate>Thu, 02 Dec 2021 09:58:44 +0000</pubDate>
      <link>https://dev.to/aykacode/bug-or-a-simple-error-happened-in-devto-1njf</link>
      <guid>https://dev.to/aykacode/bug-or-a-simple-error-happened-in-devto-1njf</guid>
      <description>&lt;p&gt;Hi, I visited dev.to today and i found this in the home page, it can be some css styling issues but I'm bored right now so here you go:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wNDyvTr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wx7xazjoq1vf4jublf5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wNDyvTr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wx7xazjoq1vf4jublf5.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
tell me if i have to delete this post.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>I wrote a book 📖, and here is how</title>
      <author>Yaser Adel Mehraban </author>
      <pubDate>Thu, 02 Dec 2021 09:50:29 +0000</pubDate>
      <link>https://dev.to/yashints/i-wrote-a-book-and-here-is-how-9ch</link>
      <guid>https://dev.to/yashints/i-wrote-a-book-and-here-is-how-9ch</guid>
      <description>&lt;p&gt;I've contributed to the development community in many ways, be it speaking at conferences, writing technical blog posts, getting involved in conferences as volunteer or part of the crew, or helping with Hackatons and Open Hacks. However, writing a book has been in my todo list for quite a while, and honestly, I've been afraid to start due to various reasons, mainly because I heard how much time and energy you need to put into it.&lt;/p&gt;

&lt;p&gt;Regardless, I set it as a goal in 2021 and after a few months working on it, voila, &lt;a href="https://www.amazon.com/author/yas"&gt;it's now listed on Amazon&lt;/a&gt; to be published early next year. I am so excited about it and thought to share my experience and how I reached this milestone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-would-you-want-to-write-a-book"&gt;
  &lt;/a&gt;
  Why would you want to write a book?
&lt;/h2&gt;

&lt;p&gt;Writing a book might seem like a far fetched goal, in fact there are many smart and talented people out there writing great technical books on various topics which become best sellers. So you might be asking yourself why would I even think about it.&lt;/p&gt;

&lt;p&gt;However, before we go further let me tell you a few things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Anyone can learn to write a book, and I mean anyone!&lt;/li&gt;
&lt;li&gt;If you like writing technical content, be it blog posts or even documentation, you can pull this off easier than you think.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let's go back to why you should write a book. I would share my own reasons, but you might find them relatable too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sharing-your-knowledge-with-others"&gt;
  &lt;/a&gt;
  Sharing your knowledge with others
&lt;/h3&gt;

&lt;p&gt;You might be good in a subject and have worked with it for a long time. You might even not have worked with it but be very passionate about it and wanted to share what you learn with others to help them succeed. For this exact reason, I believe it's important to think about writing a book if you have enough in your mind to make it work.&lt;/p&gt;

&lt;p&gt;I have read books before and they have helped me reach where I am because I've always progressed as a self-thought individual rather than being academic or even as a trainee. So it was important for me to give it back somehow and finally it happened, think about it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-would-add-to-your-credit-professionally"&gt;
  &lt;/a&gt;
  It would add to your credit professionally
&lt;/h3&gt;

&lt;p&gt;From a professional perspective, writing a book will add to your creditability and establish you as an expert in that field. Who knows, it might also help you land a great job, think about your interviewer when you tell them you have a book on the subject and how positively it can affect the process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ticking-a-box-accomplishing-a-new-goal"&gt;
  &lt;/a&gt;
  Ticking a box, accomplishing a new goal
&lt;/h3&gt;

&lt;p&gt;If you have a todo list and have some goals for yourself, why not put writing a book in there too. Think about how accomplished you feel when you actually do it. You will tackle a new challenge and prove to yourself that nothing is impossible if you put your energy into it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-will-learn-a-lot"&gt;
  &lt;/a&gt;
  You will learn a lot
&lt;/h3&gt;

&lt;p&gt;Writing a book can help you learn a lot in a specific subject. When you are writing a book, it becomes important that you validate your knowledge and back everything with facts and data. During this process you will learn new things in every step of the way and that to me is worth all the time and energy you put into it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-might-make-money"&gt;
  &lt;/a&gt;
  You might make money
&lt;/h3&gt;

&lt;p&gt;Not every goal is about money, but if you can make a few extra bucks publishing your book, why not. You have put your time on it and getting rewards in form of a currency (😎) can be very helpful to anybody.&lt;/p&gt;

&lt;p&gt;Now that I mentioned my reasons, think about what else and let me know, I am keen to hear yours too. Enough about reasons, let's talk about the process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-how"&gt;
  &lt;/a&gt;
  The &lt;u&gt;HOW&lt;/u&gt;
&lt;/h2&gt;

&lt;p&gt;It is no secret that writing a book requires discipline and good time management. But let me tell you it needs a little bit more than that, in my case anyway. You might have to put extra effort or be a bit more proficient than me, so take this with a grain of salt.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#finding-a-topic"&gt;
  &lt;/a&gt;
  Finding a topic
&lt;/h3&gt;

&lt;p&gt;First thing you need to do is to find a topic, but you can't find any topic. You need to find something that you're good at it, and you really believe it's important to share it with others. In my case &lt;a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/bicep/overview"&gt;Azure Bicep&lt;/a&gt; is a new tool, there are not many books written on it, and I am really passionate about how it can help people achieve more by doing less.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to publish your book, you also need to find a topic where there are not many books available by other writers on it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#form-an-outline"&gt;
  &lt;/a&gt;
  Form an outline
&lt;/h3&gt;

&lt;p&gt;It's important to have an outline to be able to tell a story. Yes, you heard me right, even a technical book needs a story if you want it to be effective. You need a &lt;em&gt;beginning&lt;/em&gt;, &lt;em&gt;middle&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; which takes your readers on a journey. Start with simples, then move to advanced areas and then finish off by some best practices or something that compliments your points and helps them a few extra steps.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#read-it-yourself"&gt;
  &lt;/a&gt;
  Read it yourself
&lt;/h3&gt;

&lt;p&gt;I can't emphasis enough how important it is to read what you write first. If you feel you're biased, get somebody else to read it and give you feedback. Sometimes we don't realise how we fall into trap of making assumptions and the book turns out to be useless because of that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-a-schedule"&gt;
  &lt;/a&gt;
  Set a schedule
&lt;/h3&gt;

&lt;p&gt;If you are a full time employee like me, you need to set a schedule for yourself and make it a habit. Lock it in your calendar and make sure it's a time with minimal disruptions. I used one hour every night from 10pm to 11pm when my kids were in bed and I had already finished my dad duties. But I kept it like that for 4 months until I finished the book and boy that helps.&lt;/p&gt;

&lt;p&gt;If that doesn't work for you, you can set a goal for how many words need to write each day, week, months, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-writing-tools"&gt;
  &lt;/a&gt;
  Use writing tools
&lt;/h3&gt;

&lt;p&gt;Books are different that blog posts in a sense that they need to be credible. Having grammar errors or spelling mistakes will look really bad, so use a software which helps you proofread your writing.&lt;/p&gt;

&lt;p&gt;And that's all I did to be able to be here writing this post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finishing-touches"&gt;
  &lt;/a&gt;
  Finishing touches
&lt;/h2&gt;

&lt;p&gt;It can become a really hard job even from start, so keep yourself motivated. If you face any setbacks or challenges, try to positively face them and work your way around solving those slowly and steadily.&lt;/p&gt;

&lt;p&gt;Reward yourself, give yourself a little treat at the end of every chapter, or section. This definitely helped me, so it will probably help you too.&lt;/p&gt;

&lt;p&gt;I hope this has motivated you to at list think about the possibility of wiring a book. Anyway, I didn't talk about the book itself, so read on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-my-book"&gt;
  &lt;/a&gt;
  About my book
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/B09MFY582M/ref=dbs_a_def_rwt_bibl_vppi_i0"&gt;Infrastructure as code with Azure Bicep&lt;/a&gt; is a book which takes you on a journey from what Azure Bicep is, to how it works and its syntax. Then you learn about all the bits and pieces to be able to write maintainable, reusable, modular templates to be able to deploy your resources into your Azure environment with confidence. It also covers the authoring experience and how amazing it is to work with it from Visual Studio Code and its extension. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/gp/product/B09MFY582M/ref=dbs_a_def_rwt_bibl_vppi_i0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--snMlC0Wo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gl5z8v2kav7at1qgrtfp.jpg" alt="Infrastructure as code with Azure Bicep" width="405" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then it covers how to use it in your CI/CD pipelines both on Azure DevOps and GitHub actions. And at last we will cover some advanced topics to add that extra bit of tidbits which makes you stand out when writing infrastructure as code such as some best practices and patterns when deploying multiple environments.&lt;/p&gt;

&lt;p&gt;So keep an eye out and support me and my book if you can 😍🙏🏽.&lt;/p&gt;

</description>
      <category>books</category>
      <category>azure</category>
      <category>bicep</category>
      <category>devops</category>
    </item>
    <item>
      <title>What, Why and How to Validate ? </title>
      <author>The Nerdy Dev</author>
      <pubDate>Thu, 02 Dec 2021 09:18:15 +0000</pubDate>
      <link>https://dev.to/thenerdydev/what-why-and-how-to-validate--5g85</link>
      <guid>https://dev.to/thenerdydev/what-why-and-how-to-validate--5g85</guid>
      <description>&lt;p&gt;Hey guys 👋🏻,&lt;br&gt;
In this article, let us learn about validation in case of application and learn about &lt;strong&gt;What, Why and How to Validate ?&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article was first published on&lt;/em&gt; &lt;a href="https://the-nerdy-dev.com/"&gt;https://the-nerdy-dev.com/&lt;/a&gt;.&lt;br&gt;
&lt;em&gt;Check the website for more interesting articles and tutorials on Web Development.&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-why-and-how-to-validate-"&gt;
  &lt;/a&gt;
  What, Why and How to Validate ?
&lt;/h1&gt;

&lt;p&gt;To ensure that the data that you work with is the data in correct format, you need validation for it. &lt;/p&gt;

&lt;p&gt;Let us answer these questiions : &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-should-we-use-validation-"&gt;
  &lt;/a&gt;
  Why should we use validation ?
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#why-would-you-add-data-validation-to-your-application-"&gt;
  &lt;/a&gt;
  Why would you add data validation to your application ?
&lt;/h2&gt;

&lt;p&gt;When we have a user interacting with our website we typically have forms in any web application that we build. The bigger your application is the more data you will need from your users at some point of time. So we have that form which the user of the website interacts with and in the end this form is submitted with the &lt;strong&gt;POST&lt;/strong&gt; request.&lt;/p&gt;

&lt;p&gt;Then a request to the backend is sent along with the form data. &lt;br&gt;
On our backend, we typically interact with the database using our server side logic or we may typically write our data into a file using the &lt;strong&gt;fs&lt;/strong&gt; core module of Node.js. But in the end we take that data we receive and want to store it. This is why the need for data validation and sanitization arises. &lt;/p&gt;

&lt;p&gt;If a user in our application would try to login with something that is not a &lt;em&gt;valid email address&lt;/em&gt;, we should not allow access to the user, so we should prevent the user from entering something incorrect and getting access for that. &lt;/p&gt;

&lt;p&gt;This is where we want validation to kick in. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-validate-and-provide-a-good-user-experience-"&gt;
  &lt;/a&gt;
  How to validate and provide a good user experience ?
&lt;/h2&gt;

&lt;p&gt;Obviously we got a user entering some data onto the form (Form Input) and let us say a Node.js application running on the server. We got a couple of places where we can validate, for example, we can validate on the client side of our application.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So right before any request hits the server, we can write some JavaScript, that for example checks the input at every keystroke and checks the input whilst the user is working on the form and then you can display an error right in the browser and this can greatly enhance the user experience on the client side for us.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This type of validation is totally &lt;strong&gt;optional&lt;/strong&gt; because the user can see that code, user can change the validation and user can disable the JavaScript in the browser.&lt;/p&gt;

&lt;p&gt;👉🏻This is not the protection that can secure you against incorrect data being sent to the server. This is not a secure solution it just is there to improve the user experience thing, so just to render proper error messages. &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#so"&gt;
  &lt;/a&gt;
  So,
&lt;/h1&gt;

&lt;p&gt;we will focus on &lt;strong&gt;Server Side Validation&lt;/strong&gt;. This is what we do with Node.js. This code can't be used by the user, the user cannot disable this validation code that we define on the server side because this happens on &lt;strong&gt;the server not in the browser&lt;/strong&gt; and this is the crucial part where we need to have validation to filter out incorrect values and this is what we will focus on.  This ensures that we work with valid data in our node application and if we do plan on storing it ultimately we do store correct data in our database. There is also built in validation which we can use in databases like Mongo. This can be last resort. If we have strong validation on the server side no invalid data will be able to reach the database because you already filtered the incorrect data in the server side validation. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Validation at database level is also optional.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;You must have to validate at server side at all means. If the validation fails, you must have to return an error message in user interface with helpful message and do not reload the page with the user input intact with the correct error message rendered in our user interface. This is because reloading offers a horrible experience to the end user and this would clear up all your form data and you would have to enter all the data again ! &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#example-discussion-on-validation-for-a-registration-page-"&gt;
  &lt;/a&gt;
  Example - Discussion on Validation for a Registration Page :
&lt;/h1&gt;

&lt;p&gt;Some common validations for validating the form controls of a registration page are these : &lt;/p&gt;

&lt;p&gt;✔ Check for the correctness of the mail. It is according to the format (must not be in bad format). It also must possess @ symbol&lt;br&gt;
✔ Password must be atleast 6 characters long. &lt;br&gt;
✔ Password and ConfirmPassword fields must match. &lt;/p&gt;

&lt;p&gt;etc. etc. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt; &lt;br&gt;
You are not just restricted to above validations, you could have other validations as well for your form controls. &lt;/p&gt;

&lt;p&gt;If you want to perform validation for your APIs that you have written using Express, you can make use of packages like &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Express Validator&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NAmE4_KQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6d4efwslq338iam49yxz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NAmE4_KQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6d4efwslq338iam49yxz.png" alt="Image description" width="880" height="373"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Though you could also make use of another npm package which is Joi for performing validation. &lt;br&gt;
&lt;strong&gt;2. Joi&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1tk1jBd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqso9w2bhd0sbv8kb5cf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1tk1jBd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqso9w2bhd0sbv8kb5cf.png" alt="Image description" width="880" height="469"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now typically we want to validate for &lt;strong&gt;NON-GET&lt;/strong&gt; requests because generally these are the cases in which the user will send some data to the server. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#sanitizing-user-input"&gt;
  &lt;/a&gt;
  Sanitizing user input
&lt;/h2&gt;

&lt;p&gt;We can ensure as an example that there is no extra whitespace in the string that is passed by the user on the left or on the right &lt;br&gt;
You can normalize the email that is converted to lowercase or things like that. There is a couple of things that you can ensure that the data you get back is valid but is also stored in the uniform way without any extra whitespace or anything like that. &lt;br&gt;
This is what we mean by &lt;strong&gt;Sanitization&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Sanitizing input is also that makes sense to be done. For sanitizing the email we can make use of the &lt;strong&gt;normalizeEmail&lt;/strong&gt; method that is available on &lt;strong&gt;express-validator&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MiPTEoa1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h8v3ymdh58i2jhvtltem.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MiPTEoa1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h8v3ymdh58i2jhvtltem.png" alt="Image description" width="487" height="326"&gt;&lt;/a&gt;&lt;br&gt;
Similarly, for sanitizing the password we can make use of the &lt;strong&gt;trim&lt;/strong&gt; method that is also provided to us by the &lt;strong&gt;express-validator&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Sanitizing data is important to ensure that your data is stored in the uniform format.&lt;/p&gt;

&lt;p&gt;So this is it for this article. Thanks for reading. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you enjoy my articles, consider following me on Twitter for more interesting stuff :&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xdzF7_iP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf9dc7pby59jmgkstw74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xdzF7_iP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf9dc7pby59jmgkstw74.png" alt="Image description" width="284" height="255"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;⚡Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't forget to leave a like if you loved the article. Also share it with your friends and colleagues.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" alt="Alt Text" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Apr 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Developing A Game Engine with Perl: Part 6 - A Colourful Telnet Server</title>
      <author>Shawn Holland</author>
      <pubDate>Thu, 02 Dec 2021 09:06:57 +0000</pubDate>
      <link>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-6-a-colourful-telnet-server-4i7g</link>
      <guid>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-6-a-colourful-telnet-server-4i7g</guid>
      <description>&lt;p&gt;&lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-2-mouse-input-43nj"&gt;I'll stop reminding you that...&lt;/a&gt; &lt;strong&gt;I DO NOT KNOW WHAT I AM DOING.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want to start reading from the beginning. Check out the &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-3b8"&gt;first article in this series&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-ansi-game-engine"&gt;
  &lt;/a&gt;
  What is ANSI Game Engine?
&lt;/h2&gt;

&lt;p&gt;Well, at it's core, &lt;a href="https://www.facebook.com/ANSIGameEngine"&gt;ANSI Game Engine&lt;/a&gt; is a very colourful and interactive telnet server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why telnet!?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I know, right!? I still ask myself the same question today, but at this point, I'm kinda committed. Initially, it all came down to my decision &lt;strong&gt;NOT&lt;/strong&gt; to code the client side. I looked into it, and it just wasn't something I wanted to do. And honestly, it seemed too far outside my comfort level with Perl. I feel much more comfortable, and interested in, working with server side code, as may be true for other Perl dev's out there. That's where &lt;a href="https://www.perl.org/"&gt;Perl&lt;/a&gt; is quite prolific. Since I was going with &lt;a href="https://en.wikipedia.org/wiki/ANSI_art"&gt;ANSI graphics&lt;/a&gt;, they are best known these days, for me at least, to be used in telnet/terminal clients and &lt;a href="https://en.wikipedia.org/wiki/Bulletin_board_system"&gt;BBS's&lt;/a&gt;, which are mainly telnet based now. This being said, it wasn't long searching google before I came across SyncTERM. &lt;a href="https://syncterm.bbsdev.net/"&gt;SyncTERM&lt;/a&gt; is, in my opinion, the best available choice for cross-platform rendering of ANSI graphics over telnet. I've tried many different clients, on Mac, Windows, and Linux. SyncTERM works the most consistent across these platforms, it's been around for a long time and is still actively being developed. So telnet it is!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Telnet.... Fork me...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The engine has to be multiplayer. Depending on the specific game requirements, this does not necessarily mean players interacting with each other, but at least having multiple players connected at the same time to the same server. This is a minimum initial requirement. To me, this is a great opportunity to work with &lt;a href="http://man.he.net/man2/fork"&gt;Fork&lt;/a&gt;. I really like the idea of creating multiple processes with fork that can interact with each other. This is an area I have little experience with and a great opportunity to learn.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Have you heard of Perl's CPAN?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are a Perl dev, obviously yes. If you code in another language, perhaps you've heard of it. &lt;a href="https://www.cpan.org/"&gt;Comprehensive Perl Archive Network&lt;/a&gt;, or CPAN, is Perl's repository of code modules. If you want to do something, chances are someone has already made a module for that. As of writing this article, CPAN currently has 208,034 Perl modules written by 14,179 authors. It's absolutely amazing!&lt;/p&gt;

&lt;p&gt;This is where I found the modules to develop a telnet server. A forking telnet server, can you believe it? Fork yah! Okokok.... I'll stop making that joke, I promise!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's get to coding!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first step was to get a telnet server that could accept multiple simultaneous connections. I read up on how to make a telnet server with Perl and from that reading I quickly learned about &lt;a href="https://metacpan.org/pod/IO::Socket::INET"&gt;IO::Socket::INET&lt;/a&gt;. It wasn't long after I had working code for a telnet server!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use strict;
use warnings;
use IO::Socket::INET;
print "\nBEGIN\n";

print "Setting up listen socket\n";
my $socket = new IO::Socket::INET (
    LocalHost =&amp;gt; '192.168.1.15',
    LocalPort =&amp;gt; '27777',
    Proto =&amp;gt; 'tcp',
    Listen =&amp;gt; SOMAXCONN,
    ReuseAddr =&amp;gt; 1
);

my $player_socket;
my $player_data;

print "Waiting for connection ...\n";
while(1) {

    next unless $player_socket = $socket-&amp;gt;accept();
    print "Incomming Connection!\n";

    my $player_address = $player_socket-&amp;gt;peerhost();
    my $player_port    = $player_socket-&amp;gt;peerport();

    my $response = "Player Connection Info: $player_address : $player_port. ";
    print "$response\n";

    $response .= "Press Any Key To Disconnect...\n";
    $player_socket-&amp;gt;send($response);

    print "Waiting for player to press a key and disconnect...\n";
    while ($player_socket-&amp;gt;connected()) {

        $player_socket-&amp;gt;recv($player_data, 1024);
        if ($player_data) {
            print "Player Disconnecting $player_address : $player_port\n";
            $socket-&amp;gt;close();
            print "Player Disconnected\n";
            last;
        }

    }
    last;
}
print "Good Bye!\n";
exit;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running this code and connecting with SyncTERM shows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;localhost:~ # perl telnet_server.pl 

BEGIN
Setting up listen socket
Waiting for connection ...
Incomming Connection!
Player Connection Info: 192.168.1.9 : 55414. 
Waiting for player to press a key and disconnect...
Player Disconnecting 192.168.1.9 : 55414
Player Disconnected
Good Bye!

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QEvJGtrE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/th0yb9l6o49xidryn1xg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QEvJGtrE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/th0yb9l6o49xidryn1xg.png" alt="Image description" width="880" height="692"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I read my &lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-4-uefi-vs-opensuse-installer-5e1c"&gt;Linux OpenSuSE&lt;/a&gt; server's man page for &lt;a href="https://man7.org/linux/man-pages/man2/listen.2.html"&gt;listen(2)&lt;/a&gt;, and the best I can understand is that the value for SOMAXCONN in  &lt;a href="https://perldoc.perl.org/IO::Socket#Listen"&gt;&lt;code&gt;Listen =&amp;gt; SOMAXCONN&lt;/code&gt;&lt;/a&gt; will allow me to have up to  4096 connections!? I think this is correct. It says the value can be found in &lt;code&gt;/proc/sys/net/core/somaxconn&lt;/code&gt; and doing a &lt;a href="https://man7.org/linux/man-pages/man1/cat.1.html"&gt;cat&lt;/a&gt; of that file shows 4096.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;localhost:~ # cat /proc/sys/net/core/somaxconn 
4096

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Now we just need to fork!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This process turned out to be a bit more difficult to understand (for me) and a few more lines of code then did the telnet portion. I'll pick up from here in the next article.&lt;/p&gt;

&lt;p&gt;Have you done any telnet programming before? If so, what modules have you found useful? (CPAN or otherwise)&lt;/p&gt;

&lt;p&gt;If you have any suggestions or comments please share constructively. Also please visit our social media pages for lots of fun videos and pictures showing the game engine in action. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/ANSIGameEngine/"&gt;ANSI Game Engine on Instagram&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.facebook.com/ANSIGameEngine"&gt;ANSI Game Engine on Facebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-5-32bit-64bit-perls-storable-5l8"&gt;Prev &amp;lt;&amp;lt; Part 5 - 32bit -&amp;gt; 64bit &amp;amp; Perl's Storable&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;Next &amp;gt;&amp;gt; Coming Soon&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cheers!&lt;br&gt;
Shawn&lt;/p&gt;

</description>
      <category>perl</category>
      <category>gamedev</category>
      <category>linux</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Monster 1.26.0 released</title>
      <author>Volker Schukai</author>
      <pubDate>Thu, 02 Dec 2021 09:05:41 +0000</pubDate>
      <link>https://dev.to/schukai/monster-1260-released-2o5</link>
      <guid>https://dev.to/schukai/monster-1260-released-2o5</guid>
      <description>&lt;p&gt;Today we released the latest edition of our Monster project. Monster is a collection of javascript classes that we need for daily work in &lt;a href="https://www.schukai.com/en/"&gt;our&lt;/a&gt; web projects.&lt;/p&gt;

&lt;p&gt;Besides small helper functions and classes, it also provides useful functions to enable reactive programming.&lt;/p&gt;

&lt;p&gt;Monster is available via jsdelivr and npm.&lt;/p&gt;

&lt;p&gt;Only the changes are described here. The full functionality can be found in the &lt;a href="https://monsterjs.org/en/doc/1.26.0/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#node"&gt;
  &lt;/a&gt;
  Node
&lt;/h2&gt;

&lt;p&gt;There is now a new &lt;code&gt;Node&lt;/code&gt; class. With it, trees, can be mapped.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; 
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://cdn.jsdelivr.net/npm/@schukai/monster@1.26.0/dist/modules/type/node.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ↦ hello!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#nodelist"&gt;
  &lt;/a&gt;
  NodeList
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;NodeList&lt;/code&gt; class extends the internal &lt;code&gt;Set&lt;/code&gt; class with a check for nodes, so that you can be sure that only nodes are in the set.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;NodeList&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; 
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://cdn.jsdelivr.net/npm/@schukai/monster@1.26.0/dist/modules/type/node.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;NodeList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ↦ Error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#noderecursiveiterator"&gt;
  &lt;/a&gt;
  NodeRecursiveIterator
&lt;/h2&gt;

&lt;p&gt;This new class implements a recursive iterator. This allows all nodes of the tree to be looped through.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;NodeRecursiveIterator&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; 
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://cdn.jsdelivr.net/npm/@schukai/monster@1.26.0/dist/modules/type/noderecursiveiterator.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;span class="c1"&gt;// ├ 2.1&lt;/span&gt;
&lt;span class="c1"&gt;// ├ 2.2&lt;/span&gt;
&lt;span class="c1"&gt;// └ 2.3&lt;/span&gt;
&lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;span class="c1"&gt;// 4&lt;/span&gt;
&lt;span class="c1"&gt;// ├ 4.1&lt;/span&gt;
&lt;span class="c1"&gt;// └ 4.2&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2.1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2.2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2.3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;4.1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;4.2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;iterator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;NodeRecursiveIterator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="c1"&gt;// here we are now running through the tree structure&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// ↦ ['1', '2', '2.1', '2.2', '2.3', '3', '4', '4.1', '4.2']&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#buildtree-function"&gt;
  &lt;/a&gt;
  buildTree Function
&lt;/h2&gt;

&lt;p&gt;This function brings everything together. Based on the function &lt;code&gt;buildMap&lt;/code&gt; this function creates a NodeList which contains all values from a dataset.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;buildTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;parentID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;subject&lt;/code&gt; is the dataset that came from a REST API, for example. The &lt;code&gt;selector&lt;/code&gt; is used to select the desired entries. &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;parentID&lt;/code&gt; define which keys are to be taken as ID and reference to the parent dataset, respectively. &lt;code&gt;filter&lt;/code&gt; finally allows the data length to be filtered.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// dataset from API&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vehicle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;

        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;car&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;truck&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;motorcycle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SUV&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;6&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sports car&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// build a tree with nodes &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;buildTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
           &lt;span class="nx"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
           &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dataset.*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
           &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="c1"&gt;// key&lt;/span&gt;
           &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;parent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// key );&lt;/span&gt;

&lt;span class="c1"&gt;// issue of the tree with the NodeRecursiveIterator&lt;/span&gt;
&lt;span class="nx"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;NodeRecursiveIterator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;padStart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;level&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// vehicle&lt;/span&gt;
&lt;span class="c1"&gt;// ..car&lt;/span&gt;
&lt;span class="c1"&gt;// ....SUV&lt;/span&gt;
&lt;span class="c1"&gt;// ....sports car&lt;/span&gt;
&lt;span class="c1"&gt;// ..truck&lt;/span&gt;
&lt;span class="c1"&gt;// ..motorcycle&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#i18n-formatter"&gt;
  &lt;/a&gt;
  I18n Formatter
&lt;/h2&gt;

&lt;p&gt;The new formatter extends the standard text formatter by the possibility to pass a translation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Formatter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; 
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://cdn.jsdelivr.net/npm/@schukai/monster@1.26.0/dist/modules/i18n/formatter.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;translations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Translations&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assignTranslations&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                    &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;${animal} has eaten the ${food}!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Formatter&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="nx"&gt;translations&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
   &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message::animal=dog::food=cake&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ↦ dog has eaten the cake!     &lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#fixes"&gt;
  &lt;/a&gt;
  Fixes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;updater: replaces more than one sub path &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;hope you enjoy it!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://monsterjs.org/en/doc/1.26.0/Monster.Data.html#.buildMap"&gt;buildMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://monsterjs.org/en/doc/1.26.0/Monster.Text.Formatter.html"&gt;Text-Formatter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/@schukai/monster"&gt;npm&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jsdelivr.com/package/npm/@schukai/monster"&gt;jsdelivr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://about.schukai.com/de/jobs/"&gt;we are hiring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>dom</category>
      <category>node</category>
    </item>
    <item>
      <title>How to generate QR code in C# : Full tutorial</title>
      <author>Mehr Muhammad Hamza</author>
      <pubDate>Thu, 02 Dec 2021 08:53:23 +0000</pubDate>
      <link>https://dev.to/mhamzap10/how-to-generate-qr-code-in-c-full-tutorial-4hng</link>
      <guid>https://dev.to/mhamzap10/how-to-generate-qr-code-in-c-full-tutorial-4hng</guid>
      <description>&lt;p&gt;In this tutorial, we will learn to generate QR Code and Bar Code using C# Language in dot Net Framework. We will cover following topics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is Bar Code.?&lt;/li&gt;
&lt;li&gt;What is QR Code.?&lt;/li&gt;
&lt;li&gt;Introduction to Barcode Library&lt;/li&gt;
&lt;li&gt;Step by Step Guide to generate QR code.&lt;/li&gt;
&lt;li&gt;Create Visual Studio Project&lt;/li&gt;
&lt;li&gt;Download Barcode Library&lt;/li&gt;
&lt;li&gt;Download using Package Manager Console&lt;/li&gt;
&lt;li&gt;Download using Package Manager Solution&lt;/li&gt;
&lt;li&gt;Download using direct link&lt;/li&gt;
&lt;li&gt;Write Code to generate Barcode&lt;/li&gt;
&lt;li&gt;Write Code to generate QR code&lt;/li&gt;
&lt;li&gt;Adding the logo in the QR Code&lt;/li&gt;
&lt;li&gt;Styling QR Code&lt;/li&gt;
&lt;li&gt;Supported QR Code and Barcode Format&lt;/li&gt;
&lt;li&gt;Summary&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-bar-code"&gt;
  &lt;/a&gt;
  What is Bar Code.?
&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;barcode&lt;/strong&gt; is a set of lines of different widths and sizes representing data, that when read help identify the scanned object. Barcodes are often used to help organize and index information or prices about an object. &lt;/p&gt;

&lt;p&gt;Barcodes are generally used to help track inventory,  but they are also used in admission tickets in movie theaters and other events to uniquely identify and verify the validity of the ticket before the customer can enter the theater or the event. They’re also used to count sales generated from the event, and makes it a lot more convenient to keep track of revenue.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-qr-code"&gt;
  &lt;/a&gt;
  What is QR Code.?
&lt;/h2&gt;

&lt;p&gt;QR Code, in full Quick Response Code, a type of barcode that consists of a printed square pattern of small black and white squares that encode data which can be scanned into a computer system. The black and white squares can represent numbers from 0 to 9, letters from A to Z, typically used for storing URLs or other information for reading by the camera on a smartphone.&lt;/p&gt;

&lt;p&gt;QR codes are frequently used to track information about products in a supply chain and – because many smartphones have built-in QR readers – they are often used in marketing and advertising campaigns.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#c-qr-code-generator-library"&gt;
  &lt;/a&gt;
  C# QR Code Generator Library:
&lt;/h2&gt;

&lt;p&gt;Iron Barcode library written in C# provides functions that help us to create QR code and barcode with just single line of code.  It provides us facility to save that barcode in your desired file format. We will use Barcode Library to create QR codes. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-by-step-tutorial"&gt;
  &lt;/a&gt;
  Step By Step Tutorial:
&lt;/h2&gt;

&lt;p&gt;Let's begin the step by step tutorial to generate QR Code and Barcode. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-create-visual-studio-project"&gt;
  &lt;/a&gt;
  Step # 1: Create Visual Studio Project:
&lt;/h3&gt;

&lt;p&gt;I am using Visual Studio 2019,  and console application template for the demonstration. you can use any of your choice.&lt;/p&gt;

&lt;p&gt;Open Visual Studio = &amp;gt; Click on Create New Project = &amp;gt; Select Console Application  Template = &amp;gt; Press Next =&amp;gt; Name the Project =&amp;gt; Press Next =&amp;gt; Select your Target  dot Net framework =&amp;gt; Click on Create Button.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7_z1QQRI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o59n2vowl01vthxn43ys.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7_z1QQRI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o59n2vowl01vthxn43ys.png" alt="Image description" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-2-install-barcode-library"&gt;
  &lt;/a&gt;
  Step # 2: Install Barcode Library:
&lt;/h3&gt;

&lt;p&gt;Before we start we need to install the Barcode Library. You can install it by using one of the three way. &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#package-manager-console"&gt;
  &lt;/a&gt;
  Package Manager Console:
&lt;/h4&gt;

&lt;p&gt;Write following command in Package Manager console, It will download and install package for you.&lt;br&gt;&lt;br&gt;
&lt;code&gt;Install-Package Barcode&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QpDU0DYf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5etwe4mwwy90jwln3bi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QpDU0DYf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5etwe4mwwy90jwln3bi.png" alt="Image description" width="880" height="233"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#nuget-package-manager-solution"&gt;
  &lt;/a&gt;
  Nuget Package Manager Solution:
&lt;/h4&gt;

&lt;p&gt;You can also install Barcode Library by using Nuget Package Solution. For that follow these steps:&lt;/p&gt;

&lt;p&gt;Click on Tools =&amp;gt; Nuget Package Manager =&amp;gt; Manage Nuget package Solution. &lt;/p&gt;

&lt;p&gt;This will open Nuget Package Manager for you. Click on Browse and search BarCode then install the library. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bkUd8Abj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8496j98cmkas5gpz199.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bkUd8Abj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8496j98cmkas5gpz199.png" alt="Image description" width="880" height="603"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#download-from-the-link"&gt;
  &lt;/a&gt;
  Download From the Link:
&lt;/h4&gt;

&lt;p&gt;As an alternative, the &lt;a href="https://ironsoftware.com/csharp/barcode/packages/IronBarCode.zip"&gt;IronBarCode.Dll&lt;/a&gt; can be downloaded and added to your project as a reference from [.Net Barcode DLL].&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-3-write-code-to-create-barcode"&gt;
  &lt;/a&gt;
  Step # 3: Write Code to create Barcode:
&lt;/h3&gt;

&lt;p&gt;Add Namespace:&lt;br&gt;
&lt;code&gt;using IronBarCode;&lt;/code&gt;&lt;br&gt;
Write following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GeneratedBarcode barcode = IronBarCode.BarcodeWriter.CreateBarcode("https://ironsoftware.com/csharp/barcode/docs/", BarcodeEncoding.Code128);
barcode.SaveAsPng("barcode.png");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#code-explanation"&gt;
  &lt;/a&gt;
  Code Explanation:
&lt;/h4&gt;

&lt;p&gt;GeneratedBarCode is the object type for storing barcode. BarcodeWriter.CreateBarcode is the function provided by the IronBarCode, link in the parameter is the text which we want to encode. I have added link for the example, you can add any as per your requirement. &lt;/p&gt;

&lt;p&gt;In second Parameter, We have to set the Encoding Scheme, For barcode we select Code128. &lt;/p&gt;

&lt;p&gt;After that, SaveAsPng function will save your barcode as png file in your storage device, you can see that. IronBarCode provides several file format to save your barcode image such as pdf, gif, png, Html, jpeg, image and WindowsBitmap etc.&lt;/p&gt;

&lt;p&gt;We have seen that; barcode is generated with jut single line of code.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#output-barcode-image"&gt;
  &lt;/a&gt;
  Output - Barcode Image:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TyjfvimN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpt983787mvypzitnbqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TyjfvimN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpt983787mvypzitnbqm.png" alt="Image description" width="880" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-write-code-to-create-qr-code"&gt;
  &lt;/a&gt;
  Step # 4: Write Code to Create QR Code:
&lt;/h3&gt;

&lt;p&gt;When generating QR codes using Iron Barcode, we may opt to use the QR Code Writer class instead of the BarcodeWriter class. This class gives some new and interesting features for QR code writing. It allows us to set the QR error correction level, allowing you to decide on a balance between the size of your QR code and its ease of readability.&lt;br&gt;
For more details, Please click &lt;a href="https://ironsoftware.com/csharp/barcode/tutorials/csharp-qr-code-generator/"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GeneratedBarcode Qrcode = IronBarCode.QRCodeWriter.CreateQrCode("https://ironsoftware.com/csharp/barcode/docs/");
            Qrcode.SaveAsPng("QrCode.png");

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output-qr-code-image"&gt;
  &lt;/a&gt;
  Output - QR Code Image:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pTadvLDp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nk3bgugpf6myb7nfh48q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pTadvLDp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nk3bgugpf6myb7nfh48q.png" alt="Image description" width="463" height="467"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-logo-in-the-qr-code"&gt;
  &lt;/a&gt;
  Adding the Logo in the QR Code:
&lt;/h2&gt;

&lt;p&gt;Now, I will show you how we can add logo of our company in the QR Code. This practice is now commonly in used. &lt;br&gt;
Write following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var MyQRWithLogo = QRCodeWriter.CreateQrCodeWithLogo("https://ironsoftware.com/csharp/barcode/", "CSharp-logo.png", 500);
 MyQRWithLogo.SaveAsPng("Qr-Code-with-logo.png"); 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This example adds the C# logo to the QR code. It automatically sizes it to an appropriate size where the pure code is still readable and aligns that logo to the QR code square grid, so that it looks appropriate. The next line of code colors the barcode dark green. However, it does not discolor the logo.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#output-qr-code-with-logo"&gt;
  &lt;/a&gt;
  Output - QR Code with Logo:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OgJGB8BH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5dvn9gk56w2hp0gvufe9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OgJGB8BH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5dvn9gk56w2hp0gvufe9.png" alt="Image description" width="853" height="809"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#styling-qr-code"&gt;
  &lt;/a&gt;
  Styling QR Code:
&lt;/h2&gt;

&lt;p&gt;The visual depiction of a Qrcode and Barcode can be manipulated very easily using Iron Barcode. The output of every BarcodeWriter operation is a generated barcode object. This generated barcode object has a Fluent API, allowing the graphical settings of the barcode to be set in a single line of code, similar to Linq.&lt;/p&gt;

&lt;p&gt;Popular features for styling barcodes include resizing barcodes, setting margins, changing background colors, changing barcode colors, and verifying that the output barcode is still readable.&lt;/p&gt;

&lt;p&gt;In a similar fashion, we may also add annotations such as text to a barcode in any typeface we want, or place the value of the barcode very easily under or above the barcode. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var MyQRWithLogo = QRCodeWriter.CreateQrCodeWithLogo("https://ironsoftware.com/csharp/barcode/", "CSharp-logo.png", 500);
            MyQRWithLogo.AddAnnotationTextAboveBarcode("Product URL:");
            MyQRWithLogo.AddBarcodeValueTextBelowBarcode();
            MyQRWithLogo.SaveAsPng("Qr-Code-with-Style.png");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qUul0bmW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjnzomkooi0lhz5x07wx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qUul0bmW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjnzomkooi0lhz5x07wx.png" alt="Image description" width="880" height="778"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#supported-qr-code-and-barcode-format"&gt;
  &lt;/a&gt;
  Supported QR Code and Barcode Format:
&lt;/h2&gt;

&lt;p&gt;Iron Barcode supports a large number of commonly used barcode formats:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;QR codes, including decorated and branded QR codes with logos and colors&lt;/li&gt;
&lt;li&gt;Multi-format barcodes, such as Aztec, Data Matrix, CODE 93, and CODE 128&lt;/li&gt;
&lt;li&gt;RSS Expanded Databar, UPS MaxiCode, and USPS IMb OneCode barcodes&lt;/li&gt;
&lt;li&gt;Stacked linear barcodes such as RSS-14 and PDF-417&lt;/li&gt;
&lt;li&gt;Conventional numerical barcode formats such as UPCA, UPCE, EAN-8, EAN-13, Codabar, ITF, MSI, and Plessey.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var MyBarCode = QRCodeWriter.CreateQrCode("https://ironsoftware.com/csharp/barcode/");
            MyBarCode.SaveAsImage("MyBarCode.png");
            MyBarCode.SaveAsGif("MyBarCode.gif");
            MyBarCode.SaveAsHtmlFile("MyBarCode.html");
            MyBarCode.SaveAsJpeg("MyBarCode.jpg");
            MyBarCode.SaveAsPdf("MyBarCode.Pdf");
            MyBarCode.SaveAsPng("MyBarCode.png");
            MyBarCode.SaveAsTiff("MyBarCode.tiff");
            MyBarCode.SaveAsWindowsBitmap("MyBarCode.bmp");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary:
&lt;/h2&gt;

&lt;p&gt;Iron Barcode features a friendly API for developers to read and write barcodes for .NET, which optimizes for accuracy and a low error rate in real world use-cases. For more information about the Iron Barcode Please visit this &lt;a href="https://ironsoftware.com/csharp/barcode/docs/"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you will buy complete Iron Suite, you will get five libraries for the price of 2. For more details; please click &lt;a href="https://ironsoftware.com/suite/"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>qrcode</category>
      <category>csharp</category>
      <category>qrcodegenerator</category>
      <category>barcode</category>
    </item>
    <item>
      <title>Dev.to Code Problem ?</title>
      <author>CoderZ90</author>
      <pubDate>Thu, 02 Dec 2021 08:38:07 +0000</pubDate>
      <link>https://dev.to/official_fire/devto-code-problem--4mlg</link>
      <guid>https://dev.to/official_fire/devto-code-problem--4mlg</guid>
      <description>&lt;p&gt;Hello guys this thing is showing in my dev.to website when i open it is it for me or is it showing for others also ?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PAHfoLxs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5lcvhu9v461fit3xhhl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PAHfoLxs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5lcvhu9v461fit3xhhl.png" alt="Image description" width="763" height="576"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Working With Remote Docker Using Docker Context</title>
      <author>Clavin June</author>
      <pubDate>Thu, 02 Dec 2021 08:36:25 +0000</pubDate>
      <link>https://dev.to/clavinjune/working-with-remote-docker-using-docker-context-4f52</link>
      <guid>https://dev.to/clavinjune/working-with-remote-docker-using-docker-context-4f52</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xeSux4QM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1605745341112-85968b19335b%3Fq%3D50%26w%3D1920" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xeSux4QM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1605745341112-85968b19335b%3Fq%3D50%26w%3D1920" alt="Photo by @carrier_lost on Unsplash" title="Photo by @carrier\_lost on Unsplash" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This is a cheatsheet for working with docker context to connect remote docker locally. Might help you to work with remote docker without manually SSH to the remote server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-context"&gt;
  &lt;/a&gt;
  Add Context
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker context create my-remote-docker-machine &lt;span class="nt"&gt;--docker&lt;/span&gt; &lt;span class="s2"&gt;"host=ssh://username@host"&lt;/span&gt;
my-remote-docker-machine
Successfully created context &lt;span class="s2"&gt;"my-remote-docker-machine"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also utilize &lt;code&gt;SSH Config&lt;/code&gt; file to connect to the remote docker. Especially when you need to define your &lt;code&gt;private key&lt;/code&gt; or &lt;code&gt;password&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; ~/.ssh/config 
Host my-remote-docker-machine
  Hostname host
  User username
&lt;span class="nv"&gt;$ &lt;/span&gt;docker context create my-remote-docker-machine &lt;span class="nt"&gt;--docker&lt;/span&gt; &lt;span class="s2"&gt;"host=ssh://my-remote-docker-machine"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Besides &lt;code&gt;ssh&lt;/code&gt;, you can also add your context using &lt;code&gt;tcp&lt;/code&gt; protocol if you enable the &lt;code&gt;Docker API&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-all-context"&gt;
  &lt;/a&gt;
  List All Context
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker context &lt;span class="nb"&gt;ls
&lt;/span&gt;NAME                       DESCRIPTION                               DOCKER ENDPOINT               KUBERNETES ENDPOINT   ORCHESTRATOR
default &lt;span class="k"&gt;*&lt;/span&gt;                  Current DOCKER_HOST based configuration   unix:///var/run/docker.sock                         swarm
my-remote-docker-machine                                             ssh://username@host
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#use-context"&gt;
  &lt;/a&gt;
  Use Context
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker &lt;span class="nt"&gt;--context&lt;/span&gt; my-remote-docker-machine images &lt;span class="nt"&gt;-q&lt;/span&gt;
65dadc9c7fe7
f814fce55133
7a9b6da4328e
33655f17f093
d120da10b040
6d6859d1a42a
c19ae228f069
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#set-new-context-as-default"&gt;
  &lt;/a&gt;
  Set New Context as Default
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker context use my-remote-docker-machine 
my-remote-docker-machine
Current context is now &lt;span class="s2"&gt;"my-remote-docker-machine"&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker context &lt;span class="nb"&gt;ls
&lt;/span&gt;NAME                         DESCRIPTION                               DOCKER ENDPOINT               KUBERNETES ENDPOINT   ORCHESTRATOR
default                      Current DOCKER_HOST based configuration   unix:///var/run/docker.sock                         swarm
my-remote-docker-machine &lt;span class="k"&gt;*&lt;/span&gt;                                             ssh://username@host

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See the &lt;code&gt;*&lt;/code&gt; is moved from &lt;code&gt;default&lt;/code&gt; to &lt;code&gt;my-remote-docker-machine&lt;/code&gt;. Now you can use your docker command without &lt;code&gt;--context&lt;/code&gt; flag.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remove-context"&gt;
  &lt;/a&gt;
  Remove Context
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker context use default &lt;span class="c"&gt;# back to default&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker context &lt;span class="nb"&gt;rm &lt;/span&gt;my-remote-docker-machine 
my-remote-docker-machine
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Using docker context might help to avoid SSH manually to the remote server. But, when it comes to build an image using a remote docker locally, you need to consider how much docker context that will be uploaded/downloaded.&lt;/p&gt;

&lt;p&gt;Thank you for reading!&lt;/p&gt;

</description>
      <category>docker</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Code break on dev.to home feeds?</title>
      <author>ZoreAnkit</author>
      <pubDate>Thu, 02 Dec 2021 08:34:51 +0000</pubDate>
      <link>https://dev.to/zoreankit/code-break-on-devto-home-feeds-4pkd</link>
      <guid>https://dev.to/zoreankit/code-break-on-devto-home-feeds-4pkd</guid>
      <description>&lt;p&gt;What is this code I'm seeing on dev.to home feeds?&lt;/p&gt;

&lt;p&gt;Does anyone have same thing on there home feeds?&lt;/p&gt;

</description>
      <category>bug</category>
    </item>
    <item>
      <title>Laravel One of Many Eloquent Relationship (latestOfMany - oldestOfMany - ofMany)</title>
      <author>Morcos Gad</author>
      <pubDate>Thu, 02 Dec 2021 08:29:36 +0000</pubDate>
      <link>https://dev.to/morcosgad/laravel-one-of-many-eloquent-relationship-latestofmany-oldestofmany-ofmany--4gkh</link>
      <guid>https://dev.to/morcosgad/laravel-one-of-many-eloquent-relationship-latestofmany-oldestofmany-ofmany--4gkh</guid>
      <description>&lt;p&gt;Eloquent relationships is coming to Laravel 8.42&lt;br&gt;
Many times you will see that a model may have many related models, yet you want to easily retrieve the "latest" or "oldest" related model of the relationship. For example, a  User model may be related to many  BrowserHistory models.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Get Latest Browser History&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;latestBrowserHistory&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;hasOne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;BrowserHistory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;latestOfMany&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Get Oldest Browser History&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;oldestBrowserHistory&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;hasOne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;BrowserHistory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;oldestOfMany&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This new eloquent relationship  ofMany the method accepts the sortable column as its first argument and which aggregate function ( min or  max) to apply when querying for the related model&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;highestPriceProduct&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;hasOne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;ofMany&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'max'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you enjoyed the code.&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>class="site-logo" should not be a string </title>
      <author>bacloud14</author>
      <pubDate>Thu, 02 Dec 2021 08:25:59 +0000</pubDate>
      <link>https://dev.to/bacloud14/classsite-logo-should-not-be-a-string-2g6a</link>
      <guid>https://dev.to/bacloud14/classsite-logo-should-not-be-a-string-2g6a</guid>
      <description>&lt;p&gt;Just saying Good morning to you, and that I love you all :)&lt;/p&gt;

</description>
      <category>discuss</category>
    </item>
  </channel>
</rss>
