<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why 404 error ?</title>
      <author>Clément Gaudinière</author>
      <pubDate>Wed, 20 Oct 2021 15:56:39 +0000</pubDate>
      <link>https://dev.to/clementgaudiniere/why-404-error--1n89</link>
      <guid>https://dev.to/clementgaudiniere/why-404-error--1n89</guid>
      <description>&lt;p&gt;Hello everyone, today we're going to look at HTTP errors, you know like when you get a page not found with the 404 error. In reality there are almost a hundred different error codes. Don't worry, it's difficult to know them all by heart, but there are techniques to find out roughly where the error comes from. You are ready, so let's go !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-did-you-invent-these-numbers-"&gt;
  &lt;/a&gt;
  Why did you invent these numbers ?
&lt;/h3&gt;

&lt;p&gt;But then why did we invent these error numbers? The answer is actually quite simple, when a user requests a web page through his browser, the browser will send a request to the server under the world famous HTTP protocol. The server will also respond in HTTP format, and if all goes well will send the requested resource (in our case the web page). But everything gets complicated when there is an error. Knowing that there is an error is good, but knowing where is even better. This is why error numbers were quickly assigned to each different type of error. This is much more practical and saves time for many developers. For example, errors starting with 5 are problems at the server level. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-five-categories-of-error"&gt;
  &lt;/a&gt;
  The five categories of error
&lt;/h3&gt;

&lt;p&gt;To simplify the whole thing, and to put some order in all these errors, categories have been created. There are three different categories: &lt;br&gt;
1 - Informations&lt;br&gt;
2 - Success&lt;br&gt;
3 - Redirects&lt;br&gt;
4 - Web client errors&lt;br&gt;
5 - Server errors&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--agP1A-7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/641cck3qcpk7m2oc4krl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--agP1A-7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/641cck3qcpk7m2oc4krl.jpg" alt="The five categories of error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So if an error number starts with 4, we know directly that the problem comes from the web client.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-404-error-"&gt;
  &lt;/a&gt;
  Why 404 error ?
&lt;/h3&gt;

&lt;p&gt;But why 404 errors? If you have been following this, you will notice that the first number is a 4 and that the error comes directly from the web client and not from the server. Indeed, the 404 error means that the resource is not found, the server has searched for it on its side but has not found it, so the error comes from the web client which has not provided the right url.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x5IiZIZx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp6qdfennctlljpd4q37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x5IiZIZx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp6qdfennctlljpd4q37.png" alt="404 error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#going-further-with-error-418"&gt;
  &lt;/a&gt;
  Going further with error 418
&lt;/h3&gt;

&lt;p&gt;The HTTP error 418 has nothing to do with the other errors. Indeed its meaning is "I'm a teapot". It is actually a joke since it first appeared in the famous RFC 2324 on April 1, 1998. The explanations given by the developers are: " There is coffee all over the world. Increasingly, in a world in which computing is ubiquitous, the computists want to make coffee. Coffee brewing is an art, but the distributed intelligence of the web- connected world transcends art. Thus, there is a strong, dark, rich requirement for a protocol designed expressly for the brewing of coffee. Coffee is brewed using coffee pots. Networked coffee pots require a control protocol if they are to be controlled".&lt;br&gt;
In other words, the famous Hyper Text Coffee Pot Control Protocol, or HTCPCP, is intended to send an error back to all those who would like to control a coffee pot remotely, telling them that they have mistakenly addressed themselves to ... a teapot 😂.&lt;br&gt;
This April 1st "joke" had its heyday at the time and is still featured on a number of official links in which its error code has been preserved.&lt;br&gt;
There are still people asking questions about this 418 error, even today!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ybILfSlx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urbg4ysdsbn36dg5kzxs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ybILfSlx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urbg4ysdsbn36dg5kzxs.jpg" alt="Google teapot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#specific-errors"&gt;
  &lt;/a&gt;
  Specific errors
&lt;/h3&gt;

&lt;p&gt;For those who wish to find a specific error, you can refer to these different tables classified by categories.&lt;br&gt;
Some codes are not yet in use, but are intended for future use. Other codes do not result in any specific display to the user, but are implied (e.g. codes 200 or 304, which are never seen by the client as they concern the majority of successful requests).&lt;/p&gt;

&lt;p&gt;All major HTTP errors are represented in these different tables, of the different error types:&lt;/p&gt;

&lt;p&gt;Codes beginning with 1 (Informations):&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;Continue&lt;/td&gt;
&lt;td&gt;Waiting for the application to be processed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;Switching Protocols&lt;/td&gt;
&lt;td&gt;Acceptance of the change of protocol.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;td&gt;Processing&lt;/td&gt;
&lt;td&gt;Processing in progress (prevents the customer from exceeding the waiting time limit).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;td&gt;Early Hints&lt;/td&gt;
&lt;td&gt;While waiting for the final response, the server returns links that the client can start downloading.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Codes beginning with 2 (Success):&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;OK&lt;/td&gt;
&lt;td&gt;Request successfully processed. The response will depend on the query method used.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;Created&lt;/td&gt;
&lt;td&gt;Request successfully processed and document created.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;202&lt;/td&gt;
&lt;td&gt;Accepted&lt;/td&gt;
&lt;td&gt;Request processed, but no guarantee of result.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;203&lt;/td&gt;
&lt;td&gt;Non-Authoritative Information&lt;/td&gt;
&lt;td&gt;Information returned, but generated by an uncertified source.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;204&lt;/td&gt;
&lt;td&gt;No Content&lt;/td&gt;
&lt;td&gt;Request successfully processed but no information to return.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;205&lt;/td&gt;
&lt;td&gt;Reset Content&lt;/td&gt;
&lt;td&gt;Request successfully processed, current page can be deleted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;206&lt;/td&gt;
&lt;td&gt;Partial Content&lt;/td&gt;
&lt;td&gt;Only part of the resource has been transmitted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;207&lt;/td&gt;
&lt;td&gt;Multi-Status&lt;/td&gt;
&lt;td&gt;Multiple answers.(WebDav)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;208&lt;/td&gt;
&lt;td&gt;Already Reported&lt;/td&gt;
&lt;td&gt;The document was previously sent in this collection.(WebDav)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;210&lt;/td&gt;
&lt;td&gt;Content Different&lt;/td&gt;
&lt;td&gt;The copy of the resource on the client side differs from that on the server (content or properties).(WebDav)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;226&lt;/td&gt;
&lt;td&gt;IM Used&lt;/td&gt;
&lt;td&gt;The server has completed the request for the resource, and the response is a representation of the result of one or more instance manipulations applied to the current instance.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Codes beginning with 3 (Redirects):&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Multiple Choices&lt;/td&gt;
&lt;td&gt;The requested URI refers to several resources.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;301&lt;/td&gt;
&lt;td&gt;Moved Permanently&lt;/td&gt;
&lt;td&gt;Permanently moved document.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;302&lt;/td&gt;
&lt;td&gt;Found&lt;/td&gt;
&lt;td&gt;Document moved temporarily.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;303&lt;/td&gt;
&lt;td&gt;See Other&lt;/td&gt;
&lt;td&gt;The answer to this request lies elsewhere.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;304&lt;/td&gt;
&lt;td&gt;Not Modified&lt;/td&gt;
&lt;td&gt;Document not modified since the last request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;305&lt;/td&gt;
&lt;td&gt;Use Proxy (since HTTP/1.1)&lt;/td&gt;
&lt;td&gt;The request must be re-addressed to the proxy.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;306&lt;/td&gt;
&lt;td&gt;Switch Proxy&lt;/td&gt;
&lt;td&gt;Code used by an older version of RFC 26167, now reserved. It meant "The following requests must use the specified proxy ".&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;307&lt;/td&gt;
&lt;td&gt;Temporary Redirect&lt;/td&gt;
&lt;td&gt;The request must be temporarily redirected to the specified URI.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;308&lt;/td&gt;
&lt;td&gt;Permanent Redirect&lt;/td&gt;
&lt;td&gt;The request must be permanently redirected to the specified URI.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;310&lt;/td&gt;
&lt;td&gt;Too many Redirects&lt;/td&gt;
&lt;td&gt;The request has to be redirected too many times, or falls victim to a redirection loop.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Codes beginning with 4 (Web client errors):&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;400&lt;/td&gt;
&lt;td&gt;Bad Request&lt;/td&gt;
&lt;td&gt;The syntax of the query is wrong.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;401&lt;/td&gt;
&lt;td&gt;Unauthorized&lt;/td&gt;
&lt;td&gt;Authentication is required to access the resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;402&lt;/td&gt;
&lt;td&gt;Payment Required&lt;/td&gt;
&lt;td&gt;Payment required to access the resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;403&lt;/td&gt;
&lt;td&gt;Forbidden&lt;/td&gt;
&lt;td&gt;The server has understood the request, but refuses to execute it. Unlike the 401 error, authenticating will not make any difference. On servers where authentication is required, this usually means that authentication has been accepted but the access rights do not allow the client to access the resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;Not Found&lt;/td&gt;
&lt;td&gt;Resource not found.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;405&lt;/td&gt;
&lt;td&gt;Method Not Allowed&lt;/td&gt;
&lt;td&gt;Unauthorised query method.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;406&lt;/td&gt;
&lt;td&gt;Not Acceptable&lt;/td&gt;
&lt;td&gt;The requested resource is not available in a format that would respect the "Accept" headers of the request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;407&lt;/td&gt;
&lt;td&gt;Proxy Authentication Required&lt;/td&gt;
&lt;td&gt;Access to the resource allowed by identification with the proxy.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;408&lt;/td&gt;
&lt;td&gt;Request Time-out&lt;/td&gt;
&lt;td&gt;The amount of time a request from the client has been waiting on the server side. According to the HTTP specification: "The client did not produce a request within the time the server was willing to wait. The client MAY repeat the request without modification at any later time ".&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;409&lt;/td&gt;
&lt;td&gt;Conflict&lt;/td&gt;
&lt;td&gt;The request cannot be processed at this time.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;410&lt;/td&gt;
&lt;td&gt;Gone&lt;/td&gt;
&lt;td&gt;The resource is no longer available and no redirection address is known.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;411&lt;/td&gt;
&lt;td&gt;Length Required&lt;/td&gt;
&lt;td&gt;The length of the request was not specified.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;412&lt;/td&gt;
&lt;td&gt;Precondition Failed&lt;/td&gt;
&lt;td&gt;Preconditions sent by the request not checked.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;413&lt;/td&gt;
&lt;td&gt;Request Entity Too Large&lt;/td&gt;
&lt;td&gt;Treatment abandoned due to too high a demand.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;414&lt;/td&gt;
&lt;td&gt;Request-URI Too Long&lt;/td&gt;
&lt;td&gt;URI too long.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;415&lt;/td&gt;
&lt;td&gt;Unsupported Media Type&lt;/td&gt;
&lt;td&gt;Unsupported query format for a given method and resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;416&lt;/td&gt;
&lt;td&gt;Requested range unsatisfiable&lt;/td&gt;
&lt;td&gt;Incorrect "range" query header fields.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;417&lt;/td&gt;
&lt;td&gt;Expectation failed&lt;/td&gt;
&lt;td&gt;Expected and defined behaviour in the header of the unsatisfactory request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;418&lt;/td&gt;
&lt;td&gt;I’m a teapot&lt;/td&gt;
&lt;td&gt;"I am a teapot": This code is defined in RFC 232410 dated 1 April 1998, Hyper Text Coffee Pot Control Protocol. It is a webmaster's joke, intended to send an error back to anyone who wants to remotely control a coffee pot, telling them that they have mistakenly addressed a teapot :)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;421&lt;/td&gt;
&lt;td&gt;Bad mapping / Misdirected Request&lt;/td&gt;
&lt;td&gt;The request has been sent to a server that is not capable of producing a response (for example, because a connection has been reused).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;422&lt;/td&gt;
&lt;td&gt;Unprocessable entity&lt;/td&gt;
&lt;td&gt;The entity provided with the request is incomprehensible or incomplete.(WebDAV)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;423&lt;/td&gt;
&lt;td&gt;Locked&lt;/td&gt;
&lt;td&gt;The operation cannot take place because the resource is locked.(WebDAV)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;424&lt;/td&gt;
&lt;td&gt;Method failure&lt;/td&gt;
&lt;td&gt;A method in the transaction has failed.(WebDAV)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;425&lt;/td&gt;
&lt;td&gt;Too Early&lt;/td&gt;
&lt;td&gt;The server cannot process the request as it may be replayed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;426&lt;/td&gt;
&lt;td&gt;Upgrade Required&lt;/td&gt;
&lt;td&gt;The client should change the protocol, for example to TLS/1.0.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;428&lt;/td&gt;
&lt;td&gt;Precondition Required&lt;/td&gt;
&lt;td&gt;The request must be conditional.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;429&lt;/td&gt;
&lt;td&gt;Too Many Requests&lt;/td&gt;
&lt;td&gt;The customer has made too many requests within a given time frame.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;431&lt;/td&gt;
&lt;td&gt;Request Header Fields Too Large&lt;/td&gt;
&lt;td&gt;The HTTP headers sent exceed the maximum size allowed by the server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;449&lt;/td&gt;
&lt;td&gt;Retry With&lt;/td&gt;
&lt;td&gt;Code defined by Microsoft. The request should be returned after performing an action.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;450&lt;/td&gt;
&lt;td&gt;Blocked by Windows Parental Controls&lt;/td&gt;
&lt;td&gt;Code set by Microsoft. This error occurs when Windows Parental Controls are enabled and block access to the page.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;451&lt;/td&gt;
&lt;td&gt;Unavailable For Legal Reasons&lt;/td&gt;
&lt;td&gt;This error code indicates that the requested resource is inaccessible for legal reasons.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;456&lt;/td&gt;
&lt;td&gt;Unrecoverable Error&lt;/td&gt;
&lt;td&gt;Unrecoverable error.(WebDAV)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Codes beginning with 5 (Server errors):&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;Internal Server Error&lt;/td&gt;
&lt;td&gt;Internal server error.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;501&lt;/td&gt;
&lt;td&gt;Not Implemented&lt;/td&gt;
&lt;td&gt;Claimed functionality not supported by the server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;502&lt;/td&gt;
&lt;td&gt;Bad Gateway ou Proxy Error&lt;/td&gt;
&lt;td&gt;By acting as a proxy or gateway server, the server received an invalid response from the remote server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;503&lt;/td&gt;
&lt;td&gt;Service Unavailable&lt;/td&gt;
&lt;td&gt;Service temporarily unavailable or under maintenance.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;504&lt;/td&gt;
&lt;td&gt;Gateway Time-out&lt;/td&gt;
&lt;td&gt;Time taken to wait for a response from a server to an intermediate server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;505&lt;/td&gt;
&lt;td&gt;HTTP Version not supported&lt;/td&gt;
&lt;td&gt;HTTP version not supported by the server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;506&lt;/td&gt;
&lt;td&gt;Variant Also Negotiates&lt;/td&gt;
&lt;td&gt;Negotiation error.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;507&lt;/td&gt;
&lt;td&gt;Insufficient storage&lt;/td&gt;
&lt;td&gt;Insufficient space to edit properties or build the collection.(WebDAV)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;508&lt;/td&gt;
&lt;td&gt;Loop detected&lt;/td&gt;
&lt;td&gt;Loop in a resource linkage.(WebDAV)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;509&lt;/td&gt;
&lt;td&gt;Bandwidth Limit Exceeded&lt;/td&gt;
&lt;td&gt;Used by many servers to indicate a quota overrun.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;510&lt;/td&gt;
&lt;td&gt;Not extended&lt;/td&gt;
&lt;td&gt;The request does not respect the extended HTTP resource access policy.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;511&lt;/td&gt;
&lt;td&gt;Network authentication required&lt;/td&gt;
&lt;td&gt;The client must authenticate to access the network. Used by captive portals to redirect clients to the authentication page.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;I hope you have enjoyed this article.  If you have any questions, feel free to ask me in the comments. 👍&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>O que é Javascript?</title>
      <author>Thomas Lincoln</author>
      <pubDate>Wed, 20 Oct 2021 15:56:38 +0000</pubDate>
      <link>https://dev.to/samoht/o-que-e-javascript-38b0</link>
      <guid>https://dev.to/samoht/o-que-e-javascript-38b0</guid>
      <description>&lt;p&gt;Olá, meu caro programador, hoje, como primeiro post dessa conta, eu irei explicar o que é Javascript de uma forma breve, algo leve &lt;br&gt;
para iniciantes conseguirem se conectar com a linguagem.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-javascript"&gt;
  &lt;/a&gt;
  O que é Javascript?
&lt;/h2&gt;

&lt;p&gt;Bem, essa é uma pergunta meio simples, mas caso você não saiba irei responder. Javascript é uma linguagem de programação de alto nível (aguenta aí que eu já te explico o que é isso). Ela é uma das linguagens mais simples para um iniciante, é possível até mesmo aprender lógica de programação com ela.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Mas o que é uma linguagem de programação de alto nível?. Bem, uma linguagem de programação de alto nível é uma linguagem que se assemelha bastante a nossa linguagem, isso, essa mesma que você usa pra falar "aaaaaaaa to cansado desse professor e dessa aula". Porém, com algumas modificações e em inglês (ta vendo como inglês é importante?).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Um outro fato importante, é que ela faz parte da "trindade do desenvolvimento web", sendo os membros o HTML, o Css e O Javascript. São as três principais linguagens usadas no desenvolvimento web frontend.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#por-que-foi-criado-o-js"&gt;
  &lt;/a&gt;
  Por que foi criado o Js?
&lt;/h2&gt;

&lt;p&gt;Bem, pode passar despercebido por muitos, mas eu acho importante saber o motivo da linguagem ter sido criada. Enfim vamos para a explicação.&lt;/p&gt;

&lt;p&gt;Caso vocês não saibam, os sites antes eram apenas uma página estática, algo como um pdf que você só é capaz de ler. Porém, é meio entediante e limita muito, imagina, você não poder escolher o vídeo que você vai ver, ou só poder ler aquele blog sem poder falar que ele não sabe escrever direito.&lt;/p&gt;

&lt;p&gt;Com isso Brendan Eich decidiu mudar isso, criando assim a linguagem que faria todo o conceito de site mudar para sempre. O Javascript, ele implementou formas do usuário poder interagir com o site, criando várias formas para se fazer isso, ignorando a linha temporal, agora irei mostrar para você leitor, quais são as possibilidades de implementação dessa linguagem em um site. Com Js você pode: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Criar interações entre o usuário, como? de várias formas, assim que ele digitar algo você pode ler aquilo e responder ele de alguma forma, seja, com ele logando ou não, com você mostrando o resultado de uma pesquisa.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fazer algo aparecer na tela quando ele clica em algo (sim, as propagandas que aparecem em qualquer canto possivelmente são com Js).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Armazenar o que o usuário digitou em uma variável. Assim podendo tratar ela, fazendo cálculos, podendo usar como login, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Modificar toda a estrutura do site, textos, estilos, tudo.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Adicionar APIs, &lt;em&gt;mas o que são APIs?&lt;/em&gt;, veja as APIs como literalmente bibliotecas de código, com elas você pode buscar código que alguém ja escreveu e aplicar no seu site, algumas servem para adicionar informações, por exemplo, caso você queira saber a cotação do dólar e informar no seu site, uma API possivelmente vai poder fazer isso para você. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Fato curioso, todas as APIs são feitas por programadores como eu e você, dizem que uma boa forma de aprender Js é entender como fazer uma API, então futuramente haverá um post sobre isso.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#onde-buscar-informa%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Onde buscar informações?
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Tá tá, voce me disse tudo isso, mas deve ser dificil achar conteúdo disso&lt;/em&gt;, ai que você se engana, pois o criador da linguagem, fez um site chamado &lt;a href="https://developer.mozilla.org/pt-BR/docs/Web/JavaScript"&gt;MDN mozilla&lt;/a&gt;, (&lt;em&gt;o mesmo criou o mozilla, uma vez inventor sempre inventor não é?&lt;/em&gt;) esse site contém a documentação da linguagem, como também tutoriais de como aprender ela, (também tem a documentação de outras linguagens e introduções as mesmas).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#primeiras-vari%C3%A1veis"&gt;
  &lt;/a&gt;
  Primeiras Variáveis
&lt;/h2&gt;

&lt;p&gt;Mas para não ficarmos só vendo informações e você poder ter um gostinho de como é a linguagem, iremos aprender a criar a primeira variável, (não se preocupe caso você não saiba onde programar Js, irei falar isso depois desse tópico).&lt;/p&gt;

&lt;p&gt;Parar criar uma variável se escrever da seguinte forma:&lt;br&gt;
"tipo de variável + o nome dela"&lt;/p&gt;

&lt;p&gt;Por exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; var meuNumero;
 let meuNome;
 const meuTipoSanguíneo; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#como-e-onde-eu-programo-em-js"&gt;
  &lt;/a&gt;
  Como e onde eu programo em Js?
&lt;/h2&gt;

&lt;p&gt;Para ser sincero existem variás formas, até mesmo se você apertar f12 no seu teclado e digitar no console, você irá conseguir programar em Js. Porém,irei passar a forma mais fácil e simples de momento, alguma hora eu explico como faz para instalar os arquivos necessários para isso.&lt;/p&gt;

&lt;p&gt;A forma mais simples é programando em um site mesmo, como o &lt;a href="https://codepen.io"&gt;code pen&lt;/a&gt;, assim que você clicar em Start Coding, você será capaz de ver uma tela escrita Js, e lá você escreve as linhas de código em Js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exerc%C3%ADcios"&gt;
  &lt;/a&gt;
  Exercícios
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;que???? eu voltei pra escola?&lt;/em&gt;. Sim, a forma mais eficiente é praticar, então irei passar alguns exercícios para prática. Relaxa que é coisa simples.&lt;/p&gt;

&lt;p&gt;Exercício 1&lt;/p&gt;

&lt;p&gt;Crie variáveis para cada atributo seu, sejam físicos ou não. Como se você fosse um personagem de RPG, pode ser criativo.&lt;/p&gt;

&lt;p&gt;Exercício 2&lt;/p&gt;

&lt;p&gt;Tente encontrar a diferença entre let, const e var. &lt;/p&gt;

&lt;p&gt;Exercício 3&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#busque-saber-dos-tipos-de-vari%C3%A1veis-do-javascript"&gt;
  &lt;/a&gt;
  Busque saber dos tipos de variáveis do Javascript.
&lt;/h2&gt;

&lt;p&gt;E fim, viu, coisa simples. Caso eu lembre eu irei postar as respostas e soluções pra esses exercícios.&lt;/p&gt;

&lt;p&gt;Até um outro dia&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VQcaJIiM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/vxdpsQNMFLT3RuMeYX/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQcaJIiM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/vxdpsQNMFLT3RuMeYX/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>braziliandevs</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Best articles about ML and stuff of @20/10/2021 #filteredContent</title>
      <author>JP</author>
      <pubDate>Wed, 20 Oct 2021 15:52:30 +0000</pubDate>
      <link>https://dev.to/jeel/filtered-content-20-10-2021-3cng</link>
      <guid>https://dev.to/jeel/filtered-content-20-10-2021-3cng</guid>
      <description>&lt;p&gt;1️⃣ AI writes Songs from incomplete notes&lt;br&gt;
    * Read at &lt;a href="https://www.scientificamerican.com/podcast/episode/beethovens-unfinished-10th-symphony-brought-to-life-by-artificial-intelligence"&gt;scientificAmerican.com/...&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2️⃣ ⭐️ Mystery of Deep Learning&lt;br&gt;
    * Read at &lt;a href="https://www.quantamagazine.org/a-new-link-to-an-old-model-could-crack-the-mystery-of-deep-learning-20211011/"&gt;quantaMagazine.org/...&lt;/a&gt;&lt;br&gt;
    * Note :- "kernel methods" in ML are somewhat equivalent to deep Neural Network&lt;/p&gt;

&lt;p&gt;3️⃣ 😂 Bars are horrible places&lt;br&gt;
    * Read at &lt;a href="https://waitbutwhy.com/2014/05/secretly-hate-bars.html"&gt;waitButWhy.com/...&lt;/a&gt;&lt;br&gt;
    * Note:- gonna try couple of times to experience this s#!t…&lt;/p&gt;

&lt;p&gt;4️⃣ Graph neural networks for ETA in Google maps&lt;br&gt;
    * Read at &lt;a href="https://deepmind.com/blog/article/traffic-prediction-with-advanced-graph-neural-networks"&gt;deepMind.com/...&lt;/a&gt;&lt;br&gt;
    * Note:- graph neural network can represent any data.&lt;/p&gt;

&lt;p&gt;5️⃣ one algorithm to rule them all&lt;br&gt;
    * Read at &lt;a href="https://venturebeat.com/2021/10/12/deepmind-is-developing-one-algorithm-to-rule-them-all/"&gt;ventureBeat.com/...&lt;/a&gt;&lt;br&gt;
    * Creating a ML model which can be flexible enough to be able to work for different problems.&lt;/p&gt;

&lt;p&gt;6️⃣ Finding roots of equations (insights)&lt;br&gt;
    * &lt;a href="https://www.youtube.com/watch?v=-RdOwhmqP5s"&gt;3blue1brown&lt;/a&gt;&lt;br&gt;
    * Note :- borders in math for 3 regions&lt;br&gt;
    * &lt;a href="https://www.youtube.com/watch?v=LqbZpur38nw"&gt;Follow up video&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;✅ Reading complete. 👍&lt;/p&gt;

</description>
      <category>news</category>
      <category>filteredcontent</category>
      <category>machinelearning</category>
      <category>internet</category>
    </item>
    <item>
      <title>Learn DSA with LeetCode</title>
      <author>Kiran S Baliga</author>
      <pubDate>Wed, 20 Oct 2021 15:52:08 +0000</pubDate>
      <link>https://dev.to/kiransbaliga/learn-dsa-with-leetcode-3239</link>
      <guid>https://dev.to/kiransbaliga/learn-dsa-with-leetcode-3239</guid>
      <description>&lt;p&gt;Data Structures and Algorithms is one of the most important concept that you should be thorough with regardless of which language you code.&lt;/p&gt;

&lt;p&gt;Every interviewer is going to ask you questions on the same.&lt;br&gt;
From Competitive Coding to Software development.. You are going to stumble upon Data Structures. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eURILd4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8r8f0xy3ith3b2klfmgg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eURILd4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8r8f0xy3ith3b2klfmgg.gif" alt="interview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I noticed a lot of my classmates including myself was weak in DSA. Hence this blog is to &lt;strong&gt;learn DSA by spending not more than 20 mins per day&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I tried various websites to practice coding problems and I found &lt;a href="https://leetcode.com"&gt;leetcode&lt;/a&gt; very convenient and best for this purpose.&lt;/p&gt;

&lt;p&gt;Before you dive into it make sure you are clear with the following basic concepts-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic Arithmetic and logical Operations&lt;/li&gt;
&lt;li&gt;Loops &lt;/li&gt;
&lt;li&gt;Logical conditions&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find a large collection of tutorials and YouTube videos about these topics in the web.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_NzYFhxH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/piigjyftzrl1kdyra0fx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_NzYFhxH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/piigjyftzrl1kdyra0fx.png" alt="Leetcode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;LeetCode&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://leetcode.com"&gt;leetcode&lt;/a&gt; offers daily challenges which we will be solving and will also discuss the concepts of the same.&lt;/p&gt;

&lt;p&gt;The aim is to complete daily challenges regularly and the best part is &lt;strong&gt;you only need to spend about 20 mins a day&lt;/strong&gt;🥳🥳. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n_wXlp6G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j4pfxhg47yu6qclvoe9s.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n_wXlp6G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j4pfxhg47yu6qclvoe9s.gif" alt="yay"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So lets start!&lt;/p&gt;

&lt;blockquote&gt;
&lt;h2&gt;
  &lt;a href="#learn-dsa"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/kiransbaliga/DSA-with-leetcode/blob/main/LeetCode/Aug_end.ipynb"&gt;LEARN DSA&lt;/a&gt; 
&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#click-on-the-above-link-to-follow-to-my-github-repository-for-an-interactive-python-notebook-and-solved-leetcode-challenges-and-concepts"&gt;
  &lt;/a&gt;
  &lt;strong&gt;click on the above link to follow to my GitHub repository for an interactive python notebook and solved LeetCode challenges and concepts&lt;/strong&gt;.
&lt;/h4&gt;

&lt;p&gt;So what you waiting for? &lt;br&gt;
Come on seize this opportunity!!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#carpe-diem"&gt;
  &lt;/a&gt;
  &lt;em&gt;carpe diem&lt;/em&gt;✨&lt;br&gt;&lt;br&gt;
&lt;/h2&gt;

&lt;pre&gt;
    ❤️ &lt;a href="https://kiransbaliga.me"&gt;Portfolio&lt;/a&gt;  |  📷&lt;a href="https://www.instagram.com/kiransbaliga"&gt;Instagram &lt;/a&gt;  |  💼&lt;a href="https://www.linkedin.com/in/kiransbaliga"&gt;LinkedIn&lt;/a&gt;   |  🐥&lt;a href="https://twitter.com/kiransbaliga"&gt;Twitter&lt;/a&gt;    
&lt;/pre&gt;

</description>
      <category>algorithms</category>
      <category>dsa</category>
      <category>intermediate</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Running Docker Containers created using docker-compose</title>
      <author>ankit-brijwasi</author>
      <pubDate>Wed, 20 Oct 2021 15:37:05 +0000</pubDate>
      <link>https://dev.to/ankitbrijwasi/running-docker-containers-created-using-docker-compose-4lao</link>
      <guid>https://dev.to/ankitbrijwasi/running-docker-containers-created-using-docker-compose-4lao</guid>
      <description>&lt;p&gt;So, Recently I was experimenting with docker, and it occured to me that, how can I access the docker containers that are created using, &lt;code&gt;docker-compose&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;when I used, the &lt;code&gt;docker ps -a&lt;/code&gt; command, I can see all my containers that are created by docker-compose.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kDmra1xh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nb7ywiycnvuzjsbznan4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kDmra1xh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nb7ywiycnvuzjsbznan4.png" alt="docker ps -a result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But when I tried to run a container, It didn't run.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OTg_1tjZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddnvjbgetvj6l13tgih4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OTg_1tjZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddnvjbgetvj6l13tgih4.png" alt="docker run result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The answer to this was quite simple.&lt;/p&gt;

&lt;p&gt;1. To start a container use-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker container start container_name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: The configuration specified for the container in the docker-compose file will be applied to the container by default so, you don't have to do them manually.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zd0RJVJf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2q8m2olnos5xc3hd8qpd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zd0RJVJf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2q8m2olnos5xc3hd8qpd.png" alt="docker ps result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2. To stop a container use-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker container stop container_name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3. To open up bash in the container use-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker container &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; container_name bash
bash-5.1# 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it!&lt;br&gt;
Thanks for reading!&lt;br&gt;
Have a marvelous day!😇&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Home Explore Subscriptions Library</title>
      <author>@evensmaxpierrelouis</author>
      <pubDate>Wed, 20 Oct 2021 15:31:19 +0000</pubDate>
      <link>https://dev.to/pierrelouismax/home-explore-subscriptions-library-4h9l</link>
      <guid>https://dev.to/pierrelouismax/home-explore-subscriptions-library-4h9l</guid>
      <description>&lt;p&gt;SEEKING AlPHA INTEL EVO CORE Micochip | I'm Evensmaxpierrelouis The Chairman of Seeking Alpha (20+ new) Terms of Use PLEASE READ OUR TERMS OF USE CAREFULLY BEFORE YOU USE OUR WEB SITE Member since: 2020 ON SEEING ALPHA Zapier is a AI-PROTECH Haitian Company UPDATE 04/12/2021/For My Spider Internet Explorer Seeking alpha and I'm Evensmaxpierrelouis the Chairman of Seeking alpha &lt;a href="https://casinocoin.im/#"&gt;https://casinocoin.im/#&lt;/a&gt; ...&lt;/p&gt;

&lt;p&gt;Comments (1)&lt;/p&gt;

&lt;p&gt;This page is currently available on our desktop site only. Seeking Alpha Ltd. ("Seeking Alpha" "we," or "us") provides its web site, Seeking Alpha Desktop is now available in Updated mode for my computer Dell &amp;amp; HP AI Smart Computers + CSC | casino coin CSC USD up + located at &lt;a href="https://seekingalpha.com/?Evensmaxpierrelouis"&gt;https://seekingalpha.com/?Evensmaxpierrelouis&lt;/a&gt; The Chairman of Seeking Alpha (together with all other websites, mobile applications and services operated by or on behalf of Seeking Alpha, Ltd., the "Site"), to you, an individual user ("you") for your individual usage, subject to compliance with the terms and conditions set forth herein.&lt;/p&gt;

&lt;p&gt;Agreement By using the Site, you agree to be bound by our Terms of Use (the "TOU"). If you do not agree to the terms and conditions contained in the TOU and Seeking Alpha's privacy policy, please do not access or otherwise use the Site or any information to My Seeking Alpha AI Cyber TV On streaming Network Production Broadcasting on Demand.Global Citizen Live&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.intc.com/news-events/press-releases/rss/MY"&gt;https://www.intc.com/news-events/press-releases/rss/MY&lt;/a&gt; Living EMO is an AI desktop pet robotics/profile/My Spider Internet connection AI Platforms Max Robotic Community Pro Network Seeking Alpha Retailer products Trade Stock exchange market Programming Activated GTA Network Station Programs On-Air on YouTube channel videos live Streaming production Broadcasting corporation Haitian companies streamlabs.com service Tools engined Runs on Probot Data protection Src:Connected&amp;amp;WEB SITE giphy sologenic-logo_white&lt;/p&gt;

&lt;p&gt;SOLO Decentralized Exchange &amp;amp; Wallet Store your cryptocurrencies including SOLO, XRP, and the upcoming Tokenized Assets such as Stocks, ETFs, and commodities all in one decentralized wallet applcompanies amp | Haitian amp companies | &lt;a href="https://xumm.app/?sign/55fca128-63d3-4c42-9089-1cf0987d6c0e"&gt;https://xumm.app/?sign/55fca128-63d3-4c42-9089-1cf0987d6c0e&lt;/a&gt; Seeking Alpha Ltd. ("Seeking Alpha" "we," or "us") provides its web site, Seeking Alpha, located at &lt;a href="https://seekingalpha.com/?Evensmaxpierrelouis"&gt;https://seekingalpha.com/?Evensmaxpierrelouis&lt;/a&gt; Is the chairman of Seeking alpha since: 2020 it's a Edited f434c2b Code devices + casino coin CSC USD +Sologenic DEX is a &lt;a href="https://xumm.app/?sign/55fca128-63d3-4c42-9089-1cf0987d6c0e%7Bhttps://sologenic.org/trade?network=mainnet&amp;amp;market=534F4C4F00000000000000000000000000000000%2BrsoLo2S1kiGeCcn6hCUXVrCpGMWLrRrLZz%2FXRP&amp;amp;Src=s1.ripple.com/XRP-Spread:657806703.01181628905"&gt;https://xumm.app/?sign/55fca128-63d3-4c42-9089-1cf0987d6c0e{https://sologenic.org/trade?network=mainnet&amp;amp;market=534F4C4F00000000000000000000000000000000%2BrsoLo2S1kiGeCcn6hCUXVrCpGMWLrRrLZz%2FXRP&amp;amp;Src=s1.ripple.com/XRP-Spread:657806703.01181628905&lt;/a&gt; "TransactionType": "AccountSet:s.altnet.rippletest.net:51233;set", "Account" : "rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn", "Fee": "12", "Sequence": 5, "Domain": "6578616D706C652E636F6D", "SetFlag": 5, "MessageKey": "03AB40A0490F9B7ED8DF29D246BF2D6269820A0EE7742ACDD457BEA7C7D0931EDB" }-$574,055,701,113.62 +$574,033,685,474.80 | &lt;a href="https://seekingalpha.com/?seekingalpha+symbol/COMP.IND+xeon+e3-1230+v3-Processor+Seekingalpha+code-Intel-evo+core+content/SCS/CSC+USD/www/us/en/architecture-and-technology/optane-dc-persistent-xeon+e3-1230+v3-memory-AI+Assistant+devices-edited-photo-amp+Haitian-amp+Companies-amp&amp;amp;Portfolio+%24574,033,685,474.80+Zapier+is+a+AI-Protech+cyberlink.html"&gt;https://seekingalpha.com/?seekingalpha+symbol/COMP.IND+xeon+e3-1230+v3-Processor+Seekingalpha+code-Intel-evo+core+content/SCS/CSC+USD/www/us/en/architecture-and-technology/optane-dc-persistent-xeon+e3-1230+v3-memory-AI+Assistant+devices-edited-photo-amp+Haitian-amp+Companies-amp&amp;amp;Portfolio+$574,033,685,474.80+Zapier+is+a+AI-Protech+cyberlink.html&lt;/a&gt; | Zapier is a AI-PROTECH Haitian Company UPDATE 04/12/2021/For My Spider Internet Explorer Seeking alpha and I'm Evensmaxpierrelouis the Chairman of Seeking alpha ...&lt;/p&gt;

&lt;p&gt;Comments (1)&lt;/p&gt;

&lt;p&gt;This page is currently available on our desktop site only edited for The Chairman of Seeking Alpha (together&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>ai</category>
    </item>
    <item>
      <title>Good practices for Gitflow - Buenas prácticas para Gitflow </title>
      <author>difilippoagustin</author>
      <pubDate>Wed, 20 Oct 2021 15:29:24 +0000</pubDate>
      <link>https://dev.to/difilippoagustin/good-practices-for-gitflow-buenas-practicas-para-gitflow-d0p</link>
      <guid>https://dev.to/difilippoagustin/good-practices-for-gitflow-buenas-practicas-para-gitflow-d0p</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;If you want to read it in English, then &lt;a href="#english"&gt;click here&lt;/a&gt;!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En este post voy a dejar una serie de recomendaciones para cuando trabajemos con &lt;a href="https://dev.to/t/gitflow"&gt;gitflow&lt;/a&gt;. A mí me han servido y espero que a ustedes también. Sin más preámbulos, empecemos!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nombre-de-las-ramas"&gt;
  &lt;/a&gt;
  Nombre de las ramas:
&lt;/h3&gt;

&lt;p&gt;Nombrar las ramas acorde a la historia de usuario (de ahora en adelante HU), y a sus subtareas, por ejemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Nombre de la HU:
1. HU-1234
Descripción:
Agregar un nuevo botón que sea capaz de descargar un archivo PDF
al hacerle clic

Subtareas:
1. Crear un nuevo botón
2. Agregar funcionalidad al botón creado
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Por lo que vamos a trabajar con las siguientes ramas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HU-1234&lt;/li&gt;
&lt;li&gt;HU-1234_crear-boton&lt;/li&gt;
&lt;li&gt;HU-1234_agregar-funcionalidad-boton&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Creamos la HU-1234 y de la misma sacamos una llamada HU-1234_crear-boton.&lt;/p&gt;

&lt;p&gt;Entonces, hacemos el desarrollo de crear un nuevo botón sobre la rama &lt;strong&gt;HU-1234_crear-boton&lt;/strong&gt;, cuando esté todo listo, la integramos a la principal de la HU, &lt;strong&gt;HU-1234&lt;/strong&gt;.&lt;br&gt;
Una vez hecho esto, creamos la rama correspondiente a la siguiente sub tarea, &lt;strong&gt;HU-1234_agregar-funcionalidad-boton&lt;/strong&gt;, sacandolá desde la rama &lt;strong&gt;HU-1234&lt;/strong&gt; la cual ya tiene creado el botón y repetimos el proceso.&lt;/p&gt;

&lt;p&gt;Cuando esté todo listo, la rama que se va a integrar al circuito sería la &lt;strong&gt;HU-1234&lt;/strong&gt;.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#code-review"&gt;
  &lt;/a&gt;
  Code review:
&lt;/h3&gt;

&lt;p&gt;Consiste en, como su nombre lo indica, revisar el código de alguien más para poder mejorar como desarrolladores y detectar y evitar errores en el código.&lt;br&gt;
Es por eso que siempre se recomienda hacer un code review.&lt;br&gt;
Algunas cosas para tener en cuenta:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No sentirse ofendido por los comentarios recibidos.&lt;/li&gt;
&lt;li&gt;Cerrar las discusiones abiertas que han sido solucionadas.&lt;/li&gt;
&lt;li&gt;No deberías hacer una revisión de código de más de una hora.&lt;/li&gt;
&lt;li&gt;No deberías hacer un code review de muchos cambios, se hace difícil hacer una buena revisión de código.&lt;/li&gt;
&lt;li&gt;De ser posible, hacer el code review junto a la persona que lo desarrolló.&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;
  &lt;a href="#hacer-un-squash-de-los-commits"&gt;
  &lt;/a&gt;
  Hacer un squash de los commits:
&lt;/h3&gt;

&lt;p&gt;Es necesario si queremos tener el historial de commits de nuestras ramas principales lo más limpio posible. Probablemente no queramos tener todos los mensajes de commits en estas ramas, solo nos importará tener un solo commit con la característica añadida o lo que fuere que se trabajó.&lt;/p&gt;

&lt;p&gt;Supongamos que tenemos este merge request con estos commits&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H4zLfsgA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.gitlab.com/ee/user/project/merge_requests/img/squash_mr_commits.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H4zLfsgA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.gitlab.com/ee/user/project/merge_requests/img/squash_mr_commits.png" alt="merge request sin squash"&gt;&lt;/a&gt;&lt;br&gt;
Entonces, luego de hacer un squash, el merge request nos quedaría así&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--asXIn4cZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.gitlab.com/ee/user/project/merge_requests/img/squash_squashed_commit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--asXIn4cZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.gitlab.com/ee/user/project/merge_requests/img/squash_squashed_commit.png" alt="merge request con squash"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#c%C3%B3mo-hacerlo-en-gitlab"&gt;
  &lt;/a&gt;
  Cómo hacerlo en GitLab
&lt;/h4&gt;

&lt;p&gt;Actualmente, esto puede hacerse con un simple clic.&lt;br&gt;
&lt;a href="https://docs.gitlab.com/ee/user/project/merge_requests/squash_and_merge.html"&gt;Link a documentación GitLab&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#c%C3%B3mo-hacerlo-en-github"&gt;
  &lt;/a&gt;
  Cómo hacerlo en Github
&lt;/h4&gt;

&lt;p&gt;Puede hacerse con par de clics&lt;br&gt;
&lt;a href="https://docs.github.com/es/desktop/contributing-and-collaborating-using-github-desktop/managing-commits/squashing-commits"&gt;Link a documentación Github&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#c%C3%B3mo-hacerlo-manualmente"&gt;
  &lt;/a&gt;
  Cómo hacerlo manualmente
&lt;/h4&gt;

&lt;p&gt;Dejo un link a un post sobre &lt;a href="https://www.git-tower.com/learn/git/faq/git-squash/"&gt;cómo hacer un squash&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#merge-requestspull-requests"&gt;
  &lt;/a&gt;
  Merge requests/Pull requests
&lt;/h3&gt;

&lt;p&gt;Hay varios puntos que quiero tocar en esta sección.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#mrpr-claros"&gt;
  &lt;/a&gt;
  MR/PR claros
&lt;/h4&gt;

&lt;p&gt;Es muy importante que los MR/PR tengan un título y descripción clara de lo que se va a integrar, pueden tener texto, links, imágenes y todo lo que sea necesario para que las personas que van a hacer el code review entiendan de qué va el código y tenga contexto de qué se va a integrar.&lt;/p&gt;

&lt;p&gt;No es lo mismo esto:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QzLIfHj4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g7yipsvqlm1x35r3oy5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QzLIfHj4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g7yipsvqlm1x35r3oy5.png" alt="MR sin descripción"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Que esto:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ohfxvNeY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6ir6wae7r50ia38ob2y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ohfxvNeY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6ir6wae7r50ia38ob2y.png" alt="MR con descripción"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#mrpr-chicos"&gt;
  &lt;/a&gt;
  MR/PR chicos:
&lt;/h4&gt;

&lt;p&gt;No crear MR/PR con muchos archivos modificados, hace difícil la tarea de revisar el código, para ello la HU no debe ser muy extensa. Crear ramas para cada sub tarea ayuda a tener MR/PR más chicos y fáciles de revisar.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#pedir-aprobaci%C3%B3n-para-integrar"&gt;
  &lt;/a&gt;
  Pedir aprobación para integrar:
&lt;/h4&gt;

&lt;p&gt;Pedir un proporcional de aprobaciones para integrar una rama. Si el equipo es de 5 desarrolladores, que por lo menos, 3 de ellos lo hayan aprobado para poder integrar. Recordar que mientras más personas participen, menor es el número de fallos que pueden integrarse.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#tener-una-lista-de-to-dos"&gt;
  &lt;/a&gt;
  Tener una lista de TO DO's:
&lt;/h3&gt;

&lt;p&gt;¿TO DO's de qué? De las cosas a tener en cuenta a la hora de crear un MR/PR. Por ejemplo, los tests pasan, la aplicación funciona, no se están introduciendo nuevos errores, etc.&lt;br&gt;
Esto sirve para dos cosas, hacerle saber a los demás del estado del MR/PR y hacernos recordar de las cosas que debemos hacer. Siempre debemos actualizar contra develop la rama que vamos a querer integrar, esta es una tarea sumamente sencilla, tan sencilla que a veces uno se olvida de hacerla.&lt;br&gt;
 Teniendo una lista de TO DO's como esta sería imposible olvidarnos de ello.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[x] Build correcto
[X] Sin errores en el código y en consola
[x] Integración con un proyecto correcta
[x] 70% de cobertura de tests
[x] Tests realizados
[x] Actualizado con develop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Esta lista, iría como parte de la descripción del MR/PR.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#mantener-actualizado-el-repositorio"&gt;
  &lt;/a&gt;
  Mantener actualizado el repositorio:
&lt;/h3&gt;

&lt;p&gt;No dejar ramas ya integradas sin borrar. A medida de que las ramas se vayan integrando deben ser eliminadas, sino nos queda el repositorio "sucio", lleno de ramas que no son necesarias y solo molestan.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#pipelines"&gt;
  &lt;/a&gt;
  Pipelines:
&lt;/h3&gt;

&lt;p&gt;Si es posible, implementarlos. &lt;a href="https://www.atlassian.com/devops/devops-tools/devops-pipeline"&gt;Estos&lt;/a&gt; te permiten ejecutar un ciclo de tareas de manera automática al momento de, por ejemplo, hacer un MR/PR. Teniendo los pipelines correctos se pueden correr las tareas necesarias automáticamente, lo que da más seguridad a los desarrolladores que están realizando la revisión de código, ya que saben que los tests pasan, la cobertura de test es la indicada, el build de la aplicación se hace sin ningún problema, etc.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#mensajes-de-commits"&gt;
  &lt;/a&gt;
  Mensajes de commits
&lt;/h3&gt;

&lt;p&gt;Comenzar el commit con la finalidad del mismo, si se trabajó en un bug fix, que el commit comience con el texto &lt;em&gt;'fix:'&lt;/em&gt;, si se trabajó en un nuevo feature, que comience &lt;em&gt;'feat:'&lt;/em&gt;. &lt;br&gt;
A continuación dejo una tabla con la cuál te podés guiar:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;feat:     Nueva funcionalidad añadida
fix:      Solución a un error
style:    Funcionalidad y actualizaciones relacionados a estilos
refactor: Refactorización de código
test:     Cualquier cosa relacionada a testing
docs:     Cualquier cosa relacionada a documentación
etc.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;El tiempo verbal y el idioma en el que se escriben depende de lo que decida el equipo, lo que sí hay que tener en cuenta, es que todos deben ser iguales. Con respecto al tiempo verbal, hay quienes prefieren describir qué se hizo en el commit, por ejemplo, &lt;em&gt;'feat: &lt;strong&gt;se añadió&lt;/strong&gt; un nuevo botón'&lt;/em&gt; y otros (que es lo más recomendado) que prefieren decir qué va a pasar cuando se integre el commit, relacionandoló a una acción, un comando, por ejemplo,  &lt;em&gt;'feat: &lt;strong&gt;agregar&lt;/strong&gt; nuevo botón'&lt;/em&gt; ¿qué va a hacer el commit cuando se integre a una rama?, va a agregar un nuevo botón.&lt;br&gt;
Por otro lado, a algunos les gusta agregar el número de la HU en el mensaje del commit, por ejemplo &lt;em&gt;'feat: HU-1234 - solucionar error en botón'&lt;/em&gt;. Esto nos permite saber rápidamente sobre qué HU se está trabajando.&lt;/p&gt;

&lt;p&gt;Y vos, aplicabas algunas de éstas prácticas? Aplicás otras que no fueron mencionadas? Dejameló en los comentarios! &lt;/p&gt;







&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;
In this post I will give you some recommendations for when you work with &lt;a href="https://dev.to/t/gitflow"&gt;gitflow&lt;/a&gt;. These have helped me and I hope that help you too. Without any more preambles, let's go!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#branches-name"&gt;
  &lt;/a&gt;
  Branches name:
&lt;/h3&gt;

&lt;p&gt;Name branches according to user story (since now US), and its sub tasks, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;US name:
1. US-1234
Description:
Add a new button that it be available to download a PDF file
when you do click it

Sub tasks:
1. Create a new button
2. Add functionality to new button
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we are going to work with followings branches:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;US-1234&lt;/li&gt;
&lt;li&gt;US-1234_create-button&lt;/li&gt;
&lt;li&gt;US-1234_add-functionality-button&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We create US-1234 and then we extract a new one called US-1234_create-button.&lt;/p&gt;

&lt;p&gt;Then, we do development to create a new button in &lt;strong&gt;US-1234_create-button&lt;/strong&gt; branch, when all is ready, we integrate it to the main branch related to US, &lt;strong&gt;US-1234&lt;/strong&gt;.&lt;br&gt;
Once done this, we create a branch related to the next sub task, &lt;strong&gt;US-1234_add-functionality-button&lt;/strong&gt;, extracting it from &lt;strong&gt;US-1234&lt;/strong&gt; branch, which one has created the button and we repeat the process.&lt;/p&gt;

&lt;p&gt;When all of this is ready, the branch that will be integrated into the flow would be &lt;strong&gt;US-1234&lt;/strong&gt;.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#code-review"&gt;
  &lt;/a&gt;
  Code review:
&lt;/h3&gt;

&lt;p&gt;This consists in, as its name indicates, reviewing the code of someone for can be better developers and for detecting and avoiding mistakes in the code.&lt;br&gt;
As for that, it is always recommended to do a code review.&lt;br&gt;
Some things for consider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don't feel insulted because of the comments received.&lt;/li&gt;
&lt;li&gt;Close the open discussions that have been resolved.&lt;/li&gt;
&lt;li&gt;You shouldn't do a code review that takes more than 1 hour.&lt;/li&gt;
&lt;li&gt;You shouldn't do a code review that has a lot of changes, it gets hard to do a good code review.&lt;/li&gt;
&lt;li&gt;Is it posible, do the code review together with the person who developed the code.&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;
  &lt;a href="#squash-the-commits"&gt;
  &lt;/a&gt;
  Squash the commits:
&lt;/h3&gt;

&lt;p&gt;This is necessary if we want to keep our history clean of changes of our main branches. Probably we don't want to have all commits messages in these branches, we will only care to have one commit with the new feature added or the task done.&lt;/p&gt;

&lt;p&gt;Imagine that we have this merge request with this commits&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H4zLfsgA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.gitlab.com/ee/user/project/merge_requests/img/squash_mr_commits.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H4zLfsgA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.gitlab.com/ee/user/project/merge_requests/img/squash_mr_commits.png" alt="merge request sin squash"&gt;&lt;/a&gt;&lt;br&gt;
So, after to do a squash, the merge request would be like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--asXIn4cZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.gitlab.com/ee/user/project/merge_requests/img/squash_squashed_commit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--asXIn4cZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.gitlab.com/ee/user/project/merge_requests/img/squash_squashed_commit.png" alt="merge request con squash"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#how-to-do-this-in-gitlab"&gt;
  &lt;/a&gt;
  How to do this in GitLab
&lt;/h4&gt;

&lt;p&gt;Actually, this can do it in a simple click&lt;br&gt;
&lt;a href="https://docs.gitlab.com/ee/user/project/merge_requests/squash_and_merge.html"&gt;Link to GitLab documentation&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#how-to-do-this-in-github"&gt;
  &lt;/a&gt;
  How to do this in Github
&lt;/h4&gt;

&lt;p&gt;This can do it in a couple of clicks&lt;br&gt;
&lt;a href="https://docs.github.com/es/desktop/contributing-and-collaborating-using-github-desktop/managing-commits/squashing-commits"&gt;Link to Github documentation&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#how-to-do-this-manually"&gt;
  &lt;/a&gt;
  How to do this manually
&lt;/h4&gt;

&lt;p&gt;I give you a link about to &lt;a href="https://www.git-tower.com/learn/git/faq/git-squash/"&gt;how to squash&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#merge-requestspull-requests"&gt;
  &lt;/a&gt;
  Merge requests/Pull requests
&lt;/h3&gt;

&lt;p&gt;There are some points that I want to cover in this section.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#clear-mrpr"&gt;
  &lt;/a&gt;
  Clear MR/PR
&lt;/h4&gt;

&lt;p&gt;Is very important that the MR/PR have a clear title and description about the things that will be integrated, they can have text, links, images and everything that were necessary with the purpose of the people who will do the code review, understand the code and have context of what thing will be integrated.&lt;/p&gt;

&lt;p&gt;This is not the same:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QzLIfHj4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g7yipsvqlm1x35r3oy5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QzLIfHj4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g7yipsvqlm1x35r3oy5.png" alt="MR sin descripción"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ohfxvNeY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6ir6wae7r50ia38ob2y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ohfxvNeY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6ir6wae7r50ia38ob2y.png" alt="MR con descripción"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#small-mrpr"&gt;
  &lt;/a&gt;
  Small MR/PR:
&lt;/h4&gt;

&lt;p&gt;Don't create MR/PR with a lot of files modified, it do so hard to review the code, for it, the US doesn't be too large. Creating branches for each sub task helps you to have a smaller and easier to review MR/PR.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#ask-for-approbation-for-integrate"&gt;
  &lt;/a&gt;
  Ask for approbation for integrate:
&lt;/h4&gt;

&lt;p&gt;Ask for a proportional of approbations for integrate a branch. If the team has 5 members, at least 3 of them had to approve it for integration. Remember, if more people take part, less is the number of mistakes that can be integrated.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#have-a-to-dos-list"&gt;
  &lt;/a&gt;
  Have a TO DO's list:
&lt;/h3&gt;

&lt;p&gt;¿TO DO's of what? Of things to consider when you create a new MR/PR. For example, the tests are ok, the application works, there are not new errors introduced, etc.&lt;br&gt;
This is useful because two things, let the others know about MR/PR state and allows us to remember things we have to do. Before creating MR/PR, we must update our branch with develop, this is a very easy task, so easy that sometimes you forget do it.&lt;br&gt;
If we have a TO DO's list like this, it would be impossible to forget it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- [x] Build OK
- [x] No errors in the code and console
- [x] Integration with external project
- [x] 70% of test coverage
- [x] Tests done
- [x] Updated with develop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This list would be in the description of MR/PR.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#keep-the-repository-clean"&gt;
  &lt;/a&gt;
  Keep the repository clean:
&lt;/h3&gt;

&lt;p&gt;Erase any integrated branches. As well as the branches are integrated, they must be deleted, otherwise you will get a "dirty" repository, with unnecessary branches whose only purpose is bothering.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#pipelines"&gt;
  &lt;/a&gt;
  Pipelines:
&lt;/h3&gt;

&lt;p&gt;If it's possible, implement it. &lt;a href="https://www.atlassian.com/devops/devops-tools/devops-pipeline"&gt;These&lt;/a&gt; allow you to run a cycle of tasks automatically when, for example, you perform an MR / PR. Having the correct pipelines we can run the necessary tasks automatically, it gives more security to developers who are doing the code review, because they know the tests work, the test coverage is correct, the application's build it's OK, etc.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#commits-messages"&gt;
  &lt;/a&gt;
  Commits messages
&lt;/h3&gt;

&lt;p&gt;Start the commit with the purpose of it, if we worked on a bug fix, then the commit must starts with the text &lt;em&gt;'fix:'&lt;/em&gt;, if we worked on a new feature, it must starts with the text &lt;em&gt;'feat:'&lt;/em&gt;.&lt;br&gt;
Next, I leave you a table with which you can orient yourself:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;feat:     The new feature added
fix:      A bug fix
style:    Feature and updates related to styling
refactor: Refactoring of code
test:     Everything related to testing
docs:     Everything related to documentation
etc.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The verbal tense and the language used depend on what the team decides, what you do have to bear in mind is, they must all be the same. About to the verbal tense, there are who prefer describe what they did it in the commit, for example, &lt;em&gt;'feat: &lt;strong&gt;added&lt;/strong&gt; a new button'&lt;/em&gt; and others (that is the most recommended) that prefer say what will happen when the commit be integrated, relating it to an action, a command, for example, &lt;em&gt;'feat: &lt;strong&gt;add&lt;/strong&gt; new button'&lt;/em&gt;. What will the commit do when be integrated to a branch? It adds a new button.&lt;br&gt;
On the other hand, somebody likes to add the US number in the commit's message, for example &lt;em&gt;'feat: &lt;strong&gt;US-1234&lt;/strong&gt; - fix bug in button'&lt;/em&gt;. This allows us to know quickly in what US it is working.&lt;/p&gt;

&lt;p&gt;And you, did you apply some of these practices? Are you applying another not mentioned here? Let me know in the comments!&lt;/p&gt;

&lt;p&gt;PD: I hope that you understood, I don't have a very good English&lt;/p&gt;

</description>
      <category>gitflow</category>
      <category>productivity</category>
      <category>codequality</category>
      <category>git</category>
    </item>
    <item>
      <title>Creative-Tim Latest Products (ALL Free) - BS5, Chakra UI, React</title>
      <author>Sm0ke</author>
      <pubDate>Wed, 20 Oct 2021 15:24:43 +0000</pubDate>
      <link>https://dev.to/sm0ke/creative-tim-latest-products-all-free-bs5-chakra-ui-react-ne9</link>
      <guid>https://dev.to/sm0ke/creative-tim-latest-products-all-free-bs5-chakra-ui-react-ne9</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents a curated list with the latest &lt;code&gt;open-source&lt;/code&gt; products released under the MIT license by the &lt;a href="https://bit.ly/3fKQZaL"&gt;Creative-Tim&lt;/a&gt; agency.  All templates can be downloaded from Github and used for unlimited hobby &amp;amp; commercial end-products. For newcomers, &lt;code&gt;Creative-Tim&lt;/code&gt; is a well-known agency with 1.5M+ registered users and products crafted in different technologies like React, Vue, React Native, Laravel.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://www.admin-dashboards.com/"&gt;Admin Dashboards&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/material-dashboard?AFFILIATE=128200"&gt;Material Dashboard 2&lt;/a&gt; - open-source Bootstrap 5 Dashboard&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/material-kit?AFFILIATE=128200"&gt;Material Kit 2&lt;/a&gt; - free Bootstrap 5 design system&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/purity-ui-dashboard?AFFILIATE=128200"&gt;Purity UI React Dashboard&lt;/a&gt; - crafted on top of Chakra UI&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/muse-ant-design-dashboard?AFFILIATE=128200"&gt;Muse Ant Design Dashboard&lt;/a&gt; - styled with Ant.Design&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-react?AFFILIATE=128200"&gt;Soft UI Dashboard React&lt;/a&gt; - free Material-UI dashboard&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Disclosure&lt;/em&gt; - &lt;strong&gt;This post contains affiliate links&lt;/strong&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you use these links to buy something (no additional cost to you) I may earn a commission, product, or service. &lt;strong&gt;Thank you!&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#material-dashboard-2"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://www.creative-tim.com/product/material-dashboard?AFFILIATE=128200"&gt;Material Dashboard 2&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Material Dashboard 2 is built with over 60 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, which you can easily modify using SASS files and classes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/material-dashboard?AFFILIATE=128200"&gt;Material Dashboard 2&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://demos.creative-tim.com/material-dashboard/pages/dashboard.html?AFFILIATE=128200"&gt;Material Dashboard 2&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to get inspiration or just show something directly to your clients, you can jump-start your development with our pre-built example pages. You will be able to quickly set up the basic structure for your web project.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wXz_iv-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ir8ta4sg3nxlavsw5ed3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wXz_iv-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ir8ta4sg3nxlavsw5ed3.gif" alt="Material Dashboard 2 - Open-source BS5 Template"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#material-kit-2"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://www.creative-tim.com/product/material-kit?AFFILIATE=128200"&gt;Material Kit 2&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The most complex and innovative UI Kit Made by Creative Tim. Check our latest Freebie Bootstrap 5 UI Kit with a fresh, new design inspired by Google's Material Design 2.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/material-kit?AFFILIATE=128200"&gt;Material Kit 2&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://demos.creative-tim.com/material-kit/index.html?AFFILIATE=128200"&gt;Material Kit 2&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Material Kit 2 is built with over 60 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, which you can easily modify using SASS files and classes.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WVg_8zLy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0n5ebxdv88kqbmktrnop.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WVg_8zLy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0n5ebxdv88kqbmktrnop.png" alt="Material Dashboard 2 - Open-source BS5 UI Kit"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#purity-ui-react-dashboard"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://www.creative-tim.com/product/purity-ui-dashboard?AFFILIATE=128200"&gt;Purity UI React Dashboard&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Purity UI Dashboard is built with over 70 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, and alerts, giving you the freedom of choosing and combining. All components can take variations in color, that you can easily modify using Chakra's style props.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/purity-ui-dashboard?AFFILIATE=128200"&gt;Purity UI React Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://demos.creative-tim.com/purity-ui-dashboard/#/admin/dashboard?AFFILIATE=128200"&gt;Purity UI React Dashboard&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This Free Chakra UI Dashboard is coming with prebuilt design blocks, so the development process is seamless, switching from our pages to the real website is very easy to be done.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SxCzWLS9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zi9p5v5d6sk9xjlxoa14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SxCzWLS9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zi9p5v5d6sk9xjlxoa14.png" alt="Purity Dashboard - Open-source React Template"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#muse-ant-design-dashboard"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://www.creative-tim.com/product/muse-ant-design-dashboard?AFFILIATE=128200"&gt;Muse Ant Design Dashboard&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Muse Ant Design Dashboard is a free Admin Template based on two popular front-end technologies: Ant Design &amp;amp; React. It was built to simplify the developer's work and is comes with a fresh design inspired by Ant Design. All its components are built to fit perfectly with each other, while aligning to the Ant Design concepts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/muse-ant-design-dashboard?AFFILIATE=128200"&gt;Muse Ant Design Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://demos.creative-tim.com/muse-ant-design-dashboard/#/dashboard?AFFILIATE=128200"&gt;Muse Ant Design Dashboard&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This beautiful admin also comes with 5 color filter choices for both the sidebar and the cards (blue, green, red, yellow, and black), an option to have a transparent or fill sidebar, and an option to have a fixed navbar.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qMo2Tl_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kp9o2vh0a2tw9wseq4y7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qMo2Tl_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kp9o2vh0a2tw9wseq4y7.png" alt="Muse Dashboard - Open-source React Template."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#soft-ui-dashboard-react"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-react?AFFILIATE=128200"&gt;Soft UI Dashboard React&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Soft UI Dashboard React is built with over 70 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, which you can easily modify using JSS files and classes&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard-react?AFFILIATE=128200"&gt;Soft UI Dashboard React&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://demos.creative-tim.com/soft-ui-dashboard-react/#/dashboard?AFFILIATE=128200"&gt;Soft UI Dashboard React&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Start your Development with an Innovative Admin Template for Material-UI and React. If you like the look &amp;amp; feel of the hottest design trend right now, Soft UI, you will fall in love with this dashboard! It features a huge number of components built to fit together and look amazing.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ZzwvYM3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0j3t4rnexrry119evfzu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ZzwvYM3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0j3t4rnexrry119evfzu.png" alt="Soft Dashboard - Open-source React Template."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Thanks for reading&lt;/code&gt;! For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;👉 More &lt;a href="https://appseed.us/apps/react"&gt;React Apps&lt;/a&gt; - index provided by AppSeed&lt;/li&gt;
&lt;li&gt;👉 Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a popular article published on Dev&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://blog.appseed.us/react-user-authentication-jwt-token/"&gt;React User Authentication&lt;/a&gt; - JWT Token Authentication&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>creativetim</category>
      <category>opensource</category>
    </item>
    <item>
      <title>box-shadow vs drop-shadow() in CSS</title>
      <author>keshavs759</author>
      <pubDate>Wed, 20 Oct 2021 15:12:20 +0000</pubDate>
      <link>https://dev.to/keshavs759/box-shadow-vs-drop-shadow-in-css-cep</link>
      <guid>https://dev.to/keshavs759/box-shadow-vs-drop-shadow-in-css-cep</guid>
      <description>&lt;br&gt;
&lt;br&gt;


&lt;p&gt;In this article, we will see the difference between the &lt;strong&gt;box-shadow&lt;/strong&gt; and&lt;strong&gt; drop-shadow()&lt;/strong&gt;. The &lt;strong&gt;box-shadow&lt;/strong&gt; is a CSS property but &lt;strong&gt;drop-shadow()&lt;/strong&gt; is a function. Both &lt;strong&gt;box-shadow&lt;/strong&gt; and &lt;strong&gt;drop-shadow()&lt;/strong&gt; are used to cast a shadow. The difference between them is, the box-shadow property creates a rectangular shadow behind an element's entire box, while the drop-shadow() filter function creates a shadow that conforms to the shape (alpha channel) of the image itself.&lt;/p&gt;

&lt;p&gt;In simple words, while working with the transparent images if you use the &lt;strong&gt;drop-shadow()&lt;/strong&gt; filter function it will create a shadow on the image's content and if you use the &lt;strong&gt;box-shadow&lt;/strong&gt; property it will create a rectangular shadow behind an element's entire box.&lt;/p&gt;

&lt;p&gt;In case of text content, &lt;strong&gt;drop-shadow() &lt;/strong&gt;works similar to the &lt;strong&gt;text-shadow&lt;/strong&gt; property.&lt;/p&gt;

&lt;p&gt;Their syntax is,&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;code&gt;filter: drop-shadow(offset-x offset-y blur-radius color);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;box-shadow: offset-x offset-y blur-radius color ;&lt;/code&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Demo Code is,&lt;/strong&gt;&lt;/p&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8" /&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge" /&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&amp;gt;
    &amp;lt;title&amp;gt;box-shadow vs drop-shadow&amp;lt;/title&amp;gt;
    &amp;lt;style&amp;gt;
      .img-1 {
        filter: drop-shadow(0 0 5px black);
      }

      .img-2 {
        box-shadow: 0 0 5px black;
      }
    &amp;lt;/style&amp;gt;
  &amp;lt;/head&amp;gt;

  &amp;lt;body&amp;gt;
    &amp;lt;img
      class="img-1"
      src="https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png"
      alt="google.logo"
    /&amp;gt;
    &amp;lt;img
      class="img-2"
      src="https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png"
      alt="google.logo"
    /&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Also Read:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vidyasheela.com/post/how-to-make-sticky-nav-bar-using-html-and-css"&gt;How to make Sticky Nav Bar Using HTML and CSS?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vidyasheela.com/post/how-to-make-show-password-button-using-javascript"&gt;How To Make Show Password Button Using Javascript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vidyasheela.com/post/how-to-make-a-simple-html-color-code-picker"&gt;How to make a simple HTML Color Code Picker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;





</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Is Hacking legal 🤔⁉️ </title>
      <author>FATRIC</author>
      <pubDate>Wed, 20 Oct 2021 14:56:27 +0000</pubDate>
      <link>https://dev.to/alfarsi2008/is-hacking-legal--4m06</link>
      <guid>https://dev.to/alfarsi2008/is-hacking-legal--4m06</guid>
      <description>&lt;p&gt;firstly we need to know about the hacking, what is it?, What kinds he is?, how it works? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vX70_4wL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x3m2szdfvxhz5zotlrq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vX70_4wL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x3m2szdfvxhz5zotlrq.jpg" alt="img"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-what-is-hacking"&gt;
  &lt;/a&gt;
  1. What is Hacking?
&lt;/h2&gt;

&lt;p&gt;i cant tell you the meaning of hacking becuase it has a Many definitions, i like the google definition&lt;br&gt;&lt;/p&gt;

&lt;blockquote&gt;
Definition: Hacking is an attempt to exploit a computer system or a private network inside a computer. Simply put, it is the unauthorised access to or control over computer network security systems for some illicit purpose.
&lt;/blockquote&gt; 

&lt;p&gt;but in many things the hacking is a legal thing. how? see the below text.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2what-kinds-he-is"&gt;
  &lt;/a&gt;
  2.What kinds he is?
&lt;/h2&gt;

&lt;p&gt;the hacking has many kinds like: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Informations&lt;/li&gt;
&lt;li&gt;Games &lt;/li&gt;
&lt;li&gt;Data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and more...&lt;br&gt; &lt;/p&gt;

&lt;p&gt;But the hackers are divided into two types &lt;strong&gt;moral and unmoral&lt;/strong&gt;&lt;br&gt; &lt;/p&gt;

&lt;p&gt;Moral: its a legal hacking uses to self-defense &amp;amp; the companies use it detect errors.&lt;/p&gt;

&lt;p&gt;Unmoral: its non-legal hacking uses to penetration peoples and companies and collect data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wgFxEL0W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdf7g3626spvcqzufnca.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wgFxEL0W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdf7g3626spvcqzufnca.jpg" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works?
&lt;/h2&gt;

&lt;p&gt;if you ask any hacker how he is hacking his answer will be "Terminal", but wich Terminal? &lt;br&gt;
the best Terminal is &lt;a href="https://www.linux.com/what-is-linux/"&gt;Linux Terminal&lt;/a&gt; &lt;br&gt;
ok.. how? &lt;br&gt;
with &lt;a href="https://opensource.com/resources/what-bash"&gt;bash&lt;/a&gt;...Sometimes &lt;a href="https://www.python.org/doc/essays/blurb/"&gt;Python&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-conclusion"&gt;
  &lt;/a&gt;
  4. Conclusion
&lt;/h2&gt;

&lt;p&gt;the hacking will be a legal thing When it comes to self-defense or work with companies, anything else he is non-legal. &lt;/p&gt;

</description>
      <category>bash</category>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>3 Uncommon but useful HTML elements</title>
      <author>JS Bits with Bill</author>
      <pubDate>Wed, 20 Oct 2021 14:55:46 +0000</pubDate>
      <link>https://dev.to/js_bits_bill/3-uncommon-but-useful-html-elements-jdi</link>
      <guid>https://dev.to/js_bits_bill/3-uncommon-but-useful-html-elements-jdi</guid>
      <description>&lt;h2&gt;1) &lt;code&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;b&gt;abbreviation&lt;/b&gt; &lt;code&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt; element is used to represent an acronym or abbreviation. If you include a &lt;code&gt;title&lt;/code&gt; attribute, the text will be display as a tooltip on hover!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
  The &lt;span class="nt"&gt;&amp;lt;abbr&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;"Product Detail Page"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;PDP&lt;span class="nt"&gt;&amp;lt;/abbr&amp;gt;&lt;/span&gt; provides
  information on a specific product.
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5CJZfSC5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dzynqn10l/image/upload/v1634687036/JS%2520Bits/abbr_tag_oimzss.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5CJZfSC5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dzynqn10l/image/upload/v1634687036/JS%2520Bits/abbr_tag_oimzss.jpg"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;2) &lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt; element will display a progress bar indicator that can be easily controlled with it's &lt;code&gt;value&lt;/code&gt; attribute. The JavaScript in this example will incrementally fill our progress bar every 100ms as shown here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"progress"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Progress:&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;progress&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"progress"&lt;/span&gt; &lt;span class="na"&gt;max=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/progress&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;progress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#progress&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;setProgress&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;setProgress&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;progress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;setProgress&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ccn0LFk---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/dzynqn10l/image/upload/v1634687087/JS%2520Bits/progress_tag_jaqggk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ccn0LFk---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/dzynqn10l/image/upload/v1634687087/JS%2520Bits/progress_tag_jaqggk.gif"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;3) &lt;code&gt;&amp;lt;wbr&amp;gt;&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The word break opportunity &lt;code&gt;&amp;lt;wbr&amp;gt;&lt;/code&gt; element will allow you to specify exactly where a line of text should break when there is overflow. For example, if we have a super long line of text like this URL, we can tell the browser where the text should break if it doesn't fit on one line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
http://is.this.just.real.life.com/is&lt;span class="nt"&gt;&amp;lt;wbr&amp;gt;&lt;/span&gt;/this/just/fantasy/caught/in/a/landslide/no/espace/from/reality
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CGxaMNHt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dzynqn10l/image/upload/v1634687008/JS%2520Bits/wbr_z3gckm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CGxaMNHt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dzynqn10l/image/upload/v1634687008/JS%2520Bits/wbr_z3gckm.jpg"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;b&gt;Yo!&lt;/b&gt; I post byte-sized tips like these often. Follow me if you crave more! 🍿&lt;/p&gt;

&lt;p&gt;I'm on &lt;a href="https://www.tiktok.com/@js_bits"&gt;TikTok&lt;/a&gt;, &lt;a href="https://twitter.com/JS_Bits_Bill"&gt;Twitter&lt;/a&gt; and I have a new &lt;a href="https://jsbits-yo.com/bug-bash/"&gt;debugging course&lt;/a&gt; dropping soon!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>html</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Getting around prop immutability in Vue.js</title>
      <author>Reynold Osei Adade</author>
      <pubDate>Wed, 20 Oct 2021 14:40:39 +0000</pubDate>
      <link>https://dev.to/reynoldadade/getting-around-prop-immutability-in-vuejs-2ggd</link>
      <guid>https://dev.to/reynoldadade/getting-around-prop-immutability-in-vuejs-2ggd</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is for beginner and intermediate developers who have problems wrapping their head around why props are immutable and also why you cant just go ahead and edit it without actually having console errors.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem
&lt;/h2&gt;

&lt;p&gt;Let say you have a component, in that component there is a method that calls an alert and if the alert is confirmed, then an index is found and then splice is done.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//ChildComponent.vue&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;skillsToMerge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;onRemoveSkill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;skill&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;confirmRemoval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Proceed to remove &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;skill&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;confirmRemoval&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;skillsToMerge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;skill&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;skillsToMerge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In any other situation, this would have been a perfectly fine activity, but when it comes to vue.js props this will throw a warning in the console, and if you are using ESlint it will highlight that line as an error&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oAJAZD5Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aee6mqknme7j4j6bahmr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oAJAZD5Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aee6mqknme7j4j6bahmr.png" alt="linting error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-this-a-problem"&gt;
  &lt;/a&gt;
  Why is this a problem?
&lt;/h2&gt;

&lt;p&gt;Immutability for props means it never changes or should not be changed&lt;br&gt;
Props originate from a single data source, that is why it is by default reactive which means that every action taken on the original data source will affect every other child using that data source or prop, now imagine that your data could be changed midway, it wouldn't make for a very reliable data reference. If every component that used the data was able to edit it error fixing would be a tedious task.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;p&gt;Think of props are that data you can copy and read but cant edit, or an article on &lt;a href="https://dev.to"&gt;dev.to&lt;/a&gt; that someone has written, you could read it, and copy and even share it but you cant edit the post, only the author can. Therefore props should only be edited in the pages or components where they originate from. In other words you can only edit it when it is a data variable and not a prop&lt;/p&gt;

&lt;p&gt;This gives us 2 ways of going of editing our props without effectively breaking its immutability&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#solution-1-emitters"&gt;
  &lt;/a&gt;
  Solution 1: Emitters
&lt;/h3&gt;

&lt;p&gt;Emitters are a way for child components to trigger an action in the parent, they are created by using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myEvent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then it the parent do this on the child&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;component&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;myEvent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;doSomething&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/child-component&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will ensure that you can trigger a function in the parent on the data variable without directly editing props&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution-2-functions"&gt;
  &lt;/a&gt;
  Solution 2: functions
&lt;/h3&gt;

&lt;p&gt;Functions or methods are one of the most useful syntaxes in code, and when you realize that functions could be used as props it effectively opens up unlimited possibilities. Lets look at the code below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//ChildComponent.vue&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ChildComponent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;skillsToMerge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="na"&gt;mergeSkills&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;onRemoveSkill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;skill&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;confirmRemoval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Proceed to remove &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;skill&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;confirmRemoval&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mergeSkills&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;skill&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//ParentComponent.vue&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ParentComponent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;skillsToMerge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;mergeSkills&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;skill&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;skillsToMerge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;skill&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;skillsToMerge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lets explain what is happening in the code above, instead of trying to splice the &lt;code&gt;skillsToMerge&lt;/code&gt; prop we create a function inside the parent component where the &lt;code&gt;skillsToMerge&lt;/code&gt; variable was created and edit it there&lt;/p&gt;

&lt;p&gt;The reason it is better to do it this way is that&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It protects your prop by allowing only that function to edit your data outside the parent component. This is quite similar to having private variables.&lt;/li&gt;
&lt;li&gt;It makes code refactoring easier since editing the logic of the &lt;code&gt;mergeSkills&lt;/code&gt; function in the parent component affects every component it is used in.&lt;/li&gt;
&lt;li&gt;If there are a lot of nested child components, emitting events upwards will take much more code to do and it will be quite easy to have an error.&lt;/li&gt;
&lt;li&gt;Finally when using inject-provide using methods becomes so much easier as there isn't a need to pushed events upwards and also methods don't need the reactivity that  props do, hence it will make your code cleaner&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;There are surely more ways to deal with the limitations imposed by props due to its immutability but that limitations is also its greatest benefit due to the security it provides as a single source of data. &lt;br&gt;
This method logic is taken from how Vuex manipulates state using actions, keeping that in mind will make the benefits clearer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I hope this has benefited you. Until next time, happy coding&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
