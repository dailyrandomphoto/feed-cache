<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>this keyword in JavaScript</title>
      <author>Chinmay Mhatre</author>
      <pubDate>Tue, 29 Jun 2021 11:09:13 +0000</pubDate>
      <link>https://dev.to/chinmaymhatre/this-keyword-in-javascript-421d</link>
      <guid>https://dev.to/chinmaymhatre/this-keyword-in-javascript-421d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hey everyone !&lt;br&gt;
I have been recently learning &lt;code&gt;ReactJS&lt;/code&gt;. While learning about class based components I stumbled across the &lt;code&gt;bind&lt;/code&gt; keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;somefunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;somefunction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While trying to understand this line of code, I realized that the binding of the methods is not a React specific thing, It is a JavaScript thing .&lt;/p&gt;

&lt;p&gt;I also realized that to understand the trio of &lt;code&gt;call, apply and bind&lt;/code&gt; which basically do similar things, we need to understand the &lt;code&gt;this&lt;/code&gt; keyword in JavaScript.&lt;/p&gt;

&lt;p&gt;So, today I'd like to discuss about :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is &lt;code&gt;this&lt;/code&gt; ?&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;this&lt;/code&gt; in global scope&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;this&lt;/code&gt; within an object&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;this&lt;/code&gt; within a function&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;this&lt;/code&gt; within classes&lt;/li&gt;
&lt;li&gt;The call, apply and bind methods&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By learning about all these things we get to know why we bind methods in ReactJS.&lt;/p&gt;

&lt;p&gt;Alright! let's get going.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cm_NWQIO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/121888880-25245c00-cd36-11eb-93f8-9f810940cb4e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cm_NWQIO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/121888880-25245c00-cd36-11eb-93f8-9f810940cb4e.gif" alt="plane"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-is-raw-this-endraw-all-about-"&gt;
  &lt;/a&gt;
  So what is &lt;code&gt;this&lt;/code&gt; all about ?
&lt;/h2&gt;

&lt;p&gt;When we use 'this' in our daily conversations it always has a context attached with it, right? For instance, the sentence "This is my house" can only make sense in two ways when you are inside the house or you point to the house you are talking about. &lt;/p&gt;

&lt;p&gt;If in the middle of the street you say "This is my house" it doesn't really make sense, because 'this' isn't really pointing to anything. If you have a picture of your house then regardless of the location you can point to the picture and attach the context to 'this', it will be like 'this house(in the picture) is my house'.&lt;/p&gt;

&lt;p&gt;Similarly in JavaScript, &lt;code&gt;this&lt;/code&gt; keyword will point to something according to the context it is in or we can point it to the thing we want using call, apply and bind . This will make better sense when we see the different contexts &lt;code&gt;this&lt;/code&gt; can be defined in. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#in-global-context"&gt;
  &lt;/a&gt;
  In Global Context
&lt;/h2&gt;

&lt;p&gt;When we create a JavaScript file, even if there are zero lines of code written in the file a few things are created. One of the things created is the window object. The window object contains different properties and methods including things related to DOM. &lt;/p&gt;

&lt;p&gt;When we write the &lt;code&gt;this&lt;/code&gt; keyword in a global context ( outside any kind of function ), by default it points to the &lt;code&gt;window&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;If we create a variable like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;thing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;window thing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we could access it using &lt;code&gt;this.thing&lt;/code&gt; as well as &lt;code&gt;window.thing&lt;/code&gt; since &lt;code&gt;this&lt;/code&gt; points to the window object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;thing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// # "window thing"&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;thing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// # "window thing"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#strict-mode"&gt;
  &lt;/a&gt;
  Strict Mode
&lt;/h2&gt;

&lt;p&gt;Before we proceed to the context of a function, we need to understand strict mode.&lt;/p&gt;

&lt;p&gt;In simple words, strict mode apply more restrictions and rules to JavaScript. Certain things would be allowed in non-strict mode but throw an error in strict mode.&lt;/p&gt;

&lt;p&gt;We can enable strict mode using the statement &lt;code&gt;"use strict"&lt;/code&gt; in the JS file .&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#within-a-function"&gt;
  &lt;/a&gt;
  Within a function
&lt;/h2&gt;

&lt;p&gt;From here onwards, things will get a little weird, so stick with me.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printsomething&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Window object&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;printsomething&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we call &lt;code&gt;this&lt;/code&gt; in a function in non-strict mode it points to the window or the global object. In strict mode &lt;code&gt;this&lt;/code&gt; is undefined and it looses the context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printsomething&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;printsomething&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#within-an-object"&gt;
  &lt;/a&gt;
  Within an object
&lt;/h2&gt;

&lt;p&gt;When we call the &lt;code&gt;this&lt;/code&gt; keyword in an object method, &lt;code&gt;this&lt;/code&gt; points to the object it was defined in. &lt;/p&gt;

&lt;p&gt;For Example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Some other movie&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peanut Butter Falcon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;print&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;// OUTPUT&lt;/span&gt;
&lt;span class="c1"&gt;// Peanut Butter Falcon&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we define a method called &lt;code&gt;print&lt;/code&gt; within the object &lt;code&gt;movie&lt;/code&gt;. The object &lt;code&gt;movie&lt;/code&gt; has a property called &lt;code&gt;name&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;print&lt;/code&gt; we call &lt;code&gt;console.log(this.name)&lt;/code&gt; which would basically point to the &lt;code&gt;name&lt;/code&gt; property of the &lt;code&gt;movie&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;It will &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; print "Some other movie" since the &lt;code&gt;print&lt;/code&gt; function is in the context of the object &lt;code&gt;movie&lt;/code&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-weird-part"&gt;
  &lt;/a&gt;
  The weird part
&lt;/h2&gt;

&lt;p&gt;Remember when I told you that the value of &lt;code&gt;this&lt;/code&gt; depends on the way it was called?&lt;br&gt;
Let us use the same object we used previously to understand this. &lt;/p&gt;

&lt;p&gt;What if we assign the method &lt;code&gt;print&lt;/code&gt; to another variable called &lt;code&gt;globalprint&lt;/code&gt;?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Rocky&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peanut Butter Falcon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;print&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;globalprint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;print&lt;/span&gt;

&lt;span class="nx"&gt;globalprint&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;//output : Rocky&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, the context of &lt;code&gt;this&lt;/code&gt; has changed to the global context since &lt;code&gt;globalprint&lt;/code&gt; is not a method of the &lt;code&gt;movie&lt;/code&gt; object, it is an independent function as we have seen in the function section, points to the global context in &lt;code&gt;non-strict mode&lt;/code&gt; and is undefined in &lt;code&gt;strict mode&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So, the output would be &lt;code&gt;"Rocky"&lt;/code&gt; instead of &lt;code&gt;"Peanut Butter Falcon"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bmWUTodv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/123542591-08d9e380-d768-11eb-82c3-71f3bb64fdba.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bmWUTodv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/123542591-08d9e380-d768-11eb-82c3-71f3bb64fdba.gif" alt="this is fine"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This also applies to callback functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Rocky&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peanut Butter Falcon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;print&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;print&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Output : Rocky&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can try to fake a setTimeout method to look at how this works.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

   &lt;span class="c1"&gt;//wait for 'delay' milliseconds&lt;/span&gt;
   &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Internally the setTimeout method assigns the &lt;code&gt;movie.print&lt;/code&gt; to it's callback argument.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;print&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we saw before, assigning a method to another variable changes it's context. Thus &lt;code&gt;print&lt;/code&gt; will be "undefined" in &lt;code&gt;strict mode&lt;/code&gt; and in &lt;code&gt;non-strict mode&lt;/code&gt; &lt;br&gt;
it will print "Rocky".&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#within-class-methods"&gt;
  &lt;/a&gt;
  Within class methods &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;theatre&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;movie&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is watching &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;peter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;theatre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;interstellar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;jack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;theatre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;inception&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;jack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;//output : peter is watching interstellar&lt;/span&gt;
&lt;span class="nx"&gt;peter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;//output : jack is watching inception&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Within a class &lt;code&gt;this&lt;/code&gt; point to the current instance of the class.&lt;br&gt;
Here the instances being &lt;code&gt;jack&lt;/code&gt; and &lt;code&gt;peter&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, the class methods like &lt;code&gt;display&lt;/code&gt; will lose context if passed as a callback function or assigned to another variable like we saw in the functions section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Class expression and methods such as the constructor or any class methods are always executed in &lt;code&gt;strict mode&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thus callbacks, instead of taking the global context, will be undefined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;
&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// "this" will be undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will be learning about &lt;code&gt;bind&lt;/code&gt; method shortly to fix this problem. To give you an idea , &lt;code&gt;bind&lt;/code&gt; will basically glue value of &lt;code&gt;this&lt;/code&gt; to the display function and it will always be called in that context, fixing the problem of the context getting lost.&lt;/p&gt;




&lt;p&gt;Remember the house analogy I used in the beginning?&lt;br&gt;
We'll now understand the pointing at the picture of the house part, that is basically telling javascript explicitly where you want &lt;code&gt;this&lt;/code&gt; keyword to point rather than JavaScript assigning it for you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#call"&gt;
  &lt;/a&gt;
  call
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;call&lt;/code&gt; method is used to call a function with the &lt;code&gt;this&lt;/code&gt; pointing to a thing of your choice.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;call(thisArg, arg1, ... , argN)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;thisArg&lt;/code&gt; helps the call function to knw on which &lt;code&gt;this&lt;/code&gt; should the function be called.&lt;br&gt;
Rest arguments are the arguments passed to the function.&lt;/p&gt;

&lt;p&gt;Let's understand the use case with an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peanut Butter Falcon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;print&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember this object? &lt;br&gt;
What if we create two movie objects with different movies?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peanut Butter Falcon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;print&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The imitation game&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;print&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see here the &lt;code&gt;print&lt;/code&gt; function is repeated. If there were more of these&lt;br&gt;
objects, we would have to write the same print function multiple times.&lt;/p&gt;

&lt;p&gt;We could use a &lt;code&gt;call&lt;/code&gt; method in this case.&lt;/p&gt;

&lt;p&gt;We would remove the &lt;code&gt;print&lt;/code&gt; method out of the objects and make it as a separate function .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;printThings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peanut Butter Falcon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The imitation game&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we will use the &lt;code&gt;call&lt;/code&gt; method on the &lt;code&gt;print&lt;/code&gt; function with reference to whichever &lt;code&gt;this&lt;/code&gt; value we want&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;printThings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;movie1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// output : "Peanut Butter Falcon"&lt;/span&gt;
&lt;span class="nx"&gt;printThings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;movie2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// output : "The imitation game"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;printThings.call(movie1)&lt;/code&gt; tells JavaScript that we want the above function's &lt;code&gt;this&lt;/code&gt; to point to movie1 object and similarly for movie2.&lt;/p&gt;

&lt;p&gt;It is as though the function is inside the object like given below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peanut Butter Falcon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;print&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#what-if-there-are-parameters-in-the-function-how-do-we-pass-those-"&gt;
  &lt;/a&gt;
  What if there are parameters in the function, how do we pass those ?
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;printThings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is watching &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peanut Butter Falcon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The imitation game&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;print&lt;/code&gt; function now has an parameter called &lt;code&gt;person&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So how do we use the call method and pass the arguments?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;printThings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;movie1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// output : "James is watching Peanut Butter Falcon"&lt;/span&gt;
&lt;span class="nx"&gt;printThings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;movie2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// output : "Peter is watching The imitation game"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first argument is always the &lt;code&gt;this&lt;/code&gt; argument , Rest can be passed after it like it is done in the above example.&lt;/p&gt;

&lt;p&gt;Let's take one more example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;printprintThings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is watching &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peanut Butter Falcon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The imitation game&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;printThings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;movie1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bond&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// output : "James Bond is watching Peanut Butter Falcon"&lt;/span&gt;
&lt;span class="nx"&gt;printThings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;movie2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// output : "Peter Pan is watching The imitation game"&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This example just has one more parameter than the previous one.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#apply"&gt;
  &lt;/a&gt;
  apply
&lt;/h2&gt;

&lt;p&gt;The only difference between &lt;code&gt;call&lt;/code&gt; and &lt;code&gt;apply&lt;/code&gt; is that &lt;code&gt;apply&lt;/code&gt; method calls a function with a &lt;code&gt;this&lt;/code&gt; value and arguments as an array instead of passing the arguments individually like the call method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;argArray&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We could use the previous example and use apply on it instead of call.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;printThings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is watching &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peanut Butter Falcon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;movie2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The imitation game&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;printThings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;movie1&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bond&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;// output : "James Bond is watching Peanut Butter Falcon"&lt;/span&gt;
&lt;span class="nx"&gt;printThings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;movie2&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;// output : "Peter Pan is watching The imitation game"&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It gives the same result.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#bind"&gt;
  &lt;/a&gt;
  bind
&lt;/h2&gt;

&lt;p&gt;Bind is different from call and apply in the sense that bind returns a new function instead of calling the existing function immediately.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;argN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we could bind the function to a &lt;code&gt;this&lt;/code&gt; value .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;printThings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is watching &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;printThings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;printThings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;movie1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bond&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;printThings&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;// output : "James Bond is watching Peanut Butter Falcon"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thus we bind the printThings function to movie1 and we can call it whenever we want. &lt;/p&gt;




&lt;p&gt;Let us take one more example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Saving Private Ryan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;outerFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;innerFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;innerFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;outerFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From what we have seen, the above code won't work, right? Since the context is lost.&lt;/p&gt;

&lt;p&gt;Let us &lt;code&gt;bind&lt;/code&gt; the outerFunction and use &lt;code&gt;call&lt;/code&gt; on the inner function and give them the &lt;code&gt;this&lt;/code&gt; value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Saving Private Ryan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;outerFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;innerFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;innerFunction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="c1"&gt;//Here "this" means the outerFunction&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;outerFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;outerFunction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="c1"&gt;// Here "this" means the global context&lt;/span&gt;
    &lt;span class="nx"&gt;outerFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;//Output : "Saving Private Ryan"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Finally, Let's try to fix the class which we made in the &lt;code&gt;Within a class&lt;/code&gt; section. &lt;a href="#withinClass"&gt;click here to take a look at it again&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;theatre&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;movie&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is watching &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;jack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;theatre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;inception&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;
&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The only thing we have to do to get this working is to bind the method &lt;code&gt;display&lt;/code&gt; to the &lt;code&gt;this&lt;/code&gt; value of the class.&lt;/p&gt;

&lt;p&gt;We can do this either in the constructor&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;theatre&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;movie&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Here&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is watching &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;jack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;theatre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;inception&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;
    &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or bind it while passing it as a callback.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jack&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;//output : jack is watching inception&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;//output : jack is watching inception&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#arrow-functions"&gt;
  &lt;/a&gt;
  Arrow Functions
&lt;/h2&gt;

&lt;p&gt;Arrow functions are another way to solve the binding problem.&lt;/p&gt;

&lt;p&gt;Arrow function have something called as a "lexical scope".&lt;/p&gt;

&lt;p&gt;What that means is that arrow function does not have it's own &lt;code&gt;this&lt;/code&gt; context, it borrows the context from the parent element or the context it was defined in.&lt;/p&gt;

&lt;p&gt;Hence, in the above example the outer function will get it's context from the global context and the inner function will get it's context from the outer function .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Saving Private Ryan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;outerFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;innerFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;movie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;innerFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;outerFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;//Output : "Saving Private Ryan"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#-raw-bind-endraw-in-reactjs"&gt;
  &lt;/a&gt;
  &lt;code&gt;bind&lt;/code&gt; in ReactJS
&lt;/h2&gt;

&lt;p&gt;We have already seen all the javascript specific reasons we bind a function or a method. The same applies for ReactJS.&lt;/p&gt;

&lt;p&gt;In React we generally call a class method using an event handler like &lt;code&gt;onClick&lt;/code&gt;, we pass the method we want to execute as a callback to the handler function.&lt;/p&gt;

&lt;p&gt;That is why the value of &lt;code&gt;this&lt;/code&gt; is lost .&lt;/p&gt;

&lt;p&gt;By binding it explicitly we make sure it doesn't happen.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VGZLeA7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/123542532-bdbfd080-d767-11eb-9a24-4a8ba0343605.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VGZLeA7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/123542532-bdbfd080-d767-11eb-9a24-4a8ba0343605.gif" alt="that's all folk"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you learnt something from this blog.&lt;/p&gt;

&lt;p&gt;Let me know in the comments if you found this helpful .&lt;/p&gt;

&lt;p&gt;See you in the next one :)  &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>JS Confetti library with emojis ⚡️ 🎉</title>
      <author>Vladimir Nikitin</author>
      <pubDate>Tue, 29 Jun 2021 11:01:24 +0000</pubDate>
      <link>https://dev.to/loonywizard/js-confetti-library-with-emojis-2152</link>
      <guid>https://dev.to/loonywizard/js-confetti-library-with-emojis-2152</guid>
      <description>&lt;p&gt;Hi everyone!&lt;/p&gt;

&lt;p&gt;Happy to announce, that my library &lt;a href="https://github.com/loonywizard/js-confetti"&gt;js-confetti&lt;/a&gt; now supports emojis!&lt;/p&gt;

&lt;p&gt;Please look at &lt;a href="https://github.com/loonywizard/js-confetti#readme"&gt;README&lt;/a&gt; for instructions for Installation &amp;amp; Usage&lt;/p&gt;

&lt;p&gt;All you need is to provide &lt;code&gt;emojis&lt;/code&gt; array to &lt;code&gt;addConfetti&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;JSConfetti&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;js-confetti&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;jsConfetti&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;JSConfetti&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;// different emojis&lt;/span&gt;
&lt;span class="nx"&gt;jsConfetti&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addConfetti&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="na"&gt;emojis&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🌈&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;⚡️&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;💥&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;✨&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;💫&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🌸&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// confetti from only unicorn emojis&lt;/span&gt;
&lt;span class="nx"&gt;jsConfetti&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addConfetti&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;emojis&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;🦄&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// different arguments in .addConfetti&lt;/span&gt;
&lt;span class="nx"&gt;jsConfetti&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addConfetti&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;emojis&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;✨&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;💫&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;emojiSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;confettiNumber&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://loonywizard.github.io/js-confetti"&gt;You can see demo here&lt;/a&gt; 🚀&lt;/p&gt;

&lt;p&gt;I will be happy if this will be useful for anybody!&lt;/p&gt;

&lt;p&gt;Feel free to add Issues for feature-requests / bugs&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>ECMAScript 2021 New Updates</title>
      <author>Animesh</author>
      <pubDate>Tue, 29 Jun 2021 11:01:17 +0000</pubDate>
      <link>https://dev.to/animeshmaru/ecmascript-2021-new-updates-1ie9</link>
      <guid>https://dev.to/animeshmaru/ecmascript-2021-new-updates-1ie9</guid>
      <description>&lt;p&gt;&lt;strong&gt;INTRODUCTION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ECMAScript is a part of JavaScript language which is mostly used in web technology, building websites or web apps.  ECMAScript is growing as one of the world's most widely used general-purpose programming languages.  It is majorly used in embedding with web browsers and also adopted for server and embedded applications.&lt;/p&gt;

&lt;p&gt;New updates to ECMAScript will release out this July. The new improvements are introduced to make JavaScript more powerful and also make working easy for developers. It provides new functions, simple ways to do complex works and much more.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6d6-cbx_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gabgbevz3q42eprpi4an.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6d6-cbx_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gabgbevz3q42eprpi4an.gif" alt="ECAMA"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NEW UPDATES&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The new JavaScript features in ECMAScript 2021 are:&lt;br&gt;
       1. Logical assignment operators&lt;br&gt;
           And &amp;amp; Equals (&amp;amp;&amp;amp;=)&lt;br&gt;
           OR &amp;amp; Equals (||=)&lt;br&gt;
           Nullish Coalescing &amp;amp; Equals (??=)&lt;br&gt;
       2. Numeric Separators&lt;br&gt;
       3. String replaceAll&lt;br&gt;
       4. Promise.any&lt;br&gt;
       5. Private class methods&lt;br&gt;
       6. Private Getters and setters&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Logical assignment operators&lt;/strong&gt;&lt;br&gt;
Logical assignment operators introduce new operators which combine logical operators and assignment expressions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And &amp;amp; Equals (&amp;amp;&amp;amp;=)&lt;/strong&gt;&lt;br&gt;
It assigns  when the value  is truthy.&lt;/p&gt;

&lt;p&gt;Previous :&lt;br&gt;
let x = 1;&lt;br&gt;
if(x){&lt;br&gt;
  a = 10;&lt;br&gt;
}&lt;br&gt;
// Output: x = 10&lt;br&gt;
New :&lt;br&gt;
let x = 1;&lt;br&gt;
x &amp;amp;&amp;amp;= 10&lt;br&gt;
// Output: x = 10&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OR &amp;amp; Equals (||=)&lt;/strong&gt;&lt;br&gt;
It assigns when the value is falsy.&lt;/p&gt;

&lt;p&gt;Previous :&lt;br&gt;
let x = 0;&lt;br&gt;
x = x || 10;&lt;br&gt;
// Output: x = 10&lt;br&gt;
New :&lt;br&gt;
let x = 0;&lt;br&gt;
x ||= 10&lt;br&gt;
// Output: x = 10&lt;/p&gt;

&lt;p&gt;Explanation the assignment operation happens only if x is a falsy value.  if x contains 1 which is a truthy value, assignment does not happen. Here x contains 0 therefore assignment happens.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nullish Coalescing &amp;amp; Equals (??=)&lt;/strong&gt;&lt;br&gt;
Symbol ?? is Nullish Coalescing operator in JavaScript. It  checks if a value is null or undefined.&lt;/p&gt;

&lt;p&gt;let x;&lt;br&gt;
let y = 10;&lt;br&gt;
x ??= y;&lt;/p&gt;

&lt;p&gt;Value of x is undefined, therefor the right hand side expression is evaluated and sets x to 10.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Numeric Separators&lt;/strong&gt;&lt;br&gt;
To improve readability and to separate groups of digits, numeric literals use underscores as separators.&lt;/p&gt;

&lt;p&gt;// A billion dollar that I want to earn&lt;br&gt;
const money = 1_000_000_000;&lt;br&gt;
const money = 1_000_000_000.00;&lt;br&gt;
// Also can be used for Binary, Hex, Octal bases&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--baQpR7rT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4s1z324b0hho1q0yf4q.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--baQpR7rT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4s1z324b0hho1q0yf4q.gif" alt="js"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.  String replaceAll&lt;/strong&gt;&lt;br&gt;
If we want to replace all instances of a substring in string than this new method  replaceAll is very useful.&lt;/p&gt;

&lt;p&gt;const s = "You are reading JavaScript 2021 new updates.";&lt;br&gt;
console.log(s.replaceAll("JavaScript", "ECMAScript"));&lt;/p&gt;

&lt;p&gt;// output : You are reading ECMAScript 2021 new updates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Promise.any&lt;/strong&gt;&lt;br&gt;
The Promise.any() method returns a promise that will resolve as soon as one of the promises is resolved. It is opposite of Promise.all() method which waits for all promises to resolve before it resolves.&lt;/p&gt;

&lt;p&gt;Wait, what will happen when all of the promises are rejected, Yes you get that, the method will throw an AggregateError exception with the rejection reason. We have to put the code inside try-catch block.&lt;/p&gt;

&lt;p&gt;const promiseOne = new Promise((resolve, reject) =&amp;gt; {&lt;br&gt;
  setTimeout(() =&amp;gt; reject(), 1000);&lt;br&gt;
});&lt;br&gt;
const promiseTwo = new Promise((resolve, reject) =&amp;gt; {&lt;br&gt;
  setTimeout(() =&amp;gt; reject(), 2000);&lt;br&gt;
});&lt;br&gt;
const promiseThree = new Promise((resolve, reject) =&amp;gt; {&lt;br&gt;
  setTimeout(() =&amp;gt; reject(), 3000);&lt;br&gt;
});&lt;br&gt;
try {&lt;br&gt;
  const first = await Promise.any([&lt;br&gt;
    promiseOne, promiseTwo, promiseThree&lt;br&gt;
  ]);&lt;br&gt;
  // If any of the promises was satisfied.&lt;br&gt;
} catch (error) {&lt;br&gt;
  console.log(error);&lt;br&gt;
  // AggregateError: If all promises were rejected&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Private class methods&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Private method have scope inside the class only so outside the class they are not accessible, see this example&lt;/p&gt;

&lt;p&gt;Previous :&lt;br&gt;
class Me{&lt;br&gt;
  showMe() {&lt;br&gt;
    console.log("I am a programmer")&lt;br&gt;
  }&lt;br&gt;
  #notShowMe() {&lt;br&gt;
    console.log("Hidden informations")&lt;br&gt;
  }&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;const me = new Me()&lt;/p&gt;

&lt;p&gt;me.showMe()&lt;br&gt;
me.notShowMe() &lt;/p&gt;

&lt;p&gt;This code will throw an error that gfg.notShowMe is not a function. This is because #notShowMe() is now a private method inside the class GfG and can only be access via a public method inside the class.&lt;/p&gt;

&lt;p&gt;New :&lt;br&gt;
class Me {&lt;br&gt;
  showMe() {&lt;br&gt;
    console.log("I am a programmer");&lt;br&gt;
  }&lt;br&gt;
  #notShowMe() {&lt;br&gt;
    console.log("Hidden informations");&lt;br&gt;
  }&lt;br&gt;
  showAll() {&lt;br&gt;
    this.showMe()&lt;br&gt;
    this.#notShowMe();&lt;br&gt;
  }&lt;br&gt;
}&lt;br&gt;
const me = new Me();&lt;br&gt;
me.showAll();&lt;/p&gt;

&lt;p&gt;Now we create a new public method called showAll() inside the class Me from this public method we can access the private method #notShowMe()  and since our new method is a public we get this &lt;strong&gt;output :&lt;/strong&gt;&lt;br&gt;
I am a programmer&lt;br&gt;
Hidden informations&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Private Getters and setters&lt;/strong&gt;&lt;br&gt;
Just like private methods, now we can make getters and setters as private so that they can only accessed inside class or by instance created.&lt;/p&gt;

&lt;p&gt;class Me {&lt;br&gt;
  get #Name() {&lt;br&gt;
    return "Animesh"&lt;br&gt;
  }&lt;/p&gt;

&lt;p&gt;get viewName() {&lt;br&gt;
    return this.#Name&lt;br&gt;
  }&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;let name = new Me();&lt;br&gt;
console.log(name.viewName)&lt;/p&gt;

&lt;p&gt;// Output: Animesh&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
JavaScript is most popular language and these frequent updates of new features make it more awesome and development friendly. So Welcome all these new features..&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updates Rocks!&lt;/strong&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>news</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Cohorts and customisation</title>
      <author>Hendrik</author>
      <pubDate>Tue, 29 Jun 2021 10:54:58 +0000</pubDate>
      <link>https://dev.to/hendr_ik/cohorts-and-customisation-1ode</link>
      <guid>https://dev.to/hendr_ik/cohorts-and-customisation-1ode</guid>
      <description>&lt;p&gt;We are building &lt;a href="https://www.offen.dev/?utm_source=forum&amp;amp;utm_campaign=0190"&gt;Offen,&lt;/a&gt; a fair and lightweight web analytics software that treats operators and users as equal parties. Here's a brief glimpse of our achievements over the last ten weeks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customisable-consent-banner"&gt;
  &lt;/a&gt;
  Customisable consent banner
&lt;/h3&gt;

&lt;p&gt;To make it more convenient for operators to implement Offen in their websites, banners can now be freely adapted via CSS. This is done within some limits to ensure readability and functionality of the banner. Discover your inner artist and adapt the consent banner to the design of your website. &lt;a href="https://docs.offen.dev/running-offen/customizing-consent-banner/?utm_source=forum&amp;amp;utm_campaign=0190"&gt;Learn more in our Docs.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#explore-cohorts"&gt;
  &lt;/a&gt;
  Explore cohorts
&lt;/h3&gt;

&lt;p&gt;It is now possible for operators to filter the collected usage data based on URL, referrer, UTM parameters and landings as well as exits. In addition, we have added the tag "None" as a fallback for referrer values that are not supplied. Filters can be set and removed by clicking on the corresponding link element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#engage-in-dialogue"&gt;
  &lt;/a&gt;
  Engage in dialogue
&lt;/h3&gt;

&lt;p&gt;We aim to bring Open and the idea of fair data transfer closer to an interested audience. To do this, we want to engage in a dialogue with operators, users and activists and are looking for suitable events around the world. We are happy to receive recommendations for relevant lectures and conferences. Got something in mind that we should apply for? &lt;a href="https://www.offen.dev/?utm_source=forum&amp;amp;utm_campaign=0190"&gt;Please let us know.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>privacy</category>
    </item>
    <item>
      <title>How creating CSS Art can make you a better developer</title>
      <author>Andrew Baisden</author>
      <pubDate>Tue, 29 Jun 2021 10:26:59 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/how-creating-css-art-can-make-you-a-better-developer-4cd5</link>
      <guid>https://dev.to/andrewbaisden/how-creating-css-art-can-make-you-a-better-developer-4cd5</guid>
      <description>&lt;p&gt;Creating CSS Art is one of the best ways to improve your front-end programming skills as a developer. It is good for those who are just starting out and it is also a good way for more experienced developers to test their skills. The great thing about CSS Art is that it is an area that is not widely adopted outside of social media and personal projects. It is seen as more of a niche area and just a great way to have some fun. However it is so much more than that and while it might not have a huge practical appeal in a commercial environment. It definitely allows a developer to show off their creativity in an unconventional way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conventional-thinking"&gt;
  &lt;/a&gt;
  Conventional thinking
&lt;/h2&gt;

&lt;p&gt;The typical front-end developer is expected to build UI/UX and design website mock-ups. Sure this is a great way to see how good a developer can replicate a design in the real world but it does not leave much room for experimentation, imagination and personal creativity. Technical tests are always the same with a developer having to replicate a design. This is where CSS Art can shine because I don't think there are any companies doing it and it is a fun challenge which pushes the developer to the limit as they are forced to learn and figure out some cool new ways to create designs that would normally be created in a design tool.&lt;/p&gt;

&lt;p&gt;This new way of thinking also helps you to dive deeper into CSS and it can improve your understanding of layout patterns such as Flexbox and CSS Grid. There are some pretty cool designers out there who have made some stunning CSS Art for social media and Code Pen. Honorable mentions to &lt;a class="mentioned-user" href="https://dev.to/prathkum"&gt;@prathkum&lt;/a&gt;
 and @AprilynneA on Twitter who have grown a following by creating CSS Art.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#turning-my-computer-desk-into-css-art"&gt;
  &lt;/a&gt;
  Turning my computer desk into CSS Art
&lt;/h2&gt;

&lt;p&gt;After seeing so many people creating CSS Art and turning them into Twitter headers I decided to give it a go myself. It felt like a right of passage or a ritual that every front-end developer should go through on their journey. I took a picture of my computer desk and then tried to replicate it in HTML/CSS you can see the result below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dZJrSH3a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1624893725/Bedroom_Desk_muytlx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dZJrSH3a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1624893725/Bedroom_Desk_muytlx.jpg" alt="https://res.cloudinary.com/d74fh3kw/image/upload/v1624893725/Bedroom_Desk_muytlx.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ebk-1hXf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1624893723/CSS_Desk_e2hhhi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ebk-1hXf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1624893723/CSS_Desk_e2hhhi.png" alt="https://res.cloudinary.com/d74fh3kw/image/upload/v1624893723/CSS_Desk_e2hhhi.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-london-bus-out-of-css-art"&gt;
  &lt;/a&gt;
  Creating a London Bus out of CSS Art
&lt;/h2&gt;

&lt;p&gt;The next piece of CSS Artwork that I decided to create was that for a London Bus. This time I did not try to replicate the whole picture my goal was to just create the bus which you can see below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZhOWWb2l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1624893726/London_Bus_zwssiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZhOWWb2l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1624893726/London_Bus_zwssiw.png" alt="https://res.cloudinary.com/d74fh3kw/image/upload/v1624893726/London_Bus_zwssiw.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Qpfg60n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1624893723/CSS_London_Bus_icf5i1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Qpfg60n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1624893723/CSS_London_Bus_icf5i1.png" alt="https://res.cloudinary.com/d74fh3kw/image/upload/v1624893723/CSS_London_Bus_icf5i1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bringing-captain-americas-shield-to-life-using-css-art"&gt;
  &lt;/a&gt;
  Bringing Captain America's Shield to life using CSS Art
&lt;/h2&gt;

&lt;p&gt;This was actually the first real CSS Art that I created. It is pretty simple but it is also animated which makes it look really cool. I was inspired to create it after watching a few episodes of The Falcon and The Winter Soldier on Disney+.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TeyADzZy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1624895115/captain-america_hwx8hr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TeyADzZy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1624895115/captain-america_hwx8hr.gif" alt="https://res.cloudinary.com/d74fh3kw/image/upload/v1624895115/captain-america_hwx8hr.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I would highly advise all front-end developers to at least try creating something using CSS Art. Even those of you who think you have no design background can increase your design experience by attempting it. My advice for beginners would be to start with something simple and small. Don't try to create something too complicated to begin with otherwise you will just get frustrated. And start with an easy design so for example something that has a lot of basic shapes like squares and rectangles. Then all you have to do is put them together as a composition. It is as easy as Photoshop when you think of it like that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CSS Art Positives&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is a good fun way to learn CSS&lt;/li&gt;
&lt;li&gt;An alternative to the traditional build a website test&lt;/li&gt;
&lt;li&gt;Allows you to tap into your creative side&lt;/li&gt;
&lt;li&gt;Gives you something unique to share with the community&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I really hope that you enjoyed reading this article and learned something from it. As a content creator and technical writer I am passionate about sharing my knowledge and helping other people reach their goals. Let's connect across social media you can find all of my social media profiles and blogs on &lt;a href="https://linktr.ee/andrewbaisden"&gt;linktree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Peace ✌️&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>css</category>
    </item>
    <item>
      <title>Learning Python-Basic course: Day 6, The While Loop and more questions🤓!</title>
      <author>Aatmaj</author>
      <pubDate>Tue, 29 Jun 2021 10:26:21 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-basic-course-day-6-the-while-loop-and-more-questions-k23</link>
      <guid>https://dev.to/aatmaj/learning-python-basic-course-day-6-the-while-loop-and-more-questions-k23</guid>
      <description>&lt;h2&gt;
  &lt;a href="#welcome-today-is-the-day-six-of-our-course-the-syllabus-for-today-is-learning-about-the-while-loop-and-solving-some-exciting-questions-like-gcd-amp-lcm-and-the-collatz-conjecture"&gt;
  &lt;/a&gt;
   🤟WELCOME 👍 Today is the day six of our course! 🔥 The syllabus for today is learning about the while loop  and solving some exciting questions like 👉 GCD &amp;amp; LCM 💎 and the Collatz Conjecture😃
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;The While Loop&lt;/strong&gt;-&lt;br&gt;
The While Loop in Python shares a similer syntax like others. If the conditions are true, the loop is executed, else skipped over.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;conditions&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
 &lt;span class="c1"&gt;#statements executed if the conditions are true.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is an example-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;0
1
2
3
4
5
6
7
8
9
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Unlike C, there is no do-while in Python. Neither is switch case.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is a sample program to find the GCD and LCM of two numbers--&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Please enter first number "&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Please enter second number "&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;dividend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
&lt;span class="n"&gt;divisor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;

&lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dividend&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;divisor&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;dividend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;divisor&lt;/span&gt;
    &lt;span class="n"&gt;divisor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rem&lt;/span&gt;
    &lt;span class="n"&gt;rem&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dividend&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;divisor&lt;/span&gt;
&lt;span class="n"&gt;gcd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;divisor&lt;/span&gt;
&lt;span class="n"&gt;lcm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;gcd&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"gcd= "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;gcd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"  lcm= "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;lcm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In Python, one more thing is added known as while - else. With the else statement, we can run a block of code when the condition is false. This block is run only once. Syntax-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;#statement executed if condition is true
&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;#statement executed if condition is false.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The program below will make things clear.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; 
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"i is not less than 10 anymore"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is a sample program in which the sum of numbers is shown by both methods, for loop and while loop-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Please enter a number "&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;count2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &lt;span class="n"&gt;count2&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;
 &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Please enter a number 100
5050
5050
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is another sample program of the Collatz conjuncture&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Please enter a number "&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One thing to note here is the indentation. If we put else in same indent level as while, it will become a while-else type of statement and will give wrong results. Hence, always be careful in matching the else statements and the corresponding indents. It is useful many times to leave space equal to four spaces or one tab in between indents to avoid confusion and make the code clear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Infinite Loops&lt;/strong&gt;-We can create infinite loops in Python using the while loop as shown&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
 &lt;span class="c1"&gt;#statements
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;BOOM!!!💥 Be careful to terminate the program well while using the While loop.&lt;br&gt;
We can transform the Collatz code into a infinite loop and give a breaking condition as shown-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Please enter a number "&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Exercise-&lt;br&gt;
1) Write a program to reverse a number (any-digit). &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python/blob/9b055262ba02689148f92cd1410de617e8df2dc5/Basic/Day%206/Exercise%20solutions/Exercise%201.py"&gt;Answer here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) Write a program to find the factors of a number using prime factorization.&lt;br&gt;
&lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python/blob/edf39fadf07031b7865674b7f58624a52151414e/Basic/Day%206/Exercise%20solutions/Exercise%202.py"&gt;Answer here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3)Modify the prime number program we did in day 4 to replace for loop by while loop. &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python/blob/7f0e2a24f2e934e4272bbe2aa283fb140bfb7277/Basic/Day%206/Exercise%20solutions/Exercise%205.py"&gt;Answer here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More questions on the 'For' loop-&lt;br&gt;
1) Write a program to output the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1
2
1,2
3
1,3
1,2,3
4
1,4
1,2,4
1,2,3,4
5
1,5
1,2,5
1,2,3,5
1,2,3,4,5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Mind the trailing commas... &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python/blob/3ce873a5bba4e987fea1c81187efbf4395c5e9c5/Basic/Day%206/Exercise%20solutions/Exercise%203.py"&gt;Answer here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) &lt;strong&gt;CODING CHALLENGE ⚔️&lt;/strong&gt;&lt;br&gt;
swap two letters in the above solution to give this output-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1
1,1
1,2
1,2,1
1,2,2
1,2,3
1,2,3,1
1,2,3,2
1,2,3,3
1,2,3,4
1,2,3,4,1
1,2,3,4,2
1,2,3,4,3
1,2,3,4,4
1,2,3,4,5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python/blob/bb69a9ab8e05381e6f49139541e1ceef58d94332/Basic/Day%206/Exercise%20solutions/Exercise%204.py"&gt;Answer here&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;✌️So friends that's all for now. 😊 Hope you all are having fun.😎 Please let me know in the comment section below 👇. And don't forget to like the post if you did. 😍 I am open to any suggestions or doubts. 🤠 Just post in the comments below or gmail me. 😉&lt;br&gt;
Thank you all👍&lt;/p&gt;




&lt;p&gt;🤫psst... follow me on &lt;a href="https://dev.to/aatmaj"&gt;dev.to&lt;/a&gt; and &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python"&gt;GitHub&lt;/a&gt; for updates...&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>learningpython</category>
    </item>
    <item>
      <title>Adding 100 CSS loaders to the collection of — 500 CSS loaders 🏆</title>
      <author>Temani Afif</author>
      <pubDate>Tue, 29 Jun 2021 10:06:37 +0000</pubDate>
      <link>https://dev.to/afif/adding-100-css-loaders-to-the-collection-of-500-css-loaders-2a3p</link>
      <guid>https://dev.to/afif/adding-100-css-loaders-to-the-collection-of-500-css-loaders-2a3p</guid>
      <description>&lt;p&gt;500 single element CSS loaders. Pure CSS loaders with only one div. The biggest collection of loading animation using only CSS. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/M7mmYF0WnCfeAnjwnJ/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/M7mmYF0WnCfeAnjwnJ/giphy.gif" alt="500 loaders"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ok, ok, let's stop this introduction and move to the real fun 😜&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-thin"&gt;The Thin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-colorful-ii"&gt;The Colorful II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-dots-v"&gt;The Dots V&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-line-ii"&gt;The Line II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-cut"&gt;The Cut&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-arrow"&gt;The Arrow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-shapes-iv"&gt;The Shapes IV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-clones-ii"&gt;The Clones II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-blob"&gt;The Blob&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-fullscreen"&gt;The Fullscreen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#the-thin"&gt;
  &lt;/a&gt;
  The Thin
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/BaRaqRQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-colorful-ii"&gt;
  &lt;/a&gt;
  The Colorful II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/qBmBJmw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-dots-v"&gt;
  &lt;/a&gt;
  The Dots V
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/rNmNqwr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-line-ii"&gt;
  &lt;/a&gt;
  The Line II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/eYWYPEj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-cut"&gt;
  &lt;/a&gt;
  The Cut
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/MWmWPEG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-arrow"&gt;
  &lt;/a&gt;
  The Arrow
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/wvdvYPJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-shapes-iv"&gt;
  &lt;/a&gt;
  The Shapes IV
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/OJmJBzb?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-clones-ii"&gt;
  &lt;/a&gt;
  The Clones II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/LYyYgew?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-blob"&gt;
  &lt;/a&gt;
  The Blob
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/LYyYgQw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-fullscreen"&gt;
  &lt;/a&gt;
  The Fullscreen
&lt;/h3&gt;

&lt;p&gt;Some people also like fullscreen loaders 😉&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/mdWNNjy?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/YzZmmMP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/JjNPKRE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/xxdKEKp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/NWjKbxa?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/poPzNqG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/LYyPLge?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/WNjeOqb?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/zYwOdop?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/bGWbxVG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#this-is-not-the-end"&gt;
  &lt;/a&gt;
  This is not the end
&lt;/h3&gt;

&lt;p&gt;500 CSS loaders is a good milestone but I will not stop there. I have explored the "one div loader" and it's time to push the limit of CSS. I won't say more so stay tuned for next collection!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/RfEbMBTPQ7MOY/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/RfEbMBTPQ7MOY/giphy.gif" alt="I'll be back"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Working with APIs</title>
      <author>Dominik Gorczyca</author>
      <pubDate>Tue, 29 Jun 2021 09:41:57 +0000</pubDate>
      <link>https://dev.to/dgx32123/working-with-apis-39ad</link>
      <guid>https://dev.to/dgx32123/working-with-apis-39ad</guid>
      <description>&lt;p&gt;&lt;strong&gt;Module 7&lt;/strong&gt; behind me and I finally got to learn about Basic Web Architecture and APIs decently! I also made a &lt;strong&gt;&lt;a href="https://dominikgorczyca.github.io/Javascript-Quiz/"&gt;Quiz&lt;/a&gt;&lt;/strong&gt; project that took me far longer than it should because of burnout. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First Part&lt;/strong&gt; was hard but I learned a lot, it explained how  internet works and introduced many terms like: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DNS(Domain name system)&lt;/li&gt;
&lt;li&gt;ISP(Internet user provider)&lt;/li&gt;
&lt;li&gt;Request

&lt;ul&gt;
&lt;li&gt;Request types(GET, POST, DELETE)&lt;/li&gt;
&lt;li&gt;Web protocols(http, ftp)&lt;/li&gt;
&lt;li&gt;Domain name &lt;/li&gt;
&lt;li&gt;ports&lt;/li&gt;
&lt;li&gt;path&lt;/li&gt;
&lt;li&gt;query argument&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Response

&lt;ul&gt;
&lt;li&gt;status(200, 500)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;TLS &amp;amp; SSL &lt;/li&gt;
&lt;li&gt;Routing&lt;/li&gt;
&lt;li&gt;Caching &lt;/li&gt;
&lt;li&gt;App &amp;amp; Database&lt;/li&gt;
&lt;li&gt;Hosting &amp;amp; Serverless &lt;/li&gt;
&lt;li&gt;Microservices &lt;/li&gt;
&lt;li&gt;Firewall &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Second Part&lt;/strong&gt; also wasn't easy but it finally cleared up a lot about APIs and Promises and explaining how to use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GET and POST requests&lt;/li&gt;
&lt;li&gt;fetch &lt;/li&gt;
&lt;li&gt;JSON&lt;/li&gt;
&lt;li&gt;.then &amp;amp; .catch &lt;/li&gt;
&lt;li&gt;async &amp;amp; await &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Third Part&lt;/strong&gt; gave few challenges to practice my newfound knowledge further and introduced more methods for fetch and promises:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;.finally&lt;/li&gt;
&lt;li&gt;Promise.all &amp;amp; Promise.race&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This part was a bit &lt;em&gt;confusing&lt;/em&gt; as concepts to complete challenges weren't introduced until you completed them. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Forth Part&lt;/strong&gt; explained properly syntax from previous part and as the last project of this module was &lt;a href="https://scrimba.com/scrim/co2bc434d93c27606a5d6798f"&gt;Beer app&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;After completing it I went to make APIs Quiz &lt;em&gt;(link on top of the post)&lt;/em&gt; but because I couldn't find any API with desires questions I was forced to use basic JavaScript questions.&lt;br&gt;
There aren't many questions so I decided to spice it up a bit and  create a &lt;strong&gt;timer&lt;/strong&gt;, try to be as fast as possible and share in the  comment how many points did you managed to get! &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
      <category>quiz</category>
    </item>
    <item>
      <title>Top 20 Website to get a Remote Job or freelance work fast</title>
      <author>programmer-list</author>
      <pubDate>Tue, 29 Jun 2021 09:23:49 +0000</pubDate>
      <link>https://dev.to/programmerlist/top-20-website-to-get-a-remote-job-or-freelance-work-fast-4n8</link>
      <guid>https://dev.to/programmerlist/top-20-website-to-get-a-remote-job-or-freelance-work-fast-4n8</guid>
      <description>&lt;p&gt;Work from Home is progressively moving and can be valuable to both the business and the representative. Representatives can discover more balance between fun and serious activities, and their fulfillment expands efficiency, which fulfills the business as well as saving expenses.&lt;/p&gt;

&lt;p&gt;Luckily, there are more far off positions than any other time. To help you track down your next incredible job, we've accumulated a rundown of the 32 best distant occupation sites. On these locales, you can get a 100% distant line of work and never need to drive to work again.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#flexjobs"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.flexjobs.com/"&gt;FlexJobs&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CxTMOPYX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623910857767/hyado7AgW.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CxTMOPYX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623910857767/hyado7AgW.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best job search site for hand-screened flexible and remote jobs (work from home jobs) since 2007. Plus get resume, coaching and career help. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#just-remote"&gt;
  &lt;/a&gt;
  &lt;a href="https://justremote.co/"&gt;Just Remote&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CdxvIFta--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623910975436/xEdxoN9hi.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CdxvIFta--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623910975436/xEdxoN9hi.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Discover Remote Jobs from around the world. Give up the commute, work remotely and do what you love, daily, from anywhere. Find your perfect remote development, design, sales or marketing job today.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remoteok"&gt;
  &lt;/a&gt;
  &lt;a href="https://remoteok.io/"&gt;RemoteOK&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2rVuRva0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623988210202/gzhJK29h1.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2rVuRva0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623988210202/gzhJK29h1.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Searching for a distant work? Remote OK® has 45,789+ far off positions as a Developer, Designer, Copywriter, Customer Support Rep, Sales Professional, Project Manager and that's just the beginning! Discover a vocation where you can work distantly from anyplace.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#weworkremotely"&gt;
  &lt;/a&gt;
  &lt;a href="https://weworkremotely.com/"&gt;WeWorkRemotely&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aKiwjGLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623988378330/JzyqUofzV.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aKiwjGLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623988378330/JzyqUofzV.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Track down the top individuals in the most unforeseen spots: Hire distant! We Work Remotely is the best spot to secure and list distant positions that aren't confined by drives or a specific geographic region. Peruse a large number of far off maintain sources of income today.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hubstaff-talent"&gt;
  &lt;/a&gt;
  &lt;a href="https://talent.hubstaff.com/"&gt;Hubstaff Talent&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gwJ5Dwn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623988410588/HhIZ7PhZQ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gwJ5Dwn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623988410588/HhIZ7PhZQ.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find and hire the highest quality freelancers from around the world - for free. Choose from thousands of developers, digital marketers, creatives and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solidgigs"&gt;
  &lt;/a&gt;
  &lt;a href="https://solidgigs.com/"&gt;SolidGigs&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ku2T0XXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623989770506/j1AoLcd3E.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ku2T0XXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623989770506/j1AoLcd3E.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best independent positions conveyed directly to your inbox. Land hand-picked position cautions for the best 1% of independent positions on the web. Exchange your most exceedingly awful customers for probably the best organizations on the planet.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-muse"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.themuse.com/"&gt;The Muse&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bCHnBFne--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623989890623/XeBytyRXj.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bCHnBFne--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623989890623/XeBytyRXj.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find jobs at the best companies hiring near you and get free career advice.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#workew"&gt;
  &lt;/a&gt;
  &lt;a href="https://workew.com/"&gt;Workew&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vHmXWqtr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623989968141/In1HY7BEg.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vHmXWqtr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623989968141/In1HY7BEg.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remote job board and hiring platform with remote work opportunities to become digital nomad: customer service, sales, marketing, developer, design and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#working-nomads"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.workingnomads.co/jobs"&gt;Working Nomads&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2CZfwT8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990012998/7Aft-Nbkl.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2CZfwT8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990012998/7Aft-Nbkl.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remote jobs for digital working nomads. Start your telecommuting career and work remotely from home or places around the world.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#idealist"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.idealist.org/en/"&gt;Idealist&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Lu8lJ5f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990100713/BcTHo2pqQ.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Lu8lJ5f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990100713/BcTHo2pqQ.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Idealist connects millions of idealists – people who want to do good – with opportunities for action and collaboration all over the world.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#search-remotely"&gt;
  &lt;/a&gt;
  &lt;a href="https://searchremotely.com/"&gt;Search Remotely&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TtpsCJPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990136556/dgvAHC84_.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TtpsCJPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990136556/dgvAHC84_.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whether you’re a remote company or a remote worker, Search Remotely lets you hire talent, search remote jobs and learn new skills.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remote4me"&gt;
  &lt;/a&gt;
  &lt;a href="https://remote4me.com/"&gt;Remote4me&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9pG9-_u0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990161875/rKiKN8Otk.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9pG9-_u0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990161875/rKiKN8Otk.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Browse 100% remote jobs by profession (Developer, Designer, Copywriter, Customer Support Rep, Project Manager) and tech stack. 20+ job boards in one place&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remotive"&gt;
  &lt;/a&gt;
  &lt;a href="https://remotive.io/"&gt;Remotive&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fhofunXv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990213277/ck_n2lbB0.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fhofunXv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990213277/ck_n2lbB0.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Secure the best distant position, filling in as a designer, client care rep, item or deals proficient... See openings in our classes. All positions are hand curated and permit far off work. We serve the best work from home positions in mainstream classes. Ability is all over the place, work distantly today!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rise"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.joinrise.co/"&gt;Rise&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mLOXlcnC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990236164/5RYpUWy3r.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mLOXlcnC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990236164/5RYpUWy3r.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Freelance independent consulting jobs in marketing, design, sales, technology, remote, work from home. The coveted community for high-skilled flexible work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamite-jobs"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.dynamitejobs.com/"&gt;Dynamite Jobs&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AibN6JQG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990266048/ABIHTVaYr.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AibN6JQG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990266048/ABIHTVaYr.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find Here Remote Jobs You Actually Want Every Week. Advance your remote career and break out of the office. Start Your Remote Career Now!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nodesk"&gt;
  &lt;/a&gt;
  &lt;a href="https://nodesk.co/remote-jobs/developer/"&gt;NoDesk&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y8eokyEa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990294968/WwflgJmRV.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y8eokyEa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990294968/WwflgJmRV.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Peruse far off designer occupations at top distant organizations that offer you the opportunity to telecommute or places all throughout the planet. Apply to the entirety of the far off designer occupations straightforwardly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pangian"&gt;
  &lt;/a&gt;
  &lt;a href="https://pangian.com/"&gt;Pangian&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IkySB1-5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990355074/v6-sdDoxv.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IkySB1-5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990355074/v6-sdDoxv.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;REMOTE WORK | Pangian is the fastest-growing remote work community for professionals and companies around the world! Remote Work for all!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#skip-the-drive"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.skipthedrive.com/"&gt;Skip The Drive&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0_D4wUng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990330015/SAgFPCOBDN.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0_D4wUng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990330015/SAgFPCOBDN.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SkipTheDrive records distant and telecommute occupations, for example, client support, bookkeeping, advancement and some more. Discover passage level and low maintenance occupations as well!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remote-hub"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.remotehub.com"&gt;Remote Hub&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---BXQTZwh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990385044/XBSvNe7kM.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---BXQTZwh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623990385044/XBSvNe7kM.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Track down the best counterparts for far off positions, construct your portfolio and expert associations, and test groundbreaking thoughts and items.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flexjobs"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.flexjobs.com/"&gt;FlexJobs&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CxTMOPYX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623910857767/hyado7AgW.png%3Fauto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CxTMOPYX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623910857767/hyado7AgW.png%3Fauto%3Dcompress" alt=" "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best quest for new employment site for hand-screened adaptable and distant positions (telecommute occupations) since 2007. Also get resume, training and profession help.&lt;/p&gt;




&lt;p&gt;While these sites just element remote jobs, you can likewise secure distant positions on conventional occupation sheets, similar to Monster, Indeed, or CareerBuilder. Essentially type "remote work," or "work from home" in the pursuit field, alongside any rules. &lt;/p&gt;

&lt;p&gt;You ought to likewise look at organization sites themselves. On the off chance that you have your sights set on a specific association, check its employing page every once in a while for openings.&lt;/p&gt;

</description>
      <category>remote</category>
      <category>developer</category>
      <category>programming</category>
    </item>
    <item>
      <title>Run tests with -race flag in GoLand 🏎</title>
      <author>Daniil Maslov</author>
      <pubDate>Tue, 29 Jun 2021 09:14:06 +0000</pubDate>
      <link>https://dev.to/s0xzwasd/run-tests-with-race-flag-in-goland-512j</link>
      <guid>https://dev.to/s0xzwasd/run-tests-with-race-flag-in-goland-512j</guid>
      <description>&lt;p&gt;To understand &lt;code&gt;-race&lt;/code&gt; flag better, we can refer to the &lt;a href="https://golang.org/doc/articles/race_detector"&gt;Go documentation&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Data races are among the most common and hardest to debug types of bugs in concurrent systems. A data race occurs when two goroutines access the same variable concurrently and at least one of the accesses is a write.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is easy to use via the command line interface. So, how to use &lt;code&gt;-race&lt;/code&gt; flag in GoLand with tests? Is it possible to use &lt;code&gt;-race&lt;/code&gt; always in tests? Here you go.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-raw-race-endraw-flag-to-a-specific-test"&gt;
  &lt;/a&gt;
  Add &lt;code&gt;-race&lt;/code&gt; flag to a specific test
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Navigate to a test file, click on the gutter icon near the test name and select &lt;em&gt;Modify Run Configuration&lt;/em&gt;. &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--41SKyLIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/56b5m1k7it2w94cndjpm.png" alt="Gutter menu with the Modify Run Configuration entry"&gt;
&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;-race&lt;/code&gt; entry to the &lt;em&gt;Go tool arguments&lt;/em&gt; field. &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nSvc_Ir0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hop4mzqpq7h7n54gev93.png" alt="Example of adding race flag"&gt;
&lt;/li&gt;
&lt;li&gt;Save changes and run the configuration again.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#add-raw-race-endraw-flag-to-all-tests"&gt;
  &lt;/a&gt;
  Add &lt;code&gt;-race&lt;/code&gt; flag to all tests
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Navigate to &lt;em&gt;Help | Find Action&lt;/em&gt; in the main menu (&lt;em&gt;Shift+Shift&lt;/em&gt; by shortcuts) and type &lt;em&gt;Edit Configurations&lt;/em&gt;, press Enter.&lt;/li&gt;
&lt;li&gt;Select the &lt;em&gt;Edit configuration templates&lt;/em&gt; option, find &lt;em&gt;Go Test&lt;/em&gt;. &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pDjZeS52--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjnc72eu8q140na5mv0d.png" alt="Option is left-bottom position"&gt;
&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;-race&lt;/code&gt; entry to the &lt;em&gt;Go tool arguments&lt;/em&gt; field. Pay attention that changing a template does not affect the existing configuration and you should add the flag manually to the same field.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Congratulations! 🎉 Now your tests use &lt;code&gt;-race&lt;/code&gt; flag and you can see warnings from the compiler. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jcc7muiX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ttbm6s7er6m1o8uqnia8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jcc7muiX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ttbm6s7er6m1o8uqnia8.png" alt="Example of warning from the compiler"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>goland</category>
      <category>go</category>
      <category>tests</category>
      <category>configuration</category>
    </item>
    <item>
      <title>Best Javascript Libraries you should know in 2021</title>
      <author>SnowBit</author>
      <pubDate>Tue, 29 Jun 2021 09:09:28 +0000</pubDate>
      <link>https://dev.to/snowbit7/best-javascript-libraries-you-should-know-in-2021-2enh</link>
      <guid>https://dev.to/snowbit7/best-javascript-libraries-you-should-know-in-2021-2enh</guid>
      <description>&lt;p&gt;Algolia Places: &lt;/p&gt;

&lt;p&gt;Algolia Places is a JavaScript library that will help you autocomplete forms, and it specializes in addresses. You can even add a map to the search and display the location, which is incredibly useful. It’s wonderfully accurate and super fast, which will definitely increase the user experience on your site. Check it out.&lt;br&gt;
&lt;a href="https://community.algolia.com/places/"&gt;https://community.algolia.com/places/&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Anime JS:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Animation and microinteractions are all the rage these days, and anime.js is a flexible JavaScript library that can help you add some dashes of motion to your site. It works with CSS, Individual Transforms, SVG, DOM attributes, and JavaScript Objects, making it super versatile and perfect for almost any project. Check it out.&lt;br&gt;
&lt;a href="https://animejs.com/"&gt;https://animejs.com/&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;AOS – Animate On Scroll:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Working on a one-page parallax site? The Animate on Scroll JavaScript library can help you add some sweet animations as a user scrolls down the page. From fade effects to static anchor placements, this library will help you create a delightful site design that keeps users engaged. Check it out.&lt;br&gt;
&lt;a href="https://michalsnik.github.io/aos/"&gt;https://michalsnik.github.io/aos/&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Bideo JS:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Full-screen videos make for excellent site backgrounds, and that’s exactly what Bideo.js is for. This JavaScript library makes it super easy to add a video background that looks good on every screen size and scales super smoothly. Check out their site to see a great example of how it works and to test how it scales with your window size.&lt;br&gt;
&lt;a href="https://rishabhp.github.io/bideo.js/"&gt;https://rishabhp.github.io/bideo.js/&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Chart JS:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Chart.js is a delightful JavaScript library for designers and developers to add beautiful charts to a site. It offers lots of different types of charts, plus the ability to mix them in a single space to provide a really interesting data set. It also has some animation capabilities, which instantly makes data a lot more fun to consume.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Choreographer JS:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Choreographer-js is a simple JavaScript library for animating CSS. It’s easy to use, but it can really help you achieve some cool and complex CSS animations on your site. Check out the site for a colorful example and to learn how to get started.&lt;br&gt;
&lt;a href="https://christinecha.github.io/choreographer-js/"&gt;https://christinecha.github.io/choreographer-js/&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Cleave JS:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Have you ever used a form field that formatted your content while you were typing? Think of a phone number field, transforming your 1234567890 into (123) 456-7890. Cleave.js is a JavaScript library that can add that same functionality to your site. It a super simple concept, but it makes for a wonderful user experience, and consistent data when you receive form submissions. Check it out.&lt;br&gt;
&lt;a href="http://nosir.github.io/cleave.js/"&gt;http://nosir.github.io/cleave.js/&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;D3 JS:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you’re the type of person who just loves data, this JavaScript library was made for you. D3.js manipulates documents based on their content, and then will help you bring that data to life by using HTML, SVG, and CSS. For example, you can generate HTML tables or create interactive SVG charts. If you’re looking to display some data on your site, this is the way to do it.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Popper JS:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This JavaScript library will help you create delightful poppers on your site. If you’re wondering what a popper is, think of it like a little thought bubble bursting from an element! Popper.js gives you some fantastic ways to arrange them, make them stick to elements, and keep them operating smoothly on any screen size. Check it out.&lt;br&gt;
&lt;a href="https://popper.js.org/"&gt;https://popper.js.org/&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Three JS:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For anyone interested in 3D design, Three.js is a really fun JavaScript library to play around with. It can help you create incredible projects and bring your designs to life! Remember that awesome Paper Planes site where you could throw paper airplanes with your phone? Three.js helped bring that to life. To see more awesome projects (or start creating some yourself) go here&lt;br&gt;
&lt;a href="https://threejs.org/"&gt;https://threejs.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out our blog: &lt;a href="https://tiny-editor.netlify.app/blog/best-javascript-libraries-you-should-know-in-2021/"&gt;https://tiny-editor.netlify.app/blog/best-javascript-libraries-you-should-know-in-2021/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out our online web text editor:&lt;a href="http://tiny-editor.netlify.app/"&gt;http://tiny-editor.netlify.app/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>techtalks</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>🦊 GitLabCheatsheet - 5 -GitLabCI - Order &amp; optimize jobs</title>
      <author>Jean-Phi Baconnais</author>
      <pubDate>Tue, 29 Jun 2021 09:06:59 +0000</pubDate>
      <link>https://dev.to/jphi_baconnais/gitlabcheatsheet-5-gitlabci-order-optimize-jobs-2646</link>
      <guid>https://dev.to/jphi_baconnais/gitlabcheatsheet-5-gitlabci-order-optimize-jobs-2646</guid>
      <description>&lt;p&gt;Tips to order and optimize your jobs, this is the program of the fifth Cheatsheet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://jeanphi-baconnais.gitlab.io/img/cheatsheet/GitLabCheatsheet-5-GitLabCI-OrderAndOptimizeJobs.jpg" alt="5 -GitLabCI - Order &amp;amp; optimize jobs"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fh_62nlw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jeanphi-baconnais.gitlab.io/img/cheatsheet/GitLabCheatsheet-5-GitLabCI-OrderAndOptimizeJobs.jpg" alt="5 -GitLabCI - Order &amp;amp; optimize jobs"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will create others cheatsheet. Tell me if you have comments or suggest about those cheatsheet 😃.&lt;/p&gt;

</description>
      <category>gitlab</category>
      <category>devops</category>
      <category>tutorial</category>
      <category>cheatsheet</category>
    </item>
  </channel>
</rss>
