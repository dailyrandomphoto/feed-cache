<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to stay productive as a developer</title>
      <author>Krowser Web Services </author>
      <pubDate>Mon, 14 Jun 2021 23:43:45 +0000</pubDate>
      <link>https://dev.to/krowser/how-to-stay-productive-as-a-developer-53md</link>
      <guid>https://dev.to/krowser/how-to-stay-productive-as-a-developer-53md</guid>
      <description>&lt;p&gt;Since I am not getting paid by the hour (except in some cases), staying productive and healthy as a developer is critical. Here are some things I've learned over the years that help me stay on top of things.&lt;/p&gt;

&lt;p&gt;I am a software developer that loves to code. I am also a person that likes to spend time with family and friends, go out for a run, take in a good movie and enjoy the great outdoors. Unfortunately, my work responsibilities make it difficult to do all of these things because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I have deadlines&lt;/li&gt;
&lt;li&gt;I need to ensure the quality of my work&lt;/li&gt;
&lt;li&gt;I have multiple projects that require constant attention&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since I am not getting paid by the hour (except in some cases), staying productive and healthy as a developer is critical. Here are some things I've learned over the years that help me stay on top of things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;It's OK to say "no"&lt;/strong&gt;&lt;br&gt;
I have a problem with saying "yes" too often, especially when the person asking is a co-worker or someone I know socially. If I'm not careful, it will affect my productivity. Sometimes it's more efficient to take on less work than it is to rush through everything and start falling behind on deadlines due to fatigue. I'm still learning how to say no but in the meantime, I have found that being upfront about my schedule and priorities helps everyone be better organized and effective, myself included.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Don't forget about yourself&lt;/strong&gt;&lt;br&gt;
There are plenty of people out there who aren't afraid to make sacrifices for their families or careers but that doesn't mean you have to be one of them. Having good relationships with your family and friends is important; they help you make better decisions at work and can even protect you from burnout during stressful times. When you feel like you are in need of a break, take one. Whether it's lunchtime or the end of the day, just taking 15 minutes for yourself can do wonders for your productivity (and sanity) levels in the long run.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Prioritize tasks&lt;/strong&gt;&lt;br&gt;
When you have many different tasks on your schedule, prioritize them by importance and urgency, and put the most important ones first. Be realistic about how much time you can spend on each task without neglecting other responsibilities. If something is not a high priority but is taking away from something that is more important, see if there's a way to end or modify it for the good of your overall goals. This will keep things from getting out of control later on.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Make use of tools&lt;/strong&gt;&lt;br&gt;
There are many tools available online that provide great support for developers such as Google Docs/Drive (for collaboration), Slack (for communication), Buffer (for scheduling social media posts), Trello (for task management), and Github (to manage code revisions). These tools allow teams to stay connected without having constant meetings or phone calls all day long; using these types of tools has actually made me more productive by reducing some of the distractions in my life instead of adding more distractions via email messages/texts/phone calls/meetings etc... The key is training others on how these systems work so they also understand why certain functions don't exist within those tools - for example, slack has no direct way to post status updates via Twitter so another tool is needed, for example, Zapier or IFTTT.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Learn from mistakes&lt;/strong&gt;&lt;br&gt;
The best way to improve is to learn from your mistakes. If you find yourself working on something that's taking longer than expected, don't just say "well I'll get it done tomorrow," instead take the time to stop, reflect and think about where you went wrong. Maybe you didn't plan enough time for testing or maybe you didn't know what was required in the first place so took a "shot in the dark" approach. Either way, try not to repeat that mistake again and if possible, come up with some sort of documentation explaining exactly what needs to be done and how long it should take so others can pick up where you left off without needing a ton of hand-holding or supervision.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Find a good work/life balance&lt;/strong&gt;&lt;br&gt;
If you are constantly working late nights and weekends, it's going to affect your personal relationships and your health. If you don't have any free time to do things you enjoy, then you will burn out sooner or later. I've been burned out before and in some cases, it was due to personal reasons I could not control (such as the death of a family member) but for the most part, it was from not listening to my body's warning signs when I was overworked. To avoid this, make sure you get enough sleep (7 hours is recommended), eat healthy food, exercise regularly, and take breaks during the workday even if others don't seem to notice or care that you're gone - they just may appreciate it more than they realize!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Make time for fun activities&lt;/strong&gt;&lt;br&gt;
During hackathons or marathons where we work around the clock on a project for 24+ hours straight, drinking energy drinks and having snacks delivered can help keep us going but sometimes the best thing for productivity is taking a break! Taking 15-30 minutes here or there throughout the day for yourself can boost your overall morale which helps in other areas of life such as work, school, and home, etc... It also helps to deal with bad news better if something goes wrong during the day because at least I know there is some downtime coming up in my schedule that will allow me to recover mentally so I'm not carrying those feelings into future tasks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Learn how to say "no"&lt;/strong&gt;&lt;br&gt;
This one goes hand-in-hand with #1 above. Saying "yes" too much can lead to burnout just as easily as saying "no" too often. Try cutting down what is asked of you by doing more research on what needs to be done before accepting any new responsibilities. This way if it turns out you cannot complete all requests in a timely manner then others won't be waiting around while you try and figure everything out at once. Be upfront about your workload so co-workers/clients understand what's going on instead of simply giving an excuse such as "I'll get it done tomorrow." In many cases, people will be respectful if you explain clearly why something isn't possible without going into details unless they ask for more detail first.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Final Thoughts&lt;/strong&gt;&lt;br&gt;
While it may not be possible to avoid burnout 100% of the time, it's important to recognize when you're starting to feel overwhelmed and take steps to mitigate the situation as soon as possible. If you don't, you could end up taking your work home with you, or worse yet, quitting your job altogether.  By knowing the warning signs and how to prevent burnout before it happens, you'll be able to utilize your energy more effectively and enjoy your work more than ever before.&lt;/p&gt;

</description>
      <category>career</category>
      <category>codenewbie</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Crypto Mining is Killing All Free CI/CD Platforms</title>
      <author>Davide 'CoderDave' Benvegn√π</author>
      <pubDate>Mon, 14 Jun 2021 23:33:09 +0000</pubDate>
      <link>https://dev.to/n3wt0n/crypto-mining-is-killing-all-free-ci-cd-platforms-4chc</link>
      <guid>https://dev.to/n3wt0n/crypto-mining-is-killing-all-free-ci-cd-platforms-4chc</guid>
      <description>&lt;p&gt;We all know that crypto mining is negatively impacting many things in the world. And now it's ruining something else in a way no one has seen coming. This is why mining crypto currencies is killing every free CI / CD platform.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;As usual, if you are a &lt;strong&gt;visual learner&lt;/strong&gt;, or simply prefer to watch and listen instead of reading, here you have &lt;strong&gt;the video&lt;/strong&gt;, which to be fair is much &lt;strong&gt;&lt;em&gt;more complete&lt;/em&gt;&lt;/strong&gt; than this post.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9TOJqJSHVvI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/9TOJqJSHVvI"&gt;Link to the video: https://youtu.be/9TOJqJSHVvI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you rather prefer reading, well... let's just continue :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;p&gt;Today I have to talk about something I'd prefer not to, but unfortunately this is happening, and it's happening hard. So let's talk about crypto mining and its deleterious effect on free CI/CD platform.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-work-on-mining"&gt;
  &lt;/a&gt;
  A Work on Mining
&lt;/h3&gt;

&lt;p&gt;We all know crypto mining, the process in which transactions for various forms of cryptocurrency are verified and added to the blockchain digital ledger, using the computing power of computers or graphics card, and for which miners are rewarded with crypto currencies directly.&lt;/p&gt;

&lt;p&gt;We probably all know that this is affecting many aspects of our current time. For example, the current and past generation of graphics cards are so good and fast for mining that it's basically impossible to buy a graphics card right now, or if you find one the price is crazy. All the supply is basically taken up by miners, and few very lucky gamers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-mining-cryptocurrencies-affect-ci-platforms"&gt;
  &lt;/a&gt;
  How Does Mining Cryptocurrencies Affect CI Platforms
&lt;/h3&gt;

&lt;p&gt;Ok, but how does this affect the CI/CD platforms? I'm glad you asked.&lt;/p&gt;

&lt;p&gt;Due to the lack of availability of graphics cards, and the constantly increasing number of miners thanks to the rise in value of cryptocurrencies, miners have started trying to find alternative ways for mining. &lt;/p&gt;

&lt;p&gt;They first started using Cloud services but quickly realized that the cost for always running large instances was higher than the gain they were able to get. And this is when they started looking at the free CI providers. &lt;/p&gt;

&lt;p&gt;Hosted Build agents are fairly powerful, having to take care of compilation etc., and most platforms have a free tier, especially for public repositories. Powerful machines for free, a miner's dream come true.&lt;/p&gt;

&lt;p&gt;And this is exactly the problem. They have started writing script, pushing them to public repositories, and take advantage of those free CI agents to run their mining software. And as the different providers started blocking those attempts, miners adapted and started writing fairly complex software and scripts to "mask" the real reasons why they were using the repos and CI agents.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#an-example"&gt;
  &lt;/a&gt;
  An Example
&lt;/h3&gt;

&lt;p&gt;There are countless examples, but here is one just to make you understand the gravity of the problem. There was a user on GitHub who created a simple repo, which seemed a legit one at a first look.&lt;/p&gt;

&lt;p&gt;In the repo this user had the definition for 5 different CI providers, including GitHub Actions, CircleCI, TravisCI and others, and all were configured in automatic CI. The user had roughly 1 commit every hour, which in turn kicked off all 5 of those CI... and the script that was run was in fact a crypto miner. You can imagine how much resources that user alone has consumed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-effects"&gt;
  &lt;/a&gt;
  The Effects
&lt;/h3&gt;

&lt;p&gt;And in fact, if you have noticed your hosted CI agent being slower than usual or picking up jobs with a greater delay most likely it's because of this. And not only on free CI, but also on paid CI platforms... because the resources are the same. But if the problem was just some slowness, we wouldn't be here talking about this.&lt;/p&gt;

&lt;p&gt;The problem is much bigger. So much so that basically all the CI providers have stopped offering free tiers or, in the best cases, they've implemented great limitations on the services.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#industry-reactions"&gt;
  &lt;/a&gt;
  Industry Reactions
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#azure-devops"&gt;
  &lt;/a&gt;
  Azure DevOps
&lt;/h4&gt;

&lt;p&gt;Microsoft is not providing anymore free concurrent CI for their Azure Pipelines for new organizations. If the users want them, they need to request for them and provide additional information to verify they are eligible.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wIv9CT-S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bvey4m7t1qwh6416hkq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wIv9CT-S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bvey4m7t1qwh6416hkq.png" alt="Azure DevOps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#travisci"&gt;
  &lt;/a&gt;
  TravisCI
&lt;/h4&gt;

&lt;p&gt;TravisCI is taking it a step further, completely removing the free tier, and giving to existing users a trial with an amount of free credits. When the credits are exhausted, if a user wants to keep using CI then they will have to buy a paid plan.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sTtUUt1B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pf0t2rpdy1m04u37q10g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sTtUUt1B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pf0t2rpdy1m04u37q10g.png" alt="TravisCI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#gitlab"&gt;
  &lt;/a&gt;
  GitLab
&lt;/h4&gt;

&lt;p&gt;GitLab, takes a different approach. &lt;/p&gt;

&lt;p&gt;First, they require new users to verify their account adding a credit card to their account before they can start using the hosted CI agents. Existing users are not currently required to insert a credit card number, but they may be in future.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c0YRaKcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uvmwqbmbqr9uxnctdb8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c0YRaKcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uvmwqbmbqr9uxnctdb8.png" alt="GitLab"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Second, they are removing the unlimited free minutes that were previously assigned to public projects, and setting a limit to 400 free minutes instead.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5E6ncqBe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awd6anryw7uruvpzgn73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5E6ncqBe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awd6anryw7uruvpzgn73.png" alt="GitLab"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#circleci"&gt;
  &lt;/a&gt;
  CircleCI
&lt;/h4&gt;

&lt;p&gt;Circle CI has never had a completely free plan, but only a free grant of 2500 credits per month. &lt;/p&gt;

&lt;p&gt;While they haven't change that, at least not yet, they 've published an article saying that they have a whole team, and I quote, "&lt;em&gt;of security experts, operations engineers, data scientists, and developers whose ongoing work comprises spotting and eradicating abuse of our platform&lt;/em&gt;".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fqr3yrb5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukvd2c7ob6km6y8t0mzd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fqr3yrb5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukvd2c7ob6km6y8t0mzd.png" alt="CircleCI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This of course is a huge cost for the company, and if things will continue like this they will need to find a way to get the money back... you make of this what you want.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#github-actions"&gt;
  &lt;/a&gt;
  GitHub Actions
&lt;/h4&gt;

&lt;p&gt;Finally, GitHub Actions is the only provider that I'm aware of which has still a completely free unlimited use of their CI and has not changed that.&lt;/p&gt;

&lt;p&gt;However, they did mention in a post on their public blog that the Actions teams have spent thousands of hours fighting against miners. As in the CircleCI case, this comes at a cost. Having engineering teams focusing on fighting miners most likely means they have less time to focus on improving and developing the service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UH9S-A6R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dvbrq7spynqd9y9qbutr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UH9S-A6R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dvbrq7spynqd9y9qbutr.png" alt="GitHub Actions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And they are also saying that they are rolling out features and improvements to help maintainer of Open Source projects having a better control of their CI when it comes to Pull Requests and Forks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ISaDViod--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wxso1qf2n9gi3nccqjov.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ISaDViod--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wxso1qf2n9gi3nccqjov.png" alt="GitHub Actions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I could continue for long, because similar things are happening from each and every CI provider.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The Solution?
&lt;/h3&gt;

&lt;p&gt;Is there anything we can do to avoid this? Unfortunately, I'm afraid the answer is no.&lt;/p&gt;

&lt;p&gt;Providers can do their best to enforce terms of service and take other measures, but as long as it's profitable and untraceable to make such attacks, miners will continue to become more sophisticated and circumvent measures.&lt;/p&gt;

&lt;p&gt;The only hope is for crypto networks to fully disable the current computation-based mining as a way to earn new coins, switching entirely to a proof-of-stake (POS) validation model. It sounds impossible, but it is actually already happening. Ethereum in fact recently announced they will do exactly that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;Let me know in the comment section below what you think about this sensitive topic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; üöÄ for more content:&lt;/p&gt;

&lt;p&gt;üìΩ &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
‚òï &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
üíñ &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
üåê &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
üëï &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
üë¶üèª &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
üê±‚Äçüíª &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
üë≤üèª &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
üë¥üèª &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
üîâ &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9TOJqJSHVvI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>devops</category>
      <category>cicd</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Explicit ESM in Node.js with .mjs</title>
      <author>Tierney Cyren</author>
      <pubDate>Mon, 14 Jun 2021 21:40:43 +0000</pubDate>
      <link>https://dev.to/bnb/explicit-esm-in-node-js-with-mjs-3ooh</link>
      <guid>https://dev.to/bnb/explicit-esm-in-node-js-with-mjs-3ooh</guid>
      <description>&lt;p&gt;A while ago, Node.js introduced support for ECMAScript Modules (ESM). ESM is the &lt;strong&gt;standardized&lt;/strong&gt; modules implementation that's been built-in to JavaScript. This differs rather significantly from CommonJS (CJS), which is the module system that Node.js has shipped with for over a decade that make them &lt;em&gt;relatively&lt;/em&gt; incompatible.&lt;/p&gt;

&lt;p&gt;There are a number of different components of Node.js that have been intentionally structured to allow you to use &lt;strong&gt;standard&lt;/strong&gt; (as in, how the ECMAScript Specification defines it) ESM by default and extend/augment that experience if you'd like to.&lt;/p&gt;

&lt;p&gt;Today, I want to get into one of the baisc elements of ESM in Node.js: the &lt;code&gt;.mjs&lt;/code&gt; and &lt;code&gt;.cjs&lt;/code&gt; extensions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-raw-mjs-endraw-and-raw-cjs-endraw-"&gt;
  &lt;/a&gt;
  Why &lt;code&gt;.mjs&lt;/code&gt; (and &lt;code&gt;.cjs&lt;/code&gt;)?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-quick-answer"&gt;
  &lt;/a&gt;
  The Quick Answer
&lt;/h3&gt;

&lt;p&gt;The straightforward answer to this is that having different file extensions allows you to be explicit in how you want to run your code - &lt;code&gt;.mjs&lt;/code&gt; will always be run as ESM, &lt;code&gt;.cjs&lt;/code&gt; will always be run as CommonJS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-answer-with-context"&gt;
  &lt;/a&gt;
  The Answer With Context
&lt;/h3&gt;

&lt;p&gt;Because of the differences in how ESM and CommonJS work, Node.js runs them differently by default. This results in the runtime needing an indicator about which way you want to run your code - as ESM or as CommonJS.&lt;/p&gt;

&lt;p&gt;There's three different ways that this indicator could be expressed: explicitly, implicitly, and by default.&lt;/p&gt;

&lt;p&gt;To not break over a decade of projects and over a million modules that are expecting to Just Work, the default the project landed on was CommonJS - sensible, especially when you consider millions of lines of code and multitudes of applications already running in this way.&lt;/p&gt;

&lt;p&gt;The way to &lt;em&gt;explicitly&lt;/em&gt; assert that the code you're running is ESM and should be run as such is to just use the &lt;code&gt;.mjs&lt;/code&gt; file extension (which, if you're concerned, is also supported in web browsers as long as the &lt;code&gt;Content-Type: text/javascript&lt;/code&gt; header is sent and is actually &lt;a href="https://v8.dev/features/modules#mjs"&gt;recommended by V8&lt;/a&gt;). The official overview of this is documented in the &lt;a href="https://nodejs.org/api/packages.html#packages_determining_module_system"&gt;determining module system&lt;/a&gt; section of the Node.js Packages documentation.&lt;/p&gt;

&lt;p&gt;When you use &lt;code&gt;.mjs&lt;/code&gt;, Node.js &lt;em&gt;knows&lt;/em&gt; that you've written ESM and will parse your JavaScript as such. The same is true for &lt;code&gt;.cjs&lt;/code&gt; - Node.js &lt;em&gt;knows&lt;/em&gt; that &lt;code&gt;.cjs&lt;/code&gt; should run as CommonJS, and will parse your JavaScript as CommonJS.&lt;/p&gt;

</description>
      <category>node</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How I plan to solve hiring in tech</title>
      <author>Syed Faraaz Ahmad</author>
      <pubDate>Mon, 14 Jun 2021 21:30:24 +0000</pubDate>
      <link>https://dev.to/faraazahmad/how-i-plan-to-solve-hiring-in-tech-13mn</link>
      <guid>https://dev.to/faraazahmad/how-i-plan-to-solve-hiring-in-tech-13mn</guid>
      <description>&lt;p&gt;Let's be real, no one likes the hiring process in tech. Neither you the developer who has to memorize all the algorithms again and cram tens or hundreds of Leetcode questions, nor the interviewer who has to ask the same questions over and over to different candidates and wonders how much work they could've gotten done if they hadn't spent all this time interviewing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The interviewers don't hate you&lt;/strong&gt; though, they're not putting you through this torture because they like it. They've been in your shoes, they know the process sucks. They're a victim of the system just like you. Companies want the best possible candidates in the shortest possible time and this is what the hiring process has always been, so that's what the interviewers follow.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--UPQKLpVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1389254817843920898/E-1yQI0f_normal.jpg" alt="Madison Kanna profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Madison Kanna
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/madisonkanna"&gt;@madisonkanna&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      It‚Äôs absolutely wild that being good at interviewing for the developer job and being good at the actual job are two completely separate skills.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:47 PM - 10 May 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1391812235375222786" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1391812235375222786" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1391812235375222786" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#actually-test-them-for-the-job"&gt;
  &lt;/a&gt;
  Actually test them for the job
&lt;/h2&gt;

&lt;p&gt;I don't think this process gives the best possible candidates, or even in the shortest possible time. If you want the best possible candidate for the job then test them for skills they'll actually be using on the job. For example, if it's a backend developer you want, test them on their knowledge in backend, chances are you'll find a much better backend developer and the candidates will respect you for the process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-waste-their-time"&gt;
  &lt;/a&gt;
  Don't waste their time
&lt;/h2&gt;

&lt;p&gt;People have things to do. Most people aren't sitting around all day preparing for your interview or solving the 100th take-home problem they've been given this month. One take-home problem solved in an interview should be applicable to another interview. This saves everybody a lot of time and you  can skip to the explanation part of the problem.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rerFTyO_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1066332461393620993/5o_5mely_normal.jpg" alt="FlatTsunSociety profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        FlatTsunSociety
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @reaper20736
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Get a call asking to attend an interview. Immediately worried, the call was surprisingly short. Email company to confirm I have an interview. Automatic response says they'll reply in 48 hrs, 100hrs pass no reply. Show up, no one knows about the interview. &lt;br&gt;Why do people do this?
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:00 AM - 08 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1402083073026519041" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1402083073026519041" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1402083073026519041" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#dont-ghost-them-seriously"&gt;
  &lt;/a&gt;
  Don't ghost them (seriously!)
&lt;/h2&gt;

&lt;p&gt;Look, I get it. It sucks to give people bad news, especially when there's lots of candidates applying for a single job. It's time consuming and soul crushing, but it needs to be done. As a candidate it's way worse to be left waiting for a reply not knowing what happened than getting a rejection in a fairly quick amount of time.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwGYpiGt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1396212283148279813/pKHoOBB5_normal.jpg" alt="Thorne Melcher profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Thorne Melcher
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/existentialenso"&gt;@existentialenso&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I‚Äôm really crumpling from the stress from this job search. Tech interview cycles are long and intense.&lt;br&gt;&lt;br&gt;I have so little time to find a job before things get bad and feel so off my game from how anxious I am about not knowing when my next paycheck will be.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      00:36 AM - 13 Feb 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1227753280933105665" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1227753280933105665" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1227753280933105665" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#reduce-the-stress"&gt;
  &lt;/a&gt;
  Reduce the stress
&lt;/h2&gt;

&lt;p&gt;Candidates are under a lot of stress when leading up to an interview and that can negatively impact how they perform in the interview. Unless the job you're interviewing for has people dealing with extreme stress on a daily basis, it is better to try and reduce the candidates' stress. Give them choices, make them comfortable and in the end you might just have a lot of options to choose from at the end :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-put-it-in-practice"&gt;
  &lt;/a&gt;
  Lets put it in practice!
&lt;/h3&gt;

&lt;p&gt;These are some of the fundamentals that I think could really help improve hiring in tech. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you've ever interviewed candidates for a job&lt;/strong&gt; I would love to know what problems you face while hiring and what steps you've taken to help ease them.&lt;/p&gt;

&lt;p&gt;Tell me the problems you've faced as a candidate and we can all come together to solve them.&lt;/p&gt;

</description>
      <category>hiring</category>
      <category>discuss</category>
      <category>help</category>
    </item>
    <item>
      <title>Salary Negotiation Techniques</title>
      <author>Alec</author>
      <pubDate>Mon, 14 Jun 2021 20:52:07 +0000</pubDate>
      <link>https://dev.to/alecbsherman/salary-negotiation-techniques-3bha</link>
      <guid>https://dev.to/alecbsherman/salary-negotiation-techniques-3bha</guid>
      <description>&lt;p&gt;This is a full outline of how you can become a top negotiator when interviewing for a job.&lt;/p&gt;

&lt;p&gt;When I was starting out I always negotiated better compensation plans than others in the office, even when they were smarter, had a more formal education, or had more years of experience.&lt;/p&gt;

&lt;p&gt;Although I started programming when I was 14 years old, my career and passion was sales from the age of 18 to 30.  Being a bit OCD I studied everything I could to be a great salesperson. Zig Ziglar was my idol.  When I switched careers at 30 to software development, those negotiating tactics really paid off.&lt;/p&gt;

&lt;p&gt;I used these techniques to negotiate top pay, virtual office, travel and extensive fringe benefits for positions from software developer up to Chief Technology Officer but this works for any job position.&lt;/p&gt;

&lt;p&gt;This video shows how to find out how much your job position pays.  Then goes over &lt;strong&gt;basic&lt;/strong&gt; negotiating strategies and lastly &lt;strong&gt;advanced&lt;/strong&gt; negotiating tips to not only getting more money but a better quality of life.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aEA7HvJqGJs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>salary</category>
    </item>
    <item>
      <title>How to make an RSS feed in SvelteKit</title>
      <author>David Parker</author>
      <pubDate>Mon, 14 Jun 2021 20:50:33 +0000</pubDate>
      <link>https://dev.to/davidwparker/how-to-make-an-rss-feed-in-sveltekit-1d2g</link>
      <guid>https://dev.to/davidwparker/how-to-make-an-rss-feed-in-sveltekit-1d2g</guid>
      <description>&lt;p&gt;Chances are, if you're consuming a &lt;em&gt;lot&lt;/em&gt; of content, you're not checking a ton of individual sites.&lt;br&gt;
You may be checking something like Reddit, or another aggregator, or possibly one of the bigger blogging platforms nowadays (dev.to, medium, etc). But that still leaves out large portions of the Internet.&lt;/p&gt;

&lt;p&gt;If you control your own website and channel, and you're using SvelteKit, then you'll likely want an RSS feed so that your end users can subscribe to your content in their favorite feed reader.&lt;/p&gt;

&lt;p&gt;So, what's it take to to it with SvelteKit? Not a lot!&lt;/p&gt;

&lt;p&gt;Note: if you'd rather watch a video tutorial on how to implement an RSS feed, you can check out my &lt;a href="https://www.youtube.com/watch?v=pJnvu7aC3e0"&gt;YouTube video here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here's the complete code for this blog's rss feed:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;routes/rss.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;VITE_BASE_ENDPOINT&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/posts/posts.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cache-Control&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`max-age=0, s-max-age=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/xml&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;?xml version="1.0" encoding="UTF-8" ?&amp;gt;
&amp;lt;rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"&amp;gt;
&amp;lt;channel&amp;gt;
&amp;lt;atom:link href="http://wwww.davidwparker.com/rss" rel="self" type="application/rss+xml" /&amp;gt;
&amp;lt;title&amp;gt;David W Parker&amp;lt;/title&amp;gt;
&amp;lt;link&amp;gt;https://www.davidwparker.com&amp;lt;/link&amp;gt;
&amp;lt;description&amp;gt;David W Parker's blog about Code, Entrepreneurship, and more&amp;lt;/description&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;item&amp;gt;
&amp;lt;guid&amp;gt;https://www.davidwparker.com/posts/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/guid&amp;gt;
&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/title&amp;gt;
&amp;lt;link&amp;gt;https://www.davidwparker.com/posts/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/link&amp;gt;
&amp;lt;description&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/description&amp;gt;
&amp;lt;pubDate&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;published&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toUTCString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/pubDate&amp;gt;
&amp;lt;/item&amp;gt;`&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;
&amp;lt;/channel&amp;gt;
&amp;lt;/rss&amp;gt;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lets-break-it-down"&gt;
  &lt;/a&gt;
  Let's break it down
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-endpoint"&gt;
  &lt;/a&gt;
  The endpoint
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// GET /rss&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;VITE_BASE_ENDPOINT&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/posts/posts.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cache-Control&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`max-age=0, s-max-age=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/xml&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a &lt;code&gt;get&lt;/code&gt; request that lives at &lt;code&gt;/rss&lt;/code&gt;. In it, I make a simple request to &lt;code&gt;/posts/posts.json&lt;/code&gt; to get all the blog&lt;br&gt;
articles that I want for this RSS feed.&lt;br&gt;
I call &lt;code&gt;res.json()&lt;/code&gt; to get the resulting json, then send the posts within that json to the &lt;code&gt;render&lt;/code&gt; method to build my body.&lt;br&gt;
Once I get the body, I set a few headers, and return the resulting body and header which is needed for the SvelteKit endpoint.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-body"&gt;
  &lt;/a&gt;
  The body
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;?xml version="1.0" encoding="UTF-8" ?&amp;gt;
&amp;lt;rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"&amp;gt;
&amp;lt;channel&amp;gt;
&amp;lt;atom:link href="http://wwww.davidwparker.com/rss" rel="self" type="application/rss+xml" /&amp;gt;
&amp;lt;title&amp;gt;David W Parker&amp;lt;/title&amp;gt;
&amp;lt;link&amp;gt;https://www.davidwparker.com&amp;lt;/link&amp;gt;
&amp;lt;description&amp;gt;David W Parker's blog about Code, Entrepreneurship, and more&amp;lt;/description&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;item&amp;gt;
&amp;lt;guid&amp;gt;https://www.davidwparker.com/posts/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/guid&amp;gt;
&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/title&amp;gt;
&amp;lt;link&amp;gt;https://www.davidwparker.com/posts/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/link&amp;gt;
&amp;lt;description&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/description&amp;gt;
&amp;lt;pubDate&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;published&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toUTCString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/pubDate&amp;gt;
&amp;lt;/item&amp;gt;`&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;
&amp;lt;/channel&amp;gt;
&amp;lt;/rss&amp;gt;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We start by making our xml declaration and using the proper &lt;code&gt;rss&lt;/code&gt; tag with the definition from w3.org.&lt;br&gt;
From there, it's just a standard &lt;code&gt;rss&lt;/code&gt; feed, which you can find from anywhere on the Internet.&lt;/p&gt;

&lt;p&gt;In my example, I have a &lt;code&gt;channel&lt;/code&gt;, with &lt;code&gt;atom:link&lt;/code&gt; which references itself. Inside, I have a title for my feed/site, and a description. From there, I map each of my resulting posts into their own &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt; tag along with their own &lt;code&gt;guid&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;description,&lt;/code&gt; and &lt;code&gt;pubDate&lt;/code&gt;. Close out the tags, and we're done.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#postsjson"&gt;
  &lt;/a&gt;
  posts.json
&lt;/h3&gt;

&lt;p&gt;This is less important, but it's just another &lt;code&gt;get&lt;/code&gt; endpoint that returns a bunch of posts from imported &lt;code&gt;md&lt;/code&gt; files.&lt;br&gt;
At this point, there's a bunch of examples of this all around the Internet- but here's mine just in case you haven't seen it yet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// GET /posts/posts.json&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./*.md&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;metadata&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;slug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;metadata&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;slug&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;q&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;accum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;categories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;q&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;accum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;accum&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;published&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;published&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>svelte</category>
      <category>sveltekit</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Routing with Express</title>
      <author>ShasheeshPurohit</author>
      <pubDate>Mon, 14 Jun 2021 20:36:51 +0000</pubDate>
      <link>https://dev.to/shasheeshpurohit/routing-with-express-pag</link>
      <guid>https://dev.to/shasheeshpurohit/routing-with-express-pag</guid>
      <description>&lt;p&gt;You might be familiar with routes if you've worked with node. Routes help us to organize our app in terms of separate modules. The bigger the app gets the more the number of routes, but then that's where the magic of EXPRESS comes in play.&lt;/p&gt;

&lt;p&gt;What is express?&lt;/p&gt;

&lt;p&gt;Express.js, or simply Express, is a back end web application framework for Node.js, released as free and open-source software under the MIT License. It is designed for building web applications and APIs.&lt;/p&gt;

&lt;p&gt;Express provides you with a bundle of functions that help you to organize your code better and to focus more on what to do rather than worrying about how it's being done, that's the magic of all frameworks right?&lt;/p&gt;

&lt;p&gt;So let's begin by writing our first ever express app and see how we can use the power of Express Router to organize and maintain our code better.&lt;/p&gt;

&lt;p&gt;Let us take a scenario where we're building an e-commerce app and write APIs for it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our main file &lt;code&gt;index.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express')
const app = express()

app.use(express.json())

//Products

let idCounter = 3

const products=[
 {
  id: 1,
  name: "Jeans",
  price: "5000",
 },
{
  id: 2,
  name: "Tee",
  price: "2500",
}
]

app.get("/", (req,res)=&amp;gt;{
res.send("Hello World!")

})

app.get("/products", (req,res)=&amp;gt;{
res.json(products)
})

app.post("/products", (req,res)=&amp;gt;{
 const {name, price} = req.body

 const product = {id: idCounter++, name, body}
 products.push(product)
 res.json({products, success: true})
})

app.listen(3000, (req,res)=&amp;gt;{
 console.log("Hey! The server is on!")
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the above route will fetch you the data you have in your products array in JSON form.&lt;/p&gt;

&lt;p&gt;It looks simple at the moment right? Yeah now imagine different modules of your apps such as wish list, cart, users and what not. Don't you think you're in for a nightmare while routing everything in such a way that they are as simple as possible and easy to understand but are still getting very complicated to remember?&lt;/p&gt;

&lt;p&gt;That's where the magic of Express comes into play. With Express Routes you can organize your code in such a manner, where the routes can be as simple as possible and very easy to remember.&lt;/p&gt;

&lt;p&gt;Let's take a look at how we achieve that.&lt;/p&gt;

&lt;p&gt;Considering the products module as an example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We first create another file named &lt;code&gt;product.router.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express')
const Router = express.Router()

Router.get("/",(req,res)=&amp;gt;{
 res.json({success: true}) //For testing
})

module.exports = router

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;making changes in our &lt;code&gt;index.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express')
const app = express()

const products = require ('product.router.js') // Importing router

app.use(express.json())

app.use("/products", products)

//Products

let idCounter = 3

const products=[
 {
  id: 1,
  name: "Jeans",
  price: "5000",
 },
{
  id: 2,
  name: "Tee",
  price: "2500",
}
]

app.get("/", (req,res)=&amp;gt;{
res.send("Hello World!")

})

app.get("/products", (req,res)=&amp;gt;{
res.json(products)

})

app.post("/products", (req,res)=&amp;gt;{
 const {name, price} = req.body

 const product = {id: idCounter++, name, body}
 products.push(product)
 res.json({products, success: true})
})

app.listen(3000, (req,res)=&amp;gt;{
 console.log("Hey! The server is on!")
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What actually happens when we import and use our router is :&lt;/p&gt;

&lt;p&gt;The "/products" path is actually triggering our router and inside our router "/products" route is defined directly by "/"&lt;/p&gt;

&lt;p&gt;Hence when you have further paths such as "/products/:id", this will be defined in our product router as "/:id". &lt;/p&gt;

&lt;p&gt;This is a relatively small app as of now but you will realize it's importance once you reach a stage where you have to add a large number of routes.&lt;/p&gt;

&lt;p&gt;Lets now make the final changes in our &lt;code&gt;product.router.js&lt;/code&gt; and &lt;code&gt;index.js&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;index.js
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require('express')
const app = express()

const products = require ('product.router.js') // Importing router

app.use(express.json())

app.use("/products", products)

app.get("/", (req,res)=&amp;gt;{
res.send("Hello World!")

})

app.listen(3000, (req,res)=&amp;gt;{
 console.log("Hey! The server is on!")
})

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;product.router.js
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
const express = require('express')
const Router = express.Router()

//Products

let idCounter = 3

const products=[
 {
  id: 1,
  name: "Jeans",
  price: "5000",
 },
{
  id: 2,
  name: "Tee",
  price: "2500",
}
]

Router.get("/",(req,res)=&amp;gt;{
 res.json(products)
})

Router.post("/", (req,res)=&amp;gt;{
 const {name, price} = req.body

 const product = {id: idCounter++, name, body}
 products.push(product)
 res.json({products, success: true})
})

module.exports = router

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can see how organized the code looks with the routes related to "products" all merged into a separate file.&lt;/p&gt;

&lt;p&gt;But wait that's not it, Express gives you some more advantage in this. What's that?&lt;/p&gt;

&lt;p&gt;Well instead of separately defining "Route.get" and "Route.post" for the same route "/" we can tweak the code some more, here's how:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;product.router.js
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
const express = require('express')
const Router = express.Router()

//Products

let idCounter = 3

const products=[
 {
  id: 1,
  name: "Jeans",
  price: "5000",
 },
{
  id: 2,
  name: "Tee",
  price: "2500",
}
]

Router.Route("/")      //Notice how the syntax has changed here
.get((req,res)=&amp;gt;{
 res.json(products)
})
.post((req,res)=&amp;gt;{
 const {name, price} = req.body

 const product = {id: idCounter++, name, body}
 products.push(product)
 res.json({products, success: true})
})

module.exports = router

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Did you see how we used "Router.route("/")" and then placed and get and post just below it for the same path.&lt;/p&gt;

&lt;p&gt;Hope you found this useful for your projects and do follow me on LinkedIn to get updates on my future blogs :)&lt;/p&gt;

&lt;p&gt;LinkedIn - &lt;a href="https://www.linkedin.com/in/shasheeshpurohit/"&gt;https://www.linkedin.com/in/shasheeshpurohit/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>express</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>Python Testing 201 with pytest</title>
      <author>Matt Layman</author>
      <pubDate>Mon, 14 Jun 2021 20:13:46 +0000</pubDate>
      <link>https://dev.to/mblayman/python-testing-201-with-pytest-2jh1</link>
      <guid>https://dev.to/mblayman/python-testing-201-with-pytest-2jh1</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fv259R38gqc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;For Python Frederick's September presentation, I presented on Python testing. In the presentation, I explained more of the features of pytest that went beyond the basics that we explored in March.&lt;/p&gt;

&lt;p&gt;The recording from the talk is available on YouTube. &lt;a href="https://www.youtube.com/watch?v=fv259R38gqc&amp;amp;list=PLFcKEo4b_n1wMFhbiedpMgh2VRT5uICuF&amp;amp;index=2"&gt;Check it out!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this presentation, I focused on a few big areas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating tests with a wide variety of example data using &lt;code&gt;@pytest.mark.parametrize&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Advice on organizing your test suite as the suite grows.&lt;/li&gt;
&lt;li&gt;Exploring fixtures as a tool for setup and reuse.&lt;/li&gt;
&lt;li&gt;Examining some useful built-in fixtures.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Questions? Feel free to mention me on Twitter at &lt;a href="https://twitter.com/mblayman"&gt;@mblayman&lt;/a&gt; so I can try to respond to your question.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>5 Razones de por qu√© aprender EKS practicando</title>
      <author>mariomerco</author>
      <pubDate>Mon, 14 Jun 2021 20:12:13 +0000</pubDate>
      <link>https://dev.to/aws-builders/5-razones-de-por-que-aprender-eks-practicando-1ale</link>
      <guid>https://dev.to/aws-builders/5-razones-de-por-que-aprender-eks-practicando-1ale</guid>
      <description>&lt;p&gt;Alguna vez has estado en la posici√≥n de aprender alguna herramienta nueva sobre tecnolog√≠a y piensas &lt;strong&gt;"esto es incre√≠ble!"&lt;/strong&gt; pero cuando comienzas a aplicarla encuentras varios problemas que lo hacen realmente m√°s dif√≠cil? Bueno, si has estado all√≠, &lt;strong&gt;definitivamente trabajas en TI!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No es un secreto que las tecnolog√≠as de la informaci√≥n evolucionan todo el tiempo y muy r√°pido, haciendo que las cosas sean mejores y m√°s r√°pidas, pero tambi√©n a veces un poco abrumadoras. E incluso m√°s all√° de eso, ¬°este escenario podr√≠a suceder en muchos otros dominios del conocimiento y experiencias de vida!&lt;/p&gt;

&lt;p&gt;Ahora, aterrizando m√°s en nuestro tema, Kubernetes en AWS, hay muy buenos ejemplos, documentaciones, laboratorios y ejercicios que pueden ayudar a comenzar con nuevos conocimientos, por lo que esto le brinda las herramientas como piezas de &lt;em&gt;Lego&lt;/em&gt; para construir su propia soluci√≥n, ya sea desde cero o con alguna l√≠nea de base. Esto es genial y funciona as√≠ en la mayor√≠a de las piezas de TI.&lt;/p&gt;

&lt;p&gt;Pero hay veces en las que es necesario realmente mirar un proyecto (ya sea algo peque√±o, incluso) y llevarlo de la mano con Kubernetes, porque en la teor√≠a se pueden obviar cosas que en la pr√°ctica son necesarias y que solo es (la practica) la que podr√° llenarlas. En otras palabras, &lt;strong&gt;no es lo mismo aprender a manejar una bicicleta por video tutoriales que mont√°ndote en una&lt;/strong&gt;. Por eso les dejo aqu√≠ 5 razones por qu√© aprender &lt;strong&gt;EKS&lt;/strong&gt; practicando.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-kubernetes-es-complicado-demasiadas-piezas-movi%C3%A9ndose"&gt;
  &lt;/a&gt;
  1. Kubernetes es complicado: demasiadas piezas movi√©ndose
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wb0d2IGx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nk7mpo68acqyj5wcfnq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wb0d2IGx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nk7mpo68acqyj5wcfnq.jpg" alt="Complicado"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si bien Kubernetes se est√° convirtiendo cada vez m√°s en un est√°ndar cuando se habla de orquestaci√≥n de contenedores, tambi√©n es cierto que el manejo de las cargas de trabajo de producci√≥n es un desaf√≠o. Kubernetes es un conjunto de m√∫ltiples componentes como l√≠nea de base, luego comienza a contar a medida que implementas pods, configmaps, secretos, servicios y un largo etc. (ni siquiera hablamos de CRDs ...), por lo que antes de comprometer algo en producci√≥n, requiere probar, no solo la aplicaci√≥n en s√≠, sino su infraestructura implementada en Kubernetes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-las-redes-necesitan-atenci%C3%B3n"&gt;
  &lt;/a&gt;
  2. Las redes necesitan atenci√≥n
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fPn1u3wV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/852epm7i3sb3rljqduk2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fPn1u3wV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/852epm7i3sb3rljqduk2.jpg" alt="Red"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A medida que comience a implementar sus aplicaciones (especialmente si se comunican entre s√≠), inmediatamente se enfrentar√° con DNS, IP, equilibrio de carga, etc. Aunque la mayor parte de esto se maneja con conceptos simples de Kubernetes, su infraestructura subyacente requiere una infraestructura de red bien establecida.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-los-permisos-de-iam-son-muy-detallados"&gt;
  &lt;/a&gt;
  3. Los permisos de IAM son muy detallados
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M_MjZ2el--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a09ukhnz55fmv4uy08xx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M_MjZ2el--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a09ukhnz55fmv4uy08xx.jpg" alt="Permisos"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si los desarrolladores tienen un acceso amplio al espacio de AWS, codificar√°n sus aplicaciones usando el SDK de AWS probablemente sin preocuparse por los permisos ... ¬°hasta que obtenga Kubernetes! Los contenedores intentar√°n solicitar acceso a la API de AWS y, si el rol de IAM que abarca la aplicaci√≥n no est√° configurado con los permisos adecuados, simplemente fallar√°.&lt;/p&gt;

&lt;p&gt;Hay varias soluciones para esto, como &lt;a href="https://github.com/jtblin/kube2iam"&gt;Kube2IAM&lt;/a&gt;, &lt;a href="https://github.com/uswitch/kiam"&gt;KIAM&lt;/a&gt; y &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html"&gt;IAM Roles for Service Accounts&lt;/a&gt; que, si estamos en AWS y EKS (ejecut√°ndose en instancias EC2), esta es mi opci√≥n de preferencia üòé.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-la-automatizaci%C3%B3n-tambi%C3%A9n-requiere-pruebas"&gt;
  &lt;/a&gt;
  4. La automatizaci√≥n tambi√©n requiere pruebas
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zy5dKyZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7uf3lkg4r44hl3fpkjh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zy5dKyZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7uf3lkg4r44hl3fpkjh.jpg" alt="Automatizaci√≥n"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;La automatizaci√≥n est√°, en la mayor√≠a de los casos, relacionada con la codificaci√≥n, y la codificaci√≥n tambi√©n est√° relacionada con errores. Entonces, en este caso, tomar√≠a la palabra "pr√°ctica" reemplazada por "prueba". Entonces, los flujos de trabajo de CICD que quiz√°s desee crear son, al final, un c√≥digo que se ejecuta en alg√∫n lugar y puede tener problemas. Es por eso que tener varios entornos (al menos un entorno de PRUEBA) antes del de producci√≥n es importante para probar realmente c√≥mo se realizar√° el aprovisionamiento de sus recursos.&lt;/p&gt;

&lt;p&gt;Kubernetes tambi√©n se incluye en esta secci√≥n, porque automatiza la orquestaci√≥n de contenedores seg√∫n las configuraciones que proporciones. Pero si sus configuraciones son incorrectas, podr√≠an llevarlo a un problema de implementaci√≥n o un entorno mal configurado.&lt;/p&gt;

&lt;p&gt;En resumen, siempre &lt;strong&gt;PRUEBA!&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-cuidado-con-el-orprie"&gt;
  &lt;/a&gt;
  5. Cuidado con el $orpri$e$ üí≤üí≤üí≤
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxlrs8Fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/trnbijxmqh8chc1tjppy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxlrs8Fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/trnbijxmqh8chc1tjppy.jpg" alt="Malgastando dinero"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Esto es simple: &lt;strong&gt;Cuantos m√°s nodos agregue, m√°s dinero pagar√°&lt;/strong&gt;. Por ejemplo, una de las ideas principales de tener contenedores y Kubernetes encima es &lt;strong&gt;Ajuste de escala autom√°tico&lt;/strong&gt;, y hay varias formas, &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-autoscaler.html"&gt;Ajuste de escala autom√°tico de cl√∫ster&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/horizontal-pod-autoscaler.html"&gt;Horizontal Pod Autoscaler&lt;/a&gt; y &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/vertical-pod-autoscaler.html"&gt;Vertical Pod Autoscaler&lt;/a&gt;. Lo mejor para configurar todo esto siempre depende del tipo de aplicaci√≥n que est√© creando. Tendr√° que entender c√≥mo se comporta, cu√°l es la mejor m√©trica para escalar, etc. y si esto no se toma con cuidado, podr√≠a escalar sin realmente necesitarlo y costarle mucho m√°s. ** ¬°O, incluso peor! **, podr√≠a reducirse de manera muy agresiva y da√±ar su disponibilidad y respuestas, ¬°impactando directamente al usuario final! As√≠ que es mejor estar preparado probando escenarios y desarrollando una estrategia de revisi√≥n de estas tareas a medida que su negocio aumente en usuarios finales.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#suena-aterrador"&gt;
  &lt;/a&gt;
  Suena aterrador üéÉ
&lt;/h2&gt;

&lt;p&gt;Y puede que si lo sea üòÖ, pero realmente EKS ha ido creciendo y madurando en las herramientas que provee para hacer m√°s f√°cil su aprendizaje y mantenimiento. Desde Managed Worker Nodes, add-ons y actualizaciones autom√°ticas, hasta correr contenedores en Fargate (a lo Serverless) y miles de integraciones opensource por la comunidad de Kubernetes, de AWS y de ambos! As√≠ que, aunque suene complejo, EKS brinda facilidades para hacerlo un servicio atractivo y una soluci√≥n productiva, segura y efectiva en costo.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;PD:&lt;/em&gt; Si tienes subscripci√≥n de A Cloud Guru, te invito a mi curso &lt;a href="https://acloudguru.com/course/a-practical-guide-to-amazon-eks"&gt;A Practical Guide To Amazon EKS&lt;/a&gt;, donde muchos de estos temas los cubrimos &lt;strong&gt;practicando!&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>eks</category>
      <category>kubernetes</category>
      <category>aws</category>
      <category>spanishaws</category>
    </item>
    <item>
      <title>Avoid slow Javascript code</title>
      <author>Oscar Pacheco Ortiz</author>
      <pubDate>Mon, 14 Jun 2021 20:10:51 +0000</pubDate>
      <link>https://dev.to/cleveroscar/avoid-slow-javascript-code-3dne</link>
      <guid>https://dev.to/cleveroscar/avoid-slow-javascript-code-3dne</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;In this article, we will discuss a few topics that can help your &lt;em&gt;Javascript&lt;/em&gt; code perform well and fast. We will be going over some common mistakes to help us understand what makes our code run smoother and a bit more efficient. Later on we will discuss about Algorithms and Data structures, but that is a little more advanced. So for starters, let us first learn the common mistakes that make bad code. &lt;/p&gt;

&lt;p&gt;Let's start off by asking ourselves how exactly do we write faster code? Is there some sort of secret &lt;em&gt;key words&lt;/em&gt;? Special methods or functions? Or an advanced framework? Actually no. There are no special functions or methods into making our code run faster. It's actually a bit more simpler than that. We can start off with &lt;em&gt;unused variables&lt;/em&gt; and move forward from there. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unused-variables"&gt;
  &lt;/a&gt;
  Unused Variables
&lt;/h3&gt;

&lt;p&gt;I am pretty sure we have all seen the most common error in our console when working with &lt;em&gt;JS&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;variable is defined but never used&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;This is a very common mistake that a lot of beginners tend to just ignore because the variable sometimes wont have any value. So commonly we'll assume it has no affect to the code if it's not breaking it. But &lt;em&gt;unused&lt;/em&gt; variables will cause performance issues since it is just taking up &lt;em&gt;space&lt;/em&gt; in our browser. To put into simple terms, don't create variables if you don't plan on using them at all. &lt;/p&gt;

&lt;p&gt;If you were to host a pizza party and invited 4 friends and each friend would eat exactly 2 slices of pizza, and each pizza comes with 8 slices. Would you order only the amount you need or will you order more pizzas even after knowing that your friends will only eat 2 slices? I'm sure we wouldn't want to waste any food or money, so in coding terms why would you create a variable and not use it, it would just be a waste and take up space.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loop-activity"&gt;
  &lt;/a&gt;
  Loop activity
&lt;/h3&gt;

&lt;p&gt;When working with &lt;em&gt;loops&lt;/em&gt; in our code, the loop will make an iteration over and over until returned true or false. This can cause a lot of heavy work to the &lt;strong&gt;CPU&lt;/strong&gt; especially if we are looping through a big data structure with many objects. To help us make our loop a bit more efficient we can help by putting our &lt;em&gt;assignments&lt;/em&gt; or &lt;em&gt;statements&lt;/em&gt; outside of the loop so we don't iterate through the properties each time when we only need to access them once. &lt;/p&gt;

&lt;p&gt;For example, here inside our loop we are accessing the &lt;code&gt;arr.length&lt;/code&gt; every single time the loop iterates over and over, which can cause the code to perform slow over time, especially if we are working with a big database and need to find specific data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var i;
for (i = 0; i &amp;lt; arr.length; i++) {}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To help us implement a better &lt;code&gt;for loop&lt;/code&gt; we can setup our variables outside of our &lt;code&gt;for loop&lt;/code&gt; function so we can already have access to our array length instead iterating every-time and accessing through the loop. For example, we can assign our &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;arr.length&lt;/code&gt; outside our loop and pass it in to make the loop run faster.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var i;
var l = arr.length;
for (i = 0; i &amp;lt; l; i++) {}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Accessing the length outside the loop will not just make it easier to read for the developer, but also just like that you have implemented a faster loop iterator.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-loading"&gt;
  &lt;/a&gt;
  Javascript Loading
&lt;/h3&gt;

&lt;p&gt;A lot of new developers don't really know where to place their script tags in the html file when first starting off. It is highly recommended that you put your &lt;code&gt;javascript&lt;/code&gt; script file tags at the &lt;em&gt;bottom&lt;/em&gt; of the html page so the browser is allowed to load up before loading in the functionality. This actually does make a huge difference in loading time for browsers. If the script tag is at the start of the &lt;em&gt;HTML&lt;/em&gt; file, the browser will first download the script code before even loading anything else from the browser, rendering activity could even be blocked. You can also add your script to the browser after the page has loaded.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
window.onload = function() {
  var element = document.createElement("script");
  element.src = "javaScriptCode.js";
  document.body.appendChild(element);
};
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#decrease-dom-access"&gt;
  &lt;/a&gt;
  Decrease DOM Access
&lt;/h3&gt;

&lt;p&gt;Selecting or in other words &lt;em&gt;Accessing&lt;/em&gt; the HTML DOM is very slow. We want to keep the number of &lt;em&gt;elements&lt;/em&gt; we are selecting small, this will help with loading, speed, and will benefit smaller devices too. If we ever need to access a DOM element more than once, we can simply store it inside a local variable and access it only once.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var elm;
elm = document.getElementById("demo");
elm.innerHTML = "Hello";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It might not seem like a lot but honestly these small mistakes can make a big difference when working with complex applications with tons of lines of code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope by the end of this article you managed to learn how to create and understood what is going on in every line of code. It is very important to understand how your code fully works, not only does it help you become a better developer but can also help you use the tools you are working with more efficient.&lt;/p&gt;

&lt;p&gt;These articles are mostly intended for personal use on becoming a better programmer, writer, and grow my programming skills. Feel free to drop any feedback or corrections that you believe that should be made to help me and others. Thank you for your time for sticking this far! &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>5 Tips To Increase Your Programming Productivity</title>
      <author>Rezaul karim</author>
      <pubDate>Mon, 14 Jun 2021 19:40:06 +0000</pubDate>
      <link>https://dev.to/rezaulkarim/5-tips-to-increase-your-programming-productivity-50m0</link>
      <guid>https://dev.to/rezaulkarim/5-tips-to-increase-your-programming-productivity-50m0</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qIoGizvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623698860639/5cbBBA8a-.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qIoGizvE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623698860639/5cbBBA8a-.jpeg" alt="working-time-planning-work-schedule-organize-works-productivity-tasks-time-management-illustration-set_102902-1897.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#programming-productivity"&gt;
  &lt;/a&gt;
  Programming Productivity
&lt;/h2&gt;

&lt;p&gt;Hello everybody. So today we are going to discuss about 5 tips to increasing programming productivity. Tip number one&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-leverage-the-power-of-habit"&gt;
  &lt;/a&gt;
  1. Leverage The Power of Habit:
&lt;/h3&gt;

&lt;p&gt;Leverage The Power of Habit is to build productive routines. I asked you guys for book recommendations on Twitter and one of the books I got was The Power of Habit now, I actually started listening to the audio book of it and I thought it was really interesting because it helped me understand how I became more productive in the past years.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cz6TLwWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623698978989/03_dHeZEa.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cz6TLwWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623698978989/03_dHeZEa.jpeg" alt="top-view-break-bad-habit-concept_23-2148540741.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And now that I can pinpoint that it was because I was building A habit out of the things I want to be productive on that. I was able to make a routine and start cranking out code videos work stuff. You name it? Now essentially what you want to do is for the next 21 days do something every day. This could be coding flossing or whatever you want that you think is productive and after 21 days will be so hard for you to stop that‚Äôll become second nature to you tip. Number two,&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-start-multitasking"&gt;
  &lt;/a&gt;
  2. Start multitasking:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3oOsjI4X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699032433/vCOmfxoUN.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3oOsjI4X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699032433/vCOmfxoUN.jpeg" alt="workforce-organization-management_335657-3158.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try Start multitasking the mundane stuff for things that doesn‚Äôt require much concentration to do. Do something else that‚Äôs more productive while you do that. It would save you surprisingly a lot of time. For example when I clean my room or do something super boring that I usually do not like at all. I would just you know, whip out an audio book and just start listening to it and that way I can actually learn stuff. Why do those mundane tasks? Another example would be when I brush my teeth, I would read. Else or I would check my social media accounts and then little by little I‚Äôm actually saving a lot of time in the long run. Tip number three,&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-keep-yourself-busy-and-accountable-with-deadlines-and-stakeholders"&gt;
  &lt;/a&gt;
  3. keep yourself busy and accountable with deadlines and stakeholders:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HpSexezo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699074394/OYPrIfJttE.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HpSexezo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699074394/OYPrIfJttE.jpeg" alt="project-deadline-job-organization-poster_107791-1627.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now. One of the things I like to do is actually to fill out my calendar with lots of focus blocks and deadlines. That way I barely have time to procrastinate the deadlines I set for myself or even better that I promise to other people will keep me accountable for actually Completing the projects that way I can‚Äôt procrastinate because I just have a lot to finish and a lot of people are depending on me to finish them. Tip number four&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-when-taking-a-break-dont-think-about-work-just-have-fun"&gt;
  &lt;/a&gt;
  4. When taking a break don‚Äôt think about work just have fun:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HO5yaaaQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699128049/m3z5P0XqO.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HO5yaaaQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699128049/m3z5P0XqO.jpeg" alt="happy-tiny-business-people-dancing-having-fun-drinking-wine-corporate-party-team-building-activity-corporate-event-idea-concept-pinkish-coral-bluevector-isolated-illustration_335657-1414.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is important because I see a lot of people have faster productive time, but they also have faster fun time. For example. I see a lot of people studying while watching TV shows that‚Äôs terrible because you end up not enjoying the show nor learning the things you‚Äôre trying to learn. So what I give myself a break I make sure I don‚Äôt think about anything else. I love TV shows. So I turn off my phone and immerse myself and surprisingly you‚Äôll actually learn a lot more by doing that like, for example, I love to watch Pop videos and actually On the law of cinematography by dissecting these videos and just focusing on it. But if I was quoting while watching these Pop videos, I‚Äôd never appreciate them as much. Tip number 5&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-exercise-to-increase-programming-productivity"&gt;
  &lt;/a&gt;
  5. Exercise to increase programming productivity!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M4TvAmes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699157568/3EEUnJTM2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M4TvAmes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1623699157568/3EEUnJTM2.jpeg" alt="horizontal-shot-female-hand-being-raised-while-making-physical-exercises-with-weighting-agent-being-isolated-yellow-background-weight-loss-fitness-concept_295783-11709.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now I‚Äôm a big fan of weightlifting so I might be biased here but I truly believe that exercising will make you sharper exercise. In helps you relieve stress because it releases endorphins which are feel good hormones. That way allows you to refresh your mind and be a lot more productive throughout the day. It doesn‚Äôt even need to be super intense. As long as you get your heart rate up and work on moving your body more you feel the benefits right away exercise is a powerful habit and can be a good Hammer too, you know Teaching you to how to build these productive habits. So I highly recommend going to the gym or exercising regularly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#last-word-about-increasing-your-programming-productivity"&gt;
  &lt;/a&gt;
  Last word about increasing your programming productivity!
&lt;/h2&gt;

&lt;p&gt;So in conclusion, the most important point I want to get across is that if you really want to be good at something or you want to change an aspect of your life then make it a habit.And improve your programming productivity. Now you might say. Oh, yeah, it‚Äôs not as easy as it sounds though. And you‚Äôre absolutely right.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You know building habits extremely hard and I find it hard myself. But if you really care about thing you want to achieve then you will put the effort into it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and that‚Äôs why I want to keep myself accountable for what I say. So basically choose something that you always want to do or something that you want to get good at and together. We‚Äôll make it a new habit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mrezaulkarim.com/5-tips-to-increase-programming-productivity/"&gt;Read this article on my blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more exciting tips and tricks please read our  &lt;a href="https://mrezaulkarim.com/blog/"&gt;others articles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find My page on Instagram:  &lt;a href="//instagram.com/stack.content"&gt;@stack.content&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>devops</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Code Review process</title>
      <author>leslysandra</author>
      <pubDate>Mon, 14 Jun 2021 19:27:21 +0000</pubDate>
      <link>https://dev.to/codeinspector/code-review-process-n8d</link>
      <guid>https://dev.to/codeinspector/code-review-process-n8d</guid>
      <description>&lt;p&gt;&lt;strong&gt;Code Review&lt;/strong&gt; is indeed a critical process during software development. Among different types of processes that can exist for doing software development and code reviewing, I'd like to highlight some, here.&lt;/p&gt;

&lt;p&gt;This one (image below) might be very well known among many developers. Create another &lt;em&gt;branch&lt;/em&gt; for development, work there all changes and updates, and... &lt;strong&gt;pull request&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pull requests let you tell others about changes you've pushed to a branch in a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before your changes are merged into the base branch.&lt;/em&gt; &lt;a href="https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests"&gt;source: Docs GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you are noted by the team (or reviewer) about the pull request, there is the &lt;em&gt;"Code Reviews" and "Commits"&lt;/em&gt;&lt;br&gt;
All those reviews and checks are very important just before merging to the &lt;strong&gt;master branch&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8AG9WXoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og536i6g0zshfbdgpgo9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8AG9WXoz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og536i6g0zshfbdgpgo9.png" alt="Code Review process"&gt;&lt;/a&gt; &lt;a href="https://www.researchgate.net/publication/343576513_Code_Reviewer_Recommendations_as_a_Multi-Objective_Problem_Balancing_Expertise_Availability_and_Collaborations"&gt;Image Reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember, that avoiding (forgetting, ignoring,...) code review can help adding more and more to your &lt;strong&gt;technical debt&lt;/strong&gt;. (&lt;a href="https://dev.to/codeinspector/technical-debt-a-software-epidemic-57bp"&gt;Read here&lt;/a&gt; for more info about tech debt)&lt;/p&gt;

&lt;p&gt;Let's check one more example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-Lx2EVp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1179bzpla6mj15r8682f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-Lx2EVp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1179bzpla6mj15r8682f.png" alt="Investigating the effectiveness of peer code review in distributed software development based on objective and subjective data"&gt;&lt;/a&gt; &lt;a href="https://www.researchgate.net/publication/328541762_Investigating_the_effectiveness_of_peer_code_review_in_distributed_software_development_based_on_objective_and_subjective_data"&gt;Image reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What I like from the example above is the importance of &lt;em&gt;"peer review"&lt;/em&gt; and &lt;em&gt;"automated review process"&lt;/em&gt;.&lt;br&gt;
We should not forget the importance of team work during the software development process. Also, &lt;em&gt;"automating"&lt;/em&gt; the coding review helps you learn more about your coding style as well as remembering good coding practices for a great software project legacy.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I know there are other plenty processes for software development and code review&lt;/em&gt; that might also be customized for each team, project, etc. What is your process?&lt;/p&gt;

&lt;p&gt;Psss, for automated code review, check out &lt;a href="http://code-inspector.com/"&gt;Code Inspector&lt;/a&gt; to get started for free analyzing your code quality and calculating your tech debt in your projects at GitHub or GitLab or BitBucket.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>software</category>
      <category>github</category>
    </item>
  </channel>
</rss>
