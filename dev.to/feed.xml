<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>All about web services ,SOAP and REST API, answers to what, why and when of SOAP &amp; REST API web services.</title>
      <author>nshimiye_emmy</author>
      <pubDate>Wed, 05 May 2021 19:47:30 +0000</pubDate>
      <link>https://dev.to/dev_emmy/all-about-web-services-soap-and-rest-api-answers-to-what-why-and-when-of-soap-rest-api-web-services-9jk</link>
      <guid>https://dev.to/dev_emmy/all-about-web-services-soap-and-rest-api-answers-to-what-why-and-when-of-soap-rest-api-web-services-9jk</guid>
      <description>&lt;h3&gt;
  &lt;a href="#a-brief-introduction-about-apis"&gt;
  &lt;/a&gt;
  A brief introduction about API's:
&lt;/h3&gt;

&lt;p&gt;API is known as the Application Programming Interface and is offered by both the client and the server. In the client world, this is offered by the browser whereas in the server world it's what is provided by the web service which can either be SOAP or REST.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-web-services"&gt;
  &lt;/a&gt;
  What are web services:
&lt;/h3&gt;

&lt;p&gt;This is a broad term that tells us how the communication between two different set of devices or applications is held over the World Wide Web (WWW) and they are designed to support interoperable machine-to-machine interaction over a network.&lt;/p&gt;

&lt;p&gt;Web services are frequently just Web APIs that can be accessed over a network, such as the Internet, and executed on a remote system hosting the requested services.&lt;/p&gt;

&lt;p&gt;This communication system can be categorized into two types: SOAP(Simple Object Access Protocol, and  REST(Representational State Transfer), REST and REST are two approaches for interfacing to the web with web services.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-is-soap-and-rest"&gt;
  &lt;/a&gt;
  SO WHAT IS SOAP AND REST?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-what-is-soap-"&gt;
  &lt;/a&gt;
  1. What is SOAP? :
&lt;/h3&gt;

&lt;p&gt;SOAP is a standard protocol which was designed before REST with the idea of ensuring that programs/applications built on different platforms and on different programming languages could exchange data in an easy manner. Since it's a protocol it has a set of built-in rules which increases it's complexity. However these standards also offer built-in compliances that can make it preferable for enterprise scenarios. The built-in compliance standards include security, atomicity, consistency, isolation, and durability (ACID), which is a set of properties for ensuring reliable database transactions. SOAP stands for Simple Object Access Protocol. It can also operate over various protocols such as HTTP (Hypertext Transfer Protocol), SMTP (Simple Mail Transfer Protocol), TCP (Transmission Control Protocol) or UDP (User Datagram Protocol).&lt;/p&gt;

&lt;p&gt;Microsoft originally developed SOAP to take the place of older technologies that don’t work well on the internet such as the Distributed Component Object Model (DCOM) and Common Object Request Broker Architecture (CORBA). These technologies fail because they rely on binary messaging. The XML messaging that SOAP employs works better over the internet.&lt;/p&gt;

&lt;p&gt;SOAP has been around since late 1990's&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#important-notice-about-soap-"&gt;
  &lt;/a&gt;
  IMPORTANT NOTICE ABOUT SOAP ?
&lt;/h3&gt;

&lt;p&gt;When a request for data is sent to a SOAP API, it can be handled through any of the application layer protocols: HTTP, SMTP, TCP, and others, however once a request is received, return SOAP messages must be returned as XML documents—a markup language that is both human- and machine-readable&lt;/p&gt;

&lt;p&gt;A completed request to a SOAP API is not cacheable by a browser, so it cannot be accessed later without resending to the API.&lt;/p&gt;

&lt;p&gt;SOAP relies heavily on XML where by every operation the service provides is explicitly defined, along with the XML structure of the request and response for that operation.&lt;/p&gt;

&lt;p&gt;SOAP permits processes using different operating systems like linux and windows to communicate via HTTP and it's XML&lt;/p&gt;

&lt;p&gt;SOAP was long the standard approach to web service interfaces, although it’s been dominated by REST in recent years, with REST now representing more than 70% of public APIs according to Stormpath.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2what-is-rest"&gt;
  &lt;/a&gt;
  2.what is REST?
&lt;/h3&gt;

&lt;p&gt;REST is a set of architectural principles attuned to the needs of lightweight web services and mobile applications. Because it's a set of guidelines, it leaves the implementation of these recommendations to developers. It relies on stateless communication.&lt;/p&gt;

&lt;p&gt;REST was designed specifically for working with components such as media components, files, or even objects on a particular hardware device. A Restful service would use the normal HTTP verbs of GET, POST, PUT and DELETE for working with the required components. REST stands for Representational State Transfer&lt;/p&gt;

&lt;p&gt;Many developers found SOAP cumbersome and hard to use. For example, working with SOAP in JavaScript means writing a ton of code to perform simple tasks because you must create the required XML structure every time.&lt;/p&gt;

&lt;p&gt;REST usually relies on a simple URL, most web services using REST rely exclusively on using the URL approach. REST can use four different HTTP 1.1 verbs (GET, POST, PUT, and DELETE) to perform tasks.&lt;/p&gt;

&lt;p&gt;REST doesn’t have to use XML to provide the response. You can find REST-based web services that output the data in Command Separated Value (CSV), JavaScript Object Notation (JSON) and Really Simple Syndication (RSS), the main point here is that you can obtain the output you need, in a form that’s easy to parse within the language you’re using for your application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#primary-key-differences-between-soap-and-rest-"&gt;
  &lt;/a&gt;
  PRIMARY KEY DIFFERENCES BETWEEN SOAP AND REST ?
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;SOAP was originally created by Microsoft, and it’s been around a lot longer than REST. This gives it the advantage of being an established, legacy protocol while REST has been around for a good time now as well. Plus, it entered the scene as a way to access web services in a much simpler way than possible with SOAP by using HTTP.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SOAP is a protocol whereas REST is an architectural pattern.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;3.SOAP stands for Simple Object Access Protocol whereas REST stands for Representational State Transfer.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;SOAP uses service interfaces to expose its functionality to client applications while REST uses Uniform Service locators to access to the components on the hardware device.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;5.SOAP needs more bandwidth for its usage whereas REST doesn’t need much bandwidth.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;SOAP only works with XML formats whereas REST work with plain text, XML, HTML and JSON.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;7.SOAP cannot make use of REST since SOAP is a protocol and REST is an architectural pattern. while REST can make use of SOAP as the underlying protocol for web services, because in the end it is just an architectural pattern.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;SOAP is a protocol and was designed with a specification. It includes a WSDL file which has the required information on what the web service does in addition to the location of the web service while REST is an Architectural style in which a web service can only be treated as a RESTful service if it follows the constraints of being: Client Server, Stateless, Cacheable, Layered System, Uniform Interface.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;9.SOAP requires more bandwidth for its usage. Since SOAP Messages contain a lot of information inside of it, the amount of data transfer using SOAP is generally a lot&lt;/p&gt;

&lt;p&gt;Example of SOAP request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?xml version="1.0"?&amp;gt;
&amp;lt;SOAP-ENV:Envelope 
xmlns:SOAP-ENV
="http://www.w3.org/2001/12/soap-envelope" 
SOAP-ENV:encodingStyle
=" http://www.w3.org/2001/12/soap-encoding"&amp;gt;
&amp;lt;soap:Body&amp;gt;
 &amp;lt;Demo.guru99WebService
 xmlns="http://tempuri.org/"&amp;gt;
   &amp;lt;EmployeeID&amp;gt;int&amp;lt;/EmployeeID&amp;gt;
   &amp;lt;/Demo.guru99WebService&amp;gt;
 &amp;lt;/soap:Body&amp;gt;
&amp;lt;/SOAP-ENV:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  while
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;REST does not need much bandwidth when requests are sent to the server. REST messages mostly just consist of JSON messages. Below is an example of a JSON message passed to a web server. You can see that the size of the message is comparatively smaller to SOAP.&lt;/p&gt;

&lt;p&gt;Example of REST API data&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{"city":"Mumbai","state":"Maharastra"}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;&lt;p&gt;SOAP can only work with XML format. As seen from SOAP messages, all data passed is in XML format while REST permits different data format such as Plain text, HTML, XML, JSON, etc. But the most preferred format for transferring data is JSON.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SOAP uses service interfaces to expose its functionality to client applications. In SOAP, the WSDL file provides the client with the necessary information which can be used to understand what services the web service can offer&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;             while
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;REST use Uniform Service locators to access to the components on the hardware device. For example, if there is an object which represents the data of an employee hosted on a URL as &lt;a href="http://demo.users"&gt;http://demo.users&lt;/a&gt; , the below are some of URI that can exist to access them&lt;br&gt;
&lt;a href="http://demo.users.com/students"&gt;http://demo.users.com/students&lt;/a&gt;&lt;br&gt;
&lt;a href="http://demo.users.com/students/1"&gt;http://demo.users.com/students/1&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;REST is very easy to understand and is extremely approachable, but does lack standards and is considered an architectural approach. while SOAP is an industry standard with a well-defined protocol and a set of well-established rules to be implemented, and it has been used in systems both big and small.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Works well in distributed enterprise environments (REST assumes direct point-to-point communication), it is standardized, Has built-in error handling, Provides significant pre-build extensibility in the form of the WS* standards and it is Language, platform, and transport independent (REST requires use of HTTP).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#when-should-you-consider-using-rest-over-soap-"&gt;
  &lt;/a&gt;
  WHEN SHOULD YOU CONSIDER USING REST OVER SOAP ?
&lt;/h3&gt;

&lt;p&gt;One of the most highly debatable topics is when REST should be used or when to use SOAP while designing web services. Below are some of the key factors that determine when REST should be used for web services:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.Limited resources and bandwidth:&lt;/strong&gt;&lt;br&gt;
Since SOAP messages are heavier in content and consume a far greater bandwidth, REST should be used in instances where network bandwidth is a constraint.&lt;br&gt;
&lt;strong&gt;2.Totally stateless operations:&lt;/strong&gt;&lt;br&gt;
If there is no need to maintain a state of information from one request to another then REST should be used. If you need a proper information flow wherein some information from one request needs to flow into another then SOAP is more suited for that purpose.&lt;/p&gt;

&lt;p&gt;foreample:&lt;br&gt;
For online purchasing site. These sites normally need the user first to add items which need to be purchased to a cart. All of the cart items are then transferred to the payment page in order to complete the purchase. This is an example of an application which needs the state feature. The state of the cart items needs to be transferred to the payment page for further processing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Caching situations:&lt;/strong&gt;&lt;br&gt;
 If there is a need to cache a lot of requests then REST is the perfect solution. At times, clients could request for the same resource multiple times. This can increase the number of requests which are sent to the server. By implementing a cache, the most frequent queries results can be stored in an intermediate location. So whenever the client requests for a resource, it will first check the cache. If the resources exist then, it will not proceed to the server. So caching can help in minimizing the amount of trips which are made to the web server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.Ease of coding:&lt;/strong&gt;&lt;br&gt;
Coding REST Services and subsequent implementation is far easier than SOAP. So if a quick win solution is required for web services, then REST is the way to go.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#when-should-you-consider-using-soap-over-rest-"&gt;
  &lt;/a&gt;
  WHEN SHOULD YOU CONSIDER USING SOAP OVER REST ?
&lt;/h3&gt;

&lt;p&gt;SOAP is fairly mature and well-defined and does come with a complete specification. The REST approach is just that, an approach and is wide open for development, so if you have the following then SOAP is a great solution:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Asynchronous processing and subsequent invocation:&lt;/strong&gt;&lt;br&gt;
if your application needs a guaranteed level of reliability and security then SOAP 1.2 offers additional standards to ensure this type of operation. Things like WSRM – WS-Reliable Messaging.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.A Formal means of communication:&lt;/strong&gt;&lt;br&gt;
If both the client and server have an agreement on the exchange format then SOAP 1.2 gives the rigid specifications for this type of interaction. An example is an online purchasing site in which users add items to a cart before the payment is made. Let's assume we have a web service that does the final payment. There can be a firm agreement that the web service will only accept the cart item name, unit price, and quantity. If such a scenario exists then, it's always better to use the SOAP protocol.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Stateful operations:&lt;/strong&gt;&lt;br&gt;
If the application needs contextual information and conversational state management then SOAP 1.2 has the additional specification in the WS* structure to support those things (Security, Transactions, Coordination, etc). Comparatively, the REST approach would make the developers build this custom plumbing.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#challenges-in-a-soap-api-"&gt;
  &lt;/a&gt;
  CHALLENGES IN  A SOAP API :
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. WSDL file:&lt;/strong&gt;&lt;br&gt;
One of the key challenges of the SOAP API is the WSDL document itself. The WSDL document is what tells the client of all the operations that can be performed by the web service. The WSDL document will contain all information such as the data types being used in the SOAP messages and what all operations are available via the web service. The below code snippet is just part of a sample WSDL file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;                  &amp;lt;?xml version="1.0"?&amp;gt;
&amp;lt;definitions name="Tutorial"             
    targetNamespace=http://demo.guru99.com/Tutorial.wsdl             
    xmlns:tns=http://demo.guru99.com/Tutorial.wsdl             
    xmlns:xsd1=http://demo.guru99.com/Tutorial.xsd            
    xmlns:soap=http://schemas.xmlsoap.org/wsdl/soap/
    xmlns="http://schemas.xmlsoap.org/wsdl/"&amp;gt; 

    &amp;lt;types&amp;gt;  
        &amp;lt;schema targetNamespace=http://Demo.guru99.com/Tutorial.xsd
        xmlns="http://www.w3.org/2000/10/XMLSchema"&amp;gt;

        &amp;lt;element name="TutorialNameRequest"&amp;gt;    
            &amp;lt;complexType&amp;gt;          
                &amp;lt;all&amp;gt;           
                    &amp;lt;element name="TutorialName" type="string"/&amp;gt;         
                &amp;lt;/all&amp;gt;       
            &amp;lt;/complexType&amp;gt;    
        &amp;lt;/element&amp;gt;     
    &amp;lt;element name="TutorialIDRequest"&amp;gt;        
        &amp;lt;complexType&amp;gt;          
            &amp;lt;all&amp;gt;           
                &amp;lt;element name="TutorialID" type="number"/&amp;gt;         
            &amp;lt;/all&amp;gt;       
        &amp;lt;/complexType&amp;gt;      
    &amp;lt;/element&amp;gt;   
    &amp;lt;/schema&amp;gt;  
&amp;lt;/types&amp;gt;    
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As per the above WSDL file, we have an element called "TutorialName" which is of the type String which is part of the element TutorialNameRequest.&lt;/p&gt;

&lt;p&gt;Now, suppose if the WSDL file were to change as per the business requirements and the TutorialName has to become TutorialDescription. This would mean that all the clients who are currently connecting to this web service would then need to make this corresponding change in their code to accommodate the change in the WSDL file.&lt;br&gt;
This shows the biggest challenge of the WSDL file which is the tight contract between the client and the server and that one change could cause a large impact, on the whole, client applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Document size:&lt;/strong&gt;&lt;br&gt;
The other key challenge is the size of the SOAP messages which get transferred from the client to the server. Because of the large messages, using SOAP in places where bandwidth is a constraint can be a big issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#challenges-of-working-with-rest-apis"&gt;
  &lt;/a&gt;
  CHALLENGES OF WORKING WITH REST API'S
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. Lack of Security:&lt;/strong&gt;&lt;br&gt;
 REST does not impose any sort of security like SOAP. This is why REST is very appropriate for public available URL's, but when it comes down to confidential data being passed between the client and the server, REST is the worst mechanism to be used for web services.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Lack of state:&lt;/strong&gt;&lt;br&gt;
Most web applications require a stateful mechanism. For example, if you had a purchasing site which had the mechanism of having a shopping cart, it is required to know the number of items in the shopping cart before the actual purchase is made. Unfortunately, the burden of maintaining this state lies with the client, which just makes the client application heavier and difficult to maintain.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;However, the good news for web developers is that both technologies are very viable in today’s market. Both REST and SOAP can solve a huge number of web problems and challenges, and in many cases each can be made to do the developers bidding, which means they can work across the domain.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What are some useful resources to learn programming/system administration from?</title>
      <author>Bobby Iliev</author>
      <pubDate>Wed, 05 May 2021 19:38:48 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/what-are-some-useful-resources-to-learn-programming-system-administration-from-591o</link>
      <guid>https://dev.to/bobbyiliev/what-are-some-useful-resources-to-learn-programming-system-administration-from-591o</guid>
      <description>&lt;p&gt;With the information overload nowadays, it could be really intimidating for people who are just getting started to find the right resources to learn from.&lt;/p&gt;

&lt;p&gt;What are some useful resources that you wish you had when you got started?&lt;/p&gt;

&lt;p&gt;My top 5 resources are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://freecodecamp.com"&gt;freecodecamp.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devdojo.com"&gt;devdojo.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://digitalocean.com/community"&gt;digitalocean.com/community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codecademy.com"&gt;codecademy.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://laracasts.com"&gt;laracasts.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What are your top 5?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>Font-end learning and knowledge system</title>
      <author>Benny Guo</author>
      <pubDate>Wed, 05 May 2021 18:50:57 +0000</pubDate>
      <link>https://dev.to/tridiamond/font-end-learning-and-knowledge-system-120m</link>
      <guid>https://dev.to/tridiamond/font-end-learning-and-knowledge-system-120m</guid>
      <description>&lt;h1&gt;
  &lt;a href="#0intro"&gt;
  &lt;/a&gt;
  「0」Intro
&lt;/h1&gt;

&lt;p&gt;Many people feel very confused when they face higher knowledge mountains in their front-end career.&lt;/p&gt;

&lt;p&gt;Many of my fans had texted me asking "What should I learn?" and "When will I be finished with this front-end learning loop?"&lt;/p&gt;

&lt;p&gt;Don't worry, buddy! Once you read this article, you'll know a bit more about what makes a great front-end engineer. Creating a knowledge management system and building a career development plan will make sense to you.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#1how-do-you-define-a-good-developer"&gt;
  &lt;/a&gt;
  「1」How do you define a good developer?
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Think about the following question:&lt;/em&gt;&lt;br&gt;
"What does an excellent front-end developer possess?"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After interviewing many front-end engineers, here is what I got:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Familiarized with frameworks such as Angular, React, Vue.&lt;/li&gt;
&lt;li&gt;Knowing the web standards is essential.&lt;/li&gt;
&lt;li&gt;Experience with Webpack and Babel&lt;/li&gt;
&lt;li&gt;Ten years of experience in development&lt;/li&gt;
&lt;li&gt;Performance tuning and optimization&lt;/li&gt;
&lt;li&gt;Object-oriented programming and closures&lt;/li&gt;
&lt;li&gt;A NodeJS expert.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;A good front-end developer will have more important qualities than these.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#so-how-to-determine-the-quality-of-a-developer"&gt;
  &lt;/a&gt;
  So how to determine the quality of a developer?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#knowledge-of-the-field"&gt;
  &lt;/a&gt;
  🔭 Knowledge of the field
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Different type of engineer has different field knowledge&lt;/li&gt;
&lt;li&gt;Different fields of knowledge are interrelated&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#abilities-and-potentials"&gt;
  &lt;/a&gt;
  🧬 Abilities and potentials
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;As long as the ability of the individual matches the  requirements of the role, you will be promoted&lt;/li&gt;
&lt;li&gt;Potential is the upper limit of our abilities, anyone with the same potential should be able to write the same quality code.&lt;/li&gt;
&lt;li&gt;The difference is the ability to come up with solutions to problems and solve them independently&lt;/li&gt;
&lt;li&gt;Each engineer will be assigned with a KPI (Eg. 30% - outstanding, 60% - normal, 10% - unqualified)&lt;/li&gt;
&lt;li&gt;Each individual's potential will be assessed and a  prediction will be given as to when they will be promoted.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#%F0%9F%97%93-career-planning"&gt;
  &lt;/a&gt;
  🗓 Career planning
&lt;/h3&gt;

&lt;p&gt;According to Alibaba's engineer ranking&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Junior Engineer (P5) —— Ability to work independently&lt;/li&gt;
&lt;li&gt;Senior Engineer (P6) —— Core developer, work as a team leader, who can lead the team to break through difficult problems.&lt;/li&gt;
&lt;li&gt;Expert (P7) —— A field expert. Become an authority in one area, drive development, and apply common solutions to solve problems in this area.&lt;/li&gt;
&lt;li&gt;Manager (P8)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-get-promoted"&gt;
  &lt;/a&gt;
  📈 How to get promoted?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Continuously improve technical capabilities&lt;/li&gt;
&lt;li&gt;Precipitation is occurring in your area of speciality&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#achievements"&gt;
  &lt;/a&gt;
  🏆 Achievements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Your achievements prove your abilities and potentials.&lt;/li&gt;
&lt;li&gt;A reflection of what you have contributed and took on in your previous work experiences&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#2how-to-become-a-good-developer"&gt;
  &lt;/a&gt;
  「2」How to become a good developer?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#career-planning"&gt;
  &lt;/a&gt;
  Career Planning
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt; You &lt;/em&gt; are the owner of your career.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Many thinks career planning is the responsibility of their "boss", their "parents" or their "teachers". The reality is, it is you who is responsible for your career.&lt;/li&gt;
&lt;li&gt;Many get out of shape when implementing their career planning. They think that career promotion is the consciousness of the boss. &lt;/li&gt;
&lt;li&gt;Do we just give up if our boss doesn't promote us? &lt;strong&gt;No! we are the boss of our career, we need to take full responsibility for our career growth.&lt;/strong&gt; So we have to act for ourselves!&lt;/li&gt;
&lt;li&gt;A career plan is the most important aspect of a successful professional life, therefore we should act as if &lt;strong&gt;we are in charge of it&lt;/strong&gt;, and we have to come up with a solution to ensure our results.&lt;/li&gt;
&lt;li&gt;You need to know when and where you want to be in the company or your role, and if not, how to get there!&lt;/li&gt;
&lt;li&gt;So we should always keep a sense of urgency and crisis in the workplace&lt;/li&gt;
&lt;li&gt;No one will be responsible for your career success. This is why you need to exert enough effort. The same applies to career development.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#advancements-in-career"&gt;
  &lt;/a&gt;
  Advancements in Career
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Growth —— Develop your skills through continuous learning&lt;/li&gt;
&lt;li&gt;Achievement —— As you advance in skill, you will acquire achievements that can be used to prove your technical abilities&lt;/li&gt;
&lt;li&gt;Promotion —— You can be promoted to the next level by demonstrating your achievements.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hence, achievements are paramount to career advancement. What achievements can we acquire in the course of our daily routine?&lt;/p&gt;

&lt;p&gt;There are &lt;em&gt;three&lt;/em&gt; main types of achievements we can obtain!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#achieve-project-objectives"&gt;
  &lt;/a&gt;
  🎡 Achieve Project Objectives
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Business objectives

&lt;ul&gt;
&lt;li&gt;Understand the core objectives of your company's business&lt;/li&gt;
&lt;li&gt;Turn objectives into metrics (UV, PV, page load time, profits)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Technical solutions

&lt;ul&gt;
&lt;li&gt;Conversion of the business target to technical target&lt;/li&gt;
&lt;li&gt;Put the plan to work and complete small size trials&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Implementing the plan

&lt;ul&gt;
&lt;li&gt;Determine implementation objectives and participants&lt;/li&gt;
&lt;li&gt;Manage the implementation progress&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Result evaluation

&lt;ul&gt;
&lt;li&gt;Collecting data and form into a data report&lt;/li&gt;
&lt;li&gt;Then report to a superior&lt;/li&gt;
&lt;li&gt;No promotion is possible without positive results, else all you get is a "diligent and hard-working" reputation&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;A study case:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Business goals &amp;amp; metrics:

&lt;ul&gt;
&lt;li&gt;Improve click-through rate&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Technical solution:

&lt;ul&gt;
&lt;li&gt;Add gesture operation to TAB component&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Implementation 1:

&lt;ul&gt;
&lt;li&gt;Add corresponding feature&lt;/li&gt;
&lt;li&gt;Push to production*&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Result:

&lt;ul&gt;
&lt;li&gt;Click-through rate increased 3 times&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Implementation 2:

&lt;ul&gt;
&lt;li&gt;Compile general TAB components&lt;/li&gt;
&lt;li&gt;Helping making a good base UI/UX guideline&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#achieve-development-automation"&gt;
  &lt;/a&gt;
  ⚙️ Achieve Development Automation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Target

&lt;ul&gt;
&lt;li&gt;Improved code quality&lt;/li&gt;
&lt;li&gt;Improved development efficiency&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Plan and implementation

&lt;ul&gt;
&lt;li&gt;Rules and regulations&lt;/li&gt;
&lt;li&gt;Repo / Pacakges&lt;/li&gt;
&lt;li&gt;Tools / CLI&lt;/li&gt;
&lt;li&gt;Systems&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;End result

&lt;ul&gt;
&lt;li&gt;Ability to monitor production&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;A case study: Prevention of XSS attacks&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Target: 

&lt;ul&gt;
&lt;li&gt;XSS attack white hat feedback vulnerability&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Technical solution: 

&lt;ul&gt;
&lt;li&gt;Organize the security manual&lt;/li&gt;
&lt;li&gt;Review the historical code&lt;/li&gt;
&lt;li&gt;Building a code scan tool&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Implementation:

&lt;ul&gt;
&lt;li&gt;Change the code release process&lt;/li&gt;
&lt;li&gt;Review the entire code&lt;/li&gt;
&lt;li&gt;Preach to all the front-end developers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Result: 

&lt;ul&gt;
&lt;li&gt;XSS vulnerabilities significantly reduced&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#resolving-technical-difficulties"&gt;
  &lt;/a&gt;
  🪄 Resolving technical difficulties
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Target a:

&lt;ul&gt;
&lt;li&gt;Recognized technical difficulties&lt;/li&gt;
&lt;li&gt;One that can affect the business&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Planning and implementation

&lt;ul&gt;
&lt;li&gt;Rely on solid programming skills&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;A case study:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Case: Crawling commodity prices&lt;/li&gt;
&lt;li&gt;Background:

&lt;ul&gt;
&lt;li&gt;In a browser plug-in project, you need to crawl the price comparison of each website&lt;/li&gt;
&lt;li&gt;But each website will use image prices and other means to defend&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Solution:

&lt;ul&gt;
&lt;li&gt;Introduce Javascript terminal digital recognition technology&lt;/li&gt;
&lt;li&gt;Rely on AI technology to solve the problem&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#3frontend-and-learning-methods"&gt;
  &lt;/a&gt;
  「3」Front-end and learning methods
&lt;/h1&gt;

&lt;p&gt;Being a good developer requires us to know how to study as a front-end developer.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#a-better-approach-to-learning"&gt;
  &lt;/a&gt;
  🔮 A better approach to learning
&lt;/h2&gt;

&lt;p&gt;No pressure should be put on learning the knowledge system, instead one should try to understand the integrity and the framework of the knowledge system. &lt;/p&gt;

&lt;p&gt;A knowledge system should be accomplished by analyzing things from multiple perspectives.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Many developers are questioning whether what they have learned is useful.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The following tips can help you approach learning better:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Although some knowledge is useless, some small points may be useful during the course of a working day&lt;/li&gt;
&lt;li&gt;Most of the time there's no way to find out for certain how effective a piece of knowledge is&lt;/li&gt;
&lt;li&gt;In order to extract the most meaningful knowledge, we must have a knowledge system to sort them.&lt;/li&gt;
&lt;li&gt;We need to have a good study habit, whenever we see a new 
the knowledge we should try to understand it regardless of its usefulness&lt;/li&gt;
&lt;li&gt;The fact is that we do not have to fully comprehend new knowledge; it becomes clearer once you are faced with it again and again from different situations or environments.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Conclusion is:&lt;br&gt;
"Combining systematic learning with random learning"&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#%F0%9F%8F%97-frontend-skill-model"&gt;
  &lt;/a&gt;
  🏗 Front-end skill model
&lt;/h2&gt;

&lt;p&gt;Once we have a better understanding of the learning approach, then we must then decide which categories to focus our learning efforts on.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Domain Knowledge

&lt;ul&gt;
&lt;li&gt;Different fields will have different knowledge&lt;/li&gt;
&lt;li&gt;Learning by practice&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Frontend knowledge

&lt;ul&gt;
&lt;li&gt;Establish a knowledge system&lt;/li&gt;
&lt;li&gt;The focus is to mastery the knowledge not the magnitude of the knowledge system&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Abilities —— deliberate practice

&lt;ul&gt;
&lt;li&gt;Programming ability&lt;/li&gt;
&lt;li&gt;Architecture capability&lt;/li&gt;
&lt;li&gt;Engineering capability&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;"Frontend technology is not a magic spell book,&lt;br&gt;
the real ability is obtained by practice."&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#learning-method"&gt;
  &lt;/a&gt;
  📚 Learning method
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#relating-pieces-of-knowledge"&gt;
  &lt;/a&gt;
  Relating pieces of knowledge
&lt;/h3&gt;

&lt;p&gt;To build our knowledge system, we want to pursue completeness but not perfection.&lt;/p&gt;

&lt;p&gt;The first key goal is to find the key logical relationship between all your knowledge.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sequential relation

&lt;ul&gt;
&lt;li&gt;Record the relationship between processes in a system.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Combination relationship

&lt;ul&gt;
&lt;li&gt;Find the relationship between combinations&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Perspective relationship

&lt;ul&gt;
&lt;li&gt;When you look at knowledge, Each perspective you see is a complete thing on its own&lt;/li&gt;
&lt;li&gt;Understand a complete thing by looking at a piece of knowledge from various angles&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Classification relationship

&lt;ul&gt;
&lt;li&gt;Sort knowledge by category&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#organizing-and-sorting"&gt;
  &lt;/a&gt;
  Organizing and sorting
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;You can find clues by searching or by reading manuals or articles.&lt;/li&gt;
&lt;li&gt;Find multiple sources of information.&lt;/li&gt;
&lt;li&gt;Make sure your knowledge is complete by comparing and strengthening it.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#finding-the-source"&gt;
  &lt;/a&gt;
  Finding the source
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Source of knowledge

&lt;ul&gt;
&lt;li&gt;Establish the knowledge base from the source and enhance the credibility&lt;/li&gt;
&lt;li&gt;Find the earliest published papers or magazines&lt;/li&gt;
&lt;li&gt;Study the initial implementation case&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Standards and documents

&lt;ul&gt;
&lt;li&gt;Read the ones with high authorities&lt;/li&gt;
&lt;li&gt;Make a good comparison to ensure accuracy&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#4knowldege-system"&gt;
  &lt;/a&gt;
  「4」Knowldege System
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QMudCEv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8e8l5xfxiu9ccn8wmjit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QMudCEv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8e8l5xfxiu9ccn8wmjit.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following all the tips in this article, you will able to build the above knowledge system.&lt;/p&gt;

&lt;p&gt;Building a complete knowledge system by filling in missing pieces of knowledge while learning. In the end, this knowledge system will be carved into your head, not just in your computer.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#recommended-open-source-projects"&gt;
  &lt;/a&gt;
  Recommended Open Source Projects
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#hexo-theme-aurora"&gt;
  &lt;/a&gt;
  Hexo Theme Aurora
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ctpx4rEa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210504220315253.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ctpx4rEa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210504220315253.png" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IZq4SVca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/2021042520203350.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IZq4SVca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/2021042520203350.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/tridiamond" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a0Ftdgk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--FiE5zImT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/289909/7452f918-5f0b-4ac3-af65-840f88576cfc.jpeg" alt="tridiamond image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/auroral-ui/hexo-aurora-theme-released-today-51he" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Hexo Aurora Theme released today! &lt;/h2&gt;
      &lt;h3&gt;Benny Guo ・ Mar 30 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#vue&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#typescript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#hexo&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://aurora.tridiamond.tech/zh/"&gt;Usage Document&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#vscode-aurora-future-theme"&gt;
  &lt;/a&gt;
  VSCode Aurora Future theme
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k80-HjpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210425202156787.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k80-HjpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210425202156787.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/tridiamond" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a0Ftdgk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--FiE5zImT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/289909/7452f918-5f0b-4ac3-af65-840f88576cfc.jpeg" alt="tridiamond image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/auroral-ui/a-futuristic-dark-theme-aurora-future-310p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A futuristic dark theme `Aurora Future`&lt;/h2&gt;
      &lt;h3&gt;Benny Guo ・ Apr 17 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#vscode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#design&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#firefox-aurora-future"&gt;
  &lt;/a&gt;
  Firefox Aurora Future
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f2h9Aq8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210425202747477.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f2h9Aq8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-blog.csdnimg.cn/20210425202747477.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/tridiamond" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a0Ftdgk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--FiE5zImT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/289909/7452f918-5f0b-4ac3-af65-840f88576cfc.jpeg" alt="tridiamond image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/auroral-ui/firefox-theme-aurora-future-48ei" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Firefox theme `Aurora Future`&lt;/h2&gt;
      &lt;h3&gt;Benny Guo ・ Apr 25 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#firefox&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#aurora&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#theme&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/aurora-future/"&gt;Theme page&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>frontend</category>
      <category>webdev</category>
      <category>leadership</category>
      <category>career</category>
    </item>
    <item>
      <title>Finding what matters to you</title>
      <author>John Papa</author>
      <pubDate>Wed, 05 May 2021 18:49:56 +0000</pubDate>
      <link>https://dev.to/john_papa/finding-what-matters-to-you-3anj</link>
      <guid>https://dev.to/john_papa/finding-what-matters-to-you-3anj</guid>
      <description>&lt;p&gt;Are you happy?&lt;/p&gt;

&lt;p&gt;I've been asked this question many times by co-workers and my leaders over the years. I've been lucky enough to have many leaders who cared enough to ask it and cared enough to help shape the environment around me and my colleagues. But for years I answered that question not even knowing there was a question that must be asked and answered first. A question that will shape whether I am happy or not.&lt;/p&gt;

&lt;p&gt;That question is "What makes you happy?".&lt;/p&gt;

&lt;p&gt;At some point in my career I decided to invest some time into thinking through that question. it's one that may be different for a lot of people. After all, what motivates you vs your colleague may be different. Sure, there will be overlapping aspects, but we are all different.&lt;/p&gt;

&lt;p&gt;First, I realized I am thankful for having a job that compensates me. Not everyone does. More specifically, I am thankful that this allows me to take care of my family.&lt;/p&gt;

&lt;p&gt;I'll cut to the end of the story here as I have 3 main points:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I found it helpful to carefully consider and be honest with myself on what makes me happy in a job.&lt;/li&gt;
&lt;li&gt;My list evolves as my life evolves. Sometimes items are added, sometimes they drop off that list.&lt;/li&gt;
&lt;li&gt;Being happy with my job is not the same as being happy with my life.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'll share here some of the most important aspects that make me happy at work. Maybe you have different ones or some of the same.&lt;/p&gt;

&lt;p&gt;This list is not in order, nor are they all equal to me.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Do I have the time to truly be with my family outside of my "work hours"?&lt;/li&gt;
&lt;li&gt;Do I find a challenge that stretches me and fits with how I like to build teams/processes/technology to achieve business solutions?&lt;/li&gt;
&lt;li&gt;Do I find the work interesting?&lt;/li&gt;
&lt;li&gt;Do I have support from my leaders?&lt;/li&gt;
&lt;li&gt;Do I have freedom to control how I get to the objectives?&lt;/li&gt;
&lt;li&gt;Do I have opportunity to influence direction?&lt;/li&gt;
&lt;li&gt;Do I find authenticity and character to be valued at work?&lt;/li&gt;
&lt;li&gt;Am I fairly compensated?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Are there other things I value? Absolutely! The point of this exercise for me was not to list a thousand items. Wow I'd be pressured into making sure I didn't leave something out (there is always something else to add). For example, I highly value working with collaborative people ... I could add that easily to the list above. And maybe I should. But at some point the list serves its purpose to me, which is to help me consider what matters to me.&lt;/p&gt;

&lt;p&gt;I'll leave you with this thought ... do you know what matters to you and influences what makes you happy at work? If not, maybe creating your own list will help.&lt;/p&gt;

</description>
      <category>devrel</category>
      <category>career</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Timezone for DateTime Field at Laravel Nova</title>
      <author>mirac sengonul</author>
      <pubDate>Wed, 05 May 2021 18:47:15 +0000</pubDate>
      <link>https://dev.to/miracsengonul/timezone-for-datetime-field-at-laravel-nova-44fn</link>
      <guid>https://dev.to/miracsengonul/timezone-for-datetime-field-at-laravel-nova-44fn</guid>
      <description>&lt;p&gt;Hi there 👋&lt;/p&gt;

&lt;p&gt;You can want to see &lt;strong&gt;created_at&lt;/strong&gt; field or more fields like this with timezone. You follow me.&lt;/p&gt;

&lt;p&gt;Nova allows us for override any field.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'CreatedAt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%s'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Carbon&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setTimezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Europe/Istanbul'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Y-m-d'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
           &lt;span class="p"&gt;}),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We was able to manipulate &lt;strong&gt;created_at&lt;/strong&gt; field.&lt;/p&gt;

&lt;p&gt;We have been registering the records that date time types without UTC. But after we had made changes we saw that with timezone.&lt;/p&gt;

&lt;p&gt;Have good day 🎊&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>nova</category>
      <category>timezone</category>
    </item>
    <item>
      <title>Easier web sites for CPAN modules</title>
      <author>Dave Cross</author>
      <pubDate>Wed, 05 May 2021 18:46:43 +0000</pubDate>
      <link>https://dev.to/davorg/easier-web-sites-for-cpan-modules-1nn4</link>
      <guid>https://dev.to/davorg/easier-web-sites-for-cpan-modules-1nn4</guid>
      <description>&lt;p&gt;A few months ago, Gabor asked if &lt;a href="https://dev.to/szabgab/perl-modules-with-their-own-web-site-2gmo"&gt;more CPAN modules should have their own web sites&lt;/a&gt;. I replied, saying thought it was a good idea and pointing out &lt;a href="https://dev.to/davorg/simple-cpan-module-web-sites-with-github-pages-29ka"&gt;how easy it was to create project web sites&lt;/a&gt; on GitHub Pages.&lt;/p&gt;

&lt;p&gt;But since then, I've been wondering if could be made even easier. Perhaps we could make it easy enough that there was really no reason not to have a web site for your CPAN module.&lt;/p&gt;

&lt;p&gt;And today I've released &lt;a href="https://metacpan.org/release/App-CPANModuleSite"&gt;App::CPANModuleSite&lt;/a&gt; that does just that.&lt;/p&gt;

&lt;p&gt;The default usage is pretty easy.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install the module&lt;/li&gt;
&lt;li&gt;In your repo checkout run &lt;code&gt;mksite &amp;lt;distribution-name&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;git add docs&lt;/code&gt; to add your new website directory to your repo&lt;/li&gt;
&lt;li&gt;Commit the changes and push the commit&lt;/li&gt;
&lt;li&gt;Configure your repo to support GitHub pages (I covered that in &lt;a href="https://dev.to/davorg/simple-cpan-module-web-sites-with-github-pages-29ka"&gt;my earlier blog post&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And you'll have a basic web site for your module at the web address https://&amp;lt;github-user&amp;gt;.github.io/&amp;lt;repo-name&amp;gt;.&lt;/p&gt;

&lt;p&gt;The default site is pretty basic. And it has a big banner across the page saying that you haven't put any effort into the site yet. But that's simple enough to fix. Just add a file called &lt;code&gt;tt_lib/intro.tt&lt;/code&gt; to your repo that contains a bit of HTML which explains more about what your module does. The next time you rebuild the site, that text will replace the default paragraph.&lt;/p&gt;

&lt;p&gt;Other than that, the default site contains:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The documentation for all of the modules in your distribution&lt;/li&gt;
&lt;li&gt;Links to other standard pages about your module (CPAN, CPAN testers, CPANTS, things like that)&lt;/li&gt;
&lt;li&gt;Links to your code repo and issue tracker (if they are defined in your CPAN metadata)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's also simple to add more pages to your site. Just add files in a &lt;code&gt;site_src&lt;/code&gt; directory in your repo. Any file in that directory whose name ends in &lt;code&gt;.tt&lt;/code&gt; will be processed by the Template Toolkit and the output will be stored in the &lt;code&gt;/docs&lt;/code&gt; directory (with the &lt;code&gt;.tt&lt;/code&gt; stripped from the name). Any files without a &lt;code&gt;.tt&lt;/code&gt; extension will just be copied into &lt;code&gt;/docs&lt;/code&gt;. If you're adding pages, then you'll almost certainly also want to edit the navbar on the page to contain links to your new pages.&lt;/p&gt;

&lt;p&gt;Default versions of various template files in &lt;code&gt;/site_src&lt;/code&gt; and &lt;code&gt;/tt_lib&lt;/code&gt; are installed as part of App::CPANModuleSite's installation. To edit them, you just copy them into the same directory in your repo and edit the copied versions. Any files found inside your repo will take precedence over the versions in the default directories.&lt;/p&gt;

&lt;p&gt;Any templates that you write (or existing ones that you edit) will have access to a few template variables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;distribution&lt;/strong&gt; is a &lt;a href="https://metacpan.org/pod/MetaCPAN::Client::Distribution"&gt;MetaCPAN::Client::Distribution&lt;/a&gt; object containing details of your distribution&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;release&lt;/strong&gt; is a &lt;a href="https://metacpan.org/pod/MetaCPAN::Client::Release"&gt;MetaCPAN::Client::Release&lt;/a&gt; object containing details of the latest release of your distribution&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;modules&lt;/strong&gt; is an array reference, where each element of the array is a &lt;a href="https://metacpan.org/pod/MetaCPAN::Client::Module"&gt;MetaCPAN::Client::Module&lt;/a&gt; object containing details of one module in your distribution&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is all pretty experimental currently. I'm very happy to add more information to the default pages, more variables to the template engine and make pretty much any other changes that any users suggest. Let's work together to make this a useful and powerful web site generation tool.&lt;/p&gt;

&lt;p&gt;I have a couple of thoughts for things I want to do next:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I've already started work on creating a GitHub Action, so that you can automatically regenerate the site, for example, whenever you check in a change to your code&lt;/li&gt;
&lt;li&gt;The whole point of this is that more CPAN web sites mean better SEO for Perl. So I plan to think of ways that make the default sites as SEO-friendly as possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please let me know what you think. Do you think this is a good idea? Will you use the module?&lt;/p&gt;

&lt;p&gt;Oh, and the site that App::CPANModuleSite generated for itself is at &lt;a href="https://davorg.dev/app-cpanmodulesite/"&gt;https://davorg.dev/app-cpanmodulesite/&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>perl</category>
      <category>cpan</category>
      <category>githubpages</category>
    </item>
    <item>
      <title>12 Simple Button Hover Animation Using CSS</title>
      <author>Kiran Raj R</author>
      <pubDate>Wed, 05 May 2021 18:41:37 +0000</pubDate>
      <link>https://dev.to/kiranrajvjd/12-simple-button-hover-animation-using-css-1ff1</link>
      <guid>https://dev.to/kiranrajvjd/12-simple-button-hover-animation-using-css-1ff1</guid>
      <description>&lt;p&gt;Almost every web project has one or more buttons, when the button is clicked we need to give an indication to the person that the button was clicked. It can be through a message or change in the button's visual properties. The change in the visual property help to convey the message quickly and easily. The visual indicators are better if the user need to click one button from a group of buttons, here I listed 12 ways that can be used to provide visual indication that the user has clicked the button. All are simple designs using CSS properties, no JavaScript is used. The working logic is given as comments in the CSS area, I tried to keep the CSS code simple, you can use your creativity to make these better. I just tried to show different ways of creating hover effects, if you find any errors let me know. If you have any suggestion, please comment, Happy Coding.&lt;br&gt;
 Here is the &lt;a href="https://codepen.io/kiran-r-raj/pen/vYxYKQK"&gt;codepen&lt;/a&gt; that contain all the 12 button hover effect examples.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/vYxYKQK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/19-simple-hover-animation-using-css-1l36" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;19 Simple Hover Animation Using CSS&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R ・ May  4 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/24-html-tags-you-may-not-know-37be" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;24 HTML Tags you may not know.&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R ・ May  4 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/awesome-css-generators-3709" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;25+ Awesome CSS Code Generators For Your Next Project&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R ・ Apr 29 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/15-awesome-css-animation-resources-4mhi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;15+ Awesome CSS Animation Resources&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R ・ Apr 21 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/10-best-javascript-based-github-repos-for-web-developers-49pc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 Awesome GitHub Repos For Web Developers &lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R ・ Apr 26 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Puppeteer performance in AWS Lambda Docker containers</title>
      <author>Andrew</author>
      <pubDate>Wed, 05 May 2021 18:33:28 +0000</pubDate>
      <link>https://dev.to/megabotan/puppeteer-performance-in-aws-lambda-docker-containers-2325</link>
      <guid>https://dev.to/megabotan/puppeteer-performance-in-aws-lambda-docker-containers-2325</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-i-need-that"&gt;
  &lt;/a&gt;
  Why I need that?
&lt;/h2&gt;

&lt;p&gt;I'm responsible for all the technical stuff at the ScrapingAnt. We're providing a highly scalable &lt;a href="https://scrapingant.com"&gt;web scraping API&lt;/a&gt;. One of the recent tasks was to discover possible variants of covering high demand for headless Chrome instances for a short time (handle burstable workload). And AWS Lambda looks like a great tool for this task.&lt;/p&gt;

&lt;p&gt;At the end of 2020, AWS introduced Container Image Support for Lambda service. You can build your image based on any Linux distribution or using base images provided by Amazon. Previously there were no options for custom runtime in AWS Lambda, and additional binaries had to be added using Lambda layers. It was hard to develop, test, and deploy. Container support solves all these problems, and I decided to give it a try.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-we-going-to-do-in-this-article"&gt;
  &lt;/a&gt;
  What are we going to do in this article
&lt;/h2&gt;

&lt;p&gt;We will create and deploy a simple Lambda function based on a custom docker image and investigate the performance of this solution.&lt;/p&gt;

&lt;p&gt;Our Lambda function will get an URL as an input and return text from the rendered webpage as output. You can use it for web scraping, testing, and monitoring websites, especially when content is rendered via javascript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-code-part"&gt;
  &lt;/a&gt;
  The code part
&lt;/h2&gt;

&lt;p&gt;Basically, it does the following steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;launch browser&lt;/li&gt;
&lt;li&gt;create a new tab&lt;/li&gt;
&lt;li&gt;open URL (provided as input) in this tab, and wait for load&lt;/li&gt;
&lt;li&gt;extract text from page&lt;/li&gt;
&lt;li&gt;close tab and browser&lt;/li&gt;
&lt;li&gt;return the extracted text
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;puppeteer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;lambdaHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;puppeteer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;executablePath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/usr/bin/chromium&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;headless&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;dumpio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// pass chrome logs to output, helps a lot if launch fails&lt;/span&gt;
      &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;...some args passed to chrome&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newPage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;extractedText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;waitUntil&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;networkidle0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;extractedText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;finally&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;extractedText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambdaHandler&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check the full code in the &lt;a href="https://github.com/ScrapingAnt/aws-lambda-docker-research"&gt;git repo&lt;/a&gt;. It contains all flags needed to launch the browser and &lt;a href="https://aws.amazon.com/xray/"&gt;AWS X-Ray&lt;/a&gt; integration to measure performance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-custom-docker-image-for-lambda"&gt;
  &lt;/a&gt;
  Building custom docker image for Lambda
&lt;/h2&gt;

&lt;p&gt;Let's build a custom Docker image to fully control the runtime environment, dependencies, and browser version.&lt;/p&gt;

&lt;p&gt;This dockerfile is based on &lt;a href="https://developers.google.com/web/tools/puppeteer/troubleshooting#running_puppeteer_in_docker"&gt;Google recommendations on how to pack puppeteer in docker&lt;/a&gt;. Also, we need to install &lt;a href="https://www.npmjs.com/package/aws-lambda-ric"&gt;aws-lambda-ric&lt;/a&gt; to make our image compatible with AWS Lambda.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:14-buster&lt;/span&gt;

&lt;span class="c"&gt;# Install Chromium&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;apt-get update &lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; chromium fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 &lt;span class="se"&gt;\
&lt;/span&gt;      &lt;span class="nt"&gt;--no-install-recommends&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-rf&lt;/span&gt; /var/lib/apt/lists/&lt;span class="k"&gt;*&lt;/span&gt;


&lt;span class="c"&gt;# Install aws-lambda-ric build dependencies&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;    apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;    g++ &lt;span class="se"&gt;\
&lt;/span&gt;    make &lt;span class="se"&gt;\
&lt;/span&gt;    cmake &lt;span class="se"&gt;\
&lt;/span&gt;    unzip &lt;span class="se"&gt;\
&lt;/span&gt;    libcurl4-openssl-dev

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /code-and-deps&lt;/span&gt;

&lt;span class="c"&gt;# Install nodejs dependencies, and create user (to run chromium from non-root user)&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;aws-lambda-ric puppeteer@8.0.0 &lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; groupadd &lt;span class="nt"&gt;-r&lt;/span&gt; pptruser &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; useradd &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; pptruser &lt;span class="nt"&gt;-G&lt;/span&gt; audio,video pptruser &lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; /home/pptruser/Downloads &lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;chown&lt;/span&gt; &lt;span class="nt"&gt;-R&lt;/span&gt; pptruser:pptruser /home/pptruser &lt;span class="se"&gt;\
&lt;/span&gt;    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;chown&lt;/span&gt; &lt;span class="nt"&gt;-R&lt;/span&gt; pptruser:pptruser /code-and-deps

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; src/app.js /code-and-deps/app.js&lt;/span&gt;
&lt;span class="k"&gt;USER&lt;/span&gt;&lt;span class="s"&gt; pptruser&lt;/span&gt;
&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; ["/usr/local/bin/npx", "aws-lambda-ric"]&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["app.handler"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#checking-on-the-local-environment"&gt;
  &lt;/a&gt;
  Checking on the local environment
&lt;/h2&gt;

&lt;p&gt;There is a special tool to test AWS Lambda images locally. It's called &lt;a href="https://github.com/aws/aws-lambda-runtime-interface-emulator"&gt;AWS Lambda Runtime Interface Emulator&lt;/a&gt; (RIE). You have two options: include RIE in your image or install it locally. We don't need it in the production image, so let's choose the second option. We will download binary locally and mount it to our image if we need to test it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; ~/.aws-lambda-rie
curl &lt;span class="nt"&gt;-Lo&lt;/span&gt; ~/.aws-lambda-rie/aws-lambda-rie https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie
&lt;span class="nb"&gt;chmod&lt;/span&gt; +x ~/.aws-lambda-rie/aws-lambda-rie
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Launching container:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-v&lt;/span&gt; ~/.aws-lambda-rie:/aws-lambda &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-p&lt;/span&gt; 9000:8080 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--entrypoint&lt;/span&gt; /aws-lambda/aws-lambda-rie &lt;span class="se"&gt;\&lt;/span&gt;
    lambda-custom &lt;span class="se"&gt;\&lt;/span&gt;
    /usr/local/bin/npx aws-lambda-ric app.handler
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And testing that everything works fine:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜  ~ curl -XPOST "http://localhost:9000/2015-03-31/functions/function/invocations" -d '{"url": "https://example.com"}'
"Example Domain\n\nThis domain is for use in illustrative examples in documents. You may use this domain in literature without prior coordination or asking for permission.\n\nMore information..."%
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deploy"&gt;
  &lt;/a&gt;
  Deploy
&lt;/h2&gt;

&lt;p&gt;First, we have to upload our production image to ECR (Docker Registry managed by AWS).&lt;br&gt;
After that, we will use &lt;a href="https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html"&gt;AWS SAM&lt;/a&gt; to deploy the function. The configuration of our deployment is described in the YAML file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;AWSTemplateFormatVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;2010-09-09'&lt;/span&gt;
&lt;span class="na"&gt;Transform&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AWS::Serverless-2016-10-31&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;lambda_chrome_in_docker_research&lt;/span&gt;

&lt;span class="na"&gt;Globals&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;Function&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;Timeout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt;

&lt;span class="na"&gt;Resources&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;LambdaExecutorFunction&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AWS::Serverless::Function&lt;/span&gt;
    &lt;span class="na"&gt;Properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;PackageType&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Image&lt;/span&gt;
      &lt;span class="na"&gt;FunctionName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;lambda-custom&lt;/span&gt;
      &lt;span class="na"&gt;ImageUri&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;paste_your_ecr_image_uri_here&lt;/span&gt;
      &lt;span class="na"&gt;MemorySize&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2048&lt;/span&gt;
      &lt;span class="na"&gt;Tracing&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Active&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To deploy our Lambda function, we have to perform few steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create an S3 bucket to store our application template&lt;/li&gt;
&lt;li&gt;Create an ECR repository to store docker image&lt;/li&gt;
&lt;li&gt;Log in to and push the image to the ECR repository&lt;/li&gt;
&lt;li&gt;Deploy our Lambda using AWS SAM&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can find the full deploy bash script in the &lt;a href="https://github.com/ScrapingAnt/aws-lambda-docker-research"&gt;git repo&lt;/a&gt; containing all code and automation from this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h2&gt;

&lt;p&gt;Let's test our Lambda. We can trigger it in the AWS console. Here are performance results for the first cold start run:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vapeAIdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjeku5qocwreqtonvk8y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vapeAIdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjeku5qocwreqtonvk8y.png" alt="Cold start"&gt;&lt;/a&gt;&lt;br&gt;
Wow, that's unexpectedly slow! Let's trigger it one more time to check how warmed-up lambda works:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fop1we8p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9v1s0mc3kzls9tlhr2h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fop1we8p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9v1s0mc3kzls9tlhr2h.png" alt="Warmed up"&gt;&lt;/a&gt;&lt;br&gt;
We can see that the first time our function starts in a few seconds, but then it launches the browser and opens a new tab. And it takes about 20 seconds. Second-time browser launch is so much faster! But why?&lt;/p&gt;

&lt;p&gt;The answer is hidden in the specifics of the Lambda filesystem. When Lambda launches, it doesn't load the whole docker image to the instance it's running on. AWS engineers decided to load only needed chunks of data from the image when it's needed. So the container starts fast, but if you need to access big files from your image, they will be loaded over the network, probably from ECR. &lt;/p&gt;

&lt;p&gt;They are multiple layers of file system cache, but it won't help us for the first run. Also, the cache gets invalidated after some time, and the story repeats. If we need to handle burst load, hundreds of Lambdas will be launched simultaneously, and all of them will perform poorly.&lt;/p&gt;

&lt;p&gt;You can find more details about Lambda filesystem architecture and cache in &lt;a href="https://youtu.be/FTwsMYXWGB0?t=1086"&gt;AWS re:Invent video&lt;/a&gt; dedicated to Lambda security and internal arrangement.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-improve-first-start-response-time"&gt;
  &lt;/a&gt;
  How to improve first start response time
&lt;/h2&gt;

&lt;p&gt;We have to decrease the amount of data loaded from ECR on the first call. First, we will use the base image provided by AWS, as it's already cached on their file system. Secondly, if the size of chrome binary and dependencies decrease, they will be loaded faster from disk. &lt;/p&gt;

&lt;p&gt;For example, we can use &lt;a href="https://github.com/alixaxel/chrome-aws-lambda"&gt;chrome-aws-lambda&lt;/a&gt; binaries. They were built to fit Lambda layers, so the size is much smaller than regular chrome installation. &lt;/p&gt;

&lt;p&gt;Here is the new Dockerfile:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; public.ecr.aws/lambda/nodejs:14&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;chrome-aws-lambda@8.0.2 puppeteer-core@8.0.0
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; src/*  ${LAMBDA_TASK_ROOT}&lt;/span&gt;

&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; [ "app.handler" ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, we have to change a few lines of code to use chrome provided by the chrome-aws-lambda library:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;chromium&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;chrome-aws-lambda&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;chromium&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;puppeteer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;chromium&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;defaultViewport&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;chromium&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultViewport&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;executablePath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;chromium&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;executablePath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;headless&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;chromium&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headless&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Deploy steps are the same as for the custom image.&lt;/p&gt;

&lt;p&gt;The image size decreased from 1.48GB to 580MB. Also, we used the base image provided by AWS, so most of our image is always pre-cached on servers that will run our Lambda.&lt;/p&gt;

&lt;p&gt;Let's test performance.&lt;/p&gt;

&lt;p&gt;Cold start:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xq6sBqJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tssmsjx1zmfmlwzejxot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xq6sBqJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tssmsjx1zmfmlwzejxot.png" alt="Cold start"&gt;&lt;/a&gt;&lt;br&gt;
Warmed up:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ueL37sNh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrsrda50kdeql170md6i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ueL37sNh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrsrda50kdeql170md6i.png" alt="Warmed up"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we can see, the cold start run is much faster, and consequent runs are the same as for the custom image.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;AWS Lambda currently supports images up to 10GB size, but you can have performance problems if you actually use huge images. The only scenario I see for big images is if you don't need a lot of data from the docker image on each call. Or if you don't care about response latency(but you pay for every second Lambda is blocked by slow disk io). So, keep your image sizes low.&lt;/p&gt;

&lt;p&gt;If cold start performance is not a problem for your architecture, the custom images are perfect. You can control all dependencies and libraries and easily reproduce the service locally or in any environment supporting docker (Kubernetes cluster, docker swarm, etc.). So the vendor lock is minimized, and the flexibility is great.&lt;/p&gt;

&lt;p&gt;I used &lt;a href="https://www.npmjs.com/package/aws-xray-sdk-core"&gt;aws-xray-sdk&lt;/a&gt; node.js library for tracing purposes, and it was excruciating. I've spent a lot of time making it work on production and not to fail locally. Avoid this library if you have any alternatives.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Full source code used in this article &lt;a href="https://github.com/ScrapingAnt/aws-lambda-docker-research"&gt;https://github.com/ScrapingAnt/aws-lambda-docker-research&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;AWS re:Invent explanation how Lambda filesystem works &lt;a href="https://youtu.be/FTwsMYXWGB0?t=1086"&gt;https://youtu.be/FTwsMYXWGB0?t=1086&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Google Developers tips on how to run puppeteer in Docker &lt;a href="https://developers.google.com/web/tools/puppeteer/troubleshooting#running_puppeteer_in_docker"&gt;https://developers.google.com/web/tools/puppeteer/troubleshooting#running_puppeteer_in_docker&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Example of Puppeteer on Lambda with a Docker Container &lt;a href="https://github.com/VikashLoomba/AWS-Lambda-Docker"&gt;https://github.com/VikashLoomba/AWS-Lambda-Docker&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>serverless</category>
      <category>aws</category>
      <category>webscraping</category>
      <category>docker</category>
    </item>
    <item>
      <title>SOAP vs REST vs gRPC vs GraphQL</title>
      <author>Andrei Dascalu</author>
      <pubDate>Wed, 05 May 2021 18:21:57 +0000</pubDate>
      <link>https://dev.to/andreidascalu/soap-vs-rest-vs-grpc-vs-graphql-1ib6</link>
      <guid>https://dev.to/andreidascalu/soap-vs-rest-vs-grpc-vs-graphql-1ib6</guid>
      <description>&lt;p&gt;As far as comparisons go, this might seem a bit weird. While the first two are (were) traditional competing "standards", the other two are a bit different in scope. &lt;br&gt;
What unites them is the general idea of transferring control of data manipulation. Each of these allow an external entity to access your data within some boundaries.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#soap"&gt;
  &lt;/a&gt;
  SOAP
&lt;/h2&gt;

&lt;p&gt;The "Simple Object Access Protocol" (though largely this meaning has been rightly forgotten since it's anything but simple) is the oldest system for data access as well as the bane of my university years. &lt;/p&gt;

&lt;p&gt;It communicates using XML content over HTTP (mostly, but the transport isn't a part of the standard - so it could be used over anything) for the specific goal of invoking procedures exposed by a service.&lt;/p&gt;

&lt;p&gt;This requires the service to define the available procedures, its parameters and types, content format, responses, etc in a WSDL that defines the service while it also needs a bunch of other XML-offshoots (XSD, etc) to define custom types and objects.&lt;/p&gt;

&lt;p&gt;I bet you're seeing where the simplicity has gone to die.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#upsides"&gt;
  &lt;/a&gt;
  Upsides
&lt;/h3&gt;

&lt;p&gt;SOAP allows for code generation based on XML, XML is (was) a popular and ubiquitous standard with plenty of flexibility (eg: namespacing). As text-based standard it's easy to debug and has no restrictions in transport. Since the procedures are described in a WSDL, the file acts as a binding contract with respect to messages and types.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#downsides"&gt;
  &lt;/a&gt;
  Downsides
&lt;/h3&gt;

&lt;p&gt;XML is very verbose and message size tends to grow exponentially. By necessity, SOAP is one way (as in a client can't be also a server and the other way around - even if both applications can act as web servers). Support for code generation in modern languages is lackluster (your best bets are Java, Python and C#, while SOAP with the likes of Go/Rust/PHP/Elixir are exercises in frustration).&lt;/p&gt;

&lt;p&gt;All in all, SOAP is all but dead in favour of more flexible and efficient communication methods (though my nightmares have returned after a few projects around insurance and banking).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rest"&gt;
  &lt;/a&gt;
  REST
&lt;/h2&gt;

&lt;p&gt;The REpresentational State Transfer is probably the thing most people think about when someone says "web API". In fact, it's so popular that it's the thing people think about when someone says "API", nevermind the web (or HTTP) part.&lt;/p&gt;

&lt;p&gt;As a standard, it's surprisingly lightweight as it only specifies the use of HTTP and HTTP concepts (verbs, codes, states, etc) in order to access remote entities found at various URIs. This has led to the existence of a lot of best-practice scenarios around REST, that deal with the unsaid: how to define and organise URIs, the boundaries of the data manipulated at a given URI, how to encapsulate data, how and what to return, etc. &lt;/p&gt;

&lt;p&gt;Another important property of REST services is statelessness: no context should be preserved between requests, each is treated in isolation and must have a finality of its own.&lt;/p&gt;

&lt;p&gt;While JSON is the most common content type for REST data, XML is not unheard of and HTML itself is available.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#upsides"&gt;
  &lt;/a&gt;
  Upsides
&lt;/h3&gt;

&lt;p&gt;Building on the existing standards of HTTP comes with both flexibility and constraints. Most of transport concerns are handled by existing standards and evolve with it. Verbs are associated with operations (making simple a mapping of CRUD operations for example), entities lend name and meaning to URIs. Simple conventions make interacting with REST APIs fairly straightforward.&lt;br&gt;
JSON makes REST particularly straightforward to use for frontend services where JS is ubiquitous so that the translation of data to objects is instant.&lt;br&gt;
Also, JSON is quite human readable and easy to debug.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#downsides"&gt;
  &lt;/a&gt;
  Downsides
&lt;/h3&gt;

&lt;p&gt;In practice, REST services are rarely as forthcoming as intended. There are endless debates about which verbs to use when and whether exposed entities are the same as data modelled in the data layer (hint: don't do that, don't leak this kind of details, use DTOs for the win). The flexibility often translates into implementation chaos and on top of that there's no binding contract on the structure use for messages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grpc"&gt;
  &lt;/a&gt;
  GRPC
&lt;/h2&gt;

&lt;p&gt;gRPC Remote Procedure Call is a recursive acronym for a method defined around all the advantages of HTTP/2 doubled on by the fact it uses a binary format for transfer (compiled protocol buffers) which is extremely efficient.&lt;/p&gt;

&lt;p&gt;In the likes of SOAP, gRPC's goal is to enable procedure calls rather than data interactions, making it somewhat SOAP-like in concept. &lt;/p&gt;

&lt;p&gt;It's Google's brainchild. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#upsides"&gt;
  &lt;/a&gt;
  Upsides
&lt;/h3&gt;

&lt;p&gt;Very efficient. Takes advantage of all HTTP/2 has to offer in that you can send things synchronously (waiting for a response), you can stream, you can multiplex, all over the same connection. Add the fact that binary messages are damn small, you got a sweet deal for those times when performance is critical.&lt;br&gt;
Code generation makes things a breeze to setup and HTTP/2 needs TLS so you're somewhat forced into a minimum of security.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#downsides"&gt;
  &lt;/a&gt;
  Downsides
&lt;/h3&gt;

&lt;p&gt;Hard to debug, as messages are binary and not human readable. While it's supported across languages, some have limitations (eg: you can't have PHP gRPC servers, only clients) and due to the nature of HTTP/2 there's no support (currently) directly in frontend applications.&lt;br&gt;
Since you must (and should) have TLS everywhere, you'll need to factor that into setup requirements (whether it's acquiring certificates for internal use from a known CA or creating your own internal CA to issue certificates, but you'll need to add it as trusted across your infrastructure/containers/etc).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h2&gt;

&lt;p&gt;GraphQL sits somewhere between REST and gRPC. It aims to make requesting data easy through its own query language that gives control to the client. &lt;/p&gt;

&lt;p&gt;It's Facebook's brainchild. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#upsides-"&gt;
  &lt;/a&gt;
  Upsides ###
&lt;/h3&gt;

&lt;p&gt;Its reliance on JSON makes it somewhat REST-like but with the added benefit that the adaptive queries means you can request for the data you want as you want it =&amp;gt; no more multiple requests to get everything you need.&lt;br&gt;
It has schema validation and typing so in that sense it's somewhat close to how gRPC defines things.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#downsides"&gt;
  &lt;/a&gt;
  Downsides
&lt;/h3&gt;

&lt;p&gt;All the flexibility takes a toll on the ability to cache. Just about none of the GraphQL requests are similar to warrant caching.&lt;br&gt;
Despite the name, it's not quite a graph interface. You can't take all the ancestors of a parent entity, for example. &lt;/p&gt;

&lt;p&gt;What is the point?&lt;/p&gt;

&lt;p&gt;I've been plagued by SOAP and I think I'm not the only one. I want to warn people about the abomination that still roams the dark underbelly of web development. &lt;/p&gt;

&lt;p&gt;I've been a dedicated REST developer and took me years to develop a methodical approach to API design. It's ok, but I really think there should be a better way. Despite all the good practices and so on, the vast majority of projects end in a sort of manageable chaos and the lack of verifiable contracts on messaging is a killer.&lt;/p&gt;

&lt;p&gt;I've tried GraphQL and I see its value. It's awesome for frontend development (you can see its Facebook origins make it a friend to React) but it's a one-way street. I can't imagine making microservices to talk among themselves in GraphQL. It's more structured than REST but the benefits are pretty much client-side.&lt;/p&gt;

&lt;p&gt;GRPC is growing on me. Depending on your tooling, there may be some overhead. PHP setup with building &lt;code&gt;grpc_php_plugin&lt;/code&gt; is painful and heavily dependent on OS (sorry Windows users, you may need to get your hands dirty with WSL2 - but please let me know if I'm wrong though the last time I checked the prebuilt plugin was deprecated). Going at GRPC via Go is amazing (yeah ... coming from Google after all) but with Rust/DotNet/Elixir isn't bad either.&lt;/p&gt;

&lt;p&gt;I can only hope to get my GRPC habits up and running the way I did with REST.&lt;/p&gt;

</description>
      <category>grpc</category>
      <category>php</category>
      <category>webservices</category>
    </item>
    <item>
      <title>How To Use Vibration API in Your Website</title>
      <author>Bibek</author>
      <pubDate>Wed, 05 May 2021 18:14:39 +0000</pubDate>
      <link>https://dev.to/bibekkakati/how-to-use-vibration-api-in-your-website-4dp4</link>
      <guid>https://dev.to/bibekkakati/how-to-use-vibration-api-in-your-website-4dp4</guid>
      <description>&lt;p&gt;Hello everyone 👋&lt;/p&gt;

&lt;p&gt;In this article, we will see how can we use &lt;code&gt;Vibration API&lt;/code&gt; in our websites.&lt;/p&gt;

&lt;p&gt;We can use the &lt;code&gt;Vibration API&lt;/code&gt; to provide haptic or vibration feedback to the user using the website for their actions.&lt;/p&gt;

&lt;p&gt;Most modern mobile devices include vibration hardware, which lets software code provide physical feedback to the user by causing the device to shake. So this API works well with mobile devices only and targeted for the same.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Vibration API&lt;/code&gt; allows the web apps to access the vibration hardware if it exists.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation 👨‍💻
&lt;/h3&gt;

&lt;p&gt;Let's explore the API.&lt;/p&gt;

&lt;p&gt;We can access the API from the browser's &lt;code&gt;window.navigator&lt;/code&gt; object.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#check-raw-vibration-api-endraw-support"&gt;
  &lt;/a&gt;
  Check &lt;code&gt;Vibration API&lt;/code&gt; Support
&lt;/h4&gt;

&lt;p&gt;It is always a good idea to check for API support.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// It Supports&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;vibrate&lt;/code&gt; is a method that is responsible for the vibration.&lt;/li&gt;
&lt;li&gt;It expects one argument.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Argument is a number or an array of numbers for a series of vibrations. Those numbers are considered as &lt;code&gt;milliseconds&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If the method was unable to vibrate because of invalid parameters, it will return &lt;code&gt;false&lt;/code&gt; else it returns &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#single-vibration"&gt;
  &lt;/a&gt;
  Single Vibration  📳
&lt;/h4&gt;

&lt;p&gt;For a single vibration, we can pass a single number directly or in an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Will vibrate the device for 500ms&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Same as the above line&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#pattern-vibration"&gt;
  &lt;/a&gt;
  Pattern Vibration  📳 📳 📳
&lt;/h4&gt;

&lt;p&gt;To vibrate the device in a pattern, we can pass an array of numbers.&lt;/p&gt;

&lt;p&gt;Even indices numbers are responsible for the vibration and odd indices numbers will delay that much millisecond before the next vibration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Vibrate for 500ms, Wait for 200ms, Vibrate for 800ms&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#cancelling-vibrations"&gt;
  &lt;/a&gt;
  Cancelling Vibrations
&lt;/h4&gt;

&lt;p&gt;To cancel an ongoing vibration pattern, we need to pass a &lt;code&gt;0&lt;/code&gt; or an empty array or an array containing all zeroes to the &lt;code&gt;vibrate&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#fun-example"&gt;
  &lt;/a&gt;
  Fun Example ✨
&lt;/h3&gt;

&lt;p&gt;Vibrate &lt;strong&gt;&lt;code&gt;SOS&lt;/code&gt;&lt;/strong&gt; in morse code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vibrate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Enjoyed? Give it a thumbs-up 👍&lt;/p&gt;

&lt;p&gt;Thank you for reading | Feel free to &lt;a href="https://bibekkakati.me"&gt;connect&lt;/a&gt; 👋&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/bibekkakati"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Open letter to AWS: Please, give us a price cap</title>
      <author>Ibrahim Cesar</author>
      <pubDate>Wed, 05 May 2021 17:58:45 +0000</pubDate>
      <link>https://dev.to/aws-builders/open-letter-to-aws-please-give-us-price-cap-4ge6</link>
      <guid>https://dev.to/aws-builders/open-letter-to-aws-please-give-us-price-cap-4ge6</guid>
      <description>&lt;p&gt;Hello AWS,&lt;/p&gt;

&lt;p&gt;One book (which I bought for my kindle in amazon.com.br) changed my life. No, it wasn’t “The Secret”. As I stated so many times before this book was &lt;em&gt;&lt;a href="https://amzn.to/2Rh9paY"&gt;Accelerate: The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations&lt;/a&gt;&lt;/em&gt; by &lt;a href="https://twitter.com/nicolefv"&gt;Dr. Nicole Forsgren&lt;/a&gt; &lt;em&gt;et al.&lt;/em&gt; Delivering software quickly, reliably, and safely is at the heart of technology transformation and organizational performance and &lt;strong&gt;All paths start on creating a culture of psychological safety&lt;/strong&gt; (Other resource to read along with her &lt;em&gt;magnus opum&lt;/em&gt; is &lt;a href="https://services.google.com/fh/files/misc/state-of-devops-2019.pdf"&gt;The State of DevOps 2019&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We cannot have psychological safety with the risk of being charged hundreds of dollars&lt;/strong&gt;. I certainly can. I speak as a Brazilian, a developer from the Global South. And I, in my context, have several privileges myself. I lead a (small) team. I’m male and I have a stable job as stable as the new media industry is.&lt;/p&gt;

&lt;p&gt;I was thinking about this a lot when yesterday &lt;a href="https://twitter.com/forrestbrazeal"&gt;Forrest Brazeal&lt;/a&gt;, whose surname sounds a lot like of the name of my country, published his rant &lt;a href="https://cloudirregular.substack.com/p/please-fix-the-aws-free-tier-before"&gt;Please fix the AWS Free Tier before somebody gets hurt&lt;/a&gt;. I want to add weight and my perspective on this.&lt;/p&gt;

&lt;p&gt;Last year, as part of a hiring process I gave as assignment follow the &lt;a href="https://aws.amazon.com/getting-started/hands-on/build-serverless-web-app-lambda-apigateway-s3-dynamodb-cognito/?nc1=h_ls"&gt;“Build a Serverless Web Application”&lt;/a&gt; and then send me a narrative of the process on so on. To eliminate any doubts, I asked them to send me the last links I would avail under 24 hours and made sure any expenses they could have we would have paid them. One of our prospects never answered back. But this kind of “ghosting” is normal, and we moved on. Months later, we reconnect. And I learned that this person at that moment didn’t have a credit card.&lt;/p&gt;

&lt;p&gt;When I open an account, I’m on some cases “awarded” with the possibility of gain some credits. Sometimes I got the credits. Sometimes not. Even when I didn’t get the credits, AWS called me back to talk with me - in Brazilian Portuguese, which is great. But to be in this position, to get some credits, I had to add my credit card and validate its funds. And yes, I have times in my life my credit card at certain times didn’t validate me in “free trials”.&lt;/p&gt;

&lt;p&gt;There are great initiatives, as I learned, the &lt;a href="https://aws.amazon.com/education/awseducate/aws-educate-faqs/"&gt;AWS Educate&lt;/a&gt; which I definitely need to know more about and will apply.&lt;/p&gt;

&lt;p&gt;There are two things, I always say in the trainings with people in my team, you &lt;strong&gt;must&lt;/strong&gt; do when create the account: Lock the account (MFA for root and do not use root, create an iam_admin with billing access turned on and MFA in it too) and the other thing is... Create the CloudWatch billing alarm. We put in $5 USD per month usually (which at the time of writing is $26,89 BRL. An accident of 100 USD would be $537,87 BRL. Just for reference, the monthly minimum wage, here is $1.100 BRL (also today, would be $204,54 USD). As defined by &lt;a href="https://br.indeed.com/career/programador-j%C3%BAnior/salaries"&gt;Indeed&lt;/a&gt; the medium junior developer has a monthly salary of $2.459 BRL (but this can vary widely depending on where you live in the country) - 456,94 USD. What if the dollar prices rises and rises?&lt;/p&gt;

&lt;p&gt;And this is my reality from Brazil. Latin America is huge and has several countries. There are Asia, Africa and inside each developed country there are people trying to get better and learn cloud skills. Besides limitations with the &lt;a href="https://www.lastweekinaws.com/blog/is-the-aws-free-tier-really-free/"&gt;Free Tier&lt;/a&gt; - and thank Bezos we have 1 million Lambda invocations free per month because I use half of them just testing. &lt;/p&gt;

&lt;p&gt;I will not forget to remember we had some good advancements. Now in Brazil we can pay AWS with other forms besides Credit Card. This was a huge thing they added in the last year. Our billings are in BRL (which is great, but the base services still in USD and still depending on the current price of conversion). We can paid by TED now. And they are still reviewing the payment in our &lt;a href="https://aws.amazon.com/pt/legal/aws-sbl/"&gt;beloved Boleto&lt;/a&gt;. But to open the account, we still having to have a credit card.&lt;/p&gt;

&lt;p&gt;They had to worry about the bill. What if the alarm be too slow?. Or you add a resource so pricey that will blowout any expectations you had? Remember, a lot of “warnings” put in place are great. But sometimes people are following some instructions and they &lt;em&gt;don’t read it&lt;/em&gt;. We can blame users all day. But I saw people with Doctor’s degree that get the error message or the warning in the screen, &lt;em&gt;in plain English&lt;/em&gt;, and they just don’t read. The console is the first way to interact with the Cloud and UX and other factors will pile up here but simply put, some people just don't read. &lt;strong&gt;Yes, I read the terms of use&lt;/strong&gt; and every other warning is the biggest lie we tell our systems or worse, we are just blind, following the golden blocks click in everything on the way. This is what is expected of a Cloud Developer? An Architect? No. definitely no. I'm here talking for people that wants to learn, that are trying for the first time. The builders of tomorrow. &lt;/p&gt;

&lt;p&gt;Now think in someone with a cognitive load of learning Cloud. Cloud is big, right? Every day a new service. Every region a different price (&lt;em&gt;fun fact&lt;/em&gt;: for several projects we pay more to run here in Sao Paulo than anywhere else)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#please-put-a-price-cap"&gt;
  &lt;/a&gt;
  Please, put a price cap.
&lt;/h2&gt;

&lt;p&gt;Just let us say how far we can pay. Could be an opt-in type of account, very limited. But we need a playground. Learning cloud is a burden enough to worry if it will blow up in our faces. There really does need to be more protection against running up a large unexpected bill.&lt;/p&gt;

&lt;p&gt;And &lt;em&gt;we mean business&lt;/em&gt;, right? Is from the Global South the promised &lt;a href="https://nextbillionusers.google/"&gt;“Next Billion Users”&lt;/a&gt; will be. We don’t have all that is needed to run our &lt;em&gt;on premises&lt;/em&gt; resources like the Basecamp guys, we need the Cloud to empower us and our economies, and I believe I speak for many people when I say this would help us a lot. A LOT. We need psychological safety to deliver better software, to comply with the Well-Architected Framework and even more, when we are learning.&lt;/p&gt;

&lt;p&gt;Please take into consideration AWS!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#signed"&gt;
  &lt;/a&gt;
  Signed:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://ibrahimcesar.cloud"&gt;Ibrahim Cesar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to sign in with me? Please leave your name and link in the comments, thanks!&lt;/p&gt;

&lt;p&gt;Or just help spread the word!&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Cover is a detail from photo by &lt;a href="https://unsplash.com/@sahand_hoseini?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Sahand Hoseini&lt;/a&gt; on &lt;a href="https://unsplash.com/images/things/money?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Transforming Types in TypeScript with Utility Types</title>
      <author>Maina Wycliffe</author>
      <pubDate>Wed, 05 May 2021 17:44:10 +0000</pubDate>
      <link>https://dev.to/this-is-learning/transforming-types-in-typescript-with-utility-types-3mhl</link>
      <guid>https://dev.to/this-is-learning/transforming-types-in-typescript-with-utility-types-3mhl</guid>
      <description>&lt;p&gt;Every once in a while, you end up in a situation where you need some variation of a type. For instance, you might want to omit some keys, retain some keys only, or even mark all keys as undefined or required on a type, among other use cases.&lt;/p&gt;

&lt;p&gt;Typescript offers Utility Types, which are intended to solve this particular problem. In this article, we are going to have a look at these built-in utility types and a third-party library (with examples) that offers more utilities you might find helpful in achieving the above goal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#builtin-utility-types"&gt;
  &lt;/a&gt;
  Built-in Utility Types
&lt;/h2&gt;

&lt;p&gt;This section focuses on TypeScript built-in utility types, they are numerous and I won't be able to cover all of them, I will just look at a few key ones, with examples, in my own opinions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#partial"&gt;
  &lt;/a&gt;
  Partial
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type from an existing one, with the keys at the top level being marked as optional &lt;code&gt;(?)&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Type {
    field: string;
}

type Type2 = Partial&amp;lt;Type&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YZ9c7sl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/partial_type.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YZ9c7sl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/partial_type.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; This only runs one level, meaning keys below one level will not be affected. If you want to mark all keys as optional, regardless the level they are in, check out PartialDeep below. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#required"&gt;
  &lt;/a&gt;
  Required
&lt;/h3&gt;

&lt;p&gt;This utility type does the opposite of the above, constructing a new type with all keys from the old type that are optional being marked as required.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Type {
    field?: string;
    optional?: string;
}

type Type2 = Required&amp;lt;Type&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HrM7yNmV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/required_utility_type.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HrM7yNmV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/required_utility_type.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#omit"&gt;
  &lt;/a&gt;
  Omit
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type from an existing type while omitting specified keys from the new type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Type {
    field1?: string;
    field2: string;
    field3: string;
}

type Type2 = Omit&amp;lt;Type, "field3" | "field1"&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FDsd9Zo8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/omit_utility_type.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FDsd9Zo8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/omit_utility_type.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pick"&gt;
  &lt;/a&gt;
  Pick
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type by picking keys specified from the old type. It does the opposite of Omit, as described above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Type {
    field1?: string;
    field2: string;
    field3?: string;
    field4: string;
    field5?: string;
}

type Type2 = Pick&amp;lt;Type, "field2" | "field3"&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lov-hnLe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/pick_utility_type.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lov-hnLe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/pick_utility_type.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#readonly"&gt;
  &lt;/a&gt;
  Readonly
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type from an existing one and marks all keys as read-only i.e. they cannot be re-assigned. This is useful for types of a frozen object - i.e. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze"&gt;&lt;code&gt;Object.freeze()&lt;/code&gt;&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Type {
    field1?: string;
    field2: string;
    field3: string;
}

type Type2 = Readonly&amp;lt;Type&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FZJpJs-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/readonly_utility_types.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FZJpJs-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/readonly_utility_types.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#record"&gt;
  &lt;/a&gt;
  Record
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type with union members as keys and the type as the type of the keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface Name {
    firstName: string;
    lastName: string;
}

type Names = "user1" | "user2";

type Type2 = Record&amp;lt;Names, Name&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KbMNXbb3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/record_utility_type.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KbMNXbb3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/record_utility_type.png" alt="Record Utility Type"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above are a few built-in utility types that I find very useful, you can find out more about built-in utility types in the official documentation &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#extending-builtin-utility-types"&gt;
  &lt;/a&gt;
  Extending Built-in Utility Types
&lt;/h2&gt;

&lt;p&gt;While the above built-in utility types are amazing, they don't cover all use cases, and this is where libraries that provide more utilities fill in the gap. A good example of such a library is &lt;a href="https://github.com/sindresorhus/type-fest"&gt;type-fest&lt;/a&gt;, which provides even more utilities. &lt;/p&gt;

&lt;p&gt;While I won't look in to all utilities provided by type-fest, I will highlight a few that are quite help and build on the built-in types utilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#except"&gt;
  &lt;/a&gt;
  Except
&lt;/h3&gt;

&lt;p&gt;This is a variation of the Omit utility type described above, but stricter. It constructs a new type by omitting specified keys from a Type, but unlike Omit, the keys being emitted must strictly exist in the Type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// import { Except } from "type-fest"

interface X {
  a: string;
  b: string;
  c: string;
}

// Omit Example
type Y = Omit&amp;lt;X, "d"&amp;gt;

// Except Example
type Z = Except&amp;lt;X, "d" &amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in the image below, Except throws an error if you provide a Key that doesn't exist.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--flpIMmZ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-except-example.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--flpIMmZ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-except-example.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#merge"&gt;
  &lt;/a&gt;
  Merge
&lt;/h3&gt;

&lt;p&gt;Constructs a new type by merging two Types, with keys of the second type overriding the keys of the first type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// import { Merge } from "type-fest"

interface X {
  a: string;
  b: string;
  c: string;
}

interface Y {
  c: number;
  d: number;
  e: number;
}

type Z = Merge&amp;lt;X, Y&amp;gt;

const x : Z = {
  a: "is string",
  b: "is string",
  c: 1,
  d: 2,
  e: 3,
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lgtANnOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-merge-type.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lgtANnOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-merge-type.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#partialdeep"&gt;
  &lt;/a&gt;
  PartialDeep
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type where all keys in all levels are optional. This is quite similar to the &lt;code&gt;Partial&lt;/code&gt; built-in utility type, with one significant difference, it runs deeply to all levels, while the former does it at the first level.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// import { PartialDeep } from "type-fest";

interface X {
  a: string;
  b: string;
  c: string;
}

interface Y {
  c: number;
  d: number;
  e: number;
  f: X;
}

type Z = PartialDeep&amp;lt;Y&amp;gt;;

const x: Z = {};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CmI1EtZo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-partial_deep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CmI1EtZo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-partial_deep.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#readonlydeep"&gt;
  &lt;/a&gt;
  ReadonlyDeep
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a new type with all keys on all levels marked as required. This is also similar to the built-in &lt;code&gt;Readonly&lt;/code&gt; utility type, but unlike the built-in utility type, this one goes down to all keys in all levels, making them immutable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h2Lwd-Lh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-readonlydeep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h2Lwd-Lh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-readonlydeep.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mutable"&gt;
  &lt;/a&gt;
  Mutable
&lt;/h3&gt;

&lt;p&gt;This utility type constructs a type that strips out &lt;code&gt;readonly&lt;/code&gt; from a keys in a type, essentially the opposite of what the built-in utility type &lt;code&gt;Readonly&lt;/code&gt; does.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// import { Mutable } from "type-fest";

interface X {
  readonly a: string;
  readonly d: string;
}

type Y = Mutable&amp;lt;X&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BCbxTWK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-mutable.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BCbxTWK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/05/typefest-mutable.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, I looked into typescript utility types and how they can help you automatically create types from existing ones without resulting to duplicating eliminating the need to keep related types in sync. &lt;/p&gt;

&lt;p&gt;I highlighted a few built-in utility types that I find particularly useful on my day to day job as a developer. On top of that, we looked into type-fest, a library with a lot of utility types that extends the built-in types, and highlighted just a few.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html"&gt;Utility Types - Typescript Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest"&gt;type-fest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>typescript</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
