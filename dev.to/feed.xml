<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 star rating system - ACTUALLY accessible, no JS, no WAI-ARIA! ⭐⭐⭐⭐⭐</title>
      <author>InHuOfficial</author>
      <pubDate>Fri, 02 Jul 2021 11:49:11 +0000</pubDate>
      <link>https://dev.to/inhuofficial/5-star-rating-system-actually-accessible-no-js-no-wai-aria-3idl</link>
      <guid>https://dev.to/inhuofficial/5-star-rating-system-actually-accessible-no-js-no-wai-aria-3idl</guid>
      <description>&lt;p&gt;In this article I will explain how I built a star rating system that is &lt;strong&gt;ACTUALLY&lt;/strong&gt; accessible, easy to style for your own needs and easy to integrate into any framework as it uses semantic HTML.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you are busy just skip &lt;a href="#example1"&gt;straight to the first example&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I have seen several star rating systems shared recently which are &lt;strong&gt;completely inaccessible&lt;/strong&gt; to people using a screen reader (a device that allows websites to be read out loud to people or converted to braille) or people who rely on a keyboard (people with movement disorders / accuracy issues such as Parkinson's Disease, Cerebral Palsy etc.).&lt;/p&gt;

&lt;p&gt;I get frustrated by this lack of thought from authors as they release code into the world that contributes to a lack of accessibility.&lt;/p&gt;

&lt;p&gt;Then people just copy and paste example code with no thought (or they may be new to development and not know about accessibility yet) and accessibility issues perpetuate forever (hence why &lt;a href="https://dev.to/inhuofficial/they-just-won-t-learn-a-button-is-a-lt-button-gt-accessibility-rants-k1b"&gt;we still have people using &lt;code&gt;&amp;lt;a href="#"&lt;/code&gt; for buttons&lt;/a&gt;...an overhang from 13 years ago when we couldn't style &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;s...that is how long it takes to kill a bad practice!)&lt;/p&gt;

&lt;p&gt;Anyway, this isn't one of my angry rants, so here it is, my first contribution to trying to fix this problem, a truly accessible star rating system. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#an-accessible-star-rating-system"&gt;
  &lt;/a&gt;
  An accessible star rating system
&lt;/h2&gt;

&lt;p&gt;Why is this better than the other examples you have seen before?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It uses semantically correct elements - &lt;code&gt;radio&lt;/code&gt; inputs as this is a choice between ratings.&lt;/li&gt;
&lt;li&gt;By using semantically correct elements it has &lt;a href="https://www.powermapper.com/tests/screen-readers/aria/"&gt;no need for WAI-ARIA which doesn't actually have as much support as people think&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It can be made to &lt;a href="#accessible-star-rating-system-ie9"&gt;work all the way back to IE9&lt;/a&gt; with a couple of minor adjustments, which is important as there are &lt;a href="https://webaim.org/projects/screenreadersurvey8/#browsers"&gt;still a lot of screen reader users (12.4%!) using IE9, 10 and 11&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;No JavaScript so it will be lightning fast even on cheap hardware. &lt;/li&gt;
&lt;li&gt;Works on any framework...you can simply just hook into the radio group value as if it was a standard radio group (because essentially it is)!&lt;/li&gt;
&lt;li&gt;You can style it pretty much however you want by simply changing the SVGs for checked, unchecked and hover states and the display size. I would encourage you to create some nicer SVGs as these are rough and ready for demo purposes!&lt;/li&gt;
&lt;li&gt;It will support as many stars as you want (albeit you have to adjust a couple of things and add a couple of rules to the CSS)&lt;/li&gt;
&lt;li&gt;You can safely copy paste the CSS and HTML and know that it is accessible!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#accessible-star-rating-system-example"&gt;
  &lt;/a&gt;
  Accessible star rating system Example
&lt;/h2&gt;

&lt;p&gt;Try it with a keyboard, mouse, screen reader (if you know how to use one) etc. It should work flawlessly.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/s0c35pqw//embedded/result,html,css,js//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ie9-ie10-and-ie11-compatibility"&gt;
  &lt;/a&gt;
  IE9, IE10 and IE11 compatibility
&lt;/h2&gt;

&lt;p&gt;There are only two things that won't work in IE9, IE10 and IE11.&lt;/p&gt;

&lt;p&gt;The first is using CSS variables - so simply swap those out for the actual values.&lt;/p&gt;

&lt;p&gt;The second is &lt;code&gt;focus-within&lt;/code&gt; to put the focus around the box. Instead for IE we just put focus indicators around the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; that contains the stars.&lt;/p&gt;

&lt;p&gt;The beauty of this second example is it lets you see how everything works if you use a keyboard to focus the item! (you can see how the labels are stacked on top of each other and different widths to achieve our star rating effect).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#accessible-star-rating-system-ie9"&gt;
  &lt;/a&gt;
  Accessible star rating system IE9+
&lt;/h3&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/s0c35pqw/1//embedded/result,html,css,js//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#an-explanation-of-the-logic"&gt;
  &lt;/a&gt;
  An explanation of the logic.
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; is a semantically correct way of grouping controls. As the radio "buttons" all relate to the same item (your star rating) this lets screen reader users know what they are answering.&lt;/p&gt;

&lt;p&gt;We use &lt;code&gt;&amp;lt;input type="radio"&amp;gt;&lt;/code&gt; as that is the most logical HTML form element. You should use &lt;code&gt;radio&lt;/code&gt; buttons whenever there are multiple choices but only one can be selected at a time.&lt;/p&gt;

&lt;p&gt;To ensure the inputs have a label that is correctly associated I use &lt;code&gt;for&lt;/code&gt; on the label to point to the relevant input with that ID. This is important as screen reader users need a correctly associated label so they know what an input is for. Otherwise they just hear "input" - which is not very useful! &lt;/p&gt;

&lt;p&gt;Just for reference, you can do the same (correctly associate a label with an input) using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"radio"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But apparently &lt;a href="https://a11ysupport.io/tech/html/label_element"&gt;Dragon Naturally Speaking struggles with implicit labels&lt;/a&gt; so I went for maximum compatibility.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-with-the-raw-ltspangt-endraw-s-inside-the-label-though"&gt;
  &lt;/a&gt;
  What is with the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;s inside the label though?
&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is for screen reader users. &lt;/p&gt;

&lt;p&gt;I hide the text visually using a class called &lt;a href="https://stackoverflow.com/a/62109988/2702894"&gt;visually hidden text&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This text is invisible on the screen but is still readable by screen reader users.&lt;/p&gt;

&lt;p&gt;This way when they focus the star rating system and select an option they will hear "Your rating: 3", "Your rating: 4" etc. or similar.&lt;/p&gt;

&lt;p&gt;Without this they would have the same issue of just hearing "input" as although I provided a label there would be no text within it.&lt;/p&gt;

&lt;p&gt;You will notice I apply the same styles to the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; as well to make it invisible visually but still accessible for screen readers. &lt;/p&gt;

&lt;p&gt;This is the biggest problem most star rating systems have, they hide the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with &lt;code&gt;display: none&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This means you cannot focus it anymore with Tab and so it is completely unusable for people who only use a keyboard.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#colour-is-important-too"&gt;
  &lt;/a&gt;
  Colour is important too
&lt;/h2&gt;

&lt;p&gt;Super quick one here - colour contrast is important.&lt;/p&gt;

&lt;p&gt;A lot of star rating systems use yellow stars with no border. This provides terrible contrast with the background and can be an issue for people with low contrast perception.&lt;/p&gt;

&lt;p&gt;As such I have a dark grey border around my stars so they stand out even for people with contrast perception impairments (or people trying to use the site in direct sunlight....I am sure you know how annoying that can be on low contrast sites!).&lt;/p&gt;

&lt;p&gt;I also went an extra step of making the border on the stars different sizes depending on their current state. This allows for a visual difference that doesn't rely on colour at all! &lt;strong&gt;If you create your own SVGs I would encourage you to do something similar to provide visual distinction that doesn't rely on colour alone!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#simple-to-adapt-to-your-own-needs"&gt;
  &lt;/a&gt;
  Simple to adapt to your own needs
&lt;/h2&gt;

&lt;p&gt;If you want to use a different icon that is super simple.&lt;/p&gt;

&lt;p&gt;You need three versions of your star as SVGs, a filled version, an unfilled version and a hovered version. Ideally they should be square to avoid having to alter the CSS.&lt;/p&gt;

&lt;p&gt;Then just &lt;a href="https://codepen.io/elliz/details/ygvgay"&gt;copy the SVG text into this converter press "convert" and then copy the result.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Paste the resulting CSS after "background-image: " into the variables &lt;code&gt;--unchecked-image&lt;/code&gt; (for no star), &lt;code&gt;--checked-image&lt;/code&gt; (for star selected) and &lt;code&gt;--hovered-image&lt;/code&gt; (for hover state).&lt;/p&gt;

&lt;p&gt;You can also have a ten star system if you want, in this example I have changed the &lt;code&gt;--max-stars&lt;/code&gt; CSS variable to 10.&lt;/p&gt;

&lt;p&gt;You can have between 2 and 10 stars by simply adding the right number of radio buttons and then changing the &lt;code&gt;--max-stars&lt;/code&gt; CSS variable to match.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/s0c35pqw/2//embedded/result,html,css//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;And as a final note I have designed the CSS so it will not leak into your document (unless you happen to use the same CSS variable names!) so you should be able to just copy paste and go without any Cascade issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summing-up"&gt;
  &lt;/a&gt;
  Summing up
&lt;/h2&gt;

&lt;p&gt;I think the above is about as simple as you can get for a rating system that is accessible and has very high browser coverage.&lt;/p&gt;

&lt;p&gt;Now as I am preaching about accessibility if &lt;strong&gt;anyone does notice a mistake please do call me an idiot and point it out!&lt;/strong&gt; Hopefully I haven't made a mistake somewhere 🤞.&lt;/p&gt;

&lt;p&gt;With that being said, I am quite confident the above is truly accessible and I would be confident in saying that you can use it in your own projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#share-this-and-spread-the-word-please"&gt;
  &lt;/a&gt;
  Share this and spread the word please!
&lt;/h2&gt;

&lt;p&gt;If enough people read this article that is one component on the web that hopefully will be accessible to everybody. &lt;/p&gt;

&lt;p&gt;To make it easy you can just click the share button below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/intent/tweet?url=https://dev.to/inhuofficial/5-star-rating-system-actually-accessible-no-js-no-wai-aria-3idl&amp;amp;text=%22A%20star%20rating%20system%20that%20is%20**ACTUALLY**%20accessible,%20easy%20to%20style%20for%20your%20own%20needs%20and%20easy%20to%20integrate%20into%20any%20framework%20as%20it%20uses%20semantic%20HTML.%20You%20should%20check%20it%20out!%22%20-%20@InHuOfficial%20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zMVeXrbG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q8loauc7jmnh40xqa4dh.jpg" alt='Click to Tweet: "A star rating system that is **ACTUALLY** accessible, easy to style for your own needs and easy to integrate into any framework as it uses semantic HTML. You should check it out!"'&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>css</category>
      <category>html</category>
      <category>codepen</category>
    </item>
    <item>
      <title>Creating adaptive layouts with Flutter</title>
      <author>Touré Holder</author>
      <pubDate>Fri, 02 Jul 2021 11:39:55 +0000</pubDate>
      <link>https://dev.to/toureholder/creating-adaptive-layouts-with-flutter-56oa</link>
      <guid>https://dev.to/toureholder/creating-adaptive-layouts-with-flutter-56oa</guid>
      <description>&lt;p&gt;In this tutorial you'll learn how to easily make a UI layout for your flutter app that adapts to different screen sizes with the &lt;a href="https://pub.dev/packages/adaptive_layout"&gt;&lt;code&gt;adaptive_layout&lt;/code&gt;&lt;/a&gt; package.&lt;/p&gt;

&lt;p&gt;The next few sections show how to build a simple UI that displays a list of movie posters and titles and allows the user to see more details of the movie when they tap an item in the list.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#small-screen-ui"&gt;
  &lt;/a&gt;
  Small screen UI
&lt;/h2&gt;

&lt;p&gt;On small, phone-sized, screens when the user taps an item they will navigate to a different screen with the details.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2aTCF19S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/small_screen_ui.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2aTCF19S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/small_screen_ui.png" alt='"small screen ui"' title="small screen ui"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#large-screen-ui"&gt;
  &lt;/a&gt;
  Large screen UI
&lt;/h2&gt;

&lt;p&gt;On large screens, when the user taps a list item the details are displayed on the right side of the list and there is no navigation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6yRb8ETL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/large_screen_ui_better_738.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6yRb8ETL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/large_screen_ui_better_738.png" alt='"large screen ui"' title="large screen ui"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#live-demo"&gt;
  &lt;/a&gt;
  Live demo
&lt;/h2&gt;

&lt;p&gt;Even better than an image, &lt;a href="https://flutter-adaptive-layout-tutorial.surge.sh/"&gt;see a live demo of what we'll be building&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-go"&gt;
  &lt;/a&gt;
  Let's go!
&lt;/h2&gt;

&lt;p&gt;We'll take care of the behavior expected for small screens first, then adapt our implementation for larger screens. These are the steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-create-a-new-app"&gt;1. Create a new app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-provide-the-data-set"&gt;2. Provide the data set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-create-the-model"&gt;3. Create the model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-create-the-movie-list-page"&gt;4. Create the movie list page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-create-the-movie-detail-page"&gt;5. Create the movie detail page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6-navigate-to-the-detail-screen-when-an-item-is-tapped"&gt;6. Navigate to the detail screen when an item is tapped&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#7-convert-movie-list-page-into-home-page"&gt;7. Convert movie list page into home page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#8-make-the-home-page-adaptive-with-the-adaptive_layout-package"&gt;8. Make the home page adaptive with the &lt;code&gt;adaptive_layout&lt;/code&gt; package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#9-display-the-detail-view-when-an-item-is-tapped-on-large-screens"&gt;9. Display the detail view when an item is tapped on large screens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bonus-make-it-look-a-little-better-on-large-screens"&gt;BONUS: Make it look a little better on large screens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bonus-tests"&gt;BONUS: Tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-create-a-new-app"&gt;
  &lt;/a&gt;
  1. Create a new app
&lt;/h2&gt;

&lt;p&gt;Go ahead and &lt;code&gt;create&lt;/code&gt; a new flutter app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;flutter create adaptive_layout_example
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-provide-the-data-set"&gt;
  &lt;/a&gt;
  2. Provide the data set
&lt;/h2&gt;

&lt;p&gt;We'll be using a hard-coded data set, so we can focus our efforts on the UI layout.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Under the &lt;code&gt;lib&lt;/code&gt; folder, create a folder called &lt;code&gt;data&lt;/code&gt; with a file named &lt;code&gt;data.dart&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Copy the contents of &lt;a href="https://github.com/toureholder/flutter_adaptive_layout_tutorial/tree/main/lib/data/data.dart"&gt;this file&lt;/a&gt; into your file.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://github.com/toureholder/flutter_adaptive_layout_tutorial/commit/f5e4e5592276aeaa7547f722d06187120f7809d3"&gt;See the changes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-create-the-model"&gt;
  &lt;/a&gt;
  3. Create the model
&lt;/h2&gt;

&lt;p&gt;Create a &lt;code&gt;Movie&lt;/code&gt; class with a static function that parses the data into a list of &lt;code&gt;Movie&lt;/code&gt;s and returns the list.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Under the &lt;code&gt;lib&lt;/code&gt; folder, create a folder called &lt;code&gt;model&lt;/code&gt; with a file &lt;code&gt;movie.dart&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Paste the following content into the file.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'../data/data.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Movie&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;overview&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;posterPath&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;overview&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;posterPath&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getList&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;
      &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;id:&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'id'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
          &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
          &lt;span class="nl"&gt;overview:&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'overview'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
          &lt;span class="nl"&gt;posterPath:&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'poster_path'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toList&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;LARGE_POSTER_BASE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://image.tmdb.org/t/p/w300"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;SMALL_POSTER_BASE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://image.tmdb.org/t/p/w92"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://github.com/toureholder/flutter_adaptive_layout_tutorial/commit/96096fe65ed390e4e3c7bd979f7c2e890da95ec2"&gt;See the changes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-create-the-movie-list-page"&gt;
  &lt;/a&gt;
  4. Create the movie list page
&lt;/h2&gt;

&lt;p&gt;Now let's create a page that will display the list of movies:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a new folder under &lt;code&gt;lib&lt;/code&gt; called &lt;code&gt;pages&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;Within the &lt;code&gt;pages&lt;/code&gt; folder create a file named &lt;code&gt;movie_list_page.dart&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;movie_list_page.dart&lt;/code&gt; create two &lt;code&gt;StatelessWidget&lt;/code&gt;s: one called &lt;code&gt;MovieListPage&lt;/code&gt; and another called &lt;code&gt;MovieListView&lt;/code&gt;, with this content.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MovieListPage&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;MovieListPage&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getList&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Movies'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;MovieListView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;movies:&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;onTapItem:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Movie&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// TODO: Navigate to detail screen&lt;/span&gt;
        &lt;span class="o"&gt;},&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MovieListView&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;Function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;onTapItem&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;MovieListView&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
    &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;movies&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onTapItem&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ListView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;itemCount:&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;itemBuilder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ListTile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'list_item_&lt;/span&gt;&lt;span class="si"&gt;$index&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="nl"&gt;leading:&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;network&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SMALL_POSTER_BASE_URL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;posterPath&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;${movie.title}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="nl"&gt;contentPadding:&lt;/span&gt; &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;12.0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="nl"&gt;onTap:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;onTapItem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;call&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
          &lt;span class="o"&gt;},&lt;/span&gt;
        &lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Observe that &lt;code&gt;MovieListPage&lt;/code&gt; is a container widget for the presentational &lt;code&gt;MovieListView&lt;/code&gt; widget.&lt;/p&gt;

&lt;p&gt;Now, remove the framework generated &lt;code&gt;MyHomePage&lt;/code&gt; and &lt;code&gt;_MyHomePageState&lt;/code&gt; classes from &lt;code&gt;lib/main.dart&lt;/code&gt; and use &lt;code&gt;MovieListPage()&lt;/code&gt; as the &lt;code&gt;home&lt;/code&gt; widget for the &lt;code&gt;MaterialApp&lt;/code&gt;. The &lt;code&gt;lib/main.dart&lt;/code&gt; file should now look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;runApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyApp&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyApp&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;MaterialApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="s"&gt;'Adaptive Layout Tutorial'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;theme:&lt;/span&gt; &lt;span class="n"&gt;ThemeData&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;primarySwatch:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;blue&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="c1"&gt;// Use `MovieListPage()` as the `home` widget&lt;/span&gt;
      &lt;span class="nl"&gt;home:&lt;/span&gt; &lt;span class="n"&gt;MovieListPage&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The list page should now be displayed when the app starts:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GRjieR0x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/movie_list_page_326.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GRjieR0x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/movie_list_page_326.png" alt='"movie list page"' title="movie list page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/toureholder/flutter_adaptive_layout_tutorial/commit/8e87521759a3f383cd175265cb4cfa9f147d9788"&gt;See the changes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-create-the-movie-detail-page"&gt;
  &lt;/a&gt;
  5. Create the movie detail page
&lt;/h2&gt;

&lt;p&gt;Now let's create a page that will display more details of a given movie:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Within the &lt;code&gt;pages&lt;/code&gt; folder create a file named &lt;code&gt;movie_detail_page.dart&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Similarly, in &lt;code&gt;movie_detail_page.dart&lt;/code&gt; create two &lt;code&gt;StatelessWidget&lt;/code&gt;s: a container widget called &lt;code&gt;MovieDetailPage&lt;/code&gt; and a presentational &lt;code&gt;MovieDetailView&lt;/code&gt; widget, with this content:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MovieDetailPage&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;Movie&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;MovieDetailPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;MovieDetailView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MovieDetailView&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;Movie&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;MovieDetailView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;SingleChildScrollView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;padding:&lt;/span&gt; &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;24.0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;crossAxisAlignment:&lt;/span&gt; &lt;span class="n"&gt;CrossAxisAlignment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
          &lt;span class="n"&gt;ClipRRect&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;borderRadius:&lt;/span&gt; &lt;span class="n"&gt;BorderRadius&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;circular&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;10.0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;network&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LARGE_POSTER_BASE_URL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;posterPath&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="n"&gt;SizedBox&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="mf"&gt;24.0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;style:&lt;/span&gt; &lt;span class="n"&gt;Theme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;textTheme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;headline4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;textAlign:&lt;/span&gt; &lt;span class="n"&gt;TextAlign&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="n"&gt;SizedBox&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="mf"&gt;24.0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;overview&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;style:&lt;/span&gt; &lt;span class="n"&gt;Theme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;textTheme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;subtitle1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;textAlign:&lt;/span&gt; &lt;span class="n"&gt;TextAlign&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;],&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For simplicity, we are just displaying the poster image, title and overview of the movie in the detail view.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/toureholder/flutter_adaptive_layout_tutorial/commit/e05d2e71c7fee7b0ddbfa2aeac13e536395b7b59"&gt;See the changes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-navigate-to-the-detail-screen-when-an-item-is-tapped"&gt;
  &lt;/a&gt;
  6. Navigate to the detail screen when an item is tapped
&lt;/h2&gt;

&lt;p&gt;Update the &lt;code&gt;onTapItem()&lt;/code&gt; callback of the &lt;code&gt;MovieListView&lt;/code&gt; in the &lt;code&gt;MovieListPage&lt;/code&gt; widget, so we can navigate to the detail screen and back.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Within the `MovieListPage` widget&lt;/span&gt;
&lt;span class="nl"&gt;onTapItem:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Movie&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;MaterialPageRoute&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;MovieDetailPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
  &lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that, our small screen UI is done! You should now be able to navigate to the detail screen and back:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2aTCF19S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/small_screen_ui.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2aTCF19S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/small_screen_ui.png" alt='"small screen ui"' title="small screen ui"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/toureholder/flutter_adaptive_layout_tutorial/commit/427abcb49341d9276fe34506cb842067a501e5e4"&gt;See the changes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-convert-movie-list-page-into-home-page"&gt;
  &lt;/a&gt;
  7. Convert movie list page into home page
&lt;/h2&gt;

&lt;p&gt;As a first step to making our layout adaptive to different screen sizes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Convert &lt;code&gt;MovieListPage&lt;/code&gt; to a &lt;code&gt;StatefulWidget&lt;/code&gt;. (In VS Code place the cursor on &lt;code&gt;StatelessWidget&lt;/code&gt;, press CTRL/CMD + . and select "Convert to StatefulWidget".)&lt;/li&gt;
&lt;li&gt;For semantic's sake rename it to &lt;code&gt;HomePage&lt;/code&gt; and the file to &lt;code&gt;home_page.dart&lt;/code&gt;. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;On small screens the &lt;code&gt;HomePage&lt;/code&gt; widget will contain only the &lt;code&gt;MovieListView&lt;/code&gt;. On large screens the &lt;code&gt;HomePage&lt;/code&gt; widget will contain the &lt;code&gt;MovieListView&lt;/code&gt; and the &lt;code&gt;MovieDetailView&lt;/code&gt; side by side. You'll understand why we converted the widget to a &lt;code&gt;StatefulWidget&lt;/code&gt; in just a bit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/toureholder/flutter_adaptive_layout_tutorial/commit/a1b006b874539150b5ca681f58f1c0f023030290"&gt;See the changes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-make-the-home-page-adaptive-with-the-raw-adaptivelayout-endraw-package"&gt;
  &lt;/a&gt;
  8. Make the home page adaptive with the &lt;code&gt;adaptive_layout&lt;/code&gt; package
&lt;/h2&gt;

&lt;p&gt;To help us implement us display different layouts on different screen sizes we'll use the &lt;a href="https://pub.dev/packages/adaptive_layout"&gt;&lt;code&gt;adaptive_layout&lt;/code&gt;&lt;/a&gt; package.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install it with
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;flutter pub add adaptive_layout
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will add a line like this to your package's pubspec.yaml (and run an implicit dart pub get).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;dependencies&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;adaptive_layout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;^0.1.3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Now in &lt;code&gt;home_page.dart&lt;/code&gt;, import the package:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:adaptive_layout/adaptive_layout.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Update the &lt;code&gt;body&lt;/code&gt; of the &lt;code&gt;Scaffold&lt;/code&gt; of &lt;code&gt;HomePage&lt;/code&gt; to be an &lt;code&gt;AdaptiveLayout&lt;/code&gt; with a &lt;code&gt;smallLayout&lt;/code&gt; and a &lt;code&gt;largeLayout&lt;/code&gt; like so:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HomePage&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatefulWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;HomePage&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;_HomePageState&lt;/span&gt; &lt;span class="n"&gt;createState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_HomePageState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;_HomePageState&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;HomePage&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getList&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Movies'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="c1"&gt;// Now using an `AdaptiveLayout` as the `body`&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;AdaptiveLayout&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="c1"&gt;// Provide `MovieListView` as the `smallLayout`&lt;/span&gt;
        &lt;span class="nl"&gt;smallLayout:&lt;/span&gt; &lt;span class="n"&gt;MovieListView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;movies:&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;onTapItem:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Movie&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;MaterialPageRoute&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;MovieDetailPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
            &lt;span class="o"&gt;);&lt;/span&gt;
          &lt;span class="o"&gt;},&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="c1"&gt;// Provide a `Row` as the `largeLayout`&lt;/span&gt;
        &lt;span class="nl"&gt;largeLayout:&lt;/span&gt; &lt;span class="n"&gt;Row&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
            &lt;span class="n"&gt;Expanded&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;MovieListView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                &lt;span class="nl"&gt;movies:&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                &lt;span class="nl"&gt;onTapItem:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Movie&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                  &lt;span class="c1"&gt;// TODO: Update detail view to the right&lt;/span&gt;
                &lt;span class="o"&gt;},&lt;/span&gt;
              &lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;Expanded&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                    &lt;span class="s"&gt;'Select a movie from the list on the left to see the details here.'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                  &lt;span class="o"&gt;),&lt;/span&gt;
                &lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="o"&gt;)&lt;/span&gt;
          &lt;span class="o"&gt;],&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;smallLayout&lt;/code&gt; is just our &lt;code&gt;MovieListView&lt;/code&gt; and the &lt;code&gt;largeLayout&lt;/code&gt; is a 2-column &lt;code&gt;Row&lt;/code&gt; with the &lt;code&gt;MovieListView&lt;/code&gt; in the first &lt;code&gt;Expanded&lt;/code&gt; column.&lt;/p&gt;

&lt;p&gt;At this point, on small screens the app should have the same behavior as before of navigating to the detail page when a list item is tapped. On large screens we should now see the list on the left-hand side of the screen and the message "Select a movie from the list on the left to see the details here" in the center of the right-hand side of the screen: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U48uG1CN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/large_screen_ui_initial_738.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U48uG1CN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/large_screen_ui_initial_738.png" alt='"large screen ui"' title="large screen ui"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, nothing happens when we tap a list item on large screens. Let's tackle that next.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-display-the-detail-view-when-an-item-is-tapped-on-large-screens"&gt;
  &lt;/a&gt;
  9. Display the detail view when an item is tapped on large screens
&lt;/h2&gt;

&lt;p&gt;With a few new lines of code in the &lt;code&gt;home_page.dart&lt;/code&gt; file we can display the detail view on the right hand side when an item is tapped on large screens.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a private property of the &lt;code&gt;_HomePageState&lt;/code&gt; of type &lt;code&gt;Movie?&lt;/code&gt; named &lt;code&gt;_selectedMovie&lt;/code&gt;.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;_HomePageState&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;HomePage&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;_selectedMovie&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Update the &lt;code&gt;onTapItem()&lt;/code&gt; callback of the &lt;code&gt;MovieListView&lt;/code&gt; in the &lt;strong&gt;&lt;code&gt;largeLayout&lt;/code&gt;&lt;/strong&gt; of the &lt;code&gt;AdaptiveLayout&lt;/code&gt; widget to update the &lt;code&gt;_selectedMovie&lt;/code&gt; property with &lt;code&gt;setState&lt;/code&gt;. This is why we converted the widget to a &lt;code&gt;StatefulWidget&lt;/code&gt; a few steps ago.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Within the `largeLayout`&lt;/span&gt;
&lt;span class="nl"&gt;onTapItem:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Movie&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;setState&lt;/span&gt;&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;_selectedMovie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;});&lt;/span&gt;
&lt;span class="o"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Update the second &lt;code&gt;Expandable&lt;/code&gt; of the &lt;code&gt;Row&lt;/code&gt; to display the message if &lt;code&gt;_selectedMovie&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;MovieDetailView&lt;/code&gt; otherwise.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Expanded&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;_selectedMovie&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
        &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="s"&gt;'Select a movie from the list on the left to see the details here.'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MovieDetailView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;_selectedMovie&lt;/span&gt;&lt;span class="o"&gt;!,&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And... we're done! 🎉&lt;/p&gt;

&lt;p&gt;On small, phone-sized, screens when the user taps an item they will navigate to a different screen with the details and on larger screens the details are displayed on the right side of the list and there is no navigation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hJ326EwV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/large_screen_ui_done_738.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hJ326EwV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/large_screen_ui_done_738.png" alt='"large screen ui"' title="large screen ui"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/toureholder/flutter_adaptive_layout_tutorial/commit/5df19896e44c182059598f886bf55660bae37ae5"&gt;See the changes&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#bonus-make-it-look-a-little-better-on-large-screens"&gt;
  &lt;/a&gt;
  BONUS: Make it look a little better on large screens
&lt;/h2&gt;

&lt;p&gt;To make our app look a little better, let's leave the selected list item highlighted and put a divider line between the list view and the detail view with a few new lines of code in the &lt;code&gt;home_page.dart&lt;/code&gt; file.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add a new attribute &lt;code&gt;selectedId&lt;/code&gt; attribute to &lt;code&gt;MovieListView&lt;/code&gt;, so it knows which item a selected.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MovieListView&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;Function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Movie&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;onTapItem&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;selectedId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;MovieListView&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
    &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;movies&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onTapItem&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;selectedId&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Update the &lt;code&gt;itemBuilder&lt;/code&gt; of the &lt;code&gt;ListView.builder&lt;/code&gt; to wrap the &lt;code&gt;ListTile&lt;/code&gt; in a &lt;code&gt;Container&lt;/code&gt; and give the &lt;code&gt;Container&lt;/code&gt; color if the &lt;code&gt;ListTile&lt;/code&gt;'s movie is the selected one.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nl"&gt;itemBuilder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;

  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;selectedId&lt;/span&gt;
      &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;Theme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;primaryColor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withOpacity&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;transparent&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;ListTile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'list_item_&lt;/span&gt;&lt;span class="si"&gt;$index&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;leading:&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;network&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SMALL_POSTER_BASE_URL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;posterPath&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;${movie.title}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;contentPadding:&lt;/span&gt; &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;12.0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;onTap:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;onTapItem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;call&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Update the first &lt;code&gt;Expandable&lt;/code&gt; of the &lt;code&gt;Row&lt;/code&gt; in the &lt;code&gt;largeLayout&lt;/code&gt; of the &lt;code&gt;AdaptiveLayout&lt;/code&gt; to provide the selected movie's &lt;code&gt;id&lt;/code&gt; to the &lt;code&gt;MovieListView&lt;/code&gt;.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Expanded&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;MovieListView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;movies:&lt;/span&gt; &lt;span class="n"&gt;movies&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="nl"&gt;onTapItem:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Movie&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;setState&lt;/span&gt;&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_selectedMovie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;movie&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
      &lt;span class="o"&gt;});&lt;/span&gt;
    &lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="nl"&gt;selectedId:&lt;/span&gt; &lt;span class="n"&gt;_selectedMovie&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Lastly, let's add a border to the left-hand side of the detail view's &lt;code&gt;Container&lt;/code&gt; with some &lt;code&gt;BoxDecoration&lt;/code&gt;.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Expanded&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;decoration:&lt;/span&gt; &lt;span class="n"&gt;BoxDecoration&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;border:&lt;/span&gt; &lt;span class="n"&gt;Border&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;left:&lt;/span&gt; &lt;span class="n"&gt;BorderSide&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;grey&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="o"&gt;]!,&lt;/span&gt;
          &lt;span class="nl"&gt;width:&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;_selectedMovie&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
        &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="s"&gt;'Select a movie from the list on the left to see the details here.'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MovieDetailView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;_selectedMovie&lt;/span&gt;&lt;span class="o"&gt;!,&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course the sky's the limit with the design, but I think our app is minimally presentable now:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6yRb8ETL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/large_screen_ui_better_738.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6yRb8ETL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/toureholder/flutter_adaptive_layout_tutorial/main/docs/large_screen_ui_better_738.png" alt='"large screen ui"' title="large screen ui"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/toureholder/flutter_adaptive_layout_tutorial/commit/270ee50594899df6456cdf0440257d117bc043ab"&gt;See the changes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-tests"&gt;
  &lt;/a&gt;
  BONUS: Tests
&lt;/h2&gt;

&lt;p&gt;I chose not to TDD this so we could focus on the layout, but you can find &lt;a href="https://github.com/toureholder/flutter_adaptive_layout_tutorial/tree/main/test/"&gt;the tests&lt;/a&gt; here in the source code.&lt;/p&gt;

&lt;p&gt;Note in the tests that I use &lt;code&gt;WidgetTester&lt;/code&gt; to specify a small screen size in a &lt;code&gt;setUp&lt;/code&gt; function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;setUp&lt;/span&gt;&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;physicalSizeTestValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;AdaptiveLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getBreakpoints&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;mediumScreenMinWidth&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;devicePixelRatioTestValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and to specify a large screen size like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;setUp&lt;/span&gt;&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;physicalSizeTestValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;AdaptiveLayout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getBreakpoints&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;largeScreenMinWidth&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;devicePixelRatioTestValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Head over the the &lt;a href="https://github.com/toureholder/flutter_adaptive_layout_tutorial"&gt;Github repo&lt;/a&gt; to see the complete source code with a separate commit for each step 😉.&lt;/p&gt;

&lt;p&gt;Congrats on making it to the end and thanks for following along! 👏 ❤️ ⭐ 🦄 🔖&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How I failed to create an audience twice (and succeeded the third time)</title>
      <author>Pasca Vlad</author>
      <pubDate>Fri, 02 Jul 2021 11:34:08 +0000</pubDate>
      <link>https://dev.to/pascavld/how-i-failed-to-create-an-audience-twice-and-succeeded-the-third-time-4dh9</link>
      <guid>https://dev.to/pascavld/how-i-failed-to-create-an-audience-twice-and-succeeded-the-third-time-4dh9</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found value in this thread you will most likely enjoy my tweets too so make sure you follow me on &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;  for more information about web development and how to improve as a developer. This article was first published on my &lt;a href="https://vladpasca.hashnode.dev/"&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It all started one year ago&lt;/p&gt;

&lt;p&gt;I was following @andres_vidoza on Instagram and I liked how he was documenting his web development journey&lt;/p&gt;

&lt;p&gt;So I thought "I can do this too"&lt;/p&gt;

&lt;p&gt;The next day I took a photo of my laptop while I was coding and talked a bit about what I learned that day under it&lt;/p&gt;

&lt;p&gt;After one hour only 10 people saw it but nobody liked it&lt;/p&gt;

&lt;p&gt;I was ok with that and I continued posting&lt;/p&gt;

&lt;p&gt;After 2-3 weeks of posting every day I was getting 5 likes at most on each post I made but I wasn't enjoying that at all&lt;/p&gt;

&lt;p&gt;I hated taking pictures. I only wanted to code and then write about what I learned&lt;/p&gt;

&lt;p&gt;So I slowly became very inconsistent until I stopped posting&lt;/p&gt;

&lt;p&gt;At that time I also discovered Twitter&lt;/p&gt;

&lt;p&gt;After a few weeks of lurking, I decided to give it a try&lt;/p&gt;

&lt;p&gt;So one day I announced that I'm doing the 100 Days of Code challenge &lt;/p&gt;

&lt;p&gt;I did that for almost 2 months and nobody was seeing my posts&lt;/p&gt;

&lt;p&gt;I gained less than 100 followers in 2 months which made me really unmotivated&lt;/p&gt;

&lt;p&gt;Now when I look back I realize that the way I was formatting my tweets was really bad&lt;/p&gt;

&lt;p&gt;Lots of hashtags, no white spaces&lt;/p&gt;

&lt;p&gt;So as you probably guessed after those 2 months I quit Twitter too&lt;/p&gt;

&lt;p&gt;It was the beginning of September 2020 at that time and school was about to start so I stopped coding too&lt;/p&gt;

&lt;p&gt;Then somewhere around the 1st of October, I read an article from @catalinmpit &lt;/p&gt;

&lt;p&gt;He was talking about how important an online presence is for a developer&lt;/p&gt;

&lt;p&gt;That article motivated me to start tweeting again&lt;/p&gt;

&lt;p&gt;So I made that public once again and I also bought a Twitter course...&lt;/p&gt;

&lt;p&gt;(will talk more about this later)&lt;/p&gt;

&lt;p&gt;One week went by and I started to fall in love with it&lt;/p&gt;

&lt;p&gt;I saw that as I was applying the learnings from that course my tweets were getting more and more likes&lt;/p&gt;

&lt;p&gt;A few months later of tweeting every day I hit 1000 followers&lt;/p&gt;

&lt;p&gt;From there everything got a lot easier&lt;/p&gt;

&lt;p&gt;All I did was follow what I learned in that course and post tweets every day&lt;/p&gt;

&lt;p&gt;And here we are now&lt;/p&gt;

&lt;p&gt;After 2 failures and 6 months of hard work, I managed to build an amazing audience of 18,000+ people&lt;/p&gt;

&lt;p&gt;So, what can you learn from this story?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Find the platform that works the best for you&lt;/li&gt;
&lt;li&gt;Create a schedule and post something everyday&lt;/li&gt;
&lt;li&gt;Get a growth course to speed up the process&lt;/li&gt;
&lt;li&gt;Stay consistent for at least 3 months&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Btw, this is the Twitter course I was talking about&lt;/p&gt;

&lt;p&gt;aff&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gumroad.com/a/886314099"&gt;https://gumroad.com/a/886314099&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The end
&lt;/h3&gt;

&lt;p&gt;_I hope found this useful and if you did please let me know. If you have any question feel free to DM me &lt;/p&gt;

</description>
      <category>twitter</category>
      <category>audience</category>
      <category>story</category>
      <category>failures</category>
    </item>
    <item>
      <title>[Cybersecurity] Most common web security vulnerabilities!</title>
      <author>Yuma-Tsushima </author>
      <pubDate>Fri, 02 Jul 2021 11:34:05 +0000</pubDate>
      <link>https://dev.to/yumatsushima07/cybersecurity-most-common-web-security-vulnerabilities-3g7f</link>
      <guid>https://dev.to/yumatsushima07/cybersecurity-most-common-web-security-vulnerabilities-3g7f</guid>
      <description>&lt;p&gt;OWASP or Open Web Security Project is a non-profit charitable organization focused on improving the security of software and web applications.&lt;/p&gt;

&lt;p&gt;The organization publishes a list of top web security vulnerabilities based on the data from various security organizations.&lt;/p&gt;

&lt;p&gt;The web security vulnerabilities are prioritized depending on exploitability, detectability and impact on software.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Exploitability&lt;/strong&gt; - What is needed to exploit the security vulnerability? Highest exploitability when the attack needs only web browser and lowest being advanced programming and tools.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Detectability&lt;/strong&gt; - How easy is it to detect the threat? Highest being the information displayed on URL, Form or Error message and lowest being source code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Impact or Damage&lt;/strong&gt; - How much damage will be done if the security vulnerability is exposed or attacked? Highest being complete system crash and lowest being nothing at all.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main aim of OWASP Top 10 is to educate the developers, designers, managers, architects and organizations about the most important security vulnerabilities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Top 10 security vulnerabilities as per OWASP Top 10 are:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SQL Injection&lt;/li&gt;
&lt;li&gt;Cross Site Scripting&lt;/li&gt;
&lt;li&gt;Broken Authentication and Session Management&lt;/li&gt;
&lt;li&gt;Insecure Direct Object References&lt;/li&gt;
&lt;li&gt;Cross Site Request Forgery&lt;/li&gt;
&lt;li&gt;Security Misconfiguration&lt;/li&gt;
&lt;li&gt;Insecure Cryptographic Storage&lt;/li&gt;
&lt;li&gt;Failure to restrict URL Access&lt;/li&gt;
&lt;li&gt;Insufficient Transport Layer Protection&lt;/li&gt;
&lt;li&gt;Unvalidated Redirects and Forwards&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sql-injection"&gt;
  &lt;/a&gt;
  SQL Injection
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;Injection is a security vulnerability that allows an attacker to alter backend &lt;a href="https://www.w3schools.com/sql/sql_injection.asp"&gt;SQL&lt;/a&gt; statements by manipulating the user supplied data.&lt;/p&gt;

&lt;p&gt;Injection occurs when the user input is sent to an interpreter as part of command or query and trick the interpreter into executing unintended commands and gives access to unauthorized data.&lt;/p&gt;

&lt;p&gt;The SQL command which when executed by web application can also expose the back-end database.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implication"&gt;
  &lt;/a&gt;
  Implication
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An attacker can inject malicious content into the vulnerable fields.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sensitive data like User Names, Passwords, etc. can be read from the database.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Database data can be modified (Insert/Update/ Delete).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Administration Operations can be executed on the database&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#vulnerable-objects"&gt;
  &lt;/a&gt;
  Vulnerable Objects
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Input Fields&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;URLs interacting with the database.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;SQL injection on the Login Page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Logging into an application without having valid credentials.&lt;/p&gt;

&lt;p&gt;Valid &lt;code&gt;userName&lt;/code&gt; is available, and password is not available.&lt;/p&gt;

&lt;p&gt;User Name: &lt;code&gt;sjones&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Password: &lt;code&gt;1=1' or pass123&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;SQL query created and sent to Interpreter as below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Users&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;User_Name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sjones&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;Password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s1"&gt;' or pass123;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#recommendations"&gt;
  &lt;/a&gt;
  Recommendations
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;White listing the input fields&lt;/li&gt;
&lt;li&gt;Avoid displaying detailed error messages that are useful to an attacker.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#cross-site-scripting"&gt;
  &lt;/a&gt;
  Cross Site Scripting
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;Cross Site Scripting is also shortly known as XSS.&lt;/p&gt;

&lt;p&gt;XSS vulnerabilities target scripts embedded in a page that are executed on the client side i.e. user browser rather then at the server side. These flaws can occur when the application takes untrusted data and send it to the web browser without proper validation.&lt;/p&gt;

&lt;p&gt;Attackers can use XSS to execute malicious scripts on the users in this case victim browsers. Since the browser cannot know if the script is trusty or not, the script will be executed, and the attacker can hijack session cookies, deface websites, or redirect the user to an unwanted and malicious websites.&lt;/p&gt;

&lt;p&gt;XSS is an attack which allows the attacker to execute the scripts on the victim's browser.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#implication"&gt;
  &lt;/a&gt;
  Implication:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Making the use of this security vulnerability, an attacker can inject scripts into the application, can steal session cookies, deface websites, and can run malware on the victim's machines.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#vulnerable-objects"&gt;
  &lt;/a&gt;
  Vulnerable Objects
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Input Fields&lt;/li&gt;
&lt;li&gt;URLs&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h3&gt;

&lt;p&gt;1.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;http://www.example.com/home?"&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;xss&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The above script when run on a browser, a message box will be displayed if the site is vulnerable to XSS.&lt;/p&gt;

&lt;p&gt;The more serious attack can be done if the attacker wants to display or store session cookie.&lt;/p&gt;

&lt;p&gt;2.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;http://example.net/search.aspx?txtSearch &lt;span class="nt"&gt;&amp;lt;iframe&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;src&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="na"&gt;http:&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="na"&gt;google.com&lt;/span&gt; &lt;span class="na"&gt;width = &lt;/span&gt;&lt;span class="s"&gt;500&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt; &lt;span class="err"&gt;500&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The above script when run, the browser will load an invisible frame pointing to &lt;code&gt;http://google.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The attack can be made serious by running a malicious script on the browser.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#recommendations"&gt;
  &lt;/a&gt;
  Recommendations
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;White Listing input fields&lt;/li&gt;
&lt;li&gt;Input Output encoding&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#broken-authentication-and-session-management"&gt;
  &lt;/a&gt;
  Broken Authentication and Session Management
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;The websites usually create a session cookie and session ID for each valid session, and these cookies contain sensitive data like username, password, etc. When the session is ended either by logout or browser closed abruptly, these cookies should be invalidated i.e. for each session there should be a new cookie.&lt;/p&gt;

&lt;p&gt;If the cookies are not invalidated, the sensitive data will exist in the system. For example, a user using a public computer (Cyber Cafe), the cookies of the vulnerable site sits on the system and exposed to an attacker. An attacker uses the same public computer after some time, the sensitive data is compromised.&lt;/p&gt;

&lt;p&gt;In the same manner, a user using a public computer, instead of logging off, he closes the browser abruptly. An attacker uses the same system, when browses the same vulnerable site, the previous session of the victim will be opened. The attacker can do whatever he wants to do from stealing profile information, credit card information, etc.&lt;/p&gt;

&lt;p&gt;A check should be done to find the strength of the authentication and session management. Keys, session tokens, cookies should be implemented properly without compromising passwords.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#vulnerable-objects"&gt;
  &lt;/a&gt;
  Vulnerable Objects
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Session IDs exposed on URL can lead to session fixation attack.&lt;/li&gt;
&lt;li&gt;Session IDs same before and after logout and login.&lt;/li&gt;
&lt;li&gt;Session Timeouts are not implemented correctly.&lt;/li&gt;
&lt;li&gt;Application is assigning same session ID for each new session.&lt;/li&gt;
&lt;li&gt;Authenticated parts of the application are protected using SSL and passwords are stored in hashed or encrypted format.&lt;/li&gt;
&lt;li&gt;The session can be reused by a low privileged user.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#implication"&gt;
  &lt;/a&gt;
  Implication
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Making use of this vulnerability, an attacker can hijack a session, gain unauthorized access to the system which allows disclosure and modification of unauthorized information.&lt;/li&gt;
&lt;li&gt;The sessions can be high jacked using stolen cookies or sessions using XSS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Airline reservation application supports URL rewriting, putting session IDs in the URL:
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;http://Examples.com/sale/saleitems;jsessionid=2P0OC2oJM0DPXSNQPLME34SERTBG/dest=Maldives
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;br&gt;
 (Sale of tickets to Maldives)&lt;/p&gt;

&lt;p&gt;An authenticated user of the site wants to let his friends know about the sale and sends an email across. The friends receive the session ID and can be used to do unauthorized modifications or misuse the saved credit card details.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;An application is vulnerable to XSS, by which an attacker can access the session ID and can be used to hijack the session.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Applications timeouts are not set properly. The user uses a public computer and closes the browser instead of logging off and walks away. The attacker uses the same browser some time later, and the session is authenticated.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#recommendations"&gt;
  &lt;/a&gt;
  Recommendations
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;All the authentication and session management requirements should be defined as per OWASP Application Security Verification Standard.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Never expose any credentials in URLs or Logs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Strong efforts should be also made to avoid XSS flaws which can be used to steal session IDs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#insecure-direct-object-references"&gt;
  &lt;/a&gt;
  Insecure Direct Object References
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;It occurs when a developer exposes a reference to an internal implementation object, such as a file, directory, or database key as in URL or as a FORM parameter. The attacker can use this information to access other objects and can create a future attack to access the unauthorized data.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#implication"&gt;
  &lt;/a&gt;
  Implication
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Using this vulnerability, an attacker can gain access to unauthorized internal objects, can modify data or compromise the application.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#vulnerable-objects"&gt;
  &lt;/a&gt;
  Vulnerable Objects
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;In the URL.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples:
&lt;/h3&gt;

&lt;p&gt;Changing &lt;code&gt;"userid"&lt;/code&gt; in the following URL can make an attacker to view other user's information.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://www.vulnerablesite.com/userid=123
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;modified to&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://www.vulnerablesite.com/userid=124
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;An attacker can view others information by changing user id value.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#recommendations"&gt;
  &lt;/a&gt;
  Recommendations:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Implement access control checks.&lt;/li&gt;
&lt;li&gt;Avoid exposing object references in URLs.&lt;/li&gt;
&lt;li&gt;Verify authorization to all reference objects.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#cross-site-request-forgery"&gt;
  &lt;/a&gt;
  Cross Site Request Forgery
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;Cross Site Request Forgery is a forged request came from the cross site.&lt;/p&gt;

&lt;p&gt;CSRF attack is an attack that occurs when a malicious website, email, or program causes a user's browser to perform an unwanted action on a trusted site for which the user is currently authenticated.&lt;/p&gt;

&lt;p&gt;A CSRF attack forces a logged-on victim's browser to send a forged HTTP request, including the victim's session cookie and any other automatically included authentication information, to a vulnerable web application.&lt;/p&gt;

&lt;p&gt;A link will be sent by the attacker to the victim when the user clicks on the URL when logged into the original website, the data will be stolen from the website.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#implication"&gt;
  &lt;/a&gt;
  Implication
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Using this vulnerability as an attacker can change user profile information, change status, create a new user on admin behalf, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#vulnerable-objects"&gt;
  &lt;/a&gt;
  Vulnerable Objects
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;User Profile page&lt;/li&gt;
&lt;li&gt;User account forms&lt;/li&gt;
&lt;li&gt;Business transaction page&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h3&gt;

&lt;p&gt;The victim is logged into a bank website using valid credentials. He receives mail from an attacker saying "Please click here to donate $1 to cause."&lt;/p&gt;

&lt;p&gt;When the victim clicks on it, a valid request will be created to donate $1 to a particular account.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://www.vulnerablebank.com/transfer.do?account=cause&amp;amp;amount=1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The attacker captures this request and creates below request and embeds in a button saying "I Support Cause."&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://www.vulnerablebank.com/transfer.do?account=Attacker&amp;amp;amount=1000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Since the session is authenticated and the request is coming through the bank website, the server would transfer $1000 dollars to the attacker.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#recommendation"&gt;
  &lt;/a&gt;
  Recommendation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Mandate user's presence while performing sensitive actions.&lt;/li&gt;
&lt;li&gt;Implement mechanisms like CAPTCHA, Re-Authentication, and Unique Request Tokens.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#security-misconfiguration"&gt;
  &lt;/a&gt;
  Security Misconfiguration
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;Security Configuration must be defined and deployed for the application, frameworks, application server, web server, database server, and platform. If these are properly configured, an attacker can have unauthorized access to sensitive data or functionality.&lt;/p&gt;

&lt;p&gt;Sometimes such flaws result in complete system compromise. Keeping the software up to date is also good security.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#implication"&gt;
  &lt;/a&gt;
  Implication
&lt;/h3&gt;

&lt;p&gt;Making use of this vulnerability, the attacker can enumerate the underlying technology and application server version information, database information and gain information about the application to mount few more attacks.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#vulnerable-objects"&gt;
  &lt;/a&gt;
  Vulnerable objects
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;URL&lt;/li&gt;
&lt;li&gt;Form Fields&lt;/li&gt;
&lt;li&gt;Input fields&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The application server admin console is automatically installed and not removed. Default accounts are not changed. The attacker can log in with default passwords and can gain unauthorized access.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Directory Listing is not disabled on your server. Attacker discovers and can simply list directories to find any file.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#insecure-cryptographic-storage"&gt;
  &lt;/a&gt;
  Insecure Cryptographic Storage
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;Insecure Cryptographic storage is a common vulnerability which exists when the sensitive data is not stored securely.&lt;/p&gt;

&lt;p&gt;The user credentials, profile information, health details, credit card information, etc. come under sensitive data information on a website.&lt;/p&gt;

&lt;p&gt;This data will be stored on the application database. When this data are stored improperly by not using encryption or hashing*, it will be vulnerable to the attackers.&lt;/p&gt;

&lt;p&gt;(*Hashing is transformation of the string characters into shorter strings of fixed length or a key. To decrypt the string, the algorithm used to form the key should be available)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#implication"&gt;
  &lt;/a&gt;
  Implication
&lt;/h3&gt;

&lt;p&gt;By using this vulnerability, an attacker can steal, modify such weakly protected data to conduct identity theft, credit card fraud or other crimes.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#vulnerable-objects"&gt;
  &lt;/a&gt;
  Vulnerable objects
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Application database.
### Examples&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In one of the banking application, password database uses unsalted hashes * to store everyone's passwords. An SQL injection flaw allows the attacker to retrieve the password file. All the unsalted hashes can be brute forced in no time whereas, the salted passwords would take thousands of years.&lt;/p&gt;

&lt;p&gt;(*Unsalted Hashes – Salt is a random data appended to the original data. Salt is appended to the password before hashing)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#recommendations"&gt;
  &lt;/a&gt;
  Recommendations
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Ensure appropriate strong standard algorithms. Do not create own cryptographic algorithms. Use only approved public algorithms such as AES, RSA public key cryptography, and SHA-256, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ensure offsite backups are encrypted, but the keys are managed and backed up separately.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#failure-to-restrict-url-access"&gt;
  &lt;/a&gt;
  Failure to restrict URL Access
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;Web applications check URL access rights before rendering protected links and buttons. Applications need to perform similar access control checks each time these pages are accessed.&lt;/p&gt;

&lt;p&gt;In most of the applications, the privileged pages, locations and resources are not presented to the privileged users.&lt;/p&gt;

&lt;p&gt;By an intelligent guess, an attacker can access privilege pages. An attacker can access sensitive pages, invoke functions and view confidential information.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#implication"&gt;
  &lt;/a&gt;
  Implication
&lt;/h3&gt;

&lt;p&gt;Making use of this vulnerability attacker can gain access to the unauthorized URLs, without logging into the application and exploit the vulnerability. An attacker can access sensitive pages, invoke functions and view confidential information.&lt;br&gt;
Vulnerable objects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;URLs&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Attacker notices the URL indicates the role as "/user/getaccounts." He modifies as "/admin/getaccounts".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An attacker can append role to the URL.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://www.vulnerablsite.com 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;can be modified as&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; http://www.vulnerablesite.com/admin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#recommendations"&gt;
  &lt;/a&gt;
  Recommendations
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Implement strong access control checks.&lt;/li&gt;
&lt;li&gt;Authentication and authorization policies should be role-based.&lt;/li&gt;
&lt;li&gt;Restrict access to unwanted URLs.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#insufficient-transport-layer-protection"&gt;
  &lt;/a&gt;
  Insufficient Transport Layer Protection
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;Deals with information exchange between the user (client) and the server (application). Applications frequently transmit sensitive information like authentication details, credit card information, and session tokens over a network.&lt;/p&gt;

&lt;p&gt;By using weak algorithms or using expired or invalid certificates or not using SSL can allow the communication to be exposed to untrusted users, which may compromise a web application and or steal sensitive information.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#implication"&gt;
  &lt;/a&gt;
  Implication
&lt;/h3&gt;

&lt;p&gt;Making use of this web security vulnerability, an attacker can sniff legitimate user's credentials and gaining access to the application.&lt;br&gt;
Can steal credit card information.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#vulnerable-objects"&gt;
  &lt;/a&gt;
  Vulnerable objects
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Data sent over the network.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#recommendations"&gt;
  &lt;/a&gt;
  Recommendations
&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enable secure HTTP and enforce credential transfer over HTTPS only.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure your certificate is valid and not expired.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples:
&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;An application not using SSL, an attacker will simply monitor network traffic and observes an authenticated victim session cookie. An attacker can steal that cookie and perform Man-in-the-Middle attack.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#unvalidated-redirects-and-forwards"&gt;
  &lt;/a&gt;
  Unvalidated Redirects and Forwards
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;The web application uses few methods to redirect and forward users to other pages for an intended purpose.&lt;/p&gt;

&lt;p&gt;If there is no proper validation while redirecting to other pages, attackers can make use of this and can redirect victims to phishing or malware sites, or use forwards to access unauthorized pages.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#implication"&gt;
  &lt;/a&gt;
  Implication
&lt;/h3&gt;

&lt;p&gt;An attacker can send a URL to the user that contains a genuine URL appended with encoded malicious URL. A user by just seeing the genuine part of the attacker sent URL can browse it and may become a victim.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h3&gt;

&lt;p&gt;1.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://www.vulnerablesite.com/login.aspx?redirectURL=ownsite.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Modified to&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://www.vulnerablesite.com/login.aspx?redirectURL=evilsite.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#recommendations"&gt;
  &lt;/a&gt;
  Recommendations
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Simply avoid using redirects and forwards in the application. If used, do not involve using user parameters in calculating the destination.&lt;/li&gt;
&lt;li&gt;If the destination parameters can't be avoided, ensure that the supplied value is valid, and authorized for the user.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Question: What other common web vulnerabilities do you know? How do we use them? Write a comment below!&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Yuma-Tsushima07"&gt;
        Yuma-Tsushima07
      &lt;/a&gt; / &lt;a href="https://github.com/Yuma-Tsushima07/Yuma-Tsushima07"&gt;
        Yuma-Tsushima07
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Readme file
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
      &lt;h1&gt;
Welcome to Yuma-Tsushima's Github page!&lt;/h1&gt;
  &lt;p&gt;
  &lt;b&gt;Visitor count &lt;/b&gt;&lt;br&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/57a70d5f50ac5d203e9b6bd912fc9e4b01c8d40c215b656821b455d1f18f928f/68747470733a2f2f70726f66696c652d636f756e7465722e676c697463682e6d652f59756d612d5473757368696d6130372f636f756e742e737667"&gt;&lt;img src="https://camo.githubusercontent.com/57a70d5f50ac5d203e9b6bd912fc9e4b01c8d40c215b656821b455d1f18f928f/68747470733a2f2f70726f66696c652d636f756e7465722e676c697463682e6d652f59756d612d5473757368696d6130372f636f756e742e737667"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.patreon.com/Order_of_the_Black_Knights_C2_bot" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6a6769e2d2eb0567975317a589549beaa5db99df73ce9d6f5f9004ec12eee28e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f537570706f72742d42757925323075732532306125323050697a7a612d6f72616e67652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d70617472656f6e" alt="Support"&gt;&lt;/a&gt;
&lt;a href="https://disboard.org/server/711260885531885648" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/018986f113096a2680c8fa03f313cdf0b8adf24be6d7b9df04b81f14e7897680/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43322773253230506c6163652d4a6f696e2532307573253230666f7225323061253230636861742d626c75652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d646973636f7264" alt="Discord"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/mNAWykv67W" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3b2ffae6fa2d5de61341af99a4e69ce1546047acebcb5039aa106a8411b2209/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6f696e253230746f253230636861742d4379626572417274427974652d626c75652e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d646973636f7264" alt="Discord"&gt;&lt;/a&gt;
&lt;a href="https://soundcloud.com/0c7av3h4ck5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b8ae02d15a55c4261d919a7dd81f80335cf71d017eb6b737cc32698877f322f9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536f756e642d436c6f75642d7265642e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d736f756e64636c6f7564" alt="SoundCloud"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/Yuma-Tsushima07/Yuma-Tsushima07/blob/main/assets/terminalpython.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--30kNr2f4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Yuma-Tsushima07/Yuma-Tsushima07/raw/main/assets/terminalpython.png"&gt;&lt;/a&gt;&lt;/p&gt;

      &lt;h3&gt;
About Myself&lt;/h3&gt;
      &lt;p&gt;Hello, my name is Yuma-Tsushima (frequently shortened to Yuma). I am an ambitious coder, and I enjoy coding in JavaScript (mainly). I also love making websites using HTML, CSS and (of course) JS! I started programming (self taught) at the age of 13. Originally, I came from the creative field ; I draw/sing/animate/make music.  &lt;/p&gt;
   

&lt;h3&gt;
Talents and Hobbies&lt;/h3&gt;
&lt;p&gt;I love drawing (I have been drawing all of my life). I play strategy games, I code and I do CTFs! I am also good at animation, making AMVs and image editing. My favourite game is Mindustry, followed by Flow Free and Sudoku. I love watching anime (I love Code Geass - I relate to Lelouch a lot) and I aspire to create my own anime!&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/2ee6b04a74d2e5f3c133f042cf9a4c517c12de84f3b843a716694fc09474e417/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233653334633236266d6573736167653d44726177696e67253230253743253230412a"&gt;&lt;img src="https://camo.githubusercontent.com/2ee6b04a74d2e5f3c133f042cf9a4c517c12de84f3b843a716694fc09474e417/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233653334633236266d6573736167653d44726177696e67253230253743253230412a" alt="Drawing"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9107ed8d09376ce206e2398fd0513fae0bb422cf18f2c863fdeb4cff1da69c42/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233353633643763266d6573736167653d4d7573696325323025374325323042"&gt;&lt;img src="https://camo.githubusercontent.com/9107ed8d09376ce206e2398fd0513fae0bb422cf18f2c863fdeb4cff1da69c42/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233353633643763266d6573736167653d4d7573696325323025374325323042" alt="Music"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0f8e7c7e97a090de494030cec5e9c53271971a05cc99cc1877be133211103b2f/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233326237343839266d6573736167653d4469676974616c253230417274776f726b253230253743253230383025"&gt;&lt;img src="https://camo.githubusercontent.com/0f8e7c7e97a090de494030cec5e9c53271971a05cc99cc1877be133211103b2f/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d253233326237343839266d6573736167653d4469676974616c253230417274776f726b253230253743253230383025" alt="Digital Artwork"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e00451d5e1f51b60407fef6ea1383867d43e4520e2ba2b9e90a10defea549d16/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363841303633266d6573736167653d49435425323025374325323041"&gt;&lt;img src="https://camo.githubusercontent.com/e00451d5e1f51b60407fef6ea1383867d43e4520e2ba2b9e90a10defea549d16/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363841303633266d6573736167653d49435425323025374325323041" alt="ICT"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/06f4f740a9fa9a5b4bc25b358d6e98df500cccd4f936b4a8bb020ce509b12e23/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363144424642266d6573736167653d456c656374726f6e69637325323025374325323041"&gt;&lt;img src="https://camo.githubusercontent.com/06f4f740a9fa9a5b4bc25b358d6e98df500cccd4f936b4a8bb020ce509b12e23/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363144424642266d6573736167653d456c656374726f6e69637325323025374325323041" alt="Electronics"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f4a546b3fe39d4cfad9b832e36d1383b539c29e2876293b13466c3cfd6881a68/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d333036393938266d6573736167653d44657369676e73253230253743253230383525"&gt;&lt;img src="https://camo.githubusercontent.com/f4a546b3fe39d4cfad9b832e36d1383b539c29e2876293b13466c3cfd6881a68/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d333036393938266d6573736167653d44657369676e73253230253743253230383525" alt="Desgins"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8e0c219dec1ad0f1a1e6567edcbd25c8df8afddc0952dcd3f4e328f7d2074d65/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363032433530266d6573736167653d576562253230446576656c6f706d656e74253230253743253230383025"&gt;&lt;img src="https://camo.githubusercontent.com/8e0c219dec1ad0f1a1e6567edcbd25c8df8afddc0952dcd3f4e328f7d2074d65/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d363032433530266d6573736167653d576562253230446576656c6f706d656e74253230253743253230383025" alt="Web dev"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/307207f36ded5f349f64978e2c8c68c08cd2f1474639832722a0ff0eff976491/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d373634616263266d6573736167653d5374726174656779253230253743253230393525"&gt;&lt;img src="https://camo.githubusercontent.com/307207f36ded5f349f64978e2c8c68c08cd2f1474639832722a0ff0eff976491/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f7374796c653d666c61742d737175617265266c6162656c3d25453225413025383026636f6c6f723d353535266c6162656c436f6c6f723d373634616263266d6573736167653d5374726174656779253230253743253230393525" alt="Strategy"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt; Check out my work!: &lt;/b&gt; &lt;br&gt;
❯ Soundcloud : &lt;a href="https://soundcloud.com/0c7av3h4ck5" rel="nofollow"&gt;0c7av3h4ck5&lt;/a&gt; &lt;br&gt;
❯ Discord : &lt;a href="https://discord.gg/mNAWykv67W" rel="nofollow"&gt;{CyberArtByte}&lt;/a&gt;  &lt;br&gt;
❯ Artwork : &lt;a href="https://medibang.com/u/AcceleratorArts07/" rel="nofollow"&gt;AcceleratorArts07&lt;/a&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Recent Medium&lt;/b&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Yuma-Tsushima07/Yuma-Tsushima07"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#follow-me"&gt;
  &lt;/a&gt;
  Follow me!
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/Yuma-Tsushima07"&gt;https://github.com/Yuma-Tsushima07&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Medium: &lt;a href="https://0xv37r1x3r.medium.com/"&gt;https://0xv37r1x3r.medium.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;SoundCloud: &lt;a href="https://soundcloud.com/0c7av3h4ck5"&gt;https://soundcloud.com/0c7av3h4ck5&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#discord-servers"&gt;
  &lt;/a&gt;
  Discord Servers!!
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Bounty Hunters&lt;/strong&gt;: An amazing bug hunting community full of developers and exploiters!!!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href="https://discord.gg/J5PsgKqdWq"&gt;https://discord.gg/J5PsgKqdWq&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;CyberArtByte&lt;/strong&gt;: My server full of bling and joy!!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href="https://discord.com/invite/mNAWykv67W"&gt;https://discord.com/invite/mNAWykv67W&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#new-soundcloud-track"&gt;
  &lt;/a&gt;
  New Soundcloud Track!!
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="100%" height="166" src="https://w.soundcloud.com/player/?url=https://soundcloud.com/0c7av3h4ck5/giornos-theme-edm-0c7av3h4ck5&amp;amp;auto_play=false&amp;amp;color=%23000000&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;show_teaser=true"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>sql</category>
      <category>websecurity</category>
    </item>
    <item>
      <title>Why do computers suck at math?</title>
      <author>Rohit Singh</author>
      <pubDate>Fri, 02 Jul 2021 11:26:20 +0000</pubDate>
      <link>https://dev.to/rohitsingh/why-do-computers-suck-at-math-3nn2</link>
      <guid>https://dev.to/rohitsingh/why-do-computers-suck-at-math-3nn2</guid>
      <description>&lt;p&gt;I always thought computers were better at math than people until I tried to add 0.1 to 0.2 and got an answer of 0.3000000004 😕&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bni3hkOc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pz2ti3d1ctabs3cf2b10.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bni3hkOc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pz2ti3d1ctabs3cf2b10.gif" alt="what the hell"&gt;&lt;/a&gt;&lt;br&gt;
JavaScript is just a toy language so I figured it was a bug and tried the same thing in python but it also gave me the same wrong answer then I discovered that these languages aren't actually broken they just do floating point arithmetic ✨ &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--svSGHWzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tv5xqrigbfo8k0313v8p.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--svSGHWzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tv5xqrigbfo8k0313v8p.gif" alt="smart"&gt;&lt;/a&gt;&lt;br&gt;
Computers have a limited amount of memory and need to make a trade-off between range and precision in JavaScript all numbers must be stored within 64 bits that means we can have integers accurate up to 15 digits and a max of 17 numbers after the decimal point it's called a floating point because there are no fixed number of digits before or after the decimal point allowing it to represent a wide range of numbers both big and small &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bn1_C-BH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4mah7q0s3qncb7ypl4c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bn1_C-BH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4mah7q0s3qncb7ypl4c.png" alt="js error"&gt;&lt;/a&gt;&lt;br&gt;
The problem is that computers use a base 2 system binary while humans use a base 10 system that leads to rounding errors when all the memory has been used up and that's why your computer sucks at math 🤕&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>mathematics</category>
    </item>
    <item>
      <title>How To Set Up ESLint &amp; Prettier In VS Code</title>
      <author>Rahul Shaw</author>
      <pubDate>Fri, 02 Jul 2021 11:15:53 +0000</pubDate>
      <link>https://dev.to/rahulshawdev/how-to-set-up-eslint-prettier-in-vs-code-1dc1</link>
      <guid>https://dev.to/rahulshawdev/how-to-set-up-eslint-prettier-in-vs-code-1dc1</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  INTRODUCTION
&lt;/h3&gt;

&lt;p&gt;ESLint and prettier are the most popular tools which are used almost everywhere so today we will be talking about what eslint and prettier are and we will see how easy it is to set it up in vs code without getting any errors.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-eslint"&gt;
  &lt;/a&gt;
  What is ESLint
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://eslint.org/"&gt;ESLint&lt;/a&gt;  is a tool used for identifying bugs and errors in your typescript/javascript code to make code more consistent and easy to read. It is also known as linters. ESLint statically analyzes your code to quickly find problems. Many problems ESLint finds can be automatically fixed. And the best part is you can customize ESLint to work exactly the way you need it for your project.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-prettier"&gt;
  &lt;/a&gt;
  What is Prettier
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt; is a tool that helps you to format your code. It supports many languages. It saves you time and energy since you don't have to format code on your own.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#difference-between-prettier-amp-eslint"&gt;
  &lt;/a&gt;
  Difference between Prettier &amp;amp; ESLint
&lt;/h4&gt;

&lt;p&gt;Many people think eslint &amp;amp; prettier work same but there is a huge difference. Prettier is a code formatter. In the below case, you can see that the code, &lt;em&gt;before prettier&lt;/em&gt;, is pretty messy and very hard to read as compared to &lt;em&gt;after prettier&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Before Prettier&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/svg+xml"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"favicon.svg"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Vite App&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/main.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After Prettier&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/svg+xml"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"favicon.svg"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Vite App&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/main.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And, eslint is a linter. As in the case below you can see eslint is giving us an error that 'hello' is declared but its value is never read.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./style.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;WASSUP GUYS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// 'hello' is declared but its value is never read&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see it will make our project free of unused variables or functions which we create but don't use it and forget to remove them.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#setup-eslint-amp-prettier-with-vite"&gt;
  &lt;/a&gt;
  Setup ESLint &amp;amp; Prettier with Vite
&lt;/h4&gt;

&lt;p&gt;We are going to use to vite to create our project if you don't know what vite is then read my previous &lt;a href="https://rahulshaw.hashnode.dev/why-you-should-use-vite"&gt;blog&lt;/a&gt;. To create a vite project open your terminal and navigate to your specific directory and paste the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init @vitejs/app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Give the name of your project and choose vanilla js as it is a tutorial project. And then change your directory to that folder and install all the modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt;your project name&lt;span class="k"&gt;*&lt;/span&gt;
npm &lt;span class="nb"&gt;install
&lt;/span&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, copy the below code and paste it into your terminal. Make sure you are in your project folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-D&lt;/span&gt; eslint prettier eslint-config-prettier
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After downloading it you can see in the package.json file all your dependencies. Install eslint and prettier extensions from vs code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vite"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vite build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"serve"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vite preview"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^7.29.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint-config-prettier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^8.3.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"prettier"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.3.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"vite"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.3.8"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that run &lt;code&gt;npx eslint --init&lt;/code&gt; on the terminal. And follow the following steps.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;How would you like to use ESLint? · To check syntax and find problems 
√ What &lt;span class="nb"&gt;type &lt;/span&gt;of modules does your project use? · JavaScript modules &lt;span class="o"&gt;(&lt;/span&gt;import/export&lt;span class="o"&gt;)&lt;/span&gt;
√ Which framework does your project use? · none
√ Does your project use TypeScript? · No
√ Where does your code run? · browser
√ What format &lt;span class="k"&gt;do &lt;/span&gt;you want your config file to be &lt;span class="k"&gt;in&lt;/span&gt;? · JavaScript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you will notice that a .eslintrc.js file has been created in your project directory. Open it and add &lt;strong&gt;&lt;em&gt;prettier&lt;/em&gt;&lt;/strong&gt; in the extends property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// eslint-disable-next-line no-undef&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;es2021&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;extends&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;eslint:recommended&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prettier&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;parserOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;ecmaVersion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;sourceType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that create a &lt;code&gt;.prettierrc&lt;/code&gt; file in your project directory and for testing, we will add these two rules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;semi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;singleQuote&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are lots of rules that you can add in your prettier file as well as in eslint check out the documentation for it. After that when you try to add a double quote in your javascript file it will automatically change to a single quote.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./style.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;WASSUP GUYS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  CONCLUSION
&lt;/h3&gt;

&lt;p&gt;So, we talked about how to set up eslint and prettier in vs code without getting any errors. If you have any problem please write in the comment section. If you think I missed something then feel free to comment. If I made a mistake comment and I will fix it as soon as possible.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Cross-device testing of web applications with Blisk</title>
      <author>Blisk.io</author>
      <pubDate>Fri, 02 Jul 2021 10:43:05 +0000</pubDate>
      <link>https://dev.to/bliskio/cross-device-testing-of-web-applications-with-blisk-1l8c</link>
      <guid>https://dev.to/bliskio/cross-device-testing-of-web-applications-with-blisk-1l8c</guid>
      <description>&lt;p&gt;This article will educate you all about &lt;a href="https://blisk.io"&gt;Blisk&lt;/a&gt;. Blisk is a Chromium-based web browser that improves productivity and code quality by providing a wide array of tools for web development and testing. The main feature of this application is that it offers virtual mobiles, tablets, laptops, and desktops for web development and testing purposes.&lt;/p&gt;

&lt;p&gt;Blisk offers two types of licenses: free license with daily limited usage and paid license with unlimited usage. After installing Blisk you get two weeks of free unlimited testing.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/570241605" width="710" height="399"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Preconditions:&lt;/strong&gt;&lt;br&gt;
In this tutorial, we'll be working with the GeeksforGeeks website as an example. You can use your own website at any stage: localhost/staging/production.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stepbystep-guide"&gt;
  &lt;/a&gt;
  Step-by-step guide:
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#step-1-install-blisk-application"&gt;
  &lt;/a&gt;
  Step 1: Install Blisk application
&lt;/h4&gt;

&lt;p&gt;Blisk is available for Windows, macOS, and Linux (Ubuntu, Debian, Fedora, OpenSUSE). Download Blisk from the official website: &lt;a href="https://blisk.io"&gt;https://blisk.io&lt;/a&gt; and install it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rT4L38JE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pjn9i4eb9lrqulaslhmd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rT4L38JE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pjn9i4eb9lrqulaslhmd.png" alt="Download Blisk"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2-create-a-blisk-account"&gt;
  &lt;/a&gt;
  Step 2: Create a Blisk account
&lt;/h4&gt;

&lt;p&gt;Creating an account is optional but recommended. Blisk account allows using extra features (screenshots and screen recorder, cloud storage) and adds an extra week of the unlimited usage of all features for free.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y0mzbnPb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iezj3bd8ab8872b4lqod.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y0mzbnPb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iezj3bd8ab8872b4lqod.png" alt="Create Blisk account"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-3-open-a-website-that-you-will-work-with"&gt;
  &lt;/a&gt;
  Step 3: Open a website that you will work with
&lt;/h4&gt;

&lt;p&gt;Paste a Url &lt;a href="https://www.geeksforgeeks.org/"&gt;https://www.geeksforgeeks.org/&lt;/a&gt; into the address bar and navigate to this website.&lt;br&gt;
Click the button &lt;em&gt;Toggle Developer Mode&lt;/em&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UKqAt3mI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nne13i9wmu22onk4fcps.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UKqAt3mI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nne13i9wmu22onk4fcps.jpg" alt="Toggle Developer Mode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-4-select-the-devices"&gt;
  &lt;/a&gt;
  Step 4: Select the devices
&lt;/h4&gt;

&lt;p&gt;Blisk launches &lt;em&gt;Device Manager&lt;/em&gt; where you can select the devices. You can select different types of devices: mobiles, tablets, laptops, and desktops. In addition, Blisk offers a Chrome-like view that represents a regular web view, just like any tab in your browser. Depending on your needs, you can mix different devices to use them simultaneously. &lt;/p&gt;

&lt;p&gt;In this tutorial, we will select &lt;em&gt;iPhone 12 Mini&lt;/em&gt; and &lt;em&gt;Chrome-like view&lt;/em&gt; to check how GeekforGeeks works in regular browsers compared to mobile. Click the button Launch Devices when your device set is ready.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--maMErrX7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/696u457ayytqg4q1jp04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--maMErrX7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/696u457ayytqg4q1jp04.png" alt="Device Manager"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-5-browse-in-developer-mode"&gt;
  &lt;/a&gt;
  Step 5: Browse in Developer Mode
&lt;/h4&gt;

&lt;p&gt;Blisk launches the device set with previously selected devices and now we can perform checks on mobile and desktop simultaneously. Let's scroll down and browse across the GeekforGeeks website. You will notice that scrolls are synced from mobile to desktop which helps to browse faster and compare two views visually.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yPioiYR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f49b7unllhtf7263ed5u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yPioiYR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f49b7unllhtf7263ed5u.jpg" alt="Using Developer Mode"&gt;&lt;/a&gt;&lt;br&gt;
Next, let's open any article to check how it behaves. When navigating to any Url, you will notice that the device and desktop follow each other by Url.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-6-perform-checks"&gt;
  &lt;/a&gt;
  Step 6: Perform checks
&lt;/h4&gt;

&lt;p&gt;Now, you can check whatever you need. In addition, you can: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Test portrait vs landscape orientation.&lt;/li&gt;
&lt;li&gt;Check Javascript errors that appear in each device.&lt;/li&gt;
&lt;li&gt;Simulate slow connection.&lt;/li&gt;
&lt;li&gt;Use DevTools for each device independently.&lt;/li&gt;
&lt;li&gt;Switch to another device.&lt;/li&gt;
&lt;li&gt;Check dark theme.&lt;/li&gt;
&lt;li&gt;Take screenshots of issues.&lt;/li&gt;
&lt;li&gt;Record a video with the steps to reproduce the issue.&lt;/li&gt;
&lt;li&gt;Save screenshots and videos to the cloud storage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final words
&lt;/h3&gt;

&lt;p&gt;The application was created for web developers and QA engineers. You can use Blisk in your daily work to create web applications and test them across multiple devices simultaneously to speed up your productivity and deliver high-quality products to your customers faster than before.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>css</category>
    </item>
    <item>
      <title>Tests und Online-Quiz erstellen mit der iSpring Suite</title>
      <author>filippolofsson</author>
      <pubDate>Fri, 02 Jul 2021 10:12:33 +0000</pubDate>
      <link>https://dev.to/filippolofsson/tests-und-online-quiz-erstellen-mit-der-ispring-suite-4n2k</link>
      <guid>https://dev.to/filippolofsson/tests-und-online-quiz-erstellen-mit-der-ispring-suite-4n2k</guid>
      <description>&lt;p&gt;Interaktive Quiz und Tests mit individuellem Design erstellen. Limits setzen, veröffentlichen und den Fortschritt verfolgen - ohne spezielles Vorwissen.&lt;/p&gt;

&lt;p&gt;Mehr erfahren &amp;gt; &lt;a href="https://www.ispringlearn.de/ispring-suite/quiz"&gt;https://www.ispringlearn.de/ispring-suite/quiz&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Looking for a CSS framework ?</title>
      <author>Tronic247</author>
      <pubDate>Fri, 02 Jul 2021 10:09:34 +0000</pubDate>
      <link>https://dev.to/tronic247/looking-for-a-css-framework-2dfl</link>
      <guid>https://dev.to/tronic247/looking-for-a-css-framework-2dfl</guid>
      <description>&lt;p&gt;Do you need a material design framework ? then look no further :D &lt;strong&gt;Tronic247 Material&lt;/strong&gt; Is the framework for you. See it Here&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#website"&gt;
  &lt;/a&gt;
  Website
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.tronic247.com/material/"&gt;https://www.tronic247.com/material/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github-dont-forget-to-star"&gt;
  &lt;/a&gt;
  Github (Don't forget to star)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/Tronic247/material"&gt;https://github.com/Tronic247/material&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>jquery</category>
      <category>framework</category>
      <category>material</category>
    </item>
    <item>
      <title>Wie man ein virtuelles Klassenzimmer einrichtet: eine Anleitung mit Tipps</title>
      <author>filippolofsson</author>
      <pubDate>Fri, 02 Jul 2021 10:05:07 +0000</pubDate>
      <link>https://dev.to/filippolofsson/wie-man-ein-virtuelles-klassenzimmer-einrichtet-eine-anleitung-mit-tipps-5dl8</link>
      <guid>https://dev.to/filippolofsson/wie-man-ein-virtuelles-klassenzimmer-einrichtet-eine-anleitung-mit-tipps-5dl8</guid>
      <description>&lt;p&gt;In diesem Artikel werden wir darüber sprechen, wie man virtuelle Klassenzimmer erstellt. Nein, nicht wie man “virtuell stilvoll” ist (ja, das Konzept existiert), sondern wie man am besten ein virtuelles Klassenzimmer einrichtet und virtuellen Unterricht hält. Das „Wie“ und „Warum“. Das A und O. Lesen Sie weiter und wir finden gemeinsam heraus, wie es funktioniert. &lt;/p&gt;

&lt;p&gt;Dieser Beitrag basiert auf einem von iSpring veranstalteten Webinar mit der Gastrednerin Cindy Huggett. Sie ist eine der „virtuellen“ Königinnen des E-Learnings, da sie seit fast zwei Jahrzehnten Tausende von Unternehmen, Pädagogen und Lernenden online hilft. Ja, genau. Wir wissen es. Das klingt wie eine Ewigkeit. Und da IT-Jahre so ähnlich wie ‚Hundejahre‘ sind, ist das wahrscheinlich ziemlich nahe an der Unendlichkeit.&lt;/p&gt;

&lt;p&gt;Was ist ein virtuelles Klassenzimmer?&lt;br&gt;
Aber bevor unser Kurs beginnt, lassen Sie uns eine virtuelle Schulung so definieren, wie es Frau Huggett tut. In ihren Worten ist sie:&lt;/p&gt;

&lt;p&gt;„Ein hochgradig interaktiver, von einem Moderator geleiteter Online-Kurs mit definierten Lernzielen, mit Teilnehmern, die von geografisch verstreuten Standorten aus individuell verbunden sind, unter Verwendung einer webbasierten Unterrichtsplattform.“&lt;/p&gt;

&lt;p&gt;Und genau das geschieht in einem virtuellen Klassenzimmer – oder soll dort geschehen. Wie viele schon festgestellt haben, ist der Übergang zu einem virtuellen Klassenzimmer nicht einfach eine Sache des Schließens einer Tür und des Umlegens eines Schalters. Obwohl wir alle mit der Verwendung von Computern und VOIP-Telefon- und Videoanrufen vertraut sind, ist die Dynamik einfach nicht dieselbe wie in einem physischen Klassenzimmer. Und es geht nicht darum, dass das eine „besser“ ist als das andere, da beide Vor- und Nachteile haben, sondern darum, dass sie (sehr) unterschiedlich sind.&lt;/p&gt;

&lt;p&gt;Mehr lesen &amp;gt; &lt;a href="https://www.ispringlearn.de/blog/virtuelles-klassenzimmer"&gt;https://www.ispringlearn.de/blog/virtuelles-klassenzimmer&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>DON’T PANIC! Averting the DDOS crisis in under 5 minutes with Cloudflare</title>
      <author>Maxence</author>
      <pubDate>Fri, 02 Jul 2021 09:42:22 +0000</pubDate>
      <link>https://dev.to/monisnap/don-t-panic-averting-the-ddos-crisis-in-under-5-minutes-with-cloudflare-10lh</link>
      <guid>https://dev.to/monisnap/don-t-panic-averting-the-ddos-crisis-in-under-5-minutes-with-cloudflare-10lh</guid>
      <description>&lt;p&gt;As your business gains traction, your success will inevitably bring its share of malicious actors who will try everything to breach your systems and considerably slow down your operations.&lt;/p&gt;

&lt;p&gt;One such threat are distributed denial-of-service (DDOS) attacks whereby the perpetrator floods a server with high network traffic loads coming from multiple sources, effectively disrupting the service and preventing legitimate users from accessing it.&lt;/p&gt;

&lt;p&gt;Startups and SMEs are particularly exposed because they seldom have the resources to prepare for the unexpected and the impact of something seen as unlikely is often underestimated if not completely overlooked.&lt;/p&gt;

&lt;p&gt;This guide will help you mitigate the risk in no time with a hassle-free, fully-managed and affordable solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#meet-cloudflare"&gt;
  &lt;/a&gt;
  Meet Cloudflare
&lt;/h2&gt;

&lt;p&gt;Security can be tricky and requires extreme meticulousness. A system is only as strong as its weakest component, and the slightest negligence can lead to disastrous consequences.&lt;/p&gt;

&lt;p&gt;Going managed can be a sensible choice if you are not positive you can handle security on your own. It ensures your infrastructure security is kept to the highest quality standards as new threats keep emerging.&lt;/p&gt;

&lt;p&gt;Cloudflare offers a battle-tested DDOS protection service &lt;a href="https://www.cloudflare.com/case-studies/"&gt;trusted by major companies throughout the world&lt;/a&gt;. The set-up can be done in a jiffy and their &lt;a href="https://www.cloudflare.com/plans/"&gt;pricing plans&lt;/a&gt; start with a free tier.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h2&gt;

&lt;p&gt;Cloudflare acts as a gatekeeper between your server and the end-user trying to access it. It analyzes incoming requests and validates them against well-known threats and other inferences it has made over time from its experience of dealing with vast amounts of traffic worldwide.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m9DTGxvI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sf1bdwo2dxr3hf5diay2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m9DTGxvI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sf1bdwo2dxr3hf5diay2.png" alt="How Cloudflare works"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can choose how to deal with suspicious traffic, for example by presenting the user with a CAPTCHA or by blocking requests that match certain characteristics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-cloudflare"&gt;
  &lt;/a&gt;
  Setting up Cloudflare
&lt;/h2&gt;

&lt;p&gt;When configured properly, transitioning to Cloudflare can be done without any downtime. Please make sure to understand every step perfectly and prepare a contingency plan before proceeding.&lt;/p&gt;

&lt;p&gt;You will need to have editor access to your Domain Name Server (DNS), typically found on your registrar’s dashboard. You may determine your registrar via &lt;a href="https://lookup.icann.org/"&gt;WHOIS&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Create a &lt;a href="https://dash.cloudflare.com/sign-up"&gt;Cloudflare account&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once on the dashboard, proceed to &lt;strong&gt;adding your domain&lt;/strong&gt; by clicking on “Add a Site”.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Select the plan&lt;/strong&gt; that you deem best fit to your needs. DDOS protection is included in the free plan. &lt;a href="https://www.cloudflare.com/plans/"&gt;Other plans&lt;/a&gt; typically feature additional optimizations (caching, image compression etc) and more responsive support.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;List your DNS records&lt;/strong&gt; (in layman’s terms, instructions about how to handle requests passing through your domain). Clouflare will automatically try to scan your current configuration. However, please make sure that it matches the configuration you see on your DNS. Add missing records manually if needed. At this point the cloud icons should be greyed out, meaning Cloudflare is not yet proxying the traffic. You may skip the next screen about changing your nameserver for now; we’ll get back to it later.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---WevvJjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8njo30jt7ehymjw4xsjh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---WevvJjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8njo30jt7ehymjw4xsjh.png" alt="Listing DNS records"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IMPORTANT - Before moving on to the next steps, make sure to &lt;strong&gt;whitelist IP addresses&lt;/strong&gt; necessary for the proper functioning of your service (typically those of other microservices or partners it needs to communicate with). Failing to do so might disrupt your services. To do so, head over to the “Firewall &amp;gt; Tools” section and add the set of IP addresses to allow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7_85wFkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/on1n0j7opmz0a5hlx5hg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7_85wFkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/on1n0j7opmz0a5hlx5hg.png" alt="Whitelisting IP addresses"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now you’ll need to &lt;strong&gt;configure your DNS to point to the Cloudflare servers&lt;/strong&gt;. This step might vary depending on your registrar (or DNS provider), but the interface should look similar. For example on Namecheap, you will need to switch to “Custom DNS” and replace the existing nameservers with Cloudflare’s.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YsBAw3QV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xt8y6rurv4ac7br887p6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YsBAw3QV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xt8y6rurv4ac7br887p6.png" alt="Configuring a custom DNS on Namecheap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare’s nameservers you should be pointed at can be found in the “Overview” section (the values may differ from the ones in the screenshot).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dl00siNG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/83f1r8stzqgt1x9wbpqo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dl00siNG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/83f1r8stzqgt1x9wbpqo.png" alt="Find Cloudflare's nameservers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The new DNS configuration takes some time to propagate (from a few minutes up to a couple of hours depending on your registrar).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;At this point you’re ready to activate Cloudflare. Until now, traffic was rerouted directly onto your servers without any filtering. Turning on Cloudflare’s proxy on the DNS records you listed in step 4 will effectively activate the protection. This is the step where it all comes together. &lt;strong&gt;Make sure everything is correct&lt;/strong&gt; for the umpteenth time before proceeding. Once you are confident, head over to the “DNS” section and &lt;strong&gt;turn on the proxy on all the records&lt;/strong&gt;. Cloud icons should now appear orange, meaning the DNS record is properly proxied by Cloudflare. If anything were to go wrong at this stage, immediately turn off the proxy on every DNS record.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e5jtlDfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2irx2g2w00sflncnxgye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e5jtlDfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2irx2g2w00sflncnxgye.png" alt="Turning on Cloudflare's proxy"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You are almost done. Until now, your server’s IP address was directly exposed to the public. Cloudflare adds a new layer on top of your server and obfuscates its IP address to new users. However the original IP address is still accessible, and Cloudflare cannot do anything to protect you from direct-access attacks. A good strategy is to &lt;strong&gt;configure your server to only accept requests forwarded by Cloudflare&lt;/strong&gt;. Additionally you might want to allocate a new IP address to your server for good measure.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Congratulations! You made it through and &lt;strong&gt;your server is now protected against DDOS attacks&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Please let me know if you run into any problems or if you’re interested in diving deeper into the subject. Cloudflare offers many more features you might be interested in such as caching and compression which can improve performance and eventually save money.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>SvelteKit release date?</title>
      <author>kvetoslavnovak</author>
      <pubDate>Fri, 02 Jul 2021 09:13:39 +0000</pubDate>
      <link>https://dev.to/kvetoslavnovak/sveltekit-release-date-406f</link>
      <guid>https://dev.to/kvetoslavnovak/sveltekit-release-date-406f</guid>
      <description>&lt;p&gt;Stuff to nail down before launch &lt;a href="https://github.com/sveltejs/kit/milestone/2"&gt;https://github.com/sveltejs/kit/milestone/2&lt;/a&gt;&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>github</category>
      <category>sveltekit</category>
    </item>
  </channel>
</rss>
