<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Moving From Tailwind To Vanilla-er CSS</title>
      <author>Mike Rogers ✈️</author>
      <pubDate>Wed, 12 May 2021 18:24:48 +0000</pubDate>
      <link>https://dev.to/mikerogers0/moving-from-tailwind-to-vanilla-er-css-2ghh</link>
      <guid>https://dev.to/mikerogers0/moving-from-tailwind-to-vanilla-er-css-2ghh</guid>
      <description>&lt;p&gt;I've been playing around with Tailwind CSS a lot since it's release, and so far it's been really impressive to see its growth over the last few years, along with some of the neat things people are making with it.&lt;/p&gt;

&lt;p&gt;Overall I've been pretty happy with it, I even purchased a licence for &lt;a href="https://tailwindui.com/"&gt;Tailwind UI&lt;/a&gt; to help me develop with it more quickly. However, sometimes I find myself a little frustrated at it, so I decided it would be fun to rebuild the frontend on my &lt;a href="https://ruby-meetup-calendar.mikerogers.io/"&gt;Ruby Calendar project&lt;/a&gt; to see if I can pinpoint my annoyances.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-love-about-tailwind-css"&gt;
  &lt;/a&gt;
  What I love about Tailwind CSS
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The documentation! Seriously Adam Wathan done a fantastic job with it. Often when I just want to check how to do something in plain CSS, I use their documentation as a reference point.&lt;/li&gt;
&lt;li&gt;Responsive utility variants are very cool. Being able to apply a CSS class to just big screens by using &lt;code&gt;lg:&lt;/code&gt; before my class names is super lovely!&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;@apply&lt;/code&gt; within my regular CSS. It feels like such a concise way to write CSS, I'm a big fan of it.&lt;/li&gt;
&lt;li&gt;Less context switching between CSS &amp;amp; HTML files. I didn't realise how much cognitive load I had from jumping between different file types all day. Being able to just look at a single file for everything I was working on helped me get into that awesome "hyper focus" zone a lot more easily.&lt;/li&gt;
&lt;li&gt;The examples I can copy &amp;amp; paste (which look the same in my project), is a massive time saver. It feels like I can very quickly cobble together a frontend MVP for a project without too much effort.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-i-dont-love"&gt;
  &lt;/a&gt;
  What I don't love
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Preflight. I always find it's super aggressive, this is probably because I come from a background where I've used &lt;a href="https://necolas.github.io/normalize.css/"&gt;normalize.css&lt;/a&gt; a lot. Having to setup base styling for semantic HTML feels tedious.&lt;/li&gt;
&lt;li&gt;JavaScript Dependencies. I had a project on Tailwind V1 which used React, which I upgraded to V2. Unfortunately I had an out of date library which made upgrading harder then I expected. In the end, I was deep in JavaScript code trying to figure out why my CSS wasn't working. It made me feel super unproductive.&lt;/li&gt;
&lt;li&gt;Other developers use it inconsistently. I've picked up a few projects using Tailwind, and it takes a lot time to feel "at home" in the codebase. In one project, I felt like the other developer just used every class everywhere, which made it very hard to achieve that "Happy Developer" moment.&lt;/li&gt;
&lt;li&gt;CSS Purging. I've been caught out in the past by setting up the purging, then moving a few files around to only discover I quietly broken a few pages in production. I think better CI tooling could solve this, but I'm also feeling I'd rather avoid the risk to start with.&lt;/li&gt;
&lt;li&gt;Staying visually consistent. I'm the worst for using all the sizing &amp;amp; colour variants available to me, I need a limitations to avoid making an inconsistent monster.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#replacing-it-with-vanillaer-css"&gt;
  &lt;/a&gt;
  Replacing it with vanilla-er CSS
&lt;/h2&gt;

&lt;p&gt;My plan was to remove Tailwind over a weekend, using a mix of &lt;code&gt;normalize.css&lt;/code&gt;, CSS Variables &amp;amp; mixins, all combined into a single CSS file using PostCSS.&lt;/p&gt;

&lt;p&gt;I had already started converting my CSS to follow the &lt;a href="https://en.bem.info/"&gt;BEM approach&lt;/a&gt; using &lt;code&gt;@apply&lt;/code&gt;, so I was able to take my purged CSS &amp;amp; break it into smaller files. I then went through and moved all the things like spacing, fonts &amp;amp; colours I was using into CSS Variables.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-vanillaer-css"&gt;
  &lt;/a&gt;
  Why vanilla-er CSS?
&lt;/h3&gt;

&lt;p&gt;I wanted to be as close to simple vanilla CSS as possible, the reason is I worked on a project which hadn't had the styling touched in about 5 years, and then when I edited the &lt;code&gt;styles.css&lt;/code&gt; file...it just changed what I expected it  to. It was a really interesting "Oh? Would you look at that!" type experience.&lt;/p&gt;

&lt;p&gt;Obviously, I do like a few low touch tools to help reduce duplication. But I do want to aim for a codebase where in 5 years time, it'll be easy to pickup. I think the best way to do that is by keeping things as simple as possible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#naming-css-variables"&gt;
  &lt;/a&gt;
  Naming CSS Variables
&lt;/h3&gt;

&lt;p&gt;Naming was pretty hard! For my fonts &amp;amp; spacing, I ended up copying the approach of using numbered a scale which is often used in Tailwind.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* variables/fonts.css */&lt;/span&gt;

&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--fonts-serif&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ui-sans-serif&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;system-ui&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;-apple-system&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlinkMacSystemFont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;'Segoe UI'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Roboto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'Helvetica Neue'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'Noto Sans'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;'Apple Color Emoji'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'Segoe UI Emoji'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'Segoe UI Symbol'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'Noto Color Emoji'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="py"&gt;--font-size-1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--font-size-2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.875rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--font-size-3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--font-size-4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.125rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--font-size-5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--font-size-6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--font-size-7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.875rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* variables/spacing.css */&lt;/span&gt;

&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--spacing-1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--spacing-2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--spacing-3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--spacing-4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--spacing-5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--spacing-6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#naming-colours"&gt;
  &lt;/a&gt;
  Naming Colours
&lt;/h4&gt;

&lt;p&gt;Naming the colours was a tad harder. I've never been a fan of calling a variable "blue", then making it the colour blue. The reason is often in the future that "blue" may end up not being blue, which makes things messy.&lt;/p&gt;

&lt;p&gt;Instead I copied the approach of &lt;a href="https://getbootstrap.com/docs/5.0/customize/color/"&gt;Bootstrap&lt;/a&gt; of having "Primary", "Secondary" &amp;amp; "Tertiary" colours, however I explicitly named the variables to hint that the colour is intended to be used as a background or text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* variables/colours.css */&lt;/span&gt;

&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--background-primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3c2aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--background-secondary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#1d2938&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--background-secondary-lightest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3f4a5b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--background-secondary-light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#232c39&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--background-secondary-dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#0f192c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--background-tertiary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#d0d5dc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--background-tertiary-light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="py"&gt;--text-primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f9fafb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--text-primary-darker&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#a1a1ab&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="py"&gt;--link-primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#c5d1ff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="py"&gt;--border-primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#273241&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I did also add &lt;code&gt;*-light&lt;/code&gt; &amp;amp; &lt;code&gt;*-dark&lt;/code&gt; variations of these colours (For use within hovers &amp;amp; whatnot), though I do want to come back and improve the suffixes I chose.&lt;/p&gt;

&lt;p&gt;Ideally I want to achieve variable names which make other developers say out loud "This is so obvious, I know exactly what this is for". If anyone has any ideas please let me know :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#media-queries"&gt;
  &lt;/a&gt;
  Media Queries
&lt;/h3&gt;

&lt;p&gt;I wanted a way to pre-define the common screen sizes I'd use when building out my responsive designs.&lt;/p&gt;

&lt;p&gt;To solve this I used &lt;a href="https://github.com/csstools/postcss-preset-env#postcss-preset-env-"&gt;postcss-preset-env&lt;/a&gt;, which allowed me to define a "custom-media" with the name &lt;code&gt;--viewport-lg&lt;/code&gt; and the value &lt;code&gt;(min-width: 1024px)&lt;/code&gt;. As &lt;code&gt;postcss-preset-env&lt;/code&gt; also supported nested CSS this allowed for some pretty readable CSS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* components/footer.css */&lt;/span&gt;

&lt;span class="nc"&gt;.footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;spacing-4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;padding-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;spacing-6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;viewport-lg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="na"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;minmax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1fr&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#mixins"&gt;
  &lt;/a&gt;
  Mixins
&lt;/h3&gt;

&lt;p&gt;Pretty soon I did feel like I was duplicating CSS &amp;amp; mixing utility classes with my semantically named classes within my HTML.&lt;/p&gt;

&lt;p&gt;However, I found the solution was to use mixins via &lt;a href="https://github.com/postcss/postcss-mixins"&gt;postcss-mixins&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* mixins/list-inline.css */&lt;/span&gt;

&lt;span class="k"&gt;@define-mixin&lt;/span&gt; &lt;span class="nt"&gt;list-inline&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;list-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;spacing-2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;spacing-2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;spacing-2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* components/navbar.css */&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * @markup
 *  &amp;lt;ul class="navbar__links"&amp;gt;
 *    &amp;lt;li&amp;gt;&amp;lt;a href="/groups"&amp;gt;All Groups&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 *    &amp;lt;li&amp;gt;&amp;lt;a href="/add-event"&amp;gt;Add Event&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 *  &amp;lt;/ul&amp;gt;
 */&lt;/span&gt;
&lt;span class="nc"&gt;.navbar__links&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="nf"&gt;list-inline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;viewport-md&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This allowed me to have semantic looking class names which included common CSS snippets, while being able to override things as required. It also gave me the potential to &lt;a href="https://css-tricks.com/options-programmatically-documenting-css/"&gt;programmatically generate a styleguide&lt;/a&gt; from the comments within my CSS file, which I'm wildly excited about.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#easier-importing"&gt;
  &lt;/a&gt;
  Easier Importing
&lt;/h3&gt;

&lt;p&gt;As my project grew, I found I could glob import files via &lt;a href="https://github.com/dimitrinicolas/postcss-import-ext-glob"&gt;postcss-import-ext-glob&lt;/a&gt;, which made my &lt;code&gt;index.css&lt;/code&gt; file much more maintainable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* index.css */&lt;/span&gt;

&lt;span class="k"&gt;@import-glob&lt;/span&gt; &lt;span class="s1"&gt;"variables/*.css"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;/* External Libraries imported from node_modules */&lt;/span&gt;
&lt;span class="k"&gt;@import-glob&lt;/span&gt; &lt;span class="s2"&gt;'normalize.css'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@import-glob&lt;/span&gt; &lt;span class="s1"&gt;"base/*.css"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import-glob&lt;/span&gt; &lt;span class="s1"&gt;"components/*.css"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import-glob&lt;/span&gt; &lt;span class="s1"&gt;"utilities/*.css"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;Overall, I'm very happy with this CSS &amp;amp; HTML approach. I can look at a snippet of HTML, see the CSS classes being used &amp;amp; know exactly which files I need to edit to change them. I feel very in control of the CSS I'm writing as a result of that.&lt;/p&gt;

&lt;p&gt;While reviewing my new HTML &amp;amp; CSS, I really like that I'm not staring at a wall of CSS class names any more. Plus if I wanted to make any changes to the colours, spacing or fonts, I feel confident that I won't need to change lots of files to see the desired visual change. Instead I can open the &lt;code&gt;variables/&lt;/code&gt; folder, then the appropriately named file &amp;amp; edit just a few lines of CSS.&lt;/p&gt;

&lt;p&gt;I also found the final size of the generated CSS was about the same as before, so I'm very happy with that.&lt;/p&gt;

&lt;p&gt;I did come to appreciate how much time Tailwind had saved me while I was prototyping my design (and how it made me think more in a component mindset), but I think it's also a very sharp tool which requires a lot of discipline to use effectively on projects.&lt;/p&gt;

&lt;p&gt;Finally, I think I'd still be happy to work on a Tailwind based project. However, I totally feel a bit more confident in saying "We could just use CSS Variables &amp;amp; Mixins instead if we wanted".&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Publicando Aplicações Estáticas com Static Web Apps &amp; Azure DevOps!</title>
      <author>Glaucia Lemos</author>
      <pubDate>Wed, 12 May 2021 18:10:42 +0000</pubDate>
      <link>https://dev.to/glaucia86/publicando-aplicacoes-estaticas-com-static-web-apps-azure-devops-4c1o</link>
      <guid>https://dev.to/glaucia86/publicando-aplicacoes-estaticas-com-static-web-apps-azure-devops-4c1o</guid>
      <description>&lt;p&gt;Fala Coders! Hoje vamos falar do lançamento de um serviço do Azure que estava em Preview e enfim, será um &lt;strong&gt;&lt;a href="https://azure.microsoft.com/blog/announcing-azure-portal-general-availability/?WT.mc_id=javascript-23665-gllemos"&gt;General Available&lt;/a&gt;&lt;/strong&gt; do Serviço &lt;strong&gt;&lt;a href="https://azure.microsoft.com/services/app-service/static/?WT.mc_id=javascript-23665-gllemos"&gt;Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt; agora no dia 12/05/2021!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Se vocês desejarem saber um pouco mais sobre o lançamento oficial do Azure Static Web Apps que está acontecendo hoje (12/05/2021), há um blog oficial explicando o que vem de diferente da versão Preview para General Available &lt;strong&gt;&lt;a href="https://azure.microsoft.com/blog/develop-production-scale-modern-web-apps-quickly-with-azure-static-web-apps/?WT.mc_id=javascript-23665-gllemos"&gt;AQUI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;E, vamos ter inúmeras mudanças significativas nesse serviço, que estava na sua versão Preview!&lt;/p&gt;

&lt;p&gt;Mas, vamos tentar relembrar a todos(as) vocês sobre esse serviço?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#o-que-veremos-nesse-artigo"&gt;
  &lt;/a&gt;
  O que veremos nesse Artigo?!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#o-que-%C3%A9-azure-static-web-apps"&gt; O que é Azure Static Web Apps?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#o-que-vamos-fazer"&gt; O que vamos fazer?!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#demo-time"&gt; Demo Time!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#conta-azure-for-students-%EF%B8%8F"&gt; Conta - Azure for Students ⭐️&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#usando-o-azure-devops"&gt; Usando o Azure DevOps!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#passo-01-criar-um-projeto-no-azure-devops"&gt; Passo 01 - Criando um projeto no Azure DevOps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#passo-02-importando-o-projeto-no-github-para-o-azure-devops"&gt; Passo 02 - Importando o projeto no GitHub para o Azure DevOps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#passo-03-criando-a-aplica%C3%A7%C3%A3o-est%C3%A1tica-no-azure"&gt; Passo 03 - Criando a Aplicação Estática no Azure&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#passo-04-criando-os-pipelines-task-no-azure-devops-para-a-nossa-aplica%C3%A7%C3%A3o-est%C3%A1tica"&gt; Passo 04 - Criando os Pipelines Task no Azure DevOps para a nossa Aplicação Estática!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#passo-05-retornando-ao-portal-azure"&gt; Passo 05 - Retornando ao Portal Azure&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#recursos-amp-links-importantes"&gt; Recursos &amp;amp; Links Importantes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#palavras-finais"&gt; Palavras Finais&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#generated-with-summaryze-forem"&gt;
  &lt;/a&gt;
  generated with &lt;a href="https://summaryze-forem.vercel.app/"&gt;Summaryze Forem 🌱&lt;/a&gt;
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-azure-static-web-apps"&gt;
  &lt;/a&gt;
  O que é Azure Static Web Apps?
&lt;/h2&gt;

&lt;p&gt;O &lt;strong&gt;&lt;a href="https://azure.microsoft.com/services/app-service/static/?WT.mc_id=javascript-23665-gllemos"&gt;Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt; é um serviço que cria e implanta automaticamente aplicações Web completa no Azure desde um repositório de códigos, que nesse caso é usado o &lt;strong&gt;&lt;a href="https://docs.github.com/pt/actions"&gt;GitHub Actions&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/3yJRFVTz"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4DH5txVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/9fy7CHNX/swa-overview.png" alt="swa-overview.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Com esse serviço, te permite realizar deploy automático, de maneira rápida, fácil e totalmente gratuita usando quaisquer bibliotecas ou frameworks mais conhecidos do mercado, tais como: &lt;strong&gt;&lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://pt-br.reactjs.org/"&gt;React&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;&lt;/strong&gt; ou até mesmo usando o &lt;strong&gt;&lt;a href="https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor?WT.mc_id=javascript-23665-gllemos"&gt;Blazor&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Já no lado do Back-End, você pode integrar a sua aplicação estática usando o &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/azure-functions/functions-overview?WT.mc_id=javascript-23665-gllemos"&gt;Azure Functions&lt;/a&gt;&lt;/strong&gt;, que te permitirá criar uma API de uma maneira muito mais rápida, dinâmica, resiliente e escalonável!&lt;/p&gt;

&lt;p&gt;Se, vocês desejarem, temos inúmeros treinamentos de Azure Static Web Apps totalmente gratuitos na plataforma &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/?WT.mc_id=javascript-23665-gllemos"&gt;Microsoft Learn&lt;/a&gt;&lt;/strong&gt;! Para listar alguns aqui...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/paths/azure-static-web-apps/?WT.mc_id=javascript-23665-gllemos"&gt;Cursos Grátis - Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/paths/azure-static-web-apps/?WT.mc_id=javascript-23665-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zWP9_mD4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/3wgQBtWb/Captura-de-Tela-2021-05-07-a-s-22-52-58.png" alt="Captura-de-Tela-2021-05-07-a-s-22-52-58.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-app-service-static-web-app-api/?WT.mc_id=javascript-23665-gllemos"&gt;Publicando uma Aplicação JavaScript em Angular, React, Svelte ou Vue com o Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-app-service-static-web-app-api/?WT.mc_id=javascript-23665-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mjLBwteY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Bb4yM3Rj/Captura-de-Tela-2021-05-07-a-s-22-38-46.png" alt="Captura-de-Tela-2021-05-07-a-s-22-38-46.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-app-service-static-web-app-api-dotnet/?WT.mc_id=javascript-23665-gllemos"&gt;Publicando uma Aplicação WebAssembly Blazor e uma API do .NET com Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-app-service-static-web-app-api-dotnet/?WT.mc_id=javascript-23665-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qtGlPMca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/pTZkVF1d/Captura-de-Tela-2021-05-07-a-s-22-42-42.png" alt="Captura-de-Tela-2021-05-07-a-s-22-42-42.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/modules/create-deploy-static-webapp-gatsby-app-service/?WT.mc_id=javascript-23665-gllemos"&gt;Criando e Publicando uma Aplicação Web Estática com o Gatsby com Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/modules/create-deploy-static-webapp-gatsby-app-service/?WT.mc_id=javascript-23665-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SrXYubyA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/05hZkPVD/Captura-de-Tela-2021-05-07-a-s-22-47-37.png" alt="Captura-de-Tela-2021-05-07-a-s-22-47-37.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-static-web-app-api-preview-url/?WT.mc_id=javascript-23665-gllemos"&gt;Publicando uma API no Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-static-web-app-api-preview-url/?WT.mc_id=javascript-23665-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3etnV3AU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Hn1JNZtc/Captura-de-Tela-2021-05-07-a-s-22-51-21.png" alt="Captura-de-Tela-2021-05-07-a-s-22-51-21.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora que vocês já sabem o que é o Azure Static Web Apps, agora é o momento de focarmos no tema principal desse post: 'Como podemos publicar um site estático usando o Azure Static Web Apps integrando com a poderosa ferramenta do &lt;strong&gt;&lt;a href="https://azure.microsoft.com/services/devops/?WT.mc_id=javascript-23665-gllemos"&gt;Azure DevOps&lt;/a&gt;&lt;/strong&gt;? &lt;/p&gt;

&lt;p&gt;Vamos começar a fazer um hands-on com um tutorial? Aqui vamos nós!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#o-que-vamos-fazer"&gt;
  &lt;/a&gt;
  O que vamos fazer?!
&lt;/h2&gt;

&lt;p&gt;Bom, nesse tutorial vamos aprender a fazer uma plublicação de um site estático em Vue.Js usando o Azure Static Web e integrando com o Azure DevOps. Na versão preview isso não era possível (de uma certa forma, não... mas tem gente que conseguiu). Mas, agora com GA do Serviço, isso agora é super possível e é justamente o que estarei ensinando à todas as pessoas aqui!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo-time"&gt;
  &lt;/a&gt;
  Demo Time!
&lt;/h2&gt;

&lt;p&gt;Para essa demo, vamos precisar dos seguintes recursos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://code.visualstudio.com/?WT.mc_id=javascript-23665-gllemos"&gt;Visual Studio Code&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://azure.microsoft.com/free?WT.mc_id=javascript-23665-gllemos"&gt;Conta Azure&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://github.com/"&gt;Conta no GitHub&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#conta-azure-for-students-%EF%B8%8F"&gt;
  &lt;/a&gt;
  Conta - Azure for Students ⭐️
&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;Caso você seja um(a) estudante de alguma Instituição de Ensino de Faculdade ou Universidade, poderá criar sua conta no &lt;strong&gt;&lt;a href="https://azure.microsoft.com/pt-br/free/students/?WT.mc_id=javascript-23665-gllemos"&gt;Azure for Students&lt;/a&gt;&lt;/strong&gt;. Essa conta te dará o benefício em possuir crédito de USD 100,00 para usar os serviços de maneira gratuita, sem necessidade de possuir um cartão de crédito. Para ativar essa conta, bastam acessar o link ao lado: &lt;strong&gt;&lt;a href="https://azure.microsoft.com/pt-br/free/students/?WT.mc_id=javascript-23665-gllemos"&gt;AQUI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para fins de demo, estaremos fazendo uso do recurso do GitHub: &lt;strong&gt;&lt;a href="https://help.github.com/pt/github/creating-cloning-and-archiving-repositories/creating-a-template-repository"&gt;GitHub Templates&lt;/a&gt;&lt;/strong&gt;. Se deseja saber mais como criar um template e entender o que é bastam acessar &lt;strong&gt;&lt;a href="https://help.github.com/pt/github/creating-cloning-and-archiving-repositories/creating-a-repository-from-a-template"&gt;AQUI&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Cliquem nesse link &lt;strong&gt;&lt;a href="https://github.com/staticwebdev/vue-basic/generate"&gt;https://github.com/staticwebdev/vue-basic/generate&lt;/a&gt;&lt;/strong&gt; e logo em seguida crie um nome para esse repositório, conforme segue a imagem abaixo: &lt;strong&gt;(vocês podem escolher o nome que desejarem. Não necessariamente igual o meu.)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/56trBmYj"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O6eopVYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/tCdHHS9d/Captura-de-Tela-2021-05-07-a-s-23-51-03.png" alt="Captura-de-Tela-2021-05-07-a-s-23-51-03.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Logo em seguida clique no botão: &lt;strong&gt;Create Repository from Template&lt;/strong&gt;. Após isso, estará já criada uma aplicação modelo em Vue.js para que possamos testar a nossa aplicação!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usando-o-azure-devops"&gt;
  &lt;/a&gt;
  Usando o Azure DevOps!
&lt;/h2&gt;

&lt;p&gt;Vamos agora começar a fazer a integração da aplicação recém criada no GitHub e usar o &lt;strong&gt;&lt;a href="https://azure.microsoft.com/services/devops/?WT.mc_id=javascript-23665-gllemos"&gt;Azure DevOps&lt;/a&gt;&lt;/strong&gt;. Para isso, entre no link abaixo, para começar a usar o Azure DevOps de maneira gratuita!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://azure.microsoft.com/pricing/details/devops/azure-devops-services/?WT.mc_id=javascript-23665-gllemos"&gt;Criando um Projeto - Azure DevOps&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Escolha as opções gratuitas. No meu caso, estou escolhendo a opção: Plano Básico - Free. Depois de você incluir as suas informações de dados, aparecerá a seguinte imagem abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/2VzGpd4m"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QmSk_hiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ncmPD0rs/Captura-de-Tela-2021-05-08-a-s-00-08-06.png" alt="Captura-de-Tela-2021-05-08-a-s-00-08-06.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vamos no passo a passo a partir de agora!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passo-01-criando-um-projeto-no-azure-devops"&gt;
  &lt;/a&gt;
  Passo 01 - Criando um projeto no Azure DevOps
&lt;/h3&gt;

&lt;p&gt;Crie o projeto e coloque de acordo com a imagem abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/mPj0f2cp"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XKk6jDIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/cJGZ3vdW/Captura-de-Tela-2021-05-08-a-s-00-19-01.png" alt="Captura-de-Tela-2021-05-08-a-s-00-19-01.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Depois que você preencher todas as informações do seu Projeto, clique no botão: &lt;strong&gt;Create a Project&lt;/strong&gt;. Depois de clicar nesse botão, a tela terá a seguinte formato:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/svqJMkkf"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_N-Z9kTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/3xJfc79G/Captura-de-Tela-2021-05-08-a-s-00-23-17.png" alt="Captura-de-Tela-2021-05-08-a-s-00-23-17.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passo-02-importando-o-projeto-no-github-para-o-azure-devops"&gt;
  &lt;/a&gt;
  Passo 02 - Importando o projeto no GitHub para o Azure DevOps
&lt;/h3&gt;

&lt;p&gt;Vamos agora implementar o código (template padrão) da aplicação Vue.js criada recentemente lá no GitHub e integrar no Azure DevOps. Vão em: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Repos&lt;/li&gt;
&lt;li&gt;Files&lt;/li&gt;
&lt;li&gt;Import a Repository&lt;/li&gt;
&lt;li&gt;Import&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Aí abrirá uma nova janela, ali colocaremos, justo o GitClone da nossa aplicação (.git) e depois clicar no botão: &lt;strong&gt;Import&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Se não entenderem como proceder, mais abaixo terá um vídeo desse tutorial que gravei ensinando passo a passo, justo para ajudar todos vocês. E, também uma imagem que também auxiliará vocês nesse passo a passo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/HcYNSGsD"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7XavMhPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/hjTqtgkj/Captura-de-Tela-2021-05-08-a-s-00-25-25.png" alt="Captura-de-Tela-2021-05-08-a-s-00-25-25.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No final, o seu Azure DevOps estará da seguinte forma:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/KkWd4qF6"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rN27Iz8X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SRQqT3Px/Captura-de-Tela-2021-05-08-a-s-00-33-40.png" alt="Captura-de-Tela-2021-05-08-a-s-00-33-40.png"&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Se estiver dessa forma, é porque você integrou com sucesso a sua aplicação Vue.js no Azure DevOps. Agora, vamos dar continuidade!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passo-03-criando-a-aplica%C3%A7%C3%A3o-est%C3%A1tica-no-azure"&gt;
  &lt;/a&gt;
  Passo 03 - Criando a Aplicação Estática no Azure
&lt;/h3&gt;

&lt;p&gt;Nesse passo precisaremos de uma &lt;strong&gt;&lt;a href="https://azure.microsoft.com/free/?WT.mc_id=javascript-23665-gllemos"&gt;Conta Azure&lt;/a&gt;&lt;/strong&gt;, que inclusive vocês podem estar criando de maneira gratuita! Só precisa incluir os dados do seu cartão de crédito para fazer uso dos 12 meses gratuitos dos inúmeros serviços gratuitos disponíveis!&lt;br&gt;
Aqui nesse post já mencionei sobre uma conta &lt;strong&gt;&lt;a href="https://azure.microsoft.com/pt-br/free/students/?WT.mc_id=javascript-23665-gllemos"&gt;Azure for Students&lt;/a&gt;&lt;/strong&gt;, que dão a vocês estudantes, vários benefícios de fazerem uso da Conta Azure de graça sem necessidade de incluir dados de cartão de crédito!&lt;/p&gt;

&lt;p&gt;Depois que criar uma conta no Azure, você deverá acessar o &lt;strong&gt;&lt;a href="https://portal.azure.com/"&gt;Portal Azure&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sigam os seguintes passos:&lt;/p&gt;

&lt;p&gt;1 - Clicar em &lt;strong&gt;Create a Resource&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/PLpbT23p"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Ab3UVHs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/VN4K9hXR/Captura-de-Tela-2021-05-08-a-s-00-43-46.png" alt="Captura-de-Tela-2021-05-08-a-s-00-43-46.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2 - Depois, na parte da busca, digitem: &lt;strong&gt;Static Web Apps&lt;/strong&gt;. E, em seguida cliquem no botão: &lt;strong&gt;Create&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/c6NzknCM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_a85C04E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/v81dB7dj/Captura-de-Tela-2021-05-08-a-s-00-45-45.png" alt="Captura-de-Tela-2021-05-08-a-s-00-45-45.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3 - Preencha todos os dados necessários nessa tela, que são:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Resource Groups&lt;/li&gt;
&lt;li&gt;Static Web Apps Details -&amp;gt; Name (aqui o nome deverá ser único e nunca igual)&lt;/li&gt;
&lt;li&gt;Region: CENTRAL US (vocês podem escolher outras regiões também)&lt;/li&gt;
&lt;li&gt;Deployments Details - Others (escolha essa opção! Pois estaremos usando o Azure DevOps e não o GitHub Actions!)&lt;/li&gt;
&lt;li&gt;E, por último, clicar no botão: &lt;strong&gt;Review + Create -&amp;gt; Create&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/zLCCyVN8"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VLl-vXCL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/8C3tn6nJ/Captura-de-Tela-2021-05-08-a-s-00-48-17.png" alt="Captura-de-Tela-2021-05-08-a-s-00-48-17.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/4KsKFwCR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BeACSjlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/FKJjznDz/Captura-de-Tela-2021-05-08-a-s-00-53-06.png" alt="Captura-de-Tela-2021-05-08-a-s-00-53-06.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Se tudo der certo, aparecerá a seguinte imagem abaixo. Caso sim, bastam clicar em: &lt;strong&gt;Go to resource&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/YGjCJsbZ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1XzXY3UV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/k4vRtr8J/Captura-de-Tela-2021-05-08-a-s-00-58-37.png" alt="Captura-de-Tela-2021-05-08-a-s-00-58-37.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora, vamos fazer algumas modificações importantes. Vá até:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Overview&lt;/li&gt;
&lt;li&gt;Manage Deployment token&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Aparecerá uma nova janela com um token gigantesco. Copie e cole esse token em algum notepad de sua preferência. Pois vamos precisar dele posteriormente! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/4K2Jb1s5"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5fKMg2Mw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Y9Mh7XPJ/Captura-de-Tela-2021-05-08-a-s-01-00-17.png" alt="Captura-de-Tela-2021-05-08-a-s-01-00-17.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/v1Ks6Ht2"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lvwwfQdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SsSN3n24/Captura-de-Tela-2021-05-08-a-s-01-03-18.png" alt="Captura-de-Tela-2021-05-08-a-s-01-03-18.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#passo-04-criando-os-pipelines-task-no-azure-devops-para-a-nossa-aplica%C3%A7%C3%A3o-est%C3%A1tica"&gt;
  &lt;/a&gt;
  Passo 04 - Criando os Pipelines Task no Azure DevOps para a nossa Aplicação Estática!
&lt;/h3&gt;

&lt;p&gt;Agora vamos usar o poder que o serviço do Azure DevOps nos proporciona integrado com o SWA!Retorne ao seu Projeto hospedado no Azure DevOps e vá até o botão: &lt;strong&gt;Set up Build&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/mcBwNQ8t"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s1IpyKi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/wBsGz2Nc/Captura-de-Tela-2021-05-08-a-s-01-07-29.png" alt="Captura-de-Tela-2021-05-08-a-s-01-07-29.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Depois disso, aparecerá uma nova janela. Escolha a opção: &lt;strong&gt;Starter Pipeline&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/s1QpW6sT"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DroW3ybr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Vs443pTP/Captura-de-Tela-2021-05-08-a-s-01-09-42.png" alt="Captura-de-Tela-2021-05-08-a-s-01-09-42.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copiem e colem o YAML abaixo e coloquem no pipeline de vocês:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;

&lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;vmImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

&lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;checkout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;self&lt;/span&gt;
    &lt;span class="na"&gt;submodules&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AzureStaticWebApp@0&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;app_location&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/'&lt;/span&gt;
      &lt;span class="na"&gt;api_location&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;api'&lt;/span&gt;
      &lt;span class="na"&gt;output_location&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;dist'&lt;/span&gt;
    &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;azure_static_web_apps_api_token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$(deployment_token)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Na parte de &lt;strong&gt;output_location&lt;/strong&gt; precisaremos alterar! Pois em Vue.js a pasta de artefato, que é a pasta que gera os arquivos estáticos é a pasta &lt;strong&gt;dist&lt;/strong&gt;. Para diferentes frameworks são nomes de pastas diferentes. Caso queira saber do framework que você esteja usando, temos uma lista dessas pastas &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/front-end-frameworks?WT.mc_id=javascript-23665-gllemos"&gt;AQUI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Agora, vamos incluir aquele token criado lá no Portal Azure. Para isso, vamos usar um recurso bastante interessante no Azure DevOps: &lt;strong&gt;Variables&lt;/strong&gt;.&lt;br&gt;
Vá até:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Variables &lt;/li&gt;
&lt;li&gt;New Variable &lt;/li&gt;
&lt;li&gt;Name (deployment_token) &lt;/li&gt;
&lt;li&gt;Value (o valor do token)&lt;/li&gt;
&lt;li&gt;Clicar no botão: &lt;strong&gt;Ok -&amp;gt; Save&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/rzrfTF0y"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MFA9LdJb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Vs7pjJzt/Captura-de-Tela-2021-05-08-a-s-01-26-28.png" alt="Captura-de-Tela-2021-05-08-a-s-01-26-28.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/nCxGtKfT"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NpwrmAX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/8PJKMwK8/Captura-de-Tela-2021-05-08-a-s-01-28-10.png" alt="Captura-de-Tela-2021-05-08-a-s-01-28-10.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/ygXXJWF0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftDO8TXf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/d1gWxy3N/Captura-de-Tela-2021-05-08-a-s-01-29-32.png" alt="Captura-de-Tela-2021-05-08-a-s-01-29-32.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora que já salvamos o nosso &lt;em&gt;deployment_token&lt;/em&gt; vem o momento mais esperado: executar essa trigger e ver a coisa funcionar! Cliquem no botão: &lt;strong&gt;Save and Run&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/KKttV4pC"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AYez84Rj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/yNbnDZm6/Captura-de-Tela-2021-05-08-a-s-01-32-19.png" alt="Captura-de-Tela-2021-05-08-a-s-01-32-19.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/6ySRpCDD"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pWlOvHbC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/y86TnPnY/Captura-de-Tela-2021-05-08-a-s-01-34-16.png" alt="Captura-de-Tela-2021-05-08-a-s-01-34-16.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feito isso, veremos o Pipeline da nossa aplicação estática sendo executado (job):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/xckJhccg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GB9EJlll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/5NgBHz1c/Captura-de-Tela-2021-05-08-a-s-01-36-22.png" alt="Captura-de-Tela-2021-05-08-a-s-01-36-22.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Se o (job) ou Build da aplicação der os checks todos verdes é porque o build foi executado com sucesso!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/SYYSTYDM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOUx0Nx4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SRDnKW9D/Captura-de-Tela-2021-05-08-a-s-01-39-04.png" alt="Captura-de-Tela-2021-05-08-a-s-01-39-04.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#passo-05-retornando-ao-portal-azure"&gt;
  &lt;/a&gt;
  Passo 05 - Retornando ao Portal Azure
&lt;/h3&gt;

&lt;p&gt;Agora que o build foi executado com sucesso no Azure DevOps, é aquele momento de sabermos se a nossa aplicação foi devidamente publicada no Azure! Retorne ao recurso criado da aplicação no Azure e clique no link, conforme a imagem abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/fkdQPsMm"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XnRCxeAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/qBbBzBYb/Captura-de-Tela-2021-05-08-a-s-01-41-55.png" alt="Captura-de-Tela-2021-05-08-a-s-01-41-55.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/NKshLrmk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7HnhrmWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/VkMzGqNp/Captura-de-Tela-2021-05-08-a-s-01-42-19.png" alt="Captura-de-Tela-2021-05-08-a-s-01-42-19.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E, como podem ver, o deploy foi realizado e integrado com sucesso com Azure DevOps!&lt;/p&gt;

&lt;p&gt;Se vocês desejarem, estou disponibilizando o link da aplicação disponível na web &lt;strong&gt;&lt;a href="https://gray-forest-0b4ba2410.azurestaticapps.net/"&gt;Aplicação Todo-List em Vue -AQUI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#recursos-amp-links-importantes"&gt;
  &lt;/a&gt;
  Recursos &amp;amp; Links Importantes
&lt;/h2&gt;

&lt;p&gt;Sempre ao final dos meus tutoriais, deixo recursos e links importantes, caso desejam saber mais sobre o assunto:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/?WT.mc_id=javascript-23665-gllemos"&gt;Documentação Oficial do Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/paths/build-applications-with-azure-devops/?WT.mc_id=javascript-23665-gllemos"&gt;Curso Grátis - Azure DevOps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/learn/modules/publish-app-service-static-web-app-api/?WT.mc_id=javascript-23665-gllemos"&gt;Curso Grátis - Publique uma Aplicação Estática no Angular, React, Vue ou Javascript &amp;amp; API&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/learn/modules/create-deploy-static-webapp-gatsby-app-service/?WT.mc_id=javascript-23665-gllemos"&gt;Curso Grátis - Crie e Publique um site estático com Gatsby&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/publish-gatsby/?WT.mc_id=javascript-23665-gllemos"&gt;Implementando Azure Static Web Apps no Gatsby&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/publish-hugo/?WT.mc_id=javascript-23665-gllemos"&gt;Implementando Azure Static Web Apps no Hugo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/publish-vuepress/?WT.mc_id=javascript-23665-gllemos"&gt;Implementando Azure Static Web Apps no VuePress&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/azure/static-web-apps/deploy-nextjs/?WT.mc_id=javascript-23665-gllemos"&gt;Implementando Azure Static Web Apps no Next.js&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/deploy-nuxtjs/?WT.mc_id=javascript-23665-gllemos"&gt;Implementando Azure Static Web Apps no Nuxt.js&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/azure/static-web-apps/publish-jekyll/?WT.mc_id=javascript-23665-gllemos"&gt;Implementando Azure Static Web Apps no Jekyll&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#palavras-finais"&gt;
  &lt;/a&gt;
  Palavras Finais
&lt;/h2&gt;

&lt;p&gt;Espero que esse tutorial de SWA + Azure DevOps seja de grande ajuda à todas as pessoas! Abaixo segue o vídeo explicativo desse tutorial, para àquelas pessoas que preferem seguir tutorial em formato de vídeo:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3pnIBJWoRjM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Ah! Já ia esquecer de falar aqui! Não deixem de se inscrever no meu Canal do Youtube! Estou criando inúmeras séries incríveis para esse ano de 2021! &lt;/p&gt;

&lt;p&gt;Só como spoiler, teremos &lt;strong&gt;(a partir de Junho)&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;😃 &lt;strong&gt;Microsoft Learn Live Sessions&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;😃 &lt;strong&gt;Open Mic com a Comunidade durante as Lives!&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;😃 &lt;strong&gt;Tutoriais semanais de Node.js, TypeScript &amp;amp; JavaScript&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;😃 &lt;strong&gt;E muitos Live Codings&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Se são conteúdos que você curte, então não deixa de se inscrever e ative o sininho para ficar sabendo quando teremos vídeo novo!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/youtube-canal-glaucialemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJTWdv_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/pr3TL4Pd/Screen-Shot-12-31-20-at-01-06-AM.png" alt="Screen-Shot-12-31-20-at-01-06-AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E para ficarem por dentro de várias outras novidades, não deixem de me seguir lá no twitter!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/glaucia_lemos86"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8TRF6AJa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code4coders.files.wordpress.com/2019/05/image-12.png" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nos vemos! Até a próxima pessoal! 😍 &lt;/p&gt;

</description>
      <category>azure</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to calculate the distance between the objects in the image with Python</title>
      <author>Stokry</author>
      <pubDate>Wed, 12 May 2021 18:09:57 +0000</pubDate>
      <link>https://dev.to/stokry/how-to-calculate-the-distance-between-the-objects-in-the-image-with-python-gbn</link>
      <guid>https://dev.to/stokry/how-to-calculate-the-distance-between-the-objects-in-the-image-with-python-gbn</guid>
      <description>&lt;p&gt;Today I want to show you how to calculate the distance between the objects in the image.  We will write an awesome algorithm that you can modify and extend to your needs. &lt;/p&gt;

&lt;p&gt;This is our test image:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ROfDP_qv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/PMz4LjJ/gui.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ROfDP_qv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/PMz4LjJ/gui.jpg" alt="enter image description here"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's jump to the code!&lt;/p&gt;

&lt;p&gt;First, we need to  import the necessary packages:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.spatial&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;dist&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;imutils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;perspective&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;imutils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;contours&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;imutils&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we construct the argument parse and parse the arguments&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;midpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ptA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ptB&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;ptA&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ptB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ptA&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ptB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after that we load the image, convert it to grayscale:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/test.jpg'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cvtColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COLOR_BGR2GRAY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GaussianBlur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then we perform edge detection and close gaps in between object edges:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;edged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Canny&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;edged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dilate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;edged&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iterations&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;edged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;erode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;edged&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iterations&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;find contours in the edge map&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;cnts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;edged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RETR_EXTERNAL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CHAIN_APPROX_SIMPLE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cnts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imutils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grab_contours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then initialize the distance colors and reference object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contours&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_contours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;159&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;165&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;refObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then we loop over the contours individually:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cnts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contourArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;minAreaRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BoxPoints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;imutils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_cv2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;boxPoints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"int"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;perspective&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_points&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;average&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;cY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;average&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;refObj&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;br&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tlblX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tlblY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;midpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trbrX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;trbrY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;midpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;br&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;euclidean&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;tlblX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tlblY&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trbrX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;trbrY&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;refObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cY&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;
    &lt;span class="n"&gt;orig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"int"&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawContours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;refObj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"int"&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;refCoords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vstack&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;refObj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;refObj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
    &lt;span class="n"&gt;objCoords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vstack&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cY&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then we  loop over the original points:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;xA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yA&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yB&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;refCoords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;objCoords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xA&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yA&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xB&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yB&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xA&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yA&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xB&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yB&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
                 &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;euclidean&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;xA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yA&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yB&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;refObj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;midpoint&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;xA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yA&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yB&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"{:.1f}in"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mX&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mY&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
                    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FONT_HERSHEY_SIMPLEX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Image"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waitKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;destroyAllWindows&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is our final result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0EtnEFFp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/kHzGbL3/fff.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0EtnEFFp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/kHzGbL3/fff.png" alt="enter image description here"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you all. &lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>showdev</category>
      <category>computervision</category>
    </item>
    <item>
      <title>Welcome Thread - v124</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 12 May 2021 17:49:09 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v124-1dmk</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v124-1dmk</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/yrhhmre5fN2PtRujfo/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/yrhhmre5fN2PtRujfo/giphy.gif" alt="Puppy saying hello from behind a bed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. 👋 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>Você tem um minuto para a palavra do Live Coding?</title>
      <author>Morganna Giovanelli</author>
      <pubDate>Wed, 12 May 2021 17:28:48 +0000</pubDate>
      <link>https://dev.to/morgiovanelli/voce-tem-um-minuto-para-a-palavra-do-live-coding-4358</link>
      <guid>https://dev.to/morgiovanelli/voce-tem-um-minuto-para-a-palavra-do-live-coding-4358</guid>
      <description>&lt;p&gt;Você, provavelmente, já ouviu falar da Twitch, certo? E, também, já deve ter ouvido falar que é uma famosa plataforma de lives para gamers. Então vamos quebrar alguns conceitos aqui: fique sabendo que existe uma categoria de &lt;a href="https://www.twitch.tv/directory/game/Science%20%26%20Technology"&gt;Ciência e Tecnologia&lt;/a&gt;, pela qual diversas pessoas de diferentes lugares no mundo, inclusive aqui no Brasil, fazem live programando.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Você deve estar com cara de "como assim?" agora, né?&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JLOmhaIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s9f29u8487v8gnz41lkb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JLOmhaIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s9f29u8487v8gnz41lkb.gif" alt='uma menina criança, loira, vestindo blusa rosa e com o cabelo amarrado em dois rabinhos e com cara de "como assim?", abrindo as mãos'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#o-que-%C3%A9-live-coding"&gt;
  &lt;/a&gt;
  O que é Live Coding
&lt;/h3&gt;

&lt;p&gt;É importante ressaltar que não necessariamente Live Coding deve ter exclusivamente código na tela. Além de linguagens de programação, outros assuntos são abordados nessas lives: como estudar e compartilhar, carreira, mercado de trabalho, soft skills, hardware, IoT, banco de dados, infraestrutura e devOps, segurança da informação, entre muitos outros.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;E assunto e conteúdo não faltam na nossa área...&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bvmml6BO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2spvnepyxjwyv1geq7mh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bvmml6BO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2spvnepyxjwyv1geq7mh.gif" alt="gif de uma pessoa sentada de costas com capuz e vários computadores fazendo diversas coisas diferentes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conte%C3%BAdo"&gt;
  &lt;/a&gt;
  Conteúdo
&lt;/h3&gt;

&lt;p&gt;As vantagens dessa forma de compartilhar conteúdo são várias: criar comunidades, conhecer pessoas da área, trocar experiências, ter um entretenimento, espalhar a palavra da Ada Lovelace e, o mais importante, interagir com pessoas diferentes de diversos lugares, pensamentos e culturas. Além da interação já mencionada, o que não se tem da mesma maneira em vídeos gravados e até mesmo artigos publicados, o ponto de estar ao vivo te permite, até mesmo, tirar dúvidas no momento em que as coisas estão acontecendo. Isso pode fazer a diferença para muitos de nós.&lt;/p&gt;

&lt;p&gt;Para quem me conhece, já deve ter me ouvido falar diversas vezes sobre o impacto da comunidade na minha vida pessoal e profissional. E poder ter uma forma de manter esse contato com a comunidade online e ao vivo, ainda mais no momento em que vivemos, traz um quentinho para o coração.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;E qualquer pessoa pode compartilhar conhecimento!&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uxqgfA7M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idrudmils3eo9di1a59u.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uxqgfA7M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idrudmils3eo9di1a59u.gif" alt="gif de um cachorro mexendo no computador com mãos humanas, na mesa também tem um óculos e um caderno"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comunidade"&gt;
  &lt;/a&gt;
  Comunidade
&lt;/h3&gt;

&lt;p&gt;Agora que você sabe que isso existe, caso ainda não soubesse, acredito que seja interessante conhecer pessoas que fazem live coding na Twitch. Você pode conhecer algumas dessas pessoas neste &lt;a href="https://github.com/acaverna/streamers-amigues-da-caverna"&gt;repositório&lt;/a&gt; que lista diversos links de canais na Twitch, separados por categorias e assuntos.&lt;/p&gt;

&lt;p&gt;Outra forma bem legal de conhecer pessoas streamers é seguindo o &lt;a href="https://twitter.com/LiveDivulgador"&gt;@LiveDivulgador&lt;/a&gt; no Twitter. É a página de um bot que compartilha quando alguém está online na Twitch, desde que a pessoa streamer concorde em ter essa divulgação.&lt;/p&gt;

&lt;p&gt;Mas, aqui, ressalto uma das comunidades que conheci e que, hoje, tenho a honra de fazer parte: as &lt;a href="https://www.twitch.tv/team/livecodergirls"&gt;Live Coders Girls&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Inclusive, aguarde novidades, hehehe...&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S6uvnerk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rkoyyarbhqxb5bsp6otl.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S6uvnerk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rkoyyarbhqxb5bsp6otl.gif" alt="gif de uma menina criança sorrindo e fazendo uma carinha de quem tá guardando um segredo ou aprontando alguma coisa"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para conhecê-las, te convido a seguir o canal dessas pessoas incríveis e assistirem suas lives. Você pode ver os canais pelo link do &lt;a href="https://www.twitch.tv/team/livecodergirls"&gt;time&lt;/a&gt;. São mulheres cis, trans e pessoas não binárias compartilhando conteúdo de tecnologia. Garanto que não irá se arrepender e aprenderá muito com cada uma delas.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eo-TZ_vS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2axs259n1s1o9yfr6rn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eo-TZ_vS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2axs259n1s1o9yfr6rn.gif" alt="gif com cinco mulheres diferentes fazendo a pose de força com o braço girl power"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dica de ouro aqui: estamos organizando a terceira maratona live coders girls que acontecerá no dia 29/05/2021. E você pode saber mais sobre ela e se inscrever pelo nosso &lt;a href="https://maratona3.live/"&gt;site&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pequeno-gloss%C3%A1rio-de-termos-usados-em-lives"&gt;
  &lt;/a&gt;
  Pequeno glossário de termos usados em lives
&lt;/h3&gt;

&lt;p&gt;Aproveito este artigo para compartilhar alguns termos que você pode ouvir/ver/ler muito nas lives que são transmitidas na Twitch.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#-streamer"&gt;
  &lt;/a&gt;
  - streamer
&lt;/h5&gt;

&lt;p&gt;Pessoa que está fazendo e conduzindo a live.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#-chat-ou-viewers"&gt;
  &lt;/a&gt;
  - chat ou viewers
&lt;/h5&gt;

&lt;p&gt;Grupo de pessoas que estão assistindo a live.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#-gank-ou-raid"&gt;
  &lt;/a&gt;
  - gank ou raid
&lt;/h5&gt;

&lt;p&gt;Quando uma live está para acabar, ao invés de simplesmente finalizá-la, podemos fortalecer e aumentar a comunidade, direcionando o público para outra pessoa streamer que esteja ao vivo naquele momento. Através da própria plataforma da Twitch, conseguimos direcionar as pessoas diretamente para a live seguinte.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#-host"&gt;
  &lt;/a&gt;
  - host
&lt;/h5&gt;

&lt;p&gt;Quando a pessoa streamer não está ao vivo, ela pode "hostear" outro canal que esteja ao vivo naquele momento. Então, caso alguém chegue até o canal dela, mesmo que esteja offline, há o conteúdo de outra pessoa sendo transmitido. Assim como a raid, este tipo de ação ajuda a fortalecer a comunidade e apresentar conteúdos de outras pessoas que apoiamos.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#-lurk"&gt;
  &lt;/a&gt;
  - lurk
&lt;/h5&gt;

&lt;p&gt;Quando uma pessoa viewer não consegue assistir com atenção total a uma live no momento em que está acontecendo, ela pode deixar o canal aberto e com o volume baixo. Isso acaba sendo um grande apoio a quem está "streamando".&lt;/p&gt;

&lt;p&gt;Espero que você, que ainda não conhecia esse mundo dentro da Twitch, tenha gostado do conteúdo e ao menos tente dar uma chance para a comunidade que está crescendo a cada dia. Caso tenha ficado alguma dúvida, não hesite em mandá-la, ficarei feliz em ajudar a espalhar a palavra do Live Coding.&lt;/p&gt;

&lt;p&gt;Até a próxima!&lt;/p&gt;

</description>
      <category>braziliandevs</category>
      <category>womenintech</category>
      <category>techtalks</category>
    </item>
    <item>
      <title>Journey to the real world by cloning DEV.to backend server(part 2)</title>
      <author>Harsh Mangalam</author>
      <pubDate>Wed, 12 May 2021 17:10:25 +0000</pubDate>
      <link>https://dev.to/harshmangalam/journey-to-the-real-world-by-cloning-dev-to-backend-server-2m9j</link>
      <guid>https://dev.to/harshmangalam/journey-to-the-real-world-by-cloning-dev-to-backend-server-2m9j</guid>
      <description>&lt;p&gt;In the last series we have talked about the tools and library we will use to create dev.to backend.&lt;/p&gt;

&lt;p&gt;In this series we will setup our server using Express js , Prisma  and apollo server.&lt;/p&gt;

&lt;p&gt;I am using ubuntu linux based os and vscode as IDE.&lt;/p&gt;

&lt;p&gt;Open your terminal using &lt;code&gt;ctrl + alt + t&lt;/code&gt; and navigate to the choice of your directory where you will create your project .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;harsh@dev:~ cd Harsh/nodejs/devblog_server
harsh@dev:~/Harsh/nodejs/devblog_server$ pnpm init -y
harsh@dev:~/Harsh/nodejs/devblog_server$  pnpm add apollo-server-express graphql express @prisma/client

harsh@dev:~/Harsh/nodejs/devblog_server$  pnpm add -D nodemon prisma
harsh@dev:~/Harsh/nodejs/devblog_server$  code .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;here i am using pnpm a new way to manage nodejs dependency. pnpm is Fast, disk space efficient package manager and upto 2x faster than  alternatives.&lt;/p&gt;

&lt;p&gt;I have initialize brand new project devblog_server and then install dependencies and devDependencies related to express , prisma and apollo server.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;apollo-server-express&lt;/code&gt;  is a express integration of graphql server. You can opt any framework no matter like  Connect, Hapi, Koa and Restify&lt;/p&gt;

&lt;p&gt;&lt;code&gt;graphql&lt;/code&gt; is a javascript implementation of GraphQL&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@prisma/client&lt;/code&gt; is an auto-generated query builder that enables type-safe database access and reduces boilerplate&lt;/p&gt;

&lt;p&gt;&lt;code&gt;nodemon&lt;/code&gt; auto restart our development server when we make change in our file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;prisma&lt;/code&gt; provide cli based interface to generate prisma project and apply migration&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In this series we have setup our development tools and installing our dependencies . From next series we will setup apollo server , express and prisma with postgresql database&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>node</category>
      <category>apollo</category>
      <category>express</category>
      <category>prisma</category>
    </item>
    <item>
      <title>✅ 5 simple security tips for your .NET applications</title>
      <author>Dotnetsafer</author>
      <pubDate>Wed, 12 May 2021 16:27:55 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/5-simple-security-tips-for-your-net-applications-2ola</link>
      <guid>https://dev.to/dotnetsafer/5-simple-security-tips-for-your-net-applications-2ola</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1XkSSBNM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zj59mzh7i6e3shhbbt3n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1XkSSBNM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zj59mzh7i6e3shhbbt3n.png" alt="security tips"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When programming one of the aspects that we must take into account is the security of our code, we must maintain a balance between good practices, software performance, and software security.&lt;/p&gt;

&lt;p&gt;From &lt;a href="https://dotnetsafer.com"&gt;Dotnetsafer&lt;/a&gt; we want to give you some basic advice to start paying attention to the security of the code you program and make your .net application secure.&lt;/p&gt;

&lt;p&gt;As we mentioned before, these are basic aspects that any programmer could start implementing today, in this &lt;strong&gt;&lt;a href="https://dotnetsafer.com/blog/"&gt;blog&lt;/a&gt;&lt;/strong&gt; you have more articles with more advanced solutions and tips.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-avoid-direct-connections-to-databases"&gt;
  &lt;/a&gt;
  1. Avoid direct connections to databases.
&lt;/h1&gt;

&lt;p&gt;Many times our applications require databases, the easiest way to use these databases is to use a connector from our application.&lt;/p&gt;

&lt;p&gt;In this way, &lt;strong&gt;we are exposing our server, port, username, and password  to anyone&lt;/strong&gt; who has access to the application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-can-we-fix%C2%A0it"&gt;
  &lt;/a&gt;
  How can we fix it?
&lt;/h3&gt;

&lt;p&gt;Here we must take into account several aspects, one of them being how our application is structured and its needs.&lt;/p&gt;

&lt;p&gt;In a simple way we could apply the following measures:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do not use Universal Data Link (UDL) files&lt;/li&gt;
&lt;li&gt;Encrypt the configuration files&lt;/li&gt;
&lt;li&gt;Using Windows Authentication&lt;/li&gt;
&lt;li&gt;Using Azure Key Vault Secret&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we need complete and advanced security we recommend outsourcing the connections.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-data-encryption-in%C2%A0net"&gt;
  &lt;/a&gt;
  2. Data encryption in .NET
&lt;/h1&gt;

&lt;p&gt;Whenever we work with data, whether it is application settings or user information, we must keep the data encrypted at all times.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;With this class you will be able to manipulate files with a little more security, for example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;//To save a file:&lt;/span&gt;

&lt;span class="n"&gt;DotnetsaferSecureFile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteAllText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"example.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"The user Pedro   has registered in https://dotnetsafer.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"passwordSecurity1234"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//To load this file:&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DotnetsaferSecureFile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ReadAllText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"example.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"passwordSecurity1234"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a small example to start integrating security and encryption into the data handled by our application, both files, and strings, connections, documents, etc.&lt;/p&gt;

&lt;p&gt;In this example we have seen that the password "passwordSecurity1234" is in the code, at first sight, that should not be so, the best option would be to outsource this password and load it in a secure way. As we did for example with the MySQL connection strings using &lt;strong&gt;Azure Key Vault Secret&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-using-the-data-protection-api-in-asp%C2%A0net%C2%A0core"&gt;
  &lt;/a&gt;
  3. Using the Data Protection API in ASP .NET Core
&lt;/h1&gt;

&lt;p&gt;In ASP .NET Core we could use &lt;strong&gt;IDataProtector&lt;/strong&gt; to protect the information and documents that we manipulate in our applications.&lt;/p&gt;

&lt;p&gt;This method is very simple to implement and has several features that make it really good.&lt;/p&gt;

&lt;p&gt;In order to use it in the &lt;strong&gt;StartUp.cs&lt;/strong&gt; class of our ASP .NET Core application, in the &lt;strong&gt;ConfigureServices&lt;/strong&gt; method we will add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;ConfigureServices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IServiceCollection&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;

 &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddDataProtection&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddTransient&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ProtectorHelper&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;

 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we'll load it as a parameter in the constructor of the classes in which we want to implement it, so we can use it to encrypt the information, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Class1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ProtectorHelper&lt;/span&gt; &lt;span class="n"&gt;protectionHelper&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

&lt;span class="c1"&gt;//This will cause a user's file to be encrypted and expire in 5 hours, i.e. after 5 hours, it cannot be decrypted by anyone.&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;usferFile&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;protectionHelper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Encrypt&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TimeSpan&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FromHours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Only with these measures, our application will be much safer, now we need to implement it correctly to ensure the safety of our customers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-update-the-external-dependencies-and-libraries"&gt;
  &lt;/a&gt;
  4. Update the external dependencies and libraries.
&lt;/h1&gt;

&lt;p&gt;This recommendation may be obvious, but not many people take it into account when programming in .NET we make use of many libraries, usually many of them offered by Microsoft, others developed by users or companies, like many of the NuGet packages.&lt;/p&gt;

&lt;p&gt;It is important that we check which libraries are using our application and inform us of any known vulnerabilities or possible security risks they may cause.&lt;/p&gt;

&lt;p&gt;It is also important to take into account the versions of the Framework we are using for our application since it could have become obsolete and without maintenance and could be a security risk.&lt;/p&gt;

&lt;p&gt;Here we provide you with information about the current framework versions:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0kue-kA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91nbp2dey7dt56xkyauu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0kue-kA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91nbp2dey7dt56xkyauu.png" alt="versions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition, a table with the known vulnerabilities of the most common .NET libraries:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zPcuAbpU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umsnjdv6akqyffncxe32.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zPcuAbpU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umsnjdv6akqyffncxe32.png" alt="versions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-use-security-systems-and-code-obfuscation"&gt;
  &lt;/a&gt;
  5. Use security systems and code obfuscation.
&lt;/h1&gt;

&lt;p&gt;One of the most effective and simple solutions is to use a tool that takes care of protecting your application.&lt;/p&gt;

&lt;p&gt;The above-mentioned security best practices are important for keeping your .NET application secure but are not sufficient to ensure the integrity of methods, connections, and other vulnerabilities.&lt;/p&gt;

&lt;p&gt;At &lt;strong&gt;&lt;a href="https://dotnetsafer.com"&gt;Dotnetsafer&lt;/a&gt;&lt;/strong&gt; we offer you the possibility of protecting your applications for free and we provide you with more advanced protections and features so that you can adapt the security to the needs of your applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-using-a-security-system-for%C2%A0net"&gt;
  &lt;/a&gt;
  Advantages of using a security system for .NET
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Avoid wasting time protecting your applications.&lt;/li&gt;
&lt;li&gt;No security knowledge required.&lt;/li&gt;
&lt;li&gt;It allows you to use various protections and features.&lt;/li&gt;
&lt;li&gt;Incorporate the latest security techniques into your application with a couple of clicks.&lt;/li&gt;
&lt;li&gt;Detects and corrects vulnerabilities automatically.&lt;/li&gt;
&lt;li&gt;It allows you to focus on development and continuous integration without worrying about security, as it will run on its side.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And other advantages that make a security system save you time and money with the publication of your software.&lt;/p&gt;

&lt;p&gt;Another important aspect is that the performance of the team development can be very reduced if we implement the protection manually because every time there is an update we will have to protect the application again and the development can become very tedious because the code is more difficult to understand, less practical and less optimal.&lt;/p&gt;

&lt;p&gt;In addition, many of the protections that we can incorporate manually are at the level of connections, file manipulation, encryption and good practices in development, but for the software to be secure and to be able to guarantee the integrity of our intellectual property it is necessary to use more advanced methods and algorithms.&lt;/p&gt;

&lt;p&gt;For example, &lt;strong&gt;Dotnetsafer&lt;/strong&gt; offers protections such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Control flow&lt;/strong&gt;: Modifies the flow of methods and disorders them so that they cannot be represented.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Constants protection&lt;/strong&gt;: Encrypts and protects the application constants so that sensitive information cannot be obtained.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Rename&lt;/strong&gt;: Renames all types, classes, methods, and variables of our application so that the operation cannot be understood.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And many more protections, if you want to know about all the protections that dotnetsafer offers we recommend you go to the section &lt;a href="https://dotnetsafer.com/shield/protections"&gt;https://dotnetsafer.com/shield/protections&lt;/a&gt; and you will be able to obtain more information about each one of them in the &lt;a href="https://dotnetsafer.com/docs/"&gt;Documentation&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>security</category>
      <category>development</category>
      <category>software</category>
    </item>
    <item>
      <title>Journey to the real world  by cloning DEV.to backend server(part 1)</title>
      <author>Harsh Mangalam</author>
      <pubDate>Wed, 12 May 2021 16:26:16 +0000</pubDate>
      <link>https://dev.to/harshmangalam/journey-to-the-real-world-by-cloning-dev-to-backend-server-1icm</link>
      <guid>https://dev.to/harshmangalam/journey-to-the-real-world-by-cloning-dev-to-backend-server-1icm</guid>
      <description>&lt;p&gt;In this long series we will explore  amazing library and framework by implementing dev.to backend server.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tools-we-will-use"&gt;
  &lt;/a&gt;
  Tools we will use
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Nodejs&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Nodejs is a javascript runtime which allow javascript to run outside the browser. Nodejs was developed by Ryan Dahl which utilize google v8 javascript engine.&lt;br&gt;
You can learn more about nodejs &lt;a href="https://nodejs.org/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;Graphql&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Graphql is a query language for API which provide full power to frontend developer to query data according to requirement without too much hassle.&lt;br&gt;
Graphql is alternative to REST in REST we create a bunch of endpoints using different http verbs like GET , POST , PUT , DELETE etc.. but in graphql we have one and only one endpoint which will always make a POST request no matter what your intension about getting data or updating data.e&lt;br&gt;
Graphql was developed and open source by facebook you can learn more about graphql &lt;a href="https://graphql.org/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;Apollo Server&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Apollo server is a graphql implementation for production use and can be used easily with any graphql client like relay , urql , apollo client etc..&lt;br&gt;
You can explore much about apollo server &lt;a href="https://www.apollographql.com/docs/apollo-server/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;Express&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Express is a most popular , unopinionated  nodejs based web framework. We will use express as middleware to handle file server. You can explore about express js &lt;a href="https://expressjs.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;Prisma 2&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Prisma is a Next-Gen javascript and typescript ORM . It generate types for your model and provide highlight during development to work faster.&lt;br&gt;
You can explore prisma 2 &lt;a href="https://www.prisma.io/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For the sake of simplicity we will use javascript to develop complete backend.&lt;/p&gt;

&lt;p&gt;From next series we will start modeling our database using prisma and postgresql&lt;/p&gt;

</description>
      <category>node</category>
      <category>apollo</category>
      <category>express</category>
      <category>prisma</category>
    </item>
    <item>
      <title>3 ways to code Rock, Paper and Scissors in JavaScript (beginner, intermediate and advanced approach)</title>
      <author>Ania Kubow</author>
      <pubDate>Wed, 12 May 2021 15:59:32 +0000</pubDate>
      <link>https://dev.to/ania_kubow/3-ways-to-code-rock-paper-and-scissors-in-javascript-beginner-intermediate-and-advanced-approach-34mk</link>
      <guid>https://dev.to/ania_kubow/3-ways-to-code-rock-paper-and-scissors-in-javascript-beginner-intermediate-and-advanced-approach-34mk</guid>
      <description>&lt;p&gt;In this video I show you how to code Rock paper Scissors in JavaScript in not just one approach, but 3 different approaches.&lt;/p&gt;

&lt;p&gt;I am doing this to show you just some of the ways you can solve one problem using JavaScript. I will be using a more beginner approach to start off with, and move onto more intermediate and advanced approaches.&lt;/p&gt;

&lt;p&gt;This is a JavaScript tutorial so there will be no styling in this tutorial. That part is totally up to you :)&lt;/p&gt;

&lt;p&gt;Please do share your finished games with me, I would absolutely love to see what you have made and how you have chosen to style your games!&lt;/p&gt;

&lt;p&gt;00:00​ Introduction&lt;br&gt;
01:18​ Beginner Rock Paper Scissors&lt;br&gt;
17:28​ Intermediate Rock Paper Scissors&lt;br&gt;
32:45​ Advanced Rock Paper Scissors&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RwFeg0cEZvQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can find the code for all three games here: &lt;a href="https://github.com/kubowania/rock-paper-scissors-x3"&gt;https://github.com/kubowania/rock-paper-scissors-x3&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;In most videos I use Tabnine as my A.I autocompletion tool. You can download it for free here: &lt;a href="http://bit.ly/tabnine-top-tool%E2%80%8B"&gt;http://bit.ly/tabnine-top-tool​&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you would like to buy me a coffee, well thank you very much that is mega kind! : &lt;a href="https://www.buymeacoffee.com/aniakubow"&gt;https://www.buymeacoffee.com/aniakubow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sign up for weekly coding tips from my newsletter partnership: &lt;a href="https://bit.ly/JS-tips%E2%80%8B"&gt;https://bit.ly/JS-tips​&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also find me on:&lt;br&gt;
Twitter: &lt;a href="https://www.twitter.com/ania_kubow"&gt;https://www.twitter.com/ania_kubow&lt;/a&gt;&lt;br&gt;
Instagram: https:///&lt;a href="http://www.instagram.com/aniakubow"&gt;www.instagram.com/aniakubow&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#codingbootcamp%E2%80%8B%E2%80%8B-coding%E2%80%8B"&gt;
  &lt;/a&gt;
  codingbootcamp​​ #coding​
&lt;/h1&gt;

</description>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Soft UI Dashboard - Open-source Flask Starter</title>
      <author>Sm0ke</author>
      <pubDate>Wed, 12 May 2021 15:55:51 +0000</pubDate>
      <link>https://dev.to/sm0ke/soft-ui-dashboard-open-source-flask-starter-2n6e</link>
      <guid>https://dev.to/sm0ke/soft-ui-dashboard-open-source-flask-starter-2n6e</guid>
      <description>&lt;p&gt;Hello Coders, &lt;/p&gt;

&lt;p&gt;This article presents an open-source &lt;strong&gt;Flask starter&lt;/strong&gt; that might help beginners to start faster a new project and reuse a codebase already enhanced with database, authentication and deployment scripts on top of a modern UI Kit: &lt;strong&gt;Soft UI Dashboard&lt;/strong&gt;. The product can be downloaded from Github and used for hobby and commercial products. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://flask-soft-ui-dashboard.appseed-srv1.com/"&gt;Flask Soft UI Dashboard&lt;/a&gt; - LIVE Deployment&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/flask-soft-ui-dashboard"&gt;Flask Soft UI Dashboard&lt;/a&gt; - Source Code&lt;/li&gt;
&lt;li&gt;LIVE Support via &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CsRmknW8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/app-generator/flask-soft-ui-dashboard/master/media/flask-soft-ui-dashboard-screen-billing.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CsRmknW8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/app-generator/flask-soft-ui-dashboard/master/media/flask-soft-ui-dashboard-screen-billing.png" alt="Soft UI Dashboard - Billing Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Soft UI Dashboard is an open-source Bootstrap 5 template released under the MIT License (free for commercial use) by Creative-Tim agency. The product is built with over 70 frontend individual elements, like buttons, inputs, navbars, navtabs, cards or alerts, giving you the freedom of choosing and combining. All components can take variations in color, that you can easily modify using SASS files and classes. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example Pages&lt;/strong&gt; - If you want to get inspiration or just show something directly to your clients, you can jump-start your development with our pre-built example pages. You will be able to quickly set up the basic structure for your web project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Authentication Pages: Login and Register&lt;/li&gt;
&lt;li&gt;Utility pages: User Profile, Billing page&lt;/li&gt;
&lt;li&gt;RTL Support: YES.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mJhlG4lV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6k3hn07umpzr6scbde8s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mJhlG4lV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6k3hn07umpzr6scbde8s.png" alt="Soft UI Dashboard - Login Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-compile-the-code"&gt;
  &lt;/a&gt;
  How to compile the code
&lt;/h2&gt;

&lt;p&gt;To compile this Flask starter in a local environment a &lt;a href="https://docs.appseed.us/content/tutorials/minimal-programming-kit"&gt;minimal programming kit&lt;/a&gt; must be already installed and all tools accessible in the terminal.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://nodejs.org/en/"&gt;Nodejs&lt;/a&gt; - version 10.x or above&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://yarnpkg.com/"&gt;Yarn&lt;/a&gt; - a smart package manager for Node&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://git-scm.com/"&gt;GIT&lt;/a&gt; - versioning command-line tool&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://gulpjs.com/"&gt;Gulp&lt;/a&gt; - toolkit automation&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.python.org/"&gt;Python3&lt;/a&gt; - the interpreter&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Some of the above tools are optional but recommended. Once we have the environment ready, we can move on and compile the project using the build instructions provided in the &lt;a href="https://github.com/app-generator/flask-soft-ui-dashboard/blob/master/README.md"&gt;README&lt;/a&gt; file.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone/download sources&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/flask-soft-ui-dashboard.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;flask-soft-ui-dashboard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Install dependencies&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv &lt;span class="nb"&gt;env&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source env&lt;/span&gt;/bin/activate
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Install modules - SQLite Database&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Set up environment variables&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Set the FLASK_APP environment variable&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;run.py
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Set up the DEBUG environment&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;FLASK_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;development 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #4&lt;/strong&gt; - Start the application via Flask embedded server&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;flask run
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Access the dashboard in browser: http://127.0.0.1:5000/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default, the app will route guest users to the login page to authenticate. To pass the login please create a new user first.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pZlgpgGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1zyx0etqousrv3clgga.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pZlgpgGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1zyx0etqousrv3clgga.png" alt="Soft UI Dashboard - RTL Support."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;More &lt;a href="https://appseed.us/admin-dashboards/flask"&gt;Flask Dashboards&lt;/a&gt; provided by AppSeed&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://palletsprojects.com/p/flask/"&gt;Flask&lt;/a&gt; - official website &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>flask</category>
      <category>python</category>
      <category>opensource</category>
    </item>
    <item>
      <title>React Select with options outside</title>
      <author>Richard Beattie</author>
      <pubDate>Wed, 12 May 2021 15:54:18 +0000</pubDate>
      <link>https://dev.to/rbt/react-select-with-options-outside-353g</link>
      <guid>https://dev.to/rbt/react-select-with-options-outside-353g</guid>
      <description>&lt;p&gt;In &lt;a href="http://prepsheets.com"&gt;prepsheets.com&lt;/a&gt; users can specify which allergens ingredients and recipes have. The natural UI element for this is a multiselect. I was already using &lt;a href="https://react-select.com/"&gt;react-select&lt;/a&gt; which is an awesome library adding a stylable multi-select with lots of options (creating new options; async loading of options; etc). However after setting it up, it felt too cramped. If users had more than 3 allergen selected (some of which are quite long "") then the select would grow and become cumbersome. Instead I decided to place the selected options above the mutliselect. This article goes over how to do this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up"&gt;
  &lt;/a&gt;
  Setting up
&lt;/h2&gt;

&lt;p&gt;We're using react-select here so go ahead and install it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;react-select
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's see what the default multi-select looks like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Select&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-select&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;chocolate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Chocolate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;strawberry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Strawberry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vanilla&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vanilla&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Select&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;isMulti&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm using the 24 offical Irish allergens as you can see below when you add a certain amount the select grows which dosn't look nice in my opinion.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---S-mtb18--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/drcjlwy435ipo515v9z3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---S-mtb18--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/drcjlwy435ipo515v9z3.png" alt="Mutliselect with many allergens selected"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#moving-selected-options-to-outside-the-select"&gt;
  &lt;/a&gt;
  Moving selected options to outside the select
&lt;/h2&gt;

&lt;p&gt;The next step is to not show the selected values in the select but rather above it. Let's create a wrapper component for React-Select&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// OptionsOutsideSelect.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Select&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-select&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;OptionsOutsideSelect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isMulti&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isMulti&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt; : null&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Select&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;controlShouldRenderValue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isMulti&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;OptionsOutsideSelect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If &lt;code&gt;isMulti&lt;/code&gt; is true then we use the &lt;code&gt;controlShouldRenderValue&lt;/code&gt; prop to hide the selected values &lt;strong&gt;and&lt;/strong&gt; loop over the &lt;code&gt;values&lt;/code&gt; prop and map them to &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--56_ucTlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxw39bdliej1921m1eya.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--56_ucTlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxw39bdliej1921m1eya.png" alt="React Select with options outside"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It should be possible to use the &lt;code&gt;MultiValue&lt;/code&gt; component from &lt;code&gt;react-select&lt;/code&gt; however I couldn't get that to work, which brings us to the next step&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#styling-the-selected-options"&gt;
  &lt;/a&gt;
  Styling the selected options
&lt;/h2&gt;

&lt;p&gt;Let's change how we're mapping the selected values to look like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ValuesContainer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isMulti&lt;/span&gt;
    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Value&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Value&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;)
&lt;/span&gt;    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ValuesContainer&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm going to use &lt;a href="https://styled-components.com/"&gt;styled-components&lt;/a&gt; to style &lt;code&gt;ValusContainer&lt;/code&gt; and &lt;code&gt;Value&lt;/code&gt; but you can of course move the same rules over to whatever you're using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ValuesContainer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
  display: flex;
  flex-wrap: wrap;
  align-items: center;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
  padding: 0.3rem 0.5rem 0.3rem 0.5rem;
  margin: 0 0.55rem 0.55rem 0;
  font-size: 0.75rem;
  color: black;
  background-color: rgba(247, 173, 46, 0.6);
  user-select: none;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates the below image which looks resonable&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kszqqop8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34d0cxn0dze298rx539t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kszqqop8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34d0cxn0dze298rx539t.png" alt="React Select styled option without X"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The only thing left to do now is let users remove selected options&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-a-remove-button"&gt;
  &lt;/a&gt;
  Adding a remove button
&lt;/h2&gt;

&lt;p&gt;First we'll add an "X" button to all &lt;code&gt;Values&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Value&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;XButton&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleRemoveValue&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="err"&gt;✕&lt;/span&gt; &lt;span class="c1"&gt;// This is the mulitply ✕ not the x on your keyboard&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/XButton&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Value&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to make the &lt;code&gt;handleRemoveValue&lt;/code&gt; function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleRemoveValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;buttonName&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTarget&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;removedValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;buttonName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;removedValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;buttonName&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;remove-value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;removedValue&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And Ta-Da 🎉 you have a react-select with the options rendered outside the select. I've included a code-sandbox below to show what this looks like&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/react-select-with-options-outside-qqw71"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>reactselect</category>
      <category>styledcomponents</category>
      <category>css</category>
    </item>
    <item>
      <title>UDP</title>
      <author>Gealber Morales</author>
      <pubDate>Wed, 12 May 2021 15:49:23 +0000</pubDate>
      <link>https://dev.to/gealber/udp-3pno</link>
      <guid>https://dev.to/gealber/udp-3pno</guid>
      <description>&lt;h1&gt;
  &lt;a href="#udp"&gt;
  &lt;/a&gt;
  UDP
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;Let's talk about this really funny protocol, funny is a weird word for a networking protocol, but I'll try to make my point. I will try the same approach as my last post on &lt;a href="https://dev.to/gealber/tcp-handshake-3ac"&gt;TCP&lt;/a&gt;, making a simple python script and taking a look to &lt;strong&gt;Wireshark&lt;/strong&gt;. Let's start.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Python 3&lt;/li&gt;
&lt;li&gt;Wireshark&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-udp-handshake-the-what"&gt;
  &lt;/a&gt;
  The UDP handshake, the what?
&lt;/h2&gt;

&lt;p&gt;Yep in my opinion &lt;strong&gt;UDP&lt;/strong&gt;(User Datagram Protocol) is barely a protocol, I know I'm a not a computer science guy, but still it doesn't seems to fit on that category of protocol. Let me clarify that &lt;strong&gt;UDP is extremely useful&lt;/strong&gt;, I'm just saying that the parts involved on the communication doesn't follow too many rules, like in &lt;strong&gt;TCP&lt;/strong&gt;. Instead of just saying this I will try to show you why I said this, let's make our simple Python script. Again this can be made with any programming language, I choose Python for simplicity.&lt;/p&gt;

&lt;p&gt;Our &lt;code&gt;server.py&lt;/code&gt; will contain our extremely simplified &lt;strong&gt;UDP&lt;/strong&gt; server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# UDP server.py&lt;/span&gt;

import socket

def main&lt;span class="o"&gt;()&lt;/span&gt;:
    &lt;span class="c"&gt;# creating the socket&lt;/span&gt;
    sock &lt;span class="o"&gt;=&lt;/span&gt; socket.socket&lt;span class="o"&gt;(&lt;/span&gt;socket.AF_INET, socket.SOCK_DGRAM&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# binding the socket to the address, in our case the localhost&lt;/span&gt;
    sock.bind&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;, 7456&lt;span class="o"&gt;))&lt;/span&gt;
    print&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Just here on 7456..."&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# start reading data,&lt;/span&gt;
    &lt;span class="c"&gt;# I'm just interested on a single message from the client and it will be&lt;/span&gt;
    &lt;span class="c"&gt;# pretty short so don't need more than this&lt;/span&gt;
    data, address &lt;span class="o"&gt;=&lt;/span&gt; sock.recvfrom&lt;span class="o"&gt;(&lt;/span&gt;1024&lt;span class="o"&gt;)&lt;/span&gt;
    print&lt;span class="o"&gt;(&lt;/span&gt;f&lt;span class="s2"&gt;"FROM: {address} DATA: {data}"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if &lt;/span&gt;__name__ &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;:
    main&lt;span class="o"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note the difference here with &lt;strong&gt;TCP&lt;/strong&gt;, in this case he just start listening without the need to call &lt;code&gt;socket.listen()&lt;/code&gt; or &lt;code&gt;socket.accept()&lt;/code&gt;, take a look at this question on &lt;a href="https://stackoverflow.com/questions/8194323/why-the-listen-function-call-is-not-needed-when-use-udp-socket#:~:text=UDP%20is%20a%20connectionless%2C%20unreliable,any%20order%20from%20any%20source.&amp;amp;text=It's%20because%20UDP%20is%20not,accept%20like%20there's%20for%20SOCK_STREAM"&gt;&lt;strong&gt;Stackoverflow&lt;/strong&gt;&lt;/a&gt;, yes I use &lt;strong&gt;Stackoverflow&lt;/strong&gt; as reference.&lt;/p&gt;

&lt;p&gt;What about the client, here we go:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# UDP client.py&lt;/span&gt;

import socket

def main&lt;span class="o"&gt;()&lt;/span&gt;:
    &lt;span class="c"&gt;# create the socket&lt;/span&gt;
    sock &lt;span class="o"&gt;=&lt;/span&gt; socket.socket&lt;span class="o"&gt;(&lt;/span&gt;socket.AF_INET, socket.SOCK_DGRAM&lt;span class="o"&gt;)&lt;/span&gt;
    print&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Sending data..."&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# and ready to go&lt;/span&gt;
    sock.sendto&lt;span class="o"&gt;(&lt;/span&gt;b&lt;span class="s2"&gt;"Hello Lola"&lt;/span&gt;, &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;, 7456&lt;span class="o"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;if &lt;/span&gt;__name__ &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;:
    main&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We create a socket and ready to send message, take into account that you don't care if the server is listening, if there's a server, you just send and hope for the best.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-this-look-like-on-wireshark"&gt;
  &lt;/a&gt;
  How this look like on Wireshark?
&lt;/h3&gt;

&lt;p&gt;In the last post we saw that a single &lt;strong&gt;TCP&lt;/strong&gt; connection with only one message generate several back and forward between the client and the server. I recommend you to take a look at the steps that you take to sniff the traffic in that case, in this case the only difference is that the filter in this case is &lt;code&gt;udp.port == 7456&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xl4vTUfl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jy338av8xbsrwfy6jidp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xl4vTUfl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jy338av8xbsrwfy6jidp.png" alt="TCP on Wireshark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's look this but with &lt;strong&gt;UDP&lt;/strong&gt;, this is going to be funny because well...let's see:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RygR6odb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0um2g4x0q7u9aqb84nrg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RygR6odb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0um2g4x0q7u9aqb84nrg.png" alt="UDP Wireshark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wait what? Just one message, the client just literally sent the message, he doesn't care if the server is listening because again there's not such a thing as listening on &lt;strong&gt;UDP&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W45UExdJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvdka6p3rv5ip38s99kj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W45UExdJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvdka6p3rv5ip38s99kj.png" alt="Balls on your face, UDP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yep this picture explains really well the situation, also was made with &lt;a href="https://github.com/excalidraw/excalidraw"&gt;exalidraw&lt;/a&gt;, you know promoting open source projects 😃.&lt;/p&gt;

&lt;p&gt;So &lt;strong&gt;there's no handshake in UDP&lt;/strong&gt;, looking at the packet sent we can see that there's no too much to see:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yCDmRo0Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e5h5glh6m37578ea43d3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yCDmRo0Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e5h5glh6m37578ea43d3.png" alt="UDP packet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Only Destination port, Source port, UDP length and Checksum and good to go, sent that message!!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uses-cases-of-udp"&gt;
  &lt;/a&gt;
  Uses cases of UDP
&lt;/h2&gt;

&lt;p&gt;You may be wondering, "So why do I need this?". Well given that &lt;strong&gt;UDP&lt;/strong&gt; has low latency it has some pretty interesting uses cases. I'll let you these two links below, so you can explore them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/3751950/what-are-common-udp-usecases"&gt;Stackoverflow question, UDP use cases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.emnify.com/en/resources/udp"&gt;What is User Datagram Protocol&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's all for today 👋.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bibliography"&gt;
  &lt;/a&gt;
  Bibliography
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="//stackoverflow.com"&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>tutorial</category>
      <category>linux</category>
      <category>networking</category>
      <category>python</category>
    </item>
  </channel>
</rss>
