<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Web Sohbet</title>
      <author>sohbetweb</author>
      <pubDate>Sun, 18 Apr 2021 18:26:20 +0000</pubDate>
      <link>https://dev.to/sohbetweb/web-sohbet-5h49</link>
      <guid>https://dev.to/sohbetweb/web-sohbet-5h49</guid>
      <description>&lt;p&gt;Web yazılım ve uygulamal geliştirmeyi ücretsiz kullanıcıların hizmetine sunan netlify, vercel, firebase, github ve gitlab acık kaynaklı web geliştirme platformları sayesinde kendi web yazılım ya da uygulamanızı oluşturmak ve web uygulamanızı ücretsiz oluşturduğunuz platform üzerinden yayınlamak mümkün.&lt;br&gt;
&lt;a href="https://websohbet.sourceforge.io"&gt;https://websohbet.sourceforge.io&lt;/a&gt; sourceforge github ve gitlab destekli proje oluşturma ve web üzerinden kolayca yayınlayabileceğiniz bir platform&lt;br&gt;
&lt;a href="https://sohbetodalari.web.app"&gt;https://sohbetodalari.web.app&lt;/a&gt; Cloud googlenin ücretsiz deploy (ios, adnroid ve web) imkanı sunduğu firebase.google.com git ve node.js uygulamaların yanı sıra wordpress web app yayınlama imkanıda verir.&lt;br&gt;
&lt;a href="https://sohbet.readthedocs.io"&gt;https://sohbet.readthedocs.io&lt;/a&gt; readthedocs web sitesinin kullanıcılarına sağladığı uçretsiz docs web projesi oluşturma ve yayınlama sitesidir. Sphinx uygulaması ile oluşturğunuz web sitenizi github ya da gitlab projeniz içerisinde barındırarak readthedocs.io aynasında yayınlayabilirsiniz.&lt;br&gt;
&lt;a href="https://sohbet.vercel.app"&gt;https://sohbet.vercel.app&lt;/a&gt; Vercel cok geniş yelpazeli web uygulama barındırma ve yayınlama platformudur. Gitlab ya da github üzerinde oluşturdugunuz web projenizi vercel.app alt alan adları ile yayınlayabilirsiniz.&lt;br&gt;
Yukarıda bahsettiğim siteleri yardımı ile web proje oluşturmak ve yayınlamak son derece basittir. Yazılım yada kodlama bilmeden web uygulaması oluşturma ve yayınlama fırsatı verir.&lt;/p&gt;

</description>
      <category>node</category>
      <category>git</category>
      <category>vercel</category>
      <category>firebase</category>
    </item>
    <item>
      <title>3-2-1 Newsletter: 2 must-have tools for content creation</title>
      <author>kapeel kokane</author>
      <pubDate>Sun, 18 Apr 2021 18:11:56 +0000</pubDate>
      <link>https://dev.to/comscience/3-2-1-newsletter-2-must-have-tools-for-content-creation-c7n</link>
      <guid>https://dev.to/comscience/3-2-1-newsletter-2-must-have-tools-for-content-creation-c7n</guid>
      <description>&lt;h3&gt;
  &lt;a href="#hi-there"&gt;
  &lt;/a&gt;
  Hi There!👋🏾
&lt;/h3&gt;

&lt;p&gt;🙏🏾 Welcome to my blog newsletter where every week, I share a 3-2-1 &lt;strong&gt;curated list&lt;/strong&gt; consisting of my content and also what resonated with me over the last week.&lt;/p&gt;

&lt;p&gt;👉🏾 In this week's post, we have &lt;strong&gt;3 tweets&lt;/strong&gt;, &lt;strong&gt;2 awesome tools&lt;/strong&gt; for content creation, and &lt;strong&gt;1 video editor&lt;/strong&gt; that will help you better understand asynchronous JavaScript!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tweets"&gt;
  &lt;/a&gt;
  3️⃣ tweets
&lt;/h3&gt;

&lt;p&gt;1] A single page &lt;strong&gt;#sketchnote&lt;/strong&gt; created to help understand the concept of &lt;strong&gt;IIFE&lt;/strong&gt; in JavaScript.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1l_mbDFo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EzRi2nfVkAUUkmV.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--tCoQBxER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1372919009939652612/E9s309tH_normal.jpg" alt="Kapeel 💙 Typescript profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Kapeel 💙 Typescript
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @kokaneka
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Do you know what an IIFE in JavaScript is?&lt;br&gt;&lt;br&gt;Day 31:  Here's a &lt;a href="https://twitter.com/hashtag/sketchnotes"&gt;#sketchnotes&lt;/a&gt; document that I created on the topic. &lt;br&gt;&lt;br&gt;All of my sketchnotes on &lt;a href="https://twitter.com/gumroad"&gt;@gumroad&lt;/a&gt; :&lt;br&gt;&lt;a href="https://t.co/MXg7OJTfjl"&gt;gumroad.com/kapeelkokane&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/javaScript"&gt;#javaScript&lt;/a&gt; basics series&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/CodeNewbies"&gt;#CodeNewbies&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/webdev"&gt;#webdev&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:48 PM - 18 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1383839829281021955" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1383839829281021955" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1383839829281021955" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;2] A single-line code solution to find the &lt;strong&gt;smallest element&lt;/strong&gt; in a JavaScript array.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Mz5OaEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EzHNZGSVEAI11YB.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--tCoQBxER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1372919009939652612/E9s309tH_normal.jpg" alt="Kapeel 💙 Typescript profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Kapeel 💙 Typescript
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @kokaneka
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Need to find the smallest element in an array? 🤔&lt;br&gt;&lt;br&gt;Day 30:  Here's a 1 line code that uses Math.min() and the spread operator&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/javaScript"&gt;#javaScript&lt;/a&gt; basics series&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/CodeNewbies"&gt;#CodeNewbies&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/webdev"&gt;#webdev&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:38 PM - 16 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1383112466989686787" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1383112466989686787" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1383112466989686787" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;3] The array &lt;strong&gt;utility method&lt;/strong&gt; to &lt;code&gt;fill&lt;/code&gt; an entire array with a value. Helps in pre-filling with default value.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MzG2mUG---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Ey8THx-VcAIMoN8.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--tCoQBxER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1372919009939652612/E9s309tH_normal.jpg" alt="Kapeel 💙 Typescript profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Kapeel 💙 Typescript
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @kokaneka
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Want to replace all the items of an array with a value?🤔&lt;br&gt;&lt;br&gt;Day 28:  use Array.prototype.fill()&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/javaScript"&gt;#javaScript&lt;/a&gt; basics series&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/CodeNewbies"&gt;#CodeNewbies&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/webdev"&gt;#webdev&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:48 PM - 14 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1382345063645155333" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1382345063645155333" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1382345063645155333" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#tools-for-content-creation"&gt;
  &lt;/a&gt;
  2️⃣ tools for content creation
&lt;/h3&gt;

&lt;p&gt;These are the 2 tools that I find myself using regularly.&lt;/p&gt;

&lt;p&gt;1] The first one is &lt;a href="https://carbon.now.sh/"&gt;carbon&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mE3hWpP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qba4evqdt79t860gpe64.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mE3hWpP8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qba4evqdt79t860gpe64.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
This tool helps you generate &lt;strong&gt;beautiful code snippets&lt;/strong&gt; and download a rendered image. It also allows for various levels of customization like &lt;em&gt;borders, shadows, fonts&lt;/em&gt;, etc. &lt;/p&gt;

&lt;p&gt;2] The second one is &lt;a href="https://excalidraw.com/"&gt;excalidraw&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BoTCpDt1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2s7h955a6e02ptm3scwq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BoTCpDt1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2s7h955a6e02ptm3scwq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
This tool lets us create &lt;strong&gt;flow charts&lt;/strong&gt; or rather any sort of drawings with a &lt;strong&gt;hand-drawn&lt;/strong&gt; feel to them. If you are into creating complex charts and want to make them different, give this tool a try.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  1️⃣ video
&lt;/h3&gt;

&lt;p&gt;If you want to truly understand &lt;strong&gt;asynchronous JavaScript&lt;/strong&gt;, I highly recommend this video that I came across recently. It's from the &lt;strong&gt;Google Chrome Developers&lt;/strong&gt; YouTube channel where two Google devs discuss the different caveats associated with async JavaScript:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8eHInw9_U8k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you liked that curated list, make sure you &lt;strong&gt;follow me&lt;/strong&gt; on &lt;a href="https://twitter.com/Kokaneka"&gt;Twitter&lt;/a&gt; so that you get the resources in your feed the day I post it, instead of later down the week as a part of this newsletter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/Kokaneka"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--158Tju2z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3p4a72xpzv710bg6hfax.png" alt="My twitter profile"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope that helped! As always, keep rocking.&lt;br&gt;
Cheers 👐🏽 :)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to deploy/update new Ghost version 4 to Heroku</title>
      <author>Lovekesh Kumar</author>
      <pubDate>Sun, 18 Apr 2021 18:02:52 +0000</pubDate>
      <link>https://dev.to/thelovekesh/how-to-deploy-update-new-ghost-version-4-to-heroku-dhg</link>
      <guid>https://dev.to/thelovekesh/how-to-deploy-update-new-ghost-version-4-to-heroku-dhg</guid>
      <description>&lt;p&gt;Ghost has currently rolled out its newer V4 publicly. The newer version of Ghost comes with fancy and new powerful features. After the launch of v4, many users who are using v3 on Heroku are in great trouble and don't know that how to trouble this problem and update to the latest version 4.&lt;/p&gt;

&lt;p&gt;Well, the problem has been solved with the brand new &lt;code&gt;ghost-v4-on-heroku&lt;/code&gt; repo. Anyone can deploy the latest ghost v4 on Heroku by simply clicking on a button.&lt;/p&gt;

&lt;p&gt;You can visit any of the links to deploy Ghost version 4 on Heroku or you can update your pre-deployed Ghost version 3 to version 4.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thelovekesh/ghost-v4-on-heroku"&gt;GitHub Repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://heroku.com/deploy?template=https://github.com/thelovekesh/ghost-v4-on-heroku"&gt;Deploy on Heroku&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#problems-or-need-help"&gt;
  &lt;/a&gt;
  Problems or need help?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ask.codebulbs.com/"&gt;Ask Question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thelovekesh/ghost-v4-on-heroku/issues/new/"&gt;Open an Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thelovekesh/ghost-v4-on-heroku/discussions"&gt;Use GitHub Discussions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#you-can-perform-some-more-actions-"&gt;
  &lt;/a&gt;
  You can perform some more actions ;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thelovekesh/ghost-v4-on-heroku/"&gt;Star the repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thelovekesh/ghost-v4-on-heroku/fork"&gt;Fork the repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>heroku</category>
      <category>ghost</category>
      <category>ghostblog</category>
      <category>ghostv4</category>
    </item>
    <item>
      <title>What’s an Example of Good E-Commerce Database Design?</title>
      <author>Shanika Wickramasinghe</author>
      <pubDate>Sun, 18 Apr 2021 18:02:06 +0000</pubDate>
      <link>https://dev.to/fabric_commerce/what-s-an-example-of-good-e-commerce-database-design-3e9l</link>
      <guid>https://dev.to/fabric_commerce/what-s-an-example-of-good-e-commerce-database-design-3e9l</guid>
      <description>&lt;h1&gt;
  &lt;a href="#whats-an-example-of-good-ecommerce-database-design"&gt;
  &lt;/a&gt;
  What's an Example of Good E-Commerce Database Design?
&lt;/h1&gt;

&lt;p&gt;Databases are vital tools for storing, managing and retrieving information, and they are critical for building an e-commerce system. A well-structured database is the heart of a good e-commerce system that manages all the interactions of the system.&lt;/p&gt;

&lt;p&gt;A good e-commerce database design should include the following characteristics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Simple and Functional Database Structure&lt;/strong&gt;&lt;br&gt;
The database table structure should be relatively simple but needs to cover all the required functionality without compromising the user experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;High Performance&lt;/strong&gt;&lt;br&gt;
The database queries should execute fastly and efficiently to facilitate live customer interactions and provide a satisfactory shopping experience. Therefore, the selected database should consist of good indexing and performance optimization options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;High Availability and Scalability&lt;/strong&gt;&lt;br&gt;
A good database design should be highly available with automatic snapshots and enable automatic scaling to support future platform growth as well as sudden traffic spikes.&lt;/p&gt;

&lt;p&gt;Based on the above characteristics, an e-commerce database design boils down into three major aspects as the following.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; The Scope of the Database.&lt;/li&gt;
&lt;li&gt; Type of the Database.&lt;/li&gt;
&lt;li&gt; Database Infrastructure.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The scope refers to the planned functionality of the database. The underlying table structure of the database, its relationships, and indexes all depend on the functionality of the e-commerce platform. The database type can vary from a relational database to a NoSQL database or a hybrid approach depending on the requirements and the underlying data structure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-scope-of-the-database"&gt;
  &lt;/a&gt;
  The Scope of the Database.
&lt;/h2&gt;

&lt;p&gt;The main consideration when designing the database is identifying the functionalities offered by the e-commerce platform. These functionalities can be further divided as core-functions and extra-functions (additional-functions).&lt;/p&gt;

&lt;p&gt;Core-functions are the functions that are necessary for facilitating the day-to-day operations of the e-commerce platform.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  User Management&lt;/li&gt;
&lt;li&gt;  Product/Inventory Management&lt;/li&gt;
&lt;li&gt;  Shopping Cart Function &lt;/li&gt;
&lt;li&gt;  Payment Management
&lt;/li&gt;
&lt;li&gt;  Shipping/Logistics Management&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Extra/Additional functions are the nice-to-have functions for the e-commerce platform that will enhance the user experience for both end-users (customers) and administrators (business). Following are some functions that come under this category.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Marketing Functions&lt;/li&gt;
&lt;li&gt;  Help Desk/Support&lt;/li&gt;
&lt;li&gt;  Advanced Analytics
&lt;/li&gt;
&lt;li&gt;  Third-Party Integrations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#database-structure-for-corefunctions"&gt;
  &lt;/a&gt;
  Database Structure for Core-Functions
&lt;/h2&gt;

&lt;p&gt;In this section, let's see how to structure the database to facilitate the core functions. The below table structure is an example of a database design that covers the core functionality of an e-commerce platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z-_2SDwR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/ecommerce-platform-data-1.png%3Fwidth%3D1331%26name%3Decommerce-platform-data-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z-_2SDwR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/ecommerce-platform-data-1.png%3Fwidth%3D1331%26name%3Decommerce-platform-data-1.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This example covers all the basics of an e-commerce platform. There, the table fields and indexes depend on the design of the overall platform, and it contains three separate sections for user management, product management, and shopping process. Let's have a closer look at each section.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-management"&gt;
  &lt;/a&gt;
  User Management
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ojs2L5GJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/user-table-ecommerce-2.png%3Fwidth%3D561%26name%3Duser-table-ecommerce-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ojs2L5GJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/user-table-ecommerce-2.png%3Fwidth%3D561%26name%3Duser-table-ecommerce-2.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have created a user table that contains all the user details along with user_payment and user_address tables to store multiple addresses and payment details of users. This structure offers more granular control over data while eliminating duplicate records.&lt;/p&gt;

&lt;p&gt;Another way to manage users is by creating two separate user tables for end-users and administrators and assigning relationships according to their requirements, as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Kbo3QtL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/user-administrator-ecommerce-table-3.png%3Fwidth%3D1157%26name%3Duser-administrator-ecommerce-table-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Kbo3QtL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/user-administrator-ecommerce-table-3.png%3Fwidth%3D1157%26name%3Duser-administrator-ecommerce-table-3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#product-management"&gt;
  &lt;/a&gt;
  Product Management
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_dI5c3Xv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/product-management-ecommerce-table-4.png%3Fwidth%3D618%26name%3Dproduct-management-ecommerce-table-4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_dI5c3Xv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/product-management-ecommerce-table-4.png%3Fwidth%3D618%26name%3Dproduct-management-ecommerce-table-4.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Managing products is not simply about maintaining a list of products. You also have to manage the inventory, discounts, categories, and other attributes of the products. So, always focus on simplifying the data structure while reducing duplicates. In the above table structure, the main product table contains information about the products.&lt;/p&gt;

&lt;p&gt;There are two other separate tables called discount, product_inventory, and product_category that are connected to it through database relationships. This approach provides the greatest level of flexibility to the database. For instance, we can simply query the product_inventory table to check for inventory without going through all the data associated with other related tables. This is also a good place to utilize indexes to increase the performance of the database.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shopping-process"&gt;
  &lt;/a&gt;
  Shopping Process
&lt;/h3&gt;

&lt;p&gt;This is the most critical and complex part when it comes to designing the database. The shopping process will guide a user to search the products, add the desired products to the shopping cart, and finally complete the transaction using a payment provider.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jnuh7_F6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/shopping-process-ecomerce-data-table-5.png%3Fwidth%3D1100%26name%3Dshopping-process-ecomerce-data-table-5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jnuh7_F6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/shopping-process-ecomerce-data-table-5.png%3Fwidth%3D1100%26name%3Dshopping-process-ecomerce-data-table-5.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The heart of the e-commerce process connects users with products. A good chunk of design effort should be exhausted to streamline the shopping process. In the above example, there are shopping_session and cart_item as temporary data stores that only store the shopping session information of the current user until the order is confirmed and the data is moved to permanent storage tables with the payment details. (order_details, order_items, and payment details.). You can check out this article for a detailed explanation of how to design a shopping cart database.&lt;/p&gt;

&lt;p&gt;As shown in this section, the scope of the database structure is determined by the overall functionality of the platform. Therefore, it is paramount that you properly define the required functionality before diving into designing the database. This way, you can create a clearly defined data structure with enough flexibility to support future expansions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#type-of-the-database"&gt;
  &lt;/a&gt;
  Type of the Database
&lt;/h2&gt;

&lt;p&gt;The next consideration is to determine the type of database. To have the best e-commerce database design, you must first consider two main database types: RDBMS or NoSQL databases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relational database:&lt;/strong&gt; This is similar to spreadsheets and uses tables, columns, and rows to organize and retrieve data. It is built using the standard query language (SQL), and all the data is related to each other.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; MySQL, PostgreSQL, MariaDB, Microsoft SQL, Amazon RDS, Azure SQL Database&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Non-relational or NoSQL database:&lt;/strong&gt; This is a nontabular database with a flexible schema that works well for storing unstructured data. Contrary to its name, a non-relational database can store related data. It does so by nesting related data within a single data structure instead of splitting them between tables. There are various NoSQL databases, and the most popular ones are document stores and key stores.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; MongoDB, Apache Cassandra, Amazon DynamoDB, Azure CosmosDB, Couchbase.&lt;/p&gt;

&lt;p&gt;Both these database types are solid options for any e-commerce platform, and the choice is up to the designer and depends on the requirements of the platform. A relational database will provide a simple and robust platform to create the database, while NoSQL offers better data flexibility, scalability, and slightly better performance. In the coming section, we'll explore an example of e-commerce database design for each type.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ecommerce-database-design-examples"&gt;
  &lt;/a&gt;
  E-Commerce Database Design Examples
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#relational-database-design"&gt;
  &lt;/a&gt;
  Relational Database Design
&lt;/h4&gt;

&lt;p&gt;Many e-commerce sellers use a relational database design centered around the following tables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Products table&lt;/li&gt;
&lt;li&gt;  Customers/Users table&lt;/li&gt;
&lt;li&gt;  Orders table&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additional tables can be added as required to support shipping, categories, product reviews, etc. We have covered the database structure in the previous section, where the scope of the database was defined.&lt;/p&gt;

&lt;p&gt;Below, you can see a diagram of a simple e-commerce database design built using MySQL.&lt;/p&gt;

&lt;p&gt;MySQL e-commerce database design&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2YwRuFJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/MySQL%2520e-commerce%2520database%2520design%25206%2520.png%3Fwidth%3D753%26name%3DMySQL%2520e-commerce%2520database%2520design%25206%2520.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2YwRuFJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/MySQL%2520e-commerce%2520database%2520design%25206%2520.png%3Fwidth%3D753%26name%3DMySQL%2520e-commerce%2520database%2520design%25206%2520.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While a standard relational database design will work for many e-commerce stores, there are situations where it is advantageous for retailers to follow another approach.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#nosql-database-design"&gt;
  &lt;/a&gt;
  NoSQL database design
&lt;/h4&gt;

&lt;p&gt;Most of the world's largest online retailers, including Walmart and eBay, use NoSQL databases to power their e-commerce systems. The reason is NoSQL databases providing the required performance and scalability to effectively manage large catalogs and unstructured data like user data and images.&lt;/p&gt;

&lt;p&gt;A good example of an e-commerce database built using NoSQL technology is CouchBase, which uses a document store as its database type. With a document database, data is simpler and easier to access as an entire product can be stored in a single document instead of storing across multiple tables.&lt;/p&gt;

&lt;p&gt;Below, you can see an example of data modeling for different products with CouchBase's NoSQL database.&lt;/p&gt;

&lt;p&gt;CouchBase NoSQL data structure&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pyEcJDFm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/CouchBase%2520NoSQL%2520data%2520structure%25207.png%3Fwidth%3D784%26name%3DCouchBase%2520NoSQL%2520data%2520structure%25207.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pyEcJDFm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/CouchBase%2520NoSQL%2520data%2520structure%25207.png%3Fwidth%3D784%26name%3DCouchBase%2520NoSQL%2520data%2520structure%25207.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://info.couchbase.com/rs/302-GJY-034/images/Database_design_retail_inventory_product_catalogs.pdf"&gt;source&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hybrid-database"&gt;
  &lt;/a&gt;
  Hybrid Database
&lt;/h3&gt;

&lt;p&gt;Another exciting option is to use a combined solution utilizing an RDBMS for structured data such as user details, order details, payment details, and a NoSQL database for unstructured data such as product details or marketing information.&lt;/p&gt;

&lt;p&gt;Hybrid database structure&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i5ALJqhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/Hybrid%2520ecommerce%2520database%2520structure%25208%2520.png%3Fwidth%3D394%26name%3DHybrid%2520ecommerce%2520database%2520structure%25208%2520.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i5ALJqhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/Hybrid%2520ecommerce%2520database%2520structure%25208%2520.png%3Fwidth%3D394%26name%3DHybrid%2520ecommerce%2520database%2520structure%25208%2520.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Creating a Hybrid database structure is relatively more complex than using traditional database types (RDBMS or NoSQL) as a hybrid approach will utilize the application to combine data from both sources. This allows the developer to combine the strengths of both database types. However, this kind of approach is only suitable for truly complex application architectures that offer users a myriad of functions. For instance, if your purpose is to speed up an RDBMS, it's easier to configure a caching server such as Memcached rather than going for a hybrid approach.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#database-infrastructure"&gt;
  &lt;/a&gt;
  Database Infrastructure
&lt;/h1&gt;

&lt;p&gt;It is possible to select a database type and design the data structure, but we also need infrastructure to run the database. It depends on the deployment of the e-commerce platform. One option is to provision a server, install the database software and then manage all the aspects from security to maintenance. The other option is to use a managed database service like Amazon RDS, Azure SQL for RDBMS, Amazon DynamoDB, or Azure CosmosDB for NoSQL. Among these two options, the managed approach saves time and does not require any maintenance as these are SaaS offerings.&lt;/p&gt;

&lt;p&gt;Suppose you need complete control over your data, database configurations, and server security policies or deploy the database on a private network. In that case, the only option is to configure and maintain the database manually. However, with more and more businesses utilizing cloud providers nowadays, the best option would be to use a managed database. It is more applicable for an e-commerce platform where scalability and availability play a vital role in the success of the platform. So, it's almost always advisable to use a SaaS database.&lt;/p&gt;

&lt;p&gt;A managed database will offer peace of mind for any developer as it is backed by a reputed cloud provider with a service level agreement to provide maximum uptime. It will also enable the developer/administrators to focus more on creating and optimizing the database without dealing with server or database maintenance. A slight downside of a managed platform would be the higher cost associated with it when compared to managing own servers. However, when considering the total cost of ownership (TCO) and operational expenditure (OpEx), a SaaS solution is the ideal option for a growing e-commerce database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pim-software-for-multichannel-sellers"&gt;
  &lt;/a&gt;
  PIM Software for Multichannel Sellers
&lt;/h2&gt;

&lt;p&gt;Product Information Management (PIM) is a critical component of the core functionality of any good e-commerce platform. It provides a flexible solution for managing all your product data inside a single database in the cloud. Moreover, PIM is an excellent option for retailers looking to sell on multiple channels. Having a centralized database in the cloud, PIM allows easy management and delivery of product information to other marketplaces.&lt;/p&gt;

&lt;p&gt;Another main advantage of PIM is the ability to collect and organize data in a variety of formats. Different platforms have their own catalog structure, and PIM automatically sends data to these channels in the proper format.&lt;/p&gt;

&lt;p&gt;Fabric's PIM is one of the best examples of e-commerce database design using PIM software. It serves as a single source for centralizing all your data in the cloud, allowing businesses to benefit from increased productivity while ensuring all information is accurate and up to date across various channels.&lt;/p&gt;

</description>
      <category>ecommerce</category>
      <category>database</category>
      <category>sql</category>
      <category>nosql</category>
    </item>
    <item>
      <title>Why being a Codeslinger makes you worse than you think</title>
      <author>HDenizD</author>
      <pubDate>Sun, 18 Apr 2021 17:50:04 +0000</pubDate>
      <link>https://dev.to/hdenizd/why-being-a-codeslinger-makes-you-worse-than-you-think-3kg8</link>
      <guid>https://dev.to/hdenizd/why-being-a-codeslinger-makes-you-worse-than-you-think-3kg8</guid>
      <description>&lt;p&gt;We all know that getting good at one thing is difficult. Today I want to share something with you, something that has improved my thinking and made me a better programmer.&lt;/p&gt;

&lt;p&gt;First to first, the title said something about a Codeslinger? What that is? Simple... the definition of a Codeslinger is someone who is literally like shooting(coding) from the hip.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R8w4vJot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ptu704ywoy6vahigzmc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R8w4vJot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ptu704ywoy6vahigzmc.gif" alt="clint_hipfire"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Because they are two kind of people out there in our business.&lt;br&gt;
The one who really wants to know why, with something like:&lt;br&gt;
&lt;em&gt;"WTF? why is this working?"&lt;/em&gt;,&lt;br&gt;
and the one who is like:&lt;br&gt;
&lt;em&gt;"Oh.. ok it works, fine."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We all came to points where we're over asked, where we are ready to complain and give up to understand something because otherwise it would break us out of our comfort zone.&lt;/p&gt;

&lt;p&gt;You know, it's quite easy to shoot a Revolver from the hip and fire out all 6 shoots and maybe you hit the target. Maybe you completed the task like that and pat yourself on the shoulder. &lt;strong&gt;But&lt;/strong&gt; doing this for the most of your time makes you a &lt;strong&gt;Codeslinger&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A Codeslinger will always just &lt;strong&gt;try&lt;/strong&gt; to accomplish a challenge, most of the time he will only have luck and succeed or fail hard.&lt;/p&gt;

&lt;p&gt;I'm telling you it's okay to &lt;strong&gt;try&lt;/strong&gt;, but it's not okay to do it over and over again. You have to decide for yourself if I am the one who is afraid of learning new things and cheating my way through my career or if I am the one who takes the challenge of getting better and better until you get the salary, that you deserve, or the job position that fits to your skill level.&lt;/p&gt;

&lt;p&gt;What i mean is, when you Code something, no matter what it is, if it is a simple Todo-App or a big scale Company software, it's highly important that you should keep in mind, you don't know everything from the hip.&lt;/p&gt;

&lt;p&gt;If your not sure about how to use this Tool you are using. Not confident about a line of Code you just copy pasted from Stack Overflow or somewhere else, then i can tell you one simple trick that will maybe change the way how you approach the stuff day by day.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Force yourself to understand, till you understand...&lt;br&gt;
Become a Sniper, one bullet one target, one hit.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nqlFolmV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e75ppvr66i64tg6rh85l.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nqlFolmV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e75ppvr66i64tg6rh85l.gif" alt="sniper"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will make you better, will make you less in a "&lt;em&gt;i can try it&lt;/em&gt;" and more in a "&lt;em&gt;i can do it&lt;/em&gt;"&lt;/p&gt;

&lt;p&gt;There is one simple rule you should never forget:&lt;br&gt;
&lt;em&gt;"if you could write it yourself, you are allowed to use it"&lt;/em&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>codequality</category>
      <category>experience</category>
      <category>learnings</category>
    </item>
    <item>
      <title>Talk to your computer in Javascript: the repl console</title>
      <author>Alexey</author>
      <pubDate>Sun, 18 Apr 2021 17:25:27 +0000</pubDate>
      <link>https://dev.to/alexeydc/talk-to-your-computer-in-javascript-the-repl-console-4l4i</link>
      <guid>https://dev.to/alexeydc/talk-to-your-computer-in-javascript-the-repl-console-4l4i</guid>
      <description>&lt;h1&gt;
  &lt;a href="#premise"&gt;
  &lt;/a&gt;
  Premise
&lt;/h1&gt;

&lt;p&gt;I often want to run ad hoc Javascript commands that rely on npm packages and custom classes I've written that work with a database/filesystem or wrap common logic. &lt;/p&gt;

&lt;p&gt;Node comes with repl (Read-Eval-Print Loop), and you can launch a simple repl console by just running &lt;code&gt;node&lt;/code&gt; with no arguments - the commands for it are documented in e.g. &lt;a href="https://nodejs.org/api/repl.html#repl_design_and_features"&gt;https://nodejs.org/api/repl.html#repl_design_and_features&lt;/a&gt;. That's quite handy - but falls short of a full-featured interactive shell that has access to all necessary packages.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The solution
&lt;/h1&gt;

&lt;p&gt;Luckily, repl is available in node as a package ( &lt;a href="https://nodejs.org/api/repl.html#repl_repl"&gt;https://nodejs.org/api/repl.html#repl_repl&lt;/a&gt; ) - so all that's necessary is to write a small script that starts a repl instance and pulls in everything you need.&lt;/p&gt;

&lt;p&gt;You'll need to inject all the packages you want to use interactively into the repl console via a launcher script. It's also handy to configure repl in the script, and I show some examples below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/*
  I often use this console with projects that rely on env vars,
  and I use dotenv to pull them in.

  I think this is quite common, so I'm including this
  as an opinionated example on how
  to make the repl console environment aware.
*/
require("dotenv").config()
/*
  I also often use the repl console with projects that run
  across multiple environments: development/production/staging.
  It's helpful to be reminded where the console is running
  to avoid unfortunate mistakes.
*/
console.log(`Starting console - ${process.env.NODE_ENV}`)

const repl = require("repl")
const util = require("util")

const startConsole = async () =&amp;gt; {
  /*
    The lines below configure output formatting for repl.

    W/o specifying any output options, you'd get
    formatting like
    &amp;gt; a = {a: {b: {c: {d: {e: {f: {g: {h: 1}}}}}}}}
    { a: { b: { c: [Object] } } }

    With these options, you'd get
    &amp;gt; a = {a: {b: {c: {d: {e: {f: {g: {h: 1}}}}}}}}
    { a: { b: { c: { d: { e: { f: { g: { h: 1 } } } } } } } }

    Note these options are the same as the options passed to inspect
    https://nodejs.org/api/util.html#util_util_inspect_object_options
  */
  util.inspect.defaultOptions.depth = 20
  util.inspect.defaultOptions.colors = true
  util.inspect.defaultOptions.getters = true
  util.inspect.defaultOptions.compact = true

  /*
    repl is supposed to use util.inspect to format by default.
    However, w/o explicitly specifying {writer: util.inspect},
    I was not able to get the options above to be successfully applied
    for eval results formatting. They _do_ get applied to
    console.log formatting, though, in either case.

    You may want to specify other options - see
    https://nodejs.org/api/repl.html#repl_repl_start_options
    for a comprehensive list - e.g. {prompt: "xyz&amp;gt;"} is a handy one.
  */
  const replServer = repl.start({writer: util.inspect})
  /*
    Pull in any number of modules here - these are the
    modules that will be available to you in the repl instance.
  */
  const modules = ["util", "fs"]
  modules.forEach((moduleName) =&amp;gt; {
    replServer.context[moduleName] = require(moduleName)
  })
  /*
    This is not necessary in newer versions of node,
    but in older versions I wasn't able to pull in
    ad-hoc modules to a running repl instance w/o it.
  */
  replServer.context.require = require
}

startConsole()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The way I personally set it up is by having all the things my application cares about available as a single module defined in my application - including both npm packages and my own library/reusable code.&lt;/p&gt;

&lt;p&gt;I use this single module in application code, scripts, background jobs, and also in the repl console - that way accessing functionality looks the same in all contexts, and I can easily memorize commands and have them at my fingertips.&lt;/p&gt;

&lt;p&gt;My script ends up looking more like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;require("dotenv").config()
console.log(`Starting console - ${process.env.NODE_ENV}`)

const repl = require("repl")
const util = require("util")
/*
  This contains all the modules I want to pull in
*/
const lib = require("../lib.js")

const startConsole = async () =&amp;gt; {
  /*
    E.g. establish connections to various databases...
  */
  await lib.init()

  util.inspect.defaultOptions.depth = 20
  util.inspect.defaultOptions.colors = true
  util.inspect.defaultOptions.getters = true
  util.inspect.defaultOptions.compact = true
  const replServer = repl.start({writer: util.inspect})

  for(key of Object.keys(lib)) {
    replServer.context[key] = lib[key]
  }
}

startConsole()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#starting-the-console"&gt;
  &lt;/a&gt;
  Starting the console
&lt;/h1&gt;

&lt;p&gt;I usually start the script through npm/yarn, via package.json:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
  "scripts": {
    ...
    "console": "node --experimental-repl-await ./scripts/console.js"
    ...
  },
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I love &lt;code&gt;--experimental-repl-await&lt;/code&gt; (&lt;a href="https://nodejs.org/api/cli.html#cli_experimental_repl_await"&gt;https://nodejs.org/api/cli.html#cli_experimental_repl_await&lt;/a&gt; - added in Node.js 10.0.0), and I hope it makes its way out of experimental soon. It allows &lt;code&gt;await&lt;/code&gt;ing on async commands in the repl console. Without it, working with promises is quite annoying.&lt;/p&gt;

&lt;p&gt;After that's in, it's just &lt;code&gt;yarn run console&lt;/code&gt; or &lt;code&gt;npm run console&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#working-with-the-console"&gt;
  &lt;/a&gt;
  Working with the console
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn run console
&amp;gt; console.log("Hello world")
Hello world
undefined
&amp;gt; moment = require('moment')
&amp;gt; moment.now()
1618688628781
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note how &lt;code&gt;console.log("...")&lt;/code&gt; produces 2 lines as output. It performs its side effect of printing and returns a value - and repl will print the result of each expression it evaluates. For example, variable declarations return undefined, but variable assignments return the assigned value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt; let a = 1
undefined
&amp;gt; a = 2
2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's handy to know if you want to skip printing the output of some expression.&lt;/p&gt;

&lt;p&gt;In most cases, I tend to avoid using variable declarations in repl, since you can assign a variable without declaring it. The reason is that I often copy-paste sections of code from a text editor, and variable declarations are not re-runnable. In application code I'll usually use &lt;code&gt;const&lt;/code&gt;, but in repl that locks you out from fixing mistakes, especially with e.g. function declarations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt; let a = 1
undefined
&amp;gt; let a = 1
Uncaught SyntaxError: Identifier 'a' has already been declared
&amp;gt; b = 1
1
&amp;gt; b = 1
1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#persistent-history"&gt;
  &lt;/a&gt;
  Persistent history
&lt;/h1&gt;

&lt;p&gt;Repl supports bi-directional reverse-i-search similar to zsh. I.e. you can search back through your history by pressing &lt;code&gt;ctrl+r&lt;/code&gt; (or &lt;code&gt;ctrl+s&lt;/code&gt; to search forward) - which makes preserving history between runs potentially very worth it.&lt;/p&gt;

&lt;p&gt;History is preserved in a file, so you'll need to choose where to store it. I store it in a &lt;code&gt;.gitignore&lt;/code&gt;d folder in my project. E.g. the default node.js repl console stores history by default, in your home folder in &lt;code&gt;.node_repl_history&lt;/code&gt; ( &lt;a href="https://nodejs.org/api/repl.html#repl_persistent_history"&gt;https://nodejs.org/api/repl.html#repl_persistent_history&lt;/a&gt; ).&lt;/p&gt;

&lt;p&gt;Here's the code for enabling persistent command history - the path is relative to the root of the project ( &lt;a href="https://nodejs.org/api/repl.html#repl_replserver_setuphistory_historypath_callback"&gt;https://nodejs.org/api/repl.html#repl_replserver_setuphistory_historypath_callback&lt;/a&gt; ):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;replServer.setupHistory("./no_commit/repl_history", () =&amp;gt; {
  console.log("Loaded history!")
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I add this at the end of the &lt;code&gt;startConsole()&lt;/code&gt; function above, adding the environment as the filename suffix:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;require("dotenv").config()
console.log(`Starting console - ${process.env.NODE_ENV}`)

const repl = require("repl")
const lib = require("../index.js")
const util = require("util")

const startConsole = async () =&amp;gt; {
  await lib.init()

  util.inspect.defaultOptions.depth = 20
  util.inspect.defaultOptions.colors = true
  util.inspect.defaultOptions.getters = true
  util.inspect.defaultOptions.compact = true
  const replServer = repl.start({
    writer: util.inspect,
    prompt: "&amp;gt; "
  })

  for(key of Object.keys(lib)) {
    replServer.context[key] = lib[key]
  } 

  const historyPath = `./no_commit/repl_history_${process.env.NODE_ENV}`
  replServer.setupHistory(historyPath, () =&amp;gt; {})
}

startConsole()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;It's quite easy to set up an interactive Javascript shell based on Node's REPL module. It can be configured flexibly, have access to application logic, and any installed npm modules.&lt;/p&gt;

&lt;p&gt;Unlike a Chrome console, it can be used to run arbitrary commands on your computer (or a remote computer), and not just for working with a particular application - hence the title of this article.&lt;/p&gt;

</description>
      <category>node</category>
      <category>tooling</category>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>TIL: IntersectionObserver Class in JavaScript</title>
      <author>Jim Reevior</author>
      <pubDate>Sun, 18 Apr 2021 17:24:42 +0000</pubDate>
      <link>https://dev.to/hirozed/til-intersectionobserver-class-in-javascript-53e2</link>
      <guid>https://dev.to/hirozed/til-intersectionobserver-class-in-javascript-53e2</guid>
      <description>&lt;p&gt;Okay, this was a few days ago, but 🤷🏻‍♂️.&lt;/p&gt;

&lt;p&gt;Over the last week, I've been devouring &lt;a href="https://www.udemy.com/course/the-complete-javascript-course/"&gt;The Complete JavaScript Course&lt;/a&gt; as a way to 1. Get over my fear of JavaScript (that's a post for a later time) and 2. Ensure my current carrer as a WordPress developer doesn't stay stuck in the pre-Gutenberg world (that's also another tale for another time).  The course itself was fantastic, and has put me in a better place mentally and emotionally to take on JS/Gutenberg projects.&lt;/p&gt;

&lt;p&gt;There was one section that I wanted to write about today.  It's a feature that I’d never heard of before and would solve some past issues I've seen at work regarding components of a websites sliding into view and triggering an action.&lt;/p&gt;

&lt;p&gt;It’s the ✨ IntersectionObserver ✨ class.&lt;/p&gt;

&lt;p&gt;The JavaScript &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver"&gt;IntersectionObserver&lt;/a&gt; class (which is part of the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"&gt;Intersection Observer API&lt;/a&gt;) can be used to indicate when a portion of a website scrolls a specified distance down the page or within reach of an element:&lt;/p&gt;

&lt;p&gt;From there, you can do wonderful things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set the navigation bar to stick to the top of the page when scrolling past a certain point.&lt;/li&gt;
&lt;li&gt;Lazy load images when or before the come into view.&lt;/li&gt;
&lt;li&gt;Ease sections into view on scroll.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://assets.hirozed.xyz/viewport.png"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7UA7P4tX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.hirozed.xyz/viewport.png" class="article-body-image-wrapper"&gt;&lt;img alt="Screen capture of browser to illustrate the nav reaching a portion of the page." src="https://res.cloudinary.com/practicaldev/image/fetch/s--7UA7P4tX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.hirozed.xyz/viewport.png" width="80%"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below is an example of a sticky navigation from the class’s Github repository:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/jonasschmedtmann/complete-javascript-course/blob/master/13-Advanced-DOM-Bankist/final/script.js#L137-L156"&gt;The Complete JavaScript Course - section 13: Advanced DOM and Events&lt;/a&gt; credit &lt;a href="https://codingheroes.io/"&gt;Jonas Schmedtmann&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Sticky navigation: Intersection Observer API&lt;/span&gt;

&lt;span class="c1"&gt;// Get the first section of content based on the .header class&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;header&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.header&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Get the height of the navigation bar&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;navHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getBoundingClientRect&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Add or remove the sticky class to the nav bar,&lt;/span&gt;
&lt;span class="c1"&gt;// based on the entries retrieved from the IntersectionObserver class.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stickyNav&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// There is only one header, so we don't need to loop,&lt;/span&gt;
  &lt;span class="c1"&gt;// and can deconstruct the array.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// This is where the magic happens.&lt;/span&gt;
  &lt;span class="c1"&gt;// When the header is past the viewport, add the sticky class.&lt;/span&gt;
  &lt;span class="c1"&gt;// Else, when it comes back into view, remove the class.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isIntersecting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sticky&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sticky&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Calling the IntersectionObserver class.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;headerObserver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;IntersectionObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stickyNav&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Declaring null uses the entire viewport.&lt;/span&gt;
  &lt;span class="na"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;//  The percentage of the header to come into view.&lt;/span&gt;
  &lt;span class="na"&gt;rootMargin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;navHeight&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// The offset based on the nav bar's height.&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Get some popcorn, the fun is about to start.&lt;/span&gt;
&lt;span class="nx"&gt;headerObserver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I also want to point out &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect"&gt;&lt;code&gt;getBoundingClientRect&lt;/code&gt;&lt;/a&gt;. This function provides the size of an element and where it's located in relation to the viewport.  In the example above, Jonas only uses the height value, but you can grab the size and the distance from the viewport as well.&lt;/p&gt;

&lt;p&gt;Learning about the Intersection Observer API was an unexpected and exciting piece of the huge amount of information I downloaded into my brain. I can see using the API as a much more reliable method for detecting when sections of the site come into and out of view, and replacing a placeholder with a higher quality image.  Causing text to zoom in when the container div scrolls into view.  The possibilities are endless!&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Week 2 of my 100daysofcode Challenge</title>
      <author>Jean Pierre Chreim</author>
      <pubDate>Sun, 18 Apr 2021 17:14:07 +0000</pubDate>
      <link>https://dev.to/jpchreim/week-2-of-my-100daysofcode-challenge-3jab</link>
      <guid>https://dev.to/jpchreim/week-2-of-my-100daysofcode-challenge-3jab</guid>
      <description>&lt;p&gt;It has been 2 weeks since I started the 100 days of code challenge in which I decided to study and code for at least an hour per day. Allow me to enroll  my achievements for the last week.&lt;/p&gt;

&lt;p&gt;I've completed the basic course in Responsive WEB Design and, surprisingly, I've found that I can acquire a certificate from FreeCodeCamp if I managed to submit 4 projects. From my point of view, this certificate is a great opportunity because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FreeCodeCamp is a well known site, and a certificate from it will bring a  value to my profile.&lt;/li&gt;
&lt;li&gt;We should constantly practice what we learned, as learning without practicing isn't enough.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first project was a tribute page, I didn't encounter any difficulties in doing it, and that's because I've planned everything  before coding.&lt;/p&gt;

&lt;p&gt;In the second project, I had to create a form which  users should submit their information. Unluckily, I couldn't manage to finish it as I had to return my laptop to the dealer because of a camera issue and didn't take any backup of the projects that I'm working on. Thanks to that, I found out the importance of creating GitHub repositories for each project, and to keep it updated.&lt;/p&gt;

&lt;p&gt;This issue didn't stop me from continuing my 100daysofcode journey, so I took a break from these projects, until my laptop returns, and I started with JavaScript which I hardly know how to practice it.&lt;/p&gt;

&lt;p&gt;I've learned the fundamentals, and then jumped to Object manipulating. It wasn't something new as my first programming language was Java, an OOP, but I was surprised with how easy JS is with objects.&lt;/p&gt;

&lt;p&gt;I'm currently on challenge number 92 out of 111 on FreeCodeCamp, after that I'll start with ES6, something I heard quite a little about but never had the opportunity to know what is it and why/when we use it.&lt;br&gt;
How about you? Are you doing the 100daysofcode challenge? If so, where did you reach?&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>webdev</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Weekly Digest 15/2021</title>
      <author>Marco Biedermann</author>
      <pubDate>Sun, 18 Apr 2021 17:09:48 +0000</pubDate>
      <link>https://dev.to/worldindev/weekly-digest-15-2021-50m</link>
      <guid>https://dev.to/worldindev/weekly-digest-15-2021-50m</guid>
      <description>&lt;p&gt;Welcome to my Weekly Digest #15 of this year.&lt;/p&gt;

&lt;p&gt;This weekly digest contains a lot of interesting and inspiring articles, videos, tweets, podcasts, and designs I consumed during this week.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Remember → You can receive these articles directly in your inbox via our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt;&lt;/em&gt; ✉️ &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#interesting-articles-to-read"&gt;
  &lt;/a&gt;
  Interesting articles to read
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#comprehensive-guide-to-using-redux-in-react-native"&gt;
  &lt;/a&gt;
  Comprehensive guide to using Redux in React Native
&lt;/h3&gt;

&lt;p&gt;Using hooks with Redux makes it simple to manage state internally in React Native applications with many components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/comprehensive-guide-to-using-redux-in-react-native/"&gt;Comprehensive guide to using Redux in React Native - LogRocket Blog&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-test-400-react-components-without-breaking-a-sweat"&gt;
  &lt;/a&gt;
  How to test 400 React components without breaking a sweat
&lt;/h3&gt;

&lt;p&gt;Your organization’s development experience can be detrimental to your ability to ship code to your clients. There is a very delicate balance that needs to be found between testing your code and design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/kenshoos-engineering-blog/how-to-test-400-react-components-without-breaking-a-sweat-aa304a5cc72b"&gt;How to test 400 React components without breaking a sweat&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#seven-mistakes-to-avoid-in-your-technical-interviews"&gt;
  &lt;/a&gt;
  Seven Mistakes To Avoid In Your Technical Interviews
&lt;/h3&gt;

&lt;p&gt;It’s no secret that the technical interview process leaves something to be desired; it’s often riddled with anxiety and stress. In this article, we’ll take a look at seven of the most common mistakes candidates make in their technical interviews and explore ways you can avoid them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.smashingmagazine.com/2021/04/mistakes-technical-interviews/"&gt;Seven Mistakes To Avoid In Your Technical Interviews - Smashing Magazine&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#overcoming-7-main-problems-of-learning-to-code-for-people-who-dont-have-a-developer-job"&gt;
  &lt;/a&gt;
  Overcoming 7 main problems of learning to code for people who don’t have a developer job
&lt;/h3&gt;

&lt;p&gt;If you don’t have a job as a developer, learning how to code becomes a much bigger challenge for a simple reason — developers can learn to code on the job.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zellwk.com/blog/7-challenges-of-learning-code/"&gt;Overcoming 7 main problems of learning to code for people who don't have a developer job&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generating-sudokus-in-css"&gt;
  &lt;/a&gt;
  Generating Sudokus in CSS
&lt;/h3&gt;

&lt;p&gt;Challenging ourselves to solve logical problems with only CSS and HTML can force us to spend quality time with some of the newish, programing-like features of CSS, such as custom properties and logical functions. It still wasn’t clear how these could be used to build a Sudoku solver using only CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://css-tricks.com/generating-and-solving-sudokus-in-css/"&gt;Generating (and Solving!) Sudokus in CSS | CSS-Tricks&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#some-great-videos-i-watched-this-week"&gt;
  &lt;/a&gt;
  Some great videos I watched this week
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#mocking-apis-during-development-in-react"&gt;
  &lt;/a&gt;
  Mocking APIs During Development in React
&lt;/h3&gt;

&lt;p&gt;In this video, we'll use MSW (Mock Service Worker) to mock HTTP requests both on the browser but also on the server during SSR (Server Side Rendering) in Next.js&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HkWciooQVvA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/leighchalliday"&gt;Leigh Halliday&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cracking-enigma-in-2021"&gt;
  &lt;/a&gt;
  Cracking Enigma in 2021
&lt;/h3&gt;

&lt;p&gt;Enigma is known as the WWII cipher, but how does it hold up in 2021? Dr. Mike Pound implemented it and shows how it stacks up against his laptop.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RzWB5jL5RX0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/computer_phile"&gt;Computerphile&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-in-chrome-90"&gt;
  &lt;/a&gt;
  New in Chrome 90
&lt;/h3&gt;

&lt;p&gt;Chrome 90 is rolling out now! There’s a new value for the CSS overflow property. The Feature Policy API has been renamed to Permission Policy. And there’s a new way to implement and use Shadow DOM directly in HTML. Plus there’s plenty more.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/h3MONldIoNM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/ChromiumDev"&gt;Google Chrome Developers&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#particle-systems-with-image-textures"&gt;
  &lt;/a&gt;
  Particle Systems with Image Textures
&lt;/h3&gt;

&lt;p&gt;It's time to expand beyond grayscale particles! In this video, Shiffman demonstrates how to make a fire or smoke-like effect by using image textures and additive blending with a particle system.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pUhv2CA0omA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/shiffman"&gt;Daniel Shiffman&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-storybook-stories-with-testing-library"&gt;
  &lt;/a&gt;
  Using Storybook stories with Testing Library
&lt;/h3&gt;

&lt;p&gt;Did you know that you can import your stories from Storybook and run them as tests? Jimmy recently learned about this cool idea and he's going to show some examples he put together that showcase some of the benefits of doing so. He'll be using React, Jest, and Testing Library for these examples, but many of the concepts will apply to other frameworks and setups as well.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/k6NG96awIJ0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/JimmyDCleveland"&gt;Jimmy Cleveland&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-git-bisect-to-quickly-find-the-origin-of-a-bug"&gt;
  &lt;/a&gt;
  Using git bisect to quickly find the origin of a bug
&lt;/h3&gt;

&lt;p&gt;git bisect is a really useful command for locating the origin commit of a bug or behavior.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aulaZBVS16g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/JimmyDCleveland"&gt;Jimmy Cleveland&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#useful-github-repositories"&gt;
  &lt;/a&gt;
  Useful GitHub repositories
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#reacthottoast"&gt;
  &lt;/a&gt;
  react-hot-toast
&lt;/h3&gt;

&lt;p&gt;Add beautiful notifications to your React app with react-hot-toast. Lightweight. Smoking hot by default.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/timolins"&gt;
        timolins
      &lt;/a&gt; / &lt;a href="https://github.com/timolins/react-hot-toast"&gt;
        react-hot-toast
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Smoking hot React Notifications 🔥 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://react-hot-toast.com/" rel="nofollow"&gt;&lt;img alt="react-hot-toast - Try it out" src="https://res.cloudinary.com/practicaldev/image/fetch/s--0uqBiz-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/timolins/react-hot-toast/raw/main/assets/header.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d29f5a4b5aa933272131e96cb46c3951b3c6acf0bdc6774f5514ed841b84a09e/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f72656163742d686f742d746f617374"&gt;&lt;img src="https://camo.githubusercontent.com/d29f5a4b5aa933272131e96cb46c3951b3c6acf0bdc6774f5514ed841b84a09e/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f72656163742d686f742d746f617374" alt="NPM Version"&gt;&lt;/a&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/46192653af7d39ad7fd68841e70c458163c1e397c2689fc075ff765755d10fb0/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d686f742d746f617374"&gt;&lt;img src="https://camo.githubusercontent.com/46192653af7d39ad7fd68841e70c458163c1e397c2689fc075ff765755d10fb0/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d686f742d746f617374" alt="minzipped size"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/timolins/react-hot-toast/workflows/CI/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZdTOI5vk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/timolins/react-hot-toast/workflows/CI/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div&gt;&lt;strong&gt;Smoking hot  Notifications for React.&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt; Lightweight, customizable and beautiful by default.&lt;/div&gt;
&lt;br&gt;
&lt;div&gt;
&lt;a href="https://react-hot-toast.com/" rel="nofollow"&gt;Website&lt;/a&gt;
&lt;span&gt; · &lt;/span&gt;
&lt;a href="https://react-hot-toast.com/docs" rel="nofollow"&gt;Documentation&lt;/a&gt;
&lt;span&gt; · &lt;/span&gt;
&lt;a href="https://twitter.com/timolins" rel="nofollow"&gt;Twitter&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div&gt;
  Cooked by &lt;a href="https://twitter.com/timolins" rel="nofollow"&gt;Timo Lins&lt;/a&gt; 👨‍🍳
&lt;/div&gt;
&lt;br&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
🔥 &lt;strong&gt;Hot by default&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
🔩 &lt;strong&gt;Easily Customizable&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
⏳ &lt;strong&gt;Promise API&lt;/strong&gt; - &lt;em&gt;Automatic loader from a promise&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
🕊 &lt;strong&gt;Lightweight&lt;/strong&gt; - &lt;em&gt;less than 5kb including styles&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
✅ &lt;strong&gt;Accessible&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
🤯 &lt;strong&gt;Headless Hooks&lt;/strong&gt; - &lt;em&gt;Create your own with &lt;a href="https://react-hot-toast.com/docs/use-toaster" rel="nofollow"&gt;&lt;code&gt;useToaster()&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h4&gt;
With yarn&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;yarn add react-hot-toast&lt;/pre&gt;

&lt;/div&gt;
&lt;h4&gt;
With NPM&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;npm install react-hot-toast&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;p&gt;Add the Toaster to your app first. It will take care of rendering all notifications emitted. Now you can trigger &lt;code&gt;toast()&lt;/code&gt; from anywhere!&lt;/p&gt;
&lt;div class="highlight highlight-source-js js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s1"&gt;toast&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;Toaster&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-hot-toast'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-en"&gt;notify&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;toast&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'Here is your toast.'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-v"&gt;App&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;
    &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;button&lt;/span&gt; &lt;span class="pl-c1"&gt;onClick&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-en"&gt;notify&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;Make me a toast&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;button&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Toaster&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/timolins/react-hot-toast"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#headless-ui"&gt;
  &lt;/a&gt;
  Headless UI
&lt;/h3&gt;

&lt;p&gt;A set of completely unstyled, fully accessible UI components, designed to integrate beautifully with Tailwind CSS.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/tailwindlabs"&gt;
        tailwindlabs
      &lt;/a&gt; / &lt;a href="https://github.com/tailwindlabs/headlessui"&gt;
        headlessui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Completely unstyled, fully accessible UI components, designed to integrate beautifully with Tailwind CSS.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h3&gt;

  Headless UI
&lt;/h3&gt;
&lt;p&gt;
  A set of completely unstyled, fully accessible UI components, designed to integrate
  beautifully with Tailwind CSS.
&lt;/p&gt;




&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;For full documentation, visit &lt;a href="https://headlessui.dev" rel="nofollow"&gt;headlessui.dev&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Packages&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Downloads&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tailwindlabs/headlessui/tree/main/packages/%40headlessui-react"&gt;&lt;code&gt;@headlessui/react&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@headlessui/react" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8b86fb1651520735aa06cac28ae83195fdf0a7a25db2b7a82207e4985776677/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40686561646c65737375692f72656163742e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@headlessui/react" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/efa8c6e3c68a7ae65b20f5322b4ed813b6cf28cb3a4a1de42652063646562220/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f40686561646c65737375692f72656163742e737667" alt="npm downloads"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tailwindlabs/headlessui/tree/main/packages/%40headlessui-vue"&gt;&lt;code&gt;@headlessui/vue&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@headlessui/vue" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6aabdab22506d6bbc799408b337c8695a258eb16acb4f26c55972685af953a71/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40686561646c65737375692f7675652e737667" alt="npm version"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@headlessui/vue" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b0f4f42b50460671316cecd7c72765d76201bf2c333d20c3734170918acfc29/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f40686561646c65737375692f7675652e737667" alt="npm downloads"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
Community&lt;/h2&gt;
&lt;p&gt;For help, discussion about best practices, or any other conversation that would benefit from being searchable:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/tailwindlabs/headlessui/discussions"&gt;Discuss Headless UI on GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For casual chit-chat with others using the library:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://discord.gg/7NF8GNe" rel="nofollow"&gt;Join the Tailwind CSS Discord Server&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/tailwindlabs/headlessui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#free-python-books"&gt;
  &lt;/a&gt;
  Free Python Books
&lt;/h3&gt;

&lt;p&gt;A list of Python books in English that are free to read online or download.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pamoroso"&gt;
        pamoroso
      &lt;/a&gt; / &lt;a href="https://github.com/pamoroso/free-python-books"&gt;
        free-python-books
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Python books free to read online or download
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/pamoroso/free-python-books/blob/master/free-python-books-logo.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ugl9dMKQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/pamoroso/free-python-books/raw/master/free-python-books-logo.jpg" alt="Free Python Books project logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Free Python Books&lt;/h1&gt;
&lt;p&gt;A list of Python books in English that are free to read online or download.&lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#how-the-list-got-started"&gt;How the list got started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#whats-in-the-list"&gt;What's in the list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#why-free-books"&gt;Why free books?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#how-to-contribute"&gt;How to contribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#list-of-free-python-books"&gt;List of free Python books&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#introductory"&gt;Introductory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#intermediate"&gt;Intermediate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#advanced"&gt;Advanced&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#ai-and-machine-learning"&gt;AI and Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#computer-science"&gt;Computer Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#software-engineering-and-best-practices"&gt;Software Engineering and best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#gui"&gt;GUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#web-development"&gt;Web development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#data-science"&gt;Data science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#science"&gt;Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#jupyter-notebook"&gt;Jupiter Notebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#engineering"&gt;Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#cryptography"&gt;Cryptography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#games"&gt;Games&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#lists-of-free-python-books"&gt;Lists of free Python books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pamoroso/free-python-books/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
How the list got started&lt;/h2&gt;
&lt;p&gt;I had been learning Python for a few weeks when, in January, 2019, I stumbled upon &lt;a href="https://www.reddit.com/r/learnpython/comments/amyryp/what_would_you_suggest_a_person_new_to/" rel="nofollow"&gt;a Reddit post in r/learnpython&lt;/a&gt; seeking suggestions on how to become a better programmer.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/learnpython/comments/amyryp/what_would_you_suggest_a_person_new_to/efps9cs/" rel="nofollow"&gt;One of the comments&lt;/a&gt; asked for good books or websites about algorithms and data structures. I had collected links to useful Python learning resources among which the free ebook &lt;a href="https://interactivepython.org/runestone/static/pythonds/index.html#problem-solving-with-algorithms-and-data-structures-using-python" rel="nofollow"&gt;Problem Solving with Algorithms and Data Structures using Python&lt;/a&gt;, so I…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pamoroso/free-python-books"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#dupeguru"&gt;
  &lt;/a&gt;
  dupeGuru
&lt;/h3&gt;

&lt;p&gt;dupeGuru is a cross-platform (Linux, OS X, Windows) GUI tool to find duplicate files in a system. It’s written mostly in Python 3 and has the peculiarity of using multiple GUI toolkits, all using the same core Python code. On OS X, the UI layer is written in Objective-C and uses Cocoa. On Linux &amp;amp; Windows, it’s written in Python and uses Qt5.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/arsenetar"&gt;
        arsenetar
      &lt;/a&gt; / &lt;a href="https://github.com/arsenetar/dupeguru"&gt;
        dupeguru
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Find duplicate files
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
dupeGuru&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://dupeguru.voltaicideas.net/" rel="nofollow"&gt;dupeGuru&lt;/a&gt; is a cross-platform (Linux, OS X, Windows) GUI tool to find duplicate files in
a system. It is written mostly in Python 3 and has the peculiarity of using
&lt;a href="http://www.hardcoded.net/articles/cross-toolkit-software" rel="nofollow"&gt;multiple GUI toolkits&lt;/a&gt;, all using the same core Python code. On OS X, the UI layer
is written in Objective-C and uses Cocoa. On Linux, it is written in Python and uses Qt5.&lt;/p&gt;
&lt;p&gt;The Cocoa UI of dupeGuru is hosted in a separate repo: &lt;a href="https://github.com/arsenetar/dupeguru-cocoa"&gt;https://github.com/arsenetar/dupeguru-cocoa&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Current status&lt;/h2&gt;
&lt;p&gt;Still looking for additional help especially with regards to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OSX maintenance: reproducing bugs &amp;amp; cocoa version, building package with Cocoa UI.&lt;/li&gt;
&lt;li&gt;Linux maintenance: reproducing bugs, maintaining PPA repository, Debian package.&lt;/li&gt;
&lt;li&gt;Translations: updating missing strings, transifex project at &lt;a href="https://www.transifex.com/voltaicideas/dupeguru-1" rel="nofollow"&gt;https://www.transifex.com/voltaicideas/dupeguru-1&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Documentation: keeping it up-to-date.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contents of this folder&lt;/h2&gt;
&lt;p&gt;This folder contains the source for dupeGuru. Its documentation is in &lt;code&gt;help&lt;/code&gt;, but is also
&lt;a href="http://dupeguru.voltaicideas.net/help/en/" rel="nofollow"&gt;available online&lt;/a&gt; in its built form. Here's how this…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/arsenetar/dupeguru"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dribbble-shots"&gt;
  &lt;/a&gt;
  dribbble shots
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#vpn-mobile-app"&gt;
  &lt;/a&gt;
  VPN Mobile App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FBVaj34N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1343667/screenshots/15473026/media/6d558b7955d74bb27e12e1a31d97217d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FBVaj34N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/1343667/screenshots/15473026/media/6d558b7955d74bb27e12e1a31d97217d.png" alt="https://cdn.dribbble.com/users/1343667/screenshots/15473026/media/6d558b7955d74bb27e12e1a31d97217d.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15473026-VPN-Mobile-App"&gt;Sulton handaya&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fitness-amp-workout-app"&gt;
  &lt;/a&gt;
  Fitness &amp;amp; Workout App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4mpraDnI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/653699/screenshots/15489025/media/d7af516032094ebd13ef3fb0f337b95a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4mpraDnI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/653699/screenshots/15489025/media/d7af516032094ebd13ef3fb0f337b95a.png" alt="https://cdn.dribbble.com/users/653699/screenshots/15489025/media/d7af516032094ebd13ef3fb0f337b95a.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15489025-Fitness-Workout-App"&gt;Gregory Riaguzov&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typefacedirectory-launch"&gt;
  &lt;/a&gt;
  typeface.directory — Launch
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LIfC9zXZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/9548/screenshots/15489793/media/5b367521489b0143a13f6b936af610a5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LIfC9zXZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/9548/screenshots/15489793/media/5b367521489b0143a13f6b936af610a5.png" alt="https://cdn.dribbble.com/users/9548/screenshots/15489793/media/5b367521489b0143a13f6b936af610a5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15489793-typeface-directory-Launch"&gt;Jason Reynolds&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#job-finder"&gt;
  &lt;/a&gt;
  Job Finder
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lzsM2JD5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/4347686/screenshots/15487142/media/da7016fb4c7cb8b95b04fc53659a8654.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lzsM2JD5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/4347686/screenshots/15487142/media/da7016fb4c7cb8b95b04fc53659a8654.png" alt="https://cdn.dribbble.com/users/4347686/screenshots/15487142/media/da7016fb4c7cb8b95b04fc53659a8654.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15487142-Job-Finder"&gt;Vetrick Wilsen&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tweets"&gt;
  &lt;/a&gt;
  Tweets
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i8RS6OXv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EzCAtc2VoAAmOHd.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i-iGSZtE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/877525007185858562/7G9vGTca_normal.jpg" alt="Wes Bos profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Wes Bos
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/wesbos"&gt;@wesbos&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Wow I just learned in VS code you don't need to type var(-- to see your CSS variables, just -- and it will wrap it in var(). 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:24 PM - 15 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1382746620039557122" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1382746620039557122" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1382746620039557122" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lnOQin28--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1382337808363323397/pu/img/3gVLQ3Blv6BSIYPj.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--JkYP1OI0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1055142255722344448/xhqy_EUP_normal.jpg" alt="StackBlitz profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        StackBlitz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @stackblitz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      🤯 Browsers are awesome! (2):&lt;br&gt;&lt;br&gt;With `BarcodeDetector` you decode linear and two-dimensional (e.g. QR Code) codes directly in a browser! 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:20 PM - 14 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1382337979767742464" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1382337979767742464" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1382337979767742464" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tPRA-sp5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EywvXKHWQAo9aws.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--4wWk_AHl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/573206276819140608/gKAusMeX_normal.jpeg" alt="Sebastien Lorber 🇫🇷 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Sebastien Lorber 🇫🇷
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/sebastienlorber"&gt;@sebastienlorber&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Can we make this happen? 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      08:55 AM - 12 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1381531326298398730" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1381531326298398730" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1381531326298398730" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--frHKhIA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1382647198337409028/pu/img/lCuE9aYzBMRp2xtb.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--o4RXk78J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1226492305370161154/amstP2k2_normal.jpg" alt="Hakim El Hattab profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Hakim El Hattab
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @hakimel
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Adding auto-scrolled keyboard navigation was surprisingly painless with:&lt;br&gt;&lt;br&gt;scrollIntoView({behavior: 'smooth', block: 'nearest'});&lt;br&gt;+&lt;br&gt;scroll-padding: 2em;&lt;br&gt;&lt;br&gt;❤️ 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:56 AM - 15 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1382649102496899073" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1382649102496899073" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1382649102496899073" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a-rLwYPg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1382312686676013063/pu/img/UhK34PLFqd_B3cnB.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-t4xsHf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/989873176002916353/C8r0x7TC_normal.jpg" alt="Andreas Weiland profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Andreas Weiland
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @aweiland
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      is this not the most beautiful thing ever! (by Calvin Smith) 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:40 PM - 14 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1382312922806894593" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1382312922806894593" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1382312922806894593" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;h2&gt;
  &lt;a href="#picked-pens"&gt;
  &lt;/a&gt;
  Picked Pens
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#snappy-fruits"&gt;
  &lt;/a&gt;
  Snappy fruits
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pavlovsk/embed/ExZExYW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/scriptype"&gt;Mustafa Enes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raging-sea"&gt;
  &lt;/a&gt;
  The Raging Sea
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aderaaij/embed/XWpMONO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/ardennl"&gt;Arden&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pure-css-range-rover-truck"&gt;
  &lt;/a&gt;
  Pure CSS Range Rover Truck
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/MWWowEb?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/jh3yy"&gt;Jhey&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#podcasts-worth-listening"&gt;
  &lt;/a&gt;
  Podcasts worth listening
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-css-podcast-nmatch-notation"&gt;
  &lt;/a&gt;
  The CSS Podcast: N-match Notation
&lt;/h3&gt;

&lt;p&gt;Welcome back to The CSS Podcast, where we cover all things CSS from accessibility to c-index. Today, Una and Adam will discuss a micro syntax for pseudo-class notification when working with nth-child.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/0QWnb3VbNTRPWiAEc3gUYA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hasty-treat-css-nesting-1"&gt;
  &lt;/a&gt;
  Hasty Treat - CSS Nesting 1
&lt;/h3&gt;

&lt;p&gt;In this Hasty Treat, Scott and Wes talk about CSS nesting — what it is, when to use it, and why.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/1HPJKEbZVgQrRNMGaxvgmp"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dev-tools-tabs-explained-plus-tips-amp-tricks"&gt;
  &lt;/a&gt;
  Dev Tools Tabs Explained — Plus Tips &amp;amp; Tricks
&lt;/h3&gt;

&lt;p&gt;In this episode of Syntax, Scott and Wes talk about dev tools tabs, what each tab does and how you can use them.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5lIyuwrAUDWXppXhgrgpAC"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#event-tracking-amp-appcues"&gt;
  &lt;/a&gt;
  Event Tracking &amp;amp; Appcues
&lt;/h3&gt;

&lt;p&gt;Marie &amp;amp; Chris talk about the brand new event tracking feature in Appcues. We’re still pretty stoked we can even afford Appcues since it’s super pricey software for our company. The fact that they just released event tracking dashboards makes it feel much more affordable though because this unlocks super valuable information for us instantly.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2Pvqi1aczkppaKVPhNoCeL"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Thank you for reading, talk to you next week, and stay safe! 👋&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Subscribe to our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt; to receive our weekly recap directly on your email!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Or join us on &lt;a href="https://discord.gg/aWS2YKk6"&gt;Discord&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>LeetCode String to Integer (atoi)</title>
      <author>Alkesh Ghorpade</author>
      <pubDate>Sun, 18 Apr 2021 16:39:47 +0000</pubDate>
      <link>https://dev.to/_alkesh26/leetcode-string-to-integer-atoi-3ph0</link>
      <guid>https://dev.to/_alkesh26/leetcode-string-to-integer-atoi-3ph0</guid>
      <description>&lt;h3&gt;
  &lt;a href="#problem-statement"&gt;
  &lt;/a&gt;
  Problem statement
&lt;/h3&gt;

&lt;p&gt;Implement the myAtoi(string s) function, which converts a string to a 32-bit signed integer&lt;br&gt;
(similar to C/C++'s atoi function).&lt;/p&gt;

&lt;p&gt;Problem statement taken from: &lt;a href="https://leetcode.com/problems/string-to-integer-atoi"&gt;&lt;/a&gt;&lt;a href="https://leetcode.com/problems/string-to-integer-atoi"&gt;https://leetcode.com/problems/string-to-integer-atoi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: s = "42"
Output: 42
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: s = "      -142"
Output: 142
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 3:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: s = "871 and words"
Output: 871
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 4:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: s = "Words and then number 987"
Output: 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 5:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: s = "-91283472332"
Output: -2147483648
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Constraints:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- 0 &amp;lt;= s.length &amp;lt;= 200
- s consists of English letters (lower-case and upper-case), digits (0-9), ' ', '+', '-', and '.'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h3&gt;

&lt;p&gt;The problem is simple, but we need to think of few edge cases.&lt;br&gt;
Below are the observations from the above examples -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ignore all leading whitespace.&lt;/li&gt;
&lt;li&gt;Check if &lt;strong&gt;+&lt;/strong&gt; or &lt;strong&gt;-&lt;/strong&gt; symbol is used.&lt;/li&gt;
&lt;li&gt;Read the numbers till the next non-digit character or string end is reached.&lt;/li&gt;
&lt;li&gt;If the integer is out on 32-bit signed integer range &lt;strong&gt;[-2^31, 2^31 - 1]&lt;/strong&gt; we return either of
these limits based on integer sign.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#algorithm"&gt;
  &lt;/a&gt;
  Algorithm
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- Initialize intMax = 2^31 - 1 and intMin = -2^31
- Initialize length to string length
- Initialize positive = true and set i = 0

// Remove all leading whitespace.
- Loop while i &amp;lt; length &amp;amp;&amp;amp; s[i] == ' '
  - i++

// we use this for maintaining the sign of integer
- Set flag = 1

- if i &amp;lt; length &amp;amp;&amp;amp; s[i] == '+' || s[i] == '-'
  - Set flag to -1 if s[i] == [-]
  - i++

// if the string starts with a word
- if s[i] &amp;lt; '0' || s[i] &amp;gt; '9'
  - return 0

- Set num = 0

- Loop while i &amp;lt; length &amp;amp;&amp;amp; s[i] &amp;gt;= '0' &amp;amp;&amp;amp; s[i] &amp;lt;= '9'

  // first we verify for integer overflow and return INT_MAX or INT_MIN based on flag
  - if num &amp;gt; INT_MAX/10 || (num == INT_MAX/10 &amp;amp;&amp;amp; s[i] - '0' &amp;gt; 7))
    - return INT_MAX or INT_MIN if flag = 1 or flag = -1

  - set num = num*10 + s[i] - '0'

- return num * flag
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#c-solution"&gt;
  &lt;/a&gt;
  C++ solution
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;myAtoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;isPositive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'-'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;isPositive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'+'&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="sc"&gt;'9'&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;INT_MAX&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;INT_MAX&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;isPositive&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;INT_MAX&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;INT_MIN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;isPositive&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;*-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#golang-solution"&gt;
  &lt;/a&gt;
  Golang solution
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;myAtoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;rune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;intMax&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;intMin&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;' '&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'-'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;'-'&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="sc"&gt;'9'&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;digit&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="sc"&gt;'0'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intMax&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;digit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;intMin&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;digit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;intMax&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;intMin&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;digit&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#javascript-solution"&gt;
  &lt;/a&gt;
  Javascript solution
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;myAtoi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;intMin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;intMax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;positive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;positive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;positive&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;intMin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;intMin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;intMax&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;intMax&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's dry-run our algorithm to see how the solution works.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;s = "      -142"

Step 1: intMax = 2^31 - 1
        intMin = -2^31.

Step 2: length = s.length
        = 10

Step 3: length != 0
        10 != 0
        so we won't return 0

Step 4: i = 0

Step 5: while s[i] == ' '
          i++

        so i will be 6 after this loop

Step 6: flag = 1

Step 7: if i &amp;lt; length &amp;amp;&amp;amp; s[i] == '+' or s[i] == '-'
          s[i] == '-'
          flag = -1

Step 8: if s[i] &amp;lt; '0' || s[i] &amp;gt; '9'
          s[i] = '4'
          so we won't return 0

Step 9: num = 0

Step 10: while i &amp;lt; length &amp;amp;&amp;amp; s[i] &amp;gt;= '0' &amp;amp;&amp;amp; s[i] &amp;lt;= '9'
           i = 7
           s[i] = '1'
           num = num * 10 + s[i] - '0'
               = 0 * 10 + '1' - '0'
               = 1

           i = 8
           s[i] = '4'
           num = num * 10 + s[i] - '0'
               = 1 * 10 + '4' - '0'
               = 14

           i = 9
           s[i] = '2'
           num = num * 10 + s[i] - '0'
               = 14 * 10 + '2' - '0'
               = 142

num = num * flag
    = 142 * -1
    = -142

We return -142
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>cpp</category>
      <category>javascript</category>
      <category>go</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Excelize 2.4.0 is Released – New support 152 formula functions</title>
      <author>xuri</author>
      <pubDate>Sun, 18 Apr 2021 16:32:14 +0000</pubDate>
      <link>https://dev.to/xuri/excelize-2-4-0-is-released-new-support-152-formula-functions-23nc</link>
      <guid>https://dev.to/xuri/excelize-2-4-0-is-released-new-support-152-formula-functions-23nc</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f_rS1swf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://xuri.me/excelize/images/excelize.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f_rS1swf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://xuri.me/excelize/images/excelize.svg" width="440" alt="github.com/360EntSecGroup-Skylar/excelize"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Excelize is a library written in pure Go providing a set of functions that allow you to write to and read from XLSX / XLSM / XLTM files. Supports reading and writing spreadsheet documents generated by Microsoft Excel™ 2007 and later. Supports complex components by high compatibility, and provided streaming API for generating or reading data from a worksheet with huge amounts of data.&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href="https://github.com/xuri/excelize"&gt;github.com/xuri/excelize&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are pleased to announce the release of version 2.4.0. Featured are a handful of new areas of functionality and numerous bug fixes.&lt;/p&gt;

&lt;p&gt;A summary of changes is available in the &lt;a href="https://github.com/360EntSecGroup-Skylar/excelize/releases/tag/v2.4.0"&gt;Release Notes&lt;/a&gt;. A full list of changes is available in the &lt;a href="https://github.com/360EntSecGroup-Skylar/excelize/compare/v2.3.2...v2.4.0"&gt;changelog&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#release-notes"&gt;
  &lt;/a&gt;
  Release Notes
&lt;/h2&gt;

&lt;p&gt;The most notable changes in this release are:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#compatibility"&gt;
  &lt;/a&gt;
  Compatibility
&lt;/h3&gt;

&lt;p&gt;Upgrade requirements Go language version is 1.15 or later.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notable-features"&gt;
  &lt;/a&gt;
  Notable Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;New API &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.GetCellRichText"&gt;&lt;code&gt;GetCellRichText&lt;/code&gt;&lt;/a&gt; support to get the rich text of cell by given worksheet&lt;/li&gt;
&lt;li&gt;Now support to set and get: print scaling, print black and white, and specified the first printed page number of the worksheet by &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.SetPageLayout"&gt;&lt;code&gt;SetPageLayout&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.GetPageLayout"&gt;&lt;code&gt;GetPageLayout&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Now support to change and get tab color of the worksheet by &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.SetSheetPrOptions"&gt;&lt;code&gt;SetSheetPrOptions&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.GetSheetPrOptions"&gt;&lt;code&gt;GetSheetPrOptions&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.SetCellHyperlink"&gt;&lt;code&gt;SetCellHyperlink&lt;/code&gt;&lt;/a&gt; now support to set hyperlink display &amp;amp; tooltips text, related issue #790&lt;/li&gt;
&lt;li&gt;Support &lt;code&gt;ShowError&lt;/code&gt; option when adding the pivot table&lt;/li&gt;
&lt;li&gt;Support setting formula for cell in streaming API, related issue #625&lt;/li&gt;
&lt;li&gt;The formula calculation engine now supports not equal operator&lt;/li&gt;
&lt;li&gt;The nested formula function now supports cell references as arguments&lt;/li&gt;
&lt;li&gt;Support to specifies that each data marker in the series has a different color&lt;/li&gt;
&lt;li&gt;New support 152 formula functions: ATAN, AVERAGE, AVERAGEA, BESSELI, BESSELJ, BIN2DEC, BIN2HEX, BIN2OCT, BITAND, BITLSHIFT, BITOR, BITRSHIFT, BITXOR, CHAR, CHOOSE, CLEAN, CODE, COLUMN, COLUMNS, COMPLEX, CONCAT, CONCATENATE, COUNT, COUNTBLANK, CUMIPMT, CUMPRINC, DATE, DATEDIF, DB, DDB, DEC2BIN, DEC2HEX, DEC2OCT, DOLLARDE, DOLLARFR, EFFECT, ENCODEURL, EXACT, FALSE, FIND, FINDB, FISHER, FISHERINV, FIXED, FV, FVSCHEDULE, GAMMA, GAMMALN, HARMEAN, HEX2BIN, HEX2DEC, HEX2OCT, HLOOKUP, IF, IFERROR, IMABS, IMAGINARY, IMARGUMENT, IMCONJUGATE, IMCOS, IMCOSH, IMCOT, IMCSC, IMCSCH, IMDIV, IMEXP, IMLN, IMLOG10, IMLOG2, IMPOWER, IMPRODUCT, IMREAL, IMSEC, IMSECH, IMSIN, IMSINH, IMSQRT, IMSUB, IMSUM, IMTAN, IPMT, IRR, ISTEXT, ISPMT, KURT, LARGE, LEFT, LEFTB, LEN, LENB, LOOKUP, LOWER, MAX, MID, MIDB, MIN, MINA, MIRR, N, NOMINAL, NORM.DIST, NORMDIST, NORM.INV, NORMINV, NORM.S.DIST, NORMSDIST, NORM.S.INV, NORMSINV, NOT, NOW, NPER, NPV, OCT2BIN, OCT2DEC, OCT2HEX, PDURATION, PERCENTILE.INC, PERCENTILE, PERMUT, PERMUTATIONA, PMT, POISSON.DIST, POISSON, PPMT, PROPER, QUARTILE, QUARTILE.INC, REPLACE, REPLACEB, REPT, RIGHT, RIGHTB, ROMAN, ROW, ROWS, SHEET, SKEW, SMALL, STDEV, STDEV.S, STDEVA, SUBSTITUTE, T, TODAY, TRIM, TRUE, UNICHAR, UNICODE, UPPER, VAR.P, VARP, VLOOKUP&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#improve-the-compatibility"&gt;
  &lt;/a&gt;
  Improve the Compatibility
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Now set the empty string for the cell when &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.SetCellValue"&gt;&lt;code&gt;SetCellValue&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;nil&lt;/code&gt;, resolve issue #756&lt;/li&gt;
&lt;li&gt;Remove useless internal XML omitempty tag on style pattern fill color&lt;/li&gt;
&lt;li&gt;Fix compatibility issue of Google Sheets offline browser extension #769&lt;/li&gt;
&lt;li&gt;Use absolute reference in the auto filters defined name to make it compatible with OpenOffice, resolve issue #776&lt;/li&gt;
&lt;li&gt;Handle end element event in the worksheet row/column iterator XML SAX parser, faster row/column iterate and fix inconsistent read rows count of the file in some case&lt;/li&gt;
&lt;li&gt;Improves compatibility for worksheet relative XML path&lt;/li&gt;
&lt;li&gt;Avoid duplicate rich text string items #787&lt;/li&gt;
&lt;li&gt;Improves compatibility for absolute XML path, Windows-style directory separator, and inline namespace&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#bug-fixes"&gt;
  &lt;/a&gt;
  Bug Fixes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fix round precision issue #764&lt;/li&gt;
&lt;li&gt;Add missing fields and change the order of the fields of workbook fields, prevent generate the corrupted file in some case, resolve issue #766&lt;/li&gt;
&lt;li&gt;Fix hyperbolic cotangent calculation incorrect&lt;/li&gt;
&lt;li&gt;Correct adjust calculation chain in duplicate rows, resolve issue #774&lt;/li&gt;
&lt;li&gt;Correct adjust defined name in the workbook when deleting a worksheet, resolve issue #775&lt;/li&gt;
&lt;li&gt;Fix cyclomatic complexity issue of internal function &lt;code&gt;newFills&lt;/code&gt; and &lt;code&gt;parseToken&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Fix custom row height check issue&lt;/li&gt;
&lt;li&gt;Fix unmerge all cells cause corrupted file, resolve issue #782&lt;/li&gt;
&lt;li&gt;Fix part of auto filter rules missing after saved&lt;/li&gt;
&lt;li&gt;Fix &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.UpdateLinkedValue"&gt;&lt;code&gt;UpdateLinkedValue&lt;/code&gt;&lt;/a&gt; which returns an error when has chart sheet or dialog sheet&lt;/li&gt;
&lt;li&gt;Fix incorrect default column from &lt;a href="https://pkg.go.dev/github.com/360EntSecGroup-Skylar/excelize/v2@v2.4.0#File.GetColWidth"&gt;&lt;code&gt;GetColWidth&lt;/code&gt;&lt;/a&gt; in some case&lt;/li&gt;
&lt;li&gt;Fix can't add timelines and slicers for a pivot table in generated spreadsheet, resolve issue #804&lt;/li&gt;
&lt;li&gt;Fix incorrect SetDefinedName's &lt;code&gt;localSheetId&lt;/code&gt; attribute to use &lt;code&gt;sheetIndex&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Fix missing cell locked or hidden protection in some case, resolve issue #809&lt;/li&gt;
&lt;li&gt;Fix streaming data writer result missing after call normal API, resolve issue #813&lt;/li&gt;
&lt;li&gt;Fix the negative values series missing chart color issue&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Faster numeric precision process&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#miscellaneous"&gt;
  &lt;/a&gt;
  Miscellaneous
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The dependencies module has been updated&lt;/li&gt;
&lt;li&gt;Unit tests and godoc updated&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://xuri.me/excelize"&gt;Documentation website&lt;/a&gt; with multilingual: Arabic, German, Spanish, English, French, Russian, Chinese, Japanese, and Korean, which has been updated&lt;/li&gt;
&lt;li&gt;Welcome join &lt;a href="https://join.slack.com/t/xuri/shared_invite/zt-eriqdkeo-wV04zcCdBiiZveFgY86Wzw"&gt;the Slack channel&lt;/a&gt; or &lt;a href="https://t.me/excelize"&gt;Telegram Group&lt;/a&gt; to meet other members of our community&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>go</category>
      <category>excel</category>
      <category>xlsx</category>
    </item>
    <item>
      <title>My 100DaysofCode</title>
      <author>DHANUSH N</author>
      <pubDate>Sun, 18 Apr 2021 16:29:07 +0000</pubDate>
      <link>https://dev.to/dhanushxeno/my-100daysofcode-journey-56je</link>
      <guid>https://dev.to/dhanushxeno/my-100daysofcode-journey-56je</guid>
      <description>&lt;p&gt;Self teaching and progressing can be a difficult task, but thanks to internet for making it easy.&lt;/p&gt;

&lt;p&gt;So people who dont know what is 100DaysOfCode&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coding a minimum of an hour each day for 100 days.&lt;/li&gt;
&lt;li&gt;Tweeting your progress with the #100DaysOfCode hashtag&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I started this 100DaysOfCode when I was an employee and not as a student. When I was a student I was not aware that this kind of challenge exists even though I would code a lot during college days. I joined twitter on April 2014 but didn't but was not a regular user. During 2020, COVID crisis, at quarantine when I logged into twitter I found this hashtag #100DaysOfCode randomly on a post, then I checked with few people whom I know and came to know about this challenge.&lt;/p&gt;

&lt;p&gt;So I started and tried myself to be consistent and did various tech oriented codes of my interest. I see few projects get inspired learn them and start creating projects. This challenge made me to learn more technologies which I am usually passionate about. &lt;/p&gt;

&lt;p&gt;Below is the list of codes over my #100DaysOfCode journey along with their twitter links. If you have any doubts on any of the below projects feel free to reach out to me. Also the below may help anyone who thinks what to do in the 100Days of Codes as it covers various technologies&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#100daysofcode-journey"&gt;
  &lt;/a&gt;
  100DaysOfCode Journey
&lt;/h1&gt;

&lt;p&gt;Day 1 - Created a Deno App&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1300131201538166784?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1300131201538166784?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 2 - Was learning to make a 3D Rubixs Cube&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1300504677407010816?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1300504677407010816?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 3 - Created a 3D Rubixs Cube in Codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1300868535254528000?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1300868535254528000?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 4 - Solved hackerrank puzzles &amp;amp; few freecodecamp tutorials&lt;br&gt;
 &lt;a href="https://twitter.com/Dhanush_Xen/status/1301233408983531526?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1301233408983531526?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 5 - Created a chessboard using HTML &amp;amp; JS only&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1301575456181813248?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1301575456181813248?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 6 - Created a static chess board with pieces &amp;amp; hosted using http server in local&lt;br&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1301953698382270464?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1301953698382270464?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 7 - Tried an animation in codepen&lt;br&gt;
 &lt;a href="https://twitter.com/Dhanush_Xen/status/1302190818455769090?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1302190818455769090?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 8 - Learnt some react &amp;amp; created my first penguin&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1302625180397654019?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1302625180397654019?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 9 - Created a digital dice using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1302990119155105792?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1302990119155105792?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 10 - Machine Precision in Computer Science &lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1303381540106199041?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1303381540106199041?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 11 - RPA &amp;amp; Converted HTML to XML using C#&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1303768054493372416?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1303768054493372416?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 12 - Trying out few js codes&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1304126435464863744?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1304126435464863744?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 13 - Animation in codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1304426888815734784?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1304426888815734784?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 14 - Chrome extension to share quote or image&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1304861281489313792?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1304861281489313792?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 15 - Chrome extension to download bulk images&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1305216127061032960?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1305216127061032960?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 16 - Deployed app in vercel &amp;amp; updated github readme&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1305535526959607808?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1305535526959607808?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 17 - Earned problem solving basic skill in Hackerrank&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1305898978744000513?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1305898978744000513?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 18 -  Started learning Phaser.js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1306269500929531904?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1306269500929531904?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 19 -  Color a winged horse using Phaser.js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1306626168020320256?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1306626168020320256?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 20 - Using github CLI &amp;amp;  some python code&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1306977617740926976?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1306977617740926976?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 21 - Face detection image &amp;amp; video using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1307275760952995842?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1307275760952995842?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 22 - Solved hackerrank problems (4th star in 10DaysOfJS) &amp;amp; game development&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1307719185099665408?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1307719185099665408?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 23 - TDD using Jest in Node JS &amp;amp; spent time reading ML Models&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1308090768368652288?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1308090768368652288?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 24 - Completed some more hackerrank problems(10DaysOfJS) &amp;amp; started with web design&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1308446632686485504?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1308446632686485504?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 25 - A simple android app using java to open a blog site via an app&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1308785292145426436?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1308785292145426436?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 26 - Created a game using phaser js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1309172861379125248?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1309172861379125248?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 27 - Created a twitter bot using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1309530116997836801?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1309530116997836801?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 28 - Spent some time in web designing&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1309856830097555458?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1309856830097555458?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 29 - Text to speech and also convert into mp3 audio file using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1310254229064278016?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1310254229064278016?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 30 - Coded bouncing disco balls in codepen using html &amp;amp; js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1310650204727599104?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1310650204727599104?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 31 - Created a blackboard using html, css &amp;amp; js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1310963860816396294?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1310963860816396294?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 32 - Made the blackboard suitable for mobile devices too&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1311327949916839936?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1311327949916839936?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 33 - A smiling animation in codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1311712673638227970?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1311712673638227970?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 34 - Contributed to hacktoberfest&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1312035011453878274?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1312035011453878274?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 35 - ML Math &amp;amp; Flying spaceship using codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1312420213883772930?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1312420213883772930?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 36 - Spent some time in web designing&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1312763979190554624?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1312763979190554624?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 37 - Worked in Docker&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1313165051486896128?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1313165051486896128?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 38 &amp;amp; 39 - Learning to configure YAML files&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1313528170117644289?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1313528170117644289?s=20&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1313890727756099584?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1313890727756099584?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 40 - Configuring Log management tools ELK Stack&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1314254242450862081?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1314254242450862081?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 41 - Explored Node Js Streams&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1314593489946959872?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1314593489946959872?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 42 - Created a desktop app using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1314998873924857856?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1314998873924857856?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 43 - Extra features for desktop application using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1315311047918534658?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1315311047918534658?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 44 - Explored winston npm for Node Js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1315701437830111232?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1315701437830111232?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 45 - Explored some more log npm packages  &amp;amp; worked on log management tools &lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1316064954710073344?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1316064954710073344?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 46 - Structured &amp;amp; unstructured logs&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1316425788783173632?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1316425788783173632?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 47 - More exploration and implemented logging&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1316742465525698561?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1316742465525698561?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 48 - Worked on Node JS File Streams&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1317147874749157377?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1317147874749157377?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 49 - Web designing for a site &amp;amp; getting ip using node js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1317488651337486338?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1317488651337486338?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 50 &amp;amp; 51 - Exploring about logging implementation in real time systems&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1318246939318644738?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1318246939318644738?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 52 - Fancy text using html &amp;amp; css using codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1318579044472872960?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1318579044472872960?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 53 - CSS Blend mode for images&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1318963227846348800?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1318963227846348800?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 54 - Kibana Visualization for logging&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1319305233298698241?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1319305233298698241?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 55 -Music player using codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1319665113222307840?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1319665113222307840?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 56 - Explored some ML Libraries&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1320052868129255424?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1320052868129255424?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 57 - ML &amp;amp; HTML Tags&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1320400651294142464?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1320400651294142464?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 58 - Flip card using html &amp;amp; css in codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1320740544499175429?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1320740544499175429?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 59 - Color ranger using codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1321112952078954498?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1321112952078954498?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 60 - MongoDb queries in Node Js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1321499674612699136?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1321499674612699136?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 61 - NLP in ML&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1321830128612110336?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1321830128612110336?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 62 - Date functions in js&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1322234911537782784?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1322234911537782784?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 63 - Plot google map using python&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1322582917013336064?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1322582917013336064?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 64 &amp;amp; 65 - Css Flexboxes&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1323257560862920705?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1323257560862920705?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 66 &amp;amp; 67 - Data Science Project for birth rate analysis&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1324007881813884928?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1324007881813884928?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 68 - Revised React Concepts via freeCodeCamp&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1324402616277688320?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1324402616277688320?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 69 to 74 - Working on React in creating interactive UI&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1326530382364176384?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1326530382364176384?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 75 - Completed Managing packages with Node Js via freeCodeCamp&lt;br&gt;
 &lt;a href="https://twitter.com/Dhanush_Xen/status/1326930754534735872?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1326930754534735872?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 76 to 80 - Worked on various web concepts&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1328406556484935680?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1328406556484935680?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 81 to 84 - Created an AIML application &amp;amp; worked on some css &amp;amp; node js concepts&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1329815167698235395?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1329815167698235395?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 85 to 86 - Happy birthday music karaoke in codepen&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1330515927532666880?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1330515927532666880?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 87 to 88 - Explored end to end encryption&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1331249427928018948?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1331249427928018948?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 89 &amp;amp; 90 - Transactions in Node js &amp;amp; Started with Adobe photoshop&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1332014551806529538?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1332014551806529538?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 91&amp;amp; 92 - Using Adobe photoshop &amp;amp; XD created my first poster&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1332713038395314176?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1332713038395314176?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 93 &amp;amp; 94 - More exploration in Adobe photoshop &amp;amp; XD and solved hackerrank problems&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1333466635823312896?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1333466635823312896?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 95 &amp;amp; 96 - React concepts&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1334152549255954434?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1334152549255954434?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 97 to 99 - Solved few coding problems &amp;amp; some designing using Adobe XD&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1335226724670324738?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1335226724670324738?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Day 100 - Solved some more complex problems &amp;amp; decided to start learning AWS&lt;br&gt;
&lt;a href="https://twitter.com/Dhanush_Xen/status/1335603956928548864?s=20"&gt;https://twitter.com/Dhanush_Xen/status/1335603956928548864?s=20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's stay in touch:&lt;br&gt;
Twitter: &lt;a href="https://twitter.com/Dhanush_Xen"&gt;https://twitter.com/Dhanush_Xen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>devjournal</category>
    </item>
  </channel>
</rss>
