<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>☸ Install and Configure WildFly (JBoss) on Ubuntu 20.04 LTS</title>
      <author>Orestis Pantazos</author>
      <pubDate>Wed, 21 Apr 2021 07:21:41 +0000</pubDate>
      <link>https://dev.to/orestispantazos/install-and-configure-wildfly-jboss-on-ubuntu-20-04-lts-266f</link>
      <guid>https://dev.to/orestispantazos/install-and-configure-wildfly-jboss-on-ubuntu-20-04-lts-266f</guid>
      <description>&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Open the Terminal&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Update repository index&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Install the OpenJDK package from APT&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo apt-get install default-jdk&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Create a user and group for WildFly&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo groupadd -r wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo useradd -r -g wildfly -d /opt/wildfly -s /sbin/nologin wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Download the WildFly Installation file&lt;/p&gt;

&lt;p&gt;Version_Number=22.0.1.Final&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;wget https://download.jboss.org/wildfly/&lt;span class="nv"&gt;$Version_Number&lt;/span&gt;/wildfly-&lt;span class="nv"&gt;$Version_Number&lt;/span&gt;.tar.gz &lt;span class="nt"&gt;-P&lt;/span&gt; /tmp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Extract the WildFly tar.gz file to /opt folder&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo tar xf /tmp/wildfly-$Version_Number.tar.gz -C /opt/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; Create a symbolic link to point to the WildFly installation directory&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo ln -s /opt/wildfly-$Version_Number /opt/wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 8:&lt;/strong&gt; Give access to WildFly group and user&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo chown -RH wildfly: /opt/wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 9:&lt;/strong&gt; Configure Wildfly to be run as a service&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo mkdir -p /etc/wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo cp /opt/wildfly/docs/contrib/scripts/systemd/wildfly.conf /etc/wildfly/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo nano /etc/wildfly/wildfly.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;**WILDFLY_BIND=0.0.0.0**&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo cp /opt/wildfly/docs/contrib/scripts/systemd/launch.sh /opt/wildfly/bin/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo sh -c 'chmod +x /opt/wildfly/bin/*.sh'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo cp /opt/wildfly/docs/contrib/scripts/systemd/wildfly.service /etc/systemd/system/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl daemon-reload&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 10:&lt;/strong&gt; Start the WildFly service&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl start wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl status wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl enable wildfly&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-wildfly"&gt;
  &lt;/a&gt;
  Configure WildFly
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Allow traffic on port 8080&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo ufw allow 8080/tcp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Create a WildFly Administrator&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo /opt/wildfly/bin/add-user.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Access and verify the successful setup of WildFly&lt;/p&gt;

&lt;p&gt;IP address: &lt;code&gt;**http://192.168.1.8:8080**&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Managing the Administrative console remotely&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo nano /etc/wildfly/wildfly.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;WILDFLY_CONSOLE_BIND=0.0.0.0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo nano /opt/wildfly/bin/launch.sh&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$WILDFLY_HOME&lt;/span&gt;/bin/domain.sh &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="nv"&gt;$2&lt;/span&gt; &lt;span class="nt"&gt;-b&lt;/span&gt; &lt;span class="nv"&gt;$3&lt;/span&gt; &lt;span class="nt"&gt;-bmanagement&lt;/span&gt; &lt;span class="nv"&gt;$4&lt;/span&gt;

&lt;span class="k"&gt;else&lt;/span&gt;

&lt;span class="nv"&gt;$WILDFLY_HOME&lt;/span&gt;/bin/standalone.sh &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="nv"&gt;$2&lt;/span&gt; &lt;span class="nt"&gt;-b&lt;/span&gt; &lt;span class="nv"&gt;$3&lt;/span&gt; &lt;span class="nt"&gt;-bmanagement&lt;/span&gt; &lt;span class="nv"&gt;$4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;sudo systemctl restart wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo nano /etc/systemd/system/wildfly.service&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ExecStart=/opt/wildfly/bin/launch.sh $WILDFLY_MODE $WILDFLY_CONFIG $WILDFLY_BIND $WILDFLY_CONSOLE_BIND&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl daemon-reload&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo systemctl restart wildfly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open the Administrative Console CLI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd /opt/wildfly/bin/&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./jboss-cli.sh &lt;span class="nt"&gt;--connect&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>jboss</category>
      <category>wildfly</category>
      <category>web</category>
      <category>ubuntu</category>
    </item>
    <item>
      <title>What kind of developer are you?</title>
      <author>Sandor Dargo</author>
      <pubDate>Wed, 21 Apr 2021 06:37:42 +0000</pubDate>
      <link>https://dev.to/sandordargo/what-kind-of-developer-are-you-4ic3</link>
      <guid>https://dev.to/sandordargo/what-kind-of-developer-are-you-4ic3</guid>
      <description>&lt;p&gt;I've seen &lt;a href="https://www.youtube.com/watch?v=EsSnw50udSA"&gt;this video&lt;/a&gt; recently by Clément Mihailescu the guy who created AlgoExpert. No, this video is not about algorithms. It's about the 4+1 different kind of developers he identified during his career. In this post, I am going to reflect on this video, I'll do a self-analysis and share my opinion on why I think that the Clément is right and we should be aware of what kinds of developers we are and who we are working with.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-41-kinds-of-different-programmers"&gt;
  &lt;/a&gt;
  The 4+1 kinds of different programmers
&lt;/h2&gt;

&lt;p&gt;Alright, so here are the 4+1 different kinds:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The coding machine&lt;/li&gt;
&lt;li&gt;The product-oriented programmer&lt;/li&gt;
&lt;li&gt;Domain expert/domain specialist&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Process-oriented programmer&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;+1 Jack of all trades&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let me give you a very brief overview of each before I go into the self-analysis.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-coding-machine"&gt;
  &lt;/a&gt;
  The coding machine
&lt;/h3&gt;

&lt;p&gt;Simple, right? This kind of programmer wants to code, code and code a little bit more. Such programmers are rather unhappy by going to meetings (frequently) and doesn't really care about what service or product he is working on. He takes pride in his work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-productoriented-programmer"&gt;
  &lt;/a&gt;
  The product-oriented programmer
&lt;/h3&gt;

&lt;p&gt;Unlike the &lt;em&gt;coding machine&lt;/em&gt;, the &lt;em&gt;product-oriented programmer&lt;/em&gt; takes pride rather in the product of her work. She cares deeply about the product, in fact, she will be unhappy if she has to work on the wrong product. She is likely to enjoy meetings as she wants to have an influence on where the product goes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-domain-specialist"&gt;
  &lt;/a&gt;
  The domain specialist
&lt;/h3&gt;

&lt;p&gt;The &lt;em&gt;domain specialist&lt;/em&gt; is somewhere in between the first two categories. He will be passionate about the product, but he also might end up as a coding machine if and only if he can work in his niche domain of speciality. Clément's example was someone caring so much about React that he only wants to work with React, preferably in the React team of Facebook or at some other companies/teams specialized in React.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-processoriented-programmer"&gt;
  &lt;/a&gt;
  The process-oriented programmer
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;The process-oriented programmer&lt;/em&gt; is characterized by the &lt;em&gt;3 Rs&lt;/em&gt;. She is all for rigid, robust and rigorous processes. To make her feel happy, everything should be planned out, everyone should understand what the others working on. It should be clear how code reviews are done, who approves what. Probably she is also working on a style guide. She cares more about the how than the why or what. She takes pride in building the right way, not the right thing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-the-jack-of-all-trades"&gt;
  &lt;/a&gt;
  +1 The Jack of all trades
&lt;/h3&gt;

&lt;p&gt;We are not black and white, the jack of all trades is a little bit of everything.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wellfunctioning-teams-need-diversity"&gt;
  &lt;/a&gt;
  Well-functioning teams need diversity
&lt;/h2&gt;

&lt;p&gt;Clément thinks it's important to do an introspection and understand what kind of developers we are. I completely agree that it's important to understand ourselves. If we want to be happy we should do what challenges us and brings us joy at the same time. Challenge without interest leads only to pain. If you understand what brings you pride, you'll have a chance to lead your career in the direction you want. You can read more on that in &lt;a href="https://leanpub.com/thesenioritytrap/"&gt;The Seniority Trap&lt;/a&gt;, please subscribe!&lt;/p&gt;

&lt;p&gt;Understanding ourselves is good, but understanding others is even better. especially if we manage a team. But even in an agile environment where the team is supposed to organize itself. Understanding the preferences of the individuals in a team helps to build a better functioning team where everyone can enjoy their work and contribute in a way that feels natural to them.&lt;/p&gt;

&lt;p&gt;A well-functioning team needs diversity. Like a football team. No team can succeed only with forwards, you need a goalkeeper, some defenders and midfielders as well.&lt;/p&gt;

&lt;p&gt;A development team is no different. You need people with different skillsets, roles and preferences. Understanding the &lt;em&gt;"types"&lt;/em&gt; of developers is also the recipe to build a truly diverse team. You'll need all of these people. Some who can build the processes and make sure that operability doesn't suffer because of ad-hoc actions. Obviously, there must be people who are inherently interested in the product and can be a bridge between business/customers and the developers. And which team can function without some coding machines who can turn down their heads and code, code and code and make the dreams come true?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-am-i"&gt;
  &lt;/a&gt;
  Who am I?
&lt;/h2&gt;

&lt;p&gt;When Clément started to talk about the coding machine, I quickly said that's me! My role is far beyond being a programmer, but whatever project I join, I soon find a way to code something. It's not always about working on the C++ backends that I prefer, sometimes it's about automating some monkey tasks. Maybe it's about creating the integration pipeline. Whatever! I want to code, code and code! I'm definitely a coding machine who wants to get far from meetings.&lt;/p&gt;

&lt;p&gt;Well, it's not exactly true. I want to get away from unstructured too broad meetings. Meetings with less than 5 people I specifically like. They lead to real knowledge sharing, they let people conduct real conversations whereas above 7 people it's never effective and for most of the participants a note about the minutes would be enough.&lt;/p&gt;

&lt;p&gt;But that says nothing about whether I'm a product-oriented developer. Definitely not at the core. Only on the veto level. I wouldn't work on something harmful - but in fact, harmful is very vague. You might find something harmful that I find useful. And the other way around. I know I wouldn't work for Facebook. Even considering their role in easing communication and getting in touch with you, dear reader, I think they limit freedom of speech and they are bad for democracy. But I don't really care about whether the product I work on is inspiring people or if it's just useful. Well, it should bring enough money for the company to pay me...&lt;/p&gt;

&lt;p&gt;So far, I'm a not very much product-oriented coding machine. But what about being a domain expert. Clément only spoke about React as a domain. What can a domain be? To me, it can be a framework, an aspect of a language (like performance optimization in C++) but a domain can also be a business domain.&lt;/p&gt;

&lt;p&gt;I don't consider myself a domain specialist. Even though as a developer I've only worked in the travel industry so far and I understand the different flows, I've seen many problems, I don't see myself as a domain expert, and I don't feel tied to this domain. I've been working for Amadeus for almost 8 years and I'm working on rental car reservation systems for more than 3 years, the reason I haven't changed is not the domain, but fear. Just kidding, I still have a lot to learn, and I haven't plateaued.&lt;/p&gt;

&lt;p&gt;I find it important that a part of my job is about C++ and I would reject any change or new job where I cannot exercise C++ because I decided to become a C++ expert. I'm personally invested and it makes no sense at this point of my career to jump between frameworks and languages. But C++ is not a domain or at least it's too vague with my (not very high) level of expertise.&lt;/p&gt;

&lt;p&gt;All in all, I'm not a domain expert, but I think I might become one in the near future.&lt;/p&gt;

&lt;p&gt;Lastly, am I a process-oriented developer? When I first heard it in the video, I laughed and said, hell no! I'm not so much fond of processes. But then I listened on and I realized that one of my first contribution to the team was about our git workflow, then I spoke about the importance of coding guidelines at multiple conferences and these days a part of my job is being a member of our internal C++ coding guidelines board.&lt;/p&gt;

&lt;p&gt;So who am I?&lt;/p&gt;

&lt;p&gt;A process-oriented coding machine who might become a domain expert with some feelings towards not working on the bad product.&lt;/p&gt;

&lt;p&gt;Sort of a jack of all trades. It makes sense as I prefer having a portfolio job, I prefer being a mentor, a coder, an author at the same time. Why would I be a simple coding machine?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-are-you"&gt;
  &lt;/a&gt;
  Who are you?
&lt;/h2&gt;

&lt;p&gt;Today, I presented you an interesting video by Clément Mihailescu that divides developers into 4+1 categories: the tireless coding machine, the product-oriented developer, the domain expert and the rigorous process-oriented developer the and of course the mandatory jack of all trades.&lt;/p&gt;

&lt;p&gt;I shared with you who I am, but who are you? Let me know in the comments or drop a mail!&lt;/p&gt;

</description>
      <category>career</category>
      <category>psychology</category>
      <category>watercooler</category>
      <category>diversity</category>
    </item>
    <item>
      <title>REACT - setState Object</title>
      <author>Ha Tuan Em</author>
      <pubDate>Wed, 21 Apr 2021 06:32:06 +0000</pubDate>
      <link>https://dev.to/hte305/react-setstate-object-4eh</link>
      <guid>https://dev.to/hte305/react-setstate-object-4eh</guid>
      <description>&lt;p&gt;Sometimes, we need to use the React Hook to store the object rather than the single field. Here is example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0jZ7gdRw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jl1pu9vt6vjw2o7m38s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0jZ7gdRw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jl1pu9vt6vjw2o7m38s.png" alt="setState object"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;: PS/&lt;br&gt;
Hope to help you with something.&lt;br&gt;
Thanks&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#devnote"&gt;
  &lt;/a&gt;
  devnote
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  react
&lt;/h1&gt;

</description>
      <category>reactnative</category>
      <category>react</category>
    </item>
    <item>
      <title>The simplest way to validate file input type</title>
      <author>Joanna Otmianowska</author>
      <pubDate>Wed, 21 Apr 2021 06:14:18 +0000</pubDate>
      <link>https://dev.to/joannaotmianowska/the-simplest-way-to-validate-file-input-type-1dm9</link>
      <guid>https://dev.to/joannaotmianowska/the-simplest-way-to-validate-file-input-type-1dm9</guid>
      <description>&lt;p&gt;I've been working on a form lately and one day I got a task to add type validation to field input. My first thought was to simply check the file type after the file is being uploaded and, based on that, store this file in the list in my app or drop it. The idea was to have extensions whitelist and allow user to add only files that are on that whitelist to make sure that there is nothing insecure being introduced to our system.&lt;/p&gt;

&lt;p&gt;I wanted to make sure that I covered all needed extensions so I ended up checking what were possible types supported by input field. And then I found it - &lt;code&gt;accept&lt;/code&gt; attribute in file input itself. Thanks to that user experience is just great - files not listed in the &lt;code&gt;accept&lt;/code&gt; attribute are simply greyed out so user can't select them. It allows to avoid confusion, dedicated error message and clearly shows the user what he or she can and cannot add to the form.&lt;/p&gt;

&lt;p&gt;I recommend you to check the details in the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept"&gt;docs&lt;/a&gt;, I just want to emphasise that this attribute can accept both file extensions and unique file type specifier. See examples below (taken from &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept"&gt;here&lt;/a&gt;) &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;accept="image/png"&lt;/code&gt; or &lt;code&gt;accept=".png"&lt;/code&gt; — Accepts PNG files.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;accept="image/png, image/jpeg"&lt;/code&gt; or &lt;code&gt;accept=".png, .jpg, .jpeg"&lt;/code&gt; — Accept PNG or JPEG files.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;accept="image/*"&lt;/code&gt; — Accept any file with an &lt;code&gt;image/*&lt;/code&gt; MIME type. (Many mobile devices also let the user take a picture with the camera when this is used.)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;accept=".doc,.docx,.xml,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document"&lt;/code&gt; — accept anything that smells like an MS Word document.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using &lt;code&gt;accept&lt;/code&gt; attribute instead of checking every file manually and then adding it to the list speeded my work. I didn't have to throw an error every time wrong file is added and explain to the user what he or she should do now. However, I wanted to be 1000% sure that there is no way to attach wrong file in the form. That's true that &lt;code&gt;accept&lt;/code&gt; attribute doesn't allow user to select file with type I didn't specify but you know... the form can be always compromised with external script. This is why I decided to add one more step before adding files to the list and wrote the function checking if selected file type is included in the extensions whitelist I have in the app.  If it is not there - nothing happens (no error for the user is needed as this is edge case only if someone compromises the form). And the app is safe.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Weekly web development resources #70</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 21 Apr 2021 05:57:46 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-70-1ehj</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-70-1ehj</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#design-resources"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/MohamedYoussouf/Design-Resources"&gt;Design Resources&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/MohamedYoussouf/Design-Resources"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1iMimF6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/design-resources.jpg" alt="Design Resources"&gt;&lt;/a&gt;&lt;br&gt;
A curated list of design resources from design templates, stock photos, icons, colors, and more.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#creating-a-smart-navbar-with-vanilla-javascript"&gt;
  &lt;/a&gt;
  &lt;a href="https://css-tricks.com/creating-a-smart-navbar-with-vanilla-javascript/"&gt;Creating a Smart Navbar With Vanilla JavaScript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://css-tricks.com/creating-a-smart-navbar-with-vanilla-javascript/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VN5QoCr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/smart-nav.jpg" alt="Creating a Smart Navbar With Vanilla JavaScript"&gt;&lt;/a&gt;&lt;br&gt;
Create a navbar that gets visible when the user scrolls up.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#understanding-browser-cookies"&gt;
  &lt;/a&gt;
  &lt;a href="https://chenhuijing.com/blog/understanding-browser-cookies"&gt;Understanding browser cookies&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://chenhuijing.com/blog/understanding-browser-cookies"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vMv7Y2im--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/cookie.jpg" alt="Understanding browser cookies"&gt;&lt;/a&gt;&lt;br&gt;
A nice article that explains the basics of browser cookies.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#github-theme"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.github-vscode-theme"&gt;GitHub Theme&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.github-vscode-theme"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J5Mmlj6T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/github-theme.jpg" alt="GitHub Theme"&gt;&lt;/a&gt;&lt;br&gt;
A theme for Visual Studio Code, that is made and used by GitHub.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#directshare"&gt;
  &lt;/a&gt;
  &lt;a href="https://directshare.io/"&gt;DirectShare&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://directshare.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-BAOwUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/directShare.jpg" alt="DirectShare"&gt;&lt;/a&gt;&lt;br&gt;
A free and secured file transfer solution with no size constraint.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#beautiful-pdfs-from-html"&gt;
  &lt;/a&gt;
  &lt;a href="https://pdf.math.dev/"&gt;Beautiful PDFs from HTML&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://pdf.math.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CA85ZGlf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/pdf-html.jpg" alt="Beautiful PDFs from HTML"&gt;&lt;/a&gt;&lt;br&gt;
A guide, that provides a basic tutorial to using paged.js.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#natto"&gt;
  &lt;/a&gt;
  &lt;a href="https://natto.dev"&gt;natto&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://natto.dev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kzG1yjml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/natto.jpg" alt="natto"&gt;&lt;/a&gt;&lt;br&gt;
A tool for fidgeting with JavaScript. Write and manipulate JavaScript expressions on a spatial canvas.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#frontend-toolkit"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.fetoolkit.io/"&gt;Frontend Toolkit&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.fetoolkit.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pgJ4rVaz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/fe-toolkit.jpg" alt="Frontend Toolkit"&gt;&lt;/a&gt;&lt;br&gt;
A customizable dashboard for your recurring Frontend tasks&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#wave"&gt;
  &lt;/a&gt;
  &lt;a href="https://loading.io/background/m-wave/"&gt;Wave&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://loading.io/background/m-wave/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3bCjf1xv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/wave.jpg" alt="Wave"&gt;&lt;/a&gt;&lt;br&gt;
A generator for smooth gradient waves in multiple layers, that flowing slowly.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#winbox"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/nextapps-de/winbox"&gt;WinBox&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/nextapps-de/winbox"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3VJtdi69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wwebdev-images.s3.eu-central-1.amazonaws.com/content/weekly/70/winbox.jpg" alt="WinBox"&gt;&lt;/a&gt;&lt;br&gt;
A modern window manager for the web&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>weekly</category>
    </item>
    <item>
      <title>How to Deploy React Router Based Application to Netlify</title>
      <author>Yogesh Chavan</author>
      <pubDate>Wed, 21 Apr 2021 05:57:27 +0000</pubDate>
      <link>https://dev.to/myogeshchavan97/how-to-deploy-react-router-based-application-to-netlify-2kce</link>
      <guid>https://dev.to/myogeshchavan97/how-to-deploy-react-router-based-application-to-netlify-2kce</guid>
      <description>&lt;p&gt;Deploying a Routing based React app to production is not similar to deploying a normal React application.&lt;/p&gt;

&lt;p&gt;In this article, we'll see the most popular ways of deploying React app to Netlify and learn the configuration changes needed for deploying a Routing based React app.&lt;/p&gt;

&lt;p&gt;The thing I loved about &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt; is that it provides a lot of useful features&lt;br&gt;
for free such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A way to deploy a static website within seconds&lt;/li&gt;
&lt;li&gt;Provides continuous deployment which means when you connect your Github/Gitlab/Bitbucket repository, it automatically triggers deployment when new commits are pushed to the repository&lt;/li&gt;
&lt;li&gt;Website never goes down even during new deployments&lt;/li&gt;
&lt;li&gt;Allows to easily rollback to any previous working version of your site with a single click&lt;/li&gt;
&lt;li&gt;Quickly preview any of the previously deployed version of the app&lt;/li&gt;
&lt;li&gt;Change domain or subdomain of your site instantly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and much more.&lt;/p&gt;

&lt;p&gt;So let's see how to deploy React app to Netlify.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Want to learn Redux from the absolute beginning and build a food ordering app from scratch? Check out the &lt;a href="https://master-redux.yogeshchavan.dev/"&gt;Mastering Redux&lt;/a&gt; course.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#drag-and-drop-the-build-folder-in-netlify"&gt;
  &lt;/a&gt;
  Drag and Drop the Build Folder in Netlify
&lt;/h2&gt;

&lt;p&gt;The fastest and easy way to deploy React application is just to drag and drop the build folder in Netlify.&lt;/p&gt;

&lt;p&gt;To create a build folder, just execute the &lt;code&gt;npm run build&lt;/code&gt; or &lt;code&gt;yarn build&lt;/code&gt; command from the command line from your project folder.&lt;/p&gt;

&lt;p&gt;Once the build folder is created, you just need to drop the folder to the drop area under the &lt;code&gt;sites&lt;/code&gt; menu as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BLL4aoQO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983845998/Uq0H0y7FG.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BLL4aoQO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983845998/Uq0H0y7FG.gif" alt="drag_drop.gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-deploy-an-app-to-netlify-from-a-github-repository"&gt;
  &lt;/a&gt;
  How to Deploy an App to Netlify from a GitHub Repository
&lt;/h2&gt;

&lt;p&gt;This is my favorite way of deploying applications on Netlify. &lt;/p&gt;

&lt;p&gt;Because whenever you push any changes to the GitHub repository, it will automatically be deployed to Netlify. You can also see all deployed versions and easily roll back to any previously working version of code with just a single click.&lt;/p&gt;

&lt;p&gt;If you already have a repository pushed to Github, then you just need to connect it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login to your Netlify account&lt;/li&gt;
&lt;li&gt;In the dashboard, click on the &lt;code&gt;New site from Git&lt;/code&gt; button&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7pJNAy1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983866694/ohpSrCjxS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7pJNAy1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983866694/ohpSrCjxS.png" alt="netlify_home.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on the &lt;code&gt;GitHub&lt;/code&gt; button to connect your GitHub repository&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KZsDlcbe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983880444/CDjoHCKRg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KZsDlcbe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983880444/CDjoHCKRg.png" alt="git_provider.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It will open a new tab. Make sure the popup is enabled in your browser.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uRn1DP7t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983932965/loWt3gM3i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uRn1DP7t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983932965/loWt3gM3i.png" alt="select_repository.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Search for the GitHub repository in the &lt;code&gt;Search repos&lt;/code&gt; search box. If your repository is not getting displayed then click on the &lt;code&gt;Configure the Netlify app on GitHub&lt;/code&gt; button at the bottom of the page. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--USAIeCiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983953882/ZWZSAlm79.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--USAIeCiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983953882/ZWZSAlm79.png" alt="configure_netlify.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once clicked, scroll down on the page and click on the &lt;code&gt;Select repositories&lt;/code&gt; dropdown and search for your repository and click on the &lt;code&gt;save&lt;/code&gt; button.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SjoUuiI1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983963504/K7TLSYm4Y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SjoUuiI1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983963504/K7TLSYm4Y.png" alt="select_repo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You will be redirected to the previous page showing all the available repositories.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Search for the repository you want to deploy. For this article, I have selected &lt;a href="https://github.com/myogeshchavan97/react-book-management-app"&gt;react-book-management-app&lt;/a&gt; repository which was created in my &lt;a href="https://dev.to/myogeshchavan97/react-crud-app-tutorial-build-a-book-management-app-in-react-from-scratch-f7b"&gt;previous article&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vhzwfdep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983981796/TRQV_7t00.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vhzwfdep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983981796/TRQV_7t00.png" alt="find_repository.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once you select the repository, you will see the following screen:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c4oiUf0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983991516/FY5eCCmXX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c4oiUf0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618983991516/FY5eCCmXX.png" alt="deploy_repository.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For this application, we don't need to change anything&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your &lt;code&gt;Build command&lt;/code&gt; and &lt;code&gt;Publish directory&lt;/code&gt; will be automatically populated. Make sure to enter these fields, if you have different command in &lt;code&gt;package.json&lt;/code&gt; to build your app or those fields are not auto-populated. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, click on the &lt;code&gt;Deploy site&lt;/code&gt; button.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once clicked, you will see the &lt;code&gt;Site deploy in progress&lt;/code&gt; message.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CPl1egJk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984004201/yPUDClsQ_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CPl1egJk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984004201/yPUDClsQ_.png" alt="deploying.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wait for some time while deployment is going on. Once deployment is completed, you will see the following screen:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fqo5tVtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984013606/opx3KEkuz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fqo5tVtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984013606/opx3KEkuz.png" alt="deployed.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open the link in the new tab and you will see your application deployed live.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o4GbJdF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984027101/vnd0sAFTs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o4GbJdF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984027101/vnd0sAFTs.gif" alt="deployed_app.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Awesome! Now, If you make any change in the source code and push that change to GitHub, Netlify will detect that change and will re-deploy your application with your latest changes.&lt;/p&gt;

&lt;p&gt;If you check the application, you will see that the application works just fine with the navigation and you're able to add/edit/delete a book.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m9oNWxq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984042902/0jjMDT_C9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m9oNWxq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984042902/0jjMDT_C9.gif" alt="working_app.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But there is one issue. If you directly access the &lt;code&gt;/add&lt;/code&gt; route or refresh the &lt;code&gt;/add&lt;/code&gt; route page, you will get a page not found error as shown below:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JsRiXPNS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984058971/mL68SFxTb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JsRiXPNS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984058971/mL68SFxTb.gif" alt="page_not_found.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is because when we access any route on our local machine, React Router handles the routing but when we deploy the application on any server, directly accessing the route will send the request to the server itself (Netlify in our case).&lt;/p&gt;

&lt;p&gt;But as there is no &lt;code&gt;/add&lt;/code&gt; route handler on the server-side you will see a page not found error. But Netlify provides a way to fix this.&lt;/p&gt;

&lt;p&gt;Create a new file with the name &lt;code&gt;_redirects&lt;/code&gt; inside the &lt;code&gt;public&lt;/code&gt; folder of our project and add the following contents inside it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* /index.html 200
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we're telling Netlify to redirect all routes to the &lt;code&gt;index.html&lt;/code&gt; file. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;index.html&lt;/code&gt; file contains our entire React app code which gets generated inside the &lt;code&gt;build&lt;/code&gt; folder when the &lt;code&gt;yarn build&lt;/code&gt; command is executed by Netlify while deploying the app.&lt;/p&gt;

&lt;p&gt;And as routing is handled by our React app which is contained in the &lt;code&gt;index.html&lt;/code&gt; file, our application will work without a page not found issue.&lt;/p&gt;

&lt;p&gt;Now, push the changes to the GitHub repository so Netlify will deploy the app again with these changes.&lt;/p&gt;

&lt;p&gt;And once deployed, If you check the deployed application, you will see that the application works fine and we don't get any page not found error now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_TJta-J1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984074087/lnvzavw4o.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_TJta-J1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984074087/lnvzavw4o.gif" alt="no_page_not_found.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it. We're all done with deploying our application to Netlify.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-easily-change-a-site-name-in-netlify"&gt;
  &lt;/a&gt;
  How to Easily Change a Site Name in Netlify
&lt;/h2&gt;

&lt;p&gt;If you check the name of the deployed site you will see that, it's not easy to remember, If you have a lot of applications deployed. But Netlify provides a way to easily change that.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on the &lt;code&gt;Site settings&lt;/code&gt; button displayed on the &lt;code&gt;Site overview&lt;/code&gt; section.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NNtXsaup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984087676/eSggx4693.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NNtXsaup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984087676/eSggx4693.png" alt="site_settings.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Then click on the &lt;code&gt;Change site name&lt;/code&gt; button and enter a new name and click on the &lt;code&gt;Save&lt;/code&gt; button and now you can access your application with the changed name. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rm7PKwcj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984101053/Wv5VNp41g.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rm7PKwcj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618984101053/Wv5VNp41g.gif" alt="changed_site_name.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I usually like to give the same name as the repository name so It's easy to find out a particular application If you have a lot of deployed applications on Netlify.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;If you want to know how to deploy React + Node.js application to production, check out my &lt;a href="https://dev.to/myogeshchavan97/how-to-deploy-react-node-js-application-to-heroku-4jb4"&gt;this article&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h3&gt;

&lt;p&gt;You can find the complete GitHub source code along with this redirection change in &lt;a href="https://github.com/myogeshchavan97/netlify-react-book-management-app"&gt;this repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can see the live demo of the deployed application &lt;a href="https://react-book-management-app.netlify.app/"&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Want to learn all ES6+ features in detail including let and const, promises, various promise methods, array and object destructuring, arrow functions, async/await, import and export and a whole lot more from scratch?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check out my &lt;a href="https://modernjavascript.yogeshchavan.dev/"&gt;Mastering Modern JavaScript&lt;/a&gt; book. This book covers all the pre-requisites for learning React and helps you to become better at JavaScript and React.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Check out free preview contents of the book &lt;a href="https://www.freecodecamp.org/news/learn-modern-javascript/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, you can check out my &lt;strong&gt;free&lt;/strong&gt; &lt;a href="https://yogeshchavan.podia.com/react-router-introduction"&gt;Introduction to React Router&lt;/a&gt; course to learn React Router from scratch.&lt;/p&gt;

&lt;p&gt;Want to stay up to date with regular content regarding JavaScript, React, Node.js? &lt;a href="https://www.linkedin.com/in/yogesh-chavan97/"&gt;Follow me on LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3w0DGum"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Taa9-Eif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/98ae4f4ead57fde8d47fcf7641220b72/raw/c3e4265df4396d639a7938a83bffd570130483b1/banner.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Accepting payments with Stripe, Nuxt. js and vercel </title>
      <author>Fayaz Ahmed</author>
      <pubDate>Wed, 21 Apr 2021 05:52:35 +0000</pubDate>
      <link>https://dev.to/fayaz/accepting-payments-with-stripe-nuxt-js-and-vercel-1m14</link>
      <guid>https://dev.to/fayaz/accepting-payments-with-stripe-nuxt-js-and-vercel-1m14</guid>
      <description>&lt;p&gt;It's been a long time since my last post and I wanted to write a small article on how to accept payments with Stripe, as I was integrating Stripe into my SaaS project, which I am currently building. &lt;/p&gt;

&lt;p&gt;Accepting payments is not that difficult and you don't even need a server.&lt;/p&gt;

&lt;p&gt;I will be building this app with Nuxt.js, Tailwindcss and host it on vercel.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;TLDR; the code and the live demo can be found at the bottom of this post&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The site I have made is not complete and not responsive, but if someone wants to raise a PR and get it working, please go ahead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;Scaffold a new Nuxt project with &lt;code&gt;yarn create nuxt-app stripe-nuxt&lt;/code&gt; and you can select a CSS framework of your choice, I chose Tailwindcss, choose axios and I have also used nuxt-content for this, for storing the products database.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Clear the index.vue page and remove styles from default.vue files.&lt;/p&gt;

&lt;p&gt;Add this markup and the script in index.vue, this will show a grid of products on the home page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;main&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"min-h-screen"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"p-8 max-w-4xl mx-auto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"grid grid-cols-1 lg:grid-cols-3 xl:grid-cols-3 gap-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;nuxt-link&lt;/span&gt;
          &lt;span class="na"&gt;:to=&lt;/span&gt;&lt;span class="s"&gt;"product.slug"&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"overflow-hidden text-center"&lt;/span&gt;
          &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"(product, p) in products"&lt;/span&gt;
          &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"p"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;:src=&lt;/span&gt;&lt;span class="s"&gt;"product.images[0]"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"product.name"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mb-4"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"font-semibold text-gray-700 mb-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            {{ product.name }}
          &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-sm"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;$ {{ product.amount }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/nuxt-link&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fade&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;asyncData&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;products&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code will be rendered and look something like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LIcIJb1V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjme19qzngi5qwxwx94z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LIcIJb1V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjme19qzngi5qwxwx94z.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make a new file and name it &lt;code&gt;_slug.vue&lt;/code&gt; in the same directory as index.vue, this will act as our product page and fill it with the below code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;main&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-1/2 h-screen flex items-center justify-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;:src=&lt;/span&gt;&lt;span class="s"&gt;"product.images[0]"&lt;/span&gt; &lt;span class="na"&gt;:alt=&lt;/span&gt;&lt;span class="s"&gt;"product.name"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
            &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-1/2 h-screen text-white flex items-center justify-center p-8 relative"&lt;/span&gt;
            &lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"{ backgroundColor: `#${product.color.hex}` }"&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;nuxt-link&lt;/span&gt;
               &lt;span class="na"&gt;to=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;
               &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center space-x-2 absolute top-8 left-8"&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt;
                  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-5 h-5"&lt;/span&gt;
                  &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt;
                  &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;
                  &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt;
                  &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt;
                     &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt;
                     &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt;
                     &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;
                     &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M7 16l-4-4m0 0l4-4m-4 4h18"&lt;/span&gt;
                     &lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/nuxt-link&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"space-y-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-2xl font-bold"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ product.name }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;$ {{ product.amount }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-100 text-sm"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ product.description }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt;
                  &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"buy()"&lt;/span&gt;
                  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-full py-3 bg-white text-gray-800 font-semibold flex items-center justify-center space-x-2"&lt;/span&gt;
                  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"{ 'opacity-50 cursor-not-allowed': loading }"&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;btn-loader&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"loading"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Buy Now&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
               &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
   &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fade&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;asyncData&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;products&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
     &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="na"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="na"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="p"&gt;};&lt;/span&gt;
     &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;buy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
           &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/api/checkout&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
             &lt;span class="na"&gt;order&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="na"&gt;images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="na"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="na"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="p"&gt;},&lt;/span&gt;
             &lt;span class="na"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="p"&gt;});&lt;/span&gt;
           &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;redirectToCheckout&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;sessionId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
           &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Stripe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pk_test_ZaFKDdkCzVR4hCmDsUKWodm200fZIzrcmf&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will make a page looking like this, not very fancy, but looks good (not responsive).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nmonHooq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xy6hq9zbojgnmg8r03yy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nmonHooq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xy6hq9zbojgnmg8r03yy.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We need to add the stripe checkout script in the &lt;code&gt;nuxt.config.js&lt;/code&gt; file, add this in the head object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://js.stripe.com/v3/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's focus on the script and see what's going on.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e2AQM9pd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwnqq12ts7h0rebz0pbh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e2AQM9pd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwnqq12ts7h0rebz0pbh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create an empty stripe object, this is where we will initialize the stripe object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now pass the stripe public key to the Stripe method(the one we added in our head tag), you can get your public key from stripe &lt;a href="https://dashboard.stripe.com/dashboard"&gt;dashboard&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let's make a checkout API and use Vercels serverless functions. Any js file we add under a folder called &lt;code&gt;api&lt;/code&gt; will act as a serverless function in Vercel, pretty cool right. So, I made one called checkout.js and wrote a small script.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;stripe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STRIPE_TEST_SK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hostUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:3000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;payment_method_types&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;card&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;line_items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;order&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;success_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hostUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?session_id={CHECKOUT_SESSION_ID}`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;cancel_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hostUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?failed=true`&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to install the stripe package and import it and this is all you need to create a checkout session (the secret key can be found in the stripe dashboard).&lt;br&gt;
The success URL and the cancel URL as the name suggest, tell stripe where to redirect respectively.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Now that we have received a session id, just pass it the stripe redirect method
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;redirectToCheckout&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;sessionId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's the &lt;a href="https://github.com/fayazara/nuxt-stripe"&gt;code&lt;/a&gt; and here's the live &lt;a href="https://nuxt-stripe-amber.vercel.app/"&gt;demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you like my work and want to get updates, please subscribe to my &lt;a href="https://www.getrevue.co/profile/fayaz"&gt;newsletter&lt;/a&gt; or if you'd like to buy me some coffee, you can donate &lt;a href="https://fayazz.co/coffee"&gt;here&lt;/a&gt;, we could have a online session over coffee.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>vue</category>
    </item>
    <item>
      <title>7 Websites To Find Remote Developer Jobs</title>
      <author>The Code Lounge</author>
      <pubDate>Wed, 21 Apr 2021 05:45:44 +0000</pubDate>
      <link>https://dev.to/codeloungedev/7-websites-to-find-remote-developer-jobs-3g76</link>
      <guid>https://dev.to/codeloungedev/7-websites-to-find-remote-developer-jobs-3g76</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Find a developer job that allows you to work from anywhere&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://codelounge.dev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZGLRauQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617198357271/uoNdlXnwM.png" alt="cover (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Originally posted on the codelounge.dev blog =&amp;gt; &lt;a href="https://codelounge.dev/7-websites-to-find-remote-developer-jobs"&gt;7 Websites To Find Remote Developer Jobs&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;The way people work has changed dramatically in the last few years. The working world shifted to remote work, with more and more people working remotely nowadays.&lt;/p&gt;

&lt;p&gt;That's the case with developers. However, sometimes it can be difficult to find remote developer jobs. As a result, below you can see 7 websites to find remote developer jobs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://weworkremotely.com/"&gt;We Work Remotely&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/jobs/remote-developer-jobs"&gt;Stackoverflow Remote Developer Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/remoteintech/remote-jobs"&gt;Remote Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remoteok.io/remote-dev-jobs"&gt;Remote OK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remote.co/remote-jobs/developer"&gt;Remote Developer Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remoteleads.io/"&gt;Remote Leads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/spreadsheets/d/1TLJSlNxCbwRNxy14Toe1PYwbCTY7h0CNHeer9J0VRzE/htmlview#gid=1279011369"&gt;Remotive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remoteleads.io/"&gt;Remote Leaf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/spreadsheets/d/1Sr0vy3eDn2fcEhxOdkPv0BjsWBR7JntDJqRM6_hyjbE/edit#gid=0"&gt;Companies with open remote positions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hopefully, the list helps you find a remote developer position. If you find it useful, share it with others!&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>13 Time-Saving Tools for Web Developers and Designers</title>
      <author>koshti Rahul</author>
      <pubDate>Wed, 21 Apr 2021 04:13:03 +0000</pubDate>
      <link>https://dev.to/gnral_opll/13-time-saving-tools-for-web-developers-and-designers-3epk</link>
      <guid>https://dev.to/gnral_opll/13-time-saving-tools-for-web-developers-and-designers-3epk</guid>
      <description>&lt;p&gt;how to organize design assets,graphic design file management,graphic design folder structure,how to organise your design files,job numbering systems graphic design,how to organize design projects,&lt;/p&gt;

&lt;p&gt;Jsdo.it &lt;/p&gt;

&lt;p&gt;is a great tool for those who need edit their HTML, CSS, and Javascript. This isn’t just a web-based app; it is also an online community. Here you can share your work with those in the community as well as learn new techniques. &lt;/p&gt;

&lt;p&gt;Typetester&lt;/p&gt;

&lt;p&gt;how to organize design assets,graphic design file management,graphic design folder structure,how to organise your design files,job numbering systems graphic design,how to organize design projects,&lt;/p&gt;

&lt;p&gt;Using the right type for your website is just as important as the graphics and colors chosen. Typetester makes the job of the web designer a lot easier as its sole function is to output side-by-side comparisons of chosen fonts with your desired customization.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/13-time-saving-tools-for-web-designers.html"&gt;https://cmsinstallation.blogspot.com/2021/04/13-time-saving-tools-for-web-designers.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>php</category>
      <category>design</category>
    </item>
    <item>
      <title>Docker in making the world more unique in terms of the development</title>
      <author>vishwasnarayanre</author>
      <pubDate>Wed, 21 Apr 2021 04:09:31 +0000</pubDate>
      <link>https://dev.to/vishwasnarayan5/docker-in-making-the-world-more-unique-in-terms-of-the-development-9nj</link>
      <guid>https://dev.to/vishwasnarayan5/docker-in-making-the-world-more-unique-in-terms-of-the-development-9nj</guid>
      <description>&lt;p&gt;Docker is a development framework for developing applications based on containers, which are compact and lightweight execution environments that share the operating system kernel but otherwise run in isolation. Although the idea of containers has been around for a while, Docker, an open source community founded in 2013, was the first to implement it, helped to popularize the technology and has contributed to the cloud-native architecture pattern with containerization and microservices of software development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-containers"&gt;
  &lt;/a&gt;
  What are containers?
&lt;/h2&gt;

&lt;p&gt;One aim of modern software architecture is to maintain programs on the same host or cluster separated from one another so that they do not interfere with one another's activity or maintenance. Because of the packages, libraries, and other program components needed for them to run, this can be challenging.Virtual machines, which keep applications on the same hardware completely separate and minimise conflicts among software components and competition for hardware resources, have become one solution to this issue. However, virtual machines are large (each needs their own operating system, so they are usually gigabytes in size) and difficult to manage and update.&lt;/p&gt;

&lt;p&gt;Containers, on the other hand, separate the execution environments of programs while sharing the underlying OS kernel. They are usually represented in megabytes, consume much less resources than virtual machines, and boot up almost instantly.They can be stacked much more tightly on the same hardware and spun up and down in large numbers with much less time and overhead. Containers offer a highly effective and granular framework for integrating software components into the types of program and service stacks required in a modern organisation, as well as updating and maintaining certain software components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ox4jUjGP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1oos51uobhqgoh8fa7w.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ox4jUjGP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1oos51uobhqgoh8fa7w.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-docker"&gt;
  &lt;/a&gt;
  What is Docker?
&lt;/h2&gt;

&lt;p&gt;Docker is a free and open-source project that makes it simple to build containers and container-based applications. Docker was originally designed for Linux, but it now runs on Windows and MacOS as well. Let's look at some of the modules you'd need to build Docker-containerized applications to further understand how Docker functions.&lt;/p&gt;

&lt;p&gt;download &lt;a href="https://docs.docker.com/desktop/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dockerfile"&gt;
  &lt;/a&gt;
  Dockerfile
&lt;/h3&gt;

&lt;p&gt;A Dockerfile is the foundation of every Docker container. A Dockerfile is a text file written in simple syntax that contains instructions for creating a Docker image (more on that in a moment). A Dockerfile defines the operating system that will run the container, as well as the languages, environmental variables, file locations, network ports, and other components it will require—and, of course, the container itself.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Remember This file has no file extension&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#docker-image"&gt;
  &lt;/a&gt;
  Docker image
&lt;/h3&gt;

&lt;p&gt;After you've written your Dockerfile, you use the Docker build tool to generate an image based on it. A Docker image is a lightweight file that contains the requirements on which software components the container can run and how. A Dockerfile is a series of instructions that tells construct how to create the image.Since a Dockerfile would almost always contain instructions for obtaining software packages from online libraries, you should take care to expressly specify the correct versions, otherwise your Dockerfile will generate different images based on when it is invoked. However, once an image is generated, it remains static. Codefresh provides a more detailed look at how to create a picture.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker-run"&gt;
  &lt;/a&gt;
  Docker run
&lt;/h3&gt;

&lt;p&gt;The order that ultimately launches a container is Docker's run utility. Each container is an image case. Containers are intended to be transient and temporary, but they may be halted and restarted, restoring the container to its previous state.Furthermore, several container instances of the same image will operate concurrently (as long as each container has a unique name). The Code Review has a perfect rundown of the various run command choices to give you a sense of how it functions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker-hub"&gt;
  &lt;/a&gt;
  Docker Hub
&lt;/h3&gt;

&lt;p&gt;Docker Engine is the fundamental client-server infrastructure that builds and manages containers, and it is at the heart of Docker. In general, when anyone says Docker without referring to the organisation or the overall project, they are referring to Docker Engine. Docker Engine is available in two flavours: Docker Engine Enterprise and Docker Engine Community.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#docker-engine"&gt;
  &lt;/a&gt;
  Docker Engine
&lt;/h2&gt;

&lt;p&gt;Docker Engine is the fundamental client-server infrastructure that builds and manages containers, and it is at the heart of Docker. If anyone says Docker in a general sense and isn't referring to the business or the project as a whole, they're usually referring to Docker Engine. Docker Engine Enterprise and Docker Engine Community are the two models available.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker-compose-docker-swarm-and-kubernetes"&gt;
  &lt;/a&gt;
  Docker Compose, Docker Swarm, and Kubernetes
&lt;/h3&gt;

&lt;p&gt;Docker also makes it easy to coordinate container activities and, as a result, create framework stacks by connecting containers. Docker Compose was developed by Docker to make the development and testing of multi-container software easier. It's a command-line interface that looks a lot like the Docker app,that reads a specially formatted descriptor file and assembles applications from multiple containers to run on a single host.&lt;/p&gt;

&lt;p&gt;Other products, such as Docker Swarm and Kubernetes, have more complex variations of these activities, such as container orchestration. Docker, on the other hand, contains the essentials. About the fact that Kubernetes arose from the Docker community, it has become the de facto Docker orchestration tool of preference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-discuss-the-pros-and-cons-of-the-docker"&gt;
  &lt;/a&gt;
  Lets Discuss the Pros and Cons of the Docker
&lt;/h2&gt;

&lt;p&gt;Docker is a fantastic tool to work on building the containerized application, thus they are easy to use and a very powerful tool has some backdrops that might not make it that flexible to use,here are some of the list of the pros and cons of the Docker.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#docker-has-isolation-and-throttling-features"&gt;
  &lt;/a&gt;
  Docker has isolation and throttling features
&lt;/h3&gt;

&lt;p&gt;Docker containers detach applications not only from one another, but also from the underlying device. This not only results in a simpler program stack, but it also makes it easy to control how a containerized device uses machine resources like CPU, GPU, memory, I/O, and networking. It's much more straightforward to keep data and code apart.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#containers-are-more-portable"&gt;
  &lt;/a&gt;
  Containers are more portable
&lt;/h3&gt;

&lt;p&gt;Any computer that supports the container's runtime environment will run a Docker container. Since applications aren't bound to the host operating system, both the program and the underlying operating environment can be kept clean and simple.(CMD interface and for that to be up and runnong for some conainer types use &lt;em&gt;-it&lt;/em&gt; tag to get the CMD interface)&lt;/p&gt;

&lt;p&gt;A python for Linux container, for example, can run on almost every Linux system that supports containers. Usually, all of the app's dependencies are shipped in the same container.Container-based applications can conveniently be migrated from on-premises platforms to cloud environments or from developers' laptops to servers, as long as the target device supports Docker and any third-party software used for it, such as Kubernetes.&lt;/p&gt;

&lt;p&gt;Docker container images are typically designed for a given framework. For example, a Windows container would not run on Linux, and vice versa. Previously, one solution was to launch a virtual machine that ran an instance of the required operating system, and then run the container inside the virtual machine.&lt;/p&gt;

&lt;p&gt;The Docker team has since developed a more sophisticated approach known as &lt;a href="https://docs.docker.com/engine/reference/commandline/manifest/"&gt;manifests&lt;/a&gt;, which allows images for different operating systems to be packed side by side in the same image. Manifests are still considered experimental, but they show how containers may become a cross-platform and cross-environment framework solution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dockers-are-composible-just-a-commit-can-add-the-changes-to-the-cotnainers"&gt;
  &lt;/a&gt;
  Dockers are composible just a commit can add the changes to the cotnainers
&lt;/h3&gt;

&lt;p&gt;Most enterprise systems are made up of several different components arranged in a stack—a web server, a database, and an in-memory cache, for example. Containers allow these components to be assembled into a functional unit of easily interchangeable parts. Each component is supported by its own container and can be retained, revamped, switched out, and tweaked independently of the others.&lt;/p&gt;

&lt;p&gt;This is basically the application architecture microservices model. The microservices model, which divides device functionality into discrete, self-contained services, is an alternative to sluggish conventional development processes and rigid monolithic applications. Containers that are lightweight and compact make it easy to create and manage microservices-based applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker-containers-have-orchestration-and-scaling"&gt;
  &lt;/a&gt;
  Docker containers have orchestration and scaling
&lt;/h3&gt;

&lt;p&gt;Since containers are lightweight and have low overhead, it is possible to deploy a large number of them on a single device. Containers, on the other hand, may be used to spread an application across clusters of facilities, as well as to ramp services up or down to accommodate surges in demand or save energy.&lt;/p&gt;

&lt;p&gt;Third-party developers have the most enterprise-grade implementations of software for container implementation, management, and scaling. Among them is Google's Kubernetes, a framework for automating not just container deployment and scaling, but also how they're linked, load-balanced, and controlled.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Kubernetes also allows you to build and reuse multi-container framework concepts, also known as "Helm maps," so that large app stacks can be designed and handled on demand.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Docker still has its own built-in orchestration system, Swarm mode, which is still used for less difficult scenarios. However, Kubernetes has become the de facto standard; in particular, Kubernetes is included with Docker Enterprise Edition.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#docker-containers-dont-work-at-a-baremetal-speed"&gt;
  &lt;/a&gt;
  Docker containers don’t work at a bare-metal speed
&lt;/h3&gt;

&lt;p&gt;Containers do not have the overhead of virtual computers, but their effect on efficiency is also observable. If your workload necessitates bare-metal performance, a container will be able to bring you near enough—much closer than a VM—but you'll still see some overhead.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker-container-are-stateless-and-immuntable"&gt;
  &lt;/a&gt;
  Docker container are stateless and immuntable.
&lt;/h3&gt;

&lt;p&gt;Containers boot and run from an illustration that specifies the contents of the container. That picture is timeless by default—it does not alter until it is made.&lt;/p&gt;

&lt;p&gt;As a result, containers lack persistency. If you start a container instance, then destroy it and restart it, the new container instance will not have all of the old one's stateful knowledge.&lt;/p&gt;

&lt;p&gt;There is also another distinction between containers and virtual machines. Since it has its own file system, a virtual machine has persistent persistence through sessions by default. The picture used to boot the program that runs in the container is the only thing that exists with a container; the only way to modify that is to produce a new, updated container image.&lt;/p&gt;

&lt;p&gt;Container statelessness makes container contents more stable and simpler to compose predictably into program stacks. It also requires developers to keep device data and code separate, this is a very big advantage. If we expect a container to have some sort of continuous state, the state must be stored somewhere else. This  may be a database or a separate storage volume that is attached to the container at boot time.&lt;/p&gt;

&lt;p&gt;Companies irrespective of what they can deliver IaaS ,PaaS,SaaS all the companies extensively use it somehow or another way thus this Docker Engine is making the world more unique in terms of the development i.e. Software Development.&lt;/p&gt;

&lt;p&gt;Thus never confuse between the containers being a VM or microservice they can be misleading concepts for us all.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Serverless AWS Textract Document Scanner</title>
      <author>sehmimhaque</author>
      <pubDate>Wed, 21 Apr 2021 03:17:31 +0000</pubDate>
      <link>https://dev.to/sehmimhaque/serverless-aws-textract-document-scanner-1egb</link>
      <guid>https://dev.to/sehmimhaque/serverless-aws-textract-document-scanner-1egb</guid>
      <description>&lt;p&gt;In this blog we will use AWS Textract to scan and extract the texts of a document from a picture and get a JSON output response. We will also use AWS lambda function with Node.js to build a backend. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IPopW2tv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/800/1%2AiSkkzY9PaqdIqFC3aQDnfw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IPopW2tv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/800/1%2AiSkkzY9PaqdIqFC3aQDnfw.jpeg" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-setting-up-backend-with-serverless-using-node"&gt;
  &lt;/a&gt;
  1. Setting up Backend with Serverless using Node
&lt;/h3&gt;

&lt;p&gt;Assuming you already know how serverless works, we can continue with AWS Textract and the flow it follows. If you're not familiar with serverless with node please don't jump the gun, go checkout some tuts &lt;a href="https://www.serverless.com/blog/node-rest-api-with-serverless-lambda-and-dynamodb"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Okay. Let's quickly setup our serverless&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sls create --template aws-nodejs --path myService
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure you have the dependencies in your package.json file as well. Then run&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;npm install&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "name": "Document Scanner",
  "version": "1.0.0",
  "description": "",
  "main": "handler.js",
  "scripts": {
    "test": "mocha src/test/**"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "aws-sdk": "^2.860.0",
    "aws-sdk-mock": "^4.5.0",
    "dirty-chai": "^2.0.1",
    "generator-serverless-policy": "^2.0.0",
    "mocha": "^8.3.1",
    "serverless": "^1.43.0",
    "serverless-iam-roles-per-function": "^1.0.4",
    "serverless-mocha": "^1.12.0",
    "serverless-mocha-plugin": "^1.12.0",
    "serverless-pseudo-parameters": "^2.4.0",
    "serverless-tag-api-gateway": "^1.0.0",
    "standard": "^11.0.1"
  },
  "dependencies": {
    "chai": "^4.3.3",
    "fs-extra": "^9.1.0",
    "serverless-secrets-plugin": "^0.1.0",
    "sharp": "^0.27.2"
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  NOTE
&lt;/h4&gt;

&lt;p&gt;Some things to keep in mind before continuing &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make sure you have proper authorization for this task. &lt;/li&gt;
&lt;li&gt;Check your region. &lt;/li&gt;
&lt;li&gt;Make sure the bucket url is accurate. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#2-now-once-aws-sdk-is-configured-we-can-write-code-for-textract"&gt;
  &lt;/a&gt;
  2. Now once AWS SDK is configured, we can write code for Textract
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'use strict';
const AWS = require('aws-sdk');
AWS.config.update({region:'YOUR_REGION'});
const textract = new AWS.Textract();

module.exports.textractAnalyinzer = async (event) =&amp;gt; {

  let { fileKey } = JSON.parse(event.body)

  const ttparams = {
      DocumentLocation: { S3Object: { Bucket: 'BUCKET_NAME', Name:  fileKey } },
      FeatureTypes: [ 
          "TABLES" , 
          // "FORMS" 
      ],
    };

  const analysis = await textract.startDocumentAnalysis(ttparams).promise();
  console.log(analysis);
  const JobId = analysis.JobId
  console.log('Waiting for processing');
  let response = {};
  do {
      await sleep(1000);
      response = await textract.getDocumentAnalysis({
          JobId,
          MaxResults : 1
      }).promise();
      //console.log(response.JobStatus)
  } while (response.JobStatus=="IN_PROGRESS");

  console.log(response);
  let Blocks = [...response.Blocks];

  do {
      response = await textract.getDocumentAnalysis({
          JobId, 
          NextToken : response.NextToken
      }).promise();
      Blocks = Blocks.concat(response.Blocks);
  } while( response.NextToken );

  # All Text By Line
  let textByLine = purifyAnalyzedDataToAllLines(Blocks)

  return {
    statusCode: 200,
    body: JSON.stringify(
      {
        message: 'Go Serverless v1.0! Your function executed successfully!',
        "fileKey": document,
        "textByLine": textByLine,
        "texTractblocks" : blocks ## Full response from textract
      },
      null,
      2
    ),
  };
};


function sleep(ms) {
  return new Promise(resolve =&amp;gt; setTimeout(resolve, ms));
}

function purifyAnalyzedDataToAllLines(data) {
  return data.filter(item =&amp;gt; item.BlockType === "LINE")
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The following code finds a file with the specific key in s3/public/** and then runs Textract analysis on it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-deploy-the-code"&gt;
  &lt;/a&gt;
  3. Deploy the Code
&lt;/h3&gt;



&lt;p&gt;&lt;code&gt;sls deploy&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Find the endpoint, for me it looks like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qnDm9xmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/fdd5wNC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qnDm9xmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/fdd5wNC.png" alt="alt text" title="Logo Title Text 1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#4-for-our-next-step-we-will-drop-a-file-manually-on-the-bucket-so-we-can-use-it-for-testing"&gt;
  &lt;/a&gt;
  4. For our next step, we will drop a file manually on the bucket so we can use it for testing.
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Go to S3, &lt;/li&gt;
&lt;li&gt;the navigate to /public &lt;/li&gt;
&lt;li&gt;and then upload a img file&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MyuCJmpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kSoIqJC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MyuCJmpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kSoIqJC.png" alt="alt text" title="Logo Title Text 1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#im-using-this-old-receipt"&gt;
  &lt;/a&gt;
  Im using this old receipt
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zAiboORY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/U0aOvD7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zAiboORY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/U0aOvD7.jpg" alt="alt text" title="Logo Title Text 1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#5-finally-test-it-on-post-man"&gt;
  &lt;/a&gt;
  5. Finally, Test it on post man.
&lt;/h4&gt;

&lt;p&gt;payload:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    "fileKey" : "public/demo.jpeg"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;If it gives you timeout error, change the function time out to 30s on .yml file. &lt;/li&gt;
&lt;li&gt;You can see the type of data we get back. For this demo I'm gonna take every line and add them together in an array. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your response should look somethig like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "fileKey": "public/demo.jpeg",
    "textByLine": [
        {
            "line": "01/027 APPROVED - THANK YOU",
            "confidence": 99.5232162475586
        },
        .
        .
        .
        .
    ],
    "texTractblocks": [
        {
            "BlockType": "PAGE",
            "Geometry": {
                "BoundingBox": {
                    "Width": 0.8844140768051147,
                    "Height": 0.8354079723358154,
                    "Left": 0.048781704157590866,
                    "Top": 0.15526676177978516
                },
                "Polygon": [
                    {
                        "X": 0.07131516188383102,
                        "Y": 0.1597394049167633
                    },
                    {
                        "X": 0.9331957697868347,
                        "Y": 0.15526676177978516
                    },
                    {
                        "X": 0.9245083928108215,
                        "Y": 0.9906747341156006
                    },
                    {
                        "X": 0.048781704157590866,
                        "Y": 0.9588059782981873
                    }
                ]
            },
            "Id": "9b384b8d-dcb8-4596-8511-af18659a9787",
            "Relationships": [
                {
                    "Type": "CHILD",
                    "Ids": [
                        "250a9339-d1ed-4c21-ad50-5a2154cd89da",
                        "aac798f2-3c05-41a2-979c-869509b53d58",
                        "eb878ad4-8b37-415d-b6ac-8cc909dab0a3",
                        "376c375f-94d1-47b7-9f4e-a9fb203043f2",
                        "628dbdd6-1225-43c9-867c-9a83ea91e1ae",
                        "aecacbf9-8727-4334-a904-6795df9c455b",
                        "c8e51b32-d010-4300-8e98-6002d6e5eee3",
                        "20e6422a-16c0-41b6-be2d-6c0c9d09ed44",
                        "82bfdb0d-20bd-407f-bc3b-33aef24fc097",
                        "aa3125fd-2e2d-48a5-9416-84ef7a987976",
                        "10ec162e-a937-4cd2-87d5-6d6b9205d719",
                        "b05a2ece-0a7f-4e65-87e5-fe4e49277f25",
                        "561f5c75-bbb4-4dc6-8660-fbc3f7386f9c",
                        "665bb6fe-8ac9-44b3-af49-189ac3ea7757",
                        "5d42a676-0621-42ad-89ff-7a16873290c4",
                        "bdb02d6e-3b80-4913-8359-ef7e70068582",
                        "28691f75-aef5-418d-8519-1d05bb991fda",
                        "8c4b9208-c2c5-4ad8-96a6-35e962043fbd"
                    ]
                }
            ]
        },
        .
        .
        .
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#next-step"&gt;
  &lt;/a&gt;
  Next Step
&lt;/h3&gt;

&lt;p&gt;Next week I will continue on with this app and build a front end for it using Flutter and AWS Amplify. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We will setup AWS Amplify suing Flutter, &lt;/li&gt;
&lt;li&gt;Setup our camera to take pictures. &lt;/li&gt;
&lt;li&gt;Once that's done we will confirm and send the picture to the S3 store,&lt;/li&gt;
&lt;li&gt;Which will trigger our lambda function and send us the response back to our front-end.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>node</category>
      <category>serverless</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>How to redirect in SvelteKit endpoints</title>
      <author>Dana Woodman</author>
      <pubDate>Wed, 21 Apr 2021 02:29:55 +0000</pubDate>
      <link>https://dev.to/danawoodman/how-to-redirect-in-sveltekit-endpoints-1im3</link>
      <guid>https://dev.to/danawoodman/how-to-redirect-in-sveltekit-endpoints-1im3</guid>
      <description>&lt;p&gt;Wanted to do redirects in your SvelteKit endpoints and tried to &lt;code&gt;return { redirect: '/success' }&lt;/code&gt; just to find out it doesn't work?&lt;/p&gt;

&lt;p&gt;Well, you're in luck because you can just use the standard &lt;code&gt;Location&lt;/code&gt; header to do redirects:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// Do some magic here... ✨&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;Location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/success&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;302&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember to make sure use the &lt;a href="https://httpstatusdogs.com/"&gt;proper status code&lt;/a&gt; for your redirect.&lt;/p&gt;

&lt;p&gt;Learn more about the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Location"&gt;&lt;code&gt;Location&lt;/code&gt; header on MDN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Whelp, that's it for today, hope this saved you some headaches!&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Follow me on &lt;a href="https://dev.to/danawoodman"&gt;Dev.to&lt;/a&gt;, &lt;a href="https://twitter.com/DanaWoodman"&gt;Twitter&lt;/a&gt; and &lt;a href="https://github.com/danawoodman"&gt;Github&lt;/a&gt; for more web dev and startup related content&lt;/em&gt;&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>sveltekit</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
