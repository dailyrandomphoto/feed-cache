<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Laravel response macro</title>
      <author>M. Akbar Nugroho</author>
      <pubDate>Fri, 13 Aug 2021 18:44:04 +0000</pubDate>
      <link>https://dev.to/thexdev/laravel-response-macro-3e8f</link>
      <guid>https://dev.to/thexdev/laravel-response-macro-3e8f</guid>
      <description>&lt;p&gt;In this article I will talk about one of my favorite feature when using Laravel framework. Yes, It's a response macro.&lt;/p&gt;

&lt;p&gt;I will share you what it is and how we can use this feature to make our response more simpler and reusable.&lt;/p&gt;

&lt;p&gt;Let's start it out!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-response-macro"&gt;
  &lt;/a&gt;
  What is response macro?
&lt;/h2&gt;

&lt;p&gt;Response macro is a custom response that you can re-use in your routes or controllers.&lt;/p&gt;

&lt;p&gt;When building a REST API, commonly you will use &lt;code&gt;response()&lt;/code&gt; helper to send data back to the user.&lt;/p&gt;

&lt;p&gt;You also use some variants of &lt;code&gt;response()&lt;/code&gt; helper when you want to tell that the requested data is not found.&lt;/p&gt;

&lt;p&gt;For example you will use these similar syntax to handle your REST API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Syntax when sending response with HTTP no content&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;response&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;204&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Syntax when sending response with HTTP not found&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;response&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;json&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'message'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post not found'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Syntax when sending response with HTTP created&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;response&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;json&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'message'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'register success'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, imagine. What if we can transform those response into simpler form but has same functionality?.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Syntax when sending response with HTTP no content&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;response&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;noContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Syntax when sending response with HTTP not found&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;response&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;notFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'post not found'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Syntax when sending response with HTTP created&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;response&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;created&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'register success'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's cool right? even those syntax tells us explicitly what actual action of those response send to the user.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-add-response-macro"&gt;
  &lt;/a&gt;
  How to add response macro?
&lt;/h2&gt;

&lt;p&gt;Basically, we just extend the basic features of Laravel &lt;code&gt;Response&lt;/code&gt; object by registering our custom response inside &lt;code&gt;App\Providers\AppServiceProvider&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Open file &lt;code&gt;app/Providers/AppServiceProvider.php&lt;/code&gt; and use &lt;code&gt;Illuminate\Support\Facades\Response&lt;/code&gt; (Response facade). To register the custom response use &lt;code&gt;Response::macro()&lt;/code&gt; inside the &lt;code&gt;boot&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Response::macro()&lt;/code&gt; has two parameters. The custom response name and the implementation. Let's add one of the previous custom responses above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Providers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\JsonResponse&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Facades\Response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\ServiceProvider&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AppServiceProvider&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;ServiceProvider&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Bootstrap any application services.
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;boot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;macro&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'notFound'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;compact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'message'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;HTTP_NOT_FOUND&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-use-response-macro"&gt;
  &lt;/a&gt;
  How to use response macro?
&lt;/h2&gt;

&lt;p&gt;If you have added the response macro, you can use it inside routes or controllers. For example you have a &lt;code&gt;PostController.php&lt;/code&gt; with method &lt;code&gt;show&lt;/code&gt; inside it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;is_null&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Post with id %d not found'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;response&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;notFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;PostResource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h2&gt;

&lt;p&gt;Response macro is not about adding simple custom response only. You can use response macro as a transform layer (or service) to add micro functionality.&lt;/p&gt;

&lt;p&gt;For example you can add response macro to convert markdown to HTML.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;boot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;macro&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'markdown'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$raw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// fake markdown converter library&lt;/span&gt;
        &lt;span class="nv"&gt;$md&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Markdown&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;make&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'data'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$md&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;toHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$raw&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; &lt;span class="no"&gt;HTTP_OK&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use it inside your controller.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;is_null&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Post with id %d not found'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;response&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;notFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;response&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;:&lt;br&gt;
When you use response macro as a transform layer, always remember to never put business logic inside it such a validation, database operations, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/thexdev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3gHgh1Nj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520macbook%26emoji%3D%25F0%259F%2592%25BB%26slug%3Dthexdev%26button_colour%3DFFDD00%26font_colour%3D000000%26font_family%3DPoppins%26outline_colour%3D000000%26coffee_colour%3Dffffff"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
    </item>
    <item>
      <title>9 Things I’ve Learned About Software Development Management </title>
      <author>Nick Hodges</author>
      <pubDate>Fri, 13 Aug 2021 18:37:16 +0000</pubDate>
      <link>https://dev.to/linearb/9-things-i-ve-learned-about-software-development-management-547f</link>
      <guid>https://dev.to/linearb/9-things-i-ve-learned-about-software-development-management-547f</guid>
      <description>&lt;p&gt;Managing the software development process has been likened to herding cats. In other words, you can’t really do it, but you can sure give it the old college try.&lt;/p&gt;

&lt;p&gt;It’s no secret that managing the development of a software project is an imprecise science. Here are nine truisms that I’ve learned over the years that have helped me to understand the limitations of our ability to manage the strange world of software development projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-estimates-are-always-wrong"&gt;
  &lt;/a&gt;
  1. Estimates Are Always Wrong
&lt;/h2&gt;

&lt;p&gt;Whether you estimate something at one hour or one year, your estimate is wrong. That’s just the way it is. They won’t necessarily be extremely wrong — they might only be a little bit off — but they will be wrong.&lt;/p&gt;

&lt;p&gt;If you look at a bug report and think, “That will take an hour to fix,” it almost certainly won’t take an hour. It might take 45 minutes, it might take three hours, but the chances of it taking exactly an hour — even give or take a minute or two — are slim. Now, you might say, “about an hour” instead. That’s a better estimate because actual, precise estimates are wrong.&lt;/p&gt;

&lt;p&gt;Now for short projects that might take an hour, this isn’t a big deal. But…&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-the-bigger-the-project-the-less-accurate-your-estimate-will-be"&gt;
  &lt;/a&gt;
  2. The Bigger the Project, the Less Accurate Your Estimate Will Be
&lt;/h2&gt;

&lt;p&gt;The bigger the project, the less precise the estimate will be — especially if estimation takes place at the very beginning of the project. As with the hour estimate above, if you estimate a project at a year, it might take nine months or 36 months. In some cases, it might take five years. There is no way to know when the project is starting out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nYz7XPoW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AZavfancT_NavDFgo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nYz7XPoW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AZavfancT_NavDFgo.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The bigger the project, the more “unknown unknowns” there are. There are usually more people involved. That is, as a project’s size increases, there are more variables and more things that will happen that you cannot anticipate. All of these things will add time to the project that you can’t plan for at the beginning because by definition you don’t know that they are going to happen.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-focus-and-concentration-are-our-most-valuable-and-scarcest-commodities"&gt;
  &lt;/a&gt;
  3. Focus and Concentration Are Our Most Valuable — and Scarcest — Commodities
&lt;/h2&gt;

&lt;p&gt;When building software, the single most valuable thing required to complete a project is the ability of the developers on the team to concentrate in an undistracted manner.&lt;/p&gt;

&lt;p&gt;The fewer distractions, the more productive the team will be. It’s really that simple. One of the main responsibilities of a software development manager is to reduce the number and duration of distractions to the team.&lt;/p&gt;

&lt;p&gt;Software developers, when left alone, can be quite productive. &lt;a href="https://linearb.io/blog/dev-productivity-is-way-down-at-linearb/"&gt;When they are interrupted — whether for meetings or by people asking questions or anything else — they can lose that productivity very quickly. &lt;/a&gt;We all know about “flow” and how hard it is to get into the flow and stay there. That flow time should be valued like bitcoin and protected as such.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-hofstadters-law-is-the-truth"&gt;
  &lt;/a&gt;
  4. Hofstadter’s Law Is the Truth
&lt;/h2&gt;

&lt;p&gt;Hofstadter’s Law is stated as follows:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;“It always takes longer than you expect, even when you take into account Hofstadter’s Law.”&lt;/em&gt;&lt;/strong&gt; — Wikipedia&lt;/p&gt;

&lt;p&gt;This is related to estimates, but it’s important to note the beauty of this aphorism. You can pad your estimates because you think it will help buy you time to get things done. You can add in extra factors, plan for “unknown unknowns,” and increase your estimates to take into account the belief that it will take longer than you think, but in the end, it will still almost always take you longer than you think to get a project done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-you-can-only-run-in-the-red-for-very-very-brief-periods"&gt;
  &lt;/a&gt;
  5. You Can Only Run in the Red for Very, Very Brief Periods
&lt;/h2&gt;

&lt;p&gt;You can demand the team put in more hours, come in on weekends — all those “crack the whip” kinds of things — and you might get some (very) short-term gains out of that.&lt;/p&gt;

&lt;p&gt;But if you try to make it the norm — if you try to run your team’s engine at the red line of RPMs on a consistent basis — you will burn out the engine. You will see diminishing returns pretty quickly. Employees will leave. People, like race car engines, cannot be overstressed for extended periods of time without breaking down.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-brain-time-is-more-important-than-butt-time"&gt;
  &lt;/a&gt;
  6. Brain Time Is More Important Than Butt Time
&lt;/h2&gt;

&lt;p&gt;This one is so important, &lt;a href="https://linearb.io/blog/improve-developer-productivity-with-brain-time/"&gt;I wrote a whole blog post about it.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nothing will decrease productivity more than demanding Butt Time (i.e. that your developers be seen sitting in their chairs for hours on end). You can measure Butt Time and feel like you’ve got a metric that will really show how productive people are being. But you’d be wrong. Demanding Butt Time will demoralize a team that really wants to spend Brain Time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0a-AMjWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AwZ8kqf20gWDj2DSo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0a-AMjWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AwZ8kqf20gWDj2DSo.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Brain Time is what really matters. Think about it this way: Let’s say you are a manager and it is most important for you to see your team sitting at their desks “working.” You wander around the office seeing those developers sitting in their chairs, pounding away at their keyboards. All is well with the world.&lt;/p&gt;

&lt;p&gt;But then you run across one developer, and they’re just sitting there staring at their screen. That’s it. They’re sitting and staring. For like half an hour. What the heck! They’re not doing a thing!&lt;/p&gt;

&lt;p&gt;But of course, they are. They’re thinking. They’re spending Brain Time solving a very difficult problem. Maybe they even get up and wander around the building for a while. In the end, they sit down, type 11 lines of code, and mark a user story complete.&lt;/p&gt;

&lt;p&gt;Did they meet your “Butt Time” criteria? No. Did they produce an elegant solution to a very difficult problem? Yes.&lt;/p&gt;

&lt;p&gt;Butt Time proves nothing. Brain Time means everything.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-hardware-is-cheaper-than-developer-time-way-cheaper"&gt;
  &lt;/a&gt;
  7. Hardware Is Cheaper Than Developer Time — Way Cheaper
&lt;/h2&gt;

&lt;p&gt;Developers are expensive. You pay competitive salaries to attract top talent. An hour of their time is not cheap. Despite this, many companies don’t realize the incredible value of an hour of a developer’s time and skimp on hardware for the team.&lt;/p&gt;

&lt;p&gt;But come on, computers are expensive! That extra RAM will bust the budget for hardware!&lt;/p&gt;

&lt;p&gt;Well, it might bust the budget, but that’s because you’ve got a budget problem.&lt;/p&gt;

&lt;p&gt;Look at it this way: Let’s say that you pay a developer $100,000 a year — or around $50 an hour. Let’s say they spend an hour a day waiting for the compiler to do its work. However, you could add some RAM and a faster processor to that developer’s machine and cut that time down to 45 minutes a day. You save 15 minutes a day. At 200 days a year, that is 50 hours. At $50 an hour, that is $2,500 saved per developer per year. But what if the incremental cost of the faster machine is $500?&lt;/p&gt;

&lt;p&gt;You get the point. If you have 20 developers, getting the faster machine saves you $40,000 for a $10,000 investment. That ought to be a no-brainer.&lt;/p&gt;

&lt;p&gt;And that is only for the faster compile times. Everything else they do will be faster as well.&lt;/p&gt;

&lt;p&gt;If your budget doesn’t allow for faster machines, then you need to adjust your budget.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-if-you-havent-read-peopleware-then-you-arent-really-a-software-development-manager"&gt;
  &lt;/a&gt;
  8. If You Haven’t Read “PeopleWare”, Then You Aren’t Really a Software Development Manager
&lt;/h2&gt;

&lt;p&gt;As far as I’m concerned, there is but one book that will teach you how to manage software developers: Peopleware by Tom DeMarco and Timothy Lister (be sure to get the third edition…).&lt;/p&gt;

&lt;p&gt;This book is excellent, insightful, to the point, clear, and pulls no punches. It is full of wisdom about managing software projects and software developers. It is timeless.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3jtWVsA"&gt;Read it.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-quality-is-a-perception-not-a-bug-count"&gt;
  &lt;/a&gt;
  9. Quality Is a Perception — Not a Bug Count
&lt;/h2&gt;

&lt;p&gt;This one is really hard to accept.&lt;/p&gt;

&lt;p&gt;Here’s the basic premise: You can have close to zero bugs in your bug tracker and people can still think your software is buggy. You can have a large number of bugs in your bug tracker and people can think your software is as solid as a rock. There’s no correlation between the number of bugs in your tracking system and the perception of the quality of your software.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tIwX3h8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AKS5lBVJo3XuK8Fk3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tIwX3h8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AKS5lBVJo3XuK8Fk3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now I’m not arguing that you shouldn’t try to reduce your bug count — quite the contrary. But in the end, your software can only be said to be of high quality if your customers perceive it that way — and your bug count won’t necessarily dictate that. Weird, huh?&lt;/p&gt;

&lt;p&gt;And while we are on the subject, what does it mean to have a “high” bug count? What is the definition of “high” when your codebase has 100,000 lines of code? 5 million lines of code? Who’s to say?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#embrace-flexibility"&gt;
  &lt;/a&gt;
  Embrace Flexibility
&lt;/h2&gt;

&lt;p&gt;Bringing a software project in for a safe landing on a short runway is a challenging and difficult proposition under the best of circumstances. Add in the ambiguities and all the things that can go wrong along the way, and it’s a miracle anything gets done. Development managers need to be flexible and take things as they come&lt;/p&gt;

&lt;p&gt;The trick is to accept and understand those ambiguities and to work with them — not against them. Accepting these nine truisms will help with that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sponsored by LinearB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XJ5b1w2n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2Ak2MgP_GBMF069d1W.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XJ5b1w2n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2Ak2MgP_GBMF069d1W.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Want to reduce a lot of that ambiguity? &lt;a href="https://linearb.io"&gt;LinearB &lt;/a&gt;can closely track what is happening in your software pipeline, enabling more brain time, and automating things that require butt time. &lt;a href="https://linearb.io/demo/"&gt;Book a demo today &lt;/a&gt;and find out how you can drastically reduce your code delivery times and continuously improve your development process.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fKyH7-_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1k9skkqa924umnrnmzfx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fKyH7-_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1k9skkqa924umnrnmzfx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you haven't already heard&lt;/strong&gt;, Dev Interrupted is hosting &lt;strong&gt;INTERACT&lt;/strong&gt;: An interactive, community-driven, digital conference on September 30th - by engineering leaders, for engineering leaders. 1 day, 10 speakers, 100s of engineers and engineering leaders, all free.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;Register Now&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
&lt;em&gt;Originally published at &lt;a href="https://devinterrupted.com/nine-software-development-lessons/"&gt;https://devinterrupted.com&lt;/a&gt; on July 1, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>management</category>
      <category>devops</category>
      <category>leadership</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Choosing between Client Side Rendering and Server Side Rendering for your *next* project</title>
      <author>Aryan Chopra</author>
      <pubDate>Fri, 13 Aug 2021 18:03:24 +0000</pubDate>
      <link>https://dev.to/aryanchopra/choosing-between-client-side-rendering-and-server-side-rendering-for-your-next-project-286g</link>
      <guid>https://dev.to/aryanchopra/choosing-between-client-side-rendering-and-server-side-rendering-for-your-next-project-286g</guid>
      <description>&lt;p&gt;If you're wondering what the heck is server side rendering and client side rendering? Let me give you a quick introduction.&lt;/p&gt;

&lt;p&gt;Let's say you go to the supermarket to get food, you have two choices, to either stock up for the whole month or just get what you want for now. If you choose to stock up, you don't have to go back to the market, you can just open your fridge and get what you want.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Client Side Rendering&lt;/em&gt; is analogous to this. Your browser initially sends a request to the server and the server responds with a file similar to the one below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="nx"&gt;DOCTYPE&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UTF-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;
      &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;viewport&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Rendering&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/title&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/head&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;--&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;JS&lt;/span&gt; &lt;span class="nx"&gt;later&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/body&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/html&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The browser, after loading the HTML and CSS then request the index.js file which contains your entire bundled application. Note that before the JS loads, the user cannot interact with the site. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4NXAQFN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxtwc6no9xgk3igqxdc8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z4NXAQFN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxtwc6no9xgk3igqxdc8.png" alt="CSR"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Notice how the server initially sends an empty html file with only a div whose id is root? This can be a huge turnoff if you want your site indexed for &lt;em&gt;Search Engine Optimization&lt;/em&gt; by search engines, because the web crawlers don't parse the index.js while indexing and only see a blank page with a single empty div. &lt;br&gt;
Even though Google claims it can index React websites, it would only be able to index the initial render and not the components that are being lazy-loaded.&lt;/p&gt;

&lt;p&gt;Another disadvantage to Client Side Rendering would be longer loading times, the user cannot interact with the website until the intitial JavaScript has been loaded by the browser (even though CSR makes up for it by being super fast once everything is loaded)&lt;br&gt;
With slow connections, it can take more than 5 seconds just to load 500KB of JavaScript.&lt;/p&gt;

&lt;p&gt;Now, &lt;em&gt;Server Side Rendering&lt;/em&gt; comes into picture, let's say you went to the supermarket and bought only what you needed, and when you needed more stuff, you went out to get it again, SSR works in a similar way.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LSSK6Lb_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ae0lhqzehbw5idbhip4a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LSSK6Lb_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ae0lhqzehbw5idbhip4a.png" alt="SSR"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unlike a client-side rendered site where the entire JS file needs to be downloaded and parsed before user can start interacting with it, in SSR the browser receives the initial HTML file with server rendered content for the user to see, once the JavaScript is loaded, only the event handlers need to be attached to the DOM elements.&lt;br&gt;
One disadvantage of using Server Side Rendering each new page needs to be rendered by the server and fetched which increases the load on the server.&lt;/p&gt;

&lt;p&gt;Let's weigh the pros and cons for both CSR and SSR:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Client Side Rendering&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Pros&lt;/em&gt;&lt;br&gt;
• If your initial js bundle is small your website load speed and overall user experience would be good.&lt;br&gt;
• Possibility of lazy loading the components you want.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cons&lt;/em&gt;&lt;br&gt;
• SEO Disadvantages.&lt;br&gt;
• Initial booting time can be high if your app is large.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Server Side Rendering&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Pros&lt;/em&gt;&lt;br&gt;
• Because everything is happening within the server, data fetching is insanely fast with almost 0 latency.&lt;br&gt;
• Loading speed is not affected much by the user's connection speed since the server does all the heavy lifting.&lt;br&gt;
• SEO benefits.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cons&lt;/em&gt;&lt;br&gt;
• Each page needs to be rendered by the server individually on request by the browser.&lt;br&gt;
• You're essentially loading the whole website on the server before sending it to the user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;But, is there a way to use both Client Side Rendering and Server Side Rendering at the same time?&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Yes&lt;/em&gt;, you don't need to sacrifice all of the features of CSR or SSR to fully use the other method. You can simply use a &lt;strong&gt;Universal Web App&lt;/strong&gt;.&lt;br&gt;
Universal Web Apps combine both CSR and SSR by doing the initial render on the server, and once the page loads, client side rendering will take place. Because of this we have good Search Engine optimization, fast initial renders and speed when browsing the site.&lt;br&gt;
These are the flagship features of frameworks like &lt;em&gt;NextJS and NuxtJS&lt;/em&gt;. If you're curious, digging deeper into them would be quite fun and helpful!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
I hope you found something useful out of this read, and if you did, please drop a like or let me know what your thoughts are in the comments, I really appreciate feedback, have a good day! :) &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>nextjs</category>
      <category>webdev</category>
    </item>
    <item>
      <title>🚀 React Boilerplate with TypeScript and Tailwind CSS for 2021</title>
      <author>Remi W.</author>
      <pubDate>Fri, 13 Aug 2021 17:56:04 +0000</pubDate>
      <link>https://dev.to/ixartz/react-boilerplate-with-typescript-and-tailwind-css-for-2021-k53</link>
      <guid>https://dev.to/ixartz/react-boilerplate-with-typescript-and-tailwind-css-for-2021-k53</guid>
      <description>&lt;p&gt;Recently, I've built several projects in React with Next JS. For each projects, I was setting up the same dependencies again and again. So, I thought it could be great a boilerplate for 2021 and share it to the community.&lt;/p&gt;

&lt;p&gt;Built with developer-first in mind with tools to improve productivity like ESLint linter, Prettier code formatter and VSCode configuration. Built for 2021 with Next JS and Tailwind CSS. Finally, build for production with one-click deployment and with SEO-ready.&lt;/p&gt;

&lt;p&gt;You can check a live demo at this url : &lt;a href="https://creativedesignsguru.com/demo/Nextjs-Boilerplate/"&gt;React Boilerplate with TypeScript and Tailwind CSS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also check the source code on GitHub: &lt;a href="https://github.com/ixartz/Next-js-Boilerplate"&gt;React Boilerplate GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Already more than 400+ ⭐ stars on Github...&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ixartz"&gt;
        ixartz
      &lt;/a&gt; / &lt;a href="https://github.com/ixartz/Next-js-Boilerplate"&gt;
        Next-js-Boilerplate
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀 Boilerplate and Starter for Next.js 11+, Tailwind CSS 2.0 and TypeScript ⚡️ Made with developer experience first: Next.js + TypeScript + ESLint + Prettier + Husky + Lint-Staged + VSCode + Netlify + PostCSS + Tailwind CSS
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Boilerplate and Starter for Next JS 11+, Tailwind CSS 2.0 and TypeScript &lt;a href="https://twitter.com/ixartz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/22898de970db41d476e65546387c7b5147565904f1a4197980bb0e3eb30eb8ab/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f636c6f7564706f7373652e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f7725323025343049786172747a" alt="Twitter"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
  &lt;a href="https://creativedesignsguru.com/demo/Nextjs-Boilerplate/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SOL9mcNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ixartz/Next-js-Boilerplatepublic/assets/images/nextjs-starter-banner.png%3Fraw%3Dtrue" alt="Next js starter banner"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;🚀 Boilerplate and Starter for Next.js, Tailwind CSS and TypeScript ⚡️ Made with developer experience first: Next.js, TypeScript, ESLint, Prettier, Husky, Lint-Staged, VSCode, Netlify, PostCSS, Tailwind CSS.&lt;/p&gt;

&lt;p&gt;Clone this project and use it to create your own &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; project. You can check a &lt;a href="https://creativedesignsguru.com/demo/Nextjs-Boilerplate/" rel="nofollow"&gt;Next js templates demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
Features&lt;/h3&gt;

&lt;p&gt;Developer experience first:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
🔥 &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; for Static Site Generator&lt;/li&gt;
&lt;li&gt;
🎨 Integrate with &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt; (w/ JIT mode)&lt;/li&gt;
&lt;li&gt;
💅 PostCSS for processing Tailwind CSS and integrated to &lt;code&gt;styled-jsx&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
🎉 Type checking &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
✅ Strict Mode for TypeScript and React 17&lt;/li&gt;
&lt;li&gt;
✏️ Linter with &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt; (default NextJS, NextJS Core Web Vitals and Airbnb configuration)&lt;/li&gt;
&lt;li&gt;
🛠 Code Formatter with &lt;a href="https://prettier.io" rel="nofollow"&gt;Prettier&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🦊 Husky for Git Hooks&lt;/li&gt;
&lt;li&gt;
🚫 Lint-staged for running linters on Git staged files&lt;/li&gt;
&lt;li&gt;
🗂 VSCode configuration: Debug, Settings, Tasks and extension for PostCSS, ESLint, Prettier, TypeScript&lt;/li&gt;
&lt;li&gt;
🤖 SEO metadata, JSON-LD and…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ixartz/Next-js-Boilerplate"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Here is the features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;🔥 Instant feedback with Next JS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🚀 Routing with Next JS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;💅 Styled with Tailwind CSS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✏️ Linter with ESLint and Code formatter with Prettier&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🎉 Type checking with Typescript&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ One-click deploy on Vercel or Netlify&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🤖 SEO friendly&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🚀 Production-ready&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ixartz"&gt;
        ixartz
      &lt;/a&gt; / &lt;a href="https://github.com/ixartz/Next-js-Boilerplate"&gt;
        Next-js-Boilerplate
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀 Boilerplate and Starter for Next.js 11+, Tailwind CSS 2.0 and TypeScript ⚡️ Made with developer experience first: Next.js + TypeScript + ESLint + Prettier + Husky + Lint-Staged + VSCode + Netlify + PostCSS + Tailwind CSS
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Boilerplate and Starter for Next JS 11+, Tailwind CSS 2.0 and TypeScript &lt;a href="https://twitter.com/ixartz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/22898de970db41d476e65546387c7b5147565904f1a4197980bb0e3eb30eb8ab/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f636c6f7564706f7373652e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f7725323025343049786172747a" alt="Twitter"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
  &lt;a href="https://creativedesignsguru.com/demo/Nextjs-Boilerplate/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SOL9mcNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ixartz/Next-js-Boilerplatepublic/assets/images/nextjs-starter-banner.png%3Fraw%3Dtrue" alt="Next js starter banner"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;🚀 Boilerplate and Starter for Next.js, Tailwind CSS and TypeScript ⚡️ Made with developer experience first: Next.js, TypeScript, ESLint, Prettier, Husky, Lint-Staged, VSCode, Netlify, PostCSS, Tailwind CSS.&lt;/p&gt;

&lt;p&gt;Clone this project and use it to create your own &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; project. You can check a &lt;a href="https://creativedesignsguru.com/demo/Nextjs-Boilerplate/" rel="nofollow"&gt;Next js templates demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
Features&lt;/h3&gt;

&lt;p&gt;Developer experience first:&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;
🔥 &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; for Static Site Generator&lt;/li&gt;
&lt;li&gt;
🎨 Integrate with &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt; (w/ JIT mode)&lt;/li&gt;
&lt;li&gt;
💅 PostCSS for processing Tailwind CSS and integrated to &lt;code&gt;styled-jsx&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
🎉 Type checking &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
✅ Strict Mode for TypeScript and React 17&lt;/li&gt;
&lt;li&gt;
✏️ Linter with &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt; (default NextJS, NextJS Core Web Vitals and Airbnb configuration)&lt;/li&gt;
&lt;li&gt;
🛠 Code Formatter with &lt;a href="https://prettier.io" rel="nofollow"&gt;Prettier&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🦊 Husky for Git Hooks&lt;/li&gt;
&lt;li&gt;
🚫 Lint-staged for running linters on Git staged files&lt;/li&gt;
&lt;li&gt;
🗂 VSCode configuration: Debug, Settings, Tasks and extension for PostCSS, ESLint, Prettier, TypeScript&lt;/li&gt;
&lt;li&gt;
🤖 SEO metadata, JSON-LD and…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ixartz/Next-js-Boilerplate"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>react</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>#100daysofcode [Day -03]</title>
      <author>Al Siam</author>
      <pubDate>Fri, 13 Aug 2021 17:55:38 +0000</pubDate>
      <link>https://dev.to/alsiamworld/100daysofcode-day-03-16ea</link>
      <guid>https://dev.to/alsiamworld/100daysofcode-day-03-16ea</guid>
      <description>&lt;h1&gt;
  &lt;a href="#100daysofcode-day-03"&gt;
  &lt;/a&gt;
  100daysofcode [Day -03]
&lt;/h1&gt;

&lt;p&gt;Today I've solved some problems.&lt;br&gt;
Getting Fibonacci numbers.&lt;br&gt;
Getting Fibonacci numbers using recursive.&lt;br&gt;
&amp;amp; and some more problems.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_jUK7me8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6q45tnhjb20uq477e5r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_jUK7me8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6q45tnhjb20uq477e5r.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZAy1Wvj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3j8tptr4d1v7ozeveuf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZAy1Wvj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3j8tptr4d1v7ozeveuf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#devcommunity-javascript-programminglife"&gt;
  &lt;/a&gt;
  DEVCommunity #javascript #ProgrammingLife
&lt;/h1&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>codepen</category>
    </item>
    <item>
      <title>Best Book for C++</title>
      <author>Mohamed Hisham Abdelzaher</author>
      <pubDate>Fri, 13 Aug 2021 17:39:08 +0000</pubDate>
      <link>https://dev.to/mh0386/best-book-for-c-23ok</link>
      <guid>https://dev.to/mh0386/best-book-for-c-23ok</guid>
      <description>&lt;p&gt;I'm a computer science student and I'm going to study oop in c++ on the second level, and I was looking for a C++ book, and I found people who advised me to buy the book "C++ how to program" and found it 2017 version, i.e. it doesn't have C++ 17 or C++ 20, is that normal? Why didn't the writer release more recent copies of the book to include C++ 17 and C++ 20 update?&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>cpp</category>
      <category>discuss</category>
      <category>programming</category>
    </item>
    <item>
      <title>ADHD in the workplace — 3 ways you can help devs </title>
      <author>Conor Bronsdon</author>
      <pubDate>Fri, 13 Aug 2021 17:37:29 +0000</pubDate>
      <link>https://dev.to/linearb/adhd-in-the-workplace-3-ways-you-can-help-devs-4bm4</link>
      <guid>https://dev.to/linearb/adhd-in-the-workplace-3-ways-you-can-help-devs-4bm4</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was written exclusively for the Dev Interrupted by Krzysztof Waraksa - an active and participating member of the Dev Interrupted Discord.&lt;/em&gt;&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
In a company with 100 employees, there can be over 10 individuals with some form of neurodiversity such as ADHD, Autism, Dyslexia, or others.&lt;/p&gt;

&lt;p&gt;While neurodiversity exists on a spectrum of intensity for each person, it’s still a significant number of people that could easily not be able to be working to their full potential because of poor accommodations. And according to &lt;a href="https://webarchive.nationalarchives.gov.uk/20210104113255/https://archive.acas.org.uk/index.aspx?articleid=6676"&gt;acas.org.uk, 1 in 7 adults are neurodivergent. &lt;/a&gt;So how can you help make your teams and offices friendlier and less hostile to these employees?&lt;/p&gt;

&lt;p&gt;Fresh from the Dev Interrupted discord, we’re taking a look at what the Dev Interrupted community has to say about handling neurodivergence in the workplace.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hold-open-dialogs-with-your-employees"&gt;
  &lt;/a&gt;
  Hold open dialogs with your employees
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;“I’m the neuro-divergent individual at my work. ADHD and Anxiety disorder. After my concussion last year I now have vertigo. The big thing is overcoming the stigma and asking for what I need (and being honest with myself about what I can do). I’ve found my employer very accommodating. &lt;strong&gt;I would suggest that companies have open dialogs about it so employees are comfortable to come forward&lt;/strong&gt;&lt;/em&gt;." — Discord member Jim MCKeeth&lt;/p&gt;

&lt;p&gt;An open dialog with the employees of your company and teams regarding neurodiversity can indeed be a great help — Not just for anyone who is confirmed to be neurodivergent! Awareness makes it so that people can learn how to accept, understand, and work with people with neurodiversity.&lt;/p&gt;

&lt;p&gt;Reducing stigma and myths regarding certain disorders such as ADHD, where one common belief is that adults cannot have it because of the mental image of ADHD only being present in young hyperactive children, is highly important! Knowing that your team members can understand how you function and how they can best approach you if you’re needed for something can prevent a lot of unnecessary distress and conflict.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As a simple example:&lt;/strong&gt; Imagine that you have a colleague named Brian. Brian has problems switching tasks on a whim because of his ADHD. He needs to mentally prepare himself for each task and carefully convince his brain to focus on the task at hand.&lt;/p&gt;

&lt;p&gt;Now imagine that you have an impromptu meeting, and Brian has to be there. The meeting is happening right now, so you go up to him and tell him to come to the meeting. Brian had no time to mentally prepare for a task-switch, and may be left frustrated and unfocused afterwards.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So what should you do instead?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let’s say that Brian told the team that he has trouble suddenly switching tasks, and requested that you avoid making him have to do so unless absolutely necessary. Instead of having the meeting happen right at the moment that the majority agreed it would happen, you could agree to have it happen in 5 minutes, and give Brian a heads up.&lt;/p&gt;

&lt;p&gt;5 minutes can already be enough time for Brian to be able to mentally prepare to switch tasks, as he can then finish up the segment he was working on and move onto the meeting instead.&lt;/p&gt;

&lt;p&gt;Of course, Ideally, you’d have most of your meetings planned out a few hours before they happen instead, as that way you can prevent having to cause any potential issues in the first place.&lt;/p&gt;

&lt;p&gt;I can personally say that being aware of the difficulties my colleagues can experience, and them knowing what difficulties I may have, has made our ability to work together much more smooth. It’s far too common for people to experience constant frustration because we’re expecting to be talking and working with neurotypical people, however by being considerate and understanding towards each other’s struggles, we can reduce friction and create a more positive experience for everybody involved.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#actively-support-the-individual"&gt;
  &lt;/a&gt;
  Actively support the individual
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;“I had an employee a few years ago with PTSD from time in the Marines. &lt;strong&gt;We worked together to make sure that he had a place where he could work, and also to make sure that everyone knew how to understand him&lt;/strong&gt;. He is a great guy, but could seem severe and prickly if you just looked at him, which tended to keep people away from him. Communication with those he worked with, and some really easy interventions on my part, helped him to have a very successful time with us. I remain friends with him today&lt;/em&gt;.” — Discord member Drdwilcox&lt;/p&gt;

&lt;p&gt;While making the team aware of how to go about handling neurodivergence is one part of bringing a comfortable environment, it is equally important to give focused attention to the employee in question. Approaching them when they seem to be struggling, working together with them to see what could help them, and discovering what their needs are.&lt;/p&gt;

&lt;p&gt;This is something that I wished had happened more throughout my own life, even before I knew of my own ADHD, because even if you don’t know that someone has it you can often notice that something is off when looking at how they’re performing. And usually, they’re underperforming!&lt;/p&gt;

&lt;p&gt;Even if you know that none of your employees or colleagues have any disorders, it never hurts to check in with them when you can and make sure that nothing is holding them back. As a &lt;a href="https://www.sciencedirect.com/science/article/abs/pii/S0738399109001621"&gt;review study of burnout prevention programs states &lt;/a&gt;, 80% of all programs successfully reduced cases of burnout in individuals. Imagine how much help individualized support could provide!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-the-workplace-less-hostile"&gt;
  &lt;/a&gt;
  Making the workplace less hostile
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7_BnuJDf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2AI-9Xk9Ff8mQYQaxl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7_BnuJDf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4000/0%2AI-9Xk9Ff8mQYQaxl.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open-plan and noisy offices, my mortal enemies.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Many people can tolerate an open plan office that often comes with an array of little annoyances, some even actually quite like it for the social aspect. But they’re poison to people with ADHD, who already struggle with keeping themselves from being a distraction from their own work.&lt;/p&gt;

&lt;p&gt;It doesn’t help trying to hold your developers accountable when there’s distracting noise being made. So what sort of accommodations for ADHD can you provide?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“I hate asking people to stop making noises. So I don’t, and when I can’t take it anymore it comes out in bad ways, like giving people dirty looks. &lt;strong&gt;Yes, we can talk to people, but then I’d be doing it all the time. And I might be the only one, so now I’m that guy who’s always bugging people&lt;/strong&gt;. Why not just ask people to be considerate? Take off your headphones and put them on the desk. Can you hear any noise out of them? Then they’re loud and everyone else can hear them.”&lt;/em&gt; — Discord Member Scothannen&lt;/p&gt;

&lt;p&gt;Confrontation can be a difficult thing to do for people that have disorders that affect their ability to socialize, such as individuals with autism. Having to constantly tell people to be quiet or to tone something down is a lot of work and can also strain relationships with coworkers who might just get annoyed- Especially if there was no agreement regarding noise in the office.&lt;/p&gt;

&lt;p&gt;If possible, having a space where employees can move to that is meant to be total silence is one solution. A quiet room — similar to how some trains have silent cabins. If you want to be in an undisturbed area, you can go work there instead of the main area. This isn’t a realistic solution for every company though, some simply don’t have the space to do this or need high-powered workstations versus a portable laptop.&lt;/p&gt;

&lt;p&gt;Providing noise-cancelling headphones is another solution, but that comes with the problem that people will come by to disturb you by tapping you on the shoulder instead. Perhaps having a simple “Do Not Disturb” card that is easily seen on the desk, where there is a mutual understanding to not go and tap the person on the shoulder. That way one can differentiate between a colleague that is alright with being disturbed while having their headphones on, and a colleague that really isn’t.&lt;/p&gt;

&lt;p&gt;All in all, it all boils down to three words: Communicate, Support, Reduce. As long as you can actively communicate with your team about neurodivergence, and you actively offer support and look for feedback from neurodivergent individuals, you’re already taking several steps that many would never even consider. With time and experience you can then learn and work on how you can prevent any issues that your neurodivergent coworkers could end up dealing with, and while it may be impossible to completely eliminate a problem you can certainly reduce the stress.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://discord.gg/devinterrupted"&gt;&lt;strong&gt;Liked this topic? Have anything you’d like to add? Join our discussions in the Dev Interrupted Discord today!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2esj52Mx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2Ad8w3ALr6Ybm4tvxt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2esj52Mx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2Ad8w3ALr6Ybm4tvxt.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you haven't already heard&lt;/strong&gt;, Dev Interrupted is partnering with Dzone to host &lt;strong&gt;INTERACT&lt;/strong&gt;: An interactive, community-driven, digital conference on September 30th - by engineering leaders, for engineering leaders. 1 day, 10 speakers, 100s of engineers and engineering leaders, all free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AMIrUt41--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a3axbxktjzec4aoyyiet.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AMIrUt41--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a3axbxktjzec4aoyyiet.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;Register Now&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://devinterrupted.com/adhd-in-the-workplace-3-ways-you-can-help/"&gt;https://devinterrupted.com&lt;/a&gt; on July 21, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>devops</category>
      <category>culture</category>
      <category>productivity</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 13 Aug 2021 17:36:53 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-46ik</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-46ik</guid>
      <description>&lt;p&gt;Hey there!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking back on your week, what was something you're proud of?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Cleaning up your workspace... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Congrats in advance!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o7aD2saalBwwftBIY/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o7aD2saalBwwftBIY/giphy.gif" alt="Happy Friday the 13th"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Am I a good dev?</title>
      <author>Jeniffer Carvalho</author>
      <pubDate>Fri, 13 Aug 2021 17:23:09 +0000</pubDate>
      <link>https://dev.to/jenicarvalho/am-i-a-good-dev-ai8</link>
      <guid>https://dev.to/jenicarvalho/am-i-a-good-dev-ai8</guid>
      <description>&lt;p&gt;Probably not.&lt;/p&gt;

&lt;p&gt;If you are a Senior dev, perhaps you are failing on the basics because you don’t care about them anymore. That sounds "too basic," and that's why you fail. You probably do not know the new basics.&lt;/p&gt;

&lt;p&gt;If you are a Junior dev, perhaps you are failing because you don’t know enough about your tech, get stuck with easy errors, and probably fail to ask for help.&lt;/p&gt;

&lt;p&gt;Let me be clear: no one is awesome on the job, and &lt;strong&gt;that’s completely ok&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Technology changes fast, and it means that it is impossible to be awesome. &lt;br&gt;
Tomorrow you will receive another e-mail with a big update on your favorite framework. &lt;br&gt;
In a few days, someone fucking awesome will create a better approach to writing code. And you know what? &lt;strong&gt;You do not need to know all of this.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I'm a very anxious person. I mean. I'M VERY ANXIOUS. At my first job in a big tech company, I felt bad every time that I needed to open a Pull Request for someone review my code.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Fear, shame, every bad feeling came to me. I didn't want to be judged. Or be discovered as a fraud.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;That was real. I felt bad. I needed to see a doctor and took medication to treat myself with more compassion. &lt;br&gt;
It took a while to realize that &lt;strong&gt;IT IS OK NOT TO BE AWESOME&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I discovered that even my heroes have fear.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Do you know that fucking awesome guy that has created a new approach that I mentioned before? He very likely felt the same as you. He had fears and anxiety. He had felt like a fraud before, so why wouldn't you?&lt;/p&gt;

&lt;p&gt;I don't know about you, but even now, I have doubts about my technical skills if I'm really good at what I do. But one thing that's different now is that I have learned how to deal with this fear.&lt;/p&gt;

&lt;p&gt;It is &lt;strong&gt;normal&lt;/strong&gt; to feel that way in a world with so many changes.&lt;/p&gt;

&lt;p&gt;It is &lt;strong&gt;normal&lt;/strong&gt; to fear criticism, fear a code review. Everybody feels or has felt that way.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You are not alone, please, know that.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Do not let anxiety and fear control you. If it gets worse, look for help. Talk to someone. Take care of yourself. Do not give up on this beautiful career because you think this is hard for you. It was hard for most of us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip for the seniors devs&lt;/strong&gt;: be the senior that your junior self wanted to meet. &lt;em&gt;Be kind to others.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip for the juniors devs&lt;/strong&gt;: fear is normal. Ask for help if you need it. &lt;br&gt;
&lt;em&gt;Be kind to yourself.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>motivation</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to improve the Arch Linux package manager</title>
      <author>Richard Halford</author>
      <pubDate>Fri, 13 Aug 2021 17:01:53 +0000</pubDate>
      <link>https://dev.to/rshalford/how-to-improve-the-arch-linux-package-manager-1fo0</link>
      <guid>https://dev.to/rshalford/how-to-improve-the-arch-linux-package-manager-1fo0</guid>
      <description>&lt;p&gt;Pacman is the package manager for Arch Linux. And out of the box, it's just black and white, and single threaded all over. But, even if you're one to tout "I use Arch btw." and what it's like living on the bleeding edge with it's rolling release updates. You'll likely still want to make those updates take as little time as possible, with important information being colour highlighted.&lt;/p&gt;

&lt;p&gt;Luckily pacman comes with a way to make both of these the case, with no more than an edit to it's configuration file.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#colour-output"&gt;
  &lt;/a&gt;
  Colour Output
&lt;/h2&gt;

&lt;p&gt;To make sure pacman produces a colourful output in the terminal. Open up &lt;code&gt;/etc/pacman.conf&lt;/code&gt; in your editor of choice, with &lt;code&gt;sudo&lt;/code&gt;/&lt;code&gt;doas&lt;/code&gt; privileges. Then simply delete the &lt;strong&gt;&lt;em&gt;#&lt;/em&gt;&lt;/strong&gt; before &lt;code&gt;Color&lt;/code&gt;, under the &lt;code&gt;# Misc options&lt;/code&gt; sub-heading.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="c"&gt;# Misc options&lt;/span&gt;
  &lt;span class="c"&gt;#UseSyslog&lt;/span&gt;
- &lt;span class="c"&gt;#Color&lt;/span&gt;
+ Color
  &lt;span class="c"&gt;#TotalDownload&lt;/span&gt;
  CheckSpace
  &lt;span class="c"&gt;#VerbosePkgLists&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now save and exit, and the next time you update your system packages, pacman will use the same colour scheme as your terminal/tty.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#multithreaded-performance"&gt;
  &lt;/a&gt;
  Multi-threaded Performance
&lt;/h2&gt;

&lt;p&gt;With the release of Pacman v6.0.0, comes the ability to have parallel package downloads. Meaning all of your small system packages can be downloaded, all whilst getting the latest Linux kernel.&lt;/p&gt;

&lt;p&gt;Because of reasons beyond the scope of this article (&lt;em&gt;read: I don't feel like writing about it&lt;/em&gt;), this &lt;strong&gt;shouldn't&lt;/strong&gt; throttle the speed of each download stream. As the Arch repository mirrors you're getting your package updates from, probably aren't sending packets of data to you as fast as your network connection can handle. Making parallel downloads only seem like a good thing. With resulting average install times that are &lt;strong&gt;less&lt;/strong&gt; than just downloading package updates sequentially.&lt;/p&gt;

&lt;p&gt;To add this latest feature, you will have to make the following edit, just like with the &lt;code&gt;Color&lt;/code&gt; option mentioned above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="c"&gt;# Misc options&lt;/span&gt;
  &lt;span class="c"&gt;#UseSyslog&lt;/span&gt;
  Color
  &lt;span class="c"&gt;#TotalDownload&lt;/span&gt;
  CheckSpace
  &lt;span class="c"&gt;#VerbosePkgLists&lt;/span&gt;
+ ParallelDownloads &lt;span class="o"&gt;=&lt;/span&gt; 5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your install of Arch Linux comes after the release of Pacman v6.0.0, you should find that &lt;code&gt;ParallelDownloads&lt;/code&gt; option is already there. And just needs to be &lt;em&gt;'un-commented'&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The number you assign to &lt;code&gt;ParallelDownloads&lt;/code&gt; denotes how many download streams you want to enable. By default, this value is set equal to 5, but can be changed depending on your system's hardware. A rule of thumb being adopted seems to be to match the number of threads on your CPU. But, you may find that testing above this may be beneficial, without resulting in performance drops.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Originally published on &lt;a href="https://www.xhalford.com/how-to-improve-the-arch-linux-package-manager/"&gt;xhalford.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>archlinux</category>
    </item>
    <item>
      <title>Build a tiny game for JS13K with Kontra.js</title>
      <author>Lee Reilly</author>
      <pubDate>Fri, 13 Aug 2021 17:01:02 +0000</pubDate>
      <link>https://dev.to/github/build-a-tiny-game-for-js13k-with-kontra-js-8pb</link>
      <guid>https://dev.to/github/build-a-tiny-game-for-js13k-with-kontra-js-8pb</guid>
      <description>&lt;p&gt;Do you think you can build a game using less than 13kB of JavaScript, CSS, and/or HTML in just 30 days? Do I have a challenge for &lt;em&gt;you&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://js13kgames.com/"&gt;&lt;strong&gt;10th annual JS13K competition&lt;/strong&gt;&lt;/a&gt; organized by &lt;a href="https://stars.github.com/profiles/end3r/"&gt;GitHub Star @end3r&lt;/a&gt; just kicked off with the announcement of the theme &lt;strong&gt;SPACE&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can interpret that theme however you want - recreate classic Space Invaders or Asteroids-style games, make a game that's only controllable with the SPACE bar, build a game where you explore the space between two objects, or whatever else you can imagine. Just don't run out of &lt;em&gt;space&lt;/em&gt; - you only have 13kB to work with 😉&lt;/p&gt;

&lt;p&gt;If you've never done anything like this, or even coded much JavaScript before, it can be a little intimidating. Here's a quick little tutorial how to build this &lt;em&gt;suh-weeet&lt;/em&gt; game using &lt;a href="https://github.com/straker/kontra"&gt;Kontra.js&lt;/a&gt; (a tiny game library made just for JS13K) plus a few lines of code:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d9jpVQgQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/121322/128929638-fc2dc1c9-83e7-4fd1-8447-e34fd5c6872c.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d9jpVQgQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/121322/128929638-fc2dc1c9-83e7-4fd1-8447-e34fd5c6872c.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://leereilly.net/mish-lee-13k/"&gt;Play the game&lt;/a&gt;, &lt;a href="https://github.com/leereilly/mish-lee-13k"&gt;view the source&lt;/a&gt;, or follow along with the steps and &lt;a href="https://github.com/leereilly/mish-lee-13k/commits/main"&gt;corresponding diffs&lt;/a&gt; below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-generate-your-html-template"&gt;
  &lt;/a&gt;
  1. Generate your HTML template
&lt;/h2&gt;

&lt;p&gt;If you're a regular reader of DEV then it's likely you won't need much help with this, but let's start off with a super-simple HTML template:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"250"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"250"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"game"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"background-color: black;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looking at that in your browser, you should see a ⬛ - our play area. &lt;/p&gt;

&lt;p&gt;&lt;sup&gt;💾 &lt;a href="https://github.com/leereilly/mish-lee-13k/blob/9f22af75e3482d3ae1733f26b8b2b3221a0337af/index.html"&gt;Source&lt;/a&gt; + &lt;a href="https://github.com/leereilly/mish-lee-13k/commit/9f22af75e3482d3ae1733f26b8b2b3221a0337af"&gt;diff&lt;/a&gt; for end of step 1&lt;/sup&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-include-kontrajs-library"&gt;
  &lt;/a&gt;
  2. Include Kontra.js library
&lt;/h2&gt;

&lt;p&gt;To keep things simple, we'll just pull the &lt;a href="https://www.jsdelivr.com/package/npm/kontra"&gt;latest version of Kontra from a CDN&lt;/a&gt; and include the functions / helpers we know we'll be using after the &lt;code&gt;&amp;lt;/canvas&amp;gt;&lt;/code&gt; tag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/kontra@7.1.3/kontra.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GameLoop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Sprite&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bindKeys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;collides&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initKeys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;keyPressed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;randInt&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;kontra&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;sup&gt;💾 &lt;a href="https://github.com/leereilly/mish-lee-13k/blob/464d86c183fa9cace8f58ddccfd1ecd8b2f9e939/index.html"&gt;Source&lt;/a&gt; + &lt;a href="https://github.com/leereilly/mish-lee-13k/commit/464d86c183fa9cace8f58ddccfd1ecd8b2f9e939"&gt;diff&lt;/a&gt; for end of step 2&lt;/sup&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-ready-player-one"&gt;
  &lt;/a&gt;
  3. Ready player one!
&lt;/h2&gt;

&lt;p&gt;First, let's define an image for player 1 after &lt;code&gt;let { canvas } = init();&lt;/code&gt;. We'll use my GitHub avatar for quickness / ego boosting:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;image1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;image1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://avatars.githubusercontent.com/u/121322?v=4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;image1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;image1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we'll create our sprite and position it on the top left of the screen:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sprite1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Sprite&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;image1&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we'll define our game loop and start things ticking!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;GameLoop&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you view your game in the browser now, you should see my avatar in a big black square. Woo hoo - progress!&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;💾 &lt;a href="https://github.com/leereilly/mish-lee-13k/blob/41d97a4ece056b1a4b2f7a50cc406c8054b5cfd5/index.html"&gt;Source&lt;/a&gt; + &lt;a href="https://github.com/leereilly/mish-lee-13k/commit/41d97a4ece056b1a4b2f7a50cc406c8054b5cfd5"&gt;diff&lt;/a&gt; for end of step 3&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wait! Where did that image URL come from? How can I use my own?&lt;/strong&gt; You can grab that avatar URL easily from the GitHub API e.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl &lt;span class="nt"&gt;-s&lt;/span&gt; https://api.github.com/users/leereilly | jq &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="s1"&gt;'.avatar_url'&lt;/span&gt; 
https://avatars.githubusercontent.com/u/121322?v&lt;span class="o"&gt;=&lt;/span&gt;4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl &lt;span class="nt"&gt;-s&lt;/span&gt; https://api.github.com/users/leereilly | &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="nt"&gt;-i&lt;/span&gt; avatar_url
  &lt;span class="s2"&gt;"avatar_url"&lt;/span&gt;: &lt;span class="s2"&gt;"https://avatars.githubusercontent.com/u/121322?v=4"&lt;/span&gt;,
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dunno about you, but here's what I feel like every time I run &lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;jq&lt;/code&gt; commands against the GitHub API in a terminal:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oKu1InR7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://chihacknight.org/images/blog/remote-hack-night-hackerman.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oKu1InR7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://chihacknight.org/images/blog/remote-hack-night-hackerman.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anyway, I digress. Looking at a static sprite on a black square isn't a whole heck of a lotta fun, so let's get moving!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-make-player-1-move"&gt;
  &lt;/a&gt;
  4. Make player 1 move
&lt;/h2&gt;

&lt;p&gt;Let's introduce an &lt;a href="https://straker.github.io/kontra/api/gameLoop#update"&gt;&lt;code&gt;update()&lt;/code&gt; function&lt;/a&gt; within our game loop that responds to ↑ ↓ ← → and moves our sprite appropriately:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keyPressed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keyPressed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;right&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keyPressed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;up&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keyPressed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;down&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to add a call to &lt;code&gt;initKeys();&lt;/code&gt; just before &lt;code&gt;loop.start();&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;initKeys&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should now be able to move player 1 around the screen 🕹️&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;💾 &lt;a href="https://github.com/leereilly/mish-lee-13k/blob/9b55f0877a89b21a0bf75aa146f3bba4f07f888a/index.html"&gt;Source&lt;/a&gt; + &lt;a href="https://github.com/leereilly/mish-lee-13k/commit/9b55f0877a89b21a0bf75aa146f3bba4f07f888a"&gt;diff&lt;/a&gt; for end of step 4&lt;/sup&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-introduce-the-enemy"&gt;
  &lt;/a&gt;
  5. Introduce the enemy
&lt;/h2&gt;

&lt;p&gt;We can definitely make this game more fun. Let's add our enemy player - my buddy &lt;a class="mentioned-user" href="https://dev.to/mishmanners"&gt;@mishmanners&lt;/a&gt;
* - somewhere randomly, but not outside the bounds of the screen.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;* this has nothing to do with Michelle kicking my butt at Fornite, Magic The Gathering, and snake &lt;a href="https://dev.to/mishmanners/how-to-enable-github-actions-on-your-profile-readme-for-a-contribution-graph-4l66"&gt;building&lt;/a&gt; / &lt;a href="https://dev.to/mishmanners/take-your-python-skills-to-the-next-level-with-battlesnake-3f0f"&gt;battling&lt;/a&gt; amongst other things.&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;We'll start by defining the maximum X and Y values for our sprite (basically the canvas dimensions) and then make use of Kontra's &lt;a href="https://straker.github.io/kontra/api/helpers#randInt"&gt;&lt;code&gt;randInt()&lt;/code&gt; helper&lt;/a&gt; to set the sprite's location:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;maxX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;maxY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;image2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;image2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://avatars.githubusercontent.com/u/36594527?v=4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;image2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;image2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sprite2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Sprite&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;randInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxX&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;randInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxY&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;image2&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;sup&gt;💾 &lt;a href="https://github.com/leereilly/mish-lee-13k/blob/afc59f8b7391dbf3a43b489fd49c105ebcc1b5b0/index.html"&gt;Source&lt;/a&gt; + &lt;a href="https://github.com/leereilly/mish-lee-13k/commit/afc59f8b7391dbf3a43b489fd49c105ebcc1b5b0"&gt;diff&lt;/a&gt; for end of step 5&lt;/sup&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-add-some-collision-detection"&gt;
  &lt;/a&gt;
  6. Add some collision detection
&lt;/h2&gt;

&lt;p&gt;This is where your university-level math knowledge will come in handy. &lt;/p&gt;

&lt;p&gt;Just kidding. This sounds pretty intimidating, but thankfully Kontra does all of the hard work for us with the &lt;a href="https://straker.github.io/kontra/api/helpers#collides"&gt;&lt;code&gt;collides()&lt;/code&gt; helper&lt;/a&gt;. Let's just move the player 2 sprite to a random position once there's a collision by adding the following at the end of the &lt;code&gt;update()&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collides&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sprite2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;sprite2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;randInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxX&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;sprite2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;randInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxY&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;sup&gt;💾 &lt;a href="https://github.com/leereilly/mish-lee-13k/blob/0055acaefebdeb4592c6ec7403a325cb7e5f62ab/index.html"&gt;Source&lt;/a&gt; + &lt;a href="https://github.com/leereilly/mish-lee-13k/commit/0055acaefebdeb4592c6ec7403a325cb7e5f62ab"&gt;diff&lt;/a&gt; for end of step 6&lt;/sup&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-make-it-pixelated8bit-with-this-one-neat-trick"&gt;
  &lt;/a&gt;
  7. Make it pixelated/8-bit with this one neat trick!
&lt;/h2&gt;

&lt;p&gt;This &lt;del&gt;tip&lt;/del&gt; hack to make your sprites look pixelated is pretty easy. Since we're using the GitHub Avatar URL, we can change the query param from &lt;code&gt;v=4&lt;/code&gt; to &lt;code&gt;s=10&lt;/code&gt; to request a 10x10 pixel version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;- https://avatars.githubusercontent.com/u/121322?v=4
&lt;/span&gt;&lt;span class="gi"&gt;+ https://avatars.githubusercontent.com/u/121322?s=10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we're setting the image to 4 times that in the code, the browser will attempt to resize it making it look pixelated.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VBwL98hg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4c8qpwpul7xm1c8lg7d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VBwL98hg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4c8qpwpul7xm1c8lg7d.png" alt="Before and after"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dk4Tqsbk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/bxHQ4KcM8eMAAAAC/magic-meme.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dk4Tqsbk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/bxHQ4KcM8eMAAAAC/magic-meme.gif" alt="MAGIC"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There are definitely more sophisticated techniques, and using images this big is a horrendous idea for JS13K. It's better to use something like &lt;a href="https://github.com/aseprite/aseprite"&gt;Aseprite&lt;/a&gt; or &lt;a href="https://github.com/piskelapp/piskel"&gt;Piskel&lt;/a&gt; to create your own pixel art.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;💾 &lt;a href="https://github.com/leereilly/mish-lee-13k/blob/f03324d79d7c54fcb95dac35b74cc65a73fafb1a/index.html"&gt;Source&lt;/a&gt; + &lt;a href="https://github.com/leereilly/mish-lee-13k/commit/f03324d79d7c54fcb95dac35b74cc65a73fafb1a"&gt;diff&lt;/a&gt; for end of step 6&lt;/sup&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-add-some-sounds-effects"&gt;
  &lt;/a&gt;
  8. Add some sounds effects
&lt;/h2&gt;

&lt;p&gt;There isn't much room for OGGs and MP3s in JS13K. Thankfully, people smarter than I have developed some neat libraries and editors where you can create your sound effects and background music to include with just a few lines of code. &lt;/p&gt;

&lt;p&gt;Taking &lt;a href="https://github.com/xem"&gt;@xem&lt;/a&gt;'s &lt;a href="https://xem.github.io/MiniSoundEditor/"&gt;MiniSoundEditor&lt;/a&gt; as just one example, I can select from some predefined sounds and just copy and paste the JavaScript. &lt;/p&gt;

&lt;p&gt;I'll do just that and copy this at the end of the &lt;code&gt;if (collides(sprite1, sprite2))&lt;/code&gt; block:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;e4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;)?&lt;/span&gt;&lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AudioContext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;96&lt;/span&gt;&lt;span class="nx"&gt;e3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="nx"&gt;e3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getChannelData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;96&lt;/span&gt;&lt;span class="nx"&gt;e3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;)&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createBufferSource&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;
&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I literally have no idea what that does, but I feel smarter having copied and pasted it. You will too. Try copying and pasting that (or your own sound) at the end of the collision detection code.&lt;/p&gt;

&lt;p&gt;⚠️ Obviously don't blindly copy, paste and &lt;em&gt;use&lt;/em&gt; code blindly off the Internet if you don't know what it does. Thankfully, this is harmless.&lt;/p&gt;

&lt;p&gt;By now, your code should look a little something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"250"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"250"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"game"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"background-color: black;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/kontra@7.1.3/kontra.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GameLoop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Sprite&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bindKeys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;collides&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initKeys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;keyPressed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;randInt&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;kontra&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;maxX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;maxY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;image1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;image1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://avatars.githubusercontent.com/u/121322?s=10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="nx"&gt;image1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;image1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sprite1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Sprite&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;image1&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;image2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;image2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://avatars.githubusercontent.com/u/36594527?s=10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="nx"&gt;image2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;image2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sprite2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Sprite&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;randInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxX&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;randInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxY&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;image2&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;GameLoop&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;update&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keyPressed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keyPressed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;right&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keyPressed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;up&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keyPressed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;down&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collides&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sprite2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;sprite2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;randInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxX&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nx"&gt;sprite2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;randInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxY&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

          &lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;e4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;q&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;q&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;

          &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AudioContext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
          &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createBuffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;96&lt;/span&gt;&lt;span class="nx"&gt;e3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="nx"&gt;e3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getChannelData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;96&lt;/span&gt;&lt;span class="nx"&gt;e3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;)&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createBufferSource&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
          &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;
          &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;sprite1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;sprite2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;initKeys&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And it should look a little like this in your browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d9jpVQgQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/121322/128929638-fc2dc1c9-83e7-4fd1-8447-e34fd5c6872c.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d9jpVQgQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/121322/128929638-fc2dc1c9-83e7-4fd1-8447-e34fd5c6872c.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The sound in this GIF doesn't seem to be working, but you should hear a beep every time the sprites touch.&lt;/p&gt;

&lt;p&gt;And there you have it. A game that will provide &lt;del&gt;hours&lt;/del&gt; minutes of fun. Keep your eye out on Steam for the full release.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;💾 &lt;a href="https://github.com/leereilly/mish-lee-13k/blob/ba34c62da74de3ae937d1c5be9048e7823788b93/index.html"&gt;Source&lt;/a&gt; + &lt;a href="https://github.com/leereilly/mish-lee-13k/commit/ba34c62da74de3ae937d1c5be9048e7823788b93"&gt;diff&lt;/a&gt; for end of step 8&lt;/sup&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-step-further"&gt;
  &lt;/a&gt;
  A step further
&lt;/h2&gt;

&lt;p&gt;If you look at the file sizes, you'll see this is weighing a bit more than 13kB:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ls -lth
total 88
-rw-r--r--@ 1 leereilly  staff    28K Aug 13 09:50 kontra.min.js
-rw-r--r--@ 1 leereilly  staff   674B Aug 13 09:49 mishmanners.jpeg
-rw-r--r--@ 1 leereilly  staff   679B Aug 13 09:48 leereilly.jpeg
-rw-r--r--@ 1 leereilly  staff   2.2K Aug 13 08:07 index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're using the minified version of Kontra, but that still includes a few things we don't need. See the Kontra website for details on &lt;a href="https://straker.github.io/kontra/reducing-file-size"&gt;reduce the file size even further&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#join-js13k"&gt;
  &lt;/a&gt;
  Join JS13K!!!
&lt;/h2&gt;

&lt;p&gt;Please feel free to fork and expand upon this on for your own JS13K entry. There are lots of things you could improve...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make it a two-player game (player 2 could respond to W  A  S  D )?&lt;/li&gt;
&lt;li&gt;Add support for high scores?&lt;/li&gt;
&lt;li&gt;Introduce some more some sound effects?&lt;/li&gt;
&lt;li&gt;Add some actual gameplay LOL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Better yet, start from scratch and have some fun. Here are some other resources that might be useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://straker.github.io/kontra/tutorials"&gt;Kontra.js tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://js13kgames.github.io/resources/#:~:text=Micro%20game%20engines%20and%20boilerplates"&gt;Micro game engines and boilerplates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://js13kgames.github.io/resources/#:~:text=mouse%20/%20touch%20inputs-,Sound%20and%20music,-SoundBox%20-%20an%20HTML5"&gt;Sound and music&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://js13kgames.github.io/resources/#:~:text=that%20are%20%3C%2013kb"&gt;Artwork and fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://js13kgames.github.io/resources/#:~:text=column-based%20raycasting-,Minification,-Try%20Terser%20-%20a"&gt;Minification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://js13kgames.github.io/resources/#:~:text=all%20mobile%20devices-,Other%20tools,-Video%20Game%20Name"&gt;Misc. tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://js13kgames.github.io/resources/#:~:text=Hexadecimal%20viewer/editor-,Tutorials,-How%20to%20minify"&gt;Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://js13kgames.github.io/resources/#:~:text=Blog%20posts%20and%20post%20mortems"&gt;Post-mortems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Good luck and have fun! Would love to see your entries below &lt;code&gt;&amp;lt;3&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#troubleshooting"&gt;
  &lt;/a&gt;
  Troubleshooting
&lt;/h2&gt;

&lt;p&gt;Did you encounter some bugs along the way following this tutorial? If you've never used it before, &lt;a href="https://developer.chrome.com/docs/devtools/open/"&gt;Chrome's Developer Console&lt;/a&gt; is your friend. &lt;/p&gt;

&lt;p&gt;Press ⌘ + Option + J (macOS) or Control + Shift + J (Windows, Linux, Chrome OS) to jump straight into the console panel. From there you'll see what isn't working correctly...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MAgYiGF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/121322/128947497-b2085468-29b4-413d-ac47-04105b82ca5f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MAgYiGF2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/121322/128947497-b2085468-29b4-413d-ac47-04105b82ca5f.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you felt like a L337 H4X0R running &lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;jq&lt;/code&gt; commands, you'll feel like you're in the matrix now with the things you can do in there.&lt;/p&gt;

&lt;p&gt;You can also look in this &lt;a href="https://github.com/leereilly/mish-lee-13k"&gt;repo&lt;/a&gt; to see the full source code. If you look at the &lt;a href="https://github.com/leereilly/mish-lee-13k/commits/main"&gt;commit history&lt;/a&gt;, you'll see the diffs/code for each of the steps above.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>gamedev</category>
      <category>webdev</category>
      <category>js13k</category>
    </item>
    <item>
      <title>How does AI bounding box detection work?</title>
      <author>Gant ℒ𝒶𝒷ℴ𝓇𝒹ℯ </author>
      <pubDate>Fri, 13 Aug 2021 16:29:49 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-does-ai-bounding-box-detection-work-2je6</link>
      <guid>https://dev.to/aws-builders/how-does-ai-bounding-box-detection-work-2je6</guid>
      <description>&lt;h3&gt;
  &lt;a href="#learn-in-30-seconds"&gt;
  &lt;/a&gt;
  🧠 Learn in 30 seconds
&lt;/h3&gt;

&lt;p&gt;It looks so simple when AI does it right?&lt;/p&gt;

&lt;p&gt;But the AI doesn't give you an image, it gives you data.  It's up to you to make it look simple.  The results you get are presented in a way so you can choose specific items from all the returned results.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sfZQctsq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psdexutcx4a3vgzjkwg1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sfZQctsq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psdexutcx4a3vgzjkwg1.jpg" alt="Object Detection Balloon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You might think a box gives you four values, and you're right, but it only gives you TWO points.  From that you can infer a box to draw that identifies the object.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fo1RLlVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzwl92lixo78ckv2edfg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fo1RLlVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzwl92lixo78ckv2edfg.png" alt="Object Detection Math 2 points"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However... it very rarely gives you one box.  Lots of times you get a whole bunch of boxes for you to chose from.&lt;/p&gt;

&lt;p&gt;This is because the model is often trained to return X results no matter what, and sometimes it's meant to detect a whole wide array of objects, not just one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A8mgqoIK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/haa609wnm0kqblp2eymq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A8mgqoIK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/haa609wnm0kqblp2eymq.png" alt="Overlap Object Detection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many boxes are identified by what they are detecting, like people or tables etc.  But you might have a photo with three people in it, and it returns 30 people boxes.  Each of these boxes generally give you a score of confidence, and it's your job to identify if they are identifying the same object, or separate objects.&lt;/p&gt;

&lt;p&gt;There's some well known algorithms to take the best of the best.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VazVR2gt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r3nr6z40b0sdn3u6r6h0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VazVR2gt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r3nr6z40b0sdn3u6r6h0.jpg" alt="Object Detection Scores"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have the boxes you're interested in, you can draw them easily with a canvas.  In JavaScript you just overlay a canvas on the image and draw rectangles there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZJMYapvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zenkkd6wg65pp1y4et4j.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZJMYapvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zenkkd6wg65pp1y4et4j.jpg" alt="Detection overlay in JavaScript Web"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The final result lets you draw clean object detection on websites.  It's pretty cool and easy to do this on images and video.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UkqPd_Ft--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ts3jvnfktkldq36u781w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UkqPd_Ft--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ts3jvnfktkldq36u781w.jpg" alt="Object Detection with nonMaxSuppression"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want the code to do this?  It's all in Chapter 6 of my book with a deep explanation. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3dR3vpY"&gt;Buy a copy of the book&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WvNuhv7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iy96lrsdpbeuj8blrna0.jpg" alt="Book Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm looking forward to what you can do with your very own AI object detection!  Don't forget to tag your cool stuff with the #MadeWithTFJS Hashtag on Twitter!&lt;/p&gt;

&lt;p&gt;And don't forget to follow me for more AI tidbits like this!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iOiplNHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7611cgyuta5vnupe1k73.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iOiplNHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7611cgyuta5vnupe1k73.gif" alt="Rock Paper Scissors in TensorFlow.js"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ai</category>
      <category>javascript</category>
      <category>tensorflowjs</category>
      <category>machinelearning</category>
    </item>
  </channel>
</rss>
