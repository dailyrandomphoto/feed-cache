<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>NiFi on Cloudera Data Platform Upgrade - April 2021</title>
      <author>Timothy Spann</author>
      <pubDate>Thu, 29 Apr 2021 14:57:00 +0000</pubDate>
      <link>https://dev.to/tspannhw/nifi-on-cloudera-data-platform-upgrade-april-2021-32e8</link>
      <guid>https://dev.to/tspannhw/nifi-on-cloudera-data-platform-upgrade-april-2021-32e8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#cfm-211-on-cdp-716"&gt;
  &lt;/a&gt;
  CFM 2.1.1 on CDP 7.1.6
&lt;/h1&gt;

&lt;p&gt;There is a new Cloudera release of Apache NiFi now with SAML support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache NiFi 1.13.2.2.1.1.0&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache NiFi Registry 0.8.0.2.1.1.0&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://lh3.googleusercontent.com/-VFQ8ESrtdGI/YIrJLD3CpHI/AAAAAAAAdCk/z-2bUtcuBBkoSggI2lh5uOBahO4DFtU5wCLcBGAsYHQ/image.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EcR1jf1h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-VFQ8ESrtdGI/YIrJLD3CpHI/AAAAAAAAdCk/z-2bUtcuBBkoSggI2lh5uOBahO4DFtU5wCLcBGAsYHQ/w640-h248/image.png" alt=""&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.cloudera.com/cfm/2.1.1/release-notes/topics/cfm-component-support.html"&gt;https://docs.cloudera.com/cfm/2.1.1/release-notes/topics/cfm-component-support.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.cloudera.com/cfm/2.1.1/release-notes/topics/cfm-whats-new.html"&gt;https://docs.cloudera.com/cfm/2.1.1/release-notes/topics/cfm-whats-new.html&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.cloudera.com/cfm/2.1.1/upgrade-paths/topics/cfm-upgrade-paths.html"&gt;https://docs.cloudera.com/cfm/2.1.1/upgrade-paths/topics/cfm-upgrade-paths.html&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;For changes:   &lt;a href="https://dev.to/tspannhw/new-features-of-apache-nifi-1-13-0-45ln"&gt;https://www.datainmotion.dev/2021/02/new-features-of-apache-nifi-1130.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get your download on:  &lt;a href="https://docs.cloudera.com/cfm/2.1.1/download/topics/cfm-download-locations.html"&gt;https://docs.cloudera.com/cfm/2.1.1/download/topics/cfm-download-locations.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To start researching for the future, take a look at some of the technical preview features around Easy Rules engine and handlers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.cloudera.com/cfm/2.1.1/release-notes/topics/cfm-technical-preview.html"&gt;https://docs.cloudera.com/cfm/2.1.1/release-notes/topics/cfm-technical-preview.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure you use the latest possible JDK 8 as there are some bugs out there.   Use a recent version of the JDK like 8u282 or newer.&lt;/p&gt;

&lt;p&gt;Size your cluster correctly!   &lt;a href="https://docs.cloudera.com/cfm/2.1.1/nifi-sizing/topics/cfm-sizing-recommendations.html"&gt;https://docs.cloudera.com/cfm/2.1.1/nifi-sizing/topics/cfm-sizing-recommendations.html&lt;/a&gt;.  Make sure you have at least 3 nodes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://lh3.googleusercontent.com/-WyQMa32oHDU/YIrJOSOaULI/AAAAAAAAdCo/mtgsigfq3DMscCf9Hfjic-FjPhQqZsxPQCLcBGAsYHQ/image.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1VthGOLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-WyQMa32oHDU/YIrJOSOaULI/AAAAAAAAdCo/mtgsigfq3DMscCf9Hfjic-FjPhQqZsxPQCLcBGAsYHQ/w640-h483/image.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://lh3.googleusercontent.com/-XhY1oGHcBcw/YIrJVxO64vI/AAAAAAAAdCs/-trzWNXrJ8wBXIGeUu6Wl84jUUGA_9ypgCLcBGAsYHQ/image.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vfVrwjgk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-XhY1oGHcBcw/YIrJVxO64vI/AAAAAAAAdCs/-trzWNXrJ8wBXIGeUu6Wl84jUUGA_9ypgCLcBGAsYHQ/w640-h218/image.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/tspannhw/EverythingApacheNiFi"&gt;https://github.com/tspannhw/EverythingApacheNiFi&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/tspannhw/no-more-spaghetti-flows-2emd"&gt;https://www.datainmotion.dev/2020/06/no-more-spaghetti-flows.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/tspannhw/apache-nifi-load-balancing-via-load-balanced-connections-593m"&gt;https://www.datainmotion.dev/2019/10/apache-nifi-load-balancing-via-load.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://cwiki.apache.org/confluence/display/NIFI/Migration+Guidance"&gt;https://cwiki.apache.org/confluence/display/NIFI/Migration+Guidance&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://docs.cloudera.com/cfm/2.1.1/site-to-site/topics/cdf-datahub-site-to-site.html"&gt;https://docs.cloudera.com/cfm/2.1.1/site-to-site/topics/cdf-datahub-site-to-site.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://docs.cloudera.com/cfm/2.1.1/release-notes/topics/cfm-whats-new.html"&gt;https://docs.cloudera.com/cfm/2.1.1/release-notes/topics/cfm-whats-new.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://blog.cloudera.com/no-data-loss-and-no-service-interruption-hdf-to-cfm-rolling-migration/"&gt;https://blog.cloudera.com/no-data-loss-and-no-service-interruption-hdf-to-cfm-rolling-migration/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://cwiki.apache.org/confluence/display/NIFI/Release+Notes#ReleaseNotes-Version1.13.2"&gt;https://cwiki.apache.org/confluence/display/NIFI/Release+Notes#ReleaseNotes-Version1.13.2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>How to get free $100 credit for Hosting?</title>
      <author>GoOnlineTools</author>
      <pubDate>Thu, 29 Apr 2021 14:53:27 +0000</pubDate>
      <link>https://dev.to/goonlinetools/how-to-get-free-100-credit-for-hosting-50oh</link>
      <guid>https://dev.to/goonlinetools/how-to-get-free-100-credit-for-hosting-50oh</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I am back with a new offer on hosting :)&lt;/p&gt;

&lt;p&gt;Linode is offering 100$ credit on hosting for new users.&lt;/p&gt;

&lt;p&gt;Check offer - &lt;a href="https://linode.gvw92c.net/c/1929920/939219/10906"&gt;https://linode.gvw92c.net/c/1929920/939219/10906&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Full step by step guide - &lt;a href="https://dev.to/goonlinetools/free-100-hosting-credit-for-everyone-2g08"&gt;https://dev.to/goonlinetools/free-100-hosting-credit-for-everyone-2g08&lt;/a&gt;&lt;/p&gt;

</description>
      <category>offers</category>
    </item>
    <item>
      <title>How I Created My All-Star React Stack — Supercharge.dev</title>
      <author>Harish</author>
      <pubDate>Thu, 29 Apr 2021 14:29:06 +0000</pubDate>
      <link>https://dev.to/harishv7/how-i-created-my-all-star-react-stack-supercharge-dev-42do</link>
      <guid>https://dev.to/harishv7/how-i-created-my-all-star-react-stack-supercharge-dev-42do</guid>
      <description>&lt;p&gt;When it comes to building frontend applications, we as developers, are simply spoilt for choice. From Angular to React to Vue to Svelte, there are just thousands of libraries and frameworks to choose from. I have been a loyal React developer for a long time now. Even then, every time I built a React app, I had to do face the same confusion on what libraries I should be using for the app.&lt;/p&gt;

&lt;p&gt;My typical thoughts as I develop yet again another React app:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Is it going to be Bootstrap or Bulma?”&lt;/p&gt;

&lt;p&gt;“Urgh, I need to setup ESLint again!”&lt;/p&gt;

&lt;p&gt;“I need to setup the same Header, Footer, Layout components AGAIN!”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I really needed to change this and in the process of change I built &lt;a href="https://supercharge.dev/"&gt;Supercharge.dev&lt;/a&gt;! Let me tell you all about it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-my-own-allstar-react-stack"&gt;
  &lt;/a&gt;
  Building My Own All-Star React Stack
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HQkIiy8Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A5lxW6-kweZ-kRjOi-enUXg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HQkIiy8Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A5lxW6-kweZ-kRjOi-enUXg.gif" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Over time, with experience from the various projects I did, I finally came up with my own All-Star React Stack! If you have not already read it, be sure to check it out here: &lt;a href="https://betterprogramming.pub/my-all-star-react-stack-3c9b853d4c41"&gt;https://betterprogramming.pub/my-all-star-react-stack-3c9b853d4c41&lt;/a&gt;. It has over 8.1k views as of writing this and gathered great comments from fellow developers.&lt;/p&gt;

&lt;p&gt;After speaking to devs in the community, I decided to build an all-in-one React Starter Pack that combines all of the below features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Next.js&lt;/li&gt;
&lt;li&gt;Bulma&lt;/li&gt;
&lt;li&gt;Every page needed for a typical MVP: Home, About, Contact Us, FAQ, Docs, Dashboard etc.&lt;/li&gt;
&lt;li&gt;Every component you need: Testimonials, Features etc.&lt;/li&gt;
&lt;li&gt;Docker Config&lt;/li&gt;
&lt;li&gt;ESLint + Prettier&lt;/li&gt;
&lt;li&gt;Google Analytics&lt;/li&gt;
&lt;li&gt;Firebase Authentication&lt;/li&gt;
&lt;li&gt;Firestore as Database&lt;/li&gt;
&lt;li&gt;Formspree for Quick Contact Forms&lt;/li&gt;
&lt;li&gt;Reack Hook Form for Advanced/Dynamic Forms&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And many others, all supported with the latest Next.js 10 and React 17.&lt;/p&gt;

&lt;p&gt;It took me close to a month of development to get it right and stable. I started off working on the modules in a very generic fashion such that anyone can simplify configure everything from the copy on the pages to the API keys used to make it their own.&lt;/p&gt;

&lt;p&gt;The best part is that &lt;strong&gt;everything is configurable in minutes&lt;/strong&gt; — all through modifying the config files!&lt;/p&gt;

&lt;p&gt;From brand name, to your features, to testimonials, you simply update it in the config and the UI updates in tandem!&lt;/p&gt;

&lt;p&gt;The result is &lt;a href="https://supercharge.dev/"&gt;Supercharge.dev&lt;/a&gt;!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pricing-supercharge"&gt;
  &lt;/a&gt;
  Pricing Supercharge
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n8vntFKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/0%2AoigDSCTAssSUOBCF" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n8vntFKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/0%2AoigDSCTAssSUOBCF" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the key reasons for creating Supercharge was to ensure that it support developers and helps them develop fast. To stay in line with the goal, I decided to price Supercharge at an extremely &lt;strong&gt;affordable USD25&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;With competing products which allows for customised starter packs starting anywhere from USD50 to USD99 and above (with some even priced at USD300!!), I felt it was only right to help developers with an affordable option.&lt;/p&gt;

&lt;p&gt;The best part of Supercharge is that it is not the usual annoying subscription based package where you keep paying to use it. It’s a &lt;strong&gt;one-time payment&lt;/strong&gt; for unlimited upgrades to future releases.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#providing-support"&gt;
  &lt;/a&gt;
  Providing Support
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0b4KlZqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/0%2A8kjEDOnjEcsZIfWX" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0b4KlZqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/0%2A8kjEDOnjEcsZIfWX" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Creating a product doesn’t just involve coding and putting it up for sale! When Supercharge launched, it attracted a number of queries and requests through the email support channel.&lt;/p&gt;

&lt;p&gt;To be honest, I did not expect to receive such queries so early on the launch. Some of the feature requests were really unique, whereas some just had a few generic queries on integrating CSS and other libraries.&lt;/p&gt;

&lt;p&gt;The great part of customer support is that I managed to understand Supercharge from the user’s point of view, to exactly feel and empathise with their problems and how Supercharge is helping to solve them.&lt;/p&gt;

&lt;p&gt;With the understanding, I iterated fast, provided feedback and support, not just as a creator of Supercharge, but also as a fellow developer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testimonials"&gt;
  &lt;/a&gt;
  Testimonials
&lt;/h3&gt;

&lt;p&gt;I decided to collate some feedback from the early users of Supercharge and I am glad to see the strong recommendations and support they have provided.&lt;/p&gt;

&lt;p&gt;Many of the users found that Supercharge helps them to save a great deal of time! And most of the existing bundled features helped them to kickstart their app in no time at all — some within even 10 mins!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MVNAuyab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2560/1%2AEiwCsFx_1E2b6_x6i6aE5w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MVNAuyab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2560/1%2AEiwCsFx_1E2b6_x6i6aE5w.png" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What’s Next?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://supercharge.dev/"&gt;Supercharge.dev&lt;/a&gt; was created to simplify the lives of developers and to help them focus on the goals of their development instead of worrying about structuring and setting up apps again and again.&lt;/p&gt;

&lt;p&gt;So what’s next for Supercharge?&lt;/p&gt;

&lt;p&gt;In the coming days and weeks, I will be upgrading Supercharge with more features — such as email verification flow. Other possible feature maps include a TailwindCSS version and a Bootstrap version for the frontend UI.&lt;/p&gt;

&lt;p&gt;Do you want certain features you would love to see in Supercharge? Drop me an email at &lt;a href="//mailto:supercharge.dev@gmail.com"&gt;supercharge.dev@gmail.com&lt;/a&gt; or a comment below!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-supercharged"&gt;
  &lt;/a&gt;
  Getting Supercharged!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yZ0GndJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/0%2AFATUNDZzZMKf2hYX" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yZ0GndJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/0%2AFATUNDZzZMKf2hYX" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Are you a React developer who wants to skip all the boilerplate setup and have an end-to-end Minimum Viable Product (MVP) ready in minutes?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Then Supercharge is for you — check out &lt;a href="https://supercharge.dev/"&gt;Supercharge.dev&lt;/a&gt; and download now. To get a limited time offer of 20% discount, be sure to use promo code &lt;strong&gt;DEV2021&lt;/strong&gt;!&lt;/p&gt;

</description>
      <category>react</category>
      <category>nextjs</category>
      <category>javascript</category>
      <category>sideprojects</category>
    </item>
    <item>
      <title>How to create beautiful particles effect in Vue.js (2.x and 3.x)</title>
      <author>Matteo Bruni</author>
      <pubDate>Thu, 29 Apr 2021 14:17:44 +0000</pubDate>
      <link>https://dev.to/matteobruni/how-to-create-beautiful-particles-effect-in-vue-js-2-x-and-3-x-27d8</link>
      <guid>https://dev.to/matteobruni/how-to-create-beautiful-particles-effect-in-vue-js-2-x-and-3-x-27d8</guid>
      <description>&lt;h1&gt;
  &lt;a href="#i-want-those-particle-effects-too"&gt;
  &lt;/a&gt;
  I want those particle effects too!!
&lt;/h1&gt;

&lt;p&gt;Did you see some fancy particles and you want something like that in your Vue.js project?&lt;/p&gt;

&lt;p&gt;Let's see how to add them using &lt;a href="https://github.com/matteobruni/tsparticles"&gt;tsParticles&lt;/a&gt; Vue.js 2.x or 3.x components.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ready-to-use-templates"&gt;
  &lt;/a&gt;
  Ready to use templates
&lt;/h2&gt;

&lt;p&gt;Are you too lazy to read the post and want some working samples?&lt;/p&gt;

&lt;p&gt;Here you are:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vue-js-2x-raw-particlesvue-endraw-"&gt;
  &lt;/a&gt;
  Vue JS 2.x (&lt;code&gt;particles.vue&lt;/code&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles/tree/master/demo/vue"&gt;Vue 2.x tsParticles demo project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codesandbox.io/s/particlesvue-20-kwsl6"&gt;Vue 2.x tsParticles CodeSandbox sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tsparticles/vue-auth-template"&gt;Vue 2.x tsParticles Authentication template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#vue-js-3x-raw-particlesvue3-endraw-"&gt;
  &lt;/a&gt;
  Vue JS 3.x (&lt;code&gt;particles.vue3&lt;/code&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/matteobruni/tsparticles/tree/master/demo/vue3"&gt;Vue 3.x tsParticles demo project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codesandbox.io/s/particlesvue3-68246"&gt;Vue 3.x tsParticles CodeSandbox sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tsparticles/vue3-auth-template"&gt;Vue 3.x tsParticles Authentication template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#community-projects"&gt;
  &lt;/a&gt;
  Community projects
&lt;/h4&gt;

&lt;p&gt;If you have some cool projects to share or some beautiful samples for newbies feel free to open a PR in the &lt;a href="https://github.com/tsparticles/templates"&gt;tsParticles templates repository&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Let's start with the popular Vue.js 2.x version. The &lt;code&gt;particles.vue&lt;/code&gt; npm package.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vuejs-2x"&gt;
  &lt;/a&gt;
  Vue.js 2.x
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add particles.vue
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Particles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;particles.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// this adds the particles plugin to Vue.js&lt;/span&gt;
&lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Particles&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#demo-config"&gt;
  &lt;/a&gt;
  Demo config
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- use this tag to add a particle container with an external configuration --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;Particles&lt;/span&gt;
                &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"tsparticles"&lt;/span&gt;
                &lt;span class="na"&gt;:particlesInit=&lt;/span&gt;&lt;span class="s"&gt;"particlesInit"&lt;/span&gt;
                &lt;span class="na"&gt;:particlesLoaded=&lt;/span&gt;&lt;span class="s"&gt;"particlesLoaded"&lt;/span&gt;
                &lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;"http://foo.bar/particles.json"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- or --&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- use this tag to add a particle container with an inline configuration --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;Particles&lt;/span&gt;
                &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"tsparticles"&lt;/span&gt;
                &lt;span class="na"&gt;:particlesInit=&lt;/span&gt;&lt;span class="s"&gt;"particlesInit"&lt;/span&gt;
                &lt;span class="na"&gt;:particlesLoaded=&lt;/span&gt;&lt;span class="s"&gt;"particlesLoaded"&lt;/span&gt;
                &lt;span class="na"&gt;:options=&lt;/span&gt;&lt;span class="s"&gt;"{
                    background: {
                        color: {
                            value: '#0d47a1'
                        }
                    },
                    fpsLimit: 60,
                    interactivity: {
                        detectsOn: 'canvas',
                        events: {
                            onClick: {
                                enable: true,
                                mode: 'push'
                            },
                            onHover: {
                                enable: true,
                                mode: 'repulse'
                            },
                            resize: true
                        },
                        modes: {
                            bubble: {
                                distance: 400,
                                duration: 2,
                                opacity: 0.8,
                                size: 40
                            },
                            push: {
                                quantity: 4
                            },
                            repulse: {
                                distance: 200,
                                duration: 0.4
                            }
                        }
                    },
                    particles: {
                        color: {
                            value: '#ffffff'
                        },
                        links: {
                            color: '#ffffff',
                            distance: 150,
                            enable: true,
                            opacity: 0.5,
                            width: 1
                        },
                        collisions: {
                            enable: true
                        },
                        move: {
                            direction: 'none',
                            enable: true,
                            outMode: 'bounce',
                            random: false,
                            speed: 6,
                            straight: false
                        },
                        number: {
                            density: {
                                enable: true,
                                value_area: 800
                            },
                            value: 80
                        },
                        opacity: {
                            value: 0.5
                        },
                        shape: {
                            type: 'circle'
                        },
                        size: {
                            random: true,
                            value: 5
                        }
                    },
                    detectRetina: true
                }"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#typescript-errors"&gt;
  &lt;/a&gt;
  TypeScript errors
&lt;/h4&gt;

&lt;p&gt;If you are using TypeScript and you have some errors while importing/using Particles plugin try adding the following import before the previous code:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;declare&lt;/span&gt; &lt;span class="nx"&gt;module&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;particles.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;Let's continue with the new Vue.js 3.x version. The &lt;code&gt;particles.vue3&lt;/code&gt; npm package.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#vuejs-3x"&gt;
  &lt;/a&gt;
  Vue.js 3.x
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add particles.vue3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Particles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;particles.vue3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// this will add the particles plugin to your Vue.js app&lt;/span&gt;
&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Particles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#demo-config"&gt;
  &lt;/a&gt;
  Demo config
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- use this tag to add a particle container with an external configuration --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;Particles&lt;/span&gt;
                &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"tsparticles"&lt;/span&gt;
                &lt;span class="na"&gt;:particlesInit=&lt;/span&gt;&lt;span class="s"&gt;"particlesInit"&lt;/span&gt;
                &lt;span class="na"&gt;:particlesLoaded=&lt;/span&gt;&lt;span class="s"&gt;"particlesLoaded"&lt;/span&gt;
                &lt;span class="na"&gt;url=&lt;/span&gt;&lt;span class="s"&gt;"http://foo.bar/particles.json"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- or --&amp;gt;&lt;/span&gt;

        &lt;span class="c"&gt;&amp;lt;!-- use this tag to add a particle container with an inline configuration --&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;Particles&lt;/span&gt;
                &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"tsparticles"&lt;/span&gt;
                &lt;span class="na"&gt;:particlesInit=&lt;/span&gt;&lt;span class="s"&gt;"particlesInit"&lt;/span&gt;
                &lt;span class="na"&gt;:particlesLoaded=&lt;/span&gt;&lt;span class="s"&gt;"particlesLoaded"&lt;/span&gt;
                &lt;span class="na"&gt;:options=&lt;/span&gt;&lt;span class="s"&gt;"{
                    background: {
                        color: {
                            value: '#0d47a1'
                        }
                    },
                    fpsLimit: 60,
                    interactivity: {
                        detectsOn: 'canvas',
                        events: {
                            onClick: {
                                enable: true,
                                mode: 'push'
                            },
                            onHover: {
                                enable: true,
                                mode: 'repulse'
                            },
                            resize: true
                        },
                        modes: {
                            bubble: {
                                distance: 400,
                                duration: 2,
                                opacity: 0.8,
                                size: 40
                            },
                            push: {
                                quantity: 4
                            },
                            repulse: {
                                distance: 200,
                                duration: 0.4
                            }
                        }
                    },
                    particles: {
                        color: {
                            value: '#ffffff'
                        },
                        links: {
                            color: '#ffffff',
                            distance: 150,
                            enable: true,
                            opacity: 0.5,
                            width: 1
                        },
                        collisions: {
                            enable: true
                        },
                        move: {
                            direction: 'none',
                            enable: true,
                            outMode: 'bounce',
                            random: false,
                            speed: 6,
                            straight: false
                        },
                        number: {
                            density: {
                                enable: true,
                                value_area: 800
                            },
                            value: 80
                        },
                        opacity: {
                            value: 0.5
                        },
                        shape: {
                            type: 'circle'
                        },
                        size: {
                            random: true,
                            value: 5
                        }
                    },
                    detectRetina: true
                }"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#typescript-errors"&gt;
  &lt;/a&gt;
  TypeScript errors
&lt;/h4&gt;

&lt;p&gt;If you are using TypeScript and you have some errors while importing/using Particles plugin try adding the following import before the previous code:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;declare&lt;/span&gt; &lt;span class="nx"&gt;module&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;particles.vue3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#demos"&gt;
  &lt;/a&gt;
  Demos
&lt;/h3&gt;

&lt;p&gt;The demo website is &lt;a href="https://particles.js.org"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://particles.js.org"&gt;https://particles.js.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There's also a CodePen collection actively maintained and updated &lt;a href="https://codepen.io/collection/DPOage"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/collection/DPOage"&gt;https://codepen.io/collection/DPOage&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#related-posts"&gt;
  &lt;/a&gt;
  Related posts
&lt;/h2&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/matteobruni" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQFfhxbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--48F7T3mb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349511/bb633a3a-649f-4897-9773-86a525c8fdc3.png" alt="matteobruni image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/matteobruni/how-to-create-beautiful-confetti-animations-with-tsparticles-193" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to create beautiful confetti animations with tsParticles&lt;/h2&gt;
      &lt;h3&gt;Matteo Bruni ・ Mar 20 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/matteobruni" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQFfhxbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--48F7T3mb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349511/bb633a3a-649f-4897-9773-86a525c8fdc3.png" alt="matteobruni image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/matteobruni/particles-vue3-released-particles-animations-for-vue-js-3-x-51ia" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Particles.vue3 released! Particles animations for Vue.js 3.x&lt;/h2&gt;
      &lt;h3&gt;Matteo Bruni ・ Sep 21 '20 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#vue&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#news&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/matteobruni" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQFfhxbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--48F7T3mb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349511/bb633a3a-649f-4897-9773-86a525c8fdc3.png" alt="matteobruni image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/matteobruni/how-to-create-particles-animations-in-vue-js-1ebi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to create particles animations in Vue.js&lt;/h2&gt;
      &lt;h3&gt;Matteo Bruni ・ Aug  6 '20 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#vue&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/matteobruni" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQFfhxbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--48F7T3mb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349511/bb633a3a-649f-4897-9773-86a525c8fdc3.png" alt="matteobruni image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/matteobruni/how-to-use-tsparticles-52k" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to use tsParticles&lt;/h2&gt;
      &lt;h3&gt;Matteo Bruni ・ Jul 25 '20 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/matteobruni" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQFfhxbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--48F7T3mb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349511/bb633a3a-649f-4897-9773-86a525c8fdc3.png" alt="matteobruni image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/matteobruni/tsparticles-tutorial-2mbb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;tsParticles tutorial&lt;/h2&gt;
      &lt;h3&gt;Matteo Bruni ・ Jun 10 '20 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#typescript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/matteobruni" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQFfhxbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--48F7T3mb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349511/bb633a3a-649f-4897-9773-86a525c8fdc3.png" alt="matteobruni image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/matteobruni/5-reasons-to-use-tsparticles-and-not-particles-js-1gbe" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;5 reasons to use tsParticles and not Particles.js&lt;/h2&gt;
      &lt;h3&gt;Matteo Bruni ・ Mar 13 '20 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#typescript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/matteobruni" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQFfhxbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--48F7T3mb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349511/bb633a3a-649f-4897-9773-86a525c8fdc3.png" alt="matteobruni image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/matteobruni/migrating-from-particles-js-to-tsparticles-2a6m" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Migrating from Particles.js to tsParticles&lt;/h2&gt;
      &lt;h3&gt;Matteo Bruni ・ Mar 15 '20 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#typescript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;






&lt;p&gt;If you like the project and you want to support that please leave a star on GitHub&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/matteobruni"&gt;
        matteobruni
      &lt;/a&gt; / &lt;a href="https://github.com/matteobruni/tsparticles"&gt;
        tsparticles
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      tsParticles - Easily create highly customizable particles animations and use them as animated backgrounds for your website. Ready to use components available for React, Vue.js (2.x and 3.x), Angular, Svelte, jQuery, Preact, Inferno.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://particles.js.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58f22f0a546d5d7f34b4668dc842ac91b3a4cf9a5de72346559b7d15b13e587e/68747470733a2f2f7061727469636c65732e6a732e6f72672f696d616765732f62616e6e6572322e706e67" alt="banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
tsParticles - TypeScript Particles&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;A lightweight TypeScript library for creating particles. Dependency free (&lt;a href="https://raw.githubusercontent.com/matteobruni/tsparticles/main/#dependencies"&gt;*&lt;/a&gt;) and browser ready!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/VincentGarreau/particles.js"&gt;Particles.js&lt;/a&gt; converted in TypeScript, dependency free (&lt;a href="https://raw.githubusercontent.com/matteobruni/tsparticles/main/#dependencies"&gt;*&lt;/a&gt;), improved with new cool 😎 features and various bugs fixed and &lt;strong&gt;it's actively maintained&lt;/strong&gt;!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.jsdelivr.com/package/npm/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c64088d02effc095dd7386325d216ce6d6bd46513a88ed2274e0ec4e6d876cf/68747470733a2f2f646174612e6a7364656c6976722e636f6d2f76312f7061636b6167652f6e706d2f74737061727469636c65732f62616467653f7374796c653d726f756e646564" alt="jsDelivr"&gt;&lt;/a&gt; &lt;a href="https://cdnjs.com/libraries/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9e5a7a72f7cbc65eedd0e4d7431e4d4762c472ad4a66b6648a8e74c2b6be331/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f74737061727469636c6573" alt="Cdnjs"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e18baafcedd7efbbd13d6e2b1cf738c07ea898383c946e6e7b16400f813d70cb/68747470733a2f2f62616467652e667572792e696f2f6a732f74737061727469636c65732e737667" alt="npmjs"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc16ec38506bbab6f6b729850ad28fd94a5643f1633b4356647033c3aa3fe102/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f74737061727469636c6573" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://lerna.js.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3bc63f921dd60bac6d91aa900ef570c928b2aa4c2124ed23647e8fe9d2232853/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61696e7461696e6564253230776974682d6c65726e612d6363303066662e737667" alt="lerna"&gt;&lt;/a&gt; &lt;a href="https://www.codefactor.io/repository/github/matteobruni/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ce969771f1502f57861fe8ce7c787c209c50ef17c2e19f35cb1de0c960eba94a/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6d617474656f6272756e692f74737061727469636c65732f6261646765" alt="CodeFactor"&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/manual/ar3s/tsparticles?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=matteobruni/tsparticles&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f96d4d0dccc9c7491f3ed07af70a808b0fd4d2e4d863a1f7bb9e51e10ae526e/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6239383361616633343631613463343862316532656563636531666631643734" alt="Codacy Badge"&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/matteobruni/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/daadb4894128d1e19b72d80236f5959f1f2b47f9fe081373f3246131f0189f6c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974706f642d72656164792d2d746f2d2d636f64652d626c75653f6c6f676f3d676974706f64" alt="Gitpod Ready-to-Code"&gt;&lt;/a&gt; &lt;a href="https://repl.it/github/matteobruni/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64adf1bd83058aa64f848245f74bef77cd7cc2a3f36343ac44d6d0c39cc41bc3/68747470733a2f2f7265706c2e69742f62616467652f6769746875622f6d617474656f6272756e692f74737061727469636c6573" alt="Run on Repl.it"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Do you want to use it on your website?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;This library is available on the two most popular CDNs and it's easy and ready to use, if you were using particles.js it's even easier&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You'll find the instructions &lt;a href="https://github.com/matteobruni/tsparticles/blob/main/README.md#library-installation"&gt;below&lt;/a&gt;, with all the links you need, and &lt;em&gt;don't be scared by &lt;strong&gt;TypeScript&lt;/strong&gt;, it's just the source language&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The output files are just JavaScript&lt;/strong&gt;. 🤩&lt;/p&gt;
&lt;p&gt;CDNs and &lt;code&gt;npm&lt;/code&gt; have all the sources you need in &lt;strong&gt;Javascript&lt;/strong&gt;, a bundle browser ready (tsparticles.min.js) and all files splitted for &lt;code&gt;import&lt;/code&gt; syntax.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you are still interested&lt;/strong&gt; some lines below there are some instructions for migrating from…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/matteobruni/tsparticles"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


</description>
      <category>vue</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What Is a Framework In Web Development?</title>
      <author>SolveIt</author>
      <pubDate>Thu, 29 Apr 2021 14:14:51 +0000</pubDate>
      <link>https://dev.to/solveit/what-is-a-framework-in-web-development-3cc3</link>
      <guid>https://dev.to/solveit/what-is-a-framework-in-web-development-3cc3</guid>
      <description>&lt;p&gt;Web frameworks designed to write web applications. Frameworks consist of many different libraries that facilitate the development of a software product or website. Web application development frameworks are collections of different tools. Frameworks vary in their capabilities and functions, depending on the tasks set. They define the structure, set the rules, and provide the necessary set of development tools.&lt;/p&gt;

&lt;p&gt;Development is definitely not an easy process. It includes many different tasks — planning, coding and testing. Frameworks make developers' work easier by allowing them to control the entire software development process from a single platform.&lt;/p&gt;

&lt;p&gt;The programming interface (API) and the architecture of the future apps,  built with it, depends on the framework definition. Developers know the libraries and understand the basic development patterns.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backend-frameworks"&gt;
  &lt;/a&gt;
  Backend frameworks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wQnkusiN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z01w4eep7woo4gnekqkk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wQnkusiN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z01w4eep7woo4gnekqkk.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Backend frameworks are running on the server side. They are responsible for developing well-structured, secure and dynamic backend applications. The tools provided by such frameworks make the whole development process greatly simplify, helping you to focus on requested ideas and features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Express&lt;/strong&gt; - used by well-known companies such as Accenture, IBM and Uber. Express is a minimalistic, rapid and flexible framework. It provides all the capabilities you need while actively leveraging all the benefits and power of Node.js. Supports REST API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Django&lt;/strong&gt; - a popular framework used by IT leaders Google, YouTube, Instagram for web development on Python. With many available useful functions: routing, working with a database, the admin part of the site and more. The framework implements many important security principles on its own.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frontend-frameworks"&gt;
  &lt;/a&gt;
  Frontend frameworks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XwhFxu8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5sxuc6k9v5v0tnkysesj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XwhFxu8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5sxuc6k9v5v0tnkysesj.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Frontend frameworks work in the browser and can be used to realize user interfaces or improve them in different ways, build site logic and create single-page applications.&lt;/p&gt;

&lt;p&gt;With these frameworks developers can integrate innovative solutions and improve the user interfaces, websites and applications will look good in any browser and system, making them accessible for every user. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Angular&lt;/strong&gt; -  specialized in single-page application (SPA), highly rated by Microsoft and Paypal. Used for TypeScript development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vue&lt;/strong&gt; - flexible tool with a progressive structure that can be easily integrated into existing projects. Component architecture and rich ecosystem allows to develop complex apps with minimal costs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ember&lt;/strong&gt; - framework for maximizing developers productivity. It applies the best programming practices and many useful functions and components. Used by Google, Microsoft, Heroku and Netflix.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fullstack-frameworks"&gt;
  &lt;/a&gt;
  Full-stack frameworks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bRheBfYk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z9b2hkc4z9dugdmcirqp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bRheBfYk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z9b2hkc4z9dugdmcirqp.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These frameworks provide tools for both server-side and client-side to problem solving. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Meteor&lt;/strong&gt; is a good example. Server side and client side, both can be created using the same programming language - JavaScript. This makes it possible to create and use one codebase for running an application, which contains both front- and back-end logic. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flask&lt;/strong&gt;, written on Python, is another example of a full-stack framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frameworks-and-microframeworks"&gt;
  &lt;/a&gt;
  Frameworks and microframeworks
&lt;/h2&gt;

&lt;p&gt;What is framework in web development? Web development frameworks can vary in sizes. There are tools that can be solutions for everything. Lighter weight options specialize in solving specific problems. Such frameworks are called microframeworks. Their functionality is extended with other applications. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#focus-on-these-frameworks-in-2021"&gt;
  &lt;/a&gt;
  Focus on these frameworks in 2021
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W-S1vp5t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9cgi6qd7h092how5h644.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W-S1vp5t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9cgi6qd7h092how5h644.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-bootstrap"&gt;
  &lt;/a&gt;
  1. Bootstrap
&lt;/h4&gt;

&lt;p&gt;This framework can solve almost any actual problems with a large number of free and paid templates.&lt;br&gt;
Bootstrap can be tuned in with SASS. The user can establish own projects using npm.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-foundation"&gt;
  &lt;/a&gt;
  2. Foundation
&lt;/h4&gt;

&lt;p&gt;Doesn't have a separate style. The huge variety of tools can set up for yourself.&lt;br&gt;
Included navigation bars, multiple container types, and a developer-friendly grid. Foundation also offers access to ready-made HTML templates.&lt;br&gt;
Motion UI can be used for animations with inbuilt effects.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-bulma"&gt;
  &lt;/a&gt;
  3. Bulma
&lt;/h4&gt;

&lt;p&gt;Users can only get good looking web pages with default settings.&lt;br&gt;
The flexbox module makes it easy to create responsive layouts.&lt;br&gt;
Setting up the default project parameters is done in minutes.&lt;br&gt;
Doesn't contain JavaScript functionality, but integrates easily with other frameworks.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-uikit"&gt;
  &lt;/a&gt;
  4. UIKit
&lt;/h4&gt;

&lt;p&gt;Has a variety of components for allowing to perform complex frontend layouts, and also provides access to advanced elements (navigation bars, sidebars, and parallax structures).&lt;br&gt;
Ability to set and widen with LESS or SASS preprocessors.&lt;br&gt;
Provides a web customizer to allow create own designs and copy SASS or LESS variables into projects.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-milligram"&gt;
  &lt;/a&gt;
  5. Milligram
&lt;/h4&gt;

&lt;p&gt;Readily to configure and apply heavy features to refine productivity.&lt;br&gt;
Has no default style, it's possible to create what users want.&lt;br&gt;
Simple interface, fast to understand all features.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mobile-development-frameworks"&gt;
  &lt;/a&gt;
  Mobile Development Frameworks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r9eGo2XO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8nuoi25zprz4ckn40j8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r9eGo2XO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8nuoi25zprz4ckn40j8.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-ionic"&gt;
  &lt;/a&gt;
  1. Ionic
&lt;/h4&gt;

&lt;p&gt;Ionic is an open-source mobile UI toolkit for developing high-quality, cross-platform applications for Android, iOS, and the Web from one codebase.&lt;/p&gt;

&lt;p&gt;Ionic is a development platform for the whole application lifecycle that allows teams to create better and faster applications. Some of the popular applications developed using Ionic are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MarketWatch&lt;/li&gt;
&lt;li&gt;McDonald's &lt;/li&gt;
&lt;li&gt;Pacifica&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#2-xamarin"&gt;
  &lt;/a&gt;
  2. Xamarin
&lt;/h4&gt;

&lt;p&gt;Xamarin is open-source application development platform for creating Android, iOS applications with .NET, and C#. &lt;/p&gt;

&lt;p&gt;Some of the popular applications developed using Xamarin are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Alaska airlines &lt;/li&gt;
&lt;li&gt;CA Mobile&lt;/li&gt;
&lt;li&gt;Novarum DX&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#3-flutter"&gt;
  &lt;/a&gt;
  3. Flutter
&lt;/h4&gt;

&lt;p&gt;Flutter is Google’s UI toolkit for building beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. It has an expressive and flexible UI and gives a native performance on iOS and Android platforms.&lt;/p&gt;

&lt;p&gt;Some of the popular applications developed using Flutter are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Alibaba&lt;/li&gt;
&lt;li&gt;Cryptography&lt;/li&gt;
&lt;li&gt;Google Ads&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;What is a web development framework? It is a good decision for developers. Frameworks will simplify development processes. Developers should always stay in touch with new technologies and frameworks for successful work. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#advantages-of-using-a-software-frameworks"&gt;
  &lt;/a&gt;
  Advantages of using a software frameworks:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Helps in setting programming practices and fitting use of development patterns&lt;/li&gt;
&lt;li&gt;Code have more secure&lt;/li&gt;
&lt;li&gt;Ability to avoid duplicate and redundant code&lt;/li&gt;
&lt;li&gt;Helps develop code without bugs&lt;/li&gt;
&lt;li&gt;Makes it easier to work on difficult technologies&lt;/li&gt;
&lt;li&gt;Possibility to contribute to open-source frameworks&lt;/li&gt;
&lt;li&gt;Frameworks are pre-tested and save time for developing applications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Originally published at &lt;a href="https://solveit.dev"&gt;https://solveit.dev&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>framework</category>
      <category>development</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Setting up Node js, Express, Mongodb and Mongoose with TypeScript</title>
      <author>Kinanee Samson</author>
      <pubDate>Thu, 29 Apr 2021 14:10:17 +0000</pubDate>
      <link>https://dev.to/kalashin1/setting-up-node-js-express-mongodb-and-mongoose-with-typescript-1c5h</link>
      <guid>https://dev.to/kalashin1/setting-up-node-js-express-mongodb-and-mongoose-with-typescript-1c5h</guid>
      <description>&lt;p&gt;This week i had to setup a node js server for a project that i will be working on for the next 2 months, i had built node js servers with plain JavaScript but JavaScript's dynamically typed system is always a pain to deal with and i opted to use TypeScript for sanity and clarity, i also wanted all the cool features that comes along with using TypeScript like auto-completion and full editor support. I don't know if you have used express in the past before, but i strongly advice that you are comfortable using express and the other tools i will make reference to in this article, i will not go into much detail about using them because it is outside the scope of this article, I just want to show you how to set up your local development environment using TypeScript. Let's dive in.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-node-js"&gt;
  &lt;/a&gt;
  Install Node js
&lt;/h3&gt;

&lt;p&gt;For you to actually use node js on your computer you have to install it, you can head to their &lt;a href="https://nodejs.org/download"&gt;website&lt;/a&gt; to download the latest version of node js to your computer..&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-project-directory"&gt;
  &lt;/a&gt;
  Create a project directory
&lt;/h3&gt;

&lt;p&gt;If you successfully installed node js on your computer, you can open up a terminal or a command prompt and hit &lt;code&gt;node -v&lt;/code&gt; this throws back the version of node js you have installed on your computer if there's one. From the command line enter the following command to create a new project. &lt;code&gt;mkdir server &amp;amp;&amp;amp; cd server&lt;/code&gt; this command creates a folder and navigates to the newly created folder, in our instance the folder is server but you can name it whatever you feel like.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#start-an-new-node-js-app"&gt;
  &lt;/a&gt;
  Start an new Node js App
&lt;/h3&gt;

&lt;p&gt;From the terminal enter &lt;code&gt;npm init -y&lt;/code&gt; to generate a package.json file that will keep track of the dependencies we are going to install as we go along the project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-typescript"&gt;
  &lt;/a&gt;
  Install TypeScript
&lt;/h3&gt;

&lt;p&gt;To install TypeScript hit &lt;code&gt;npm i typescript&lt;/code&gt; and this installs TypeScript from npm for us, next thing is to install express and setup a basic express server, but wait we are using TypeScript right?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-express"&gt;
  &lt;/a&gt;
  Install Express
&lt;/h3&gt;

&lt;p&gt;From the command line run &lt;code&gt;npm i express&lt;/code&gt; and when that is done, we need to install the type definition for express so we don't get an error in our editor while using express. Next thing is to run &lt;code&gt;npm i -D @types/express&lt;/code&gt; we install the express types and we save it to our dev dependencies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-an-express-server"&gt;
  &lt;/a&gt;
  Setting up An Express Server
&lt;/h3&gt;

&lt;p&gt;From the command line/terminal run &lt;code&gt;code .&lt;/code&gt; make sure you are inside the server directory. This opens VS code with the current folder as our work space, create a file and name it whatever you want but it should have a &lt;code&gt;.ts&lt;/code&gt; extension. In my case I'm going to name this file &lt;code&gt;app.ts&lt;/code&gt;. Our basic express server should have the following contents&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text/html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`app running on port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#running-the-server"&gt;
  &lt;/a&gt;
  Running the Server
&lt;/h3&gt;

&lt;p&gt;To run this server we need to install nodemon to our dev dependencies, this is a package that will watch our server for changes and then it will automatically restart the server so that the changes takes effect without us having to do so manually. To install nodemon run &lt;code&gt;npm i -D nodemon&lt;/code&gt;. &lt;strong&gt;&lt;em&gt;Next thing is to open up&lt;/em&gt;&lt;/strong&gt; the &lt;code&gt;package.json&lt;/code&gt; file and add the following scripts to the script object;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"compile"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tsc app.ts -w"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon app"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you are done adding those scripts, from the command line run the compile script &lt;code&gt;npm run compile&lt;/code&gt; this script compiles our TypeScript to JavaScript, then you can open up another terminal session and run the start script &lt;code&gt;npm run start&lt;/code&gt; and this will now serve our file, you should see &lt;code&gt;app running on port 8080&lt;/code&gt; in the current terminal if everything works according to plan.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-mongodb-and-mongoose"&gt;
  &lt;/a&gt;
  installing Mongodb and Mongoose
&lt;/h3&gt;

&lt;p&gt;Since we are going to be working with Mongodb and Mongoose we need to install it, and to do that open up another terminal session and run the following commands &lt;code&gt;npm i mongodb mongoose&lt;/code&gt; when Mongodb and Mongoose are done installing, you need to install the type definitions for Mongodb and Mongoose like we did with express, ensure you install the type definitions to the dev dependencies since we would not be needing them for production, we only use them to ensure that we don't get errors in VS code while working with the packages. To install the type definitions run &lt;code&gt;npm i -D @types/mongodb @types/mongoose&lt;/code&gt; from the command line.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#connecting-to-mongodb-with-mongoose"&gt;
  &lt;/a&gt;
  Connecting to Mongodb with Mongoose
&lt;/h3&gt;

&lt;p&gt;Now we have Mongodb and Mongoose installed on our computer, we can connect to it. I have to say that i have mongodb installed locally on my computer and i cannot start going into detail about setting up Mongodb locally or in the cloud because it is outside our scope. Open your server file, the one written with typescript, not the compiled JavaScript file and add the following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//app.ts&lt;/span&gt;


&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt;

&lt;span class="c1"&gt;// THIS STRING IS THE LINK TO OUR MONGODB&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongodb://localhost:27017/test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="c1"&gt;// mongodb connection&lt;/span&gt;
&lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;useCreateIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`app running on port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text/html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`app running on port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save the file, the TypeScript compiler will auto compile our TypeScript to JavaScript because we ran it with the watch flag and nodemon will automatically restart the server so we can see our changes take effect. If everything happened successfully then you should see &lt;code&gt;app running on port 8080&lt;/code&gt; in the terminal and if you open up your browser and navigate to &lt;code&gt;localhost:8080/&lt;/code&gt; you should see a big Hello World sent back to us. You can go on and continue building your server from where we stopped. &lt;/p&gt;

&lt;p&gt;That's it for this article, i hope you learned something today, feel free to like and leave a comment below &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>typescript</category>
    </item>
    <item>
      <title>DISCUSS: Climate change and webdevelopment</title>
      <author>Naseki</author>
      <pubDate>Thu, 29 Apr 2021 14:05:55 +0000</pubDate>
      <link>https://dev.to/naseki/discuss-how-much-does-climate-change-impact-your-decisions-as-a-dev-3d93</link>
      <guid>https://dev.to/naseki/discuss-how-much-does-climate-change-impact-your-decisions-as-a-dev-3d93</guid>
      <description>&lt;p&gt;I know, I know! Earth Day has already passed and I should've asked this last week. I only realised after I'd posted last week's discussion post that this topic would have been very relevant to that day. Still, this is worth talking about!&lt;/p&gt;

&lt;p&gt;I'll be mainly focusing on webdev, but this could apply to any programming field.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-our-decisions-could-impact-the-environment"&gt;
  &lt;/a&gt;
  How our decisions could impact the environment
&lt;/h1&gt;

&lt;p&gt;It shouldn't come as a surprise that the internet accounts for almost 4% of global emissions. Here's a &lt;a href="https://www.climatecare.org/resources/news/infographic-carbon-footprint-internet/"&gt;handy infographic&lt;/a&gt; if you'd to know a more!&lt;/p&gt;

&lt;p&gt;It's the reason why big companies are starting to opt for green energy. Think of Google running 100% on renewable energy for several years now. It even has a &lt;a href="https://sustainability.google"&gt;site dedicated to sustainability&lt;/a&gt;! By using Google's services, you're essentially running your stuff on green energy.&lt;/p&gt;

&lt;p&gt;Then, we've got the other side of the hill, like the NFT craze that's still lingering. One of the major arguments against NFT was its environmental impact due to the computing power required for each transaction. Even the &lt;a href="https://www.theatlantic.com/ideas/archive/2021/04/nfts-werent-supposed-end-like/618488"&gt;creator of NFT&lt;/a&gt; talks about it. But right now, the technical solutions to reduce all that computing power are out there.&lt;/p&gt;

&lt;p&gt;That's how we can make a difference. 🌱&lt;/p&gt;

&lt;p&gt;Now, I don't want to go in-depth about this topic. This isn't an article to inform you all of it. Giving some examples might give some clarity on where I'm going with this. I mainly want to hear from others what they think they could do about it!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E2%9C%8D-comment-below-answering-the-following-questions"&gt;
  &lt;/a&gt;
  ✍ Comment below answering the following questions
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Do you think your &lt;strong&gt;development process&lt;/strong&gt; can benefit or harm nature, even if in a small way? If so, how?&lt;/li&gt;
&lt;li&gt;Is environmental impact part of your decision-making process when choosing between &lt;strong&gt;products for development&lt;/strong&gt;? (e.g. hosting)&lt;/li&gt;
&lt;li&gt;After reading this short post, do you feel climate change should &lt;strong&gt;cross your mind more often&lt;/strong&gt; in your problem-solving process?&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ciETrbsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sa0hfs0886uf0g7c0b7e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ciETrbsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sa0hfs0886uf0g7c0b7e.png" alt="Naseki logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/Naseki_"&gt;Twitter&lt;/a&gt; | &lt;a href="https://naseki.com"&gt;Website&lt;/a&gt; | &lt;a href="https://buttondown.email/Naseki/"&gt;Newsletter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Why avoid testing implementation details</title>
      <author>Akos</author>
      <pubDate>Thu, 29 Apr 2021 14:03:30 +0000</pubDate>
      <link>https://dev.to/akoskm/why-avoid-testing-implementation-details-38ci</link>
      <guid>https://dev.to/akoskm/why-avoid-testing-implementation-details-38ci</guid>
      <description>&lt;p&gt;Let’s find out why it isn’t such a great idea to test implementation details and how to tell if you’re already doing it!&lt;/p&gt;

&lt;p&gt;When working on projects, apply these practices to keep development costs optimal, increase confidence in the software, and let the project move faster.&lt;/p&gt;

&lt;p&gt;And now for the readers who think that the ultimate cost-saving is to not write tests, ever:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--KRKqFdAt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1022164075206373377/LDfe6qsE_normal.jpg" alt="Eduards Sizovs profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Eduards Sizovs
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/eduardsi"&gt;@eduardsi&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      – We don't write tests.&lt;br&gt;– Why?&lt;br&gt;– Because we don’t have time for it.&lt;br&gt;– Why?&lt;br&gt;– Because there is too much work and pressure.&lt;br&gt;– Why?&lt;br&gt;– Because we don’t move fast enough.&lt;br&gt;– Why?&lt;br&gt;– Because changing software has become difficult and risky.&lt;br&gt;– Why?&lt;br&gt;– Because we don’t write tests.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:40 PM - 12 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1381633331230601221" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1381633331230601221" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1381633331230601221" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#what-are-implementation-details"&gt;
  &lt;/a&gt;
  What are implementation details?
&lt;/h2&gt;

&lt;p&gt;Let’s say you release software that sorts To-do list items by their weight. To sort this list, you used &lt;a href="https://en.wikipedia.org/wiki/Insertion_sort"&gt;Insertion sort&lt;/a&gt; because of its simplicity. This is one of the lists your software displays:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;4 whole eggs&lt;/li&gt;
&lt;li&gt;1 cup of whole cow’s milk&lt;/li&gt;
&lt;li&gt;120 grams of oats&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One day you decide to replace the sort algorithm with &lt;a href="https://en.wikipedia.org/wiki/Bucket_sort"&gt;Bucket sort&lt;/a&gt;. Is this change going to impact how your users interact with this software? Think about the release notes, should you explain why you did this change? Probably not.&lt;/p&gt;

&lt;p&gt;Congratulations, you just spotted an implementation detail!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-i-should-avoid-testing-them"&gt;
  &lt;/a&gt;
  Why I should avoid testing them?
&lt;/h2&gt;

&lt;p&gt;Tests coupled to a specific implementation become useless when that implementation changes. Money thrown away, basically. Organized software development is all about not burning through your budget as quickly as possible while still making some business impact, right?&lt;/p&gt;

&lt;p&gt;Or, as &lt;a href="https://twitter.com/tastapod"&gt;@tastapod&lt;/a&gt; puts it in one of his &lt;a href="https://www.youtube.com/watch?v=4Y0tOi7QWqM"&gt;talks&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;”… sustainably minimizing lead time to business impact and that is the goal of the system of work that we call software development.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Writing code costs a lot. Whether we add functionality, tests, it costs to write, understand, maintain, and improve the code. Usually, the more code you have the higher the development costs are.&lt;/p&gt;

&lt;p&gt;Solving business requirements without creating new code would be ideal, but that’s not always an easy task.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#am-i-testing-the-right-thing"&gt;
  &lt;/a&gt;
  Am I testing the right thing?
&lt;/h2&gt;

&lt;p&gt;During my studies, we were obsessed with coding challenges. I came across this site called &lt;a href="https://coderbyte.com/"&gt;Coderbyte&lt;/a&gt; that hosts such challenges and realized how well it represents this idea of what to test.&lt;/p&gt;

&lt;p&gt;The UI immediately creates the right separation. The panels from left to right represent the requirements, the software, and the tests.&lt;/p&gt;

&lt;p&gt;The business requirement here is to write a program that calculates the factorial of an integer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZeGUYGUW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://akoskm.com/assets/posts/images/2020-02-05/recursion.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZeGUYGUW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://akoskm.com/assets/posts/images/2020-02-05/recursion.jpg" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s pretend for a moment that we like the idea of testing implementation details. In fact, all we do is test implementation details so this one is going to be easy! We should definitely test the number of recursive function calls for a given input.&lt;/p&gt;

&lt;p&gt;Now, fast forward a year.&lt;/p&gt;

&lt;p&gt;We took a course from Data Structures and Algorithms and we learned we can turn recursions into loops. We come up with this brand new way of calculating factorials:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DPTUiWtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://akoskm.com/assets/posts/images/2020-02-05/loop.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DPTUiWtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://akoskm.com/assets/posts/images/2020-02-05/loop.jpg" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’re excited to try this new algorithm, but our test won’t pass anymore. The recursion is gone!&lt;/p&gt;

&lt;p&gt;The biggest problem with such tests is that they don’t increase confidence in our software. The only thing they show is the presence of recursion, an implementation detail that might change in the future.&lt;/p&gt;

&lt;p&gt;You’ll run into the same problem while working on any kind of software over a period of time. Your development skills might improve during that period, you rewrite some of your code, but the problems you solve remain the same.&lt;/p&gt;

&lt;p&gt;Focus on the business requirements while writing tests so they keep working even after the implementation changes.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--oVN8Phr3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/871555682608136205/yMs8Gnot_normal.jpg" alt="Guillermo Rauch profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Guillermo Rauch
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @rauchg
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Write tests. Not too many. Mostly integration.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:43 PM - 10 Dec 2016
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=807626710350839808" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=807626710350839808" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=807626710350839808" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Do you write tests at all? Are you thinking about what’s the best way to test your software?&lt;/p&gt;

&lt;p&gt;Let me know in the comments below!&lt;/p&gt;

&lt;p&gt;Follow me on Twitter &lt;a href="https://twitter.com/akoskm"&gt;@akoskm&lt;/a&gt; for more content like this.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>systems</category>
      <category>architecture</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Your Guide to Best Task Trackers for Developers</title>
      <author>Anastasia 🏄🏻‍♀️</author>
      <pubDate>Thu, 29 Apr 2021 14:03:22 +0000</pubDate>
      <link>https://dev.to/actitime/your-guide-to-best-task-trackers-for-developers-4b36</link>
      <guid>https://dev.to/actitime/your-guide-to-best-task-trackers-for-developers-4b36</guid>
      <description>&lt;p&gt;If you’re struggling to stay on top of tasks, you’re not the only one. According to a &lt;a href="https://www.gallup.com/workplace/231668/dismal-employee-engagement-sign-global-mismanagement.aspx"&gt;Gallup State of the Global Workplace report&lt;/a&gt;, 85% of employees aren’t engaged or completely disengaged from their work. If you’re a developer that’s working at home, it can be even harder to focus when you’re dealing with so many more distractions.&lt;/p&gt;

&lt;p&gt;Luckily, there are many tools and techniques at your disposal to help focus on your priorities, and one notable tool is task tracking software. Task tracking may seem like an extra step in your workday, but this kind of software is more helpful than you may realize.&lt;/p&gt;

&lt;p&gt;With this in mind, read on to learn about some of the best task tracker software out there for developers!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#actitime"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.actitime.com/"&gt;actiTIME&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ByKEkJioprU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;actiTIME is an easy time and task tracking software that can also help you analyze your performance based on the data it collects.&lt;/p&gt;

&lt;p&gt;The best part about actiTIME is that it’s easy to get started in only a few clicks. The software adapts to your workflow. You can easily configure it to hide the features that you don’t need and don’t want to see. It offers an agile Kanban board so that you can see what you need to do on any given day at a glance. You’ll also be able to reorder and reorganize your tasks as your priorities change.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quire"&gt;
  &lt;/a&gt;
  &lt;a href="https://quire.io/"&gt;Quire&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Qn8k0YsutsI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Quire is a visually simple, collaborative task tracker software for teams that need to break down large projects into easy-to-manage bites.&lt;/p&gt;

&lt;p&gt;It helps you manage your thought process for larger projects in descending lists that make sense. Teams can then arrange tasks, steps, and projects into Kanban boards. One of the most helpful additions is the use of graphs and charts so that you can see your team’s progress easily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#jira"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.atlassian.com/software/jira"&gt;Jira&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/xrCJv0fTyR8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Jira is created for agile software teams who struggle with quick and numerous releases.&lt;/p&gt;

&lt;p&gt;Not only can teams plan their workflow and springs, but they can also accurately track their progress with real-time visual data. Its integration with Bitbucket also speeds up development workflow by updating issues and transitioning work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backlog"&gt;
  &lt;/a&gt;
  &lt;a href="https://youtu.be/9UKU51tjw-k"&gt;Backlog&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9UKU51tjw-k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Backlog is a task management software that emphasizes a clear view of everything that’s due in one place.&lt;/p&gt;

&lt;p&gt;Entire teams can stay on top of deadlines through deadline reminders with start and stop dates. Large tasks can also be broken down in easier to manage subtasks that are delegated to team members easily. Teams are also notified about issues, pull requests, and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#meistertask"&gt;
  &lt;/a&gt;
  &lt;a href="https://youtu.be/-Op3dL4n4ck"&gt;MeisterTask&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-Op3dL4n4ck"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This web-based task tracker emphasizes its ease of use for teams.&lt;/p&gt;

&lt;p&gt;Its intuitive design doesn’t need lengthy tutorials or support articles in order for teams to start using it to its full capability. This is balanced with its customizable workflows and flexibility when it comes to integrating with other apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rationalplan"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.rationalplan.com/"&gt;RationalPlan&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/XtDhBkdBEsY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;RationalPlan is a powerful solution for project management that utilizes PMBOK guidelines.&lt;/p&gt;

&lt;p&gt;It’s tailored for teams that work in construction, engineering, services, consulting, and business or software development. This means that along with task management that includes milestones and duration-driven activities, users can enjoy cost tracking as well as portfolio management. It also includes detailed reports to deliver to stakeholders.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things"&gt;
  &lt;/a&gt;
  &lt;a href="https://culturedcode.com/things/"&gt;Things&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/2R6o5t0VK_A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Things is a well-known task manager that can be used by teams as well as for personal goal tracking.&lt;/p&gt;

&lt;p&gt;The all-new design includes an easy-to-navigate menu on the side that shows each individual section according to date or topic. Unlike simple to-do apps, it gives you the ability to add headers as well as see a calendar view of your tasks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#taskque"&gt;
  &lt;/a&gt;
  &lt;a href="https://taskque.com/"&gt;TaskQue&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0D3TKNnH5Cc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The TaskQue software was created to boost productivity through its intuitive tools.&lt;/p&gt;

&lt;p&gt;It can automatically assign tasks to team members based on their current workflow so that no one is ever overburdened. It also includes a discussion module to ease communication. With productivity as its main focus, team members have the ability to create personal to-do lists that are separate from their assigned work tasks. It also includes charts and graphs that give a quick and insightful overview of workflow progress.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wimi"&gt;
  &lt;/a&gt;
  &lt;a href="https://youtu.be/hTv53hx14dU"&gt;WiMi&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/hTv53hx14dU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;WiMi is crafted for large teams that need a hub to organize communication and projects.&lt;/p&gt;

&lt;p&gt;Workspaces help centralize data as well as goals and deadlines so that everyone is on the same page. Meanwhile, Channels act as your team’s main communication hub that also includes the ability to direct message. Users also have the ability to video call each other with screen sharing integrated. Lastly, Tasks give teams the ability to structure large projects into easy-to-manage deadlines with shared to-do lists.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keep-your-workflow-under-control"&gt;
  &lt;/a&gt;
  Keep Your Workflow Under Control
&lt;/h2&gt;

&lt;p&gt;As you can see, task tracking software is an easy way to center your workday around. By taking the time to learn the software, you’ll be able to take control of your day by seeing the tasks you should be prioritizing. Delegating tasks as well as seeing the progress on a large project is easy through intuitively designed dashboards.&lt;/p&gt;

&lt;p&gt;Some project management software even comes with the ability to automate tasks and message team members so that everyone is on the same page.&lt;/p&gt;

&lt;p&gt;Ready to take control of your work and keep on top of all of your developer tasks? Try out our &lt;a href="https://www.actitime.com/free-online-trial"&gt;fully-functional, 30-day trial&lt;/a&gt; today!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.actitime.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SurHVTlO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619702589851/tlEoizZRK.jpeg" alt="banner.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>8 Tips To Improve Your UI Designs</title>
      <author>Braydon Coyer</author>
      <pubDate>Thu, 29 Apr 2021 13:42:29 +0000</pubDate>
      <link>https://dev.to/braydoncoyer/8-tips-to-improve-your-ui-designs-4mm</link>
      <guid>https://dev.to/braydoncoyer/8-tips-to-improve-your-ui-designs-4mm</guid>
      <description>&lt;p&gt;Design. Does it scare you? &lt;/p&gt;

&lt;p&gt;While it's not mandatory for front-end developers to design user interfaces, I don't believe it's something we should shy away from either. &lt;/p&gt;

&lt;p&gt;Many developers claim they don't have an eye for design, but just like with anything, skills improve with practice.&lt;/p&gt;

&lt;p&gt;In this article, I want to share 8 design tips that have helped me as a developer. Hopefully they help you, too!&lt;/p&gt;

&lt;p&gt;Most ( if not all ) of these tips are pulled from free sections of &lt;a href="https://refactoringui.com/book/"&gt;Refactoring UI&lt;/a&gt; - an amazing toolbox of UI tips from a developer's perspective written by the makers of TailwindCSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-1"&gt;
  &lt;/a&gt;
  Tip #1
&lt;/h2&gt;

&lt;p&gt;Use color and weight to create hierarchy instead of size. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jf29pp0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604510584475/POg0zbBSj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jf29pp0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604510584475/POg0zbBSj.png" alt="Screen Shot 2020-11-04 at 11.22.55 AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I struggle with this one. I have a tendency to up the size of elements (usually text) to convey the importance. &lt;/p&gt;

&lt;p&gt;Instead, tinker around with font-weight and color. Notice how by bolding the title text and changing some font color the card on the right feels more uniform and less claustrophobic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-2"&gt;
  &lt;/a&gt;
  Tip #2
&lt;/h2&gt;

&lt;p&gt;Don't use grey text on colored backgrounds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xv46sQHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604510715655/GrUJyDAv1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xv46sQHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604510715655/GrUJyDAv1.png" alt="Screen Shot 2020-11-04 at 11.25.09 AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the left the user's title is a tone of grey. While it doesn't look 'bad' by itself, notice how changing the color to a light-green, complementing the dark-green background, improves readability and also establishes hierarchy. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-3"&gt;
  &lt;/a&gt;
  Tip #3
&lt;/h2&gt;

&lt;p&gt;Offset shadows. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ofv0obQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604513673356/ulmmCH8WN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ofv0obQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604513673356/ulmmCH8WN.png" alt="Screen Shot 2020-11-04 at 12.14.26 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead of placing a shadow with a large spread around a parent element, offset the shadow and use smaller spreads. Keep in mind that the shadow placement allows your users to (often unconsciously) determine the light-source in your user interface. Be consistent so you don't break the effect.&lt;/p&gt;

&lt;p&gt;You can use shadows on inner elements, too! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t0WLA4XZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604513884807/Y_0JTVHu5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t0WLA4XZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604513884807/Y_0JTVHu5.png" alt="Screen Shot 2020-11-04 at 12.16.27 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-4"&gt;
  &lt;/a&gt;
  Tip #4
&lt;/h2&gt;

&lt;p&gt;Use fewer borders - &lt;em&gt;please!&lt;/em&gt; &lt;br&gt;
This concept builds on some of the previous tips.&lt;/p&gt;

&lt;p&gt;A natural instinct is to use borders to define separation between elements or segments of an element, or to use borders to outline elements and make them pop from background components of the user interface.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bt_QqlQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604513954146/h_aXNIkOu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bt_QqlQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604513954146/h_aXNIkOu.png" alt="Screen Shot 2020-11-04 at 12.18.25 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead of using borders to outline elements, revert to a subtle shadow with an offset.&lt;/p&gt;

&lt;p&gt;Instead of using borders to define separation, use white-space or a different background color. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gxt-7DfE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604514250081/k-5uOnWmD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gxt-7DfE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604514250081/k-5uOnWmD.png" alt="Screen Shot 2020-11-04 at 12.24.03 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With this simple revision, elements will feel less claustrophobic and look less like design trends from 10 years ago.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-5"&gt;
  &lt;/a&gt;
  Tip #5
&lt;/h2&gt;

&lt;p&gt;Don't blow up icons that are meant to be small.&lt;/p&gt;

&lt;p&gt;White-space &lt;em&gt;can&lt;/em&gt; be a pain. Sometimes it's good and helps readability, but other times it can feel like a void that needs to be filled. I've found this to be true when dealing with icons inside other elements and I often blow them up to a larger size to fill the gap.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lnfE8Dq1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604514410045/8I4ftPg-x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lnfE8Dq1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604514410045/8I4ftPg-x.png" alt="Screen Shot 2020-11-04 at 12.26.17 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead of trying to increase the size of an icon to occupy space, try placing the icon in another shape with a secondary color. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-6"&gt;
  &lt;/a&gt;
  Tip #6
&lt;/h2&gt;

&lt;p&gt;Use accent borders to add color to a bland design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Si3Nv7C_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604514697946/qhzaXNrH2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Si3Nv7C_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604514697946/qhzaXNrH2.png" alt="Screen Shot 2020-11-04 at 12.31.30 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We've all been there. &lt;br&gt;
We look at something we designed and think:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It's too white and bland. This is boring to look at. I need to add some color.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I tend to go overboard and add too much color and before I know it, the background of a card is colored with a primary hue and the entire design looks off. &lt;/p&gt;

&lt;p&gt;Often times, less is more. Instead of going overboard, simply add an accent-colored border to an element. It doesn't overwhelm the design, but manages to remedy the bland-look. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-7"&gt;
  &lt;/a&gt;
  Tip #7
&lt;/h2&gt;

&lt;p&gt;Not every button needs a background color. &lt;/p&gt;

&lt;p&gt;This one is huge and is something I think we pick up from old design-tends. Always including a background color for your buttons can confuse the user from the most important actions in your user interface.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2_Ic0bNZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604515029886/enzPE9BCB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2_Ic0bNZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604515029886/enzPE9BCB.png" alt="Screen Shot 2020-11-04 at 12.37.02 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead of always using a primary, secondary or tertiary background color, allow less-important buttons to breath a bit. &lt;/p&gt;

&lt;p&gt;Here are a few rules from Steve Schoger to help you decide how to style your buttons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Primary actions should be obvious. Solid, high contrast background colors work great here.&lt;/li&gt;
&lt;li&gt;Secondary actions should be clear but not prominent. Outline styles or lower contrast background colors are great options.&lt;/li&gt;
&lt;li&gt;Tertiary actions should be discoverable but unobtrusive. Styling these actions like links is usually the best approach.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here are a few examples:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b4hNa5T9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604515362039/0J_0fmxth.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b4hNa5T9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604515362039/0J_0fmxth.png" alt="Screen Shot 2020-11-04 at 12.42.26 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip-8"&gt;
  &lt;/a&gt;
  Tip #8
&lt;/h2&gt;

&lt;p&gt;Think outside the database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--luojSn0K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604518949671/JTE-Enr3X.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--luojSn0K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1604518949671/JTE-Enr3X.png" alt="Screen Shot 2020-11-04 at 1.42.19 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As developers, it's easy for us to take an object of data that we retrieve from the back-end and slap the values onto the UI. There isn't any creativity, and designs end up looking very tabular. &lt;/p&gt;

&lt;p&gt;Instead, don't be afraid to present data in a more useful way, emphasize the most important content and to combine labels and values into human-readable phrases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Designing may scare you, but it doesn't &lt;em&gt;need&lt;/em&gt; to scare you. Yes, designers go through many years of learning to understand theory and all of the other things it takes to build user interfaces that present great user experiences, but as developers, we can design with tactics if we lack the talent.  &lt;/p&gt;

&lt;p&gt;My hope is that these 8 tips help you identify small changes that you can make and greatly improve your designs. &lt;/p&gt;

&lt;p&gt;For more tips and tricks like these, make sure to check out  &lt;a href="https://refactoringui.com/book/"&gt;RefactoringUI!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;If you enjoyed this article, consider &lt;a href="https://braydoncoyer.dev/newsletter"&gt;signing up for my developer newsletter!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you’d like to keep up to date with me on a daily basis, &lt;a href="https://twitter.com/BraydonCoyer"&gt;follow me on Twitter!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>design</category>
      <category>webdev</category>
      <category>programming</category>
      <category>uiweekly</category>
    </item>
    <item>
      <title>The Data Science Roadmap</title>
      <author>Dave Amiana</author>
      <pubDate>Thu, 29 Apr 2021 13:37:50 +0000</pubDate>
      <link>https://dev.to/iamdeb25/the-data-science-roadmap-1km</link>
      <guid>https://dev.to/iamdeb25/the-data-science-roadmap-1km</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-data-science"&gt;
  &lt;/a&gt;
  What is Data Science?
&lt;/h2&gt;

&lt;p&gt;Data science seems to be a convoluted term that rose in popularity mostly tied with the advancements of machine learning frameworks. Some argue that &lt;em&gt;data science&lt;/em&gt; is a term for an &lt;strong&gt;overpaid statistician&lt;/strong&gt;, others imagine them to be a role one adapts from &lt;em&gt;software engineering&lt;/em&gt;, while some see them as &lt;em&gt;businessmen with technical skills&lt;/em&gt;. I've seen heated forums debating the ethos of this term. I found Field Cady's definition of data science to be in the right spot where this tension can be settled. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Data science means doing analytics work that, for one reason or another, requires a substantial amount of software engineering skills.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At the heart of this practice lies a set of skills that makes one a data scientist. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-data-scientists"&gt;
  &lt;/a&gt;
  What are Data Scientists?
&lt;/h2&gt;

&lt;p&gt;There are three hats the guise of a data scientist revolves into. &lt;/p&gt;

&lt;p&gt;Whereas a statistician is trained to do all the analytical methods, a data scientist extends their knowledge of applying statistical techniques for building the necessary tools in modeling a computational system. Data scientists make sure they covered the edge cases where no known tools are yet found to be useful. They apply their proficiency in computer programming where a traditional statistician might not have. A data scientist does not need statistical tools to get their work done.&lt;/p&gt;

&lt;p&gt;In the guise of an Engineer. A data scientist has to be technically savvy. They have to know how to transform their data into something meaningful without relying too much on ready-made software. Covering the edge-cases means that exploring uncharted territories spawned with irregularities. A data scientist must cope up with irregularities. And one way to adapt is to develop the software skills in &lt;em&gt;handcrafting&lt;/em&gt; their tools to cover the edge cases. Note that turning your data into something that is finally useful for your model is one of the &lt;a href="https://www.elderresearch.com/blog/what-is-data-wrangling-and-why-does-it-take-so-long/"&gt;most crucial and tedious processes&lt;/a&gt; of data science (and machine learning).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is also a good point to motivate anyone to hone software skills. Not only that you grow beyond the ready-made services provided in the software, but you also gain the freedom to go wherever you want to go. Unchained.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Business people are oriented to the value of a product. Their sense is to follow whichever is essential to their business problem. Field Cady (2017), noted that what separates a good data science professional from a mediocre one is not up to their maths or engineering skills, it is about formulating the right question. The questions that we aim to solve roughly estimate the value of our product. In addition, business people are also good at with communicating other people. Likewise, a data scientist must tell us their most interesting insights in the form of a story, that does not limit discussion in a room of people who knows data science.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;No amount of technical competence or statistical rigor can make up for having solved a useless problem.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#the-data-explorers-roadmap"&gt;
  &lt;/a&gt;
  The Data Explorer's Roadmap
&lt;/h2&gt;

&lt;p&gt;Now that we clarified the terms, let's lay out our map in navigating our workflow as data explorers of the wild. I got this from François Chollet's introduction to Deep Learning and Field Cady's handbook for data scientists.  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Define the problem&lt;/strong&gt;. List down the questions you want to ask. This will be your guide for understanding the kinds of data you require. This is usually done in groups. This step is critical as it sets your objective, and you need to be very clear about it. Having this discussion on your team keeps everyone on the same page working on the same set of objectives.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Gather relevant data sets&lt;/strong&gt;. Check if there are blanks on your dataset. What does joining two datasets mean? Do they agree on one thing? This is also critical for it affects the quality of your output: you feed data in, and you get information out. If you feed your model with a bunch of garbage (having pathological patterns, too many outliers, etc.). In a notable paper from Microsoft researchers &lt;a href="https://dl.acm.org/doi/10.3115/1073012.1073017"&gt;Michele Banko and Eric Bill (2001)&lt;/a&gt;, and from the computer scientist &lt;a href="https://bityl.co/6bZq"&gt;Norvig &lt;em&gt;et al.&lt;/em&gt; (2009)&lt;/a&gt;: &lt;strong&gt;data matters more to algorithms&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Hack and Analyze&lt;/strong&gt;. This is where it gets so bright and beautiful! What you do is you play with a bunch of knobs and twist them together randomly to see how one affects the other -- that is the famous neural network architecture: the foundations of Deep Learning AI. On the other end, is a set of more rigorous algorithms from Statistics and Computer Science known as Clustering, Classification, our good old Regression, and dimensionality reduction: this comprises the &lt;a href="https://bityl.co/6bdU"&gt;shallow ML architecture&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Communicate your results&lt;/strong&gt;. At the end of it all: we should tailor our results in a coherent story. Make it compelling! That includes our intentions, and the results of our analysis put together in a format that anyone can understand. We don't talk to the people in the room we work with anymore. We talk for the people. Make it visual. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Cady, F. (2017). The Data Science Handbook. John Wiley &amp;amp; Sons.&lt;/li&gt;
&lt;li&gt;Chollet, F. (2018). Deep Learning with Python (Vol. 361). New York: Manning.&lt;/li&gt;
&lt;li&gt;Géron, A. (2019). Hands-on machine learning with Scikit-Learn, Keras, and TensorFlow: Concepts, tools, and techniques to build intelligent systems. O'Reilly Media.&lt;/li&gt;
&lt;li&gt;Banko, M., &amp;amp; Brill, E. (2001, July). Scaling to very very large corpora for natural language disambiguation. In Proceedings of the 39th annual meeting of the Association for Computational Linguistics (pp. 26-33).&lt;/li&gt;
&lt;li&gt;Halevy, A., Norvig, P., &amp;amp; Pereira, F. (2009). The unreasonable effectiveness of data. IEEE Intelligent Systems, 24(2), 8-12.&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;A note from the author:&lt;/p&gt;

&lt;p&gt;I do not consider myself a data scientist. I only have fun times with Machine Learning Engineering as a part of my software projects. The ideas I gathered here are not entirely from my own. For the interested reader, I referenced above what I would recommend for your to get started. &lt;em&gt;Cheers!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>computerscience</category>
      <category>beginners</category>
    </item>
    <item>
      <title>CI/CD with TeamCity | DevOps Tool of the Month (4)</title>
      <author>Techworld with Nana</author>
      <pubDate>Thu, 29 Apr 2021 13:32:47 +0000</pubDate>
      <link>https://dev.to/techworld_with_nana/ci-cd-with-teamcity-devops-tool-of-the-month-4-16pm</link>
      <guid>https://dev.to/techworld_with_nana/ci-cd-with-teamcity-devops-tool-of-the-month-4-16pm</guid>
      <description>&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLy7NrYWoggjztwSskGu59O38gL5v0LjUT"&gt;DevOps tool of the month&lt;/a&gt; is a series, where each month I introduce one new useful DevOps tool in 2021 🙌🏼&lt;/p&gt;

&lt;p&gt;For April I chose: &lt;a href="https://www.jetbrains.com/teamcity/"&gt;&lt;strong&gt;TeamCity&lt;/strong&gt;&lt;/a&gt; 🎉 - the general-purpose CI/CD solution by JetBrains. It's a powerful platform for DevOps-centric teams&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-youtube-zqi4fdfs60-"&gt;
  &lt;/a&gt;
  &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/zqi4fDF-S60"&gt;
&lt;/iframe&gt;

&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#strengths-of-teamcity-%EF%B8%8F"&gt;
  &lt;/a&gt;
  Strengths of TeamCity ⭐️
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#%EF%B8%8F-simple-configuration"&gt;
  &lt;/a&gt;
  ⚡️ Simple Configuration
&lt;/h3&gt;

&lt;p&gt;One of the main advantages of TeamCity is its &lt;strong&gt;simple configuration&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Compared to Jenkins e.g., you don't need to install and configure plugins for each and every common task like,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;triggering the build automatically&lt;/li&gt;
&lt;li&gt;using build tools like Maven, npm or Gradle&lt;/li&gt;
&lt;li&gt;connecting to a Docker registry&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These &lt;strong&gt;out-of-the-box integrations with many popular tools&lt;/strong&gt; (version control, issue tracker, package repository, ...) make it really easy to use, as you don't need any third-party plugins/addons for the common tasks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%EF%B8%8F-configuration-as-code"&gt;
  &lt;/a&gt;
  ⚡️ Configuration as Code
&lt;/h3&gt;

&lt;p&gt;Configuring the build in a nice UI is great, however nowadays, we want to configure builds, tests, and deployment as code that is trackable and stored in a version control system.&lt;/p&gt;

&lt;p&gt;In TeamCity you can write your configuration code using a real programming language, which is Kotlin (developed by JetBrains itself 🤓).&lt;/p&gt;

&lt;p&gt;So you have the &lt;strong&gt;power of a full-featured programming language&lt;/strong&gt; and can use its libraries and tool set as well as make use of autocompletion and refactoring in your IDE etc. This can help you keep your CI/CD configuration clean and maintainable. 👍&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PJtigzed--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ez92s4394vclag95tiy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PJtigzed--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ez92s4394vclag95tiy.png" alt="Configuration as Code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%EF%B8%8F-build-chains"&gt;
  &lt;/a&gt;
  ⚡️ Build Chains
&lt;/h3&gt;

&lt;p&gt;In TeamCity you can create build chains 🔗 from your builds by defining dependencies between them. That means you can &lt;strong&gt;configure which builds depend on which ones in a chain&lt;/strong&gt;. So whenever you run a build, TeamCity will check for all of its dependent builds and run them first in a correct order. You can also easily pass the artifacts or other outputs from one build to another. &lt;/p&gt;

&lt;p&gt;In addition to running builds in sequence, you can also run them in parallel. An example use case for this would be, if you want to run the same tests on different platforms or environments, like on different operating systems or different cloud platforms etc, before building and deploying the application. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--70PVi5dR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ow2ik3r1blvd25bklqzo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--70PVi5dR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ow2ik3r1blvd25bklqzo.png" alt="Build Dependencies"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%EF%B8%8F-personal-builds"&gt;
  &lt;/a&gt;
  ⚡️ Personal Builds
&lt;/h3&gt;

&lt;p&gt;One more great feature I want to mention is that you can run what's called "Personal" builds &lt;strong&gt;directly from your code editor&lt;/strong&gt;. Personal builds are like developer's own builds which ONLY they can access. 😎&lt;/p&gt;

&lt;p&gt;So this is a very convenient way to trigger builds on a remote TeamCity server from your local development environment. This can be really useful if you want to test your changes before committing your code. Personal builds are available for all major IDEs.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#how-teamcity-works-teamcity-architecture"&gt;
  &lt;/a&gt;
  How TeamCity works - TeamCity Architecture 💡
&lt;/h1&gt;

&lt;p&gt;Now let's see how TeamCity works. It has a very clean architecture.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#teamcity-server"&gt;
  &lt;/a&gt;
  TeamCity Server
&lt;/h3&gt;

&lt;p&gt;You have a central management component, called TeamCity server, where you can configure your builds and see your build information, all in a nice UI. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build-agent"&gt;
  &lt;/a&gt;
  Build Agent
&lt;/h3&gt;

&lt;p&gt;Once you configure the builds they need to run somewhere, right? For that TeamCity has Build Agents. And you can add and connect any number of build agents to your server. These agents can be installed anywhere, on an EC2 server, on your own on-premise servers, it could be a Docker container etc. And each agent can have different tools installed on them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automatic-detection"&gt;
  &lt;/a&gt;
  Automatic Detection
&lt;/h3&gt;

&lt;p&gt;And for each build TeamCity will &lt;strong&gt;automatically detect what build agent can execute that build&lt;/strong&gt; based on the steps configured in that build. &lt;/p&gt;

&lt;p&gt;For example, if your build is using npm command to run JS tests, you will need a build agent with npm installed on it to run the build. If your build creates Docker image from your application and pushes it to Docker registry, obviously Docker will be needed to run these steps. So TeamCity will automatically detect a build agent with Docker installed on it and execute the build on that build agent. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xd1EtNHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d56dg2b0prmls9c4t5ld.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xd1EtNHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d56dg2b0prmls9c4t5ld.png" alt="TeamCity Auto-Detection"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#get-started-with-teamcity-setup-ci-pipeline-from-scratch"&gt;
  &lt;/a&gt;
  Get started with TeamCity - Setup CI Pipeline from Scratch 👩🏻‍💻
&lt;/h1&gt;

&lt;p&gt;Depending on which option you choose:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;self-managed&lt;/strong&gt; or&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;fully-managed TeamCity Cloud&lt;/strong&gt;
the steps will be different.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the video I show you the self-managed alternative, meaning installing and configuring the TeamCity server and connecting the Build Agents ourselves. Note that when using TeamCity Cloud you don't have to do this setup, so you can get started much faster.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps-to-setup-our-ci-pipeline-from-scratch"&gt;
  &lt;/a&gt;
  Steps to setup our CI Pipeline from scratch:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. Install TeamCity Server&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;2. Configure CI Pipeline&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4mhij8FF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/balhtf9i47qydjylf7dp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4mhij8FF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/balhtf9i47qydjylf7dp.png" alt="CI Pipeline"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;3. Connect Build Agents&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;4. Run the Build&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So, first we will install TeamCity server and then configure a continuous integration pipeline for a simple Java Gradle project that builds a Docker image and pushes it to a private DockerHub registry. After which we will connect Build Agents to it to run our build. 🔥&lt;/p&gt;

&lt;p&gt;Check out my video for the step by step demo:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/zqi4fDF-S60"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Let me know what you think about it! 🤓 🧐&lt;/p&gt;

&lt;p&gt;More awesome tools coming up next on this series, so stay tuned for it! 🎬 😊&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 😍 for more content:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/groups/techworldwithnana"&gt;Private FB group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Njuchi_"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCdngmbVKX1Tgre699-XLlUA?sub_confirmation=1"&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.instagram.com/techworld_with_nana/"&gt;Instagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="//linkedin.com/in/nana-janashia"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>devops</category>
      <category>cicd</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
