<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Made a Real Time Chat Application using React.js</title>
      <author>Bhavesh Lokre</author>
      <pubDate>Thu, 27 May 2021 17:04:10 +0000</pubDate>
      <link>https://dev.to/bhavesh1235/made-a-real-time-chat-application-using-react-js-1nni</link>
      <guid>https://dev.to/bhavesh1235/made-a-real-time-chat-application-using-react-js-1nni</guid>
      <description>&lt;p&gt;1.This is a fully functional &lt;strong&gt;Real time Chat Application&lt;/strong&gt; made using React.js with functionalities like online status,image support,Read receipent,multiple rooms&lt;/p&gt;

&lt;p&gt;2.Link to &lt;strong&gt;Github repo&lt;/strong&gt;-&amp;gt; &lt;a href="https://github.com/bhavesh1235/React-Chat-App"&gt;Link&lt;/a&gt;&lt;br&gt;
If you like the project please give it a &lt;strong&gt;star&lt;/strong&gt; at github &lt;/p&gt;

&lt;p&gt;3.Backend is hosted by &lt;a href="https://chatengine.io"&gt;https://chatengine.io&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>Freenode’s Mass Resignations, NVIDIA’s Less Crypto-Friendly Cards, &amp; more on DevNews!</title>
      <author>Josh Puetz</author>
      <pubDate>Thu, 27 May 2021 17:03:32 +0000</pubDate>
      <link>https://dev.to/devteam/freenode-s-mass-resignations-nvidia-s-less-crypto-friendly-cards-more-on-devnews-2oa5</link>
      <guid>https://dev.to/devteam/freenode-s-mass-resignations-nvidia-s-less-crypto-friendly-cards-more-on-devnews-2oa5</guid>
      <description>&lt;p&gt;A new episode of the DevNews podcast is here! &lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devnews/s4-e7-freenode-s-mass-resignations-nvidia-s-less-crypto-friendly-chips-twitter-s-crop-algorithm-investigation-and-remote-employers-excluding-colorado"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S4:E7 - Freenode’s Mass Resignations, NVIDIA’s Less Crypto-Friendly Chips, Twitter’s Crop Algorithm Investigation, and Remote Employers Excluding Colorado&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devnews"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevNews  

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s4-e7-freenode-s-mass-resignations-nvidia-s-less-crypto-friendly-chips-twitter-s-crop-algorithm-investigation-and-remote-employers-excluding-colorado" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s4-e7-freenode-s-mass-resignations-nvidia-s-less-crypto-friendly-chips-twitter-s-crop-algorithm-investigation-and-remote-employers-excluding-colorado" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s4-e7-freenode-s-mass-resignations-nvidia-s-less-crypto-friendly-chips-twitter-s-crop-algorithm-investigation-and-remote-employers-excluding-colorado" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s4-e7-freenode-s-mass-resignations-nvidia-s-less-crypto-friendly-chips-twitter-s-crop-algorithm-investigation-and-remote-employers-excluding-colorado" alt="DevNews" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJPvwj98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XOSCOlKI--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s4-e7-freenode-s-mass-resignations-nvidia-s-less-crypto-friendly-chips-twitter-s-crop-algorithm-investigation-and-remote-employers-excluding-colorado"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devnews/s4-e7-freenode-s-mass-resignations-nvidia-s-less-crypto-friendly-chips-twitter-s-crop-algorithm-investigation-and-remote-employers-excluding-colorado"&gt;
      &lt;img id="episode-profile-image" alt="S4:E7 - Freenode’s Mass Resignations, NVIDIA’s Less Crypto-Friendly Chips, Twitter’s Crop Algorithm Investigation, and Remote Employers Excluding Colorado" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--84VpOv6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3GWkSFQs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#in-this-episode-saronyitbarek-and-i-covered"&gt;
  &lt;/a&gt;
  &lt;strong&gt;In this episode, &lt;a class="mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt;
 and I covered...&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Companies excluding the state of Colorado from remote opportunities due to the Equal Pay For Equal Work Act&lt;/li&gt;
&lt;li&gt;NVIDIA making their graphics cards less desirable for cryptocurrency miners&lt;/li&gt;
&lt;li&gt;Twitter’s report on its investigation into its cropping algorithm, which many people criticized as having a racial and gender bias.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, we chatted with &lt;strong&gt;James Eaton-Lee&lt;/strong&gt;, former Staff Developer at Freenode, and current Chair of Libera Chat. James explained how Libera Chat was created in response to entrepreneur and Korea's Crown Prince, Andrew Lee, taking control of Freenode, which led to a mass resignation of many of its developers. Fascinating stuff!&lt;/p&gt;

&lt;p&gt;Enjoy S4E7! Can you believe that next week's episode is our season finale? 😱 &lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devnews"&gt;follow DevNews&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; — or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Quick Listening Links&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s4-e6-babels-money-challenges-what-its-like-to-work/id1525581923?i=1000522461260"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/7JlOAnVWuZwIHdVYAQkL27"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cDovL2ZlZWRzLmNvZGVuZXdiaWUub3JnL2Rldm5ld3NfcG9kY2FzdC54bWw/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZuZXdzLzMw?sa=X&amp;amp;ved=0CAQQkfYCahcKEwjgnqHF7NjwAhUAAAAAHQAAAAAQCA"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stitcher.com/show/devnews/episode/s4-e6-babels-money-challenges-what-its-like-to-work-on-rails-and-coinbases-end-to-salary-negotiations-84092032"&gt;Stitcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devnews-dev-fH8hvsClkWp/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevNews-p1352512/?topicId=163183906"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.herokuapp.com/podcasts/devnews/episodes/164"&gt;Transcript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Our season four sponsors, &lt;a href="https://scoutapm.com/devnews"&gt;Scout APM&lt;/a&gt; and &lt;a href="https://rudderstack.com/"&gt;Rudderstack&lt;/a&gt; ❤️ &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/SXTTVIwYA36XpgfqJW/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/SXTTVIwYA36XpgfqJW/giphy.gif" alt="Sound on"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>news</category>
      <category>podcast</category>
    </item>
    <item>
      <title>Drag-Drop-Upload, using JavaScript; </title>
      <author>Areeb ur Rub</author>
      <pubDate>Thu, 27 May 2021 17:02:37 +0000</pubDate>
      <link>https://dev.to/areeburrub/drag-drop-upload-using-javascript-29n9</link>
      <guid>https://dev.to/areeburrub/drag-drop-upload-using-javascript-29n9</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Disclaimer&lt;/em&gt; : In this post I am just showing the drag-drop feature, the upload part is totally depends on you that how you want to do it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You must have seen many sites use drag drop feature to upload files, this feature can be easily implemented by using Javascript event handlers &lt;code&gt;.ondragover&lt;/code&gt;, &lt;code&gt;.ondragleave&lt;/code&gt; and &lt;code&gt;.ondrop&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/areeburrub/embed/KKWveaB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So, fist we need to make a drag-drop-area where files can be dropped. I have used a very general design you can use your creative designs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dragdroparea-contains-what"&gt;
  &lt;/a&gt;
  drag-drop-area contains what?
&lt;/h3&gt;

&lt;p&gt;The drag drop area should have a &lt;code&gt;&amp;lt;input type="file" hidden&amp;gt;&lt;/code&gt; and a &lt;code&gt;&amp;lt;button&amp;gt;Browse Image&amp;lt;/button&amp;gt;&lt;/code&gt;, keep the file-input hidden so that it doesn't interfere in the design and the button will be visible to use the general file select feature.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#designing-the-dragdroparea"&gt;
  &lt;/a&gt;
  Designing the drag-drop-area?
&lt;/h3&gt;

&lt;p&gt;There will be 3 design for each event " &lt;code&gt;.ondragover&lt;/code&gt;, &lt;code&gt;.ondragleave&lt;/code&gt; and &lt;code&gt;.ondrop&lt;/code&gt; ". &lt;br&gt;
The drag leave will be a simple one which will be the initial design.&lt;br&gt;
The drag over design will be activated when someone drag over the area.&lt;br&gt;
The drop design will be depending on what you are making upload, like here I am uploading images so a preview of image is shown if you are working with documents you can show filenames with default icons.&lt;br&gt;
Each design will be contained in a class and classes will be added and removed on events using java script.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#javascript-works"&gt;
  &lt;/a&gt;
  Javascript works
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First get all the DOM elements in javascript using &lt;code&gt;document.querySelector("");&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then, `let file;' be a variable this will store our file data&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then, create a function which will check button press and file change and will work when someone just use the select file button instead of drag drop&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then create three functions with &lt;code&gt;.ondragover&lt;/code&gt;, &lt;code&gt;.ondragleave&lt;/code&gt; and &lt;code&gt;.ondrop&lt;/code&gt; and change the classList accordingly, also use preventDefault(); to prevent the page to open the image or file in browser&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*The on drop event have a object called &lt;code&gt;dataTransfer&lt;/code&gt; inside this object you can access files to select the first file write &lt;code&gt;event.dataTransfer.files[0];&lt;/code&gt; and equal the file variable to it &lt;code&gt;file = event.dataTransfer.files[0];&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;*Here, I am creating a &lt;code&gt;showImage()&lt;/code&gt; function you can do what ever you want with the file.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#to-get-a-proper-idea-see-the-codepen-snippet"&gt;
  &lt;/a&gt;
  To get a proper Idea see the codepen snippet
&lt;/h2&gt;

&lt;p&gt;You can also read about &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragover"&gt;.ondragover&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragleave"&gt;.ondragleave&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondrop"&gt;.ondrop&lt;/a&gt; on MDN docs&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#also-read"&gt;
  &lt;/a&gt;
  Also Read:
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/areeburrub" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jNgdxQJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7krZbAtB--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/417828/2ba4e761-d6cf-4aaf-8e1a-0c3e46af5be0.jpg" alt="areeburrub image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/areeburrub/hide-navbar-as-scroll-down-in-less-than-10-lines-of-javascript-1i00" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Hide NavBar as Scroll down, in less than 10 lines of javascript;&lt;/h2&gt;
      &lt;h3&gt;Areeb ur Rub ・ May 24 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#follow-me"&gt;
  &lt;/a&gt;
  follow me:
&lt;/h3&gt;


&lt;div class="ltag__user ltag__user__id__417828"&gt;
  
    .ltag__user__id__417828 .follow-action-button {
      background-color: #000000 !important;
      color: #ffffff !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/areeburrub" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jNgdxQJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7krZbAtB--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/417828/2ba4e761-d6cf-4aaf-8e1a-0c3e46af5be0.jpg" alt="areeburrub image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/areeburrub"&gt;Areeb ur Rub&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/areeburrub"&gt;Hey, This is Areeb and I am a Hobbist and like to do some innovative works, I Learn things pretty quick if I even have a bit interest in it.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>coding</category>
    </item>
    <item>
      <title>10 JavaScript Animation Libraries</title>
      <author>Vikram Aditya</author>
      <pubDate>Thu, 27 May 2021 16:56:26 +0000</pubDate>
      <link>https://dev.to/square/10-javascript-animation-libraries-1mf0</link>
      <guid>https://dev.to/square/10-javascript-animation-libraries-1mf0</guid>
      <description>&lt;p&gt;After some research, I’ve gathered 10 of the finest libraries around to use in your app. I’ve also added a few more, mostly unmaintained, useful libraries.&lt;/p&gt;

&lt;p&gt;When building your UI with components, use Bit (GitHub) to easily share and reuse components between your applications. It saves you time, and lets your team share components to build faster together. Give it a try, it’s free.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#join-thevikcode-newletter-get-daily-which-will-not-be-avaible-here-httpsthevikcodesubstackcom"&gt;
  &lt;/a&gt;
  JOIN THEVIKCODE NEWLETTER ( GET DAILY WHICH WILL NOT BE AVAIBLE HERE ) - &lt;a href="https://thevikcode.substack.com/"&gt;https://thevikcode.substack.com/&lt;/a&gt;
&lt;/h6&gt;

&lt;h4&gt;
  &lt;a href="#1-threejs"&gt;
  &lt;/a&gt;
  1. Three.js
&lt;/h4&gt;

&lt;p&gt;At over 43K stars, this popular library is a great way to create 3D animations on the browser, using WebGL in an intuitive way. Providing canvas, svg, CSS3D and WebGL renderers, this library lets us create rich interactive experiences across devices and browsers. First introduced at April 2010, the library is still being developed by nearly 1,000 contributors.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-animejs"&gt;
  &lt;/a&gt;
  2. Anime.js
&lt;/h4&gt;

&lt;p&gt;At over 20K stars, Anime is a JavaScript animation library that works with CSS Properties, individual CSS transforms, SVG or any DOM attributes, and JavaScript Objects. This library lets you chain multiple animation properties, synchronize multiple instances together, create timelines and more.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-mojs"&gt;
  &lt;/a&gt;
  3. Mo.js
&lt;/h4&gt;

&lt;p&gt;At 14K stars, this library is a motion graphics toolbelt for the web, with simple declarative APIs, cross-device compatibility and over 1500 unit-tests. You can move things around the DOME or SVG DOME or create unique mo.js objects. Although documentation is somewhat scarce, examples are plentiful and here’s an introduction at CSS tricks.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-velocity"&gt;
  &lt;/a&gt;
  4. Velocity
&lt;/h4&gt;

&lt;p&gt;At 15K stars, Velocity is a fast Javascript animation engine with the same API as jQuery’s $.animate(). It features color animation, transforms, loops, easings, SVG support, and scrolling. Here’s a breakdown of Velocity’s high performance engine, and here’s an intro to SVG animation using the library.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-popmotion"&gt;
  &lt;/a&gt;
  5. Popmotion
&lt;/h4&gt;

&lt;p&gt;At 14K stars, this functional and reactive animation library weighs only 11kb. It allows developers to create animations and interactions from actions, which are streams of values that can be started and stopped, and created with CSS, SVG, React, three.js and any API that accepts a number as an input.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-vivus"&gt;
  &lt;/a&gt;
  6. Vivus
&lt;/h4&gt;

&lt;p&gt;At over 10K stars, Vivus is a zero-dependencies JavaScript class that lets you animate SVGs, giving them the appearance of being drawn. You can use one of many available animations, or create custom script to draw you SVG. Check out Vivus-instant to get a live example, hands-on.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#7-greensock-js"&gt;
  &lt;/a&gt;
  7. GreenSock JS
&lt;/h4&gt;

&lt;p&gt;GSAP is a JavaScript library for creating high-performance, zero dependencies, cross-browser animations which claims to be used in over 4 million websites. GSAP is flexible and works with React, Vue, Angular and vanilla JS. GSDevtools can also help dubug animations built using GSAP.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#8-scroll-reveal"&gt;
  &lt;/a&gt;
  8. Scroll Reveal
&lt;/h4&gt;

&lt;p&gt;With 15K stars and zero dependencies, this library provides easy scroll animations for web and mobile browsers, to reveal things on-scroll in an animated way. It supports multiple neat types of effects, and even lets you define animations using natural language.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#9-hover-css"&gt;
  &lt;/a&gt;
  9. Hover (CSS)
&lt;/h4&gt;

&lt;p&gt;Well, this is a CSS library. At 20K stars, Hover provides acollection of CSS3 powered hover effects to be applied to links, buttons, logos, SVG, featured images and more, available in CSS, Sass, and LESS. You can copy and paste the effect you’d like to use in your own stylesheet or reference the stylesheet.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#10-kutejs"&gt;
  &lt;/a&gt;
  10. Kute.js
&lt;/h4&gt;

&lt;p&gt;A fully fledged native JavaScript animation engine with essential features for cross-browser animations. The focus is code quality, flexibility, performance and size (core engine is 17k min and 5.5k gzipped)- here’s a demo. The library is also extendable so you can add your own features.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Why to choose VS Code?</title>
      <author>Shruti Sharma</author>
      <pubDate>Thu, 27 May 2021 16:44:01 +0000</pubDate>
      <link>https://dev.to/shruti2303/why-to-choose-vs-code-47ph</link>
      <guid>https://dev.to/shruti2303/why-to-choose-vs-code-47ph</guid>
      <description>&lt;h3&gt;
  &lt;a href="#in-this-post-we-will-be-taking-up-the-most-important-question-which-generally-pops-up-in-the-minds-of-most-of-the-beginners-who-want-to-ace-in-programming-or-development-so-mates-vs-code-can-be-your-pal-in-this-journey"&gt;
  &lt;/a&gt;
  In this post we will be taking up the most important question which generally pops up in the minds of most of the beginners who want to ace in programming or development. So mates, VS Code can be your pal in this journey.
&lt;/h3&gt;




&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-what-is-visual-studio-code"&gt;
  &lt;/a&gt;
  1. What is Visual Studio Code?
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#2-what-are-the-features-of-vs-code"&gt;
  &lt;/a&gt;
  2. What are the features of VS Code?
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#3-what-are-the-advantages-of-using-vs-code"&gt;
  &lt;/a&gt;
  3. What are the advantages of using VS Code?
&lt;/h4&gt;




&lt;h2&gt;
  &lt;a href="#what-is-visual-studio-code"&gt;
  &lt;/a&gt;
  What is Visual Studio Code?
&lt;/h2&gt;

&lt;p&gt;Visual Studio Code is a freeware source-code editor made by Microsoft for Windows, Linux and macOS and is written in TypeScript, JavaScript, HTML, and CSS .Visual Studio Code was first announced on April 29, 2015, by Microsoft at the 2015 Build conference and in 2019 VS Code was ranked as the most popular developer environment tool by the Stack Overflow 2019 Developer Survey.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-are-the-features-of-vs-code"&gt;
  &lt;/a&gt;
  What are the features of VS Code?
&lt;/h2&gt;

&lt;p&gt;There are various features of VS Code - support for debugging, syntax highlighting, intelligent code completion(IntelliSense), snippets, code refactoring, and embedded Git.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Debugging is a core feature of Visual Studio Code. There are several debugger extensions in the VS Code Marketplace which all the users can use.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Syntax highlighting is a feature of text editors that are used for programming, scripting, or markup languages, such as HTML. The feature displays text, especially source code, in different colors and fonts according to the category of terms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Intelligent Code Completion (IntelliSense)- This feature helps in writing a user-friendly code by completing the code automatically, which speeds up the user's work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Code snippets are templates that make it easier to enter repeating code patterns, such as loops or conditional-statements.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Code refactoring is a process used in the DevOps software development approach that involves editing and cleaning up previously written software code without changing the function of the code at all, also provided by VS Code.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#what-are-the-advantages-of-using-vs-code"&gt;
  &lt;/a&gt;
  What are the advantages of using VS Code?
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#1-the-first-and-the-foremost-advantage-of-vs-code-is-that-it-is-the-most-user-friendly-code-editor-so-far"&gt;
  &lt;/a&gt;
  1. The first and the foremost advantage of VS Code is that it is the most user friendly code editor so far.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#2-crossplatform-support-visual-studio-code-can-work-on-all-the-three-operating-systems-windows-linux-and-mac"&gt;
  &lt;/a&gt;
  2. Cross-platform support : Visual Studio Code can work on all the three operating systems - Windows, Linux and Mac.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#3-lightweight"&gt;
  &lt;/a&gt;
  3. Light-weight
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#4-robust-architecture"&gt;
  &lt;/a&gt;
  4. Robust Architecture
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#5-intellisense"&gt;
  &lt;/a&gt;
  5. Intelli-Sense
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#6-freeware-free-of-cost-probably-the-best-feature-of-all-for-all-the-programmers-out-there-even-more-for-the-organizations"&gt;
  &lt;/a&gt;
  6.  Freeware: Free of Cost- probably the best feature of all for all the programmers out there, even more for the organizations.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#7-many-users-will-use-it-or-might-have-used-it-for-desktop-applications-only-but-it-also-provides-great-tool-support-for-web-technologies-like-html-css-json"&gt;
  &lt;/a&gt;
  7. Many users will use it or might have used it for desktop applications only, but it also provides great tool support for Web Technologies like; HTML, CSS, JSON.
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#these-were-the-key-reasons-of-why-to-choose-vs-code"&gt;
  &lt;/a&gt;
  These were the key reasons of why to choose VS Code.
&lt;/h3&gt;

</description>
      <category>vscode</category>
      <category>programming</category>
      <category>productivity</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Migrating to Cloud Run's Secret Manager Integration from Libraries</title>
      <author>Adam Ross</author>
      <pubDate>Thu, 27 May 2021 16:36:32 +0000</pubDate>
      <link>https://dev.to/googlecloud/migrating-to-cloud-run-s-secret-manager-integration-from-libraries-34o</link>
      <guid>https://dev.to/googlecloud/migrating-to-cloud-run-s-secret-manager-integration-from-libraries-34o</guid>
      <description>&lt;p&gt;Secret Manager is easier to use with Cloud Run since I last wrote about "&lt;a href="https://dev.to/googlecloud/serverless-mysteries-with-secret-manager-libraries-on-google-cloud-3a1p"&gt;serverless mysteries&lt;/a&gt;". At the time of that writing, the best way to use a Secret in Cloud Run was to add code to your service to integrate with the Secret Manager API. Now Cloud Run does that for you!&lt;/p&gt;

&lt;p&gt;In this post we'll migrate the "Loyalty Checker" service from using the &lt;a href="https://cloud.google.com/secret-manager/docs"&gt;Secret Manager&lt;/a&gt; client library to use Cloud Run's direct Secret Manager integration. (As of this writing, the integration is still in preview.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prepare-to-follow-along"&gt;
  &lt;/a&gt;
  Prepare to follow along
&lt;/h2&gt;

&lt;p&gt;If you're still set up from last time, just open &lt;a href="https://console.cloud.google.com/home/dashboard?cloudshell=true"&gt;Cloud Shell&lt;/a&gt; and continue where we left off.&lt;/p&gt;

&lt;p&gt;Otherwise,  please walk through the &lt;a href="https://dev.to/googlecloud/serverless-mysteries-with-secret-manager-libraries-on-google-cloud-3a1p"&gt;last post&lt;/a&gt; then continue here to enjoy the feeling of deleting code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#modify-the-loyalty-checker-code"&gt;
  &lt;/a&gt;
  Modify the Loyalty Checker code
&lt;/h2&gt;

&lt;p&gt;Direct integration with Secret Manager makes the code simpler:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Remove code to initialize the client library&lt;/li&gt;
&lt;li&gt;Remove code to retrieve the secret on the first request&lt;/li&gt;
&lt;li&gt;Rename the &lt;code&gt;SECRET_NAME&lt;/code&gt; variable to &lt;code&gt;SECRET_VALUE&lt;/code&gt;, the service will have direct access to the secret from the environment variable.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After these changes the service has shrunk by 46 lines of code, and no longer has any dependencies on Secret Manager:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#redeploy-the-service"&gt;
  &lt;/a&gt;
  Re-deploy the Service
&lt;/h2&gt;

&lt;p&gt;We'll combine the Secret integration with the new all-in-one deploy command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gcloud beta run deploy loyalty &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--source&lt;/span&gt; &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--remove-env-vars&lt;/span&gt; SECRET_NAME &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--update-secrets&lt;/span&gt; &lt;span class="nv"&gt;SECRET_VALUE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;you-know-who:1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;--source&lt;/code&gt; flag tells gcloud to check for a Dockerfile in the current directory and use Cloud Build under the hood to build a container image without a separate command. (Read more about &lt;a href="https://cloud.google.com/run/docs/deploying-source-code"&gt;deploying from source code&lt;/a&gt; if you're curious about the details.)&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;--remove-env-vars&lt;/code&gt; flag removes the no-longer-needed reference to a secret for our code to load.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;--update-secrets&lt;/code&gt; flag integrates a new secret with the service without disrupting any existing secrets. (Use &lt;code&gt;--set-secrets&lt;/code&gt; to simultaneously remove any the other secrets.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the nice things about Cloud Run's secrets flag is how you can use just the "resource ID" part of the overall resource name. Secrets are normally referenced as "&lt;code&gt;projects/PROJECT_ID/secrets/SECRET_ID/versions/VERSION&lt;/code&gt;" but all you need to reference a secret in the same project is &lt;code&gt;SECRET_ID:VERSION&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#no-iam-update"&gt;
  &lt;/a&gt;
  No IAM Update?!
&lt;/h2&gt;

&lt;p&gt;There's no need to change IAM settings. Last time we set up a dedicated service account and gave it access to the secret. The same configuration works for client libraries or for this direct integration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;If you want to be able to "live refresh" the secret in your service, check out the &lt;a href="https://cloud.google.com/run/docs/configuring/secrets"&gt;documentation to learn how to mount your secrets as a volume&lt;/a&gt;. The environment variable method in this post is configured when an instance is started and is never updated.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All code © Google w/ Apache 2 license&lt;/em&gt;&lt;/p&gt;

</description>
      <category>googlecloud</category>
      <category>serverless</category>
      <category>googlecloudrun</category>
      <category>secretmanager</category>
    </item>
    <item>
      <title>Beware The Missing Foreign Key Index: A Postgres Performance Gotcha</title>
      <author>Josh Branchaud</author>
      <pubDate>Thu, 27 May 2021 16:35:14 +0000</pubDate>
      <link>https://dev.to/jbranchaud/beware-the-missing-foreign-key-index-a-postgres-performance-gotcha-3d5i</link>
      <guid>https://dev.to/jbranchaud/beware-the-missing-foreign-key-index-a-postgres-performance-gotcha-3d5i</guid>
      <description>&lt;p&gt;I got absolutely thrashed by some PostgreSQL performance issues this past week. It was painful. And, it was incredibly instructive. I didn't just solve the problem, I now better understand Postgres. I'm better equipped to diagnose the next performance skirmish that comes my way. And I'm paying the lesson forward with this article.&lt;/p&gt;

&lt;p&gt;Let me give you an idea of how bad it was. I had a query deleting 50k records on one table in ~100ms. That's fast enough for me. I then had a similar query deleting the same number of records from another table that would run for ~30 minutes. 10,000x slower! 😱 That's a nope.&lt;/p&gt;

&lt;p&gt;After diagnosing and addressing the issue, I got that second delete query down to about 1 second. Much better! Toward the end of the post we'll see how to make it even faster than that.&lt;/p&gt;

&lt;p&gt;But before I reconstruct a minimal example that reproduces the problem and get into the details, here is the...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  tl;dr
&lt;/h2&gt;

&lt;p&gt;Foreign keys are essential for enforcing the shape and integrity of our data. Indexes are there to keep queries fast. We can combine the two to start getting the most out of our database.&lt;/p&gt;

&lt;p&gt;I don't tend to think of foreign key constraints as impacting performance. As we are about to see, they do.&lt;/p&gt;

&lt;p&gt;Without that index, we're bound to run into some really sneaky performance gotchas.&lt;/p&gt;

&lt;p&gt;Let's dig in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-minimal-example"&gt;
  &lt;/a&gt;
  A Minimal Example
&lt;/h2&gt;

&lt;p&gt;This minimal example is also a real-world example. Most software systems have users and those users need to be given a variety of roles. These roles help the system determine the access and permissions of each user.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to skip over the example setup, you can jump right to the &lt;a href="#fast-query-slow-query"&gt;details&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-data-model"&gt;
  &lt;/a&gt;
  The Data Model
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t95EKW2v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dh8epqf0buuq2wjxa5ss.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t95EKW2v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dh8epqf0buuq2wjxa5ss.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First is the &lt;code&gt;users&lt;/code&gt; table. It doesn't feature strongly in the example so I'll leave it at the &lt;code&gt;id&lt;/code&gt; column.&lt;/p&gt;

&lt;p&gt;Then we have the &lt;code&gt;roles&lt;/code&gt; table which can contain global roles like &lt;code&gt;admin&lt;/code&gt; and &lt;code&gt;support&lt;/code&gt; as well as roles tied to specific resources like &lt;code&gt;team_owner&lt;/code&gt; and &lt;code&gt;team_collaborator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Creating a relationship between the two is the &lt;code&gt;users_roles&lt;/code&gt; join table. A record in this table tying my &lt;code&gt;user&lt;/code&gt; record to the &lt;code&gt;admin&lt;/code&gt; role would tell the system that I am an admin. Another record in this table tying my &lt;code&gt;user&lt;/code&gt; record to a &lt;code&gt;team_collaborator&lt;/code&gt; role for the Red team would tell you that in addition to being an admin, I am a collaborator of the Red team.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-the-schema"&gt;
  &lt;/a&gt;
  Building The Schema
&lt;/h3&gt;

&lt;p&gt;Here is some SQL that will generate our schema for reproducing the performance issue. The specific of how this works are out of scope for this post. If that interests you, &lt;a href="https://twitter.com/jbrancha"&gt;let me know&lt;/a&gt; and I'll write a follow up.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The full queries are embedded in these code blocks, but you can also check out the code in &lt;a href="https://github.com/jbranchaud/postgres-performance-fkey-indexes"&gt;this repo&lt;/a&gt;.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;bigint&lt;/span&gt; &lt;span class="k"&gt;generated&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="k"&gt;identity&lt;/span&gt; &lt;span class="k"&gt;primary&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;bigint&lt;/span&gt; &lt;span class="k"&gt;generated&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="k"&gt;identity&lt;/span&gt; &lt;span class="k"&gt;primary&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;resource_type&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;resource_id&lt;/span&gt; &lt;span class="nb"&gt;bigint&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="nb"&gt;bigint&lt;/span&gt; &lt;span class="k"&gt;references&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;role_id&lt;/span&gt; &lt;span class="nb"&gt;bigint&lt;/span&gt; &lt;span class="k"&gt;references&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I put this in a file called &lt;code&gt;schema.sql&lt;/code&gt;. From a &lt;code&gt;psql&lt;/code&gt; session I connect to an empty database where I can safely experiment. I then tell &lt;code&gt;psql&lt;/code&gt; to execute the script which will create these three tables and their sequences.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;sql&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;605&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;615&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;141&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;099&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;
               &lt;span class="n"&gt;List&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;relations&lt;/span&gt;
 &lt;span class="k"&gt;Schema&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;Name&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="k"&gt;Type&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="k"&gt;Owner&lt;/span&gt;
&lt;span class="c1"&gt;--------+--------------+----------+------------&lt;/span&gt;
 &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;jbranchaud&lt;/span&gt;
 &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;roles_id_seq&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;sequence&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;jbranchaud&lt;/span&gt;
 &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;jbranchaud&lt;/span&gt;
 &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;users_id_seq&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;sequence&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;jbranchaud&lt;/span&gt;
 &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;jbranchaud&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#generating-some-data"&gt;
  &lt;/a&gt;
  Generating Some Data
&lt;/h3&gt;

&lt;p&gt;Let's fill these tables with some data with help from the &lt;a href="https://www.postgresql.org/docs/current/functions-srf.html"&gt;&lt;code&gt;generate_series&lt;/code&gt; function&lt;/a&gt;. Again, I won't go into specifics here. &lt;a href="https://twitter.com/jbrancha"&gt;Drop a note&lt;/a&gt; if you're interested in a follow up post on this part.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- create 50,000 users&lt;/span&gt;
&lt;span class="k"&gt;insert&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;
&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;generate_series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;-- create 100,000 roles&lt;/span&gt;
&lt;span class="k"&gt;insert&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;resource_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;resource_id&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;select&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'admin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'support'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'member'&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
  &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;null&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;generate_series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;insert&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;resource_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;resource_id&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;select&lt;/span&gt;
  &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;'Team'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;generate_series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;-- create 500,000 connections between users and roles&lt;/span&gt;
&lt;span class="c1"&gt;-- start with 225,000 random global roles&lt;/span&gt;
&lt;span class="k"&gt;insert&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;role_id&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;select&lt;/span&gt;
  &lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;generate_series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;225000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;-- then 50,000 for the team collaborator role&lt;/span&gt;
&lt;span class="k"&gt;insert&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;role_id&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;select&lt;/span&gt;
  &lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;generate_series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;-- then another 225,000 random global roles&lt;/span&gt;
&lt;span class="k"&gt;insert&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;role_id&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;select&lt;/span&gt;
  &lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;generate_series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;225000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates 50,000 users and 100,000 roles. It then creates 500,000 connections between them in the &lt;code&gt;users_roles&lt;/code&gt; join table, with 50,000 of those connection specifically for the &lt;code&gt;team_collaborator&lt;/code&gt; role.&lt;/p&gt;

&lt;p&gt;With all the data in place, let's find some specific data and delete it. This is where we'll see a reasonable query and a drastically slower query.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fast-query-slow-query"&gt;
  &lt;/a&gt;
  Fast Query, Slow Query &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;In the actual production data set I was dealing with, I had a bunch of data that I needed to clear out of the &lt;code&gt;roles&lt;/code&gt; table. It turned out to be about 50k records. Because of the foreign key relationship, I first had to clear dependent records out of the &lt;code&gt;users_roles&lt;/code&gt; table.&lt;/p&gt;

&lt;p&gt;The following might feel a bit contrived, but it is based on that real scenario.&lt;/p&gt;

&lt;p&gt;Here are the 50k roles that we are targeting for deletion.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
  &lt;span class="k"&gt;join&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;
    &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;role_id&lt;/span&gt;
  &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="k"&gt;count&lt;/span&gt;
&lt;span class="c1"&gt;-------&lt;/span&gt;
 &lt;span class="mi"&gt;50000&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why are we going to be deleting all the &lt;code&gt;team_collaborator&lt;/code&gt; related data? Because that gives us about 50k rows. Like I said, a bit contrived. Nevertheless, we are going to learn some performance things from this.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-quick-delete"&gt;
  &lt;/a&gt;
  The Quick Delete
&lt;/h3&gt;

&lt;p&gt;Let's delete the dependent records from &lt;code&gt;users_roles&lt;/code&gt; first.&lt;/p&gt;

&lt;p&gt;Anytime I'm about to modify or delete data, I like to open a transaction. This makes it easy to safely rollback the changes if anything looks off. That is done with a &lt;code&gt;begin&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;
  &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
  &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;role_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
    &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;116&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;313&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That looks good. That query appears to have handled the 50k records from &lt;code&gt;users_roles&lt;/code&gt; that I wanted deleted. Because I'm in a transaction, I can always dig into the data with a few select queries to be sure. And it was fast enough, clocking in at ~100ms in this instance.&lt;/p&gt;

&lt;p&gt;I'm not ready to commit this transaction yet. Next I want to attempt to delete the &lt;code&gt;roles&lt;/code&gt; records.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-slow-delete"&gt;
  &lt;/a&gt;
  The Slow Delete
&lt;/h3&gt;

&lt;p&gt;With all the foreign key dependencies taken care of, we are clear to get on with our main goal, deleting the &lt;code&gt;roles&lt;/code&gt; records.&lt;/p&gt;

&lt;p&gt;This query is even simpler than the previous. Typing it out, I was certain it would run just as quickly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
  &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;-- ... keep waiting ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For real though, if you are following along at home, don't hold your breath. This is going to take more or less 30 minutes depending on the specs of your machine.&lt;/p&gt;

&lt;p&gt;What gives?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#can-we-explain-this"&gt;
  &lt;/a&gt;
  Can We Explain This?
&lt;/h3&gt;

&lt;p&gt;This query isn't all that different than the previous one. It is targeting the same number of rows. What could account for the slow down?&lt;/p&gt;

&lt;p&gt;Let's start by taking a look at the &lt;code&gt;explain&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;explain&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
  &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                            &lt;span class="n"&gt;QUERY&lt;/span&gt; &lt;span class="n"&gt;PLAN&lt;/span&gt;
&lt;span class="c1"&gt;-----------------------------------------------------------------------&lt;/span&gt;
 &lt;span class="k"&gt;Delete&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;1937&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;49990&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;  &lt;span class="n"&gt;Seq&lt;/span&gt; &lt;span class="n"&gt;Scan&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;1937&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;49990&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="n"&gt;Filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)::&lt;/span&gt;&lt;span class="nb"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There isn't a lot going on in this one. The &lt;code&gt;seq scan&lt;/code&gt; stands out to me. This means the query planner expects the query will have to look at every row sequentially. For a mere ~50k rows that doesn't seem like it should be an issue.&lt;/p&gt;

&lt;p&gt;By contrast, here is the &lt;code&gt;explain&lt;/code&gt; for the previous query.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;explain&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;
  &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
  &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;role_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
    &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                                   &lt;span class="n"&gt;QUERY&lt;/span&gt; &lt;span class="n"&gt;PLAN&lt;/span&gt;
&lt;span class="c1"&gt;-------------------------------------------------------------------------------------&lt;/span&gt;
 &lt;span class="k"&gt;Delete&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2561&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;11577&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;249950&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;  &lt;span class="n"&gt;Hash&lt;/span&gt; &lt;span class="k"&gt;Join&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2561&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;11577&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;249950&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="n"&gt;Hash&lt;/span&gt; &lt;span class="n"&gt;Cond&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;users_roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;role_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;  &lt;span class="n"&gt;Seq&lt;/span&gt; &lt;span class="n"&gt;Scan&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;7703&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500000&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;  &lt;span class="n"&gt;Hash&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1937&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;1937&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;49990&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;  &lt;span class="n"&gt;Seq&lt;/span&gt; &lt;span class="n"&gt;Scan&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;1937&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;49990&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                     &lt;span class="n"&gt;Filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)::&lt;/span&gt;&lt;span class="nb"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This one is more involved. I'm noticing that there is a &lt;code&gt;seq scan&lt;/code&gt; of &lt;code&gt;users_roles&lt;/code&gt; (500k rows) and nested under that is another &lt;code&gt;seq scan&lt;/code&gt; of &lt;code&gt;roles&lt;/code&gt; (~50k). In terms of predicted work, this one has a &lt;strong&gt;ton&lt;/strong&gt; more to do, yet it finished in 100ms. Computers can be fast.&lt;/p&gt;

&lt;p&gt;Despite that comparison, we know from running the queries that the first (simpler) one is going to take much longer than the second one. Some back of the napkin math says the simpler query plan for deleting from &lt;code&gt;roles&lt;/code&gt; is looking to take 10,000x the amount of time of the second query 😱.&lt;/p&gt;

&lt;p&gt;So that's the second scream emoji in this post—we've got to figure out what is going on.&lt;/p&gt;

&lt;p&gt;What's the deal with this "simple" delete query?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-mystery-uncovered"&gt;
  &lt;/a&gt;
  The Mystery Uncovered
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
  &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The issue with this two-line, 50k row query doesn't have anything to do with the &lt;code&gt;roles&lt;/code&gt; table itself. Instead, it has to do with the relationship that the &lt;code&gt;roles&lt;/code&gt; table has to other tables.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;users_roles&lt;/code&gt; table &lt;em&gt;depends&lt;/em&gt; on the &lt;code&gt;roles&lt;/code&gt; table—specifically, on its &lt;code&gt;id&lt;/code&gt; column. This dependency on &lt;code&gt;roles.id&lt;/code&gt; is through the foreign key constraint on its own &lt;code&gt;role_id&lt;/code&gt; column.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-foreign-key-is-causing-this"&gt;
  &lt;/a&gt;
  The foreign key is causing this
&lt;/h3&gt;

&lt;p&gt;Kinda.&lt;/p&gt;

&lt;p&gt;To demonstrate that the foreign key constraint is at the center of this performance issue, let's start by removing the foreign key constraint.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;
  &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
  &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;role_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
    &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;267&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;alter&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;
  &lt;span class="k"&gt;drop&lt;/span&gt; &lt;span class="k"&gt;constraint&lt;/span&gt; &lt;span class="n"&gt;users_roles_role_id_fkey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;561&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
  &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;rollback&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the foreign key constraint out of the picture, the delete is quite speedy. Notice I immediately rolled these changes back. This was to highlight the impact of the constraint. This isn't the solution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-the-foreign-key-constraint"&gt;
  &lt;/a&gt;
  Keep the Foreign Key Constraint
&lt;/h3&gt;

&lt;p&gt;Foreign key constraints are essential to solid schema design, and they are one of my favorite features of Postgres. They help ensure that the data relationships between two tables are always intact (that's called referential integrity). Because of this assurance, I never have to worry that data is going to be inadvertently orphaned.&lt;/p&gt;

&lt;p&gt;How is the foreign key constraint having such an impact on performance?&lt;/p&gt;

&lt;p&gt;For every single row you tell Postgres to delete from the &lt;code&gt;roles&lt;/code&gt; table, it is going to first check with all dependent tables to make sure it is okay to do that. If the foreign key value isn't being used by any records in the associated table(s), then the delete can proceed. If even just one record depends on that value, the foreign key constraint is going to flag that and abort the delete action.&lt;/p&gt;

&lt;p&gt;So, even though we preemptively deleted all the related data from &lt;code&gt;users_roles&lt;/code&gt;, Postgres still must check at the moment of the delete if that is still true.&lt;/p&gt;

&lt;p&gt;Postgres goes through the &lt;code&gt;users_roles&lt;/code&gt; table and does a sequential scan checking every single record. For each &lt;code&gt;roles&lt;/code&gt; record, Postgres is going to check 500,000 &lt;code&gt;users_roles&lt;/code&gt; records.&lt;/p&gt;

&lt;p&gt;And &lt;em&gt;there&lt;/em&gt; is the root of the problem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-query-planner-needs-more-info"&gt;
  &lt;/a&gt;
  The Query Planner Needs More Info
&lt;/h3&gt;

&lt;p&gt;Postgres is going to use the information at its disposal to verify that the foreign key constraint. As is, it doesn't have enough info to do anything better than look at every single row. If Postgres had an index though, it would have the info necessary to do a &lt;strong&gt;lot&lt;/strong&gt; less work.&lt;/p&gt;

&lt;p&gt;A database index is roughly like the organizational system that a library uses. Books are categorized and then they have a placement relative to other books in their same category. Using this system, you can quickly navigate to where a book should be.&lt;/p&gt;

&lt;p&gt;Not having an index on &lt;code&gt;users_roles.role_id&lt;/code&gt; is kinda like walking into a library without an organizational system, you have to start on one end and go book by book, perhaps through tens of thousands of books, until you find what you're looking for.&lt;/p&gt;

&lt;p&gt;We can cut our &lt;code&gt;delete&lt;/code&gt; query down to around &lt;em&gt;1 second&lt;/em&gt; by adding an index to &lt;code&gt;users_roles.role_id&lt;/code&gt;. The index provides Postgres with the info it needs to quickly shortcut its way to any dependent rows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;index&lt;/span&gt; &lt;span class="n"&gt;role_id_index&lt;/span&gt;
  &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;role_id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;342&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;591&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This adds an index to the &lt;code&gt;users_roles.role_id&lt;/code&gt; column. It is a &lt;a href="https://www.postgresql.org/docs/current/indexes-types.html"&gt;B-Tree index&lt;/a&gt;. "The PostgreSQL query planner will consider using a B-tree index whenever an indexed column is involved in a comparison" (with operators like &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, etc.).&lt;/p&gt;

&lt;p&gt;With this index, we'll tend to get faster queries, especially with this delete. One tradeoff is that the index will take a little disk space. Since Postgres automatically updates the index on each write to the indexed column, that adds a teeny tiny bit of write time. Both of these tradeoffs are well worth it in the vast majority of cases.&lt;/p&gt;

&lt;p&gt;Let's see how the index performs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deleting-faster"&gt;
  &lt;/a&gt;
  Deleting Faster
&lt;/h2&gt;

&lt;p&gt;With that index in place, let's give both of our delete queries another try.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;
  &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
  &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;role_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
    &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;732&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
  &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;590&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;668&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the blink of an eye it is done. The second delete query went from around 30 minutes to under 600ms. That's a massive difference. That's what indexes can do for us.&lt;/p&gt;

&lt;p&gt;That brings me back to the &lt;strong&gt;tl;dr&lt;/strong&gt; of this post.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Foreign keys are essential for enforcing the shape and integrity of our data. Indexes are there to keep queries fast. We can combine the two to start getting the most out of our database.&lt;/p&gt;

&lt;p&gt;Without that index, you're bound to run into some really sneaky performance gotchas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But can we go even faster?!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deleting-even-faster"&gt;
  &lt;/a&gt;
  Deleting Even Faster
&lt;/h2&gt;

&lt;p&gt;Since we are in a transaction and we are doing a ton of deletes, what if we tell Postgres to hold off on verifying the foreign key constraint until we're done with the deletes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;alter&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;
  &lt;span class="k"&gt;alter&lt;/span&gt; &lt;span class="k"&gt;constraint&lt;/span&gt; &lt;span class="n"&gt;users_roles_role_id_fkey&lt;/span&gt;
    &lt;span class="k"&gt;initially&lt;/span&gt; &lt;span class="k"&gt;deferred&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;455&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;
  &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
  &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;users_roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;role_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
    &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;114&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;574&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;
  &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'team_collaborator'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt;
&lt;span class="nb"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;433&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whoa, that made it another 10x faster, coming in at ~68ms.&lt;/p&gt;

&lt;p&gt;Instead of checking the foreign key constraint 50,000 times, even with the index, it can check it once at the end. Zoom!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;After running into this incredibly slow delete query, I went on quite a journey trying to understand what was causing the performance hit. There is a lot to be learned by being willing to really dig into a hard problem and try to understand, even if you can only understand it a little bit at a time. I came out the other end better for it. And I hope you are at the other end of this article better for having read it.&lt;/p&gt;

&lt;p&gt;Foreign keys help ensure the integrity of your data. Indexes help keep your queries fast. Combine the two to really take advantage of the speed and power of PostgreSQL.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you enjoy my writing, consider &lt;a href="https://crafty-builder-6996.ck.page/e169c61186"&gt;joining my newsletter&lt;/a&gt; or following me on &lt;a href="https://twitter.com/jbrancha"&gt;twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;An improvement to this schema would be to add an &lt;a href="https://github.com/jbranchaud/til/blob/master/postgres/add-on-delete-cascade-to-foreign-key-constraint.md"&gt;&lt;code&gt;on delete cascade&lt;/code&gt; directive&lt;/a&gt; to the &lt;code&gt;role_id&lt;/code&gt; foreign key constraint. This would mean we could go right to deleting the &lt;code&gt;roles&lt;/code&gt; record and the corresponding &lt;code&gt;users_roles&lt;/code&gt; records would be automatically removed. This would still suffer from the same performance issues.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Postgres allows you to &lt;a href="https://github.com/jbranchaud/til/blob/master/postgres/create-an-index-without-locking-the-table.md"&gt;add indexes concurrently&lt;/a&gt; to avoid locking writes to the entire table. Though adding an index is a pretty quick action, it is a good rule of thumb to add them concurrently. This is especially true when dealing with live tables in a production environment. I chose not to add our index concurrently in this article to avoid tossing one more concept into the mix.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#acknowledgements"&gt;
  &lt;/a&gt;
  Acknowledgements
&lt;/h3&gt;

&lt;p&gt;A big thanks to several people who read through and provided feedback on earlier drafts of this post. They are awesome. Check out their stuff.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/simonw"&gt;Simon Willison&lt;/a&gt;, who is doing awesome work on &lt;a href="https://github.com/simonw/datasette"&gt;datasette&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/christoomey"&gt;Chris Toomey&lt;/a&gt;, who does &lt;a href="https://ctoomey.com/writing"&gt;fantastic write ups&lt;/a&gt; on Vim and Postgres&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/JordanALewis"&gt;Jordan Lewis&lt;/a&gt;, who has &lt;a href="https://www.twitch.tv/large__data__bank"&gt;an engaging weekly stream&lt;/a&gt; on Go and databases&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dillonhafer.com/about"&gt;Dillon Hafer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/RozenMD"&gt;Max Rozen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@ryanjohnstonco?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Ryan Johnston&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/slow?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>sql</category>
      <category>postgres</category>
      <category>database</category>
      <category>performance</category>
    </item>
    <item>
      <title>Reflections Of A CodeCollab Fellow</title>
      <author>Timi Bello</author>
      <pubDate>Thu, 27 May 2021 16:26:44 +0000</pubDate>
      <link>https://dev.to/ourtimefortech/reflections-of-a-codecollab-fellow-5hag</link>
      <guid>https://dev.to/ourtimefortech/reflections-of-a-codecollab-fellow-5hag</guid>
      <description>&lt;h1&gt;
  &lt;a href="#its-demo-day"&gt;
  &lt;/a&gt;
  It’s Demo Day!🎉
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Generally&lt;/em&gt;, I’m grateful to be a fellow in CodeCollab Cycle 2.&lt;br&gt;
We had two weeks of Testing the App before Demo week and it was such a learning experience for me. It gave me a deeper understanding of its importance and how it can make you a better dev. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;In Our case&lt;/em&gt;, we did the testing after building the app so we had to test the methods we already had in place. Writing Tests helped us to see the faults in the App and minimize the breaking changes in the app(as that’s what they are for, isn’t it?😁). One of the major things, writing tests helped me understand is that the final goal isn’t to make the test pass but to make sure the test is testing what you’re meant to test. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;I also appreciate how writing tests is very encapsulated&lt;/em&gt;, in the sense that writing tests for one controller(e.g shifts), doesn’t affect another controller(e.g workers). Testing is definitely something I look forward to doing more. &lt;br&gt;
I also learned how it’s beneficial to communicate Coding Fatigue effectively when you are experiencing it. Coding Fatigue allows you to miss out on your little mistakes and hence, makes you stuck. It’s real and a normal thing that happens to devs but it becomes a problem when it’s not properly communicated with your team members. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It’s okay to be tired. It doesn’t mean you’ve lost your competence. ~Arit&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Overall&lt;/strong&gt;, I’m glad at how much my teammates and I have grown in our professional team communication,  collaboration, and technical skills in the past 12 weeks. This Cycle is gonna be a wrap at Demo Day and it’s one that gives me mixed feelings. 😅&lt;br&gt;
Thank you for the honor of reading and staying through on the CodeCollab Cycle 2 journey with this blog!❤️&lt;/p&gt;

</description>
      <category>womenintech</category>
      <category>testing</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Updated Dashboards - Soft UI, AdminKit, Volt Bootstrap 5</title>
      <author>Sm0ke</author>
      <pubDate>Thu, 27 May 2021 16:18:57 +0000</pubDate>
      <link>https://dev.to/sm0ke/updated-dashboards-soft-ui-adminkit-volt-bootstrap-5-4h8f</link>
      <guid>https://dev.to/sm0ke/updated-dashboards-soft-ui-adminkit-volt-bootstrap-5-4h8f</guid>
      <description>&lt;p&gt;Hello Coders,&lt;/p&gt;

&lt;p&gt;This article is a curated list with popular &lt;a href="https://www.admin-dashboards.com/admin-dashboards-soft-ui-volt-adminkit/"&gt;Admin Dashboards&lt;/a&gt; recently updated by their vendors. The open-source ecosystem comes with many great products that sometimes become zombie projects despite the initial traction and potential. This kind of content, published at the end of each month, is an attempt to provide visibility to the most updated &lt;strong&gt;dashboards&lt;/strong&gt; in the industry. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;🔥 &lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard"&gt;Soft UI Dashboard&lt;/a&gt; - Bootstrap 5 Dashboard&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://adminkit.io/"&gt;AdminKit&lt;/a&gt; - Open-Source Bootstrap 5 Dashboard&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://windmillui.com/dashboard-html"&gt;Windmill&lt;/a&gt; - Open-source Tailwind Design&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://github.com/codedthemes/berry-free-react-admin-template"&gt;Berry React&lt;/a&gt; - Free React Dashboard
&lt;/li&gt;
&lt;li&gt;(Paid) &lt;a href="https://github.com/codedthemes/berry-free-react-admin-template"&gt;Volt Dashboard PRO&lt;/a&gt; - Bootstrap 5 Dashboard&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#soft-ui-dashboard"&gt;
  &lt;/a&gt;
  🔥 Soft UI Dashboard
&lt;/h2&gt;

&lt;p&gt;This product is styled on top of &lt;strong&gt;Soft UI&lt;/strong&gt;, probably the most innovative design provided by Creative-Tim. Designed for those who like bold elements and beautiful websites, Soft UI Dashboard is made of hundred of elements, designed blocks and fully coded pages.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Update&lt;/strong&gt;: Use Bootstrap v5.0.0, Bug fixes&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.creative-tim.com/product/soft-ui-dashboard"&gt;Soft UI Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demos.creative-tim.com/soft-ui-dashboard/pages/dashboard.html"&gt;Soft UI Dashboard&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CGcn6iO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufgosw2mquotiaqlcu58.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CGcn6iO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufgosw2mquotiaqlcu58.png" alt="Soft UI Dashboard - recently updated open-source admin dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#adminkit"&gt;
  &lt;/a&gt;
  ✨ AdminKit
&lt;/h2&gt;

&lt;p&gt;A professional Admin &amp;amp; Dashboard template based on Bootstrap 5 that comes with hundreds of UI components, forms, tables, charts, pages and icons. AdminKit does not require jQuery and neither does one of the 3rd party libraries AdminKit is using.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Update&lt;/strong&gt;: Visual changes, added icons, update dependencies&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://adminkit.io/"&gt;AdminKit&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demo-basic.adminkit.io/"&gt;AdminKit&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fn1_nyub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ar8h987j47gtf795ylo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fn1_nyub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ar8h987j47gtf795ylo.png" alt="AdminKit Bootstrap 5 - recently updated open-source admin dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#windmill"&gt;
  &lt;/a&gt;
  ✨ Windmill
&lt;/h2&gt;

&lt;p&gt;A multi theme, completely accessible, with components and pages examples, ready for production dashboard styled with Tailwind CSS. This product has a really nice UI and pre-built pages, also available in React.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://windmillui.com/dashboard-html"&gt;Windmill&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://windmill-dashboard.vercel.app/index.html"&gt;Windmill&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--049E0w1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ehucd0a5rn12isksfqf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--049E0w1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ehucd0a5rn12isksfqf.png" alt="Windmill Tailwind CSS - recently updated open-source admin dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#berry-react"&gt;
  &lt;/a&gt;
  ✨ Berry React
&lt;/h2&gt;

&lt;p&gt;Berry is a creative yet minimal free react admin template build using the Material-UI. It is meant to be the best User Experience with highly customizable. It is a complete game-changer &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboard&lt;/a&gt; Template with easy and intuitive responsive design as on retina screens or laptops.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Update&lt;/strong&gt;: multiple fixes, visual changes&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://berrydashboard.io/"&gt;Berry React&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/codedthemes/berry-free-react-admin-template"&gt;Berry React&lt;/a&gt; - source repository&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JcviT7ax--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfixxmyl8cxabjjery5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JcviT7ax--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfixxmyl8cxabjjery5x.png" alt="Berry React - recently updated open-source admin dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;✨ Volt Bootstrap 5 PRO&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Commercial product&lt;/em&gt; - Volt Pro is a premium Bootstrap 5 Admin Dashboard featuring over 800 components, 20 example pages and 10 fully customized plugin written in Vanilla Javascript. Volt Pro comes with 20 example pages including the overview page, kanban drag and drop page, messages, user settings, transactions, calendar, sign in, sign up, and many more pages.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Update&lt;/strong&gt;: migration to latest BS5, Visual Improvements&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://themesberg.com/product/admin-dashboard/volt-premium-bootstrap-5-dashboard"&gt;Volt Bootstrap 5 PRO&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://themesberg.com/product/admin-dashboard/volt-bootstrap-5-dashboard"&gt;Volt Free Version&lt;/a&gt; - product page (&lt;strong&gt;open-source version&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E_cmgElZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6b1ux9g6vh7ck017j77.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E_cmgElZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6b1ux9g6vh7ck017j77.png" alt="Volt PRO Bootstrap 5 - recently updated open-source admin dashboard."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources please access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a curated list | Dev.to&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Free Admin Dashboards&lt;/a&gt; provided by AppSeed &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>bootstrap</category>
      <category>react</category>
      <category>opensource</category>
    </item>
    <item>
      <title>React Native SDK in public beta</title>
      <author>Carol Huang</author>
      <pubDate>Thu, 27 May 2021 16:16:30 +0000</pubDate>
      <link>https://dev.to/carol/react-native-sdk-in-public-beta-58mn</link>
      <guid>https://dev.to/carol/react-native-sdk-in-public-beta-58mn</guid>
      <description>&lt;p&gt;📩 We're sharing our most recent developer digest here on DEV! If you're interested in subscribing to monthly developer updates, &lt;a href="https://go.stripe.global/dev-digest"&gt;sign up here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XRaNCJc4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kwi5h27a7elyignm8iie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XRaNCJc4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kwi5h27a7elyignm8iie.png" alt="divider"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#may-developer-digest"&gt;
  &lt;/a&gt;
  May Developer Digest
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#react-native-sdk-in-public-beta"&gt;
  &lt;/a&gt;
  React Native SDK in public beta
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/stripe/stripe-react-native"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AgsGsjag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1dohfxy8ilzat1owaf0.png" alt="React Native SDK"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The official &lt;a href="https://github.com/stripe/stripe-react-native"&gt;Stripe React Native SDK&lt;/a&gt; is now in public beta to help you build delightful payment experiences in your native Android and iOS apps using React Native.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://stripe.com/docs/payments/accept-a-payment?platform=react-native?utm_medium=earned-email&amp;amp;utm_source=7b3e&amp;amp;utm_campaign=GLOBAL_466c&amp;amp;utm_content=af0f&amp;amp;utm_term=3ae54cadc6ea"&gt;Customizable UI screens and elements&lt;/a&gt; that can be used out-of-the-box to securely collect your users' payment details&lt;/li&gt;
&lt;li&gt;Support for Apple Pay, Google Pay, and local payment methods&lt;/li&gt;
&lt;li&gt;Native 3D Secure authentication to support Strong Customer Authentication&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/stripe/stripe-react-native"&gt;Get started&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stay-updated"&gt;
  &lt;/a&gt;
  Stay updated
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Register for Stripe Sessions:&lt;/strong&gt; Stripe Sessions is our annual conference for payments leaders, founders, and developers. We’ll share details on our future product direction and provide context on some of our most important recent launches. &lt;a href="https://sessions.stripe.com?utm_medium=earned-email&amp;amp;utm_source=7b3e&amp;amp;utm_campaign=GLOBAL_466c&amp;amp;utm_content=af0f&amp;amp;utm_term=3ae54cadc6ea"&gt;Register for free&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Dev community survey:&lt;/strong&gt; How do you prefer interacting with other developers when you have questions about Stripe? Let us know your thoughts and whether you’d like to participate in a pilot program in a &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSdfW6qyTt6Ikxgp7sQZaWeCr2QuFq3-cnBh7wf6KWJP2tL_Rg/viewform"&gt;2-minute survey&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;New prebuilt mobile payments UI:&lt;/strong&gt; This new integration combines all of the steps required to pay—collecting payment details and confirming the payment—into a single sheet that displays on top of your &lt;a href="https://stripe.com/docs/payments/accept-a-payment?platform=ios?utm_medium=earned-email&amp;amp;utm_source=7b3e&amp;amp;utm_campaign=GLOBAL_466c&amp;amp;utm_content=af0f&amp;amp;utm_term=3ae54cadc6ea"&gt;iOS&lt;/a&gt;, &lt;a href="https://stripe.com/docs/payments/accept-a-payment?platform=android?utm_medium=earned-email&amp;amp;utm_source=7b3e&amp;amp;utm_campaign=GLOBAL_466c&amp;amp;utm_content=af0f&amp;amp;utm_term=3ae54cadc6ea"&gt;Android&lt;/a&gt;, or &lt;a href="https://stripe.com/docs/payments/accept-a-payment?platform=react-native?utm_medium=earned-email&amp;amp;utm_source=7b3e&amp;amp;utm_campaign=GLOBAL_466c&amp;amp;utm_content=af0f&amp;amp;utm_term=3ae54cadc6ea"&gt;React Native&lt;/a&gt; app.

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/stripe-samples/firebase-mobile-payments/tree/main/ios-swiftui"&gt;See an example&lt;/a&gt; of how to integrate on iOS using SwiftUI, Firebase Authentication, and Cloud Firestore.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;New Invoice editor:&lt;/strong&gt; Use our new Invoice editor to preview invoices in real time as you customize them. &lt;a href="https://dashboard.stripe.com/login?redirect=%2Finvoices?utm_medium=earned-email&amp;amp;utm_source=7b3e&amp;amp;utm_campaign=GLOBAL_466c&amp;amp;utm_content=af0f&amp;amp;utm_term=3ae54cadc6ea"&gt;Try it out in the Dashboard&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Stripe Tax beta on Checkout&lt;/strong&gt;: Fully automate tax calculation with a single line of code. Contact &lt;a href="//mailto:stripe-tax-beta@stripe.com"&gt;&lt;/a&gt;&lt;a href="mailto:stripe-tax-beta@stripe.com"&gt;stripe-tax-beta@stripe.com&lt;/a&gt; to join the beta.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Simpler subscriptions with Elements:&lt;/strong&gt; You can use the new payment_behavior=default_incomplete value to create a subscription without a payment method attached. &lt;a href="https://stripe.com/docs/billing/subscriptions/elements?utm_medium=earned-email&amp;amp;utm_source=7b3e&amp;amp;utm_campaign=GLOBAL_466c&amp;amp;utm_content=af0f&amp;amp;utm_term=3ae54cadc6ea"&gt;Learn more about the simplified billing flow&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Dashboard enhancements:&lt;/strong&gt; We’ve released updates to the developers section of the Dashboard including error grouping and filtering by type, clearer error messaging, and options for feedback. &lt;a href="http://dashboard.stripe.com/developers?utm_medium=earned-email&amp;amp;utm_source=7b3e&amp;amp;utm_campaign=GLOBAL_466c&amp;amp;utm_content=af0f&amp;amp;utm_term=3ae54cadc6ea"&gt;Check out what’s new&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Android SDK update:&lt;/strong&gt; The latest version of the &lt;a href="https://github.com/stripe/stripe-android"&gt;Stripe Android SDK&lt;/a&gt; (16.5.0) now supports Kotlin coroutines. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#learn"&gt;
  &lt;/a&gt;
  Learn
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLy1nL-pvL2M5naBTFxHkj3TNGFhHkVRSu"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_2XgtOiH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ywa39hum49wxfcxlag3.png" alt="Global payment video series"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Global payment video series&lt;/strong&gt;: We’re working on a &lt;a href="https://www.youtube.com/playlist?list=PLy1nL-pvL2M5naBTFxHkj3TNGFhHkVRSu"&gt;series of videos&lt;/a&gt; that will walk through how to get started accepting payments on Stripe across different local payment methods. We’re starting with wallet and card payments but will be adding more global payment methods in the coming weeks—&lt;a href="https://www.youtube.com/c/StripeDevelopers"&gt;subscribe to get notified of new videos&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The first step for accepting a one-time payment is to create a PaymentIntent on the server. Watch a video in one of our seven officially supported server languages to learn how: &lt;a href="https://youtu.be/079khYtqWPo"&gt;Ruby&lt;/a&gt;, &lt;a href="https://youtu.be/Tgjwx-38Dic"&gt;Python&lt;/a&gt;, &lt;a href="https://youtu.be/BPfpPGl85tk"&gt;PHP&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=WG4ehXSEpz4"&gt;Node.js&lt;/a&gt;, &lt;a href="https://youtu.be/cbsCxLDL4EY"&gt;Go&lt;/a&gt;, &lt;a href="https://youtu.be/-uyXCnPXegE"&gt;Java&lt;/a&gt;, .&lt;a href="https://youtu.be/mqEjRgoZWdo"&gt;NET&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Next you can learn how to confirm the payment on the client using a variety of payment methods: &lt;a href="https://www.youtube.com/playlist?list=PLy1nL-pvL2M4k9nEvcWHZDDTunBYH5qM6"&gt;Cards&lt;/a&gt;, &lt;a href="https://www.youtube.com/playlist?list=PLy1nL-pvL2M40JCLXAxLcJ2V1eGuhqkcb"&gt;Wallets&lt;/a&gt; (like Apple Pay, Google Pay, and Alipay), with more to come soon. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can also start by watching episodes specific to your client-side implementation: &lt;a href="https://youtu.be/0oHjwz-WHcc"&gt;HTML and JavaScript&lt;/a&gt;, &lt;a href="https://youtu.be/IhvtIbfDZJI"&gt;React&lt;/a&gt;, &lt;a href="https://youtu.be/8sXgvDWVsuI"&gt;iOS&lt;/a&gt;, &lt;a href="https://youtu.be/fhgqeeQczOc"&gt;Android&lt;/a&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Developer Office Hours&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=vKptxR9zdCQ"&gt;Learn about Stripe Issuing&lt;/a&gt;, which lets you send payment cards to your users to pay for goods and services. We cover how to create cardholders and their cards and walk through a webhook implementation for approving or declining authorization requests in real time. &lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vKptxR9zdCQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Technical documentation tips&lt;/strong&gt;: Stephanie Blotner (Technical Writer, Uber) and David Nunez (Docs Manager, Stripe) discuss &lt;a href="https://www.youtube.com/watch?v=-J7O4nVu_Ug"&gt;how early-stage startups should think about technical documentation&lt;/a&gt;. &lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-J7O4nVu_Ug"&gt;
&lt;/iframe&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CLI protip&lt;/strong&gt; 💡: Need to regularly test a common sequence of API requests? You can set up a &lt;a href="https://stripe.com/docs/cli/fixtures"&gt;fixture&lt;/a&gt; in the &lt;a href="https://stripe.com/docs/stripe-cli"&gt;Stripe CLI&lt;/a&gt; to generate test data, such as a new customer with multiple charges.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Laravel Cashier Stripe v12.13 added support for &lt;a href="https://laravel-news.com/cashier-stripe-tax-id"&gt;managing customer tax IDs&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=XnjA8PlwFIc"&gt;Stripe integration for eCommerce app in React Native &amp;amp; AWS Amplify&lt;/a&gt; [video from &lt;a href="https://www.youtube.com/channel/UCYSa_YLoJokZAwHhlwJntIA"&gt;Vadim Savin&lt;/a&gt; of &lt;a href="https://www.notjust.dev/"&gt;notJustDevelopment&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=R2Okg53lUv8"&gt;Flutter Marketplace app with Stripe Connect&lt;/a&gt; [video from &lt;a href="https://ahsanayaz.com/"&gt;Muhammad Ahsan Ayaz&lt;/a&gt;] &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/ritza/setting-up-stripe-checkout-and-email-subscription-with-flask-and-code-capsules-1bac"&gt;Setting up Stripe Checkout and email subscription with Flask and Code Capsules&lt;/a&gt; [blog post from &lt;a href="https://codecapsules.io/"&gt;Code Capsules&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Thank you to our top open-source contributors this month: &lt;a href="https://github.com/marcoscannabrava"&gt;marcoscannabrava&lt;/a&gt;, &lt;a href="https://github.com/viablecell"&gt;viablecell&lt;/a&gt; (&lt;a href="https://github.com/stripe/stripe-js"&gt;stripe-js&lt;/a&gt;), &lt;a href="https://github.com/williammartin"&gt;williammartin&lt;/a&gt; (&lt;a href="https://github.com/stripe/stripe-node"&gt;stripe-node&lt;/a&gt;), &lt;a href="https://github.com/jmarkowski"&gt;jmarkowski&lt;/a&gt;, &lt;a href="https://github.com/kronthto"&gt;kronthto&lt;/a&gt;, &lt;a href="https://github.com/hibariya"&gt;hibariya&lt;/a&gt; (&lt;a href="https://github.com/stripe-samples"&gt;stripe-samples&lt;/a&gt;), &lt;a href="https://github.com/alihussain5"&gt;alihussain5&lt;/a&gt;, &lt;a href="https://github.com/Morriar"&gt;Morriar&lt;/a&gt;, &lt;a href="https://github.com/tophattom"&gt;tophattom&lt;/a&gt;, &lt;a href="https://github.com/richardxia"&gt;richardxia&lt;/a&gt;, &lt;a href="https://github.com/RyanBrushett"&gt;RyanBrushett&lt;/a&gt;, &lt;a href="https://github.com/karmakaze"&gt;karmakaze&lt;/a&gt;, &lt;a href="https://github.com/alexdunae"&gt;alexdunae&lt;/a&gt;, &lt;a href="https://github.com/Bo98"&gt;Bo98&lt;/a&gt;, &lt;a href="https://github.com/kddeisz"&gt;kddeisz&lt;/a&gt; (&lt;a href="https://github.com/sorbet/sorbet"&gt;sorbet&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#stay-connected"&gt;
  &lt;/a&gt;
  Stay connected
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/stripedev"&gt;Follow us at @StripeDev on Twitter&lt;/a&gt; for developer updates and answers to your technical questions. Let us know what you’re working on with the Stripe API!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/stripedevelopers"&gt;Subscribe to Stripe Developers on YouTube&lt;/a&gt; for developer office hours, live streams, and online workshops.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/stripe"&gt;Add us on DEV&lt;/a&gt; for how-to articles and past editions of the dev digest.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>stripe</category>
      <category>devrel</category>
      <category>payments</category>
    </item>
    <item>
      <title>Let's code a Netlifx Clone with GraphQL Pagination (Reviewed by a NETFLIX ENGINEER!)</title>
      <author>Ania Kubow</author>
      <pubDate>Thu, 27 May 2021 16:03:04 +0000</pubDate>
      <link>https://dev.to/ania_kubow/let-s-code-a-netlifx-clone-with-graphql-pagination-reviewed-by-a-netflix-engineer-1l3l</link>
      <guid>https://dev.to/ania_kubow/let-s-code-a-netlifx-clone-with-graphql-pagination-reviewed-by-a-netflix-engineer-1l3l</guid>
      <description>&lt;p&gt;In this video, I build a Netflix Clone using React, Apollo GraphQL, DataStax Astra + Netlify Serverless Functions! For more free credits on top of your already free ones, use code ANIA200 on &lt;a href="https://www.datastax.com/"&gt;https://www.datastax.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This video is great for those wanting to see how I build an app that fetches data from our Cassandra database using the GraphQL API, as well as learn how to use pagination and slicing. Here are just a few things we will be covering:&lt;/p&gt;

&lt;p&gt;00:00 Introduction&lt;br&gt;
04:32 Signing up to our Datastax Astra Cassandra database&lt;br&gt;
07:16 Using the GraphQL Playground&lt;br&gt;
09:51 Creating Tables using GraphQL mutations&lt;br&gt;
18:22 Adding Data using GraphQL mutations (you can use my pre-made data below)&lt;br&gt;
25:03 Retrieving Data using GraphQL queries&lt;br&gt;
26:20 Adding our Movies to our database&lt;br&gt;
34:48 Retrieving all of our Movies by Genre&lt;br&gt;
36:39 Limiting our Data in GraphQL queries&lt;br&gt;
38:01 Creating our React App&lt;br&gt;
41:31 What is LOLOMO at Netflix?&lt;br&gt;
43:05 Setting up Netlify Serverless Functions&lt;br&gt;
49:36 Adding your DataStax token and endpoint&lt;br&gt;
46:03 Adding the Netlify config&lt;br&gt;
46:56 Writing a serverless function to get the Genres&lt;br&gt;
57:36 Getting the Genres using GraphQL&lt;br&gt;
01:04:48 Getting the Movies by Genre in our browsers&lt;br&gt;
01:20:45 Pagination in GraphQL&lt;br&gt;
01:23:51 Calling the next page by button&lt;br&gt;
01:31:19 Loading more Genres when we hover at the end of the screen&lt;br&gt;
01:38:20 Adding a NavBar and HeroSection&lt;br&gt;
01:42:20 Making our Movie Cards pop out when we hover over them&lt;br&gt;
01:51:24 Making videos auto-play and show more info on hover&lt;br&gt;
01:55:28 HeroSection&lt;br&gt;
02:13:36 Font Awesome Icons&lt;br&gt;
02:16:20 Final basic styling&lt;/p&gt;

&lt;p&gt;Movie Data: &lt;a href="https://github.com/kubowania/netflix-clone-graphql-datastax"&gt;https://github.com/kubowania/netflix-clone-graphql-datastax&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As always, please take this project and make it your own. I have done some basic styling for you to get going. This is not a tutorial on styling, it is more to practise your database management skills, so please go wild on the styling yourselves :D! I would love to see what you have made!!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/g8COh40v2jU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The full finished project can be found here: &lt;a href="https://github.com/kubowania/netflix-clone-graphql-datastax/tree/main/data"&gt;https://github.com/kubowania/netflix-clone-graphql-datastax/tree/main/data&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;⭐ In most videos I use Tabnine as my A.I autocompletion tool. You can download it for free here: &lt;a href="http://bit.ly/tabnine-top-tool"&gt;http://bit.ly/tabnine-top-tool&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⭐ You can get a blockchain domain with my affiliate link here: &lt;a href="http://bit.ly/get-a-crypto-domain"&gt;http://bit.ly/get-a-crypto-domain&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⭐ If you would like to buy me a coffee, well thank you very much that is mega kind! : &lt;a href="https://www.buymeacoffee.com/aniakubow"&gt;https://www.buymeacoffee.com/aniakubow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⭐ Sign up for weekly coding tips from my newsletter partnership: &lt;a href="https://bit.ly/JS-tips"&gt;https://bit.ly/JS-tips&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also find me on:&lt;br&gt;
Twitter: &lt;a href="https://twitter.com/ania_kubow"&gt;https://twitter.com/ania_kubow&lt;/a&gt;&lt;br&gt;
Instagram: &lt;a href="https://instagram.com/aniakubow"&gt;https://instagram.com/aniakubow&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#codingbootcamp%E2%80%8B-coding"&gt;
  &lt;/a&gt;
  codingbootcamp​ #coding
&lt;/h1&gt;

</description>
      <category>tutorial</category>
      <category>video</category>
      <category>graphql</category>
      <category>react</category>
    </item>
    <item>
      <title>The Ultimate Eleventy Template for your blog with a FREE minimalist theme [Open Source]</title>
      <author>Remi W.</author>
      <pubDate>Thu, 27 May 2021 15:18:16 +0000</pubDate>
      <link>https://dev.to/ixartz/the-ultimate-eleventy-template-for-your-blog-with-a-free-minimalist-theme-open-source-3h47</link>
      <guid>https://dev.to/ixartz/the-ultimate-eleventy-template-for-your-blog-with-a-free-minimalist-theme-open-source-3h47</guid>
      <description>&lt;p&gt;Yesterday, I've just updated my 11ty Starter code to the latest version with Tailwind CSS 2 and Webpack 5. Built in developer in mind with great tooling with ESLint and Prettier. The template is production-ready with SEO features. It also includes a little bonus with Netlify CMS (optional).&lt;/p&gt;

&lt;p&gt;You can test the template at &lt;a href="https://creativedesignsguru.com/demo/Eleventy-Starter-Boilerplate/"&gt;Eleventy Template live demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are interested you can view the source code at &lt;a href="https://github.com/ixartz/Eleventy-Starter-Boilerplate"&gt;Eleventy Template GitHub Repo&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;🔥 11ty for SSG&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🎨 Integrate with Tailwind CSS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;⚡️ Lazy load images with lazysizes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✨ Compress image with Imagemin&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🎈 Syntax Highlighting with Prism.js&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;☕ Minify HTML &amp;amp; CSS with HTMLMinifier and cssnano&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✏️ Linter with ESLint&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🛠 Code Formatter with Prettier&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;💨 Live reload&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;📦 Module Bundler with Webpack&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🦊 Templating with EJS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🤖 SEO metadata and Open Graph tags&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;⚙️ JSON-LD for richer indexing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🗺 Sitemap.xml&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;⚠️ 404 page&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;📖 Pagination&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ Cache busting&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;💯 Maximize lighthouse score&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🌈 Include a FREE minimalist blog theme&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🗒 Netlify CMS (optional)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ixartz"&gt;
        ixartz
      &lt;/a&gt; / &lt;a href="https://github.com/ixartz/Eleventy-Starter-Boilerplate"&gt;
        Eleventy-Starter-Boilerplate
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀 Eleventy Starter is production-ready with SEO-friendly for quickly starting a blog. ⚡ Built with Eleventy, ESLint, Prettier, Webpack 5, PostCSS, Tailwind CSS 2 and Netlify CMS (optional).
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Eleventy Starter Boilerplate&lt;/h1&gt;
&lt;p&gt;
  &lt;a href="https://creativedesignsguru.com/demo/Eleventy-Starter-Boilerplate/eleventy-starter-boilerplate-presentation/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GBvAD5Rj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ixartz/Eleventy-Starter-Boilerplate/master/public/assets/images/eleventy-js-starter-boilerplate.png%3Fraw%3Dtrue" alt="Eleventy starter banner"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;🚀 Eleventy Starter Boilerplate is production-ready with SEO-friendly for quickly starting a blog. ⚡️ Built with &lt;a href="https://www.11ty.dev" rel="nofollow"&gt;Eleventy&lt;/a&gt;, &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt;, &lt;a href="https://prettier.io" rel="nofollow"&gt;Prettier&lt;/a&gt;, &lt;a href="https://webpack.js.org" rel="nofollow"&gt;Webpack&lt;/a&gt;, &lt;a href="https://postcss.org" rel="nofollow"&gt;PostCSS&lt;/a&gt;, &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt; and &lt;a href="https://www.netlifycms.org" rel="nofollow"&gt;Netlify CMS&lt;/a&gt; (optional).&lt;/p&gt;

&lt;p&gt;Clone this project and use it to create your own &lt;a href="https://www.11ty.dev" rel="nofollow"&gt;Eleventy&lt;/a&gt; blog. You can check a &lt;a href="https://creativedesignsguru.com/demo/Eleventy-Starter-Boilerplate/eleventy-starter-boilerplate-presentation/" rel="nofollow"&gt;Eleventy templates demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
Features&lt;/h3&gt;

&lt;p&gt;Production-ready in mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
🔥 &lt;a href="https://www.11ty.dev" rel="nofollow"&gt;11ty&lt;/a&gt; for Static Site Generator&lt;/li&gt;
&lt;li&gt;
🎨 Integrate with &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt; (with &lt;a href="https://purgecss.com" rel="nofollow"&gt;PurgeCSS&lt;/a&gt;, remove unused CSS)&lt;/li&gt;
&lt;li&gt;
💅 &lt;a href="https://postcss.org" rel="nofollow"&gt;PostCSS&lt;/a&gt; for processing &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
⚡️ Lazy load images with &lt;a href="https://github.com/aFarkas/lazysizes"&gt;lazysizes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
✨ Compress image with &lt;a href="https://github.com/imagemin/imagemin"&gt;Imagemin&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🎈 Syntax Highlighting with &lt;a href="https://prismjs.com" rel="nofollow"&gt;Prism.js&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
☕ Minify HTML &amp;amp; CSS with &lt;a href="https://www.npmjs.com/package/html-minifier" rel="nofollow"&gt;HTMLMinifier&lt;/a&gt; and &lt;a href="https://cssnano.co" rel="nofollow"&gt;cssnano&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
✏️ Linter with &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🛠 Code Formatter with &lt;a href="https://prettier.io" rel="nofollow"&gt;Prettier&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
💨 Live reload&lt;/li&gt;
&lt;li&gt;
📦 Module Bundler with &lt;a href="https://webpack.js.org" rel="nofollow"&gt;Webpack&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🦊 Templating with &lt;a href="https://ejs.co" rel="nofollow"&gt;EJS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🤖 SEO metadata and &lt;a href="https://ogp.me/" rel="nofollow"&gt;Open Graph&lt;/a&gt; tags&lt;/li&gt;
&lt;li&gt;
⚙️ &lt;a href="https://developers.google.com/search/docs/guides/intro-structured-data" rel="nofollow"&gt;JSON-LD&lt;/a&gt; for richer indexing&lt;/li&gt;
&lt;li&gt;
🗺 Sitemap.xml&lt;/li&gt;
&lt;li&gt;
⚠️ 404 page&lt;/li&gt;
&lt;li&gt;
📖 Pagination&lt;/li&gt;
&lt;li&gt;
✅ Cache busting&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ixartz/Eleventy-Starter-Boilerplate"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#built-with-latest-technologies"&gt;
  &lt;/a&gt;
  Built with latest technologies
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Eleventy&lt;/li&gt;
&lt;li&gt;Tailwind CSS 2.0&lt;/li&gt;
&lt;li&gt;Webpack 5&lt;/li&gt;
&lt;li&gt;ESLint&lt;/li&gt;
&lt;li&gt;Prettier&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#other-11ty-templates-and-themes"&gt;
  &lt;/a&gt;
  Other 11ty Templates and Themes
&lt;/h2&gt;

&lt;p&gt;You can also check my other Eleventy templates at:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/blue-dark-eleventy-theme/"&gt;Blue Dark Eleventy Theme&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/blue-eclatant-eleventy-theme/"&gt;Blue Eclatant Eleventy Theme&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/blue-dark-eleventy-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y3WatnIY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/blue-dark-mode-eleventy-theme-homepage-xs.png" alt="Blue Dark Eleventy Theme premium"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/blue-eclatant-eleventy-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wYxgG3gm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/eclatant-blue-eleventy-theme-homepage-xs.png" alt="Blue Eclatant Eleventy Theme premium"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/blue-modern-eleventy-theme/"&gt;Blue Modern Eleventy Theme&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/blue-minimalist-eleventy-theme/"&gt;Blue Minimalist Eleventy Theme&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/blue-modern-eleventy-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yo2plpbS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/modern-blue-eleventy-theme-homepage-xs.png" alt="Blue Modern Eleventy Theme premium"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/blue-minimalist-eleventy-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lqqvRaLF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/minimalist-blue-eleventy-theme-homepage-xs.png" alt="Blue Minimalist Eleventy Theme premium"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;You can easily customize the themes based on your needs by saving you development and design time.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tailwindcss</category>
      <category>javascript</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
