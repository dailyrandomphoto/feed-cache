<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Is Node.js Single-Threaded or Multi-Threaded? and Why?</title>
      <author>Andres Reales</author>
      <pubDate>Tue, 07 Sep 2021 11:39:13 +0000</pubDate>
      <link>https://dev.to/arealesramirez/is-node-js-single-threaded-or-multi-threaded-and-why-ab1</link>
      <guid>https://dev.to/arealesramirez/is-node-js-single-threaded-or-multi-threaded-and-why-ab1</guid>
      <description>&lt;p&gt;Have you been reading multiple articles trying to understand whether Node.js is single-threaded or multi-threaded? Why are there many of them saying single-threaded and others saying multi-threaded? I’ve been there and after reading one article after another, it seems there’s always a doubt in the back of your mind telling you the concept is still not clear. In this article, I hope to clarify this confusion.&lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://nodejs.dev/learn"&gt;Node.js documentation&lt;/a&gt;, a Node.js application runs using the event loop. The event loop is what allows Node.js to perform non-blocking I/O operations and explains how Node.js can be asynchronous. The event loop, aka the main thread, allows running one thing at a time. Having said that, &lt;strong&gt;Node.js JavaScript code runs on a single thread&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now, there are several points you have probably read about in different articles such as using &lt;strong&gt;worker_threads&lt;/strong&gt; making it multi-threaded, or the programming language used to develop Node.js applications makes it single-threaded, etc. I will cover those relevant points, but before we move forward, I’ll refresh your knowledge with regards to what single and multi-thread processes are.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-a-singlethreaded-process-is"&gt;
  &lt;/a&gt;
  What a Single-Threaded Process is
&lt;/h2&gt;

&lt;p&gt;A single-threaded process is the execution of programmed instructions in a single sequence. Having said that, if an application has the following set of instructions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instruction A&lt;/li&gt;
&lt;li&gt;Instruction B&lt;/li&gt;
&lt;li&gt;Instruction C&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If these set of instructions are executed in a single-threaded process, the execution would look like the following:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dp5YTWtO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vsf84myna0sp2rahh8uj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dp5YTWtO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vsf84myna0sp2rahh8uj.png" alt="Single Thread"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-a-multithreaded-process-is"&gt;
  &lt;/a&gt;
  What a Multi-Threaded Process is
&lt;/h2&gt;

&lt;p&gt;A multi-threaded process is the execution of programmed instructions in multiple sequences. Therefore, instructions won’t have to wait to execute unless multiple instructions are grouped within different sequences.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--avQGVjRD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zsyg6r77mt4h0n8ql5a6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--avQGVjRD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zsyg6r77mt4h0n8ql5a6.png" alt="Multi thread"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-nodejs-is-singlethreaded"&gt;
  &lt;/a&gt;
  Why Node.js is Single-Threaded?
&lt;/h2&gt;

&lt;p&gt;Now you know Node.js architecture is single-threaded. However, why is it single-threaded? My first question for you is, do you understand how the event loop works? If not, I recommend you &lt;a href="https://nodejs.dev/learn/the-nodejs-event-loop"&gt;check this article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, to keep things simple, the event loop runs one process at a time. That means it can only execute one function at a time, and since functions can have multiple instructions, the event loop will execute one instruction at a time.&lt;/p&gt;

&lt;p&gt;At first, it sounds not efficient providing poor performance. However, quite the opposite it turns out to be more performant and scalable than other multithreaded alternatives such as Java.&lt;/p&gt;

&lt;p&gt;Running a multithreaded solution involves leveraging multiple cores of a system. Having said that, if one thread is waiting for an I/O response, the other threads could still be in progress. In theory, multithread seems the way to go, but what we are not taking into consideration is that a thread could still be blocked regardless of other threads being available.&lt;/p&gt;

&lt;p&gt;The beauty of the event loop is not of running everything in a single thread, but it’s available to “put aside” long time-consuming I/O operations to keep the execution of other instructions. This is the reason why we get fast responses even though we could have multiple users making requests to a Node.js API at the same time.&lt;/p&gt;

&lt;p&gt;The first thing to clarify is there is no such thing as making requests at the same time. It is perceived to have run requests at the same time, but in reality, the event loop runs processes defined for each request based on the order in which it arrived. Let’s make this concept simple to understand by using an example. In this case, we are going to assume we have the following API endpoints:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;/getCars&lt;/li&gt;
&lt;li&gt;/updateCar&lt;/li&gt;
&lt;li&gt;/updateDriver&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Remember, request are not made at the same time. The event loop will handle the requests in the following order assuming that was the order they were requested:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;/getCars&lt;/li&gt;
&lt;li&gt;/updateCar&lt;/li&gt;
&lt;li&gt;/updateDriver&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The event loop will execute the first instructions from the /getCars endpoint. At some point, there will be an instruction which is a request from the API to a database to fetch the cars. This is considered an I/O operation. This process can take a short or long time to execute. Regardless of how fast this gets executed. The event loop will trigger this request and move it “aside” to prevent blocking the thread from executing other instructions. However, it will resume triggering the set of instructions for the /getCars endpoint once a response is sent back from the database.&lt;/p&gt;

&lt;p&gt;Therefore, while the request made from the /getCars endpoint to the database is triggered and waiting for a response, the /updateCar endpoint will trigger its set of instructions. If there is not I/O operation within the /updateCar endpoint, the /updateCar endpoint will return a response before the /getCars endpoint returns a response.&lt;/p&gt;

&lt;p&gt;In a similar way, if the /updateCar endpoints have an instruction to execute an I/O operation, the event loop will trigger it but won’t block the thread from executing instructions. In this way, it could either start executing the set of instructions from the /updateDriver endpoint, or resume the execution of the /getCars endpoint once it receives a response from the database. This is based on whichever is added first in the event queue.&lt;/p&gt;

&lt;p&gt;If you think about it, the major benefit of Node.js architecture is not the fact of being single-threaded, but its ability to not block the thread from executing other instructions. This is one of the main reasons Node.js is an excellent choice for developing APIs as these are heavily based on I/O operations. The event loop’s smart system to execute intensive I/O operations and resume processes once the I/O operations are completed while not worrying about issues that can come with using multithreaded solutions such as deadlocks or race conditions makes it a no brainer for many teams to use Node.js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-block-the-event-loop-aka-the-main-thread"&gt;
  &lt;/a&gt;
  Don’t Block the Event Loop (aka the Main Thread)
&lt;/h2&gt;

&lt;p&gt;Like most solutions, there are advantages and disadvantages, and Node.js is not an exclusion of this. Since we know Node.js runs using the event loop, aka as the main thread, blocking the loop will indeed prevent the system from running other instructions regardless of whether they belong to a single process or multiple different processes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Didn’t you say the event loop “triggers intensive operations and move them aside, resuming a process once the operations get a response”?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Yes.&lt;/p&gt;

&lt;p&gt;However, it is important to clarify the event loop’s ability to “resume” an I/O operation process doesn’t mean it will be capable of getting away around with an intensive CPU operation. The beauty of an I/O operation is to use external CPU processing power to execute a process. However, &lt;strong&gt;if our Node.js application is the one using intensive CPU processing power to execute power, it means we cannot execute other sets of instructions until the heavy processing power instruction completes. This is called blocking the event loop&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#confusing-javascript-and-nodejs-threading-process"&gt;
  &lt;/a&gt;
  Confusing JavaScript and Node.js Threading Process
&lt;/h2&gt;

&lt;p&gt;It is important to not say Node.js is single-threaded because the JavaScript programming language is single-threaded. This is incorrect. JavaScript can run in different programming environments, and Node.js being among the most popular environments using JavaScript. Therefore, it is a common misconception to think JavaScript is single-threaded. When speaking about single-threaded or multi-threaded, we should look at how the programming environment operates rather than how the language in itself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-about-worker-threads-in-nodejs-does-it-make-nodejs-multithreaded"&gt;
  &lt;/a&gt;
  What About Worker Threads in Node.js? Does it Make Node.js Multi-threaded?
&lt;/h2&gt;

&lt;p&gt;While the implementation of worker threads in v10.5.0 allows the use of threads that execute JavaScript in parallel, Node.js event loop architecture is single-threaded based.&lt;/p&gt;

&lt;p&gt;What really happens when spawning multiple threads using &lt;strong&gt;worker_threads&lt;/strong&gt; is the generation of multiple V8 engines sharing memory. Workers threads are useful for performing CPU-intensive JavaScript operations. This frees up the main thread’s event loop from CPU-heavy processes and keeps it available for what is best for intensive I/O operations.&lt;/p&gt;

&lt;p&gt;The expense of generating worker threads doesn’t result in a positive impact around I/O intensive work as in the end, each thread will have the same mechanism: one event loop per thread, which won’t be any different than opting not to use worker threads. Node.js’s built-in asynchronous I/O operations are more efficient than workers can be.&lt;/p&gt;

&lt;p&gt;Having said that, each thread will use the same Node.js architecture which is single-threaded based. You can achieve multithreading by generating multiple nodes or Node.js V8 engines which in isolation are single-threaded. It is still correct to say Node.js is not multi-threaded.&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Running Dapr on Kubernetes</title>
      <author>Ivan Cvitkovic</author>
      <pubDate>Tue, 07 Sep 2021 10:53:46 +0000</pubDate>
      <link>https://dev.to/cvitaa11/running-dapr-on-kubernetes-89g</link>
      <guid>https://dev.to/cvitaa11/running-dapr-on-kubernetes-89g</guid>
      <description>&lt;p&gt;The distributed application runtime, Dapr, is a portable, event-driven runtime that can run on the cloud or any edge infrastructure. It puts together the best practices for building microservice applications into components called building blocks.&lt;/p&gt;

&lt;p&gt;Each building block is completely independent so you can use one, some, or all of them in your application. Building blocks are extensible, so you can also write your own.&lt;/p&gt;

&lt;p&gt;Dapr supports a wide range of programming languages and frameworks such as .NET, Java, Node.js, Go and Python. That means you can write microservice apps using your favorite tools and deploy them literally anywhere.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yQ1_eJLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.dapr.io/images/overview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yQ1_eJLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.dapr.io/images/overview.png" alt="Architecture Diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically, building blocks are just HTTP or gRPC APIs that can be called from application code and use one or more Dapr components. They abstract some of the major challenges during development such as service-to-service communication, state managment, pub/sub, observability and more. Building blocks do not depend on underlying technology. This means if you need to implement, for example, pub/sub functionality you can use Apache Kafka, RabbitMQ, Redis Streams, Azure Service Bus or any other supported broker that interface with Dapr.&lt;/p&gt;

&lt;p&gt;In this example we will show how to run Dapr on the Kubernetes cluster with two .NET applications. First one will send messages to Apache Kafka while the second one will read those messages and store them in Redis. Communication to Kafka and Redis will be realized using the Dapr Client, which means that we will not have any dependencies on NuGet packages like &lt;code&gt;Confluent.Kafka&lt;/code&gt; or &lt;code&gt;StackExchange.Redis&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#architecture-diagram"&gt;
  &lt;/a&gt;
  Architecture diagram
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WHagNN1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cvitaa11/dapr-demo/main/Architecture_diagram.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WHagNN1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cvitaa11/dapr-demo/main/Architecture_diagram.jpeg" alt="Architecture Diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h4&gt;

&lt;p&gt;This demo requires you to have the following installed on your machine:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Kubernetes CLI &lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/"&gt;kubectl&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Kubernetes cluster, such as &lt;a href="https://docs.dapr.io/operations/hosting/kubernetes/cluster/setup-minikube/"&gt;Minikube&lt;/a&gt; or &lt;a href="https://www.docker.com/products/docker-desktop"&gt;Docker Desktop&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, clone the repository and &lt;code&gt;cd&lt;/code&gt; into the right directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/cvitaa11/dapr-demo
cd dapr-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step-1-setup-dapr-on-your-kubernetes-cluster"&gt;
  &lt;/a&gt;
  Step 1 - Setup Dapr on your Kubernetes cluster
&lt;/h4&gt;

&lt;p&gt;The first thing you need is an RBAC enabled Kubernetes cluster. This could be running on your machine using Minikube/Docker Desktop, or it could be a fully-fledged cluser in Azure using &lt;a href="https://azure.microsoft.com/en-us/services/kubernetes-service/"&gt;AKS&lt;/a&gt; or some other managed Kubernetes instance from different cloud vendor.&lt;/p&gt;

&lt;p&gt;Once you have a cluster, follow the steps below to deploy Dapr to it. For more details, look &lt;a href="https://docs.dapr.io/getting-started/install-dapr/#install-dapr-on-a-kubernetes-cluster"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ dapr init -k
⌛  Making the jump to hyperspace...
ℹ️  Note: To install Dapr using Helm, see here: https://docs.dapr.io/getting-started/install-dapr-kubernetes/#install-with-helm-advanced

✅  Deploying the Dapr control plane to your cluster...
✅  Success! Dapr has been installed to namespace dapr-system. To verify, run `dapr status -k' in your terminal. To get started, go here: https://aka.ms/dapr-getting-started
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;dapr&lt;/code&gt; CLI will exit as soon as the kubernetes deployments are created. Kubernetes deployments are asyncronous, so you will need to make sure that the dapr deployments are actually completed before continuing.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2-setup-apache-kafka"&gt;
  &lt;/a&gt;
  Step 2 - Setup Apache Kafka
&lt;/h4&gt;

&lt;p&gt;The easiest way to setup Apache Kafka on your Kubernetes cluster is by using &lt;a href="https://helm.sh/"&gt;Helm&lt;/a&gt; package manager. To install Helm on your development machine follow this &lt;a href="https://helm.sh/docs/intro/install/"&gt;guide&lt;/a&gt;. &lt;br&gt;
We will use &lt;a href="https://github.com/bitnami/charts"&gt;Bitnamy Library for Kubernetes&lt;/a&gt; to launch Zookeper and Kafka message broker.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm repo add bitnami https://charts.bitnami.com/bitnami
helm install my-release bitnami/kafka
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step-3-setup-redis"&gt;
  &lt;/a&gt;
  Step 3 - Setup Redis
&lt;/h4&gt;

&lt;p&gt;Just like Apache Kafka, easy way to spin up Redis on your Kubernetes cluster is by using Helm.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm repo add bitnami https://charts.bitnami.com/bitnami
helm install redis bitnami/redis
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To verify the installation of Kafka and Redis run &lt;code&gt;kubectl get all&lt;/code&gt; and you should see similiar output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NAME                             READY   STATUS        RESTARTS   AGE
pod/my-release-kafka-0           1/1     Running       0          18m
pod/my-release-zookeeper-0       1/1     Running       0          18m
pod/redis-master-0               1/1     Running       1          11m
pod/redis-slave-0                1/1     Running       1          11m
pod/redis-slave-1                1/1     Running       1          11m

NAME                                    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE
service/kubernetes                      ClusterIP   10.96.0.1        &amp;lt;none&amp;gt;        443/TCP                      15d
service/my-release-kafka                ClusterIP   10.110.225.238   &amp;lt;none&amp;gt;        9092/TCP                     18m
service/my-release-kafka-headless       ClusterIP   None             &amp;lt;none&amp;gt;        9092/TCP,9093/TCP            18m
service/my-release-zookeeper            ClusterIP   10.99.95.252     &amp;lt;none&amp;gt;        2181/TCP,2888/TCP,3888/TCP   18m
service/my-release-zookeeper-headless   ClusterIP   None             &amp;lt;none&amp;gt;        2181/TCP,2888/TCP,3888/TCP   18m
service/redis-headless                  ClusterIP   None             &amp;lt;none&amp;gt;        6379/TCP                     11m
service/redis-master                    ClusterIP   10.111.109.148   &amp;lt;none&amp;gt;        6379/TCP                     11m
service/redis-slave                     ClusterIP   10.111.66.85     &amp;lt;none&amp;gt;        6379/TCP                     11m

NAME                                    READY   AGE
statefulset.apps/my-release-kafka       1/1     18m
statefulset.apps/my-release-zookeeper   1/1     18m
statefulset.apps/redis-master           1/1     11m
statefulset.apps/redis-slave            2/2     11m
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step-4-create-dapr-components-in-kubernetes-cluster"&gt;
  &lt;/a&gt;
  Step 4 - Create Dapr components in Kubernetes cluster
&lt;/h4&gt;

&lt;p&gt;To deploy pub/sub and state store components make sure you are positioned in the right directory and then apply Dapr YAML manifests.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd dapr-components
kubectl apply -f .\kafka.yaml
kubectl apply -f .\redis.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#step-5-deploy-net-core-applications"&gt;
  &lt;/a&gt;
  Step 5 - Deploy .NET Core applications
&lt;/h4&gt;

&lt;p&gt;Now when all prerequisites are ready we can deploy our apps. To deploy .NET Core publisher and consumer applications make sure you are positioned in the right directory and then apply Kubernetes manifests.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd k8s
kubectl apply -f .\publisher.yaml
kubectl apply -f .\consumer.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each manifest contains &lt;code&gt;Deployment&lt;/code&gt; object for the application and &lt;code&gt;Service&lt;/code&gt; object for accessing the application through a browser.&lt;/p&gt;

&lt;p&gt;Navigate to the &lt;code&gt;localhost:8081/swagger&lt;/code&gt; and you will se our publisher app with a POST method on &lt;code&gt;MessageController&lt;/code&gt;. This action sends a message to &lt;em&gt;newMessage&lt;/em&gt; topic on Kafka pub/sub component. Communication between application and message broker is not performed directly. Dapr is running as a sidecar container inside publisher pod and handles the entire process of sending a message.&lt;/p&gt;

&lt;p&gt;Our consumer application is running on &lt;code&gt;localhost:9091&lt;/code&gt; and is subscribed to &lt;em&gt;newMessage&lt;/em&gt; topic on Kafka pub/sub component. When new message arrives it reads the content and trough the Dapr client saves it to Redis state store uneder the key &lt;em&gt;message&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;To test the entire process we can run Redis client pod and check if content is stored. First of all we will export password to REDIS_PASSWORD variable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export REDIS_PASSWORD=$(kubectl get secret --namespace default redis -o jsonpath="{.data.redis-password}" | base64 --decode)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then run the client with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl run --namespace default redis-client --rm --tty -i --restart='Never' \
    --env REDIS_PASSWORD=$REDIS_PASSWORD \
   --image docker.io/bitnami/redis:6.0.12-debian-10-r3 -- bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and connect using Redis CLI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;redis-cli -h redis-master -a $REDIS_PASSWORD
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that you are connected to Redis you can use command &lt;code&gt;HGETALL message&lt;/code&gt; that will return content of the message we sent to Kafka. With this we have confirmed that the whole process works.&lt;/p&gt;

&lt;p&gt;If you want to find out more about Dapr, the best place to start is the official &lt;a href="https://dapr.io/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>dotnet</category>
      <category>microservices</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Paxful Clone Script-6 Steps to Provide a Website Like Paxful</title>
      <author>felix jordan</author>
      <pubDate>Tue, 07 Sep 2021 10:53:05 +0000</pubDate>
      <link>https://dev.to/fixitjordan/paxful-clone-script-6-steps-to-provide-a-website-like-paxful-baf</link>
      <guid>https://dev.to/fixitjordan/paxful-clone-script-6-steps-to-provide-a-website-like-paxful-baf</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3FwK98fB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo49tu8g1bq6z8bgn6by.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3FwK98fB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo49tu8g1bq6z8bgn6by.png" alt="paxful is a p2p finance platform for trading cryptocurrencies"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-paxful"&gt;
  &lt;/a&gt;
  What is Paxful?
&lt;/h2&gt;

&lt;p&gt;Paxful is one of the best p2p finance platform for trading cryptocurrency. many companies are interested to launch &lt;strong&gt;&lt;a href="https://radindev.com/paxful-clone-script/"&gt;paxful clone script&lt;/a&gt;&lt;/strong&gt; similar to paxful exchange.&lt;br&gt;
In 2014, Ray Youssef and Artur Schaback founded EasyBitz which was then renamed to Paxful, which gets its name from the Latin word for "peace". They had one goal in mind when they created it: to make Bitcoin easier for everyone from businesses to traders. &lt;br&gt;
A lot of big problems in the world revolve around money, specifically earning it and transporting it. Sending money around the world is not fast or cheap in any way, but Paxful changed that.&lt;br&gt;
Paxful is the p2p cryptocurrency marketplace where buyers and sellers are connected for business. Having over 300 payment methods available on Paxful creates it unbelievably easy to find proper suggestions.&lt;br&gt;
The p2p system of Paxful removes limits. You can think of your Paxful account as your very own financial passport. Also, you can send money and buy things from halfway around the world. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d7Otoweg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlx35esq5rhfh0djw243.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d7Otoweg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlx35esq5rhfh0djw243.jpeg" alt="stats of paxful exchange"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, in this article, we supposed to analyze the process of functioning paxful exchange, paxful clone script, benefits, features, functions, white label paxful clone script and how to build exchange like paxful. Let’s find out what these are:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-clone-script"&gt;
  &lt;/a&gt;
  What is clone script?
&lt;/h2&gt;

&lt;p&gt;A clone script is a replacement code or architecture of an existing website. The purpose of the website clone script is, it helps the entrepreneurs to start business rapidly with popular and unique features and minimize the startup costs. Actually The Clone scripts are the copy of famous online businesses out there in the world. These scripts can be used by entrepreneurs to start their online business at ease.&lt;br&gt;
Some business owners say clone scripts are not legal. But it isn’t. Because cloning a website doesn’t mean that the clone scripts are made from the exact code of the existing website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-and-benefits-of-using-clone-script"&gt;
  &lt;/a&gt;
  Features and benefits of using clone script
&lt;/h3&gt;

&lt;p&gt;Scalable and Customizable:&lt;br&gt;
Clone scripts are used in developing the clone app and it is very easy to customize the clone scripts according to the requirement of the project of the client. &lt;br&gt;
Quick Launch:&lt;br&gt;
The clone scripts do not take a long time to run as they are predefined scripts and already written and capable to run quickly.&lt;br&gt;
Low Cost:&lt;br&gt;
the clone scripts are open source so we can get that from the original site of the existing app and can easily get that from there and use it in our app though we do not have to pay any amount hence results in it being cost-effective.&lt;br&gt;
High Success Rate:&lt;br&gt;
The clone scripts are very powerful and we know that these are already used on someone’s site or used by many others though it is bug-free and attracted by the users across the globe. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-the-purpose-of-clone-scripts"&gt;
  &lt;/a&gt;
  What’s the purpose of clone scripts?
&lt;/h3&gt;

&lt;p&gt;The ultimate purpose of clone scripts is to help budding entrepreneurs to start their own online business hassle-free. Also eliminate the cost and time of development of the business applications. The entrepreneurs can buy the clone script from any of the service providers and customize them based on their preferences.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#white-label-paxful-clone-script-to-get-high-cryptocurrency"&gt;
  &lt;/a&gt;
  White label Paxful Clone Script - To Get High Cryptocurrency
&lt;/h2&gt;

&lt;p&gt;White label Paxful Clone Script is a set of source code that contains all trading functionalities of the Paxful exchange website. White label Paxful clone script allows you to customize the features according to the current digital trend &amp;amp; it allows you to change brand name, logo, theme, design according to your business needs at that moment. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z9ZRypYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1qg3en0b0uizwgsff0z7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z9ZRypYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1qg3en0b0uizwgsff0z7.png" alt="steps to build a website like paxful"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-steps-to-build-website-like-paxful"&gt;
  &lt;/a&gt;
  6 steps to build website like paxful
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#step1-paxful-business-model"&gt;
  &lt;/a&gt;
  Step1: Paxful Business Model
&lt;/h3&gt;

&lt;p&gt;Paxful is one of the most advanced clone scripts that you can use for making a high-end crypto trading platform. Using this powerful solution, it is possible for any entrepreneur to create an exchange as impeccable as Paxful. It has made the &lt;strong&gt;&lt;a href="https://radindev.com/cryptocurrency-exchange-development/"&gt;cryptocurrency exchange website development&lt;/a&gt;&lt;/strong&gt; more valuable for all the parties involved. From the developers to the exchange owners, it is prolific for everyone. paxful clone script works on a very strong architectural design that paves way for some big changes. The replication gets easier only because the platform has allowed you to use its technology. Otherwise, the security aspects are unbeatable and the functionality is also matchless. With this program, it is even possible for you to have a very certain style of trade. It brings a string of plugins and features for the users. To guarantee an honest exchange on the website, smart contracts with escrow are used. To reduce fraud, with other methods of exchange on the site, a system of reviews and reputation ratings has been introduced.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-key-exchange-features"&gt;
  &lt;/a&gt;
  Step 2. Key Exchange Features
&lt;/h3&gt;

&lt;p&gt;Registration. To create a new Paxful account:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Open a web browser and launch the Paxful webpage&lt;/li&gt;
&lt;li&gt; Click Create account on the top right corner of the main page. ...&lt;/li&gt;
&lt;li&gt; Complete the following fields on the signup form: ...&lt;/li&gt;
&lt;li&gt; Click Create Paxful account. ...&lt;/li&gt;
&lt;li&gt; Complete your captcha verification.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;User profiles.  Your public profile contains a summary of your account and your history on Paxful. Also, you can add an avatar (photo or any image), indicate the phone number, main currency and very briefly tell about yourself. In addition, you can configure notification settings in your profile. &lt;br&gt;
Remember that your public profile is visible to other Paxful users. On your public profile, other Paxful users will be able to view the following information about you:&lt;br&gt;
• Username&lt;br&gt;
• Profile picture&lt;br&gt;
• Verification - information if your email, phone, ID or address are verified, and you were verified as a trusted vendor.&lt;br&gt;
• Reputation - an aggregation of the positive and negative feedback that you have received on Paxful.&lt;br&gt;
• Active offers - offers you created that are currently active.&lt;br&gt;
• Your profile language&lt;br&gt;
• Number of trade partners&lt;br&gt;
• Number of trades&lt;br&gt;
• Trade volume - total BTC you’ve traded on Paxful.&lt;br&gt;
• Number of users who trust you&lt;br&gt;
• Number of users who have blocked you&lt;br&gt;
• Time elapsed since you joined Paxful&lt;br&gt;
• Last time you were online on Paxful&lt;br&gt;
Note: Your public profile will contain all the IDs you have earned on Paxful and will help other users decide if you are a safe trade partner or not.&lt;br&gt;
Verification, Know Your Customer (KYC). Paxful is one of the few crypto marketplaces that enforce KYC verification procedures. Verification is an important part of Paxful as we aim to make the trading experience on our platform as safe as possible. Users who fail to verify their identity can continue to use the exchanger, but a limit on the volume of transactions will be set for them.&lt;br&gt;
Cryptocurrency wallet.  The Paxful wallet is useful, protected, and easy to use on all your devices. You can simply manage your funds and top up directly through p2p marketplace, and send or receive Bitcoin, in just a few clicks. Over 3 million people have used the Paxful wallet to send and receive over 40,000 BTC. Its best-in-class security features make it one of the most trusted wallets in the world — so you’ll never have to choose between security and convenience.&lt;br&gt;
Security tools. Cryptocurrency holders and traders are especially vulnerable to cyber-attacks since digital currencies only run electronically. This is why choosing a secure and reliable online Bitcoin wallet is very essential. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Choose a crypto wallet that fits your needs&lt;/li&gt;
&lt;li&gt;Enable two-factor authentication&lt;/li&gt;
&lt;li&gt;Encrypt your Bitcoin wallet&lt;/li&gt;
&lt;li&gt;Backup your entire wallet regularly&lt;/li&gt;
&lt;li&gt;Utilize the multi-signature feature&lt;/li&gt;
&lt;li&gt;Keep your software updated&lt;/li&gt;
&lt;li&gt;Use different passwords for different accounts&lt;/li&gt;
&lt;li&gt;Never give away your private key&lt;/li&gt;
&lt;li&gt;Don’t click on unknown or suspicious links&lt;/li&gt;
&lt;li&gt;Use a secure Internet connection&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UVOdk95d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ciu2fx27z5rcqr5zpqu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UVOdk95d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ciu2fx27z5rcqr5zpqu2.png" alt="paxful,a cryptocurrency platform purchase, sale and exchange"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cryptocurrency purchase, sale and exchange. &lt;br&gt;
Over 350 ways to buy and sell Bitcoin: Select a payment method you like and trade directly with other people!&lt;br&gt;
1.Bank Transfers&lt;br&gt;
2.Exchange for Cash&lt;br&gt;
3.Other Wallet (Send to over 140 online wallets worldwide)&lt;br&gt;
4.Discounted Gift Cards&lt;br&gt;
5.Digital Currencies&lt;br&gt;
6.Goods &amp;amp; Services&lt;/p&gt;

&lt;p&gt;Escrow. Escrow in the financial sense means an arrangement where a third party (not the buyer or the seller)  holds funds in safekeeping pending the completion of a promised obligation. And enables users to get guaranteed transactons. It is best if it is open source software so that users can verify the integrity of the smart contract and the absence of errors in the code. &lt;br&gt;
Reviews and rating system. On the Paxful website, users can distinguish reliable counterparties from unscrupulous or scammers. They can be positive, neutral or negative. You can leave a response instantly after the successful completion of the transaction (or its failure). &lt;br&gt;
Customer support. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Customizable dashboard&lt;/li&gt;
&lt;li&gt; The ability to view site statistics (activity, trading volume, etc.)&lt;/li&gt;
&lt;li&gt; View user profiles&lt;/li&gt;
&lt;li&gt; Buy-Sell tab&lt;/li&gt;
&lt;li&gt; General information about the platform&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#step-3-monetization-of-the-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  Step 3. Monetization of the cryptocurrency exchange
&lt;/h3&gt;

&lt;p&gt;Publication fee. &lt;br&gt;
Buyer creates an escrow account&lt;br&gt;
One of the two parties, either the Buyer or Seller, will initiate the transaction. This process begins when the user inquires about the offering and creates an account on CryptoExchange. With an account set up, the two parties can solidify the terms of their agreement.&lt;br&gt;
Advertisements. Advertising promotion fees, posters, contextual advertising and paid links - all this is used on the site and in the Paxful application to increase the profitability of the platform.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-marketing-strategy"&gt;
  &lt;/a&gt;
  Step 4: Marketing Strategy
&lt;/h3&gt;

&lt;p&gt;The paxful cryptocurrency exchange was launched in 2014 and is a peer-to-peer Bitcoin marketplace, has recently entered India. In the first 21 weeks of 2020, Paxful has recorded a minimum of $1 million in weekly volumes. Since the beginning of May 2020, the weekly traded Bitcoin volumes have grown setting three consecutive all-time highs – with the week ending 17th May recording a total of $1.521 million (ATH).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-development-approaches"&gt;
  &lt;/a&gt;
  Step 5. Development approaches
&lt;/h3&gt;

&lt;p&gt;Template Solution. You can create a crypto exchange like Paxful using ready-made software. You can get it for free, for example, on GitHub, or buy for 300 - 1000 dollars. Free solutions usually have poor functionality and are not well tested for errors and other vulnerabilities. Paxful clones software sold may vary by manufacturer.&lt;br&gt;
Development from scratch. A more complex and expensive option to create a Paxful clone software, but it gives you more control over the development process and allows you to implement unique software solutions. The cost of creating a P2P crypto exchanger from scratch usually varies from 20 to 50 thousand dollars.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-6-get-the-consultation-from-the-experienced-clone-script-providers"&gt;
  &lt;/a&gt;
  Step 6. Get the consultation from the experienced clone script providers
&lt;/h3&gt;

&lt;p&gt;The script is usually developed by well-experienced and qualified experts. They take care of everything from development, design, testing, and deployment, allowing you to focus on just the customization part. There are many advantages involved with purchasing and deploying a Paxful clone script for your business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-benefits-of-paxful-clone-script-to-start-a-p2p-cryptocurrency-exchange-software"&gt;
  &lt;/a&gt;
  The benefits of Paxful clone script to start a P2P cryptocurrency exchange software
&lt;/h2&gt;

&lt;p&gt;• Ready to launch&lt;br&gt;
• Skip development from scratch&lt;br&gt;
• No technical assistance&lt;br&gt;
• Easy customization&lt;br&gt;
• Save time and money&lt;br&gt;
These are benefits you can get to develop a P2P crypto exchange with Paxful clone script.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ylg0X72M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pcsove2j4154zzhxym5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ylg0X72M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pcsove2j4154zzhxym5.png" alt="paxful clone app development"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazing-paxful-clone-app-to-buy-and-sell-cryptos"&gt;
  &lt;/a&gt;
  Amazing Paxful Clone App - To Buy and Sell Cryptos
&lt;/h2&gt;

&lt;p&gt;Paxful Clone App Development Company&lt;br&gt;
Paxful Clone App is the cryptocurrency exchange trading app that contains all the crypto trading features of the Paxful app and also the additional features that help you to develop your own Crypto Exchange App such as Paxful. Ultra-fast transaction permits you trade crypto coins in a matter of seconds with 100+ payment gateway support.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>cryptocurrency</category>
      <category>exchange</category>
    </item>
    <item>
      <title>Best Software Solution Companies To Hire Mulesoft Dvelopers 2021</title>
      <author>Software Services</author>
      <pubDate>Tue, 07 Sep 2021 10:34:23 +0000</pubDate>
      <link>https://dev.to/tkxel/best-software-solution-companies-to-hire-mulesoft-dvelopers-2021-12p9</link>
      <guid>https://dev.to/tkxel/best-software-solution-companies-to-hire-mulesoft-dvelopers-2021-12p9</guid>
      <description>&lt;h2&gt;Tkxel&lt;/h2&gt;

&lt;p&gt;Tkxel is a leading software development company located in Reston, Virginia. We are committed to develop innovative software solutions for leading enterprises in the world, helping them grow their businesses using latest technology solutions. Delivering Industry Leading Integration Solutions.&lt;/p&gt; 

&lt;p&gt;Tkxel help you solve complex integration problems by leveraging our &lt;a href="https://tkxel.com/mulesoft-consulting-services/"&gt;Experts MuleSoft Developers&lt;/a&gt;. Tkxel Provides &lt;a href="https://tkxel.com/mulesoft-consulting-services/"&gt;expert MuleSoft development services&lt;/a&gt;, making your ecosystem more connected and integrated than ever, designing results-driven digital solutions.&lt;/p&gt;

&lt;h2&gt;Avogtal&lt;/h2&gt;

&lt;p&gt;We know you have a business to run, so why focus on the technicalities when you have us to help? Let us find the perfect tech sources for you at the right time and price.&lt;/p&gt;

&lt;p&gt;Everyone wants to show what they can contribute to their profession, and we can help you do that. Participate in an assessment to match your qualifications and skillsets with ideal, career-defining opportunities where you can make a difference.&lt;/p&gt;



&lt;p&gt;Integrate skilled and seasoned &lt;a&gt;Hire Mulesoft developers&lt;/a&gt; from us to connect applications, data, and devices – quickly, efficiently, and cost-effectively. Our Mulesoft experts are skilled at helping businesses to connect their apps on-premise or in the cloud.&lt;/p&gt;

&lt;h2&gt;Appnovation&lt;/h2&gt;

&lt;p&gt;We help businesses advance and inspire, create positive transformation, and champion digital innovation. Look over the horizon of the digital landscape -- that's where we can take you.

&lt;/p&gt;
&lt;li&gt;End-to-end services, endless ideas. &lt;/li&gt;
&lt;br&gt;
&lt;p&gt;With a team of certified experts, Appnovation offers a full range of MuleSoft development services. Our expert MuleSoft developers deliver enterprise level integrations, which work within your existing database, allowing custom applications and results driven solutions. Our developers and consultants can also conduct architectural reviews and platform audits, to understand the API’s and touch points across the application network.&lt;/p&gt;

&lt;p&gt;Whether on-premise or cloud based, we will connect and integrate your application, data source, or API. Our &lt;a href="https://www.appnovation.com/services/mulesoft-development"&gt;expert MuleSoft&lt;/a&gt; enterprise architects design scalable architecture that supports multi-platform integrations, all based on your business requirements.&lt;/p&gt;

&lt;h2&gt;SilverLinecrm&lt;/h2&gt;

&lt;p&gt;The average organization uses 88 applications, with larger organizations using an average of 175 applications.&lt;/p&gt;


&lt;li&gt;That gets unwieldy, fast. &lt;/li&gt;
&lt;br&gt;

&lt;p&gt;For companies trying to deliver a seamless customer experience, working with so many different systems creates disjointed, distributed  customer data. Employees interacting with customers often have to jump from system to system to access the data they need, or simply lack access to it at all. It’s impossible to create a customer-centric experience without the right data in place.&lt;/p&gt;

&lt;p&gt;What organizations need is a way to easily and quickly connect these various systems. They also need a scalable strategy so that they can easily build new integrations as new systems are added to and subtracted from their tech stack.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://silverlinecrm.com/mulesoft/"&gt;Enter MuleSoft&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Girikon&lt;/h2&gt;

&lt;p&gt;We are a Salesforce Consulting Partner dedicated to providing full-suite of MuleSoft development services. Our company is committed to connecting the business applications of our clients through MuleSoft in the cloud or on-premise solutions. By leveraging our specialized MuleSoft consulting services, organizations can turn their data into digital assets through the integration of different systems.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.girikon.com/mulesoft-consulting/"&gt;Girikon MuleSoft consultants&lt;/a&gt; has expertise in developing integration strategies that can help companies get the desired business outcome. So, whether you wish to modernize your systems, systematize core processes, or migrate applications to the cloud, we follow API best-practices to identify, develop and implement solutions that meet the specific needs of your business today, as well as for future projects.&lt;/p&gt;

&lt;p&gt;We create a high-end architectural design and build API networks that pave way for seamless communication among your business applications. Our knowledge and expertise in the MuleSoft platform along with architectural best practices make us well-resourced to manage all types of integration scenarios including the most complex ones.&lt;/p&gt;

&lt;h2&gt;Toptal&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.toptal.com"&gt;Toptal&lt;/a&gt; is a marketplace for top MuleSoft developers, engineers, programmers, coders, architects, and consultants. Top companies and start-ups choose Toptal MuleSoft freelancers for their mission-critical software projects.&lt;/p&gt;

&lt;p&gt;Toptal offers top MuleSoft developers, programmers, and software engineers on an hourly, part-time, or full-time contract basis. Clients include Thumbtack, Bridgestone, and Motorola.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>mulesofthackathon</category>
      <category>aws</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Reading and writing data across different AWS accounts with Amazon Managed Workflows for Apache Airflow v2.x</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Tue, 07 Sep 2021 10:33:12 +0000</pubDate>
      <link>https://dev.to/aws/reading-and-writing-data-across-different-aws-accounts-with-amazon-managed-workflows-for-apache-airflow-v2-x-3319</link>
      <guid>https://dev.to/aws/reading-and-writing-data-across-different-aws-accounts-with-amazon-managed-workflows-for-apache-airflow-v2-x-3319</guid>
      <description>&lt;p&gt;&lt;strong&gt;Reading and writing data across different AWS accounts in you Apache Airflow DAGs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As regular readers will know, I sometimes lurk in the Apache Airflow slack channel to see what is going on. If you are new to Apache Airflow, or want to get a deeper understanding then I highly recommend spending some time here. The community is super welcoming and eager to help new participants.&lt;/p&gt;

&lt;p&gt;It was during a recent session I came across an interesting problem that one of the builders was having, which was how to access (read/write) data in an S3 bucket which was in a different account to the one hosting Amazon Managed Workflows for Apache Airflow (MWAA). &lt;/p&gt;

&lt;p&gt;The rest of this post will be a quick look at the setup, the error that occurred and how to configure MWAA so that you can read/write data confidently across your different AWS accounts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem
&lt;/h3&gt;

&lt;p&gt;A customer was using MWAA 2.0.2, and within their workflow, they were trying to upload data to an S3 bucket in a different AWS account to what their MWAA environment was running in. When they triggered their DAG, they were getting errors such as the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; An error occurred (AccessDenied) when calling the PutObject operation: Access Denied
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To help with troubleshooting, the customer had created a test DAG that would try and read/write files to a sample S3 bucket in three ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;using boto3, the Python SDK for interacting with AWS&lt;/li&gt;
&lt;li&gt;using Apache Airflow operators - airflow.providers.amazon.aws.hooks.s3&lt;/li&gt;
&lt;li&gt;using the pandas Python library - using s3fs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the test DAG that the customer put together&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import logging
import random
from datetime import timedelta
import pandas as pd
import boto3
from airflow.models import Variable
from airflow import DAG
from airflow.operators.python import PythonOperator
from airflow.providers.amazon.aws.hooks.s3 import S3Hook
from airflow.utils.dates import days_ago


def save_file_to_s3():
    n = random.randint(100, 10000)
    filename = f'demo_{n}.csv'
    local_file_path = f'/tmp/{filename}'
    demo_data = pd.DataFrame({'num_legs': [2, 4, 8, 0],
                              'num_wings': [2, 0, 0, 0],
                              'num_specimen_seen': [10, 2, 1, 8]},
                             index=['falcon', 'dog', 'spider', 'fish'])
    demo_data.to_csv(local_file_path, index=False)

    bucket_name = Variable.get('TEST_BUCKET')
    folder_name = Variable.get('TEST_FOLDER')
    s3_key = f'{folder_name}/boto3_{filename}'
    logging.info(f'local_file_path: {local_file_path}, bucket_name: {bucket_name}, key: {s3_key}')

    logging.info('Uploading CSV to S3 with boto3')
    s3 = boto3.resource('s3')
    try:
        s3.meta.client.upload_file(local_file_path, bucket_name, s3_key, ExtraArgs={'ACL': 'bucket-owner-full-control'})
    except Exception as e:
        logging.info(e)
        pass
    logging.info('Done uploading CSV to S3 with boto3')
    logging.info('Uploading CSV to S3 with S3HOOK')
    s3_hook = S3Hook()
    s3_key = f'{folder_name}/s3hook_{filename}'
    try:
        s3_hook.load_file(local_file_path, bucket_name=bucket_name, key=s3_key, acl_policy='bucket-owner-full-control')
    except Exception as e:
        logging.info(e)
        pass
    logging.info('Done uploading CSV to S3 with S3HOOK')

    logging.info('Uploading CSV to S3 with pandas')
    demo_data.to_csv(f's3://{bucket_name}/{folder_name}/pandas_{filename}', index=False)
    logging.info('Done uploading CSV to S3 with pandas')


def run_dag():
    save_file_to_s3()


dag_default_args = {
    'owner': 'airflow',
    'depends_on_past': False,
    'email': ['airflow@example.com'],
    'email_on_failure': False,
    'email_on_retry': False,
    'retries': 0,
    'retry_delay': timedelta(minutes=2)
}

with DAG(
    'demo',
    default_args=dag_default_args,
    description='description',
    schedule_interval="0 10 * * *",
    start_date=days_ago(1),
    tags=['test'],
) as dag:
    test_dag = PythonOperator(
        task_id="test_dag",
        python_callable=run_dag
    )

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What was interesting, was that when they ran the DAG, the boto3 function would write the file to the target S3 bucket, but the other two failed.&lt;/p&gt;

&lt;p&gt;Time to take a closer look.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-approach"&gt;
  &lt;/a&gt;
  The approach
&lt;/h3&gt;

&lt;p&gt;I wanted to see if I could reproduce this issue, so the approach I took was to &lt;/p&gt;

&lt;p&gt;1/ set up an environment running the same version of MWAA as the customer, but initially use an S3 bucket in the SAME account to make sure that everything works as expected, &lt;/p&gt;

&lt;p&gt;2/ setup a new S3 bucket on a different AWS account and repeat to see if I could reproduce the error, &lt;/p&gt;

&lt;p&gt;3/ review CloudTrail and MWAA logs to see if I could identify any issues and fix.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-setup"&gt;
  &lt;/a&gt;
  The setup
&lt;/h3&gt;

&lt;p&gt;The customer was running a standard MWAA 2.0.2 environment in one AWS account, so I quickly provisioned an environment (using my CDK application &lt;a href="https://dev.to/aws/using-aws-cdk-to-deploy-your-amazon-managed-workflows-for-apache-airflow-environment-12cf"&gt;which I have blogged about before&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I deployed the above DAG, and then had to do a couple of things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create a new S3 bucket (in my case, I called this "ricsue-airflow-s3hook" and within this bucket, I created a folder called "s3permissions")&lt;/li&gt;
&lt;li&gt;adjusted the permissions for the MWAA execution role (which you can find by opening up your MWAA environment in the AWS console) to include the new bucket I just created
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
            "Resource": [
                "arn:aws:s3:::airflow-ricsue-cdk-demo/*",
                "arn:aws:s3:::airflow-ricsue-cdk-demo",
                "arn:aws:s3:::ricsue-airflow-s3hook/*",
                "arn:aws:s3:::ricsue-airflow-s3hook"
            ],
            "Effect": "Allow"
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;within the MWAA console, using the Admin menu option in the Apache Airflow UI, I created two new variables: TEST_BUKCET (with a value of "ricsue-airflow-s3hook") and TEST_FOLDER (with a value of "s3permissions")&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once I had completed that, I enabled it and then manually triggered it. It failed with the following error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[2021-09-06 12:36:26,255] {{customer-s3.py:26}} INFO - local_file_path: /tmp/demo_2025.csv, bucket_name: ricsue-airflow-s3hook, key: s3permissions/boto3_demo_2025.csv
[2021-09-06 12:36:26,284] {{customer-s3.py:28}} INFO - Uploading CSV to S3 with boto3
[2021-09-06 12:36:26,429] {{customer-s3.py:35}} INFO - Done uploading CSV to S3 with boto3
[2021-09-06 12:36:26,455] {{customer-s3.py:36}} INFO - Uploading CSV to S3 with S3HOOK
[2021-09-06 12:36:26,487] {{logging_mixin.py:104}} INFO - [2021-09-06 12:36:26,486] {{base_aws.py:368}} INFO - Airflow Connection: aws_conn_id=aws_default
[2021-09-06 12:36:26,545] {{logging_mixin.py:104}} INFO - [2021-09-06 12:36:26,545] {{base_aws.py:179}} INFO - No credentials retrieved from Connection
[2021-09-06 12:36:26,571] {{logging_mixin.py:104}} INFO - [2021-09-06 12:36:26,571] {{base_aws.py:87}} INFO - Creating session with aws_access_key_id=None region_name=None
[2021-09-06 12:36:26,613] {{logging_mixin.py:104}} INFO - [2021-09-06 12:36:26,613] {{base_aws.py:157}} INFO - role_arn is None
[2021-09-06 12:36:26,782] {{customer-s3.py:44}} INFO - Done uploading CSV to S3 with S3HOOK
[2021-09-06 12:36:26,813] {{customer-s3.py:46}} INFO - Uploading CSV to S3 with pandas
[2021-09-06 12:36:26,851] {{taskinstance.py:1482}} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1138, in _run_raw_task
    self._prepare_and_execute_task_with_callbacks(context, task)
  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1311, in _prepare_and_execute_task_with_callbacks
    result = self._execute_task(context, task_copy)
  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1341, in _execute_task
    result = task_copy.execute(context=context)
  File "/usr/local/lib/python3.7/site-packages/airflow/operators/python.py", line 117, in execute
    return_value = self.execute_callable()
  File "/usr/local/lib/python3.7/site-packages/airflow/operators/python.py", line 128, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/usr/local/airflow/dags/customer-s3.py", line 52, in run_dag
    save_file_to_s3()
  File "/usr/local/airflow/dags/customer-s3.py", line 47, in save_file_to_s3
    demo_data.to_csv(f's3://{bucket_name}/{folder_name}/pandas_{filename}', index=False)
  File "/usr/local/lib64/python3.7/site-packages/pandas/core/generic.py", line 3403, in to_csv
    storage_options=storage_options,
  File "/usr/local/lib64/python3.7/site-packages/pandas/io/formats/format.py", line 1083, in to_csv
    csv_formatter.save()
  File "/usr/local/lib64/python3.7/site-packages/pandas/io/formats/csvs.py", line 234, in save
    storage_options=self.storage_options,
  File "/usr/local/lib64/python3.7/site-packages/pandas/io/common.py", line 563, in get_handle
    storage_options=storage_options,
  File "/usr/local/lib64/python3.7/site-packages/pandas/io/common.py", line 315, in _get_filepath_or_buffer
    fsspec = import_optional_dependency("fsspec")
  File "/usr/local/lib64/python3.7/site-packages/pandas/compat/_optional.py", line 109, in import_optional_dependency
    raise ImportError(msg) from None
ImportError: Missing optional dependency 'fsspec'.  Use pip or conda to install fsspec.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whilst the boto3 and Apache Airflow operators had worked, the Python library (pandas) had not. This is because they were not installed on the Apache Airflow worker nodes.&lt;/p&gt;

&lt;p&gt;I amended the requirements text to add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fsspec
s3fs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once uploaded, the MWAA environment had to be updated. This took approx 20 mins, but once it completed, I was then able to trigger the DAG successfully. No errors, and when I looked in the local S3 bucket, I could see the following files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;boto3_demo_9977.csv
s3hook_demo_9977.csv
pandas_demo_9977.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, the first step completed - we have everything working as expected. Now to change the DAG to write those files to an S3 bucket in a different AWS account.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-error"&gt;
  &lt;/a&gt;
  The error
&lt;/h3&gt;

&lt;p&gt;In order to reproduce the same setup as the customer, I had to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create a new S3 bucket in a different AWS account - (in my case, I called this "ricsue-airflow-s3hook-diffawsaccount" and within this bucket, I kept the same folder called "s3permissions")&lt;/li&gt;
&lt;li&gt;I needed to UPDATE the Apache Airflow variable, TEST_BUCKET. From within the Apache Airflow UI, I edited the value to point to this new bucket and the different AWS account.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To make this easier, I had two browsers running with Chrome running my AWS account with MWAA, and Firefox running a different AWS account with just the Amazon S3 bucket.&lt;/p&gt;

&lt;p&gt;Once I had made those changes, I triggered the DAG again. I did not expect ANY of these ways to upload the file to work given that these are two separate AWS accounts, but I wanted to baseline. Sure enough, I got the following error with the DAG failing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[2021-09-06 13:18:54,317] {{customer-s3.py:26}} INFO - local_file_path: /tmp/demo_5839.csv, bucket_name: ricsue-airflow-s3hook-diffawsaccount, key: s3permissions/boto3_demo_5839.csv
[2021-09-06 13:18:54,344] {{customer-s3.py:28}} INFO - Uploading CSV to S3 with boto3
[2021-09-06 13:18:54,479] {{customer-s3.py:33}} INFO - Failed to upload /tmp/demo_5839.csv to ricsue-airflow-s3hook-diffawsaccount/s3permissions/boto3_demo_5839.csv: An error occurred (AccessDenied) when calling the PutObject operation: Access Denied
[2021-09-06 13:18:54,507] {{customer-s3.py:35}} INFO - Done uploading CSV to S3 with boto3
[2021-09-06 13:18:54,531] {{customer-s3.py:36}} INFO - Uploading CSV to S3 with S3HOOK
[2021-09-06 13:18:54,558] {{logging_mixin.py:104}} INFO - [2021-09-06 13:18:54,558] {{base_aws.py:368}} INFO - Airflow Connection: aws_conn_id=aws_default
[2021-09-06 13:18:54,602] {{logging_mixin.py:104}} INFO - [2021-09-06 13:18:54,602] {{base_aws.py:179}} INFO - No credentials retrieved from Connection
[2021-09-06 13:18:54,631] {{logging_mixin.py:104}} INFO - [2021-09-06 13:18:54,631] {{base_aws.py:87}} INFO - Creating session with aws_access_key_id=None region_name=None
[2021-09-06 13:18:54,673] {{logging_mixin.py:104}} INFO - [2021-09-06 13:18:54,673] {{base_aws.py:157}} INFO - role_arn is None
[2021-09-06 13:18:54,792] {{customer-s3.py:42}} INFO - An error occurred (403) when calling the HeadObject operation: Forbidden
[2021-09-06 13:18:54,818] {{customer-s3.py:44}} INFO - Done uploading CSV to S3 with S3HOOK
[2021-09-06 13:18:54,850] {{customer-s3.py:46}} INFO - Uploading CSV to S3 with pandas
[2021-09-06 13:18:56,049] {{taskinstance.py:1482}} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/s3fs/core.py", line 248, in _call_s3
    out = await method(**additional_kwargs)
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/aiobotocore/client.py", line 155, in _make_api_call
    raise error_class(parsed_response, operation_name)
botocore.exceptions.ClientError: An error occurred (AccessDenied) when calling the CreateBucket operation: Access Denied

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1138, in _run_raw_task
    self._prepare_and_execute_task_with_callbacks(context, task)
  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1311, in _prepare_and_execute_task_with_callbacks
    result = self._execute_task(context, task_copy)
  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1341, in _execute_task
    result = task_copy.execute(context=context)
  File "/usr/local/lib/python3.7/site-packages/airflow/operators/python.py", line 117, in execute
    return_value = self.execute_callable()
  File "/usr/local/lib/python3.7/site-packages/airflow/operators/python.py", line 128, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/usr/local/airflow/dags/customer-s3.py", line 52, in run_dag
    save_file_to_s3()
  File "/usr/local/airflow/dags/customer-s3.py", line 47, in save_file_to_s3
    demo_data.to_csv(f's3://{bucket_name}/{folder_name}/pandas_{filename}', index=False)
  File "/usr/local/lib64/python3.7/site-packages/pandas/core/generic.py", line 3403, in to_csv
    storage_options=storage_options,
  File "/usr/local/lib64/python3.7/site-packages/pandas/io/formats/format.py", line 1083, in to_csv
    csv_formatter.save()
  File "/usr/local/lib64/python3.7/site-packages/pandas/io/formats/csvs.py", line 234, in save
    storage_options=self.storage_options,
  File "/usr/local/lib64/python3.7/site-packages/pandas/io/common.py", line 563, in get_handle
    storage_options=storage_options,
  File "/usr/local/lib64/python3.7/site-packages/pandas/io/common.py", line 345, in _get_filepath_or_buffer
    filepath_or_buffer, mode=fsspec_mode, **(storage_options or {})
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/fsspec/core.py", line 438, in open
    **kwargs,
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/fsspec/core.py", line 292, in open_files
    [fs.makedirs(parent, exist_ok=True) for parent in parents]
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/fsspec/core.py", line 292, in &amp;lt;listcomp&amp;gt;
    [fs.makedirs(parent, exist_ok=True) for parent in parents]
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/fsspec/asyn.py", line 88, in wrapper
    return sync(self.loop, func, *args, **kwargs)
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/fsspec/asyn.py", line 69, in sync
    raise result[0]
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/fsspec/asyn.py", line 25, in _runner
    result[0] = await coro
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/s3fs/core.py", line 731, in _makedirs
    await self._mkdir(path, create_parents=True)
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/s3fs/core.py", line 716, in _mkdir
    await self._call_s3("create_bucket", **params)
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/s3fs/core.py", line 268, in _call_s3
    raise err
PermissionError: Access Denied
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see, all three methods failed. Exactly what I expected.&lt;/p&gt;

&lt;p&gt;What was strange was that the customer was not seeing this issue, and was able to write to the target S3 bucket using boto3. Lets see how to reproduce that in my environment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-fix"&gt;
  &lt;/a&gt;
  The fix
&lt;/h3&gt;

&lt;p&gt;Within your Amazon S3 bucket, you have the ability to define bucket policies that allow access to read/write files from other AWS accounts.&lt;/p&gt;

&lt;p&gt;In the NEW AWS account, I created the following bucket policy for the new bucket I had created ("ricsue-airflow-s3hook-diffawsaccount"). This is what I added:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:aws:iam::704533066374:role/mwaa-2-eks-role"
            },
            "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:PutObject*"
            ],
            "Resource": [
                "arn:aws:s3:::ricsue-airflow-s3hook-diffawsaccount/*",
                "arn:aws:s3:::ricsue-airflow-s3hook-diffawsaccount"
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The policy containers the arn of the MWAA execution role for my MWAA environment in my original AWS account, configures allowed actions (in this instance, I have narrowed it down to these actions - GetObject* , GetBucket* , List* , and PutObject* ) and then configured the target S3 buckets resources (here it is all resources under this bucket, but you could also reduce the scope to just certain folders if you wanted to)&lt;/p&gt;

&lt;p&gt;When I saved this, and then re-ran the DAG. Success, it all worked.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[2021-09-06 18:09:15,305] {{customer-s3.py:26}} INFO - local_file_path: /tmp/demo_3455.csv, bucket_name: ricsue-airflow-s3hook-diffawsaccount, key: s3permissions/boto3_demo_3455.csv
[2021-09-06 18:09:15,335] {{customer-s3.py:28}} INFO - Uploading CSV to S3 with boto3
[2021-09-06 18:09:15,499] {{customer-s3.py:35}} INFO - Done uploading CSV to S3 with boto3
[2021-09-06 18:09:15,564] {{customer-s3.py:36}} INFO - Uploading CSV to S3 with S3HOOK
[2021-09-06 18:09:15,592] {{logging_mixin.py:104}} INFO - [2021-09-06 18:09:15,592] {{base_aws.py:368}} INFO - Airflow Connection: aws_conn_id=aws_default
[2021-09-06 18:09:15,632] {{logging_mixin.py:104}} INFO - [2021-09-06 18:09:15,632] {{base_aws.py:179}} INFO - No credentials retrieved from Connection
[2021-09-06 18:09:15,681] {{logging_mixin.py:104}} INFO - [2021-09-06 18:09:15,681] {{base_aws.py:87}} INFO - Creating session with aws_access_key_id=None region_name=None
[2021-09-06 18:09:15,719] {{logging_mixin.py:104}} INFO - [2021-09-06 18:09:15,719] {{base_aws.py:157}} INFO - role_arn is None
[2021-09-06 18:09:15,859] {{customer-s3.py:44}} INFO - Done uploading CSV to S3 with S3HOOK
[2021-09-06 18:09:15,887] {{customer-s3.py:46}} INFO - Uploading CSV to S3 with pandas
[2021-09-06 18:09:16,729] {{customer-s3.py:48}} INFO - Done uploading CSV to S3 with pandas
[2021-09-06 18:09:16,762] {{python.py:118}} INFO - Done. Returned value was: None
[2021-09-06 18:09:16,805] {{taskinstance.py:1192}} INFO - Marking task as SUCCESS. dag_id=demo, task_id=test_dag, execution_date=20210906T180913, start_date=20210906T180914, end_date=20210906T180916
[2021-09-06 18:09:16,901] {{taskinstance.py:1246}} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2021-09-06 18:09:16,943] {{logging_mixin.py:104}} INFO - [2021-09-06 18:09:16,943] {{local_task_job.py:146}} INFO - Task exited with return code 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But wait, that does not describe the customer problem. They could get it working with boto3, so what is going on then?&lt;/p&gt;

&lt;p&gt;I altered the bucket policy so that it had fewer permissions, specifically removing the List* as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:aws:iam::704533066374:role/mwaa-2-eks-role"
            },
            "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:PutObject*"
            ],
            "Resource": [
                "arn:aws:s3:::ricsue-airflow-s3hook-diffawsaccount/*",
                "arn:aws:s3:::ricsue-airflow-s3hook-diffawsaccount"
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And when I re-ran the DAG, boto3 worked, but the S3 Hook and the pandas failed with permissions errors:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[2021-09-06 18:07:11,238] {{customer-s3.py:26}} INFO - local_file_path: /tmp/demo_6465.csv, bucket_name: ricsue-airflow-s3hook-diffawsaccount, key: s3permissions/boto3_demo_6465.csv
[2021-09-06 18:07:11,263] {{customer-s3.py:28}} INFO - Uploading CSV to S3 with boto3
[2021-09-06 18:07:11,420] {{customer-s3.py:35}} INFO - Done uploading CSV to S3 with boto3
[2021-09-06 18:07:11,454] {{customer-s3.py:36}} INFO - Uploading CSV to S3 with S3HOOK
[2021-09-06 18:07:11,481] {{logging_mixin.py:104}} INFO - [2021-09-06 18:07:11,481] {{base_aws.py:368}} INFO - Airflow Connection: aws_conn_id=aws_default
[2021-09-06 18:07:11,547] {{logging_mixin.py:104}} INFO - [2021-09-06 18:07:11,546] {{base_aws.py:179}} INFO - No credentials retrieved from Connection
[2021-09-06 18:07:11,571] {{logging_mixin.py:104}} INFO - [2021-09-06 18:07:11,571] {{base_aws.py:87}} INFO - Creating session with aws_access_key_id=None region_name=None
[2021-09-06 18:07:11,578] {{logging_mixin.py:104}} WARNING - /usr/local/airflow/.local/lib/python3.7/site-packages/watchtower/__init__.py:205 WatchtowerWarning: Failed to deliver logs: None
[2021-09-06 18:07:11,649] {{logging_mixin.py:104}} INFO - [2021-09-06 18:07:11,649] {{base_aws.py:157}} INFO - role_arn is None
[2021-09-06 18:07:11,761] {{customer-s3.py:42}} INFO - An error occurred (403) when calling the HeadObject operation: Forbidden
[2021-09-06 18:07:11,789] {{customer-s3.py:44}} INFO - Done uploading CSV to S3 with S3HOOK
[2021-09-06 18:07:11,817] {{customer-s3.py:46}} INFO - Uploading CSV to S3 with pandas
[2021-09-06 18:07:12,347] {{taskinstance.py:1482}} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/s3fs/core.py", line 248, in _call_s3
    out = await method(**additional_kwargs)
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/aiobotocore/client.py", line 155, in _make_api_call
    raise error_class(parsed_response, operation_name)
botocore.exceptions.ClientError: An error occurred (AccessDenied) when calling the CreateBucket operation: Access Denied

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1138, in _run_raw_task
    self._prepare_and_execute_task_with_callbacks(context, task)
  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1311, in _prepare_and_execute_task_with_callbacks
    result = self._execute_task(context, task_copy)
  File "/usr/local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1341, in _execute_task
    result = task_copy.execute(context=context)
  File "/usr/local/lib/python3.7/site-packages/airflow/operators/python.py", line 117, in execute
    return_value = self.execute_callable()
  File "/usr/local/lib/python3.7/site-packages/airflow/operators/python.py", line 128, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/usr/local/airflow/dags/customer-s3.py", line 52, in run_dag
    save_file_to_s3()
  File "/usr/local/airflow/dags/customer-s3.py", line 47, in save_file_to_s3
    demo_data.to_csv(f's3://{bucket_name}/{folder_name}/pandas_{filename}', index=False)
  File "/usr/local/lib64/python3.7/site-packages/pandas/core/generic.py", line 3403, in to_csv
    storage_options=storage_options,
  File "/usr/local/lib64/python3.7/site-packages/pandas/io/formats/format.py", line 1083, in to_csv
    csv_formatter.save()
  File "/usr/local/lib64/python3.7/site-packages/pandas/io/formats/csvs.py", line 234, in save
    storage_options=self.storage_options,
  File "/usr/local/lib64/python3.7/site-packages/pandas/io/common.py", line 563, in get_handle
    storage_options=storage_options,
  File "/usr/local/lib64/python3.7/site-packages/pandas/io/common.py", line 345, in _get_filepath_or_buffer
    filepath_or_buffer, mode=fsspec_mode, **(storage_options or {})
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/fsspec/core.py", line 438, in open
    **kwargs,
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/fsspec/core.py", line 292, in open_files
    [fs.makedirs(parent, exist_ok=True) for parent in parents]
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/fsspec/core.py", line 292, in &amp;lt;listcomp&amp;gt;
    [fs.makedirs(parent, exist_ok=True) for parent in parents]
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/fsspec/asyn.py", line 88, in wrapper
    return sync(self.loop, func, *args, **kwargs)
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/fsspec/asyn.py", line 69, in sync
    raise result[0]
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/fsspec/asyn.py", line 25, in _runner
    result[0] = await coro
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/s3fs/core.py", line 731, in _makedirs
    await self._mkdir(path, create_parents=True)
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/s3fs/core.py", line 716, in _mkdir
    await self._call_s3("create_bucket", **params)
  File "/usr/local/airflow/.local/lib/python3.7/site-packages/s3fs/core.py", line 268, in _call_s3
    raise err
PermissionError: Access Denied
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, we can close that loop. We now understand under what scenarios this might work (target S3 bucket policy not having the right permissions for the various methods of uploading files) and we can address/solve this as needed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;In this post I showed you how you can set up your S3 buckets so that you can use them to read and write data from your MWAA environment. I showed you how this works whether you are doing this via boto3, using the Apache Airflow S3 operator, or doing this via a third party Python library.&lt;/p&gt;

&lt;p&gt;Please let me know via the comments of any additional questions or comments you have on this post.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>Introducing Magic URL Login to Appwrite</title>
      <author>Torsten Dittmann</author>
      <pubDate>Tue, 07 Sep 2021 10:17:45 +0000</pubDate>
      <link>https://dev.to/appwrite/introducing-magic-url-login-to-appwrite-2l</link>
      <guid>https://dev.to/appwrite/introducing-magic-url-login-to-appwrite-2l</guid>
      <description>&lt;p&gt;Appwrite 0.10 introduces &lt;strong&gt;Magic URL&lt;/strong&gt; as an authentication method, which allows users to create an account without providing a password and login with a URL sent via an E-Mail.&lt;/p&gt;

&lt;p&gt;This feature is especially useful if you want to provide a passwordless authentication process for your application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XwPWEfwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/koceo7503ykvehk3cibc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XwPWEfwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/koceo7503ykvehk3cibc.png" alt="Appwrite Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  ⚙️ Setup
&lt;/h1&gt;

&lt;p&gt;Let's learn how we can add Magic URL Authentication to a Web Application using our &lt;a href="https://appwrite.io/docs/getting-started-for-web"&gt;Web SDK&lt;/a&gt;. The same can be done with our &lt;a href="https://appwrite.io/docs/getting-started-for-flutter"&gt;Flutter SDK&lt;/a&gt; and &lt;a href="https://appwrite.io/docs/getting-started-for-android"&gt;Android SDK&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The first step is to add our Web SDK to our project with NPM like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;appwrite &lt;span class="nt"&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you're using a bundler (like &lt;a href="https://rollupjs.org/"&gt;Rollup&lt;/a&gt; or &lt;a href="https://webpack.js.org/"&gt;webpack&lt;/a&gt;), you can import the Appwrite module when you need it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To install with a CDN (content delivery network) add the following script to your HTML file before you use any Appwrite services:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/appwrite"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to initialize your SDK code with your project ID which can be found in your project settings page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Init your Web SDK&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;appwrite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;appwrite&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost/v1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your Appwrite Endpoint&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;455x34dfkj&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your Appwrite Project ID&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#create-a-magic-url"&gt;
  &lt;/a&gt;
  🎩 Create a Magic URL
&lt;/h1&gt;

&lt;p&gt;Once your SDK is setup, access the &lt;strong&gt;Account service&lt;/strong&gt; and call the &lt;a href="https://appwrite.io/docs/client/account?sdk=web#accountCreateMagicURLSession"&gt;&lt;code&gt;createMagicURLSession()&lt;/code&gt;&lt;/a&gt; method. The method accepts an e-mail address and a redirect URL as arguments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Initiate the Magic URL login&lt;/span&gt;
&lt;span class="nx"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createMagicURLSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name@example.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Success&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Failure&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the &lt;a href="https://appwrite.io/docs/client/account?sdk=web#accountCreateMagicURLSession"&gt;&lt;code&gt;createMagicURLSession()&lt;/code&gt;&lt;/a&gt; method completes without error, the request sends the user an email with a URL containing a secret key for the next step. When the user clicks the link, they are redirected back to the URL you provided with the secret key and userId values attached to the URL query string. This link is valid for 1 hour. If the e-mail passed did not belong to any existing user - this request will also create a user for the passed e-mail address.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#login-with-a-magic-url"&gt;
  &lt;/a&gt;
  🔐 Login with a Magic URL
&lt;/h1&gt;

&lt;p&gt;Now that the user is able to initialize the authentication process, we need to complete it by handling the redirect from the URL provided in the e-mail.&lt;/p&gt;

&lt;p&gt;Use the &lt;a href="https://appwrite.io/docs/client/account?sdk=web#accountUpdateMagicURLSession"&gt;&lt;code&gt;updateMagicURLSession()&lt;/code&gt;&lt;/a&gt; method and call it with the secret and userId values from the URL's query string.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please note that in order to avoid a &lt;a href="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md"&gt;Redirect Attack&lt;/a&gt; the only valid redirect URLs are the ones from domains you have set when adding your platforms in the console interface.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;urlParams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;URLSearchParams&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;urlParams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;userId&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;urlParams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;secret&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateMagicURLSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Success&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Failure&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the &lt;a href="https://appwrite.io/docs/client/account?sdk=web#accountUpdateMagicURLSession"&gt;&lt;code&gt;updateMagicURLSession()&lt;/code&gt;&lt;/a&gt; succeeded, the user is now logged in. Note that once a link is used, it cannot be used again.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  🏁 Conclusion
&lt;/h1&gt;

&lt;p&gt;If you need help or encounter any difficulties setting up Magic URL Login with Appwrite, please &lt;a href="https://appwrite.io/discord"&gt;join our Discord&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  🔖 References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/discord"&gt;Appwrite Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/docs"&gt;Appwrite Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appwrite.io"&gt;Appwrite Homepage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>opensource</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>news</category>
    </item>
    <item>
      <title>Making digital currency; How to create a new cryptocurrency
</title>
      <author>ahmadradindev</author>
      <pubDate>Tue, 07 Sep 2021 10:09:48 +0000</pubDate>
      <link>https://dev.to/ahmadradindev/making-digital-currency-how-to-create-a-new-cryptocurrency-2c7</link>
      <guid>https://dev.to/ahmadradindev/making-digital-currency-how-to-create-a-new-cryptocurrency-2c7</guid>
      <description>&lt;p&gt;In recent years, many startups have made a lot of money by creating a digital currency and selling tokens in the initial public offering. Creating a new digital currency may seem like an impossible process to most people. While making digital currency is possible if you have enough knowledge in this field. In this article, we will introduce you to the methods of making a digital currency and at the end, we will answer some common questions in this regard.&lt;/p&gt;

&lt;p&gt;Why are new digital currencies being created?&lt;br&gt;
Even if virtual money has been available to the public for a long time, Bitcoin is the first known and most successful cryptocurrency in the cryptocurrency market. Many cryptocurrencies have been created today, the most popular of which are Bitcoin, Ripple, and Atrium.&lt;/p&gt;

&lt;p&gt;Some unique features make companies and individuals think about creating cryptocurrencies. The most important features of digital currency are cryptography, security and confidentiality, no need to monitor a central institution, transparency of transactions, fast transactions, and ease of transfer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-difference-between-coins-and-digital-currency-tokens"&gt;
  &lt;/a&gt;
  The difference between coins and digital currency tokens
&lt;/h2&gt;

&lt;p&gt;Some people mistakenly use tokens and quins as synonyms. While Token and Quinn are different. The most important thing that distinguishes a token from a quin is the lack of an independent blockchain. Tokens are created on the platform of other blockchains. But Quinn has an independent blockchain.&lt;/p&gt;

&lt;p&gt;Another important difference between coins and tokens is that coins are used to buy and sell and are considered a method of payment. While most tokens can be used for use in an application or as an asset. Bitcoin, Atrium, Ripple, and Light Coin are the most popular coins in the digital currency market. Tetra, Chainlink, Dai, and Avi are also in the category of tokens.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#digital-currency-making-training-introducing-3-methods"&gt;
  &lt;/a&gt;
  Digital currency making training; Introducing 3 methods
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#method-one-create-a-new-digital-currency-by-creating-tokens"&gt;
  &lt;/a&gt;
  Method one: Create a new digital currency by creating tokens
&lt;/h3&gt;

&lt;p&gt;One way to make digital currency is to create tokens. As we have said, a token is a digital currency that does not have its independent blockchain and has been created and launched in the context of another blockchain. For this reason, when a token is generated, there is no need to work on the rules of consensus.&lt;/p&gt;

&lt;p&gt;Making tokens is cost-effective for blockchain developers because they do not need the astronomical cost of designing a blockchain to achieve their goals. Of course, it is also important to note that many digital currencies, when in their infancy, are implemented on another blockchain platform to save costs, but once they have been sufficiently developed, a dedicated blockchain for They are used to launch.&lt;/p&gt;

&lt;p&gt;The token can be created on all blockchain platforms that use smart contracts. Atrium is one of the most popular token-building platforms. At the time of writing, Atrium has hosted more than 80% of the tokens on the market. Bainenschin, Ias, Kazmas, Thezos, and Theron are other common platforms for making tokens.&lt;/p&gt;

&lt;p&gt;Atrium's programming language is solidity. Solidarity uses concepts that exist in other programming languages ​​such as PHP. It is a high-level programming language that has all the capabilities and capabilities needed for blockchain software.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#method-2-create-digital-currency-by-copying-and-modifying-current-blockchains"&gt;
  &lt;/a&gt;
  Method 2: Create digital currency by copying and modifying current blockchains
&lt;/h3&gt;

&lt;p&gt;Another way to build digital currency is to use open-source blockchains. Open source blocks are made available to the public with programming code after they are created.&lt;/p&gt;

&lt;p&gt;Atrium and Bitcoin programming codes are also open source and can be accessed by anyone on GitHub. Many blockchains have been launched following the example of these two digital currencies. For example, by making a few changes to the Bitcoin blockchain, the LightCoin network is created.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#method-3-create-a-digital-currency-by-creating-a-new-blockchain"&gt;
  &lt;/a&gt;
  Method 3: Create a digital currency by creating a new blockchain
&lt;/h3&gt;

&lt;p&gt;Build digital currency through the new blockchain&lt;br&gt;
Building and designing a blockchain network is another way to create a new digital currency. In a blockchain, data is stored in blocks and forms an interconnected chain. This structure creates an immutable storage system. The blocks are connected using hashes.&lt;/p&gt;

&lt;p&gt;Creating a new blockchain requires deep programming knowledge and a lot of time. In the following, the steps of creating a new digital currency through making blockchain are outlined in general.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Select the consensus mechanism&lt;br&gt;
Consensus mechanisms are protocols for verifying transactions performed in blockchain without the need for a third party (intermediary). Proof of work and the stock proof is currently the most well-known and basic blockchain consensus mechanisms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select the blockchain platform&lt;br&gt;
The correct choice of blockchain platform depends on the consensus mechanism you have chosen. The best blockchain operating systems are:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ethereum&lt;br&gt;
Waves (WAVES)&lt;br&gt;
Hyperledger Fabric&lt;br&gt;
NEM&lt;br&gt;
IBM blockchain&lt;br&gt;
Nxt (NXT)&lt;br&gt;
HydraChain&lt;br&gt;
BlockStarter&lt;br&gt;
BigChainDB&lt;br&gt;
EOS&lt;br&gt;
Quorum&lt;br&gt;
IOTA&lt;br&gt;
CoinList&lt;br&gt;
MultiChain&lt;br&gt;
Open chain&lt;br&gt;
Chain Core&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Design the nodes&lt;br&gt;
You need to decide how the blockchain works and design the nodes accordingly. For example, will the licenses be private or public? Will the hosting be on-premises web systems or cloud systems?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Specify the blockchain architecture&lt;br&gt;
Before launching a digital currency, you need to be sure of all aspects; Because you can not change multiple blockchain parameters after startup. For example, you need to specify what address blockchain will follow to track exchanges of different cryptocurrencies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Design the user interface&lt;br&gt;
If your user interface is not good, the cipher project will fail. You need to make sure you are using the latest version of FTP servers, databases, etc.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#frequently-asked-questions-about-making-new-digital-currencies"&gt;
  &lt;/a&gt;
  Frequently Asked Questions about Making New Digital Currencies
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Does making a digital currency always lead to profitability?&lt;br&gt;
No. More than a few hundred thousand digital currencies have been launched on various platforms, many of which have failed. For this reason, all aspects of work must be well weighed before creating a digital currency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the reason for the failure of some new digital currencies?&lt;br&gt;
Unfortunately, this perspective often causes us to become overwhelmed when it's time to start a new digital currency. That's why we see so many teams being forgotten after spending so much money and energy to create a new digital currency, without gaining popularity. One of the main reasons for their failure is that they failed to do good marketing. Therefore, before any action, the marketing system must be well defined.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the first step in building a new digital currency?&lt;br&gt;
The first step in creating a new digital currency is to have a well-defined digital currency white paper. White paper in the world of digital currencies means a comprehensive and complete report of the problem that the introduced project seeks to solve. Project objectives should be clearly defined within the white paper. A standard and complete white paper include an abstract, introduction, problem definition, product description, technical details, descriptions of the new digital currency, details of the public offering, and introduction of the development team.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How much does it cost to create a new digital currency?&lt;br&gt;
Creating new passwords is not an easy task and will probably require some financial resources; Unless you can handle things like development, documentation, and marketing. The cost of building an encrypted currency depends on several factors, and no specific number can be specified.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding remarks
&lt;/h2&gt;

&lt;p&gt;Creating a new dedicated currency may seem like an attractive and profitable offer at first, but we must not forget that there are many challenges in this direction. For this reason, sufficient market research must be done before any action is taken. On the other hand, the necessary capital must be provided for manufacturing and marketing. Otherwise, the digital currency project is likely to fail in its infancy.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>10 Amazing og:image Inspiration 🎨✨</title>
      <author>Zernonia</author>
      <pubDate>Tue, 07 Sep 2021 10:05:14 +0000</pubDate>
      <link>https://dev.to/zernonia/10-amazing-og-image-inspiration-5h67</link>
      <guid>https://dev.to/zernonia/10-amazing-og-image-inspiration-5h67</guid>
      <description>&lt;p&gt;Designing an eye-capturing &lt;code&gt;og:image&lt;/code&gt; can be easy, and can be difficult.&lt;br&gt;
That's why, let's look at some of the awesome design that I've curated here. But before that, just in case you don't know what is &lt;code&gt;og:*&lt;/code&gt;, here's a small preview of what og can do to display your website beautifully on Facebook.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MoBAExFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bd9c6edpeb1ko47n3j0v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MoBAExFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bd9c6edpeb1ko47n3j0v.png" alt="Facebook display OG"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So, what is og? Well, we will leave it for another article.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#10-list-of-raw-ogimage-endraw-inspiration"&gt;
  &lt;/a&gt;
  10 list of &lt;code&gt;og:image&lt;/code&gt; inspiration
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#saas"&gt;
  &lt;/a&gt;
  SaaS
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-calendly"&gt;
  &lt;/a&gt;
  1. Calendly
&lt;/h3&gt;

&lt;p&gt;As a popular software, &lt;strong&gt;&lt;a href="https://calendly.com/"&gt;Calendly&lt;/a&gt;&lt;/strong&gt; no doubt has one of the most simple and beautiful &lt;code&gt;og:image&lt;/code&gt;. Just a simple screenshot of your landing page is sufficed. If you are building a Software-as-a-Service, this approach is highly encouraged!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BIVXD6IQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/k0lk9kiuza3o/6GX3BEB2StTLRWYuFW9UBj/23d815c203c7f9dbd25a024ce1842ee8/Homepage.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BIVXD6IQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/k0lk9kiuza3o/6GX3BEB2StTLRWYuFW9UBj/23d815c203c7f9dbd25a024ce1842ee8/Homepage.png" alt="Calendly og:image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-billi"&gt;
  &lt;/a&gt;
  2. Billi
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://billi.app/"&gt;Billi&lt;/a&gt;&lt;/strong&gt; is another software that has a beautiful preview link when shared on social media.(Facebook, Twitter, Discord, etc.). The emphasis on &lt;strong&gt;Mobile Device&lt;/strong&gt; as shown in the og already provides the visitors that this is a mobile apps before landing on their websites. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q3eAF4b4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://billi.app/static/img/billi/share.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q3eAF4b4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://billi.app/static/img/billi/share.png" alt="Billi og:image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-notion"&gt;
  &lt;/a&gt;
  3. Notion
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt;&lt;/strong&gt;, is well-known for its minimalistic design, and flexible integrations with a tons of software. The monotone art, with white background style really distinguished them from the other SaaS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KXik0dqK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/card_img/1431822999066316800/vDVmITIR%3Fformat%3Djpg%26name%3Dlarge" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KXik0dqK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/card_img/1431822999066316800/vDVmITIR%3Fformat%3Djpg%26name%3Dlarge" alt="Notion og:image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#portfolio-agencypersonal"&gt;
  &lt;/a&gt;
  Portfolio (Agency/Personal)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#4-unshift"&gt;
  &lt;/a&gt;
  4. Unshift
&lt;/h3&gt;

&lt;p&gt;For a agency/personal website, first impression is always the key to client's heart. When you share your website on social media. &lt;strong&gt;&lt;a href="https://unshift.jp"&gt;Unshift&lt;/a&gt;&lt;/strong&gt; has a very unique design, which intrigued the client/visitor to find out who is the awesome designer behind that banner.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ovpU-fd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unshift.jp/img/common/ogp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ovpU-fd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://unshift.jp/img/common/ogp.png" alt="Unshift og:image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-ali-ali"&gt;
  &lt;/a&gt;
  5. Ali Ali
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://alitwotimes.com/"&gt;AliAli&lt;/a&gt;&lt;/strong&gt;, as a commercials director showcase their masterpiece straight from their &lt;code&gt;og:image&lt;/code&gt;. Check it out!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pGYzlos6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alitwotimes.com/wp-content/themes/aliali/src/assets/img/og-image.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pGYzlos6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alitwotimes.com/wp-content/themes/aliali/src/assets/img/og-image.jpg" alt="Aliali og:image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-julia-johnson"&gt;
  &lt;/a&gt;
  6. Julia Johnson
&lt;/h3&gt;

&lt;p&gt;Another awesome screenshot of landing page as &lt;code&gt;og:image&lt;/code&gt;, who says that style only applicable to SaaS? 😉&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lqBOYUtF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.juliajohnson.com/resources/images/social-share.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lqBOYUtF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.juliajohnson.com/resources/images/social-share.png" alt="Julia John og:image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blog"&gt;
  &lt;/a&gt;
  Blog
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#7-how-many-plants"&gt;
  &lt;/a&gt;
  7. How Many Plants
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://howmanyplants.com/"&gt;How Many Plants&lt;/a&gt;&lt;/strong&gt;, if you are a plant lover, are you intrigued to click on it? I'm sure you do!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2aB5jcZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5f4e8114a9640d4aa2c637c4/606612f5dece3e9f9f64e387_home%2520metatag-export.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2aB5jcZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/5f4e8114a9640d4aa2c637c4/606612f5dece3e9f9f64e387_home%2520metatag-export.png" alt="How many plants og:image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-devto"&gt;
  &lt;/a&gt;
  8. Dev.to
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://dev.to/"&gt;Dev.to&lt;/a&gt;&lt;/strong&gt; is a Developer focused community.&lt;br&gt;
This is not the normal &lt;code&gt;og:image&lt;/code&gt;, this is the dynamic image that auto-generated for every blogpost that has no cover photo. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q8733OBB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hcti.io/v1/image/67314343-007c-423c-93e9-fdfdf20506f8" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q8733OBB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hcti.io/v1/image/67314343-007c-423c-93e9-fdfdf20506f8" alt="Devto og:image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-indiehackers"&gt;
  &lt;/a&gt;
  9. IndieHackers
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.indiehackers.com/"&gt;Indiehackers&lt;/a&gt;&lt;/strong&gt;, let developers and entrepreneur to share they strategies and revenue, thus &lt;code&gt;og:image&lt;/code&gt; design is so awesome in attracting anyone scrolling through social media.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9GzoubZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://storage.googleapis.com/indie-hackers.appspot.com/shareable-images/posts/ab51c3d51c" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9GzoubZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://storage.googleapis.com/indie-hackers.appspot.com/shareable-images/posts/ab51c3d51c" alt="Indiehacker og:image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-daily-dev"&gt;
  &lt;/a&gt;
  10. Daily Dev
&lt;/h3&gt;

&lt;p&gt;Lastly, another dynamic &lt;code&gt;og:image&lt;/code&gt; that showcase the blog easily. Check out &lt;strong&gt;&lt;a href="https://daily.dev/"&gt;Daily Dev&lt;/a&gt;&lt;/strong&gt; to see the awesome design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DNHU9wek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.website-files.com/5e0f1144930a8bc8aace526c/5ef3ba7c65db641419abf576_ffbjjh3yv9u8ue6zp954.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DNHU9wek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.website-files.com/5e0f1144930a8bc8aace526c/5ef3ba7c65db641419abf576_ffbjjh3yv9u8ue6zp954.png" alt="Daily Dev og:image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it!
&lt;/h1&gt;

&lt;p&gt;If you are interested to see more information regarding &lt;code&gt;og:*&lt;/code&gt; (Open Graph Protocol), follow me!!!&lt;/p&gt;

&lt;p&gt;See ya! Cheers!&lt;/p&gt;




</description>
      <category>webdev</category>
      <category>design</category>
      <category>website</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to create a type for complex JSON object in TypeScript?</title>
      <author>Ankit Tanna</author>
      <pubDate>Tue, 07 Sep 2021 10:00:15 +0000</pubDate>
      <link>https://dev.to/ankittanna/how-to-create-a-type-for-complex-json-object-in-typescript-d81</link>
      <guid>https://dev.to/ankittanna/how-to-create-a-type-for-complex-json-object-in-typescript-d81</guid>
      <description>&lt;p&gt;Imagine having to deal with a complex JSON object and still having TypeScript typecheck in place. The complex objects cause us to use &lt;strong&gt;any&lt;/strong&gt; in the code in order to navigate around the Typecheck of TypeScript. &lt;/p&gt;

&lt;p&gt;Sometimes, we may also have to turn off the linter rules in order to make this work.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// eslint-disable-next-line @typescript-eslint/no-explicit-any&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;modifyRecord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{...}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can define our custom types like below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;JSONValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;JSONObject&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;JSONArray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;JSONObject&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;JSONValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;JSONArray&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;JSONValue&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These kind of type is known as Recursive Type Aliases. After TypeScript 3.7 we can also define it in a confined way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;JSONValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;JSONValue&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;JSONValue&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JSONValue circularly references itself.&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

&lt;p&gt;PS: Don't use &lt;strong&gt;any&lt;/strong&gt; in the TypeScript.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>node</category>
      <category>json</category>
    </item>
    <item>
      <title>volcareso.js- A multi talented Javascript library</title>
      <author>volcareso</author>
      <pubDate>Tue, 07 Sep 2021 09:10:23 +0000</pubDate>
      <link>https://dev.to/volcareso/volcareso-js-a-multi-talented-javascript-library-2e40</link>
      <guid>https://dev.to/volcareso/volcareso-js-a-multi-talented-javascript-library-2e40</guid>
      <description>&lt;h1&gt;
  &lt;a href="#volcaresojs"&gt;
  &lt;/a&gt;
  &lt;a href="https://volcareso.github.io/volcareso.js/"&gt;volcareso.js&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A multi talented Javascript library&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#import"&gt;
  &lt;/a&gt;
  IMPORT:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://volcareso.github.io/volcareso.js/volcareso.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#thats-it-the-power-in-your-hands-now"&gt;
  &lt;/a&gt;
  THATS IT! THE POWER IN YOUR HANDS NOW!
&lt;/h5&gt;

&lt;h3&gt;
  &lt;a href="#selection"&gt;
  &lt;/a&gt;
  SELECTION:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;selected element&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// selected element means =&amp;gt; .by_class | #by_id | by_tageName&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  DEMO:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-an-event-listener"&gt;
  &lt;/a&gt;
  ADD AN EVENT LISTENER:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;element&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;eventName&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;i have ears!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#append-or-prepend-stuff"&gt;
  &lt;/a&gt;
  APPEND OR PREPEND STUFF:
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#append"&gt;
  &lt;/a&gt;
  APPEND:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;element&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;appendedText&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#prepend"&gt;
  &lt;/a&gt;
  PREPEND:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;element&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;prepend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;prependedText&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#attributes"&gt;
  &lt;/a&gt;
  ATTRIBUTES:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;element&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;class&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// returns body (or the class specified)&lt;/span&gt;

&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;element&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;class&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo_bar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// sets properties to values&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#changing-css"&gt;
  &lt;/a&gt;
  CHANGING CSS:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;element&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;propertie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;EX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;element&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-align&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#ajax"&gt;
  &lt;/a&gt;
  AJAX:
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#load-remote-file-content"&gt;
  &lt;/a&gt;
  LOAD REMOTE FILE CONTENT:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;element&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://url-to-file.com/TXT.txt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;get&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// sets the innerHTML value to the remote file value (changed the text)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#cookies"&gt;
  &lt;/a&gt;
  COOKIES:
&lt;/h3&gt;

&lt;h5&gt;
  &lt;a href="#set-cookie"&gt;
  &lt;/a&gt;
  SET COOKIE:
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;setCookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hashtag&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;session&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//key, value, expires, path&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#get-cookies"&gt;
  &lt;/a&gt;
  GET COOKIES:
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getCookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//returns "hashtag"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-element"&gt;
  &lt;/a&gt;
  ADD ELEMENT:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;elementToAppendTo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addElm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;idAssigned&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// element added&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#access-using"&gt;
  &lt;/a&gt;
  ACCESS USING:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#idAssigned&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#local-storage"&gt;
  &lt;/a&gt;
  LOCAL STORAGE:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;storage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// action list:&lt;/span&gt;
&lt;span class="c1"&gt;// "clear" clears the local storage&lt;/span&gt;
&lt;span class="c1"&gt;// "get". Gets the iten with specified key&lt;/span&gt;
&lt;span class="c1"&gt;// "set" set the key with the respective value&lt;/span&gt;
&lt;span class="c1"&gt;// "remove" remove the item with the specified key&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#toogle-hide-and-show"&gt;
  &lt;/a&gt;
  TOOGLE HIDE AND SHOW:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.element&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toogle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#read-messages-and-text-in-elements"&gt;
  &lt;/a&gt;
  READ MESSAGES AND TEXT IN ELEMENTS:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;OR&lt;/span&gt; &lt;span class="nx"&gt;READ&lt;/span&gt; &lt;span class="nx"&gt;THE&lt;/span&gt; &lt;span class="nx"&gt;TEXT&lt;/span&gt; &lt;span class="nx"&gt;INSIDE&lt;/span&gt; &lt;span class="nx"&gt;AN&lt;/span&gt; &lt;span class="nx"&gt;ELEMENT&lt;/span&gt;

&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;NOTE: THE ELEMENT SHOULDNT HAVE SOME HTML CODE ELSE THAT WOULS BE ALSO READ!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-collection-basic"&gt;
  &lt;/a&gt;
  DATA COLLECTION (BASIC):
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lang&lt;/span&gt; &lt;span class="c1"&gt;//en_US&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userAgent&lt;/span&gt; &lt;span class="c1"&gt;//Mozilla/5.0 (Linux; Android 6.0.1; Moto G (4)) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Mobile Safari/537.36"&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;os&lt;/span&gt; &lt;span class="c1"&gt;//linux x86_64&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookies&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vender&lt;/span&gt; &lt;span class="c1"&gt;//Google.inc&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;online&lt;/span&gt; &lt;span class="c1"&gt;// true id online&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="c1"&gt;//5.0&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mobileType&lt;/span&gt; &lt;span class="c1"&gt;//4g&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;doNotTrack&lt;/span&gt; &lt;span class="c1"&gt;//true is turned on&lt;/span&gt;

  &lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="c1"&gt;//returns all data in a json format&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#fingerprinting-kind-of"&gt;
  &lt;/a&gt;
  FINGERPRINTING (KIND OF):
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;fingerprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//sets the fingetprint on the user machine&lt;/span&gt;
&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;checkFingerprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// trturns true id the fingerprints are matched (else false)&lt;/span&gt;

&lt;span class="c1"&gt;//example&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;checkFingerprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;not a new user&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;new user&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;fingerprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reusable-components"&gt;
  &lt;/a&gt;
  REUSABLE COMPONENTS:
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#make-a-component"&gt;
  &lt;/a&gt;
  MAKE A COMPONENT:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;recycle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;custom-element&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;p&amp;gt;an element &amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;NOW WHEN YOU DECLARE &lt;code&gt;&amp;lt;custom-element&amp;gt;&amp;lt;/custom-element&amp;gt;&lt;/code&gt;&lt;br&gt;
IT WILL POPULATE WITH THE HTML MARKUP GIVEN IN THE SECOND SECTION&lt;/p&gt;

&lt;p&gt;THIS WAY, YOU CAN REUSE THIS CODE FROM A SINGLE FILE&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#i-know-the-name-is-quite-egoistic-but-i-couldnt-think-of-any-other-name-it-what-you-want"&gt;
  &lt;/a&gt;
  I know the name is quite egoistic but i couldnt think of any other, name it what you want.
&lt;/h5&gt;

&lt;p&gt;:)&lt;/p&gt;

&lt;p&gt;Other links: &lt;a href="https://github.com/volcareso/volcareso.js"&gt;github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>library</category>
      <category>javascript</category>
      <category>frontend</category>
      <category>html</category>
    </item>
    <item>
      <title>Tag-based monorepo docker image build on AWS</title>
      <author>Riteru</author>
      <pubDate>Tue, 07 Sep 2021 09:09:22 +0000</pubDate>
      <link>https://dev.to/teer823/tag-based-monorepo-docker-image-build-on-aws-1bja</link>
      <guid>https://dev.to/teer823/tag-based-monorepo-docker-image-build-on-aws-1bja</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wlbhGeMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dxe1y23s46sc9y4ysqq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wlbhGeMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dxe1y23s46sc9y4ysqq.png" alt="Monorepo to AWS ECR"&gt;&lt;/a&gt;&lt;br&gt;
My team adopted &lt;a href="https://www.atlassian.com/git/tutorials/monorepos"&gt;monorepo&lt;/a&gt; for our backend microservices and we need a simple solution to build docker images so we can use it for test or deploy anywhere. Because we use &lt;a href="https://aws.amazon.com/ecr/"&gt;Amazon Elastic Container Repository (ECR)&lt;/a&gt; to store docker images, I decided to use git tag to trigger docker image build on &lt;a href="https://aws.amazon.com/codebuild/"&gt;AWS CodeBuild&lt;/a&gt; and push it to ECR.&lt;/p&gt;

&lt;p&gt;The condition to trigger build is adding tag &lt;code&gt;service-name/version-number&lt;/code&gt; and push it to GitHub or Bitbucket. AWS CodeBuild will receive webhook and start building new docker image using &lt;code&gt;version-number&lt;/code&gt; provided in tag and push it to ECR. And lastly.... store build artifact in S3.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-repo"&gt;
  &lt;/a&gt;
  The REPO
&lt;/h3&gt;

&lt;p&gt;Firstly, we need a monorepo on GitHub or Bitbucket, I prepared a sample repo with 2 projects at &lt;a href="https://github.com/teer823/monorepo-aws-docker"&gt;https://github.com/teer823/monorepo-aws-docker&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Each projects is just a simple express service with Dockerfile ready to build docker image and include buildspec.yml for AWS CodeBuild to use, however, I also added 2 buildspec file inside buildspec folder to demonstrate that it's possible to separate buildspec.yml file per project as needed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The buildspec.yml file is an instruction for AWS CodeBuild and separated to phases. Here's what I do at each phase.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;pre_build&lt;/strong&gt; extract TAG_VERSION_NUMBER from tag and create version.txt file to store as artifact then login to ECR&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;build&lt;/strong&gt; as the name say... build and tag docker image. Please note that I also add &lt;code&gt;latest&lt;/code&gt; tag here as well, doing so prevent me from using ECR's tag immutability feature.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;post_build&lt;/strong&gt; push docker image to ECR
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: 0.2

phases:
  pre_build:
    commands:
      - echo Pre Build Phase...
      - export TAG_VERSION_NUMBER=$(echo $CODEBUILD_WEBHOOK_TRIGGER | sed 's/.*\///')
      - echo $TAG_VERSION_NUMBER
      - &amp;gt;
        PACKAGE_VERSION=$(cat $REPO_FOLDER/package.json | grep version | head -1 | awk -F: '{print $2}' | sed 's/[",[:space:]]//g')
      - echo $PACKAGE_VERSION &amp;gt; version.txt
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build Phase...
      - cd $REPO_FOLDER
      - docker build -t $IMAGE_REPO_NAME:$TAG_VERSION_NUMBER -t $IMAGE_REPO_NAME:latest .
      - docker tag $IMAGE_REPO_NAME:$TAG_VERSION_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$TAG_VERSION_NUMBER
      - docker tag $IMAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest 
  post_build:
    commands:
      - echo Post Build Phase...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$TAG_VERSION_NUMBER
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
artifacts:
  files:
    - '$REPO_FOLDER/**/*'
    - 'version.txt'
  name: '$IMAGE_REPO_NAME-$TAG_VERSION_NUMBER'
  discard-paths: no
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;For more info about &lt;code&gt;buildspec.yml&lt;/code&gt; please refer to &lt;a href="https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html"&gt;HERE&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#aws-ecr"&gt;
  &lt;/a&gt;
  AWS ECR
&lt;/h3&gt;

&lt;p&gt;As I want to push docker image to ECR, I need to pre-create container repositories for each service beforehand. Just go and create a private repository and please don't enable &lt;strong&gt;Tag immutability&lt;/strong&gt; or build will failed as &lt;code&gt;latest&lt;/code&gt; tag cannot be overwritten. (Or just change the build spec and remove &lt;code&gt;latest&lt;/code&gt; tag)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--phIJjEJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvhlsxf3bnrnpksphkfa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--phIJjEJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvhlsxf3bnrnpksphkfa.png" alt="AWS ECR Create Repo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#aws-s3"&gt;
  &lt;/a&gt;
  AWS S3
&lt;/h3&gt;

&lt;p&gt;We want CodeBuild to store build artifact on AWS S3, so we need to prepare a bucket in advance. Let's create a bucket! (Leave the rest of configuration default or up to you.., i recommend turn on server-side encryption for &lt;em&gt;BEST PRACTICE&lt;/em&gt; reason)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eq0cVTRZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tknd6gyz7byfhhjmuoov.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eq0cVTRZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tknd6gyz7byfhhjmuoov.png" alt="S3 create bucket"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#aws-codebuild"&gt;
  &lt;/a&gt;
  AWS CODEBUILD
&lt;/h3&gt;

&lt;p&gt;Now we have Code Repo , Container Repo, Artifact bucket.. let's create AWS CodeBuild project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Project configuration&lt;/strong&gt; your choices..
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r1l4uyDh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psqynyfbr11c92ie1ql1.png" alt="Config Project"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Source&lt;/strong&gt; connect to your GitHub or Bitbucket and select &lt;em&gt;repository in my GitHub account&lt;/em&gt; and select our monorepo repository. Please note that we need to rely on webhook so public repo won't do.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hq2hOQa1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pakgclklg40w9uziw7kn.png" alt="Config Sourdce"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Primary source webhook events&lt;/strong&gt; Here's what important. Enable webhook by checking the box. And config build condition

&lt;ul&gt;
&lt;li&gt;Build type - Single build&lt;/li&gt;
&lt;li&gt;Event type - PUSH and PULL_REQUEST_MERGED&lt;/li&gt;
&lt;li&gt;Condition - Start build when receiving tag, in HEAD_REF add a regular expression &lt;code&gt;^refs/tags/service-name/([\w\.-]+)$&lt;/code&gt;, don't forget to replace &lt;code&gt;service-name&lt;/code&gt; accordingly.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ewlz5oUu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q6ohu3r6mlywhswi79bs.png" alt="Config Webhook"&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to use other method to trigger build, here's the place to try and modify build condition according to your usecases.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Environment&lt;/strong&gt; I personally prefer Ubuntu, so it's up to you how you want to config your build machine, however what's important for me here are the following&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Privileged&lt;/em&gt; Enable the flag because we want to build docker images
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LXKuqjWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxrrwiq4aorxaomtkrwr.png" alt="Priviledge"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Service role&lt;/em&gt; Select your preferred name, I personally like to reuse the role in same project so I name it with project instead of service and next time I can just select it from existing service role. However, please remember the Role name because we will need it later.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yW2wt16i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owyh4il0gat2d78a0b18.png" alt="Service Role"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Environment Variable&lt;/em&gt; If you noticed in &lt;code&gt;buildspec.yml&lt;/code&gt; earlier, I used some environment variable. you will need to set it here&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS_DEFAULT_REGION - your ECR region&lt;/li&gt;
&lt;li&gt;AWS_ACCOUNT_ID - your ECR account Id&lt;/li&gt;
&lt;li&gt;IMAGE_REPO_NAME - name of ECR remove created above&lt;/li&gt;
&lt;li&gt;REPO_FOLDER - folder name for service we're building&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AIC2GTXg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13yqokgf1efra9oh4c6b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AIC2GTXg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13yqokgf1efra9oh4c6b.png" alt="Environment Variable"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Buildspec&lt;/strong&gt; when using root's &lt;code&gt;buildspec.yml&lt;/code&gt; just select &lt;em&gt;Use a buildspec file&lt;/em&gt; will do. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xJWFMhIW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e78cdxo7gxz3d8x6vyfg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xJWFMhIW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e78cdxo7gxz3d8x6vyfg.png" alt="Default buildspec"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In case you want to try using individual buildspec file, add path to project-buildspec file in Buildspec name field&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JdLkEj3K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xlydegsrx2zdhzilvln.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JdLkEj3K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xlydegsrx2zdhzilvln.png" alt="Custom buildspec file"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Artifacts&lt;/strong&gt; Select Amazon S3 and bucket created above, use Zip packaging and use &lt;code&gt;service-name&lt;/code&gt; as path.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--heYG_gbH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjmtyvm00ljqeeua8eem.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--heYG_gbH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjmtyvm00ljqeeua8eem.png" alt="Build Artifact"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hit &lt;em&gt;Create build project&lt;/em&gt; and we're done...then add another one for 2nd service.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#permission"&gt;
  &lt;/a&gt;
  PERMISSION
&lt;/h3&gt;

&lt;p&gt;One last step before start tagging and building. our service role don't have permission to push docker image to ECR yet. so we need to add it in IAM. Go to your Role created above and Attach Managed Policy name &lt;code&gt;AmazonEC2ContainerRegistryPowerUser&lt;/code&gt; to our role and Done!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rp2oFvc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adj73us7a8114avqkn9a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rp2oFvc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adj73us7a8114avqkn9a.png" alt="IAM Role Allow ECR"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#tagging-time"&gt;
  &lt;/a&gt;
  TAGGING TIME!
&lt;/h3&gt;

&lt;p&gt;Now it's time to add tag to monorepo and push it to origin&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;❯ git tag ingest-service/0.1.0
❯ git push origin ingest-service/0.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Go back to CodeBuild project and see it work!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0gIy5qxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7vs2c1wtmu7sop4xbcj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0gIy5qxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7vs2c1wtmu7sop4xbcj.png" alt="Build in progress"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When building complete, find your new docker image in ECR!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--87k9YiLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7nt1362uv86p0rd3iv3t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--87k9YiLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7nt1362uv86p0rd3iv3t.png" alt="New Docker Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;That's all about it. I hope this is useful for anyone looking to make a simple build pipeline like my team :)&lt;/p&gt;

</description>
      <category>aws</category>
      <category>monorepo</category>
      <category>devops</category>
      <category>docker</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 21, Hello world in Tkinter !</title>
      <author>Aatmaj</author>
      <pubDate>Tue, 07 Sep 2021 09:06:02 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-21-hello-world-in-tkinter-g1n</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-21-hello-world-in-tkinter-g1n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-write-hello-world-in-tkinter"&gt;
  &lt;/a&gt;
  Today we will write hello world in Tkinter 🤘
&lt;/h2&gt;




&lt;blockquote&gt;
&lt;p&gt;Recap: Tkinter is an inbuilt python library for handling GUI. More about it &lt;a href="https://dev.to/aatmaj/learning-python-intermediate-course-day-17-tkinter-a-fast-and-easy-way-to-create-gui-applications-1if"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-blank-window"&gt;
  &lt;/a&gt;
  Creating a blank window
&lt;/h3&gt;

&lt;p&gt;First we will create a blank window in Tkinter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200+100+100'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9weQjWjR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uryxfpihfrh9gikays34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9weQjWjR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uryxfpihfrh9gikays34.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Explanation-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;import tkinter&lt;/code&gt; We first import Tkinter. We can also use &lt;code&gt;import tkinter as tk&lt;/code&gt; or &lt;code&gt;from tkinter import *&lt;/code&gt; to reduce the typing 'tkinter.abc()' everytime.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;master=Tk()&lt;/code&gt; Create an instance of Tkinter frame or window. Here 'master' is an instance of the window object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;master.geometry('400x200+100+100')&lt;/code&gt; Set the geometry of Tkinter frame. We will understand what the parameters mean in a moment.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#setting-the-geometry"&gt;
  &lt;/a&gt;
  Setting the geometry.
&lt;/h4&gt;

&lt;p&gt;The geometry attribute of the Tkinter consists of four parts. The first two parts (separated by &lt;code&gt;x&lt;/code&gt;) denote the dimensions of the frame. Changing these values will change the default dimensions of the frame.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_qsbnk7x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebq0vk0zfiud0dfj1j1z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_qsbnk7x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebq0vk0zfiud0dfj1j1z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6FtCEoZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/plyezo1dwtr33z677r7j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6FtCEoZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/plyezo1dwtr33z677r7j.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next two parameters (separated by +) represent the coordinates at which the frame appears on your screen. We can skip these two parameters and go by the default values.  Although we can resize and reposition the frame using the cursor, presetting values of the frame helps while setting the user experience.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#setting-title-to-the-frame"&gt;
  &lt;/a&gt;
  Setting title to the frame.
&lt;/h3&gt;

&lt;p&gt;Till now, the frame had  the default title as 'tk'. We will now change the title to 'My First Program'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tkinter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'300x100'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"My First Program"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JFuyM4gU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1akl11pqz9d43fn5ay7m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JFuyM4gU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1akl11pqz9d43fn5ay7m.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#adding-text-to-the-window"&gt;
  &lt;/a&gt;
  Adding text to the window.
&lt;/h4&gt;

&lt;p&gt;We can add text to the window using the label widget. The label widget here takes two parameters. One of them is the text we want to input while other is the instance of the frame. (that is the &lt;code&gt;Tk()&lt;/code&gt; instance). After we do that, we then need to place the widget in a proper coordinate on the frame. We do that using the &lt;code&gt;place()&lt;/code&gt; attribute. The place attribute takes two inputs, the x and the y values of the coordinates. &lt;code&gt;place(x = 150, y = 150)&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tkinter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'300x300'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"My First Program"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tkinter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Hello world"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;place&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OIiMG3ej--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hfeorjvm4170kodbem6a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OIiMG3ej--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hfeorjvm4170kodbem6a.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Forgetting the place() attribute will not display the text &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3MZIvn1q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dziorbl0oocirm4dstm9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3MZIvn1q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dziorbl0oocirm4dstm9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;So friends we have successfully understood and completed the 'Hello world' program in Tkinter! More exciting UI to come, as the journey continues...&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
