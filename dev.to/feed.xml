<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Get In-app Messaging Right</title>
      <author>Christian Nwamba</author>
      <pubDate>Mon, 20 Dec 2021 14:26:56 +0000</pubDate>
      <link>https://dev.to/codebeast/how-to-get-in-app-messaging-right-3nf2</link>
      <guid>https://dev.to/codebeast/how-to-get-in-app-messaging-right-3nf2</guid>
      <description>&lt;h1&gt;
  &lt;a href="#how-to-get-inapp-messaging-right"&gt;
  &lt;/a&gt;
  How to Get In-app Messaging Right
&lt;/h1&gt;

&lt;p&gt;If you build apps that rely on continuously engaging with the customer, there are chances that shipping the finished app is not enough to drive that engagement. I am sure you have been on a shopping site that offered you discounts because you added a product to cart.&lt;/p&gt;

&lt;p&gt;When such cart campaigns are done right, it makes a difference on whether you purchase more item or not. If done wrong, it could lead to a terrible experience that might cost you a customer.&lt;/p&gt;

&lt;p&gt;Here’s an example of such experience and we are going to use it as example for this article.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/R_1R9WXtjTg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;And here’s a &lt;a href="https://github.com/christiannwamba/in-app-cart"&gt;GitHub repo&lt;/a&gt; if you want to build along.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#push-notification-vs-inapp-messaging"&gt;
  &lt;/a&gt;
  Push Notification vs In-App Messaging
&lt;/h2&gt;

&lt;p&gt;It is easy to confuse the difference between push notification and in-app messaging.&lt;/p&gt;

&lt;p&gt;Let’s say you hypothetically have an app called Popper on your phone. If your phone is idle and you get a message from Popper, that is a push notification. On the contrary, if you’re scrolling through feeds on Popper and a notification slides in from the top or bottom, that is likely an in-app message.&lt;/p&gt;

&lt;p&gt;With push notifications, the app needs to ask for permission to send a message to the user. The user must have given the app the permission to send messages. Permissions are REQUIRED (at least for iOS and Android) to send push notifications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6JLxM02o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/330bpj6diprnvia33k8r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6JLxM02o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/330bpj6diprnvia33k8r.png" alt="A push notification" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a developer, in-app messaging is your land of freedom. You do not need permissions to do anything. Its your app, so your rules! The only downside is that you can only show it when a customer is on the app. That said, this unlimited amount of freedom can be easily abused.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FUaqIYLa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8j3jjmvbgui0afazdcuu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FUaqIYLa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8j3jjmvbgui0afazdcuu.png" alt="An image of in-app notification" width="428" height="926"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-you-need-a-cloud-service-for-inapp-messaging"&gt;
  &lt;/a&gt;
  Why do you need a cloud service for in-app messaging
&lt;/h2&gt;

&lt;p&gt;Since its your world, your rules, your app, you can do things however you want without relying on the device, on a service, etc. To be honest, that is true. But we are not only talking about messaging, we are also talking about getting it right.&lt;/p&gt;

&lt;p&gt;You can have a global event in your app that listens to users’ actions and shows pop ups based on those actions. But how do you know which users have interacted with the pop up? How do you segment users that responded negatively and positively? How do you give control to marketing department to send in-app messaging if they don’t have developers?&lt;/p&gt;

&lt;p&gt;These questions will force you to build a service from scratch but you don’t have to. Amplify’s in-app messaging uses Amazon Pinpoint Analytics services to provide the toolset you need. With this option you can add in-app messaging in a short period of time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-inapp-messaging-right"&gt;
  &lt;/a&gt;
  How to get in-app messaging right
&lt;/h2&gt;

&lt;p&gt;It’s 2021 and everybody hates unsolicited notifications but there is a few reason you wouldn’t mind that one message:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Segmentation and timing&lt;/li&gt;
&lt;li&gt;Native experience&lt;/li&gt;
&lt;li&gt;Product pairing&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Segmentation and timing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you segment users, they feel special. Here’s what I mean — if I put you in a segment called musician because you bought a piano, you will feel special when I inform you that a guitar is now 50% off.&lt;/p&gt;

&lt;p&gt;It wouldn’t make sense to tell you that basketballs are 50%. From my perspective as the business, I just wanted to inform my customers. From my customer’s perspective, the customer doesn’t care about basketballs.&lt;/p&gt;

&lt;p&gt;Segmentation without timing is also annoying and sometimes customers can feel attacked. Don’t just ask me to buy guitars for 50%, one hour after buying a piano. Space it, give me time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Native experience&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FUaqIYLa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8j3jjmvbgui0afazdcuu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FUaqIYLa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8j3jjmvbgui0afazdcuu.png" alt="An image of in-app notification showing native features" width="428" height="926"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one seems to be a no-brainer but because in-app messaging is one of those afterthought feature, most of them look like they were not thought through. You can’t have a dark mode checkout with a message confirmation button that is in light mode.&lt;/p&gt;

&lt;p&gt;Make your interfaces and also the experience feel consistent with reference to all other features in your app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Product pairing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Product pairing is similar to segmentation but goes one level deeper. In segmentation we talked about offering a customer 50% off a guitar because they bought a piano. Product pairing works better when they have not checked out.&lt;/p&gt;

&lt;p&gt;For pairing to work well, you have to ensure that the paired products solve a problem for the user. Pair guitars with tuners, karaoke boxes with singing courses, swimsuits with towels, you get the point.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#inapp-messaging-with-amplify"&gt;
  &lt;/a&gt;
  In-app Messaging with Amplify
&lt;/h2&gt;

&lt;p&gt;In-app messaging is now natively available in Amplify and here are the steps to set it up:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create an Amplify project with Pinpoint Analytics enabled&lt;/li&gt;
&lt;li&gt;Attach IAM policy to Pinpoint&lt;/li&gt;
&lt;li&gt;Create campaigns and segments&lt;/li&gt;
&lt;li&gt;Dispatch and listen to in-app messages&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can setup in-app messaging for any kind of frontend/mobile framework that is supported by Amplify. Currently, there are UI components for only React Native but you can write custom components for other frameworks. The demo will be based on React so I will show you how to create a custom UI for notifications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-an-amplify-project"&gt;
  &lt;/a&gt;
  Create an Amplify Project
&lt;/h2&gt;

&lt;p&gt;Create a new project and run the init command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;amplify init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are not familiar with how to set up an Amplify project, refer to the &lt;a href="https://docs.amplify.aws/start/q/integration/react/"&gt;Getting Started&lt;/a&gt; docs to get you up to speed.&lt;/p&gt;

&lt;p&gt;Run the following command to add Amazon Pinpoint to your project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;amplify add analytics
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When asked to choose a provider, select &lt;strong&gt;Amazon Pinpoint&lt;/strong&gt;. Choose the default answers for the rest of the questions.&lt;/p&gt;

&lt;p&gt;Push your Amplify setup to the cloud with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;amplify push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Amplify will generate an &lt;code&gt;aws-exports.js&lt;/code&gt; file in your &lt;code&gt;src&lt;/code&gt; folder. Your AWS credentials are stored here and Amplify libraries need it when making requests. Add the following before the closing curly braces:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;const awsmobile &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  ...
  &lt;span class="s2"&gt;"Notifications"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"InAppMessaging"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"AWSPinpoint"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"appId"&lt;/span&gt;: &lt;span class="s2"&gt;"&amp;lt;pinpoint-project-id&amp;gt;"&lt;/span&gt;,
        &lt;span class="s2"&gt;"region"&lt;/span&gt;: &lt;span class="s2"&gt;"&amp;lt;aws-region&amp;gt;"&lt;/span&gt;,
      &lt;span class="o"&gt;}&lt;/span&gt;,
    &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can get the Pinpoint project ID by going to &lt;a href="https://console.aws.amazon.com/pinpoint/home"&gt;Pinpoint home&lt;/a&gt; in your AWS console. You should see the project you just created on the list:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp6XSk77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_5C0B640499F176D9B52FC4679D8241FE3E95A4140E1F6CC9D6AAD7FC7A76F910_1638335618521_CleanShot%2B2021-12-01%2Bat%2B09.12.552x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp6XSk77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_5C0B640499F176D9B52FC4679D8241FE3E95A4140E1F6CC9D6AAD7FC7A76F910_1638335618521_CleanShot%2B2021-12-01%2Bat%2B09.12.552x.png" alt="Pinpoint console" width="880" height="251"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;region&lt;/code&gt; should be the same value as the generated value for &lt;code&gt;aws_mobile_analytics_app_region&lt;/code&gt; in the &lt;code&gt;aws-exports.js&lt;/code&gt; file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-and-attach-iam-policy-to-pinpoint"&gt;
  &lt;/a&gt;
  Create and Attach IAM Policy to Pinpoint
&lt;/h2&gt;

&lt;p&gt;Next you need to grant your users access to the Pinpoint service you have just created. This step will end up being baked into the automatic process for you. So you won’t have to do it manually.&lt;/p&gt;

&lt;p&gt;That said, you need to create it in the AWS console by following &lt;a href="https://docs.amplify.aws/lib/in-app-messaging/prerequisites/q/platform/js/#create-and-attach-iam-policy"&gt;these steps&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-campaigns-and-segments"&gt;
  &lt;/a&gt;
  Create Campaigns and Segments
&lt;/h2&gt;

&lt;p&gt;This is the most important step for setting up in-app messaging. We talked about segmentation at the beginning of the article and why it is very important for conversion. This step shows how to set segmentation up.&lt;/p&gt;

&lt;p&gt;From &lt;a href="https://console.aws.amazon.com/pinpoint/home"&gt;Pinpoint home&lt;/a&gt;, select the Pinpoint project you have just created. Next click &lt;strong&gt;Campaigns&lt;/strong&gt; from the sidebar menu and click the &lt;strong&gt;Create a campaign&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JYKkfqnJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.amplify.aws/images/lib/in-app-messaging/create-pinpoint-campaign.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JYKkfqnJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.amplify.aws/images/lib/in-app-messaging/create-pinpoint-campaign.png" alt="Create pinpoint campaign" width="880" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give the Campaign a name, choose &lt;strong&gt;in-app messaging&lt;/strong&gt; as the channel and click next:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fjtmLiG4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_5C0B640499F176D9B52FC4679D8241FE3E95A4140E1F6CC9D6AAD7FC7A76F910_1638336697944_CleanShot%2B2021-12-01%2Bat%2B09.31.052x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fjtmLiG4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_5C0B640499F176D9B52FC4679D8241FE3E95A4140E1F6CC9D6AAD7FC7A76F910_1638336697944_CleanShot%2B2021-12-01%2Bat%2B09.31.052x.png" alt="" width="880" height="374"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the Choose a segment page, choose &lt;strong&gt;Create a segment&lt;/strong&gt; and give the segment a name. Click &lt;strong&gt;Next&lt;/strong&gt; afterwards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--evo6aJ_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_5C0B640499F176D9B52FC4679D8241FE3E95A4140E1F6CC9D6AAD7FC7A76F910_1638336863633_CleanShot%2B2021-12-01%2Bat%2B09.33.542x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--evo6aJ_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_5C0B640499F176D9B52FC4679D8241FE3E95A4140E1F6CC9D6AAD7FC7A76F910_1638336863633_CleanShot%2B2021-12-01%2Bat%2B09.33.542x.png" alt="Create a segment for the campaign" width="880" height="172"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the Create your message page, choose &lt;strong&gt;Create a new in-app message&lt;/strong&gt;. This is where you can customize your UI components. As you customize the UI, you will get a preview on the phone screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vNa2S4BY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_5C0B640499F176D9B52FC4679D8241FE3E95A4140E1F6CC9D6AAD7FC7A76F910_1638336993111_image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vNa2S4BY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_5C0B640499F176D9B52FC4679D8241FE3E95A4140E1F6CC9D6AAD7FC7A76F910_1638336993111_image.png" alt="Customize the UI for the campaign" width="880" height="418"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What makes Pinpoint great is that anyone without a developer experience can create campaigns and messages for those campaigns. Someone from marketing department can customize this as deep as what the message looks like.&lt;/p&gt;

&lt;p&gt;The last step is to create an event. This event is what you dispatch from your app to notify Amplify that a user has perfomed an action to trigger the in-app notification.&lt;/p&gt;

&lt;p&gt;Give the event a name and optionally choose some attributes that can trigger this campaign:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k-0DRgxY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhkibqao52kxl9jq4feh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k-0DRgxY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhkibqao52kxl9jq4feh.png" alt="Set event that will trigger the campaign" width="880" height="250"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the example above, I want the cart_event to be triggered only when the event payload object contains a name property with a value that contains any of the above attribute values.&lt;/p&gt;

&lt;p&gt;Scroll down to choose the start and end date for the campaign and select the timezone for the time you’ve set:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y73AHsmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5j4q6dnoj7fwp5fnrmw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y73AHsmZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5j4q6dnoj7fwp5fnrmw.png" alt="Set start and end date for campaign" width="880" height="312"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click Next and the console will show you a page to review the campaign. Click the &lt;strong&gt;Launch Campaign&lt;/strong&gt; button at the bottom right of the review page. The date must be 15mins in the future so you will get a validation error if the time is ealiar.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dispatch-and-listen-to-inapp-messages"&gt;
  &lt;/a&gt;
  Dispatch and Listen to in-App Messages
&lt;/h2&gt;

&lt;p&gt;To the fun part!&lt;/p&gt;

&lt;p&gt;Install Amplify library, In-app UI library and other supporting dependencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;aws-amplify@in-app-messaging aws-amplify-react-native@in-app-messaging amazon-cognito-identity-js @react-native-community/netinfo @react-native-async-storage/async-storage @react-native-picker/picker react-native-get-random-values react-native-url-polyfill
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setup the required polyfills and configure the library with the &lt;code&gt;aws-exports&lt;/code&gt; config in the &lt;code&gt;App.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native-get-random-values&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native-url-polyfill/auto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppRegistry&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;appName&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Amplify&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;awsExports&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/aws-exports&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Amplify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;awsExports&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;AppRegistry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;registerComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;appName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;App.js&lt;/code&gt; component, tell Amplify to sync in-app messages between Pinpoint and the app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*
Summarized version of:
https://github.com/christiannwamba/in-app-cart/blob/master/App.js
*/&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Notifications&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Notifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;InAppMessaging&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;syncMessages&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You also need to wrap your tree with the &lt;code&gt;InAppMessagingProvider&lt;/code&gt; and render &lt;code&gt;InAppMessageDisplay&lt;/code&gt; component. This is how the UI library knows to show the user a message when an event is triggered:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*
Summarized version of:
https://github.com/christiannwamba/in-app-cart/blob/master/App.js
*/&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;InAppMessagingProvider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;InAppMessageDisplay&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify-react-native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Notifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;InAppMessaging&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;syncMessages&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;InAppMessagingProvider&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;NavigationContainer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Screen&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;HomeScreen&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{({&lt;/span&gt; &lt;span class="nx"&gt;navigation&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
              &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Shop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;headerRight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CartIcon&lt;/span&gt;
                  &lt;span class="nx"&gt;onPress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;navigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;navigate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cart&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
                  &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;})}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Screen&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cart&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;CartScreen&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Screen&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Product&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ProductScreen&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Stack.Navigator&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/NavigationContainer&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;InAppMessageDisplay&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/InAppMessagingProvider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you call &lt;code&gt;syncMessages()&lt;/code&gt;, Amplify will start asking Pinpoint for all the messages that has been created if any. You want to call this function as early as possible in your app. That’s why I am calling it at the top of the component tree.&lt;/p&gt;

&lt;p&gt;Here is how to dispatch and listen to events from your app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*
Summarized version of:
https://github.com/christiannwamba/in-app-cart/blob/master/screens/ProductScreen.js
*/&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ProductScreen&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;navigation&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;productId&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setProduct&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;inCart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setInCart&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fetchProduct&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;models&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;DataStore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ProductModel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;productId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cartItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;DataStore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Cart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;eq&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;productId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;setProduct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;models&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;setInCart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="nx"&gt;cartItem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;fetchProduct&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;productId&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addToCart&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;DataStore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Cart&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;productId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cart_event&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;Analytics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;setInCart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you call the &lt;code&gt;record&lt;/code&gt; function, you have to give it an object that contains the event name you created when you created the campaign. Notice how I’ve also set the prduct name attributes. Unless the attribute matches the attribute you set in your Pinpoint dashboard, this event will not fire. Once the event is dispatched, Pinpoint keeps a record of it and also notifies all active listeners.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/R_1R9WXtjTg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As a recap, remember to segment your users based on their behavior and customize your UI so it feels native to your customers.  Amplify gives you the tools you need to &lt;a href="https://docs.amplify.aws/lib/in-app-messaging/identify-user/q/platform/js/"&gt;identify users&lt;/a&gt; based on the data you’ve collected from them. Take advantage of the feature when segmenting users.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clean-up"&gt;
  &lt;/a&gt;
  Clean up
&lt;/h3&gt;

&lt;p&gt;Now that you have finished this walkthrough, we recommend that you delete your Amplify app if you aren’t going to use it anymore. This ensures that your resources won’t be abused in the event that someone gains access to your project’s credentials.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bg36j9bZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsz0ghur6g6ezx5eotre.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bg36j9bZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsz0ghur6g6ezx5eotre.png" alt="Alt text: Screen capture of an Amplify app’s console and its delete button" width="880" height="134"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To delete all of the local Amplify associated files and the Amplify project in the backend, go to your Amplify console, select the app you want to delete, and expand the dropdown in the top right to delete your app.&lt;/p&gt;

&lt;p&gt;Alternatively, you can run the following command in your working directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;`amplify delete`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;This action cannot be undone. Once the project is deleted, you cannot recover it and will have to reconfigure the categories and the project configuration files if you need to use the project again.&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Elixir in the eyes of Node.js developer</title>
      <author>Łukasz Czyszczonik</author>
      <pubDate>Mon, 20 Dec 2021 13:50:33 +0000</pubDate>
      <link>https://dev.to/czystyl/elixir-in-the-eyes-of-nodejs-developer-fee</link>
      <guid>https://dev.to/czystyl/elixir-in-the-eyes-of-nodejs-developer-fee</guid>
      <description>&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@kaizennguyen?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Kaizen Nguyễn&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;I got into Elixir some time ago, but at that time, I was more interested in statically typed languages. I didn't exclude Elixir at that time, but instead, I moved it to a second plan. One of the signals to give Elixir a try was the talk from &lt;em&gt;Saša Jurić - The Soul of Erlang and Elixir&lt;/em&gt;. I highly recommend watching this talk. I discovered that the BEAM VM and Elixir features could offer many benefits. So I decided to try and see how all the pieces are working together in an actual application. I'd like to share some critical ecosystem points that convinced me to try.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Community&lt;/strong&gt; &lt;br&gt;
One of the first things that I noticed when I started was the community libraries. Almost all the libraries shared the same structure and had all the API interfaces generated along with the type spec. So I searched for a few libraries that I often use, like web framework, GraphQL implementation or Database management. I can say that all of them look solid, and the documentation also contains a lot of guidelines, so I didn't need to leave the page to have a good understanding of them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Phoenix framework&lt;/strong&gt;&lt;br&gt;
The Phoenix is a web framework that makes building web servers easy and fast. Great thing is that Phoenix has a built-in code generator. This generator is done via the mix task and you can generate almost all needed parts for creating an endpoint, context or database schema. Additionally, the documentation and guidelines described in the next point make you much more comfortable in the first place.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Testing and documentation&lt;/strong&gt;&lt;br&gt;
When looking back on different projects, documentation and testing are some of the forgotten things during development. Within the Elixir, those things are built in the language, making a considerable change for development and maintenance. You can write the documentation and examples right next to the code, and as we advance, you can turn these examples into quick tests. It was a nice thing that convinced me to write more tests and documentation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GenServer&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
The GenServer allows you to abstract logic around small services. For example, all these services might have a separate state and business logic encapsulated inside. The service code is executed as a lightweight BEAM process, which is fast compared to standalone microservice solutions. Therefore, you do not need any extra HTTP layer or queue to communicate within the service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Type system, pattern matching and language itself&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
I need to say that I'm a big fan of statically typed languages. So, when I heard about the Elixir for the first time, missing a type system was a big downside for me. Also, I understand that making such a dynamic language static would be a big challenge. To fill this gap, I used Dialixir and Typespecs. The experience is slightly different, but you have some tangibility of the type system, called success typing.&lt;/p&gt;

&lt;p&gt;Elixir has a functional language style that fits my personality best, but everyone can feel differently. On top of this, you have a great set of language features like With statements, function guards, the pipe operator and excellent pattern matching.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;BEAM virtual machine&lt;/strong&gt;&lt;br&gt;
I think it was one of the biggest deal-breaker for using the Elixir heavier. The BEAM architecture, combined with the language features described above, make it a great combo! &lt;br&gt;
The virtual machine is responsible for running your code in small, cheap and fast processes. One of the philosophies that are coming from Erlang is &lt;code&gt;Let it fail&lt;/code&gt;. The philosophy allows writing the system that is working more consistently and reliably. I could compare this to our systems like Linux, Windows or macOS. The system is working, but some programs that we installed are crashing from time to time, but usually, your system is still working, and only what you have to do is open your program once again. Like BEAM VM, one process might crash, but the whole system is still working as usual. &lt;/p&gt;

&lt;p&gt;Overall, I feel surprised how good working with Elixir was. One of the gaps is the lack of a static type system. To fill this gap, I used Credo, Dialixir and TypeSpecs to analyze the codebase statically. The language features make writing the code quicker, easier and cleaner to maintain. For example, built-in documentation and testing might turn your codebase into an environment that is a pleasure to work with. The last piece of this whole stack is that all of this runs on BEAM VM, which is the cherry on the cake! So I need to say that the lack of a static type system is no longer a significant disadvantage with such a combo! &lt;/p&gt;

&lt;p&gt;It is the first blog about my elixir journey, and I plan to share more detailed knowledge soon in my next blog.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>elixir</category>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Mistakes I want to Overcome  in my Software Engineering Journey in 2022</title>
      <author>Joseph Mania</author>
      <pubDate>Mon, 20 Dec 2021 13:44:25 +0000</pubDate>
      <link>https://dev.to/techmaniacc/mistakes-i-want-to-overcome-in-my-software-engineering-journey-in-2022-28c4</link>
      <guid>https://dev.to/techmaniacc/mistakes-i-want-to-overcome-in-my-software-engineering-journey-in-2022-28c4</guid>
      <description>&lt;p&gt;I am not a perfect programmer, but I can design software using the right software engineering techniques, from stage 1 to the last. The more you dig into this industry, the more familiar you become with new techniques.&lt;/p&gt;

&lt;p&gt;Many people have ideas which they yearn to implement, but you will lose when you think like a developer in everything. There are many things involved before Google releases software to the market. So throughout my three-year journey, I am still learning more. I was blessed to join campus to take computer science, but that doesn’t guarantee a job😂. I made mistakes in these years, but I promise to rectify them in 2022.&lt;/p&gt;

&lt;p&gt;Learning every technology&lt;/p&gt;

&lt;p&gt;I thank myself that this year, I rectified this mistakes 😂😂. In my first year, very charming boy eager to learn and become a big title software engineer. I was doing everything, and I mean everything. Maybe that’s how I understood the term software engineer. From Monday to Saturday, I had a timetable, learning AI, ML, Android, web technologies, and all this was sucking. At the end of the year, I could not develop a complete model using these technologies.&lt;/p&gt;

&lt;p&gt;Of course, they have helped me in one way; I can easily jump into a new field and become successful within a short period of time. Since 2021 started, I have focused on web development and am a happy man who can write clean JS and python codes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cramming-my-code"&gt;
  &lt;/a&gt;
  Cramming my code
&lt;/h2&gt;

&lt;p&gt;This is not a laughing matter. Everyone has done this, but it is never significant. Companies don’t look for people who can write code for the same thing. Or they don’t even want you to be as good at all the languages as most of you think. Organizations yearn for a person who has a strong basic foundation of programming, in that they can easily learn a new technology whenever the company suggests.&lt;/p&gt;

&lt;p&gt;Please don’t cram multi-threading in c++; understand it. The same logic for algorithms and data structure is used in almost all languages; the only difference is the syntax. Understanding the ideal concepts will help you be fast in implementing useful functionality.&lt;/p&gt;

&lt;p&gt;Bragging about the technology rather than providing a solution&lt;/p&gt;

&lt;p&gt;Hear this for free; businesspeople and other non-technical individuals in the company don’t want to know what you will do it. Stop bragging about the technology you know, instead offer solutions to society. Yes, I know &lt;em&gt;to react, SQL, Django&lt;/em&gt;, but how can they be used to create an optimized e-commerce platform? Is there a way I can optimize my SEO using the right technology?&lt;/p&gt;

&lt;p&gt;As you are in the software development field, learn to train your mind on solving problems. Knowing a lot of technology will help you develop your favorite solution. It’s not a must you know everything, but using the three-four technologies you know, can lead to something great.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#listening-to-negative-talks"&gt;
  &lt;/a&gt;
  Listening to negative talks
&lt;/h2&gt;

&lt;p&gt;This has affected a number of people who have left the journey they started. Before I knew how important tech was, someone said that coding wasn’t helpful and was outdated. That brought a lot of questions to my mind, provided I was studying computer science to get a well-paying job. I liked the software part, and so that sentence reduced my confidence.&lt;/p&gt;

&lt;p&gt;But over time, I have learned to fight such spirits. I believe in what I do. For newbies, any technology you learn is being used somewhere; a person or company needs those skills. So keep working and never let other people’s words kill your dream.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#joining-mediocre-group"&gt;
  &lt;/a&gt;
  Joining Mediocre Group
&lt;/h2&gt;

&lt;p&gt;Wow! I could not forget this. If you want to grow, find a group of people. They will guide and share their mistakes with you. Last year, we made a group where we were to learn various technologies and create minor startups for freelancing😂😂. Two weeks, I realized how everyone was learning at their own pace; no one is willing to accept mistakes. I call it a mediocre group where you are no longer on the same page.&lt;/p&gt;

&lt;p&gt;Runaway from this. Who told you online doesn’t have great teams. If you cannot find physical friends with whom you share the same goal, look for an online group. Twitter has great teams. Also, learning alone can help you achieve great things, don’t underestimate your knowledge. But, a team, will make you go far, don’t forget this.&lt;/p&gt;

&lt;p&gt;Important Bonus&lt;/p&gt;

&lt;p&gt;Don’t forget! Don’t forget! Push your code on GitHub. However small the project is, it’s important. They create new friends on linked in. DM those connections from major companies and ask them about their culture. This is to make connections with people in your field.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>8 most useful PhpStorm keyboard shortcuts</title>
      <author>Damian Brdej</author>
      <pubDate>Mon, 20 Dec 2021 13:40:12 +0000</pubDate>
      <link>https://dev.to/quentindamianino/8-most-useful-phpstorm-keyboard-shortcuts-4476</link>
      <guid>https://dev.to/quentindamianino/8-most-useful-phpstorm-keyboard-shortcuts-4476</guid>
      <description>&lt;h3&gt;
  &lt;a href="#-raw-double-shift-endraw-search-everywhere"&gt;
  &lt;/a&gt;
  &lt;code&gt;Double Shift&lt;/code&gt; - Search Everywhere
&lt;/h3&gt;

&lt;p&gt;Quickly find any file, action, class, symbol, tool window, or setting in PhpStorm, in your project, and in the current Git repository.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-ctrlshifta-endraw-find-action"&gt;
  &lt;/a&gt;
  &lt;code&gt;Ctrl+Shift+A&lt;/code&gt; - Find Action
&lt;/h3&gt;

&lt;p&gt;Find a command and execute it, open a tool window, or search for a setting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-altenter-endraw-show-context-actions"&gt;
  &lt;/a&gt;
  &lt;code&gt;Alt+Enter&lt;/code&gt; - Show Context Actions
&lt;/h3&gt;

&lt;p&gt;Quick fixes for highlighted errors and warnings, intention actions for improving and optimizing your code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-f2-endraw-and-raw-shiftf2-endraw-navigate-between-code-issues"&gt;
  &lt;/a&gt;
  &lt;code&gt;F2&lt;/code&gt; and &lt;code&gt;Shift+F2&lt;/code&gt; - Navigate between code issues
&lt;/h3&gt;

&lt;p&gt;Jump to the next or previous highlighted error.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-ctrle-endraw-view-recent-files"&gt;
  &lt;/a&gt;
  &lt;code&gt;Ctrl+E&lt;/code&gt; - View recent files
&lt;/h3&gt;

&lt;p&gt;Select a recently opened file from the list.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-ctrlw-endraw-and-raw-ctrlshiftw-endraw-extend-or-shrink-selection"&gt;
  &lt;/a&gt;
  &lt;code&gt;Ctrl+W&lt;/code&gt; and &lt;code&gt;Ctrl+Shift+W&lt;/code&gt; - Extend or shrink selection
&lt;/h3&gt;

&lt;p&gt;Increase or decrease the scope of selection according to specific code constructs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-ctrl-endraw-and-raw-ctrlshift-endraw-addremove-line-or-block-comment"&gt;
  &lt;/a&gt;
  &lt;code&gt;Ctrl+/&lt;/code&gt; and &lt;code&gt;Ctrl+Shift+/&lt;/code&gt; - Add/remove line or block comment
&lt;/h3&gt;

&lt;p&gt;Comment out a line or block of code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-altf7-endraw-find-usages"&gt;
  &lt;/a&gt;
  &lt;code&gt;Alt+F7&lt;/code&gt; - Find Usages
&lt;/h3&gt;

&lt;p&gt;Show all places where a code element is used across your project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;To master your programming skills first you have to master tools you use. &lt;br&gt;
Which keyboard shortcut you use most often?&lt;/p&gt;

</description>
      <category>programming</category>
      <category>php</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>بهترین های جاوا</title>
      <author>خشک استور</author>
      <pubDate>Mon, 20 Dec 2021 13:36:12 +0000</pubDate>
      <link>https://dev.to/khoshkstoree/bhtryn-hy-jw-2fmf</link>
      <guid>https://dev.to/khoshkstoree/bhtryn-hy-jw-2fmf</guid>
      <description>&lt;p&gt;بهترین های تفاوت را احساس کنید.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>What `javascript:void(0);` actually means?</title>
      <author>Creative Tim</author>
      <pubDate>Mon, 20 Dec 2021 13:27:12 +0000</pubDate>
      <link>https://dev.to/creativetim_official/what-javascriptvoid0-actually-means-ffo</link>
      <guid>https://dev.to/creativetim_official/what-javascriptvoid0-actually-means-ffo</guid>
      <description>&lt;p&gt;As a frontend developer or even as a backend developer maybe you have found &lt;code&gt;javascript: void(0);&lt;/code&gt; written as a value for a href attribute inside an anchor tag (&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;) and you wondered what that means.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;a href="javascript:void(0);" onclick="clickFunction()"&amp;gt;
  Click
&amp;lt;/a&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this article, we will try to provide an explanation for the above syntax in order for you to know when and why it's used. To do that we will have to take it element by element.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-raw-void-endraw-keyword"&gt;
  &lt;/a&gt;
  Javascript &lt;code&gt;void&lt;/code&gt; keyword
&lt;/h2&gt;

&lt;p&gt;As in other programming languages, &lt;code&gt;void&lt;/code&gt; keyword from Javascript, is an operator that has the role to tell the program NOT to return the result of an expression and it returns &lt;code&gt;undefined&lt;/code&gt; instead.&lt;/p&gt;

&lt;p&gt;For example, the following expression will return the value of the mathematical operation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
let sum = 1 + 1;
console.log(sum); // 2

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the next expression will return &lt;code&gt;undefined&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
let sum = void(1 + 1);
console.log(sum); // undefined

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Even though the variable &lt;code&gt;sum&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, Javascript still executes the expression &lt;code&gt;(1 + 1)&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
let sum = void console.log(1 + 1); // 2
console.log(sum); // undefined

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From the above, we can observe that the code that it is after the &lt;code&gt;void&lt;/code&gt; operator will always be executed but the return of the expression will always be &lt;code&gt;undefined&lt;/code&gt;. The role of &lt;code&gt;0&lt;/code&gt; inside the void operator is simply just the one of a placeholder.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-raw-javascriptvoid0-endraw-as-the-value-of-href"&gt;
  &lt;/a&gt;
  Use &lt;code&gt;javascript:void(0);&lt;/code&gt; as the value of href
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;javascript:&lt;/code&gt; part is a possible value for the &lt;code&gt;href&lt;/code&gt; attribute. This value tells your browser that the next text is a Javascript code and it should be treated accordingly. There are also other possible values for the &lt;code&gt;href&lt;/code&gt; attribute like mailto:, file:, tel:, sms: etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--36cvwc3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/12/coder.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--36cvwc3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/12/coder.gif" alt="developer" width="480" height="268"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-raw-javascriptvoid0-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;javascript:void(0);&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;By using &lt;code&gt;javascript:void(0)&lt;/code&gt;, the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag will not send you to other web address. It will also not refresh the page as links usually do when you don't specify a value for the href attribute.&lt;/p&gt;

&lt;p&gt;If you are wondering why we don't just remove the &lt;code&gt;href&lt;/code&gt; attribute, the answer is that by removing the &lt;code&gt;href&lt;/code&gt; attribute we will also remove the link appearance of the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element. That means that the cursor will not change when hovering the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag. The cursor will act like it is on normal text.&lt;/p&gt;

&lt;p&gt;In other words, by adding &lt;code&gt;javascript:void(0)&lt;/code&gt; as the value of href attribute we will create a link that does nothing.&lt;/p&gt;

&lt;p&gt;The example link from the beginning of this article will run the &lt;code&gt;clickFunction&lt;/code&gt; function when the tag is clicked, but without refreshing the page or sending you to a different page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.creative-tim.com/blog/courses/javascript-courses-learn-web-development?ref=devto"&gt;You may be interested: 15 JavaScript Courses - Learn Web Development, HTML, and CSS&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-raw-javascriptvoid0-endraw-"&gt;
  &lt;/a&gt;
  When to use &lt;code&gt;javascript:void(0);&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;Thankfully, with all the updates made in Javascript, you will never have to use it as there are better alternatives to it.&lt;/p&gt;

&lt;p&gt;In order to prevent the default behavior of a &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag, it's generally recommended to use the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; tag for buttons and the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag for links. Also, if you need or want to change the cursor, it's recommended to use CSS instead of changing the tag to &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In conclusion, we hope that now you have a better understanding of what &lt;code&gt;javascript:void(0);&lt;/code&gt; is. Since it does nothing that you can't do with only HTML/CSS, the syntax presented at the beginning is not so common these days. Use this piece of information only to know what role it has when you see it somewhere, but keep your code clean and follow our advice on best practices.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>🎥Responsive Footer Section using Flexbox | HTML CSS🙌</title>
      <author>Robson Muniz</author>
      <pubDate>Mon, 20 Dec 2021 13:20:10 +0000</pubDate>
      <link>https://dev.to/robsonmuniz16/responsive-footer-section-using-flexbox-html-css-1m5p</link>
      <guid>https://dev.to/robsonmuniz16/responsive-footer-section-using-flexbox-html-css-1m5p</guid>
      <description>&lt;p&gt;In this video, I have shown you how you can create a responsive footer section using HTML and CSS only. &lt;/p&gt;




&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vaaeeOczpPA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source Code:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Footer&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"&lt;/span&gt; &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha512-Fo3rlrZj/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26/zrn20ImR1DfuLWnOo7aBA=="&lt;/span&gt; &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt; &lt;span class="na"&gt;referrerpolicy=&lt;/span&gt;&lt;span class="s"&gt;"no-referrer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Your Content Here!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"main-content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"left box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;About us&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Harum sunt saepe maxime consequatur, architecto cum quos quo ut id totam laborum veritatis quaerat esse atque, doloremque facere hic. Odit, eum.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-facebook-f"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-instagram"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-twitter"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-youtube"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"center box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Adress&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"place"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-map-marker-alt"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;London, UK&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"phone"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-phone-alt"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;+089-5689754993&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-envelope"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;webdev@dev.com&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"right box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Contact US&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Email:&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"msg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Message:&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"25"&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt; &lt;span class="na"&gt;rows=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Send&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bottom"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;center&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"credit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          Created by &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;WebDev&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; |
        &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"far fa-copyright"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;2021 All Rights Reserved.&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/center&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#d9d9d9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Montserrat"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;bisque&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;section&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* Just for parent demo size */&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;65vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;48px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.main-content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.main-content&lt;/span&gt; &lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;flex-basis&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.125&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt;&lt;span class="nd"&gt;::before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/*  border: 2px solid red;*/&lt;/span&gt;
  &lt;span class="c"&gt;/*  Show them the file*/&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#1a1a1a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f12020&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.left&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="nc"&gt;.social&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.left&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="nc"&gt;.social&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.left&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="nc"&gt;.social&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#1a1a1a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.left&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="nc"&gt;.social&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f12020&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.center&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="nc"&gt;.fas&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.4375rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#1a1a1a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;45px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;45px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;45px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.center&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="nc"&gt;.fas&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f12020&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/*Now we grab the text*/&lt;/span&gt;

&lt;span class="nc"&gt;.center&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="nc"&gt;.text&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.07rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.center&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="nc"&gt;.phone&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.right&lt;/span&gt; &lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nc"&gt;.text&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.07rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#656565&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.right&lt;/span&gt; &lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nc"&gt;.msg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.right&lt;/span&gt; &lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.right&lt;/span&gt; &lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;textarea&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.07rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#151515&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#222222&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.right&lt;/span&gt; &lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.right&lt;/span&gt; &lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;textarea&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;outline-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3498db&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.right&lt;/span&gt; &lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;35px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.right&lt;/span&gt; &lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nc"&gt;.btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.right&lt;/span&gt; &lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nc"&gt;.btn&lt;/span&gt; &lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f12020&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.07rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.right&lt;/span&gt; &lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nc"&gt;.btn&lt;/span&gt; &lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.bottom&lt;/span&gt; &lt;span class="nt"&gt;center&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.94rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#151515&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.bottom&lt;/span&gt; &lt;span class="nt"&gt;center&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#656565&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.bottom&lt;/span&gt; &lt;span class="nt"&gt;center&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f12020&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.bottom&lt;/span&gt; &lt;span class="nt"&gt;center&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;underline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;900px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.main-content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.main-content&lt;/span&gt; &lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>html</category>
      <category>css</category>
      <category>beginners</category>
      <category>footer</category>
    </item>
    <item>
      <title>Things you might not know about Windows Terminal</title>
      <author>jonosellier</author>
      <pubDate>Mon, 20 Dec 2021 13:08:06 +0000</pubDate>
      <link>https://dev.to/jonosellier/things-you-might-not-know-about-windows-terminal-ma2</link>
      <guid>https://dev.to/jonosellier/things-you-might-not-know-about-windows-terminal-ma2</guid>
      <description>&lt;p&gt;With Microsoft announcing that Windows Terminal will be the &lt;a href="https://www.theverge.com/2021/12/15/22837218/microsoft-windows-terminal-default-windows-11-changes"&gt;new default terminal&lt;/a&gt;, I wanted to take the time to share some of the things you might not know about the new default.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#launch-anything"&gt;
  &lt;/a&gt;
  Launch anything
&lt;/h2&gt;

&lt;p&gt;You can configure Windows Terminal with various profiles that let you launch into any program you want. &lt;/p&gt;

&lt;p&gt;Say you needed to remote into a machine super often. Setting up a profile with &lt;code&gt;ssh user@hostname&lt;/code&gt; puts you right into that machine with a &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; keystroke. The same can be done for WSL containers or REPLs. I literally use my Node REPL profile daily for quickly transforming objects or making quick calculations. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#launch-anywhere"&gt;
  &lt;/a&gt;
  Launch Anywhere
&lt;/h2&gt;

&lt;p&gt;You can also set your starting directory so you can have shortcuts to open a new tab in any directory you choose. I use this to quickly get between my main projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#launch-as-anyone"&gt;
  &lt;/a&gt;
  Launch as anyone
&lt;/h2&gt;

&lt;p&gt;This is more of a hacky workaround for the PowerShell "Run as different user" option but as long as you have an SSH server running you can SSH into your own system as another user. Simply run &lt;code&gt;ssh [domain\]username@localhost&lt;/code&gt; and you're able to log in (as admin)! If you find yourself doing this often, put it in a profile since it's no different to any other SSH command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dRGNBgy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://content.spiceworksstatic.com/service.community/p/post_images/0000350437/5c93d00b/attached_image/Untitled.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dRGNBgy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://content.spiceworksstatic.com/service.community/p/post_images/0000350437/5c93d00b/attached_image/Untitled.png" alt="The feature we are trying to emulate" width="220" height="124"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The feature we are trying to emulate&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#have-a-terminal-that-looks-like-its-been-updated-since-the-90s"&gt;
  &lt;/a&gt;
  Have a terminal that looks like it's been updated since the 90s
&lt;/h2&gt;

&lt;p&gt;Windows Terminal supports ligatures and &lt;a href="https://www.nerdfonts.com/"&gt;Nerd Fonts&lt;/a&gt; so installing one of those opens the door to alternative prompts like &lt;a href="https://ohmyposh.dev"&gt;Oh My Posh&lt;/a&gt; that gives you inline Git info, privilege level and so on. I have mentioned this before and go into greater detail on &lt;a href="https://dev.to/jonosellier/4-must-have-tools-for-developing-on-windows-3eg8"&gt;another post&lt;/a&gt; but it's worth mentioning again because it's so good. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus-modernization-features-you-should-install-anyways"&gt;
  &lt;/a&gt;
  Bonus modernization features you should install anyways
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/devblackops/Terminal-Icons"&gt;Terminal Icons&lt;/a&gt; makes your &lt;code&gt;ls&lt;/code&gt; a bit prettier and more useful. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://tech.ligthartnet.nl/powershell-tab-completion/"&gt;Change Tab Completion&lt;/a&gt; so you can see all arguments and options available to you. You can also bind &lt;code&gt;UpArrow&lt;/code&gt; and &lt;code&gt;DownArrow&lt;/code&gt; to &lt;code&gt;HistorySearchForward&lt;/code&gt; and &lt;code&gt;HistorySearchBackward&lt;/code&gt; in the same way to cycle the history of commands starting with what you typed.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>productivity</category>
      <category>windows</category>
      <category>terminal</category>
      <category>cli</category>
    </item>
    <item>
      <title>Angular Project Ideas For Beginners 2022</title>
      <author>ThemeSelection</author>
      <pubDate>Mon, 20 Dec 2021 12:50:07 +0000</pubDate>
      <link>https://dev.to/theme_selection/angular-project-ideas-for-beginners-2022-12mb</link>
      <guid>https://dev.to/theme_selection/angular-project-ideas-for-beginners-2022-12mb</guid>
      <description>&lt;p&gt;Looking for Angular Project Ideas for practice? Then here is the collection of the best &lt;strong&gt;&lt;a href="https://dev.to/theme_selection/angular-project-ideas-for-beginners-2022-12mb"&gt;Angular Project Ideas For Beginners&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Before we start the collection of Angular Beginners Project Ideas, let's know what Angular is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-angular"&gt;
  &lt;/a&gt;
  What Is Angular?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt;&lt;/strong&gt; is one of the elite JavaScript frameworks developed by &lt;a href="https://www.google.com/"&gt;Google&lt;/a&gt; and based on TypeScript, Angular is capable of delivering great web applications with high web page performances.&lt;/p&gt;

&lt;p&gt;Furthermore, it is fully extensible and works well with other libraries. Besides, every feature can be modified or replaced as per your need for development workflow and feature needs. With consistent updates, Angular has rooted its place in the list of best web development frameworks. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Angular offers following features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Two-way Data binding&lt;/li&gt;
&lt;li&gt;Modular development structure&lt;/li&gt;
&lt;li&gt;Ease in Maintaining&lt;/li&gt;
&lt;li&gt;Dependency Injection&lt;/li&gt;
&lt;li&gt;TypeScript-based (superset of JavaScript)&lt;/li&gt;
&lt;li&gt;High performance for Single Page Hefty Apps&lt;/li&gt;
&lt;li&gt;Offers great flexibility&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before you go through the list you can check some of the best &lt;strong&gt;&lt;a href="https://themeselection.com/angular-admin-template/"&gt;Angular admin template free download&lt;/a&gt;&lt;/strong&gt;. You may also like the collection of &lt;a href="https://themeselection.com/angular-ui-component-libraries/"&gt;&lt;strong&gt;Angular UI Component Libraries&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let's check the Angular Project Ideas For Beginners..!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtDeIfOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmeidayo6wmo3rjenv6d.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtDeIfOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmeidayo6wmo3rjenv6d.gif" alt="Let's begin" width="498" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#angular-projects"&gt;
  &lt;/a&gt;
  Angular Projects
&lt;/h2&gt;

&lt;p&gt;Well, the software industry has a high demand for professionals Angular Developers. It is one of the most widely used JavaScript frameworks. Popular brands like &lt;a href="https://www.paypal.com/in/home"&gt;PayPal&lt;/a&gt;, &lt;a href="https://www.upwork.com/"&gt;Upwork&lt;/a&gt;, &lt;a href="https://www.netflix.com/in/"&gt;Netflix&lt;/a&gt; also use Angular in their frontend development.&lt;/p&gt;

&lt;p&gt;Angular projects offer a great way to build single-page client applications by implementing HTML and Typescript functionalities. So, if you are a beginner, the best thing you can do is work on some real-time  &lt;strong&gt;angular projects.&lt;/strong&gt; An activity-based learning approach works best for understanding the architecture of web frameworks. So, let us explore what the Angular platform is all about.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why to practice Angular projects?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well, when it comes to software development careers, it is necessary for beginner developers to practice on their own projects. Besides, developing real-world angular project is the best way to sharpen your skills and execute your theoretical knowledge into practical experience. The more you practice and experiment with different angular projects, the more knowledge you will gain.&lt;/p&gt;

&lt;p&gt;As you start working on angular projects, you will be able to analyze your strengths and weaknesses. Also, you will know the exposure that can be immensely helpful to boost your career. In this collection, you will find  some awesome angular projects ideas for beginners.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-to-constructing-apps-with-angular"&gt;
  &lt;/a&gt;
  Steps to constructing apps with Angular:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The first step - writing code using Typescript, HTML, CSS, etc.&lt;/li&gt;
&lt;li&gt;Second step: Compile Typescript code to JavaScript.&lt;/li&gt;
&lt;li&gt;Finally, Hosting the application on a web server.&lt;/li&gt;
&lt;li&gt;An angular view combines a component and template.&lt;/li&gt;
&lt;li&gt;Navigation between different views is defined by services (i.e., router provided by the dependency injector).&lt;/li&gt;
&lt;li&gt;Automatic synchronization or data-binding occurs between the model and view components in the model, offering a reactive user experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore, the building blocks of the Angular workspace are fit for designing impressive  Single Page Applications (SPAs).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#angular-prerequisites"&gt;
  &lt;/a&gt;
  Angular Prerequisites
&lt;/h2&gt;

&lt;p&gt;There are three main prerequisites that you'll need during developing your Angular Project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;NodeJS&lt;/li&gt;
&lt;li&gt;Angular CLI&lt;/li&gt;
&lt;li&gt;Text Editors&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#angular-project-ideas-for-beginners"&gt;
  &lt;/a&gt;
  Angular Project Ideas For Beginners:
&lt;/h2&gt;

&lt;p&gt;These Angular projects will get you going with all the practicalities you need to succeed in your career. This list of angular project ideas for students  is suited for beginners, and those just starting out in general. These  &lt;strong&gt;angular projects for beginners&lt;/strong&gt;  will get you going with all the practicalities you need to succeed in your career.&lt;/p&gt;

&lt;p&gt;While working on Angular projects you can use the &lt;a href="https://themeselection.com/go/download-vuexy-vuejs/"&gt;Vuexy - Angular Admin Dashboard Template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/go/download-vuexy-vuejs/"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X2dFVlPj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hvfiwnnxyx33s3acen7u.jpg" alt="Vuexy VueJS Admin Template" width="880" height="563"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vuexy – Angular Admin Dashboard Template&lt;/strong&gt; is the most developer-friendly &amp;amp; highly customizable Admin Dashboard Template. It is based on Angular CLI + NgBootstrap. If you’re a developer looking for an admin dashboard that is developer-friendly, rich with features, and highly customizable look no further than Vuexy. &lt;/p&gt;

&lt;p&gt;Besides, it has followed the highest industry standards to bring you the very best admin template that is not only fast and easy to use but highly scalable. Offering ultimate convenience and flexibility, you’ll be able to build whatever application you want with very little hassle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pixinvent.com/demo/vuexy-angular-admin-dashboard-template/landing/"&gt;Demo&lt;/a&gt; &lt;a href="(https://themeselection.com/go/download-vuexy-vuejs/)"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, Let's start the collection.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#angular-hello-world-project"&gt;
  &lt;/a&gt;
  Angular Hello World Project
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aAsnGER3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbjdyf07iy41a8xp7mht.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aAsnGER3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbjdyf07iy41a8xp7mht.png" alt="Angular Hello World Project" width="880" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;if you are just starting with Angular and Typescript, then "Hello World" project can be a good start. This project offers a tremendous opportunity to boost your skills. It contains a single module and component, creating an open environment for experimentation. Here you will use package.json and npm to load Angular modules.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tutorials:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.simplilearn.com/tutorials/angular-tutorial/angular-hello-world"&gt;Angular Hello World&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.netjstech.com/2020/03/angular-first-app-hello-world-example.html"&gt;Angular First App Hello World Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oBuTWzuZkA4/"&gt;Angular 12 tutorial Hello World&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DanWahlin/Angular-HelloWorld"&gt;Angular Hello World&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#to-do-app"&gt;
  &lt;/a&gt;
  To Do App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7MoQ233n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05i3tizpm38l9mgtsqg1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7MoQ233n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05i3tizpm38l9mgtsqg1.jpg" alt="To do app" width="880" height="586"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The to-do app is one of the most common beginner apps. You can do experiments while developing a to-do app. Normally, we are either able to complete a preset number of tasks on time or fail miserably. Although the success rate depends on many factors, there is one common thing that is mostly seen in several use cases. That would be the use of to-do list apps.&lt;/p&gt;

&lt;p&gt;You can offer the following features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Users can edit a to-do&lt;/li&gt;
&lt;li&gt;A list with all the completed to-do’s&lt;/li&gt;
&lt;li&gt;Users can see a list with all the active to-do’s&lt;/li&gt;
&lt;li&gt;User can see the date when he created the to-do&lt;/li&gt;
&lt;li&gt;When closing the browser window the to-do’s will be stored and when the User returns, the data will be retrieved&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Tutorials&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=gvWxMQ_Zios"&gt;To Do App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning"&gt;Angular todo_list_beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.teclogiq.com/blog/angular-todo-application/"&gt;angular-todo-application&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#weather-app"&gt;
  &lt;/a&gt;
  Weather App
&lt;/h2&gt;

&lt;p&gt;This is one of the best Angular project ideas for beginners. It is a straightforward project. You can code it in a matter of a few hours! In this project, you have to build a weather app that can display a weather forecast. For this app, you can leverage fake, hard-coded data until you get all the features correct.&lt;/p&gt;

&lt;p&gt;A weather app is a good start for any beginners as it deals not only with data but also focuses on design as well. You can start with basic features such as temperature, sunrise/sunset time, climate map, etc.&lt;/p&gt;

&lt;p&gt;Besides, you can try new features once you are done with the basics. For example, you can show data visualization with animation, rain prediction, wind prediction, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tutorials:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zoaibkhan.com/blog/rxjs-in-angular-creating-a-weather-app/"&gt;RxJs in angular creating a weather app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/duluca/local-weather-app"&gt;https://github.com/duluca/local-weather-app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rchristian/angular-weather-app-v1"&gt;https://github.com/rchristian/angular-weather-app-v1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#angular-calculator"&gt;
  &lt;/a&gt;
  Angular Calculator
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ivWS7qJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vopgbom3l5901o9ycily.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ivWS7qJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vopgbom3l5901o9ycily.png" alt="Angular Calculator" width="466" height="562"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can simply start with a Angular-based calculator. Not the complex one but a simple calculator. Calculators are not only one of the most useful tools available, but they are also a great way to understand UI and event processing in an application. Here, you will create a calculator that supports basic arithmetic calculations on integers.&lt;/p&gt;

&lt;p&gt;The styling is up to you so use your imagination and get creative! You might also find it worth your time to experiment with the calculator app on your mobile device to better understand basic functionality and edge cases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tutorials:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codingdiksha.com/angular-calculator-application-source-code/"&gt;Angular Calculator App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tektutorialshub.com/angular/angular-calculator-application/"&gt;Calculator in Angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.techiediaries.com/angular-8-tutorial-build-first-angular-calculator-app/"&gt;Angular 8 calculator app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codepen.io/LewisBriffa/pen/RRgaqm"&gt;https://codepen.io/LewisBriffa/pen/RRgaqm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/techiediaries/angular-calculator-app"&gt;https://github.com/techiediaries/angular-calculator-app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codezup.com/create-build-angular-calculator-application/"&gt;https://codezup.com/create-build-angular-calculator-application/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#place-locator"&gt;
  &lt;/a&gt;
  Place Locator
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dv9Qqvlc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp966hwv75eg6cdqrawy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dv9Qqvlc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp966hwv75eg6cdqrawy.jpg" alt="Place locator" width="612" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Place Locator project aims at finding the exact location of a person  by identifying its geological coordinates. Those who are recognized as frequent travelers and geologists may now traverse to unknown places without any fear of getting lost. &lt;/p&gt;

&lt;p&gt;Well, working of this project is relatable to that of Google Maps. You can develop place locator app that lets you find hotels, shops, stadiums, petrol stations, and much more. This app should let your audience access every powerful component of this project consisting of preconfigured APIs, sophisticated GIS mapping techniques backed by customized data sources fulfilling the users’ requirements well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#simple-currency-converter"&gt;
  &lt;/a&gt;
  Simple Currency Converter
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cZB4-Qf1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijrft9c2lpttcdleymk6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZB4-Qf1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijrft9c2lpttcdleymk6.png" alt="Currency Converter" width="880" height="469"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple Currency Converter reciprocates exchange rates of different currencies. These currencies can be Dollars, Rupees, Pound, and so on. Aim of this app is to plan the travel expenses, calculate education expenses or to calculate financial markets. In addition, you can make this interesting by adding features such as adding multiple countries, and later, you can check the historical data and the futuristic fluctuations in fixed, pegged float, and floating exchange rates. &lt;/p&gt;

&lt;p&gt;You can also include a feature such as auto select. Here, Based on your current location, the currency convertor will select the currency by fetching your current location. Also, you can give some eye catchy look to the app facilitated by beautiful designs and price configurations. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tutorials&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iOXgFZHqpe4"&gt;Currency converter with SVG chart and Angular 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MG_6FdH3gXs"&gt;Angular 9 Tutorial - CurrencyPipe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackblitz.com/edit/angular-example-simple-currency-converter"&gt;https://stackblitz.com/edit/angular-example-simple-currency-converter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vgupta1192/currency-converter"&gt;https://github.com/vgupta1192/currency-converter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#angular-bare-bone"&gt;
  &lt;/a&gt;
  Angular Bare Bone
&lt;/h3&gt;

&lt;p&gt;Angular Bare Bones project displays Angular routing. Such routing supports a number of routing components like RouterOutlet, RouterLink, RouterModule, and other imported routes. Also, the easy-to-serve understandable code has made this project a preferred alternative for AngularJS beginners. In this project, you may expect a single feature component i.e. Barebones injected with data dependency and flexible routing between the homepage and the feature component. &lt;/p&gt;

&lt;p&gt;For running this project, you first install Node.js (a platform for building scalable network applications efficiently). Then, you would be installing the Angular CLI (via npm install -g @angular/cli). At last, what you will be doing is running npm install (for successfully installing app dependencies) and then, running ng serve -o for launching the Bare Bones application based on the event-driven AngularJS model.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DanWahlin/Angular-BareBones"&gt;https://github.com/DanWahlin/Angular-BareBones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mraible/ng-demo"&gt;https://github.com/mraible/ng-demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#url-shortener"&gt;
  &lt;/a&gt;
  URL Shortener
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DsGxKlyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2v0n79xroaipl1da4vr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DsGxKlyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2v0n79xroaipl1da4vr.jpg" alt="url shortner" width="777" height="437"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is one of the trending angular project for beginners. In this application, the main feature will be the input for the link you’d like to shorten and the result’s output space. You can check the &lt;a href="https://polrproject.org/"&gt;Polr&lt;/a&gt; for example. It is an open-source web application written in PHP and powered by Lumen. It uses MySQL as the primary database and provides a robust interface to manage your links. You can host it on your domain to shorten URLs, brand them, and provide an overall modern theme.&lt;/p&gt;

&lt;p&gt;Also, you can create a function to copy the shortened link by clicking the icon. The process should happen with the external API call. You can build this angular project more eye-catching than just plain data displayed from the API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codesandbox.io/examples/package/angular-shorturl"&gt;https://codesandbox.io/examples/package/angular-shorturl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CryceTruly/ng-url-shortener"&gt;https://github.com/CryceTruly/ng-url-shortener&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#notepad-application"&gt;
  &lt;/a&gt;
  Notepad Application
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iVE-4iiD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/neoz3s6rzfzva8kwarih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iVE-4iiD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/neoz3s6rzfzva8kwarih.png" alt="notepad app" width="880" height="403"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notepad Application is no doubt a wonderful choice for the Angular project for beginners. It is a digital pocket app through which you can  modify, create, modify, or add new notes. Purpose of this app is to organize (or reorder if required) the notes on the basis of the date and time they were modified.  To create such app, you can use a smart combination of technologies like Angular CLI, Bootstrap, and NodeJS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tutorials:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dlXEeOk-MrI&amp;amp;t=14s"&gt;Build a Notes App from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zhoodar/notepad-app"&gt;https://github.com/zhoodar/notepad-app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#electronic-musical-instrument"&gt;
  &lt;/a&gt;
  Electronic musical instrument
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HNo7cnud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9hfrgm4qy4x1652pyxu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HNo7cnud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9hfrgm4qy4x1652pyxu.png" alt="Electronic musical instrument" width="568" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With an Electronic musical instrument project, you can possibly  synthesize filtered sounds through a variety of techniques. These techniques can be consonance, rhythm, repetition, alliteration, and many more. It would be good to  use Web Audio API that  synchronizes well with browsers like Safari, Google Chrome, and Opera. Such an innovative project idea will surely boost up your confidence.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#angular-projects-with-source-code-github"&gt;
  &lt;/a&gt;
  Angular Projects With Source Code GitHub
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Soundnode/soundnode-app"&gt;Soundnode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ganatan/angular-starter"&gt;Angular Starter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ganatan/angular12-app"&gt;Angular 12 / Bootstrap 5 &amp;amp; CRUD REST API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gothinkster/angular-realworld-example-app"&gt;Angular real-world example app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomastrajan/angular-ngrx-material-starter"&gt;Angular NgRx material starter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=G0bBLvWXBvc"&gt;Angular for Beginners - Let's build a Tic-Tac-Toe PWA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bezkoder/angular-10-crud-app"&gt;Angular 10 crud app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trungk18/jira-clone-angular"&gt;Jira clone angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;So, here in this collection of &lt;strong&gt;&lt;a href="https://dev.to/theme_selection/angular-project-ideas-for-beginners-2022-12mb"&gt;Angular Project Ideas For Beginners&lt;/a&gt;&lt;/strong&gt; we have covered some of the Angular projects for practice as a beginner. Besides knowing the framework inside-out, you should also be trained in TypeScript, npm, HTML, CSS, RxJs, and so on.&lt;/p&gt;

&lt;p&gt;Practice on these angular projects to sharpen your coding skills with the above Angular project ideas and develop impressive applications with confidence! If you wish to improve your angular skills, you need to get your hands on these  &lt;strong&gt;Angular projects.&lt;/strong&gt; Now go ahead and put to test all the knowledge that you’ve gathered through our angular project ideas guide to build your very own angular projects!&lt;/p&gt;

</description>
      <category>angular</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to add chat into a VUE.JS app with TalkJS chat API</title>
      <author>Omer Farooq</author>
      <pubDate>Mon, 20 Dec 2021 12:48:33 +0000</pubDate>
      <link>https://dev.to/talkjs/how-to-add-chat-into-a-vuejs-app-with-talkjs-chat-api-4290</link>
      <guid>https://dev.to/talkjs/how-to-add-chat-into-a-vuejs-app-with-talkjs-chat-api-4290</guid>
      <description>&lt;p&gt;How to add chat into a VUE.JS app with TalkJS chat API&lt;br&gt;
Adding a live chat feature to a web app is often complex. However, with recent developments in the web dev community and the inception of TalkJS, this formidable task has become a breeze. TalkJS is a turnkey solution for adding live chat to any web app. It provides an ever-customizable user interface, flexible notifications, and a powerful chat API out of the box. In this tutorial, we will look at how we can add a chat to an existing vue.js application in a matter of minutes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#application-overview"&gt;
  &lt;/a&gt;
  Application Overview
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--djHlRwDY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ozfarooq/TalkJS/main/Vue1.jpg%3Fraw%3Dtrue%2522%2522" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--djHlRwDY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ozfarooq/TalkJS/main/Vue1.jpg%3Fraw%3Dtrue%2522%2522" alt="VueJS Chat 1" width="578" height="425"&gt;&lt;/a&gt;&lt;br&gt;
A Great University runs our fictitious application. It allows their students to take live lectures, but it lacks the ability to chat with professors and amongst themselves in real-time. Currently, the web app consists of a landing page where the student’s log in with their university credentials (Name, Email and Password). Once they log in, they are taken to the live lecture. For simplicity’s sake, we have assumed that there’s only one live lecture, which in our case is just a YouTube video, and that all the students are already authenticated. The currentUser object we will use throughout the tutorial will contain data that we’ve received from the backend after the login and auth process. Our focus is on integrating a chat into an existing Vue app and not creating a whole app from scratch.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-talkjs-to-our-application"&gt;
  &lt;/a&gt;
  Adding TalkJS to our application
&lt;/h2&gt;

&lt;p&gt;We begin by adding TalkJS to our application. This can be done in one of two ways.&lt;br&gt;
If you use the Node Package Manager run the following command, it will save it as a dependency in the packages.json:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&amp;gt; npm install talkjs –save
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you use Yarn Package Manager, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&amp;gt; yarn add talkjs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that you have TalkJS installed, you need to signup on their website and register your application. This is a very simple process, at the end of which you will receive your APPID. Keep hold of this, it’s very important, and we will use this later.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-chatbox-vue-component"&gt;
  &lt;/a&gt;
  Creating the chatbox Vue Component
&lt;/h2&gt;

&lt;p&gt;Every Vue component is housed in its own .vue file. In this case, here are the steps to be followed&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We will create a component called MessageBox in MessageBox.vue.&lt;/li&gt;
&lt;li&gt;Under the template, we create a div, as shown in the image below.&lt;/li&gt;
&lt;li&gt;The div has a ref attribute set to “talkjs-container” we will use this to mount the actual chat box in this div later. &lt;/li&gt;
&lt;li&gt;The  tag is only used as a placeholder until the chatbox loads. We have added some styling, but that is left to the reader’s discretion.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;
    &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;col-xs-4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;talkjs-container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;talkjs-container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;width: 90%; margin-top: 10px; height: 900px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt; &lt;span class="nx"&gt;chat&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/i&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Below is a template that is added through a script tag. This will contain all the setup and logic for the TalkJS chatbox. Here the first thing we need to do is import TalkJS. To do that, add the following at the start of the script section:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Talk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;talkjs&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next, we export this component and name it MessageBox. This component will accept one prop of type object that contains the user’s information. &lt;/li&gt;
&lt;li&gt;It has two variables that it needs to maintain, so we add conversation and chatbox to the data function.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Talk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;talkjs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MessageBox&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;conversation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;chatbox&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;currentUser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
javascript&lt;br&gt;
Our chatbox will render once our MessageBox component has mounted, and as such, all chatbox logic will have to run inside the mounted lifecycle function that Vue provides. The mounted function will be defined just below our props object, and it will look something like this.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-the-users"&gt;
  &lt;/a&gt;
  Creating the Users
&lt;/h2&gt;

&lt;p&gt;The Talk object we imported from TalkJS is promise-based. Hence we call the ready function and then add our logic as a call back to the .then() function. Here we create our use through Talk.User() function. It accepts a JSONobject with the ID, Name, Email, photo URL of our user, and a role we set to default. For the sake of demonstration, we have also added another dummy user Sebastian in the other variable. In your application, you would add your own users using their data from your database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Talk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// creating our user&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Talk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;photoUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://randomuser.me/api/portraits/men/83.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;default&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;

      &lt;span class="c1"&gt;// creating other users&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Talk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;654321&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sebastian&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sebastian@example.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;photoUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://randomuser.me/api/portraits/men/69.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;welcomeMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hey, how can I help?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;role&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;default&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#establishing-a-talkjs-session"&gt;
  &lt;/a&gt;
  Establishing a TalkJS Session
&lt;/h2&gt;

&lt;p&gt;There can’t be a chat if there’s no chat session, hence we establish a talk session and add it to our browser’s window’s instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="c1"&gt;// establishing a new session if one doesn't already exists&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;talkSession&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;talkSession&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Talk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;appId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOU_APP_ID&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;me&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The APPID you found on your dashboard will be used here to establish a connection if one doesn’t already exist. This connection will let us join chats and start conversations. You also specify the user trying to establish the connection by passing the current user as a theme object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-new-or-joining-an-existing-conversation"&gt;
  &lt;/a&gt;
  Creating a New or Joining an Existing Conversation
&lt;/h2&gt;

&lt;p&gt;Next, we join or start an existing conversation. Each conversation on TalkJS has a unique id. These ids can be stored in your database and used when joining group conversations or a conversation with someone. For our demonstration we will hard code it to 1001, all the students joining this lecture will be added to the conversation with the ID 1001.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// connecting to a new or already existing conversation&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;conversation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;talkSession&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getOrCreateConversation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1001&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;conversation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttributes&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Computational Theory 101&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

      &lt;span class="c1"&gt;// adding participants&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;conversation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setParticipant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;conversation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setParticipant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;other&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The getOrCreateConversation() function will fetch the conversation if it already exists or create a new instance. Note that we are initializing the conversation variable we defined earlier, this is so we can access the conversation object later if necessary. Once the conversation has been initialized, we add its participants, and naturally, it is going to be the two users, me and others we created beforehand.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-an-inbox-and-mounting-it"&gt;
  &lt;/a&gt;
  Creating an Inbox and Mounting it
&lt;/h2&gt;

&lt;p&gt;Like a usual conversation, we will initializethe inbox variable we defined above using the createInbox function of our talkSession. We will pass our conversation as the focus of this inbox by setting selected to our conversation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// creating the actual inbox/chatbox&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inbox&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;talkSession&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createInbox&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;selected&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;conversation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Last but not the least, we will mount our inbox to the div we added a ref to in the template section. But before this, we need to ensure that the ref we are going to point to has been initialized. Which is why we will use Vue’s $nextTick() function. It will ensure that the following code runs only after the required div, and ref are rendered and are ready to be addressed. In order to mount the inbox, we just call the mount function on the inbox object and pass this ref of our div, which we set to “talkjs-container”.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-result"&gt;
  &lt;/a&gt;
  The Result
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtSAgkBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ozfarooq/TalkJS/main/Vue2.jpg%3Fraw%3Dtrue%2522%2522" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtSAgkBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ozfarooq/TalkJS/main/Vue2.jpg%3Fraw%3Dtrue%2522%2522" alt="VueJS Chat 2" width="292" height="395"&gt;&lt;/a&gt;&lt;br&gt;
With this we’ve successfully added a chat box to our application. This group chat supports up to 20 users in the basic plan and up to 40 in the growth plan; however, more refinements will drastically increase these limits, such as the rolling enterprise plan.  The chatbox would look something like this. This is the default design, and you can change it endlessly from the TalkJS dashboard.&lt;/p&gt;

&lt;p&gt;The below gif demonstrates the functional design of the Chatbox.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Umw_1DE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/ozfarooq/TalkJS/main/Vue3.gif%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Umw_1DE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/ozfarooq/TalkJS/main/Vue3.gif%3Fraw%3Dtrue" alt="VueJS Chat Gif" width="600" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Change the Opacity of the SnackBar In Flutter?</title>
      <author>Pankaj Das</author>
      <pubDate>Mon, 20 Dec 2021 12:44:06 +0000</pubDate>
      <link>https://dev.to/pankajdas0909/how-to-change-the-opacity-of-the-snackbar-in-flutter-225l</link>
      <guid>https://dev.to/pankajdas0909/how-to-change-the-opacity-of-the-snackbar-in-flutter-225l</guid>
      <description>&lt;p&gt;&lt;a href="https://flutteragency.com/snackbar-widget/"&gt;SnackBar Widge&lt;/a&gt;t is a Flutter widget to show a lightweight simple message at the bottom of the device screen. It can also contain an optional action. So in this article, We will go through how to change the Opacity of the Snackbar In Flutter?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-opacity-widgets"&gt;
  &lt;/a&gt;
  What is Opacity Widgets?
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://flutteragency.com/opacity-widget/"&gt;Opacity widgets&lt;/a&gt; are generally used to make their child partially transparent. So how its work? This widget colors the class into intermedia buffer, and the scene is partially transparent with the merger of child back. The class needs to intermediate buffer the coloring child; therefore, it consumes a little more time. The syntax for the constructor is as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Syntax:
Opacity({Key key,
@required double opacity, 
bool alwaysIncludeSemantics: false, 
Widget child})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#change-the-opacity-of-the-snackbar-in-flutter"&gt;
  &lt;/a&gt;
  Change the Opacity of the Snackbar In Flutter?
&lt;/h3&gt;

&lt;p&gt;To change the &lt;strong&gt;Opacity Widget&lt;/strong&gt; of the &lt;strong&gt;SnackBar Widget&lt;/strong&gt; in Flutter, users can try using the color property of the snack bar like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;backgroundColor: Colors.black.withOpacity(0.5)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can adjust the opacity of your backgroundColor with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;color.withAlpha(..)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;color.withOpacity(..)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using a hexadecimal integer 0x33ffffff (the first pair of digits after the x represents the alpha value),
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;creating a Color using Color.fromARGB(...)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find information about this on this documentation page about the Color class.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is easily adjustable using the &lt;strong&gt;Opacity Widget&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;In your Snackbar just surround your actual content with an Opacity Widget:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: const MyHomePage(title: 'Flutter Agency - Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key, required this.title}) : super(key: key);
  final String title;

  @override
  State createState() =&amp;gt; _MyHomePageState();
}

class _MyHomePageState extends State {
  int _counter = 0;

  void _incrementCounter() {
    setState(
      () {
        _counter++;
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('SnakeBar Output= $_counter'),
            backgroundColor: Colors.black.withOpacity(0.5),
            duration: const Duration(seconds: 1),
          ),
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'You have pushed the button this many times:',
            ),
            Text(
              '$_counter',
              style: Theme.of(context).textTheme.headline4,
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Increment',
        child: const Icon(Icons.add),
      ), // This trailing comma makes auto-formatting nicer for build methods.
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;***Output&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yUPlsyvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rnvvtj684g6tcode4tf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yUPlsyvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rnvvtj684g6tcode4tf.png" alt="SnackBar Widget in Flutter" width="880" height="677"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;In this article, We have been through How to Change the Opacity of the SnackBar In Flutter?&lt;/p&gt;

&lt;p&gt;Keep &lt;strong&gt;Learning&lt;/strong&gt; !!! Keep &lt;strong&gt;Fluttering&lt;/strong&gt; !!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://flutteragency.com/"&gt;&lt;strong&gt;Flutter Agency&lt;/strong&gt;&lt;/a&gt; is our portal Platform dedicated to Flutter Technology and Flutter Developers. The portal is full of cool resources from Flutter like Flutter Widget Guide, Flutter Projects, Code libs and etc.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>widget</category>
      <category>opacity</category>
      <category>snackbar</category>
    </item>
    <item>
      <title>How to Improve Your Search Rank for Google </title>
      <author>Subramanyam Rekhandar</author>
      <pubDate>Mon, 20 Dec 2021 12:38:10 +0000</pubDate>
      <link>https://dev.to/subburekhandar/how-to-improve-your-search-rank-for-google-kp1</link>
      <guid>https://dev.to/subburekhandar/how-to-improve-your-search-rank-for-google-kp1</guid>
      <description>&lt;h5&gt;
  &lt;a href="#money-alone-cant-buy-google-rank-but-with-a-little-time-and-strategy-you-can-improve-your-position-on-the-search-engine-results-page-serp-without-spending-a-dime-here-are-10-free-ways-to-improve-your-google-search-rank"&gt;
  &lt;/a&gt;
  Money alone can’t buy Google rank, but with a little time and strategy you can improve your position on the search engine results page (SERP) without spending a dime. Here are 10 free ways to improve your Google search rank.
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#1improve-your-websites-user-experience"&gt;
  &lt;/a&gt;
  1.Improve your website’s user experience:
&lt;/h2&gt;

&lt;p&gt;According to a study on ranking factors by SEMrush, the top four ranking factors are website visits, time on site, pages per session, and bounce rate. All four of those are directly related to the experience your website is providing your users, which Google recently emphasized with its Page Experience update. It’s pretty simple: If your website is easy and enjoyable to use and offers valuable information, you’ll get more visitors, who will stay longer on your site and visit more pages, and that will improve your search rank.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2write-great-content-optimized-for-seo"&gt;
  &lt;/a&gt;
  2.Write great content optimized for SEO
&lt;/h2&gt;

&lt;p&gt;Having high-quality content on your website is one of the best ways to increase traffic and improve your search rank. In fact, Google itself said in a blog post on page experience that having great, relevant content on a page is more important for ranking than page experience. Make sure your content is mistake-free, keyword-rich, mobile-optimized, written to address the specific needs of your target audience, and includes valuable links to additional internal and external content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3get-more-backlinks"&gt;
  &lt;/a&gt;
  3.Get more backlinks
&lt;/h2&gt;

&lt;p&gt;Backlinks—links from other sites to yours—are one of the most heavily weighted Google ranking factors. Incoming links to your website content from high-authority domains show your site’s authority, bring in traffic, and improve your search ranking.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4improve-your-page-speed"&gt;
  &lt;/a&gt;
  4.Improve your page speed
&lt;/h2&gt;

&lt;p&gt;Load time is one of the key measurements in Google's recent Core Web Vitals upgrade, so it’s a good idea to make sure your site is as fast as possible—both to improve your search rank and provide a good user experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5fix-broken-links"&gt;
  &lt;/a&gt;
  5.Fix broken links
&lt;/h2&gt;

&lt;p&gt;Having quality links on your website is one of the best ways to boost traffic and establish the authority of your site, but links that bring up a 404 error hurt both your user experience and your search rank. Use a tool like BrokenLinkCheck or Dead Link Checker to find any broken links.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6optimize-your-images"&gt;
  &lt;/a&gt;
  6.Optimize your images
&lt;/h2&gt;

&lt;p&gt;Optimizing your images is crucial to boosting the speed of your site and making it easier for Google to identify the images on your web pages. Make sure all your website images are compressed, have descriptive filenames, and include alt text.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7use-h1-and-h2-header-tags"&gt;
  &lt;/a&gt;
  7.Use H1 and H2 header tags
&lt;/h2&gt;

&lt;p&gt;Not only do headers make your content more readable and easier to understand for humans and search engines alike, there is a strong correlation between Google search rank and the use of header tags in the body of your content. Header tags are also a great way to show the structure of your content and emphasize your key points.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8optimize-for-local-search"&gt;
  &lt;/a&gt;
  8.Optimize for local search
&lt;/h2&gt;

&lt;p&gt;More and more people are using their smartphones to search for businesses “near me.” To improve your chances of having your business show up in relevant local searches, make sure you claim your Google My Business listing, provide relevant content in Google Posts, get your business listed in local directories, and improve your online reputation with great online reviews.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9optimize-for-voice-search"&gt;
  &lt;/a&gt;
  9.Optimize for voice search
&lt;/h2&gt;

&lt;p&gt;According to a study by Perficient, voice search is no longer growing, but more than 60% of people surveyed still said voice search is their preferred method of asking questions on their smartphone. Make sure those voice searches find your business by incorporating likely voice search phrases into your website content—be sure to use full sentences phrased in a natural conversational style rather than single keywords.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10aim-for-position-zero"&gt;
  &lt;/a&gt;
  10.Aim for “position zero"
&lt;/h2&gt;

&lt;p&gt;When a user asks a question in Google Search, Google sometimes pulls content from a relevant website and displays it in a special featured snippet or answer box above the #1 search result. Getting content into a featured snippet is a great way to increase traffic (snippets include a link to the page where the content came from), as well as boost the credibility and visibility of your brand. To increase your chances of having your content selected as a featured snippet by Google, think of likely searches related to your business and pepper your site with clear, authoritative answers.&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
