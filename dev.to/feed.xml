<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How I Went From Analyst to Data Engineer</title>
      <author>SeattleDataGuy</author>
      <pubDate>Sun, 04 Jul 2021 05:57:25 +0000</pubDate>
      <link>https://dev.to/seattledataguy/how-i-went-from-analyst-to-data-engineer-48jl</link>
      <guid>https://dev.to/seattledataguy/how-i-went-from-analyst-to-data-engineer-48jl</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@pakata?utm_source=medium&amp;amp;utm_medium=referral"&gt;Pakata Goh&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A common career path question in the data field is how to make the transition from a data analyst to a data engineer.&lt;/p&gt;

&lt;p&gt;Of course, this question is probably overshadowed by the question of how to go from data analyst to data scientist.&lt;/p&gt;

&lt;p&gt;While both data analyst and data engineer can be equally rewarding professions, you may find that you prefer the &lt;a href="https://www.youtube.com/watch?v=LgSHaOvNodA"&gt;more technical and code-heavy side of data engineering&lt;/a&gt;, or perhaps you have many years of experience as an analyst and want to diversify your skills. In either scenario, it is possible to build on your skills and knowledge as an analyst to go into a new role as a data engineer. So what is the most effective way to grow your skills?&lt;/p&gt;

&lt;p&gt;Here is how I went from analyst to data engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#starting-out-as-an-analyst"&gt;
  &lt;/a&gt;
  Starting Out as an Analyst
&lt;/h2&gt;

&lt;p&gt;As in most industries, experience, education, and overall know-how all play a role in getting a job.&lt;/p&gt;

&lt;p&gt;If you are a recent college graduate or otherwise looking for an entry-level position in the data field, it's not unlikely that you'll start in some form of data analyst position. This is the most common scenario because most of these roles only require a bachelor's degree, some Excel experience, and maybe a little SQL. While the work is challenging for those with no working data or statistical knowledge, it is far less complex and requires less technical ability than the work of other members of a data team, such as a data engineer or data scientist.&lt;/p&gt;

&lt;p&gt;Your key role as an analyst is essentially to turn complicated numeric data into a format that those in the organization with no statistical knowledge can understand. The knowledge that you will gain on the job as an analyst will differ depending upon your employer and specific area of expertise; however, there are steps that you can take to ensure that you are positioned to move towards the title of a data engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#seek-out-learning-opportunities"&gt;
  &lt;/a&gt;
  Seek Out Learning Opportunities
&lt;/h2&gt;

&lt;p&gt;First, be sure to make the most of your position as an analyst. During your first job, you will learn a lot of valuable skills that will lay the groundwork for an engineering position.&lt;/p&gt;

&lt;p&gt;For starters, you will learn the ins and outs of how businesses work as well as how to operate professionally in the data field. Despite this, not all analyst positions will allow you to continually learn and develop the skills to become a data engineer. If you are not learning in your first position, be sure to seek other opportunities that hone in on the technical aspects of data analysis. This may be in the form of courses outside of work, working with other teams (like the data science team) within your existing company, or seeking employment with a new company entirely. These projects can also help you get a feel for whether you will excel in the coding/programming aspect of data engineering before making any major employment changes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#develop-your-skills"&gt;
  &lt;/a&gt;
  Develop Your Skills
&lt;/h2&gt;

&lt;p&gt;After you have learned the ins and outs of being an analyst in a more general position and have also learned some of the basics of data engineering, it is wise to find a new position where you work directly under the guidance of an engineering team.&lt;/p&gt;

&lt;p&gt;Here, you will learn the best practices and &lt;a href="https://seattledataguy.substack.com/p/going-beyond-the-hype-what-tech-skills"&gt;drastically transform your technical skills&lt;/a&gt; while working as part of the team. Although you may still be hired on as an analyst or to perform more of a data operations role, you will have the opportunity to take the initiative to prove yourself in coding and programming, and eventually, you will be ready to take on the full duties of a data engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#improve-weak-areas"&gt;
  &lt;/a&gt;
  Improve Weak Areas
&lt;/h2&gt;

&lt;p&gt;Interviewing for a new position can be daunting, especially when you first start out as an analyst and are looking to make the leap to engineer. In this industry, there is a wide range of expectations for those in the data field. You may be required to perform tasks you have never even heard of at one organization, while in others, the bulk of your work may be less technical than you would prefer.&lt;/p&gt;

&lt;p&gt;By interviewing with many employers, you can identify areas where your skills or knowledge levels are lacking and work on these aspects to ensure that your experience is well-rounded. Eventually, however, you will find a position that is in line with your skillset, and you can begin your career as a data engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#examine-a-reallife-journey-from-analyst-to-data-engineer"&gt;
  &lt;/a&gt;
  Examine a Real-Life Journey From Analyst to Data Engineer
&lt;/h2&gt;

&lt;p&gt;I began my data journey as an analyst in the health care field. After college, I had taken several courses like bioinformatics, computation neurobiology, and epidemiology that unveiled my passion for data. Likewise, these courses taught me the importance of programming, and I began to understand the value that these technical skills could provide to someone working in the field of data. I began to use my programming knowledge more, but as a recent college graduate, opportunities as a data engineer were hard to come by. Instead, I began my career as a project analyst at a hospital.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pushed-into-other-teams"&gt;
  &lt;/a&gt;
  Pushed into Other Teams
&lt;/h2&gt;

&lt;p&gt;In this position, I found that my role did not involve much in the form of project analytics and focused more on tasks like website development, managing data warehouses, developing ETLs, and basic analytics. Despite this, I never had an "engineering" title and did not have the opportunity to build a solid foundation in the position because my team was strictly analytics-focused. I realized that this job did not offer learning opportunities that would allow me to advance my career and transition into a data engineer role. I turned to the data science team at the organization and was given an opportunity to develop a data model that was out of my typical wheelhouse, which proved to be a learning experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#took-initiative-and-built-a-side-project"&gt;
  &lt;/a&gt;
  Took Initiative and Built a Side Project
&lt;/h2&gt;

&lt;p&gt;The biggest and most crucial step of my transition from analyst to data engineer came when I left the hospital position behind and began to work with a health care startup that focused on data analytics. I recognized the value of working with an engineering team and thrived under their guidance while learning the best practices in terms of data analytics and engineering.&lt;/p&gt;

&lt;p&gt;While I first started out performing data operations and manually loading data into the warehouse, I took the initiative to build a website that would enable the process to be automated. Although the amount of data being entered did not necessarily require automation, this venture proved that I was able to perform more complex tasks, such as developing.&lt;/p&gt;

&lt;p&gt;My manager began to assign me engineering tasks, and I was able to access a plethora of information and programs that helped me gain real-life experience as a data engineer. After honing my data engineer skills for over two years at the health care startup, I realized that there was little room for personal and professional growth in such a small establishment and began to seek out other employment opportunities as a data engineer in a larger business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#identified-knowledge-gaps-while-interviewing"&gt;
  &lt;/a&gt;
  Identified Knowledge Gaps While Interviewing
&lt;/h2&gt;

&lt;p&gt;Through the interviewing process, I discovered that there were gaps in my knowledge as a data engineer. While some companies were focused on integration and unit tests, others were more concerned with data structures and algorithms. The process of interviewing with several establishments in the data field is hit or miss but allows you to identify new concepts and areas that you need to improve upon, as well as your personal strengths as a data engineer. Using these knowledge gaps, I was able to work on these areas to improve my skills.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#landed-a-job-at-a-faang-as-an-engineer"&gt;
  &lt;/a&gt;
  Landed a Job at a FAANG as an Engineer
&lt;/h2&gt;

&lt;p&gt;Eventually, I landed a job at a FAANG (Facebook, Amazon, Apple, Netflix, and Google). This proved to be a drastic change from the startup I formerly worked at, as there are thousands of engineers employed at these organizations. The data infrastructure was much more mature and streamlined, which made it easier to learn new practices and concepts while also gaining valuable experience in working collaboratively with larger teams.&lt;/p&gt;

&lt;p&gt;While your journey from analyst to data or software engineer may look a lot different from my own path, it is important to remember to use your position as an analyst to gain skills, knowledge, and experience that will make switching into engineering possible in the future.&lt;/p&gt;

&lt;p&gt;Transitioning from an entry-level position, like analyst, to a senior role in any industry can take several years and requires immense dedication. Although you are likely to encounter setbacks and struggle with certain aspects along the way, be sure to use each experience as a learning opportunity from which to grow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=dDFX0-4sLrU&amp;amp;t=1s"&gt;5 Tech Skills You Should Learn In 2021 -- From Devops To System Design&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=lGzh-QendJc&amp;amp;t=2s"&gt;How To Become A Data Engineer: From Analyst To Data Engineer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.theseattledataguy.com/17-questions-you-need-to-ask-about-your-data-strategy/"&gt;How To Improve Your Data-Driven Strategy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://seattledataguy.substack.com/p/greylock-vc-and-5-data-analytics"&gt;Greylock VC and 5 Data Analytics Companies It Invests In&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://seattledataguy.substack.com/p/what-in-the-world-is-dremio-and-why"&gt;What In The World Is Dremio And Why Is It Valued At 1 Billion Dollars?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logitanalytics.com/5-mistakes-that-are-ruining-your-data-driven-strategy-and-costing-you/"&gt;Mistakes That Are Ruining Your Data-Driven Strategy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.theseattledataguy.com/5-great-libraries-manage-big-data-with-python/"&gt;5 Great Libraries To Manage Big Data With Python&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>datascience</category>
      <category>career</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Git Simplified: Working with Remote Repositories</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 04 Jul 2021 04:37:39 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/git-simplified-working-with-remote-repositories-106f</link>
      <guid>https://dev.to/ruppysuppy/git-simplified-working-with-remote-repositories-106f</guid>
      <description>&lt;p&gt;This article is a continuation of the &lt;a href="https://dev.to/ruppysuppy/git-fundamentals-concepts-commands-simplified-2k4j"&gt;last blog&lt;/a&gt; on &lt;code&gt;git&lt;/code&gt; basics. You are highly encouraged to check it out before reading this article.&lt;/p&gt;

&lt;p&gt;Often working on a large project, you will be collaborating with large teams to bring the project to life. &lt;code&gt;Git&lt;/code&gt; helps to streamline this process making it easier for developers to collaborate on &lt;code&gt;git&lt;/code&gt;-based platforms such as &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this article, we will be going through how to contribute to repositories hosted on &lt;strong&gt;GitHub&lt;/strong&gt; (you can use the same steps to work repositories hosted on other sites like &lt;strong&gt;GitLab&lt;/strong&gt; as well).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#setup-the-repository-locally"&gt;
  &lt;/a&gt;
  Setup The Repository Locally
&lt;/h1&gt;

&lt;p&gt;If you are contributing to a repository &lt;em&gt;you don't have write access&lt;/em&gt; to, you must &lt;strong&gt;Fork&lt;/strong&gt; the repository as the first step. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8aEkTp5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvfl4gad1k10999gtltg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8aEkTp5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvfl4gad1k10999gtltg.png" alt="Fork Repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you have a personal copy of the repository. Clone the repository using the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone &amp;lt;clone link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find the clone link in the clone tab of the &lt;strong&gt;forked repository&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MOKBCpiT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mmpzrwleruz2h8a8fr5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MOKBCpiT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mmpzrwleruz2h8a8fr5.png" alt="Clone Link"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you own the repository or have &lt;em&gt;write access&lt;/em&gt; you should copy the clone link from the actual repository as making a &lt;strong&gt;fork&lt;/strong&gt; is unnecessary.&lt;/p&gt;

&lt;p&gt;If you do not have &lt;em&gt;write access&lt;/em&gt;, there is yet another additional step. Go into the cloned repository and add an &lt;strong&gt;upstream remote&lt;/strong&gt; (fancy name for the source repository).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add &amp;lt;upstream remote name&amp;gt; &amp;lt;source repository clone link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The convention is to use "upstream" for the &lt;em&gt;upstream remote&lt;/em&gt; name&lt;/p&gt;

&lt;p&gt;Now you have the remote repository set up in your local machine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EeDPw5D4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgq7bus1mxrfn502ofq4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EeDPw5D4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgq7bus1mxrfn502ofq4.gif" alt="Yay"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#updating-the-local-repository"&gt;
  &lt;/a&gt;
  Updating The Local Repository
&lt;/h1&gt;

&lt;p&gt;If you are working with a group of people, you would be required to fetch the changes made by others. To get the updates, the command is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git pull &amp;lt;remote repository&amp;gt; &amp;lt;branch name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The repository will be "origin" if you have &lt;em&gt;write access&lt;/em&gt; else &lt;em&gt;the upstream remote name you used&lt;/em&gt; while adding the &lt;em&gt;upstream remote&lt;/em&gt; in the previous step.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WFpobXcU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70qpu5mf3xcnqlnjua6u.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WFpobXcU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70qpu5mf3xcnqlnjua6u.PNG" alt="Pull Changes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#updating-the-remote-repository"&gt;
  &lt;/a&gt;
  Updating The Remote Repository
&lt;/h1&gt;

&lt;p&gt;After making the required changes, you would like to push the changes to the remote repository for others to access it. To push the changes to the origin repository use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin &amp;lt;branch name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the origin repository contains the changes you made. If you don't have &lt;em&gt;write access&lt;/em&gt;, you will need to create a &lt;strong&gt;Pull Request&lt;/strong&gt; in the source repository where your changes will be reviewed and merged by the owners or collaborators of the repository.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Congratulation on reading the entire article! Don't forget the pat on your back; you deserve this 😉&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O3VaYsTX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/klwbbt8yahwcwb24g5ji.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O3VaYsTX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/klwbbt8yahwcwb24g5ji.gif" alt="Pat on the back"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you have advanced &lt;code&gt;git&lt;/code&gt; in your arsenal. It's time for you, my disciple, to barge forward and create and contribute to awesome repositories!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a Digital Nomad in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connect to me on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>github</category>
    </item>
    <item>
      <title>I did Frontend Mentor challenges for three weeks, here's what I learned</title>
      <author>Riri</author>
      <pubDate>Sun, 04 Jul 2021 02:43:23 +0000</pubDate>
      <link>https://dev.to/riyanagueco/i-did-frontend-mentor-challenges-for-three-weeks-here-s-what-i-learned-3j01</link>
      <guid>https://dev.to/riyanagueco/i-did-frontend-mentor-challenges-for-three-weeks-here-s-what-i-learned-3j01</guid>
      <description>&lt;p&gt;Hello! It's been a while since &lt;a href="https://dev.to/riyanagueco/creating-a-custom-error-page-on-django-3nnd"&gt;my last post&lt;/a&gt;. I've been busy doing &lt;a href="https://www.frontendmentor.io"&gt;Frontend Mentor&lt;/a&gt; challenges for the past three weeks in the hopes of improving my frontend developing skills. &lt;/p&gt;

&lt;p&gt;If this is your first time hearing about Frontend Mentor, then let me introduce you. Frontend Mentor is a platform where developers can learn and improve their frontend developing skills alongside other developers by implementing solutions to challenges. Anybody can be a mentor, a student, or both. There are five difficulty levels to the challenges that they offer:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Newbie&lt;/li&gt;
&lt;li&gt;Junior&lt;/li&gt;
&lt;li&gt;Intermediate&lt;/li&gt;
&lt;li&gt;Advanced&lt;/li&gt;
&lt;li&gt;Guru&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A lot of these challenges are free, but there are premium challenges you can access if you pay a monthly or yearly fee. I did not avail the PRO membership (yet 👀), so everything I've done up to this point are all free challenges.&lt;/p&gt;

&lt;p&gt;Now, I've worked as a web developer in the past (only a year and a half, I'm nowhere near senior-level or even mid), and if I weren't querying and retrieving data I was constantly fixing and tweaking the frontend, so I have to say I'm not completely new to this. Despite that, I still did start from the very beginning: the newbie challenges. Here's what I learned:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-layout"&gt;
  &lt;/a&gt;
  1. Layout
&lt;/h2&gt;

&lt;p&gt;The newbie challenges composed mostly of HTML and CSS challenges that will test your layout skills. These are fairly small projects, a few card components containing a couple sections or so. It may sound pretty easy, but the first couple challenges that I solved really tested my layout skills with Flexbox and Grid, especially when taking into account the responsive layout.&lt;/p&gt;

&lt;p&gt;There was one in particular that really stumped me until I asked for help from the community. The &lt;a href="https://www.frontendmentor.io/solutions/faq-accordion-challenge-using-only-html-and-css-sHWBDMDJ6"&gt;FAQ accordion challenge&lt;/a&gt; consisted of stacking three different images one over each other, and they all have to somehow "stick" together or be linked together (i.e. when one moves, all others move alongside it). This was a &lt;em&gt;really&lt;/em&gt; interesting challenge, and I'm glad I did it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-mobilefirst-approach"&gt;
  &lt;/a&gt;
  2. Mobile-first approach
&lt;/h2&gt;

&lt;p&gt;Yes, that's right. Before I started doing Frontend Mentor challenges, I hadn't really cared about designing for mobile (I know, I should be ashamed) mainly because in my previous job we didn't really have a designer, we just kind of winged it, and the problem with that approach is that winging it just really doesn't work.&lt;/p&gt;

&lt;p&gt;So when I was presented with my first Frontend Mentor challenge and I saw the desktop design and the mobile design I thought "Wow, neat. I don't have to think about what it's gonna look like for mobile." Immediately after that I thought, "Wait, I can finally do mobile-first now." So that's what I did.&lt;/p&gt;

&lt;p&gt;I have to admit, at first I thought there was some special magic way to the mobile-first approach but it's really just designing for a smaller screen first before moving on to a bigger screen. Still pretty neat though.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-sass"&gt;
  &lt;/a&gt;
  3. Sass
&lt;/h2&gt;

&lt;p&gt;Ah, yes. The famous CSS pre-processor Sass. I was planning to learn this even before I decided to join Frontend Mentor, but I wanted to clean up my CSS first because even though I think I'm doing okay with CSS I still didn't feel confident enough with it to say I'm ready to move on. So after completing 4 newbie challenges and helping other developers with their challenges, I thought maybe I'm ready to learn Sass.&lt;/p&gt;

&lt;p&gt;And boy am I glad I decided to learn Sass. Everything is much easier. I've got to say though, I don't think I would like Sass as much as I like it right now if I hadn't &lt;em&gt;tried&lt;/em&gt; to master or at least be good at CSS first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-accessibility"&gt;
  &lt;/a&gt;
  4. Accessibility
&lt;/h2&gt;

&lt;p&gt;Unlike the mobile-first approach, accessibility actually was one of the things I had cared a lot about while I was developing for my previous job. But, admittedly, accessibility is one of those things that I can never get right the first or second or third time. It's also quite hard to look for a one true solution to some accessibility problems, sometimes you've got to test it out on your own with various screen reader and browser pairs.&lt;/p&gt;

&lt;p&gt;Luckily, there are other like-minded developers in Frontend Mentor that cares about accessibility as much as I do. Actually, if you look through &lt;a href="https://www.frontendmentor.io/profile/rngueco/solutions"&gt;my profile&lt;/a&gt; you'll see that a lot of the feedback on my solutions has to do with accessibility, and I'm glad for it. It's nice that I get to learn all these things about accessibility that I otherwise would probably never learn about.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Overall, I think I'd say I'm a better developer now than I was three weeks ago. There's definitely at least a couple things that changed (for the better) with how I approach or implement frontend. I got to polish some of my JavaScript skills too with client-side form validation on the more recent challenges that I solved.&lt;/p&gt;

&lt;p&gt;There were other things I learned as well, such as how to give useful feedback to other developers, how to help other developers solve problems that they encounter, and also &lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules"&gt;git submodules&lt;/a&gt; which is a pretty neat thing I used to group my Frontend Mentor-related repositories on GitHub. Speaking of which, you can find &lt;a href="https://rngueco.github.io/frontend-mentor-projects/"&gt;all my live site solutions so far here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#moving-forward"&gt;
  &lt;/a&gt;
  Moving forward
&lt;/h2&gt;

&lt;p&gt;I plan to continue solving Frontend Mentor challenges, and this time I will be using them to learn one or two JavaScript UI libraries or frameworks (Angular? React? Vue? 🤔). I'm still deciding which framework or library to start with, so if you have any suggestions please comment them down below and convince me why I should learn this framework among other frameworks!&lt;/p&gt;




&lt;p&gt;If you liked this post, consider &lt;a href="https://ko-fi.com/yanski_"&gt;buying me a coffee&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>sass</category>
    </item>
    <item>
      <title>react-router: useHistory, useLocation and useParams</title>
      <author>Raynaldo Sutisna</author>
      <pubDate>Sun, 04 Jul 2021 01:36:06 +0000</pubDate>
      <link>https://dev.to/raaynaldo/react-router-usehistory-uselocation-and-useparams-10cd</link>
      <guid>https://dev.to/raaynaldo/react-router-usehistory-uselocation-and-useparams-10cd</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I expect that you have read my previous blog, so you already know what is the three route props. If you don't know about it, check my previous blog &lt;a href="https://dev.to/raaynaldo/react-router-three-route-rendering-methods-component-render-and-children-2eng"&gt;here&lt;/a&gt;. I discuss how we can pass the three route props, and I want to show you another easy way to access it without thinking to pass as props.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usehistory"&gt;
  &lt;/a&gt;
  useHistory
&lt;/h2&gt;

&lt;p&gt;Basically, this hook gives you access to &lt;code&gt;history&lt;/code&gt; objects and you have access to several functions to navigate your page. It's all about navigation. This is how you can use &lt;code&gt;useHistory&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useHistory&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Portfolio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;history&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useHistory&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            Portfolio
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Portfolio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#whats-inside-history"&gt;
  &lt;/a&gt;
  What's inside history?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7JZHja9T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acf4yggz7nw7oe75cu58.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7JZHja9T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acf4yggz7nw7oe75cu58.png" alt="history object"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay... so many things here. I know it is confusing in the beginning. I will explain the most common uses of these attributes. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;length(number): the length of the page that you visited.&lt;/li&gt;
&lt;li&gt;action(string): (POP, PUSH, REPLACE)

&lt;ul&gt;
&lt;li&gt;POP: Visiting the route via url, Using history go function(&lt;code&gt;history.goBack()&lt;/code&gt;, &lt;code&gt;history.goForward()&lt;/code&gt;, &lt;code&gt;history.go()&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;PUSH: Using &lt;code&gt;history.push()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;REPLACE: using &lt;code&gt;history.replace()&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;.push(pathname: string, state: any)/(location: object): push a path or location to the history stack.
There are several ways to use push, and I show the examples below.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;    &lt;span class="c1"&gt;//using pathname&lt;/span&gt;
    &lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/blog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//https://localhost:3000/blogs&lt;/span&gt;

    &lt;span class="c1"&gt;//using pathname and state&lt;/span&gt;
    &lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/blog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;fromPopup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="c1"&gt;//https://localhost:3000/blogs&lt;/span&gt;

    &lt;span class="c1"&gt;//using location&lt;/span&gt;
      &lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/blogs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;search&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;?id=5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;fromPopup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="c1"&gt;// https://localhost:3000/blogs?id=5#react&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I have never utilized the state before. However, after I read the documentation, the documentation gave me an idea. For example, if you want to know where the user came from, you can utilize the state.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;.replace(pathname: string, state: any)/(location: object): this is basically similar to push, but it will remove the existing history and update to the new one. Whenever the user clicks back in the browser after &lt;code&gt;.replace&lt;/code&gt;, it will not go back to the previous one.&lt;/li&gt;
&lt;li&gt;.goBack(): move back to the previous history.&lt;/li&gt;
&lt;li&gt;.goForward(): move forward to the previous history.&lt;/li&gt;
&lt;li&gt;.go(delta: number): move to a different index and can specify how many indexes from this position (can be minus or positive)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have never used the three go function, but I just want to let you know that this function has existed in history&lt;/p&gt;

&lt;p&gt;I also prepare codesandbox to help you understand.&lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/q85di"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uselocation"&gt;
  &lt;/a&gt;
  useLocation
&lt;/h2&gt;

&lt;p&gt;Briefly, this is like a state that always returns your current URL. If the URL is changed, the useLocation will be updated as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-inside-location"&gt;
  &lt;/a&gt;
  What's inside location?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tgovfvpW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8dai79ot9j7fzrsekeg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tgovfvpW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8dai79ot9j7fzrsekeg.png" alt="uselocation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;useLocation doesn't have any function like useHistory, and it is just to grab information about your current URL.&lt;/p&gt;

&lt;p&gt;I will use the previous link that we tried to use &lt;code&gt;.push&lt;/code&gt; from history in the example &lt;code&gt;localhost:3000/blogs?id=5#react&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;from that URL, if we are trying to call useLocation, we will get this object.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CCcbbfrw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5nik0d1if4ta4uiw014.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CCcbbfrw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5nik0d1if4ta4uiw014.png" alt="uselocation2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just keep in mind the purpose &lt;code&gt;useLocation()&lt;/code&gt; is getting information from the current route, and it will return these attributes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ac3df4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// not with HashHistory!&lt;/span&gt;
  &lt;span class="na"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/somewhere&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;search&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;?some=search-string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#howdy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;userDefined&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#useparams"&gt;
  &lt;/a&gt;
  useParams
&lt;/h2&gt;

&lt;p&gt;This is the easiest hook from react-router to understand. Whenever you call this hook you will get an object that stores all the parameters as attributes. &lt;/p&gt;

&lt;p&gt;You just need this line of code and you can have access to your params.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useParams&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you can play around in my CodeSandBox&lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/xvmnr"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope this post could help you to understand the three main useful hooks from react-router. It is confusing in the beginning, but after I play around with it, everything makes sense and understandable. Enjoy playing react-router! post your comments to ask me questions.&lt;/p&gt;

</description>
      <category>react</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The frontend Hitchhiker's Guide: JavaScript Frameworks</title>
      <author>Nicholas Mendez</author>
      <pubDate>Sun, 04 Jul 2021 00:58:44 +0000</pubDate>
      <link>https://dev.to/snickdx/the-frontend-hitchhiker-s-guide-javascript-frameworks-2c45</link>
      <guid>https://dev.to/snickdx/the-frontend-hitchhiker-s-guide-javascript-frameworks-2c45</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Every now an then a developer has an idea to simplify building web apps and hence another framework is born. JS Frameworks bridge the gap between what standard JS provides and modern web app concerns.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eIXiRbgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wn7ksbek22ytn9xd2pfb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eIXiRbgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wn7ksbek22ytn9xd2pfb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://community.devexpress.com/blogs/wpf/archive/2014/04/23/devexpress-mvvm-framework-coming-soon-in-v14-1.aspx"&gt;Image Credit&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Frameworks often provides features such as:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Composable UI&lt;/td&gt;
&lt;td&gt;Syntax for defining custom components with encapsulated styling and functionality&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Routing&lt;/td&gt;
&lt;td&gt;Lets you defines different parts of the app for the user to navigate without page loads.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;State Management&lt;/td&gt;
&lt;td&gt;Syntax for allowing data sharing, syncing between components.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Databinding&lt;/td&gt;
&lt;td&gt;Binding form controls to the state of the app.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Templating&lt;/td&gt;
&lt;td&gt;Syntax for mixing templates and data to render dynamic content eg scrollable list of UI components.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Testing&lt;/td&gt;
&lt;td&gt;Tooling for performing unit and integration testing.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Note that many of these features have dedicated libraries which were covered at previous stops in the series. Frameworks tend include these libraries or provide their own implementation.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-frameworks"&gt;
  &lt;/a&gt;
  JavaScript Frameworks
&lt;/h1&gt;

&lt;p&gt;The following are some popular and not so popular JavaScript Frameworks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Frontend Frameworks

&lt;ul&gt;
&lt;li&gt;&lt;a href="#svelte"&gt;Svelte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stencil"&gt;Stencil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apline-js"&gt;Alpine JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ember-js"&gt;Ember JS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Isomorphic Frameworks

&lt;ul&gt;
&lt;li&gt;&lt;a href="#aurelia"&gt;Aurelia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#next-js"&gt;Next JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nuxt-js"&gt;Nuxt JS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#svelte"&gt;
  &lt;/a&gt;
  &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UtkyHIt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ik8bt0wnwewv2qyertx2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UtkyHIt2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ik8bt0wnwewv2qyertx2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Svelte describes itself as 'a radical new approach to building user interfaces'. It favours doing its heavy lifting in a compilation step as opposed to in the browser at runtime. It is steadily growing in usage and popularity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stencil"&gt;
  &lt;/a&gt;
  &lt;a href="https://stenciljs.com/docs/introduction"&gt;Stencil&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y2CQaIKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwa24x547mo2ajrxzaqj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y2CQaIKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwa24x547mo2ajrxzaqj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Stencil was created by the Ionic team, they describe it as a compiler for generating web components. Stencil was designed to for high performance and building on top of Web Standards. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alpine-js"&gt;
  &lt;/a&gt;
  &lt;a href="https://alpinejs.dev/"&gt;Alpine JS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PvKtI5cc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ygx2y0yc1686nqpz9c9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PvKtI5cc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ygx2y0yc1686nqpz9c9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alpine JS seems to be another sleeper hit ranking 4th in the &lt;a href="https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/"&gt;State of JS 2020 Front-end Frameworks&lt;/a&gt;. Alpine is another lightweight framework with a very appealing minimal syntax. All you need to know are 14 attributes, 6 properties and 2 methods!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ember-js"&gt;
  &lt;/a&gt;
  &lt;a href="https://emberjs.com/"&gt;Ember JS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WLSTgXFC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t660l8qnf2il0el2v391.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WLSTgXFC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t660l8qnf2il0el2v391.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ember JS was created in 2011 and hence is (probably) the oldest on this list. The fact that it is still relevant (&lt;a href="https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/"&gt;ranked 9th State of JS 2020&lt;/a&gt;) is an accomplishment in itself. Ember is an all in one framework providing all the features mentioned in the intro as well as an entire &lt;a href="https://www.emberobserver.com/lists/top-addons"&gt;marketplace of community addons&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#isomorphic-frameworks"&gt;
  &lt;/a&gt;
  Isomorphic Frameworks
&lt;/h2&gt;

&lt;p&gt;The remaining frameworks are categorized as &lt;a href="https://en.wikipedia.org/wiki/Isomorphic_JavaScript"&gt;Isomorphic&lt;/a&gt; because they support a feature called &lt;a href="https://www.smashingmagazine.com/2020/07/differences-static-generated-sites-server-side-rendered-apps/#:~:text=Server%2Dside%20rendering%20(SSR)%20is%20the%20process%20of%20rendering,the%20SPA%20framework%20to%20operate."&gt;Server Side Rendering&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
  SSR Explainer
  &lt;p&gt;The web apps built with the previously mentioned frameworks are said to be &lt;strong&gt;Client Side Rendered&lt;/strong&gt;. This means they are deployed as static HTML/JS/CSS files and the dynamic content of the page (eg table, timeline, gallery) are rendered entirely by JavaScript running in the browser without any server side code. &lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;Server Side Rendered&lt;/strong&gt; web application does most, if not all of its rendering on the server. This feature is supported by the remaining frameworks in this list. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nx4OP3jz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pa1qe3axvjv3nujbtbiw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nx4OP3jz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pa1qe3axvjv3nujbtbiw.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://itclub.com.au/next-js-framework"&gt;Image Credit&lt;/a&gt;&lt;/p&gt;



&lt;/p&gt;

&lt;p&gt;Because SSR requires server side code, the following frameworks can be seen as both frontend and backend (hence the term isomorphic). I have a more in depth look of CSR vs SSR in another post series: &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/snickdx" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--54mJK8k---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Tj-OguEM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/304653/d0e52f0e-c7ea-4cfe-ac87-d6755560c44b.jpg" alt="snickdx"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/snickdx/understanding-rendering-in-web-apps-ssr-1h83" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Understanding Rendering in Web Apps: SSR&lt;/h2&gt;
      &lt;h3&gt;Nicholas Mendez ・ Jan 14 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#ssr&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#aurelia"&gt;
  &lt;/a&gt;
  &lt;a href="https://aurelia.io/home"&gt;Aurelia&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1cXb6OG0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpcxby78c3e1g5pb9zj3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1cXb6OG0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpcxby78c3e1g5pb9zj3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aurelia is another lesser known framework that appears to be gaining some traction and describes itself as simple, powerful and unobtrusive. Aurelia boasts unmatched extensibility in terms of creating and customizing elements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-js"&gt;
  &lt;/a&gt;
  &lt;a href="https://nextjs.org/"&gt;Next JS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kW1Fak4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0x5ns7gxncuns78sv8e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kW1Fak4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0x5ns7gxncuns78sv8e.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next is often called a meta-framework as it is built on top of another 'framework' such as react. In addition to Server Side Rendering, next boasts features such build tooling, internationalization, and image optimization. Next is a hugely popular framework that is making waves in the space. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nuxt-js"&gt;
  &lt;/a&gt;
  &lt;a href="https://nuxtjs.org/"&gt;Nuxt JS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZB3oIUpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7ba4u2bth5srfh77hau.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZB3oIUpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7ba4u2bth5srfh77hau.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Whenever there is something for react you can almost bet there is an equivalent for Vue. Like Next, Nuxt supports Server Side Rendering, data fetching and configuration for Search Engine Optimization. Nuxt also has options for transitioning and showing progress bars between page navigations.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;At this point you may be wondering why a certain popular framework was not mentioned. This is because it actually resides at the next stop on this series. Stay tuned next week for stop #7.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://2020.stateofjs.com/en-US/technologies/front-end-frameworks/"&gt;The State of JS Survey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Fundamentos de Teste Automatizados
</title>
      <author>Rafael</author>
      <pubDate>Sun, 04 Jul 2021 00:56:17 +0000</pubDate>
      <link>https://dev.to/rs_marinheiro/fundamentos-de-teste-automatizados-43a7</link>
      <guid>https://dev.to/rs_marinheiro/fundamentos-de-teste-automatizados-43a7</guid>
      <description>&lt;p&gt;Por mais que se planeje a construção de um software,fazendo o uso de tecnologias de ponta do mercado, adotando as melhores práticas no desenvolvimento de uma aplicação, erros são passíveis de ocorrer, o que acaba gerando grandes dores de cabeça para usuários  projetistas e  prejuízos astronômicos para empresas principalmente se for uma aplicação com alta criticidade.&lt;br&gt;
    Quem já por isso sabe o quão desagradável é ficar na mão quando um programa fecha de forma inesperada devido a um bug no sistema, este fato poderia ter sido evitado caso a equipe em questão estivesse como hábito a utilização das ferramentas de teste apropriadas para a detecção do bug.&lt;br&gt;
Portanto um dos benefícios quando temos o hábito de testar um software é detectar de forma rápida se determinada mudança acaba violando determinada regra e qual impacto que essa mudança pode trazer para quem está utilizando o software, simulando casos reais e avaliando se todas as funcionalidades entregues estão funcionando de forma correta e segura, em outras palavras é no teste que podemos avaliar se o programa está funcionando de forma esperada. Justamente por todos esses argumentos já citados que equipes e empresas gastam tempo e recursos na adoção de ferramentas e metodologias de teste.&lt;br&gt;
    Atualmente existem diversos tipos de testes para detectarmos os mais variados cenários(daria até para fazer um livro) mas o enfoque do artigo será nos testes automatizados.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;O que é um teste automatizado?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No decorrer do desenvolvimento e na manutenção de um sistema a complexidade tende a aumentar, projetista e desenvolvedores passam a ter dificuldades em avaliar se os recursos estão funcionais ou não  pois o software que antes contemplava poucos cenários agora passa a atender um número muito maior de casos sua complexidade agora e 10 vezes maior.&lt;br&gt;
Para auxiliar os times de alta performance na avaliação de softwares é que utilizamos os testes automatizados que nada mais é que um software escrito por alguém que tem intuito de avaliar o seu sistema.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3 tipos de testes automatizados?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Os testes funcionais podem ser feitos de diversas maneiras, mas as 3 abordagens que o mercado mais utiliza que tem como intuito detectar bugs no menor tempo possível sem comprometer a qualidade do sistema são:&lt;/p&gt;

&lt;p&gt;1.Teste Unitário&lt;br&gt;
    É o teste feito pelo desenvolvedor tem como intuito validar o comportamento funcional do código, em outras palavras estamos testando os métodos de uma classe, com base numa  determinada entrada qual resposta que esperamos que aconteça.&lt;br&gt;
Nesse tipo de teste não podemos acessar outros componentes(isto é não podemos criar objetos de outras classes), ou recursos externos(como bd,rede, web services e etc).&lt;br&gt;
Caso haja necessidade de instanciar  objetos de outras classes ou simularmos o retorno de algum webservice  para executarmos um teste unitário por exemplo utilizamos de um artifício que é mocar um objeto ou serviço(isto é criar um objeto fake ) para podermos simular o resultado esperado. Utilizamos uma ferramenta muito popular usada para realizarmos o mock é o mockito.&lt;br&gt;
Nos de testes unitários também utilizamos uma ferramenta muito famosa chamada Junit&lt;/p&gt;

&lt;p&gt;2.Integração&lt;br&gt;
  Também conhecido como teste de web service/API é o teste voltado em verificar a  comunicação entre componentes/módulos e recursos externos de uma aplicação. O objetivo deste teste é verificar se a interação entre os componentes e APIs está ocorrendo de forma correta. &lt;br&gt;
Geralmente neste tipo de teste utilizamos ferramentas já conhecida por desenvolvedores como SoapUI e PostMan.&lt;/p&gt;

&lt;p&gt;3.Funcional&lt;br&gt;
É o teste do ponto de vista do usuário final  que tem como finalidade verificar se uma &lt;br&gt;
determinada funcionalidade tá sendo executada da forma esperada, como foi planejada em outras palavras estamos testando os nossos casos de uso.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benefícios em Utilizar Teste Automatizados&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Como já dito acima um dos benefícios em utilizar testes automatizados em um projeto é detectar de forma mais rápida se determinadas mudanças violam regras de negócio.&lt;/li&gt;
&lt;li&gt;Além disso o uso testes automatizados é uma forma de documentar 
aplicação, já que quando estamos implementando os testes na nossa aplicação a lógica tende a ser a mais simples clara e objetiva possível,o comportamento dos métodos quais entrada/saídas e os resultados esperados.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redução de custos de manutenção, pois num desenvolvimento de software a etapa de validação,homologação e até mesmo de manutenção é muito custosa, portanto se a sua aplicação estiver com uma boa cobertura de testes certamente você passará por essa etapa sem muitas dores no bolso.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Melhorias no design da solução, pois a cada feature nova a aplicação é testada, possibilitando mudanças na estrutura arquitetural de uma aplicação.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;TDD - Test Driven Development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Antes de mais nada é importante esclarecermos que TDD é nada mais que um &lt;strong&gt;método de desenvolver testes&lt;/strong&gt; isso significa dizer que o TDD é uma definição da maneira como a equipe irá trabalhar na elaboração dos testes, não é o foco do TDD  avaliar se os testes estão sendo bem ou mal executados ou se o projeto tem ou não tem testes.Além disso não significa necessariamente que um software só por ter testes automatizados possa ser de cara já encaixado no padrão do TDD.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principais Vantagens Na Utilização do TDD&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Foco nos requisitos isto é no TDD você começa primeiro pelos testes antes de sair de cara implementando algo. Neste momento você não está preocupado como o método será implementado e sim qual o comportamento e esperado dele após inserirmos uma determinada informação.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Melhora o design da aplicação pois o código desenvolvido passa a ser testado repetidas vezes, evitando que tenhamos que escrever códigos demasiadamente complexos.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dá mais segurança ao desenvolvedor na hora de implementar novas &lt;br&gt;
funcionalidades, tendo assim mesmo chance de quebrar a aplicação devido alguma feature nova.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Processo Básico&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bem já que falamos que o TDD é um metodologia para o desenvolvimento de testes abaixo vamos listar alguns itens básicos levados em consideração no TDD.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Como já dito acima o TDD prega a cultura de escrever primeiro os testes antes de sair desenvolvendo um método, nesta etapa a preocupação é descrever o comportamento do método baseado numa entrada(é natural que nesta etapa o seu teste ainda esteja falhando pois o componente ainda não foi implementado).&lt;/li&gt;
&lt;li&gt;Agora sim nessa etapa você deverá implementar o código, os casos de uso e os componentes necessários para que o teste passe.&lt;/li&gt;
&lt;li&gt;Essa etapa é opcional e avalia a necessidade de refatoração do código mediante a necessidade.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Boas Praticas e Padrão Quando Estamos Implementando Testes Automatizados&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Neste tópico vou procurar mostrar algumas das melhores praticas e padrões quando estamos desenvolvendo testes automatizados(eu sei que é um tema polêmico e não existe uma regra universal e cada equipe faz da forma que deseja), mais abaixo procuro demonstrar o que na visão de vários especialistas é importante:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nomenclatura de Teste (AÇÃO should EFEITO when CENÁRIO)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dado uma ação qual será o efeito(should efeito) dela mediante aquele cenário(when cenário) exemplos:&lt;/p&gt;

&lt;p&gt;Ação : Método Delete&lt;br&gt;
Efeito: Dado um determinado ID deverá excluir um determinado registro do BD.&lt;br&gt;
Cenário: Quando o ID existir&lt;/p&gt;

&lt;p&gt;Ação : Método Delete&lt;br&gt;
Efeito: Lançar uma exceção quando a aplicação não encontrar um ID Cenário: Quando o ID não existir&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Padrão AAA&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Arrange : Primeiro instancie os objetos necessários(de new nos objetos que você irá utilizar)&lt;/li&gt;
&lt;li&gt;Act: execute as ações necessárias isto é faça o que tem de ser efeito no método isto é  inserir/atualizar um dado no Banco por exemplo&lt;/li&gt;
&lt;li&gt;Assert: declare o que deveria acontecer (resultado esperado).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Princípio da Inversão de Controle(SOLID)&lt;/strong&gt;&lt;br&gt;
Uma classe A jamais poderá depender da instância de uma classe B(se isso estiver sendo feito esse teste não pode ser chamado de teste unitário). Caso você precise acessar instâncias de outras classes precisaremos criar mocks(objetos fakes como já dito acima).&lt;br&gt;
Isso acaba ajudando na testabilidade do método garantindo assim o isolamento da unidade a ser testada.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Independência&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Um teste não pode depender de outro teste e  a ordem de como o teste será executado pouco importa, portanto é uma boa pratica que os testes sejam independentes um não pode ficar dependendo de dados do outro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cenário Único&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cada teste deve ter um cenário especifico, e sua lógica deve ser a mais simples possível sem o uso de loops ou operadores condicionais.&lt;br&gt;
Se você reparou no exemplo acima foi criado um cenário onde um ID existia e um outro cenário onde não existia o ID.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Previsibilidade&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O resultado de um teste deve ser sempre o mesmo para os mesmos dados,evite que o seu teste faça depender de coisas que variam como: timeStamp atual(new Date,instant.now) e valores aleatórios (como random).&lt;/p&gt;

</description>
      <category>tdd</category>
      <category>java</category>
      <category>braziliandevs</category>
    </item>
    <item>
      <title>Amazon EKS Security Assessment - Kube Bench</title>
      <author>Sivamuthu Kumar</author>
      <pubDate>Sun, 04 Jul 2021 00:45:19 +0000</pubDate>
      <link>https://dev.to/aws-builders/amazon-eks-security-assessment-kube-bench-203</link>
      <guid>https://dev.to/aws-builders/amazon-eks-security-assessment-kube-bench-203</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;The Center for Internet Security provides many guidelines and benchmark tests for best practices in securing your code. The CIS has published a &lt;a href="https://www.cisecurity.org/benchmark/kubernetes/"&gt;benchmark for Kubernetes&lt;/a&gt;. The &lt;a href="https://github.com/aquasecurity/kube-bench"&gt;kube-bench&lt;/a&gt; is an open-source tool that checks whether Kubernetes is deployed securely by running the &lt;a href="https://www.cisecurity.org/benchmark/kubernetes/"&gt;CIS benchmark for Kubernetes&lt;/a&gt; checks. It's written as a Go application and also distributed as a container. Each test is defined in the YAML and also supports JSON-format output that can be used to evolve along wiht Kubernetes and to integrate with automaton tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#managed-kubernetes-amp-cis-amazon-eks-benchmark"&gt;
  &lt;/a&gt;
  Managed Kubernetes &amp;amp; CIS Amazon EKS Benchmark
&lt;/h2&gt;

&lt;p&gt;The CIS Kubernetes Benchmark is scoped for implementations managing both the control plane, which includes etcd, API server, controller, scheduler, and the data plane, which is made up of one or more nodes or EC2 instances.&lt;/p&gt;

&lt;p&gt;The managed Kubernetes clusters provide a level of CIS hardening already in place, and it delegates some settings to the user. It works best when you want to understand whether your workloads and the worker nodes are appropriately set up to implement these guidelines. &lt;a href="https://aws.amazon.com/blogs/containers/introducing-cis-amazon-eks-benchmark/"&gt;CIS Amazon EKS Benchmark v1.0.0&lt;/a&gt; provides guidance for node security configurations for Kubernetes and aligns with CIS Kubernetes Benchmark.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#running-kubebench"&gt;
  &lt;/a&gt;
  Running kube-bench
&lt;/h2&gt;

&lt;p&gt;We will deploy the Kubernetes Job using the below YAML file. We can install the kube-bench directly in the nodes as well. In this blog, we are going to run the kube-bench as a kubernetes job.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# eks-kube-bench-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kube-bench
spec:
  template:
    spec:
      hostPID: true
      containers:
        - name: kube-bench
          image: aquasec/kube-bench:latest
          command: ["kube-bench", "--benchmark", "eks-1.0"]
          volumeMounts:
            - name: var-lib-kubelet
              mountPath: /var/lib/kubelet
              readOnly: true
            - name: etc-systemd
              mountPath: /etc/systemd
              readOnly: true
            - name: etc-kubernetes
              mountPath: /etc/kubernetes
              readOnly: true
      restartPolicy: Never
      volumes:
        - name: var-lib-kubelet
          hostPath:
            path: "/var/lib/kubelet"
        - name: etc-systemd
          hostPath:
            path: "/etc/systemd"
        - name: etc-kubernetes
          hostPath:
            path: "/etc/kubernetes"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Run the job in your EKS cluster&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl apply -f eks-kube-bench-job.yaml

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the kube-bench job is completed, you can view the pod's logs to see the results of the kube-bench.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[INFO] 3 Worker Node Security Configuration
[INFO] 3.1 Worker Node Configuration Files
[PASS] 3.1.1 Ensure that the proxy kubeconfig file permissions are set to 644 or more restrictive (Scored)
[PASS] 3.1.2 Ensure that the proxy kubeconfig file ownership is set to root:root (Scored)
[PASS] 3.1.3 Ensure that the kubelet configuration file has permissions set to 644 or more restrictive (Scored)
[PASS] 3.1.4 Ensure that the kubelet configuration file ownership is set to root:root (Scored)
[INFO] 3.2 Kubelet
[PASS] 3.2.1 Ensure that the --anonymous-auth argument is set to false (Scored)
[PASS] 3.2.2 Ensure that the --authorization-mode argument is not set to AlwaysAllow (Scored)
[PASS] 3.2.3 Ensure that the --client-ca-file argument is set as appropriate (Scored)
[PASS] 3.2.4 Ensure that the --read-only-port argument is set to 0 (Scored)
[PASS] 3.2.5 Ensure that the --streaming-connection-idle-timeout argument is not set to 0 (Scored)
[PASS] 3.2.6 Ensure that the --protect-kernel-defaults argument is set to true (Scored)
[PASS] 3.2.7 Ensure that the --make-iptables-util-chains argument is set to true (Scored) 
[PASS] 3.2.8 Ensure that the --hostname-override argument is not set (Scored)
[WARN] 3.2.9 Ensure that the --event-qps argument is set to 0 or a level which ensures appropriate event capture (Scored)
[PASS] 3.2.10 Ensure that the --rotate-certificates argument is not set to false (Scored)
[PASS] 3.2.11 Ensure that the RotateKubeletServerCertificate argument is set to true (Scored)

== Remediations ==
3.2.9 If using a Kubelet config file, edit the file to set eventRecordQPS: to an appropriate level.
If using command line arguments, edit the kubelet service file
/etc/systemd/system/kubelet.service on each worker node and
set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.
Based on your system, restart the kubelet service. For example:
systemctl daemon-reload
systemctl restart kubelet.service

== Summary ==
14 checks PASS
0 checks FAIL
1 checks WARN
0 checks INFO

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Delete the job&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Run the below commands to delete the kube-bench job.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl delete -f job-eks.yaml

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#integrating-kubebench-with-aws-security-hub"&gt;
  &lt;/a&gt;
  Integrating kube-bench with AWS Security Hub
&lt;/h2&gt;

&lt;p&gt;You can configure kube-bench with the &lt;em&gt;--asff&lt;/em&gt; to send findings to AWS Security Hub. Before, that, we've to enable the AWS Security Hub integration and set the required IAM role and policies to forward the findings to the AWS Security Hub.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enable-the-aws-security-hub-integration"&gt;
  &lt;/a&gt;
  Enable the AWS Security Hub integration
&lt;/h3&gt;

&lt;p&gt;You will need AWS Security Hub to be enabled in your account. In the Security Hub console, under Integrations, search for kube-bench. Click on Accept findings to enable the "Aqua Security kube bench" to integrate with AWS Security Hub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pS3GRT5J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1615888910692/u8CvF2DyZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pS3GRT5J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1615888910692/u8CvF2DyZ.png" alt="kube-bench-security-hub.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's configure the kube-bench job to send the report to AWS Security Hub.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iam-policy-to-send-to-aws-security-hub"&gt;
  &lt;/a&gt;
  IAM Policy to send to AWS Security Hub
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "securityhub:BatchImportFindings",
            "Resource": [
                "arn:aws:securityhub:us-east-1::product/aqua-security/kube-bench"
            ]
        }
    ]
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-service-account-iam-role-and-policy"&gt;
  &lt;/a&gt;
  Create Service Account IAM Role and Policy
&lt;/h3&gt;

&lt;p&gt;Please use &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html"&gt;this guide&lt;/a&gt; creating the IAM role and policy to attach to the service account for the pod running the kube-bench job.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubebench-with-asff"&gt;
  &lt;/a&gt;
  kube-bench with asff
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;--------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-bench
  # If using a dedicated IAM role for kube-bench, uncomment the annotations
  # block below and replace the ROLE_ARN
  # annotations:
  # eks.amazonaws.com/role-arn: "&amp;lt;ROLE_ARN&amp;gt;"

--------
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-bench-eks-config
data:
  config.yaml: |
    AWS_ACCOUNT: "&amp;lt;AWS_ACCT_NUMBER&amp;gt;"
    AWS_REGION: "&amp;lt;AWS_REGION&amp;gt;"
    CLUSTER_ARN: "&amp;lt;AWS_CLUSTER_ARN&amp;gt;"

--------
apiVersion: batch/v1
kind: Job
metadata:
  name: kube-bench
spec:
  template:
    spec:
      hostPID: true
      containers:
        - name: kube-bench
          image: aquasec/kube-bench:latest
          command: ["kube-bench", "node", "--benchmark", "eks-1.0", "--asff"]
          volumeMounts:
            - name: var-lib-kubelet
              mountPath: /var/lib/kubelet
              readOnly: true
            - name: etc-systemd
              mountPath: /etc/systemd
              readOnly: true
            - name: etc-kubernetes
              mountPath: /etc/kubernetes
              readOnly: true
            - name: kube-bench-eks-config
              mountPath: "/opt/kube-bench/cfg/eks-1.0/config.yaml"
              subPath: config.yaml
              readOnly: true
      restartPolicy: Never
      serviceAccountName: kube-bench
      volumes:
        - name: var-lib-kubelet
          hostPath:
            path: "/var/lib/kubelet"
        - name: etc-systemd
          hostPath:
            path: "/etc/systemd"
        - name: etc-kubernetes
          hostPath:
            path: "/etc/kubernetes"
        - name: kube-bench-eks-config
          configMap:
            name: kube-bench-eks-config
            items:
              - key: config.yaml
                path: config.yaml

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the job using the above yaml to send the findings to AWS Security Hub.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-hub-findings"&gt;
  &lt;/a&gt;
  Security Hub Findings
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G4VCL-ZW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1615889119501/PHxDWx38m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G4VCL-ZW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1615889119501/PHxDWx38m.png" alt="asff-example-finding.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;In this blog post, we had a walkthrough on running kube-bench tests against EKS worker nodes and forwarding the kube-bench summary to AWS Security Hub. You can use the CIS Amazon EKS Benchmark to assess Amazon EKS cluster nodes' security configuration accurately.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>security</category>
      <category>kubernetes</category>
      <category>containers</category>
    </item>
    <item>
      <title>React page routes made easy!!</title>
      <author>hillary</author>
      <pubDate>Sat, 03 Jul 2021 22:42:16 +0000</pubDate>
      <link>https://dev.to/hills2003/react-page-routes-made-easy-3nc6</link>
      <guid>https://dev.to/hills2003/react-page-routes-made-easy-3nc6</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Ever wondered how to implement page routes in a complex react application?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;worry not cuz i ve'gat a solution for y'all&lt;/p&gt;

&lt;p&gt;an npm package @dev_hills/easyroutes ,it makes routing between pages as easy as easy!!&lt;/p&gt;

&lt;p&gt;npm i @dev_hills/easyroute and you are all set-up, it accepts a single prop which is basically an array of objects.&lt;/p&gt;

&lt;p&gt;//[{path:"/about",component:"About"}]&lt;/p&gt;

&lt;p&gt;you can as well pass in any number of objects to the array , thats all you need as property to get up and running with this cool package ..&lt;/p&gt;

&lt;p&gt;check it out guys&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>gatsby</category>
      <category>html</category>
    </item>
    <item>
      <title>Bogo sort algorithm</title>
      <author>Aya Bouchiha</author>
      <pubDate>Sat, 03 Jul 2021 22:31:26 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/bogo-sort-algorithm-4l0m</link>
      <guid>https://dev.to/ayabouchiha/bogo-sort-algorithm-4l0m</guid>
      <description>&lt;p&gt;Hi, today, I'm going to talk about ridiculous sorting algorithms which are called &lt;em&gt;Bogo sort&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#definition-of-bogo-sort"&gt;
  &lt;/a&gt;
  Definition of Bogo sort
&lt;/h2&gt;

&lt;p&gt;Bogo sort: called also &lt;em&gt;stupid sort&lt;/em&gt;, &lt;em&gt;slow sort&lt;/em&gt;, &lt;em&gt;monkey sort&lt;/em&gt; is a type of sorting algorithms, it works by shuffling randomly array elements until the array is sorted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-amp-space-complexity"&gt;
  &lt;/a&gt;
  Time &amp;amp; Space complexity
&lt;/h2&gt;

&lt;p&gt;Time complexity: &lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Best case: O(n)&lt;/li&gt;
&lt;li&gt; Average case: O(n!) &lt;/li&gt;
&lt;li&gt; Worst case: infinte ( &lt;em&gt;because there is no guarantee that a randome suffling will ever produce a sorted array&lt;/em&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The space complexity of &lt;em&gt;Bogo sort&lt;/em&gt; is O(1)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation-of-bogo-sort-using-python"&gt;
  &lt;/a&gt;
  Implementation of Bogo sort using Python
&lt;/h2&gt;

&lt;p&gt;for getting a random integer to shuffle the array we need to import &lt;strong&gt;randint&lt;/strong&gt; from the random module&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#shuffle-function"&gt;
  &lt;/a&gt;
  Shuffle function
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;randomInt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randomInt&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randomInt&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#issorted-function"&gt;
  &lt;/a&gt;
  isSorted function
&lt;/h3&gt;

&lt;p&gt;we should implement a function that checks if the array is sorted, if the function returned True, It means the array is sorted and we need to break the loop, else (&lt;em&gt;returned False&lt;/em&gt;) we'll shuffle it again until the array will be sorted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isSorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bogo-sort"&gt;
  &lt;/a&gt;
  Bogo sort
&lt;/h3&gt;

&lt;p&gt;this function shuffles the array randomly until it is sorted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;BogoSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# while the array is not sorted
&lt;/span&gt;    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;isSorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# if the array is sorted
&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-code"&gt;
  &lt;/a&gt;
  Final Code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isSorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;randomInt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randomInt&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;randomInt&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;BogoSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;isSorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Have an amazing day!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references-and-useful-resources"&gt;
  &lt;/a&gt;
  References and useful resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/bogosort-permutation-sort/"&gt;https://www.geeksforgeeks.org/bogosort-permutation-sort/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://rosettacode.org/wiki/Sorting_algorithms/Bogosort"&gt;https://rosettacode.org/wiki/Sorting_algorithms/Bogosort&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=DaPJkYo2quc"&gt;https://www.youtube.com/watch?v=DaPJkYo2quc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;#day_21&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>computerscience</category>
      <category>codenewbie</category>
      <category>python</category>
    </item>
    <item>
      <title>Localstack with Terraform and Docker for running AWS locally</title>
      <author>Talha Altınel</author>
      <pubDate>Sat, 03 Jul 2021 22:00:01 +0000</pubDate>
      <link>https://dev.to/mrwormhole/localstack-with-terraform-and-docker-for-running-aws-locally-3a6d</link>
      <guid>https://dev.to/mrwormhole/localstack-with-terraform-and-docker-for-running-aws-locally-3a6d</guid>
      <description>&lt;p&gt;    Hello everyone, in this post I will be demonstrating how you can run localstack with Terraform and Docker and give you a proof of concept go application so you can tweak it according to your logic and follow anything you want to do such as integration/system tests for AWS services in your own CI/CD or localhost.&lt;/p&gt;

&lt;p&gt;Github Repository for PoC(proof of concept):&lt;br&gt;
&lt;a href="https://github.com/MrWormHole/hotdog-localstack-PoC"&gt;hotdog-PoC-repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;docker-compose&lt;/li&gt;
&lt;li&gt;Terraform&lt;/li&gt;
&lt;li&gt;Go&lt;/li&gt;
&lt;li&gt;aws CLI&lt;/li&gt;
&lt;li&gt;A bit of lambda, dynamodb and kinesis knowledge&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;p&gt;Localstack is a testing/mocking framework for developing Cloud applications locally. Where in theory, you can stick any AWS service and emulate them in localhost without ever needing the real AWS account. &lt;br&gt;
Localstack’s primary goal to make integration/system testing less painful for developers.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-was-built"&gt;
  &lt;/a&gt;
  What was built?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e0pAwoYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/omwafkqkirsigsvqjxts.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e0pAwoYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/omwafkqkirsigsvqjxts.png" alt="flow-diagram"&gt;&lt;/a&gt;&lt;br&gt;
    I built an imaginary hotdog food chain! (Note: No dogs were harmed in this process). Essentially PoC logic was I had 1 dogs dynamodb table which consist a dog model with 3 attributes ID, name, isAlive and isEaten. Then I had 3 lambdas dogCatcher, dogProcessor and hotDogDespatcher. dog catcher's responsibility is to get alive dogs via external API requests(I generated data for simplicity) with unique IDs and different names. Dog processor's responsibility is to kill the dogs and persist the data that was sent from dog catcher. Hot dog despatcher's responsibility is to give processed dogs(hot dogs) to people and observe which ones were eaten via external API requests(I assumed hot dogs get eaten if their name has case-insensitive "e" or "a" letter)&lt;/p&gt;

&lt;p&gt;Aside from lambdas, I had 3 kinesis streams and 3 kinesis triggers in order to make lambdas talk to each other. The named kinesis streams is as follows; caughtDogs, hotDogs, eatenHotDogs.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#starting-localstack-docker-container-with-dockercompose"&gt;
  &lt;/a&gt;
  Starting Localstack docker container with docker-compose
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3.8'&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;localstack&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;localstack_main"&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;localstack/localstack:latest&lt;/span&gt;
        &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;SERVICES=dynamodb,lambda,kinesis&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;LAMBDA_EXECUTOR=docker_reuse&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;DOCKER_HOST=unix:///var/run/docker.sock&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;DEFAULT_REGION=ap-southeast-2&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;DEBUG=1&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;DATA_DIR=/tmp/localstack/data&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;PORT_WEB_UI=8080&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;LAMBDA_DOCKER_NETWORK=localstack-tutorial&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;KINESIS_PROVIDER=kinesalite&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;53:53"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;53:53/udp"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;443:443"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;4566:4566"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;4571:4571"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;8080:8080"&lt;/span&gt;
        &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/var/run/docker.sock:/var/run/docker.sock&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;localstack_data:/tmp/localstack/data&lt;/span&gt;
        &lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

&lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;localstack_data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;external&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;localstack-tutorial&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose up &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;--build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#bootstrapping-our-infra-with-terraform"&gt;
  &lt;/a&gt;
  Bootstrapping our infra with Terraform
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"aws"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;region&lt;/span&gt;                      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ap-southeast-2"&lt;/span&gt;
  &lt;span class="nx"&gt;access_key&lt;/span&gt;                  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"fake"&lt;/span&gt;
  &lt;span class="nx"&gt;secret_key&lt;/span&gt;                  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"fake"&lt;/span&gt;
  &lt;span class="nx"&gt;skip_credentials_validation&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;skip_metadata_api_check&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;skip_requesting_account_id&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

  &lt;span class="nx"&gt;endpoints&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;dynamodb&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http://localhost:4566"&lt;/span&gt;
    &lt;span class="nx"&gt;lambda&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http://localhost:4566"&lt;/span&gt;
    &lt;span class="nx"&gt;kinesis&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http://localhost:4566"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// DYNAMODB TABLES&lt;/span&gt;
&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_dynamodb_table"&lt;/span&gt; &lt;span class="s2"&gt;"dogs"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;           &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogs"&lt;/span&gt;
  &lt;span class="nx"&gt;read_capacity&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"20"&lt;/span&gt;
  &lt;span class="nx"&gt;write_capacity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"20"&lt;/span&gt;
  &lt;span class="nx"&gt;hash_key&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ID"&lt;/span&gt;

  &lt;span class="nx"&gt;attribute&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ID"&lt;/span&gt;
    &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"S"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// KINESIS STREAMS&lt;/span&gt;
&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_kinesis_stream"&lt;/span&gt; &lt;span class="s2"&gt;"caught_dogs_stream"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"caughtDogs"&lt;/span&gt;
  &lt;span class="nx"&gt;shard_count&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;retention_period&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;

  &lt;span class="nx"&gt;shard_level_metrics&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"IncomingBytes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"OutgoingBytes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_kinesis_stream"&lt;/span&gt; &lt;span class="s2"&gt;"hot_dogs_stream"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hotDogs"&lt;/span&gt;
  &lt;span class="nx"&gt;shard_count&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;retention_period&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;

  &lt;span class="nx"&gt;shard_level_metrics&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"IncomingBytes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"OutgoingBytes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_kinesis_stream"&lt;/span&gt; &lt;span class="s2"&gt;"eaten_hot_dogs_stream"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"eatenHotDogs"&lt;/span&gt;
  &lt;span class="nx"&gt;shard_count&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;retention_period&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;

  &lt;span class="nx"&gt;shard_level_metrics&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"IncomingBytes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"OutgoingBytes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// LAMBDA FUNCTIONS&lt;/span&gt;
&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_lambda_function"&lt;/span&gt; &lt;span class="s2"&gt;"dog_catcher_lambda"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;function_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogCatcher"&lt;/span&gt;
  &lt;span class="nx"&gt;filename&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogCatcher.zip"&lt;/span&gt;
  &lt;span class="nx"&gt;handler&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"main"&lt;/span&gt;
  &lt;span class="nx"&gt;role&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"fake_role"&lt;/span&gt;
  &lt;span class="nx"&gt;runtime&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"go1.x"&lt;/span&gt;
  &lt;span class="nx"&gt;timeout&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
  &lt;span class="nx"&gt;memory_size&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_lambda_function"&lt;/span&gt; &lt;span class="s2"&gt;"dog_processor_lambda"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;function_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogProcessor"&lt;/span&gt;
  &lt;span class="nx"&gt;filename&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogProcessor.zip"&lt;/span&gt;
  &lt;span class="nx"&gt;handler&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"main"&lt;/span&gt;
  &lt;span class="nx"&gt;role&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"fake_role"&lt;/span&gt;
  &lt;span class="nx"&gt;runtime&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"go1.x"&lt;/span&gt;
  &lt;span class="nx"&gt;timeout&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
  &lt;span class="nx"&gt;memory_size&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_lambda_function"&lt;/span&gt; &lt;span class="s2"&gt;"hot_dog_despatcher_lambda"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;function_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hotDogDespatcher"&lt;/span&gt;
  &lt;span class="nx"&gt;filename&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hotDogDespatcher.zip"&lt;/span&gt;
  &lt;span class="nx"&gt;handler&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"main"&lt;/span&gt;
  &lt;span class="nx"&gt;role&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"fake_role"&lt;/span&gt;
  &lt;span class="nx"&gt;runtime&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"go1.x"&lt;/span&gt;
  &lt;span class="nx"&gt;timeout&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
  &lt;span class="nx"&gt;memory_size&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// LAMBDA TRIGGERS&lt;/span&gt;
&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_lambda_event_source_mapping"&lt;/span&gt; &lt;span class="s2"&gt;"dog_processor_trigger"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event_source_arn&lt;/span&gt;              &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_kinesis_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;caught_dogs_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arn&lt;/span&gt;
  &lt;span class="nx"&gt;function_name&lt;/span&gt;                 &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogProcessor"&lt;/span&gt;
  &lt;span class="nx"&gt;batch_size&lt;/span&gt;                    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;starting_position&lt;/span&gt;             &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"LATEST"&lt;/span&gt;
  &lt;span class="nx"&gt;enabled&lt;/span&gt;                       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;maximum_record_age_in_seconds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;604800&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_lambda_event_source_mapping"&lt;/span&gt; &lt;span class="s2"&gt;"dog_processor_trigger_2"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event_source_arn&lt;/span&gt;              &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_kinesis_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eaten_hot_dogs_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arn&lt;/span&gt;
  &lt;span class="nx"&gt;function_name&lt;/span&gt;                 &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"dogProcessor"&lt;/span&gt;
  &lt;span class="nx"&gt;batch_size&lt;/span&gt;                    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;starting_position&lt;/span&gt;             &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"LATEST"&lt;/span&gt;
  &lt;span class="nx"&gt;enabled&lt;/span&gt;                       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;maximum_record_age_in_seconds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;604800&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_lambda_event_source_mapping"&lt;/span&gt; &lt;span class="s2"&gt;"hot_dog_despatcher_trigger"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event_source_arn&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_kinesis_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hot_dogs_stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arn&lt;/span&gt;
  &lt;span class="nx"&gt;function_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hotDogDespatcher"&lt;/span&gt;
  &lt;span class="nx"&gt;batch_size&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;starting_position&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"LATEST"&lt;/span&gt;
  &lt;span class="nx"&gt;enabled&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;maximum_record_age_in_seconds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;604800&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./zip-it.sh
terraform init
terraform plan
terraform apply &lt;span class="nt"&gt;--auto-approve&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#checking-with-aws-cli-if-everything-is-setup-correctly"&gt;
  &lt;/a&gt;
  Checking with aws CLI if everything is setup correctly
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AyKfsn8x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ia14j0l3e49c4um78yaq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AyKfsn8x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ia14j0l3e49c4um78yaq.png" alt="aws-cli-outputs"&gt;&lt;/a&gt;&lt;br&gt;
To see if everything was working correctly, I invoke dogCatcher and check out the dynamodb table;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws lambda invoke &lt;span class="nt"&gt;--function-name&lt;/span&gt; dogCatcher &lt;span class="nt"&gt;--endpoint-url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;http://localhost:4566 &lt;span class="nt"&gt;--payload&lt;/span&gt; &lt;span class="s1"&gt;'{"quantity": 2}'&lt;/span&gt; output.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws dynamodb scan &lt;span class="nt"&gt;--endpoint-url&lt;/span&gt; http://localhost:4566 &lt;span class="nt"&gt;--table-name&lt;/span&gt; dogs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ImcdKik8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/117i7343k9c4t75yio5b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ImcdKik8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/117i7343k9c4t75yio5b.png" alt="aws-cli-results"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h3&gt;

&lt;p&gt;I had pretty much great experience with Localstack. I think even though Localstack is quite new, it seems like it can be used for learning AWS SDKs as a developer without actually using live AWS services and getting billed for it. This can also speed up developer's integration tests(along with CI/CD) and debugging processes if configured properly because there are many services Localstack provides and I have only configured and used 3 of them here. This also saves lots of costs for any companies.&lt;/p&gt;

&lt;p&gt;Also don't forget to check out Localstack's slack channel, they are really helpful for any issues you run into and follow me on Twitter for further questions!&lt;br&gt;
&lt;a href="https://localstack-community.slack.com"&gt;localstack-slack&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/mr_wormhole"&gt;my-twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>terraform</category>
      <category>docker</category>
      <category>go</category>
      <category>aws</category>
    </item>
    <item>
      <title>What I Learned This Week: Next.js and API Keys</title>
      <author>Desiree Lerma</author>
      <pubDate>Sat, 03 Jul 2021 21:14:30 +0000</pubDate>
      <link>https://dev.to/desilerma25/what-i-learned-this-week-next-js-and-api-keys-3ig5</link>
      <guid>https://dev.to/desilerma25/what-i-learned-this-week-next-js-and-api-keys-3ig5</guid>
      <description>&lt;p&gt;If you've read my previous blogs then you're aware that I have been learning Next.js recently as I tackle my next project, WatchNext. If you have not read my previous blogs, a quick update for you: I kickstarted a new project to keep the gears in my brain spinning as I search for my first engineering role. During the kickoff process, I quickly encountered an obstacle (I wanted this projet to be frontend only). That obstacle being, how to properly hide my keys on a frontend application without them accidentally being exposed to a client after deployment. Nicholas Papadakis recommended using Next.js and thus my journey to learn it began.&lt;/p&gt;

&lt;p&gt;Now that we're caught up let's get to the point of this blog. API KEYS!&lt;/p&gt;

&lt;p&gt;The main tidbit of information that I've learned while exploring Next.js is how to keep my secret keys an actual secret. Next.js offers you the ability to create an API directory within your Pages directory. This API directory allows you to create API endpoints for your applications. You can then access these endpoints to get data from your external API as needed. The best thing... everything in it will be private! Including your ENV variables. Seeing as this was my first major obstacle this is a &lt;strong&gt;GREAT&lt;/strong&gt; bonus for me and my current needs.&lt;/p&gt;

&lt;p&gt;Using ENV variables is a tad different than how you would implement them on a backend application. To utilize them in Next.js, you will create a file in the highest level of your application and title it &lt;code&gt;.env.local&lt;/code&gt; (don't forget to ensure it is included in your &lt;code&gt;.gitignore&lt;/code&gt; file so you don't accidentally make it public!). In this file is where you will store your ENV variable like you would normally do in the backend. Now, to access it, you would interpolate it where it's needed and call &lt;code&gt;process.env.ENV_VAR_NAME&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/// In .env.local
API_SECRET=PUT_SECRET_HERE

// Whichever file you need to call the ENV variable, within the API directory
const URL = 'https://myapi.org/info?api_key=${process.env.API_SECRET}'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;VIOLA!!&lt;/strong&gt; You have accessed your external API without exposing your precious keys or creating a backend.&lt;/p&gt;

&lt;p&gt;If what you've read so far about Next.js sounds like it can be useful to you, I would highly recommend using Next.js for your next project or even migrating a current project that you have to utilize the benefits that Next.js has to offer.&lt;br&gt;
Just a reminder, I am still learning and growing. I am open to any tips and tricks you may have as well as open to answering any questions you may have to the best of my ability. Happy learning! &lt;/p&gt;

&lt;p&gt;Resources: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/docs/basic-features/environment-variables"&gt;https://nextjs.org/docs/basic-features/environment-variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>nextjs</category>
      <category>devjournal</category>
      <category>react</category>
    </item>
    <item>
      <title>Map running container port to the Host</title>
      <author>Cubite | E-learning Solutions</author>
      <pubDate>Sat, 03 Jul 2021 21:06:52 +0000</pubDate>
      <link>https://dev.to/corpcubite/map-running-container-port-to-the-host-2f11</link>
      <guid>https://dev.to/corpcubite/map-running-container-port-to-the-host-2f11</guid>
      <description>&lt;p&gt;We recently ran to a situation that we have a running container (MySQL) but we liked to access it from internet and this container didn't have any port mapping between host and container. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We spawn up the container with docker compose&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One solution for this situation is to stop the container, remove it and execute docker run with &lt;code&gt;-p &amp;lt;hostPort&amp;gt;:&amp;lt;containerPort&amp;gt;&lt;/code&gt; but we didn't want to create new container.&lt;br&gt;
Second solution is using &lt;code&gt;iptables&lt;/code&gt; to do the port mapping. &lt;br&gt;
In the following example, you see how we achieved routing calls to the &lt;code&gt;host:3306&lt;/code&gt; to the &lt;code&gt;mysqlContainer:3306&lt;/code&gt;.&lt;br&gt;
You should run this on the host machine.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo iptables -t nat -A DOCKER -p tcp --dport 3306 -j DNAT --to-destination MysqlContainerIP:3306
sudo iptables -t nat -A POSTROUTING -j MASQUERADE -p tcp --source MysqlContainerIP --destination MysqlContainerIP --dport 3306
sudo iptables -A DOCKER -j ACCEPT -p tcp --destination MysqlContainerIP --dport 3306
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>docker</category>
      <category>firewall</category>
      <category>iptables</category>
      <category>network</category>
    </item>
  </channel>
</rss>
