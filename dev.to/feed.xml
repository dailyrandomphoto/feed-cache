<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to add and remove class in html elements using JS.</title>
      <author>Mysterio</author>
      <pubDate>Sun, 02 Jan 2022 14:11:32 +0000</pubDate>
      <link>https://dev.to/shubhamtiwari909/how-to-add-and-remove-class-in-html-elements-using-js-3p6i</link>
      <guid>https://dev.to/shubhamtiwari909/how-to-add-and-remove-class-in-html-elements-using-js-3p6i</guid>
      <description>&lt;p&gt;Hello Guys today i am going to show you how you can add or remove class of html elements using javascript.It will help you to add class and its related styling dynamically using button event handlers.&lt;br&gt;
Lets get started...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html-"&gt;
  &lt;/a&gt;
  HTML -
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"heading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Hello Dom Manipulation
      &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-outline-primary"&lt;/span&gt;             
         &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"Animation1('Animation1')"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Animation1&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-outline-danger my-5"&lt;/span&gt; 
                &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"refresh()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Refresh&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;We have created two button elements inside a div with id="box".&lt;/li&gt;
&lt;li&gt;The first button is used to add the class to the H1 element with id="heading" and the second button is used to remove the class from the H1 element with id ="heading".&lt;/li&gt;
&lt;li&gt;The first button have the onclick event handler and inside it we have called a function named "Animation" inside the parameter we have passed the class name which we want to add to the H1 element with id="heading" and same with the second button whose onclick event handler has a function call named "refresh" and inside it we have passed the class name which we want to remove as the parameter of the function.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#css-"&gt;
  &lt;/a&gt;
  CSS -
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#box&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#heading&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;crimson&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;8rem&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.Animation1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;animation-name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;animation1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation-fill-mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;forwards&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation-iteration-count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;2s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;animation1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkcyan&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;20&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;cyan&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;40&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;60&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rebeccapurple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;80&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;salmon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;tomato&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Here we have defined the styles for all the elements using their id names .&lt;/li&gt;
&lt;li&gt;We have defined the styles for the "Animation" class and also attached an animation with it.So when the "Animation" class is added to the H1 element , then the animation will be executed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#javascript-"&gt;
  &lt;/a&gt;
  Javascript -
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* first getting the element using its id name and then through 
dom manipulation (elementName.classList.add(className)) we have
 added the class to the H1 tag */&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;heading&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Animation1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;refresh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="cm"&gt;/*.contains check that the class is already present or 
not , if it is present , then the class will be 
removed , otherwise we will get an alert message*/&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Animation1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
&lt;span class="nx"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Animation1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All the animations are refreshed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;No animation is executed yet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#output-"&gt;
  &lt;/a&gt;
  OUTPUT -
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-the-starting-point-of-the-program"&gt;
  &lt;/a&gt;
  1. The starting point of the program
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5QABN0Q7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uivddtd9ckiyb38zair4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5QABN0Q7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uivddtd9ckiyb38zair4.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-the-text-color-is-changed-because-we-have-added-the-animation1-class-to-the-h1-tag-using-animation1-button-and-the-animation-gets-executer"&gt;
  &lt;/a&gt;
  2. The Text color is changed because we have added the "Animation1" class to the H1 tag using Animation1 button and the animation gets executer.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lUaagukh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2li5n9twanxwnreveydj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUaagukh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2li5n9twanxwnreveydj.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-the-alert-messages-appears-because-we-had-removed-the-animation1-class-using-the-refresh-button-"&gt;
  &lt;/a&gt;
  3. The alert messages appears because we had removed the "Animation1" class using the refresh button .
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LvLUeAZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2dvta0pmzq2qo39w2h14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LvLUeAZz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2dvta0pmzq2qo39w2h14.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#note-i-have-used-bootstrap-in-this-tutorial-so-install-it-using-npm-or-add-it-through-cdn"&gt;
  &lt;/a&gt;
  NOTE - I HAVE USED BOOTSTRAP IN THIS TUTORIAL SO INSTALL IT USING NPM OR ADD IT THROUGH CDN.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#you-can-help-me-by-some-donation-at-the-link-below-thank-you-"&gt;
  &lt;/a&gt;
  ^^You can help me by some donation at the link below Thank you👇👇 ^^
&lt;/h2&gt;

&lt;p&gt;☕ --&amp;gt; &lt;a href="https://www.buymeacoffee.com/waaduheck"&gt;https://www.buymeacoffee.com/waaduheck&lt;/a&gt; &amp;lt;--&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-this-post-and-if-you-find-any-mistake-or-wants-to-give-any-suggestion-please-mention-it-in-the-comment-section"&gt;
  &lt;/a&gt;
  THANK YOU FOR READING THIS POST AND IF YOU FIND ANY MISTAKE OR WANTS TO GIVE ANY SUGGESTION , PLEASE MENTION IT IN THE COMMENT SECTION.
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#also-check-these-posts-as-well"&gt;
  &lt;/a&gt;
  Also check these posts as well
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/animation-with-react-spring-3k22"&gt;https://dev.to/shubhamtiwari909/animation-with-react-spring-3k22&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/text-to-speech-in-reactjs-52ml"&gt;https://dev.to/shubhamtiwari909/text-to-speech-in-reactjs-52ml&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/best-vs-code-extensions-for-web-development-2lk3"&gt;https://dev.to/shubhamtiwari909/best-vs-code-extensions-for-web-development-2lk3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why You Should Use Python Data Classes</title>
      <author>Omri Grossman</author>
      <pubDate>Sun, 02 Jan 2022 14:01:44 +0000</pubDate>
      <link>https://dev.to/omrigm/why-you-should-use-python-data-classes-48po</link>
      <guid>https://dev.to/omrigm/why-you-should-use-python-data-classes-48po</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;If you just started or already coded using Python and like Object Oriented Programming but aren't familiar with the &lt;code&gt;dataclasses&lt;/code&gt; module, you came to the right place!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-this-article-we-will-learn"&gt;
  &lt;/a&gt;
  In this article, we will learn:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;What are data classes, and what are their benefits.&lt;/li&gt;
&lt;li&gt;How exactly they are different from regular Python classes.&lt;/li&gt;
&lt;li&gt;And when you should use them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#data-classes-background"&gt;
  &lt;/a&gt;
  Data Classes Background
&lt;/h2&gt;

&lt;p&gt;Data classes are used mainly to model data in Python. It decorates regular Python classes and has no restrictions, which means it can behave like a typical class.&lt;/p&gt;

&lt;p&gt;A small example of a Data Class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dataclasses&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;dataclass&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;dataclass&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
   &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
   &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#-raw-dataclasses-endraw-was-introduced-in-python-37-as-part-of-pep-557"&gt;
  &lt;/a&gt;
  &lt;code&gt;dataclasses&lt;/code&gt; was introduced in Python 3.7 as part of PEP 557
&lt;/h6&gt;

&lt;h4&gt;
  &lt;a href="#lets-dive-into-some-code-examples"&gt;
  &lt;/a&gt;
  Let's dive into some code examples
&lt;/h4&gt;




&lt;h2&gt;
  &lt;a href="#the-benefits-of-data-class"&gt;
  &lt;/a&gt;
  The Benefits of Data Class
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#special-methods-implementation"&gt;
  &lt;/a&gt;
  Special methods implementation
&lt;/h4&gt;

&lt;p&gt;When using the @dataclass decorator we don't have to implement   &lt;a href="https://docs.python.org/3/glossary.html#term-special-method"&gt;special methods&lt;/a&gt;  ourselves, which helps us &lt;strong&gt;avoiding boilerplate code&lt;/strong&gt;, like the init method (_&lt;em&gt;init&lt;/em&gt;_ ), string representation method (_&lt;em&gt;repr&lt;/em&gt;_ ), methods which are used for ordering objects (e.g. &lt;strong&gt;lt&lt;/strong&gt;, &lt;strong&gt;le&lt;/strong&gt;, &lt;strong&gt;gt&lt;/strong&gt;, and &lt;strong&gt;ge&lt;/strong&gt;) and few extra other methods, read about them in the &lt;a href="https://docs.python.org/3/library/dataclasses.html#module-contents"&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How will it look with a regular class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
  &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
  &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt;  &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;manufacturer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;manufacturer&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top_speed_km&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;top_speed_km&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__lt__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other_car&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top_speed_km&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;other_car&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top_speed_km&lt;/span&gt;

&lt;span class="n"&gt;red_ferrari&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Ferrari'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;320&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;red_ferrari&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;__main__.Car object at 0x7f218789ca00&amp;gt;
&lt;/span&gt;&lt;span class="n"&gt;black_ferrari&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Ferrari'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;347&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;red_ferrari&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;black_ferrari&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# True
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note those two points:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Because we didn't implement the _&lt;em&gt;repr&lt;/em&gt;_ special method, when we print the Car instance, we get the name of the class and the object address.&lt;/li&gt;
&lt;li&gt;To compare between 2 Car instances, I had to implement the "less than" (_&lt;em&gt;lt&lt;/em&gt;_) method by myself. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example with dataclass decorator&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dataclasses&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;dataclass&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;dataclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
  &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
  &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;

&lt;span class="n"&gt;slow_tesla&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;261&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'white'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Tesla'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;slow_tesla&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Car(color='white', manufacturer='Tesla', top_speed_km=261)
&lt;/span&gt;&lt;span class="n"&gt;fast_tesla&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;280&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'white'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Tesla'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;slow_tesla&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;fast_tesla&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# True
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#its-necessary-to-set-raw-ordertrue-endraw-if-we-want-special-order-methods-implementation-to-be-included-in-the-dataclass-eg-lt"&gt;
  &lt;/a&gt;
  It's necessary to set &lt;code&gt;order=True&lt;/code&gt; if we want special order methods implementation to be included in the dataclass (e.g. &lt;strong&gt;lt&lt;/strong&gt;)
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;When we try to print the &lt;code&gt;slow_tesla&lt;/code&gt; object, we see the actual values of the object, not the object's address, unlike the previous example.&lt;/li&gt;
&lt;li&gt;We can compare two objects without any need for us to implement special methods.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Inheritance&lt;/strong&gt;&lt;br&gt;
Same as regular python classes, inheritance can come to our advantage here too, no need to deal with the parent class construction:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dataclasses&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;dataclass&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;dataclass&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
  &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
  &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;dataclass&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ElectricCar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;battery_capacity_kwh&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;
  &lt;span class="n"&gt;maximum_range_km&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;

&lt;span class="n"&gt;white_tesla_model_3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ElectricCar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'white'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Tesla'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;261&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;battery_capacity_kwh&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maximum_range_km&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;455&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;white_tesla_model_3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# ElectricCar(color='white', manufacturer='Tesla', top_speed_km=261, battery_capacity_kwh=50, maximum_range_km=455)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just for reference, here is how it will look like using a regular class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
  &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
  &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt;  &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;manufacturer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;manufacturer&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top_speed_km&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;top_speed_km&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ElectricCar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Car&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;battery_capacity_kwh&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;
  &lt;span class="n"&gt;maximum_range_km&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;battery_capacity_kwh&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maximum_range_km&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;battery_capacity_kwh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;battery_capacity_kwh&lt;/span&gt;
      &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;maximum_range_km&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;maximum_range_km&lt;/span&gt;

&lt;span class="n"&gt;white_tesla_model_3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ElectricCar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'white'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;manufacturer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Tesla'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;top_speed_km&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;261&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;battery_capacity_kwh&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maximum_range_km&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;455&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;white_tesla_model_3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you can see that we saved much boilerplate code even in this small code snippet and didn't repeat every parameter initiation.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#now-you"&gt;
  &lt;/a&gt;
  Now, you:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Are familiar with what data class is and how to use it.&lt;/li&gt;
&lt;li&gt;Learned about the benefits and use cases of data classes.&lt;/li&gt;
&lt;li&gt;Have some code examples which can help you get started.&lt;/li&gt;
&lt;li&gt;Can start using it in your projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;dataclasses&lt;/code&gt; is a powerful module that helps us, Python developers, model our data, avoid writing boilerplate code ,and write much cleaner and elegant code.&lt;br&gt;
I encourage you to explore and learn more about data class special features, I use it in all of my projects, and I recommend you to do it too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#extra-resources"&gt;
  &lt;/a&gt;
  Extra Resources
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.python.org/3/library/dataclasses.html"&gt;https://docs.python.org/3/library/dataclasses.html&lt;/a&gt;&lt;br&gt;
&lt;a href="https://realpython.com/python-data-classes/"&gt;https://realpython.com/python-data-classes/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Claymorphism on 2022🎁 (CSS only)</title>
      <author>⚡Preethi</author>
      <pubDate>Sun, 02 Jan 2022 13:54:37 +0000</pubDate>
      <link>https://dev.to/preethi_dev/claymorphism-on-2022-css-only-4am</link>
      <guid>https://dev.to/preethi_dev/claymorphism-on-2022-css-only-4am</guid>
      <description>&lt;p&gt;Hey There, Hope this new year✨ give you a fabulous moments. There are some trends for every year like &lt;b&gt;Skeuomorphism&lt;/b&gt; ➡️ &lt;b&gt;Neumorphism&lt;/b&gt; ➡️&lt;b&gt;Glassmorphism&lt;/b&gt; ➡️Now, The brand new trend is &lt;b&gt;Claymorphism&lt;/b&gt;🎉. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Due to accessibility issues, Some trends can't be hero of the year in real-time😥. Uh, Don't worry guys Claymorphism didn't make any accessibility issues&lt;/em&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Why Claymorphism🤔&lt;/h2&gt;

&lt;p&gt;Really getting bored with flat designs and world excited for changing UI to 3D. From 2022, we introduce that 3D feel in web world. Sounds amazing right✨ and we can introduce this Claymorphism from pages to atom components. I care to save developer time and  let's get this show on the road🎉.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oM7rYLYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/707rymbpb9yf0u6gqojs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oM7rYLYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/707rymbpb9yf0u6gqojs.png" alt="Image description" width="880" height="331"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Claymorphism made by 4 styles&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Light, pastel, and vivid colors&lt;/li&gt;
&lt;li&gt;Big rounded corners&lt;/li&gt;
&lt;li&gt;Double inner shadow&lt;/li&gt;
&lt;li&gt;Outer shadow&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;In-depth on box-shadow&lt;/h2&gt;

&lt;p&gt;&lt;b&gt;&lt;code&gt;box-shadow&lt;/code&gt;&lt;/b&gt; is the main guy for that magical shadow effect. So, we need aware of that.&lt;/p&gt;

&lt;p&gt;Specify a single &lt;code&gt;box-shadow&lt;/code&gt; using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;Two, three, or four  values&lt;/b&gt;.
If only two values are given, they are interpreted as &lt;b&gt;offset-x&lt;/b&gt; and &lt;b&gt;offset-y&lt;/b&gt; values.
If a third value is given, it is interpreted as a &lt;b&gt;blur-radius&lt;/b&gt;.
If a fourth value is given, it is interpreted as a &lt;b&gt;spread-
radius&lt;/b&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;To specify multiple shadows, provide a &lt;b&gt;comma-separated list of shadows&lt;/b&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Optionally, the &lt;code&gt;inset&lt;/code&gt; keyword.&lt;/li&gt;
&lt;li&gt;Optionally, a &lt;b&gt;color&lt;/b&gt; value.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: &lt;b&gt;Claymorphism&lt;/b&gt; is made up of &lt;b&gt;inner shadow&lt;/b&gt; and &lt;b&gt;outer shadow&lt;/b&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;How do we create inner shadows&lt;/h2&gt;

&lt;p&gt;It’s actually effortless😍. We need to add special value &lt;code&gt;inset&lt;/code&gt; before our shadow. This will inform our browser that this particular shadow is an inner shadow. By default, we create outer shadows. Below code snippet, illustrate the claymorphism made by &lt;b&gt;one outer shadow and at least two inner shadows&lt;/b&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;box-shadow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;24&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="err"&gt;24&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="err"&gt;48&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="nt"&gt;rgba&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;174&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;210&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;236&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;inset&lt;/span&gt; &lt;span class="err"&gt;12&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="err"&gt;12&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="err"&gt;24&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="nf"&gt;#e7f2f9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;inset&lt;/span&gt; &lt;span class="nt"&gt;-24px&lt;/span&gt; &lt;span class="nt"&gt;-24px&lt;/span&gt; &lt;span class="err"&gt;48&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="nf"&gt;#b8d8ee&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now I thought, you are be like😉&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X-ptCh03--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opx5q4xya3lh5r4t0wao.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X-ptCh03--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opx5q4xya3lh5r4t0wao.gif" alt="Image description" width="498" height="498"&gt;&lt;/a&gt; &lt;br&gt;
Hey still with me. You really curious about trends like trend lovers💖. So, it's my pleasure to give you the live experience and you will playing with that magical shadows🪄.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/preethi-dev/embed/rNGdvMz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Or you just fork &lt;a href="https://github.com/Preethi-Dev/Claymorphism"&gt;my repository&lt;/a&gt;🎁 and practice in your own pace.&lt;/p&gt;

&lt;p&gt;If you loved this blog, Then give an endearing heart💝and drop your thought about this blog😍 which really a lot to me. I love the discussion with you, If you feel not comfortable at styling concepts or have any doubts.&lt;/p&gt;

&lt;p&gt;Thanks for Reading!!&lt;br&gt;
&lt;b&gt;Preethi&lt;/b&gt;&lt;br&gt;
&lt;em&gt;- Make your CSS life easier&lt;/em&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>How to make a pulse effect</title>
      <author>Yigit S</author>
      <pubDate>Sun, 02 Jan 2022 12:57:06 +0000</pubDate>
      <link>https://dev.to/yigitsr/how-to-make-a-pulse-effect-1ha0</link>
      <guid>https://dev.to/yigitsr/how-to-make-a-pulse-effect-1ha0</guid>
      <description>&lt;p&gt;In this article, I'll teach you how to make a pulse effect on an image.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-code"&gt;
  &lt;/a&gt;
  HTML Code
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;First, we add our image inside &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Pulse Effect&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"moonPulse"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://i.pinimg.com/564x/a1/01/e2/a101e22fc458c1110d418ee309f240c8.jpg"&lt;/span&gt;
&lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"moon pic"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css-code"&gt;
  &lt;/a&gt;
  CSS Code
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Styling the body
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;justify&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="nx"&gt;em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Styling the image
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moonPulse&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;pulse&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="nx"&gt;em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finally-adding-pulse-effect-animation"&gt;
  &lt;/a&gt;
  Finally, adding pulse effect animation
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;keyframes&lt;/span&gt; &lt;span class="nx"&gt;pulse&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;198&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;182&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;179&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.85&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="nx"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-result"&gt;
  &lt;/a&gt;
  Final Result
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#-codepen-httpscodepenioyisemiramispenwvrmxzl-"&gt;
  &lt;/a&gt;
  &lt;iframe height="600" src="https://codepen.io/Yisemiramis/embed/wvrmxZL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;

&lt;/h2&gt;

&lt;p&gt;I hope you find this tutorial useful. See you on the next article.&lt;br&gt;
Here's the &lt;a href="https://github.com/yigitsr/Pulse-Effect"&gt;Source Code&lt;/a&gt; on GitHub&lt;br&gt;
Here's the &lt;a href="https://www.youtube.com/watch?v=c-R7LLd7nnE"&gt;YouTube Video&lt;/a&gt; where I code it from scratch.&lt;br&gt;
Check it out on &lt;a href="https://codepen.io/Yisemiramis/pen/bGovmqo"&gt;CodePen&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Follow me on&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/yigitsr"&gt;GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://codepen.io/Yisemiramis"&gt;CodePen&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://twitter.com/ziggywoxx"&gt;Twitter&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.twitch.tv/lemmy_ace"&gt;Twitch&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.instagram.com/ziggywoxx/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>codepen</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Rewriting My Personal Website in Next.js and TypeScript</title>
      <author>Andrew (he/him)</author>
      <pubDate>Sun, 02 Jan 2022 12:41:44 +0000</pubDate>
      <link>https://dev.to/awwsmm/rewriting-my-personal-website-in-nextjs-and-typescript-ceb</link>
      <guid>https://dev.to/awwsmm/rewriting-my-personal-website-in-nextjs-and-typescript-ceb</guid>
      <description>&lt;p&gt;New Year's Day is as good a time as any to roll out a new blog, I suppose.&lt;/p&gt;

&lt;p&gt;As one of my New Year's Resolutions this year, I'm going to revamp my website, and I'm going to do it in public.&lt;/p&gt;

&lt;p&gt;I've spent the last few weeks working with Next.js for the first time (and brushing up on my TypeScript) in order to start hosting my technical blog on my own website. (In addition to mirroring the posts &lt;a href="https://dev.to/awwsmm"&gt;on Dev.to&lt;/a&gt;, where I've been writing for a few years now.)&lt;/p&gt;

&lt;p&gt;In addition to the ol' blog, I've also created &lt;strong&gt;/project&lt;/strong&gt; pages for a few ongoing things I've got in the works (including this very website). The project pages synthesize groups of commits from GitHub with manual "update" log posts to give an idea as to the current status of each of my ongoing projects. I think this is a bit more dynamic than a static "portfolio" page, and it reflects a tenet of my own personal philosophy that &lt;a href="https://quoteinvestigator.com/2019/03/01/abandon/"&gt;&lt;em&gt;un ouvrage n’est jamais achevé... mais abandonné&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Follow along here, &lt;a href="https://dev.to/awwsmm"&gt;on Dev.to&lt;/a&gt;, or &lt;a href="https://twitter.com/awwsmm_dot_com"&gt;on Twitter&lt;/a&gt; for continuing updates.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>typescript</category>
      <category>beginners</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Day 68 of 100 Days of Code &amp; Scrum: Back to Being Productive</title>
      <author>Rammina</author>
      <pubDate>Sun, 02 Jan 2022 12:38:45 +0000</pubDate>
      <link>https://dev.to/rammina/day-68-of-100-days-of-code-scrum-back-to-being-productive-3g3g</link>
      <guid>https://dev.to/rammina/day-68-of-100-days-of-code-scrum-back-to-being-productive-3g3g</guid>
      <description>&lt;p&gt;Good day, everyone!&lt;/p&gt;

&lt;p&gt;Today was a great start to this year for me, in terms of productivity. I've had a lot of fun working on my &lt;a href="https://www.rammina.com"&gt;business site&lt;/a&gt;, studying Scrum, and fixing my Ghost CMS. I fixed all of the broken links on my website, added an &lt;a href="https://www.rammina.com/affiliates"&gt;affiliates page&lt;/a&gt; for those who would like to exchange backlinks, and updated my projects to have a link to their respective Github repositories.&lt;/p&gt;

&lt;p&gt;And I also discovered this bug on my error 404 page, which I have embarrassingly overlooked the past few weeks:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c6dC6b0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxqz34qvuk752t5qcz2o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c6dC6b0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxqz34qvuk752t5qcz2o.png" alt="Rammina Double Footer Bug" width="880" height="407"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One unfortunate thing that happened to me today was that Scrum.org kept on rejecting my transactions, despite already using 3 different credit cards and PayPal. I have contacted their support email, but it kind of feels annoying to be held from buying their Professional Scrum Master I (PSM I) certification exam when I'm already prepared to take it.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I found some bugs to fix in my website, studied Scrum by reading the guide and taking practice tests, and dealt with my huge backlog of emails, messages, and notifications. A slow, but smooth start to a new year.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#company-website"&gt;
  &lt;/a&gt;
  Company Website
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I added an affiliates page on my &lt;a href="https://www.rammina.com"&gt;company website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;fixed a bug in which there was a duplicate footer on the error 404 page.&lt;/li&gt;
&lt;li&gt;replaced broken links on the footer with functional ones.&lt;/li&gt;
&lt;li&gt;attached a link to the respective Github repository of each project.&lt;/li&gt;
&lt;li&gt;fixed my Ghost CMS (had to replace it and redeploy because I went over the free plan).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I reread the &lt;a href="https://scrumguides.org/scrum-guide.html"&gt;2020 Scrum Guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Took some practice exams for the Professional Scrum Master I (PSM I) certification.&lt;/li&gt;
&lt;li&gt;I did some practice flashcards for Scrum.&lt;/li&gt;
&lt;li&gt;reviewed some of the things I've learned before.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It was also nice to see some familiar people again, after a few weeks.Have a good day, everyone!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scrum.org/open-assessments"&gt;Open Assessments | Scrum.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://www.rammina.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-zilS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1638444046/rammina-button-128_x9ginu.png" alt="Rammina Logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Hashicorp Vault | Dev and Prod server setup | Unseal | Policies | TLS setup</title>
      <author>Tharun Shiv</author>
      <pubDate>Sun, 02 Jan 2022 12:35:36 +0000</pubDate>
      <link>https://dev.to/developertharun/hashicorp-vault-dev-and-prod-server-setup-unseal-policies-tls-setup-48mo</link>
      <guid>https://dev.to/developertharun/hashicorp-vault-dev-and-prod-server-setup-unseal-policies-tls-setup-48mo</guid>
      <description>&lt;p&gt;&lt;a href="https://www.tharunshiv.com/vault-intro"&gt;Link to the article on Why we need Vault and what problem it solves&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hashicorp-vault"&gt;
  &lt;/a&gt;
  Hashicorp Vault
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_syvC_OZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x0kjzc4ogayfv3gjo38p.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_syvC_OZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x0kjzc4ogayfv3gjo38p.PNG" alt="Mind map" width="880" height="466"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hashicorp Vault is an opensource software from Hashicorp. Vault is used to manage secrets. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-secret"&gt;
  &lt;/a&gt;
  What is a secret?
&lt;/h3&gt;

&lt;p&gt;Secrets can be considered as anything that one uses to authenticate, authorize themselves. Secrets are also pieces of information that are private to any user. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vault-setup"&gt;
  &lt;/a&gt;
  Vault setup
&lt;/h2&gt;

&lt;p&gt;The usual flow is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install Vault package&lt;/li&gt;
&lt;li&gt;Initialize the Vault server. On the dev setup, the Vault server comes initialized with default playground configurations. This is not recommended for production setup. &lt;/li&gt;
&lt;li&gt;Unseal Vault server ( &lt;em&gt;More about unseal in the next section&lt;/em&gt; )&lt;/li&gt;
&lt;li&gt;Create policies for users&lt;/li&gt;
&lt;li&gt;Enable secret management mechanisms&lt;/li&gt;
&lt;li&gt;Make sure to adhere to the production hardening tips from Vault&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#sealunseal-vault-server"&gt;
  &lt;/a&gt;
  Seal/Unseal Vault server
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7m4TmMW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ruk9cbd4fraopcei85rr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7m4TmMW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ruk9cbd4fraopcei85rr.png" alt="Seal unseal" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vault stores data in encrypted format. The encryption key that is being used to encrypt/decrypt the data is also stored along with rest of the data in the keyring. When a Vault server starts, it knows where the data resides through the configuration that we provide Vault with but doesn't know how to decrypt the encryption key that is present in the keyring along with the Vault encrypted data.&lt;/p&gt;

&lt;p&gt;Here comes the master key that is used to decrypt the encryption key which is also present alongside all other Vault data. This master key is also encrypted and we need a special key that can decrypt the master key, this key is known as Unseal key.&lt;/p&gt;

&lt;p&gt;The Unseal key is generated during the init process using an algorithm known as 'Shamir's secret sharing', where the unseal key is split into certain number of unseal keys 'X' and every time we want to unseal the Vault server we will need a certain number of unseal keys 'Y' and these 'X' and 'Y' values can be decided by the Vault architect when initializing the Vault server. &lt;/p&gt;

&lt;p&gt;The main intention of creating several unseal keys is to distribute these unseal keys among several stakeholders such that, a minimum number of stake holders are needed to unseal the server or perform major operations on the server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-policies"&gt;
  &lt;/a&gt;
  What are policies?
&lt;/h2&gt;

&lt;p&gt;Policies help you create rules that define access to various secrets. We can create policies that allow certain level access like create access, update access, read access, delete access and so on. We then assign this policy to a particular authentication mechanism of a user. This user will have only those access mentioned in the policies attached to his credentials. This way, Vault makes sure that we provide minimal and only necessary access to Vault stakeholders.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-commands"&gt;
  &lt;/a&gt;
  Setup commands
&lt;/h2&gt;

&lt;p&gt;The steps have been performed on Linux Ubuntu Focal virtual machine.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dev-mode"&gt;
  &lt;/a&gt;
  Dev mode
&lt;/h3&gt;

&lt;p&gt;To get started quickly&lt;/p&gt;

&lt;p&gt;&lt;a href="https://learn.hashicorp.com/tutorials/vault/getting-started-install?in=vault/getting-started#install-vault"&gt;Vault official installation link&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
&lt;span class="c"&gt;# install Vault from Vault website&lt;/span&gt;
curl &lt;span class="nt"&gt;-fsSL&lt;/span&gt; https://apt.releases.hashicorp.com/gpg | &lt;span class="nb"&gt;sudo &lt;/span&gt;apt-key add -

&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-add-repository &lt;span class="s2"&gt;"deb [arch=amd64] https://apt.releases.hashicorp.com &lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;lsb_release &lt;span class="nt"&gt;-cs&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; main"&lt;/span&gt;

&lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;sudo &lt;/span&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;vault

&lt;span class="c"&gt;# test with the below command&lt;/span&gt;
vault

&lt;span class="c"&gt;### DEV MODE&lt;/span&gt;
&lt;span class="c"&gt;# start dev server&lt;/span&gt;
tmux new &lt;span class="nt"&gt;-s&lt;/span&gt; vault
vault server &lt;span class="nt"&gt;-dev&lt;/span&gt; &lt;span class="c"&gt;# and detach tmux ( Ctrl+b d )&lt;/span&gt;

&lt;span class="c"&gt;# export variables that will be used by Vault when commands &lt;/span&gt;
&lt;span class="c"&gt;# are run in the current terminal session&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VAULT_ADDR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'http://127.0.0.1:8200'&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VAULT_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'s.hfAJfADfj...'&lt;/span&gt;

&lt;span class="c"&gt;# check Vault server status&lt;/span&gt;
vault status

&lt;span class="c"&gt;# login into Vault&lt;/span&gt;
vault login

&lt;span class="c"&gt;# view current logged in token information&lt;/span&gt;
vault token lookup

&lt;span class="c"&gt;# create policies and respective tokens&lt;/span&gt;
vim secret-user-policy.hcl
path &lt;span class="s2"&gt;"secret/data/*"&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  capabilities &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"read"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

vim secret-admin-policy.hcl
path &lt;span class="s2"&gt;"secret/data/*"&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  capabilities &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"read"&lt;/span&gt;, &lt;span class="s2"&gt;"create"&lt;/span&gt;, &lt;span class="s2"&gt;"update"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# command to write policy&lt;/span&gt;
vault policy write secret-user-policy secret-user-policy.hcl
vault policy write secret-admin-policy secret-admin-policy.hcl

&lt;span class="c"&gt;# now open two tmux sessions for each type of user to test policies&lt;/span&gt;
tmux new &lt;span class="nt"&gt;-s&lt;/span&gt; demo &lt;span class="c"&gt;# and split screens for admin and user&lt;/span&gt;

&lt;span class="c"&gt;# at each of the tmux window&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VAULT_ADDR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'http://127.0.0.1:8200'&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VAULT_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'s.hfAJfADfj...'&lt;/span&gt;

vault login &lt;span class="c"&gt;# enter repective tokens&lt;/span&gt;
vault token lookup &lt;span class="c"&gt;# to view current logged in token information&lt;/span&gt;

&lt;span class="c"&gt;# on admin window &amp;amp; notice versions&lt;/span&gt;
vault kv put secret/data/mysql &lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root

&lt;span class="c"&gt;# add multiple keys in a single command &lt;/span&gt;
vault kv put secret/data/mysql &lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root &lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root

&lt;span class="c"&gt;# prevent recording the value of the token in terminal history&lt;/span&gt;
vault kv put secret/data/googlecloud &lt;span class="nv"&gt;token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-

&lt;span class="c"&gt;# read from a json file&lt;/span&gt;
vault kv put secret/data/googlecloud @apitoken.json

&lt;span class="c"&gt;# add multiple keys in a single command &lt;/span&gt;
vault kv put secret/data/aerospike &lt;span class="se"&gt;\&lt;/span&gt;
     &lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root &lt;span class="se"&gt;\&lt;/span&gt;
     &lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root &lt;span class="se"&gt;\&lt;/span&gt;
     &lt;span class="nv"&gt;tlsname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;securecert &lt;span class="se"&gt;\&lt;/span&gt;
     &lt;span class="nv"&gt;namespace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;hashicorp

&lt;span class="c"&gt;# read secret&lt;/span&gt;
vault kv get secret/data/mysql

&lt;span class="c"&gt;# ON USER WINDOW&lt;/span&gt;
vault kv put secret/data/mysql &lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root &lt;span class="c"&gt;# Will not work since this user does not have privileges&lt;/span&gt;

vault kv get secret/data/mysql

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#prod-mode"&gt;
  &lt;/a&gt;
  Prod mode
&lt;/h3&gt;

&lt;p&gt;For production setup. We will set up Vault with TLS ( SSL ) and file storage as backend.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;### DEPLOY PROD MODE&lt;/span&gt;

&lt;span class="c"&gt;# Generate the certs&lt;/span&gt;
&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; /opt/vault/&lt;span class="o"&gt;{&lt;/span&gt;tls,data&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; /opt/vault/tls
openssl req   &lt;span class="nt"&gt;-out&lt;/span&gt; tls.crt   &lt;span class="nt"&gt;-new&lt;/span&gt;   &lt;span class="nt"&gt;-keyout&lt;/span&gt; tls.key   &lt;span class="nt"&gt;-newkey&lt;/span&gt; rsa:4096   &lt;span class="nt"&gt;-nodes&lt;/span&gt;   &lt;span class="nt"&gt;-sha256&lt;/span&gt;   &lt;span class="nt"&gt;-x509&lt;/span&gt;   &lt;span class="nt"&gt;-subj&lt;/span&gt; &lt;span class="s2"&gt;"/O=HashiCorp/CN=Vault"&lt;/span&gt;   &lt;span class="nt"&gt;-addext&lt;/span&gt; &lt;span class="s2"&gt;"subjectAltName = IP:&amp;lt;loopbackIP&amp;gt;,DNS:&amp;lt;host&amp;gt;"&lt;/span&gt;   &lt;span class="nt"&gt;-days&lt;/span&gt; 3650

&lt;span class="nb"&gt;cat&lt;/span&gt; /etc/vault/vault.hcl
&lt;span class="c"&gt;# Full configuration options can be found at https://www.vaultproject.io/docs/configuration&lt;/span&gt;

ui &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true

&lt;/span&gt;storage &lt;span class="s2"&gt;"file"&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  path &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"/opt/vault/data"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# HTTPS listener&lt;/span&gt;
listener &lt;span class="s2"&gt;"tcp"&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  address       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"0.0.0.0:8200"&lt;/span&gt;
  tls_cert_file &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"/opt/vault/tls/tls.crt"&lt;/span&gt;
  tls_key_file  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"/opt/vault/tls/tls.key"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;###############################################&lt;/span&gt;

&lt;span class="nb"&gt;chown &lt;/span&gt;vault: /opt/vault/tls/&lt;span class="k"&gt;*&lt;/span&gt;

service vault start

&lt;span class="c"&gt;# make sure DNS record is present, else TLS certificate verification&lt;/span&gt;
&lt;span class="c"&gt;# will fail&lt;/span&gt;

&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VAULT_ADDR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'https://&amp;lt;hostname&amp;gt;:8200'&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;VAULT_CACERT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"/opt/vault/tls/tls.crt"&lt;/span&gt;

&lt;span class="c"&gt;# either visit https://&amp;lt;IP&amp;gt;:8200 and enter values as 5 as number of keys and 3 keys needed to unseal or regenerate keys&lt;/span&gt;
&lt;span class="c"&gt;# copy the root token &amp;amp; keys&lt;/span&gt;
vault operator init

root@mac-saltmaster:/opt/vault/tls# vault status

root@mac-saltmaster:/opt/vault/tls# vault operator unseal &lt;span class="nt"&gt;--ca-cert&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/vault/tls/tls.crt

vault login

&lt;span class="c"&gt;# Refer production hardening for more: https://learn.hashicorp.com/tutorials/vault/production-hardening&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Links that help:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.vaultproject.io"&gt;Link to Hashicorp Vault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VYfl-DpZ5wM"&gt;An Introduction to Hashicorp Vault by Armon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.hashicorp.com/vault"&gt;Vault tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can find more articles here: &lt;a href="https://www.tharunshiv.com"&gt;https://www.tharunshiv.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Roadrunners is a series that is aimed at delivering concepts as precisely as possible. Here, a roadrunner is referred to as a person who does things super fast &amp;amp; efficiently. Are you a roadrunner?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thank you&lt;/p&gt;

&lt;p&gt;Check out my YouTube Channel here: &lt;a href="https://www.youtube.com/c/developerTharun"&gt;Developer Tharun - YouTube&lt;/a&gt; Thank you for reading!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Follow my articles on Dev.to: &lt;a href="https://dev.to/developertharun"&gt;https://dev.to/developertharun&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>security</category>
      <category>database</category>
      <category>beginners</category>
      <category>devops</category>
    </item>
    <item>
      <title>GraphQL API Requests with Typescript, React Query&amp; GraphQL Code Generator</title>
      <author>Annysah</author>
      <pubDate>Sun, 02 Jan 2022 12:01:51 +0000</pubDate>
      <link>https://dev.to/annysah/graphql-api-requests-with-typescript-react-query-graphql-code-generator-16fa</link>
      <guid>https://dev.to/annysah/graphql-api-requests-with-typescript-react-query-graphql-code-generator-16fa</guid>
      <description>&lt;p&gt;In this article, we'll learn how to make GraphQL requests in the client-side of our React application with React Query, Typescript(TS) and also automatically generate TS types for our queries with GraphQL Code Generator. The following paragraphs will be explaining the essence of these technologies.&lt;/p&gt;

&lt;p&gt;The first is Typescript(TS) which is gaining huge popularity these days and lots of developers are migrating their projects from plain Javascript to TS. Typescript being a superset of Javascript provides optional static typing making it easy to detect errors during development.&lt;/p&gt;

&lt;p&gt;Next is GraphQL, a query language for APIs. With GraphQL, developers can get all the data needed in their application in a single request without having to under-fetch or over-fetch, unlike in REST APIs. One cool feature about GraphQL is the fact that it uses a type system(schema) to describe data queries and mutations.&lt;/p&gt;

&lt;p&gt;Now leveraging on this feature of GraphQL schema being typed, we can turn it into Typescript types in our application frontend offering you a better developer experience since they are both typed. But, to ensure type-safety we'll be using a tool called &lt;strong&gt;GraphQL Codegen&lt;/strong&gt; to help us auto-generate correct types based on our schema and also get fully typed custom React hooks for  React Query.&lt;/p&gt;

&lt;p&gt;Moving on, as developers, there are scenarios where we might not want to use a heavyweight library to fetch GraphQL API for example Apollo in our projects but would prefer a lightweight library to perform the operation. This is where React Query(a library that interacts with our API) comes into play coupled with a library called graphql-request which is pretty much like Axios or fetch but tailored to make just graphql requests.&lt;/p&gt;

&lt;p&gt;Let's go ahead to setup the project!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;p&gt;This article will assume you have some familiarity with using React Query and Typescript. Also, basic knowledge of GraphQL will come in handy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-react-app"&gt;
  &lt;/a&gt;
  Create React App
&lt;/h3&gt;

&lt;p&gt;To create a new React app with the &lt;code&gt;--typescript&lt;/code&gt; template flag,&lt;br&gt;
 run;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn create react-app client --template typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If you're having issues creating a new react app due to the recent version upgrade, check out this &lt;a href="https://annysah.hashnode.dev/fix-the-error-you-are-running-create-react-app-403-which-is-behind-the-latest-release-500-we-no-longer-support-global-installation-ckxrocpkn0147u5s1ete59bsb"&gt;article&lt;/a&gt; on how to fix it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then, start the development server by running&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setup-react-query"&gt;
  &lt;/a&gt;
  Setup React Query
&lt;/h3&gt;

&lt;p&gt;Let's install React Query library by executing the following command;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add react-query
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, open up the &lt;code&gt;index.tsx&lt;/code&gt; file in the project folder and set up React Query client;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';

import { QueryClient, QueryClientProvider } from "react-query";

const queryClient = new QueryClient();

ReactDOM.render(
  &amp;lt;QueryClientProvider client={queryClient}&amp;gt;
    &amp;lt;App /&amp;gt;
  &amp;lt;/QueryClientProvider&amp;gt;,
  document.getElementById('root')
);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we instantiated the React query client and then wrapped our top-level component within the React query client provider.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scaffolding-out-the-app"&gt;
  &lt;/a&gt;
  Scaffolding out the App
&lt;/h3&gt;

&lt;p&gt;In the src folder of the project, create a folder called components. Right in this &lt;code&gt;components&lt;/code&gt; folder, create a &lt;code&gt;Countries.tsx&lt;/code&gt; file. The &lt;code&gt;Countries&lt;/code&gt; component will display lists of countries from the free public GraphQL &lt;a href="https://countries.trevorblades.com/graphql"&gt;Countries&lt;/a&gt; API we'll be using in this tutorial.&lt;/p&gt;

&lt;p&gt;For the purpose of styling the component interface, Tailwind CSS will be used. Now, add the CDN link written below to the head tag of the public/index.html file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;Countries&lt;/code&gt; component, add the following code;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";

const Countries: React.FunctionComponent = () =&amp;gt; {

  return (
          &amp;lt;div className="bg-white rounded-lg shadow-md w-80 text-center"&amp;gt;
            &amp;lt;div className="mt-4 p-10 text-bold"&amp;gt;
              &amp;lt;p&amp;gt;Country&amp;lt;/p&amp;gt;
              &amp;lt;p&amp;gt;Capital&amp;lt;/p&amp;gt;
              &amp;lt;p&amp;gt;Continent&amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
  );
};

export default Countries;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, open the &lt;code&gt;App.tsx&lt;/code&gt; file in the project folder and update like so&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";

import Countries from "./components/Countries";

const App = () =&amp;gt; {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;div className="bg-blue-100"&amp;gt;
        &amp;lt;header className="text-3xl text-center font-bold pt-6"&amp;gt;Countries&amp;lt;/header&amp;gt;
        &amp;lt;div className="flex justify-center pb-2"&amp;gt;
          &amp;lt;div className="flex flex-col"&amp;gt;
            &amp;lt;div className="flex-grow"&amp;gt;
              &amp;lt;div className="m-4 grid grid-cols-2 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-2 gap-8 mt-8"&amp;gt;
                &amp;lt;Countries /&amp;gt;
              &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

export default App;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-graphqlrequest-library"&gt;
  &lt;/a&gt;
  Install GraphQL-Request Library
&lt;/h3&gt;

&lt;p&gt;This library will basically provide a function that accepts an endpoint. Type the following command in your terminal, so we can install &lt;code&gt;graphlql-request&lt;/code&gt; into our project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add graphql graphql-request
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;graphql&lt;/code&gt; added above is a dependency for &lt;code&gt;graphql-request&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now update the &lt;code&gt;Countries&lt;/code&gt; component like so&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";

import { GraphQLClient } from "graphql-request";

const graphqlClient = new GraphQLClient(
  "https://countries.trevorblades.com/graphql"
);

const Countries: React.FunctionComponent = () =&amp;gt; {

  return (
          &amp;lt;div className="bg-white rounded-lg shadow-md w-80 text-center"&amp;gt;
            &amp;lt;div className="mt-4 p-10 text-bold"&amp;gt;
              &amp;lt;p&amp;gt;Country&amp;lt;/p&amp;gt;
              &amp;lt;p&amp;gt;Capital&amp;lt;/p&amp;gt;
              &amp;lt;p&amp;gt;Continent&amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
  );
};

export default Countries;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we basically imported &lt;code&gt;GraphQLClient&lt;/code&gt; from &lt;code&gt;graphql-request&lt;/code&gt; and instantiated it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#write-queries"&gt;
  &lt;/a&gt;
  Write Queries
&lt;/h3&gt;

&lt;p&gt;Next, we need to create a &lt;code&gt;countries.graphql&lt;/code&gt; file in the src folder. In this file, we'll define a query to get the list of countries data we need; the country names, capital and continents.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;query Countries {
    countries {
        name
        capital
        continent {
            name
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setup-graphql-codegen"&gt;
  &lt;/a&gt;
  Setup GraphQL Codegen
&lt;/h3&gt;

&lt;p&gt;Now, let's install &lt;code&gt;graphql-code-generator&lt;/code&gt; so we can have it up and running in our application. Execute the following command;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add -D  @graphql-codegen/cli @graphql-codegen/typescript @graphql-codegen/typescript-react-query  @graphql-codegen/typescript-operations
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From the above, we installed &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;graphql-codegen&lt;/code&gt; CLI so we can run our &lt;code&gt;codegen&lt;/code&gt; script.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;graphql-codegen/typescript&lt;/code&gt; and &lt;code&gt;graphql-codegen/typescript-operations&lt;/code&gt; plugins so we can get our generated types.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;graphql-codegen/typescript-react-query&lt;/code&gt; plugin in order to generate custom React Query hooks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's also create a &lt;code&gt;codegen.yml&lt;/code&gt; file where we'll configure how we want our code to be generated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;overwrite: true
schema: "https://countries.trevorblades.com/graphql"
documents: "src/**/*.graphql"
generates:
  src/generated/index.ts:
    plugins:
      - "typescript"
      - "typescript-operations"
      - typescript-react-query
    config:
        fetcher: graphql-request
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;schema&lt;/code&gt; is the URL for the free public GraphQL API we are using in this tutorial.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;documents&lt;/code&gt; tells &lt;code&gt;graphql-codegen&lt;/code&gt; to locate &lt;code&gt;graphql&lt;/code&gt; files, in this case the &lt;code&gt;countries.graphql&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;generates&lt;/code&gt; defines the file path where the types will be generated once we run a defined &lt;code&gt;graphql-codegen&lt;/code&gt; script.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;plugins&lt;/code&gt; represents the plugins we installed earlier.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;fetcher&lt;/code&gt; configuration lets &lt;code&gt;graphql-codegen&lt;/code&gt; know we are using &lt;code&gt;graphql-request&lt;/code&gt; to fetch our data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, let's add our &lt;code&gt;graphql-codegen&lt;/code&gt; script into our package.json file like so;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EXX9n9kf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641067875574/wNQ_Ay1XC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EXX9n9kf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641067875574/wNQ_Ay1XC.png" alt="codegen.PNG" width="880" height="545"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, let's run our script so we can have generated custom types added automatically to our project &lt;code&gt;src&lt;/code&gt; as a folder titled &lt;code&gt;generated&lt;/code&gt;;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn generate

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#display-the-data"&gt;
  &lt;/a&gt;
  Display the Data
&lt;/h3&gt;

&lt;p&gt;In the &lt;code&gt;Countries&lt;/code&gt; componet, let's update our code as shown below;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";

import { GraphQLClient } from "graphql-request";

import { CountriesQuery, useCountriesQuery } from "../generated";

const graphqlClient = new GraphQLClient(
  "https://countries.trevorblades.com/graphql"
);

const Countries: React.FunctionComponent = () =&amp;gt; {
  const { data, isLoading, error } = useCountriesQuery&amp;lt;CountriesQuery, Error&amp;gt;(
    graphqlClient,
    {}
  );

  if (isLoading) {
    return &amp;lt;div className="box"&amp;gt;Loading...&amp;lt;/div&amp;gt;;
  }

  if (error) {
    return &amp;lt;div&amp;gt;Error!&amp;lt;/div&amp;gt;;
  }

  return (
    &amp;lt;&amp;gt;
      {data?.countries?.map((country) =&amp;gt; {
        return (
          &amp;lt;div className="bg-white rounded-lg shadow-md w-80 text-center"&amp;gt;
            &amp;lt;div className="mt-4 p-10 text-bold"&amp;gt;
              &amp;lt;p&amp;gt;Country: {country.name}&amp;lt;/p&amp;gt;
              &amp;lt;p&amp;gt;Capital: {country.capital}&amp;lt;/p&amp;gt;
              &amp;lt;p&amp;gt;Continent: {country.continent.name}&amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
        );
      })}
    &amp;lt;/&amp;gt;
  );
};

export default Countries;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From the code above, to interact with the Countries API we are importing the fully typed custom hooks generated by &lt;code&gt;graphql-codegen&lt;/code&gt; in place of the usual &lt;code&gt;useQuery&lt;/code&gt; hook from React Query library. Then, we looped through the response data to display the lists of countries, capital and continents.&lt;/p&gt;

&lt;p&gt;Now you have it!. The final application should look like this;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---laT0IbM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641070831898/L_KqLGwP7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---laT0IbM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641070831898/L_KqLGwP7.png" alt="display.PNG" width="880" height="410"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can access the project source code in this &lt;a href="https://github.com/Annysah/react-ts-graphql"&gt;Github repo&lt;/a&gt;. Thanks for reading!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;In this article, we were able to make GraphQL API request successfully in our client-side application. By also incorporating the power of the GraphQL codegen library, we were able to generate fully typed custom React Query hooks for our application from the GraphQL schema.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>react</category>
      <category>graphql</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Drag and drop SVG elements</title>
      <author>101samovar</author>
      <pubDate>Sun, 02 Jan 2022 11:30:08 +0000</pubDate>
      <link>https://dev.to/101samovar/drag-and-drop-svg-elements-3oif</link>
      <guid>https://dev.to/101samovar/drag-and-drop-svg-elements-3oif</guid>
      <description>&lt;p&gt;In this article we will drag and drop SVG elements.&lt;/p&gt;

&lt;p&gt;Let’s build a site.&lt;br&gt;
Let’s add an SVG with two rectangles.&lt;br&gt;
Let’s add the CSS class to check if the element is draggable.&lt;/p&gt;

&lt;p&gt;Add a mousedown event listener for the SVG-element.&lt;br&gt;
First, check if the element has the “draggable” class name.&lt;br&gt;
If so, get the mouse position.&lt;br&gt;
Remember the element we start to drag and its position.&lt;br&gt;
Then start to listen to mousemove events. &lt;/p&gt;

&lt;p&gt;On mouse move we get the current mouse position&lt;br&gt;
and we change the element position.&lt;br&gt;
So the element is dragging.&lt;/p&gt;

&lt;p&gt;When the mouse button is up we stop to listen to mouse move events.&lt;br&gt;
So the element is dropped.&lt;/p&gt;

&lt;p&gt;Let’s check it out.&lt;/p&gt;

&lt;p&gt;Drag the rectangle. Drop it.&lt;br&gt;
Drag another one. Drop it.&lt;br&gt;
It works! :)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;startX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;startY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;elementX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;elementY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousedown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttributeNS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;class&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;draggable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;startX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetX&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;startY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;elementX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttributeNS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;elementY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttributeNS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onMouseMove&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="nx"&gt;onMouseMove&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetX&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttributeNS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;elementX&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;startX&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttributeNS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;elementY&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;startY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;};&lt;/span&gt;
 &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mouseup&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onMouseMove&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;I hope you found this article useful, if you need any help please let me know in the comment section.&lt;/p&gt;

&lt;p&gt;👋 See you next time. Have a nice day!&lt;/p&gt;

&lt;p&gt;Subscribe to our channel:&lt;br&gt;
&lt;a href="https://www.youtube.com/c/Samovar101"&gt;https://www.youtube.com/c/Samovar101&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Save more with DynamoDB table class</title>
      <author>Jones Zachariah Noel</author>
      <pubDate>Sun, 02 Jan 2022 11:29:03 +0000</pubDate>
      <link>https://dev.to/aws-builders/save-more-with-dynamodb-table-class-3k6g</link>
      <guid>https://dev.to/aws-builders/save-more-with-dynamodb-table-class-3k6g</guid>
      <description>&lt;p&gt;During re:Invent 2021, an announcement was made about &lt;a href="https://aws.amazon.com/dynamodb/"&gt;Amazon DynamoDB&lt;/a&gt; with table classes which helps in saving cost for infrequently accessed items. Read about the announcement from &lt;a href="https://aws.amazon.com/blogs/aws/new-dynamodb-table-class-save-up-to-60-in-your-dynamodb-costs/"&gt;AWS blog&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--3eqXOgyX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/919311122808807426/lo9aQouC_normal.jpg" alt="What’s New on AWS profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        What’s New on AWS
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @awswhatsnew
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Amazon DynamoDB announces the new Amazon DynamoDB Standard-Infrequent Access table class, which helps you reduce your DynamoDB costs by up to 60 percent&lt;br&gt;&lt;br&gt;Amazon DynamoDB announces the new Amazon DynamoDB Standard-Infrequent Access (DynamoDB Standard... &lt;a href="https://t.co/fASry7Wmte"&gt;aws.amazon.com/about-aws/what…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:51 PM - 01 Dec 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1466102686412001283" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1466102686412001283" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1466102686412001283" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h4&gt;
  &lt;a href="#key-takeaways-from-the-blog"&gt;
  &lt;/a&gt;
  Key takeaways from the blog
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#idea"&gt;The idea behind the storage class (S3) and table class (DynamoDB)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setting-up"&gt;Setting up DynamoDB table class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#costs"&gt;How DynamoDB table class affects cost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#best-fit"&gt;Best fit for Standard IA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#the-idea-behind-the-storage-class-s3-and-table-class-dynamodb"&gt;
  &lt;/a&gt;
  The idea behind the storage class (S3) and table class (DynamoDB) &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;In most of the Serverless architectures, the &lt;em&gt;go-to solution&lt;/em&gt; for storing infrequently access items with high availability is leveraging &lt;a href="https://aws.amazon.com/s3/"&gt;Amazon S3&lt;/a&gt; with the storage class &lt;strong&gt;Standard IA&lt;/strong&gt; or &lt;strong&gt;One zone IA&lt;/strong&gt;. &lt;br&gt;
This is achieved in two ways -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Where periodically or based on events, DynamoDB table items are retrieved and stored in S3 with the storage class of Infrequently Accessed (IA). And the retrieved items from DynamoDB have to be deleted from DynamoDB.&lt;/li&gt;
&lt;li&gt;With &lt;a href="https://dev.to/awscommunity-asean/dynamodb-and-ttl-177g"&gt;DynamoDB TTL&lt;/a&gt; and &lt;a href="https://dev.to/aws-builders/deep-dive-into-lambda-event-filters-for-dyanmodb-320"&gt;event filters for &lt;em&gt;REMOVE&lt;/em&gt; operation&lt;/a&gt; only, this can be stored into S3 with he storage class of &lt;em&gt;Infrequently Accessed (IA)&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This helps in storing data which are in other words &lt;em&gt;archived&lt;/em&gt; to the application and would be accessed &lt;em&gt;one a while&lt;/em&gt; but whenever it is accessed, it needs to be highly available.&lt;/p&gt;

&lt;p&gt;Now with the latest announcement, we wouldn't have to architect using S3 for &lt;em&gt;infrequently accessed&lt;/em&gt; items/objects and it is all part of DynamoDB table with the &lt;em&gt;Standard-IA&lt;/em&gt; class with which you can perform the same DynamoDB operations for read/write. Now with the introduction of table classes, there are two classes now available - &lt;strong&gt;DynamoDB Standard&lt;/strong&gt; and &lt;a href="https://aws.amazon.com/dynamodb/standard-ia/"&gt;&lt;strong&gt;DynamoDB Standard-IA&lt;/strong&gt;&lt;/a&gt;. The table with &lt;em&gt;Standard-IA&lt;/em&gt; class will eliminate the need of S3 based archival.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;DynamoDB Standard&lt;/strong&gt;&lt;br&gt;
The default general-purpose table class. Recommended for the vast majority of tables that store frequently accessed data, with throughput (reads and writes) as the dominant table cost.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DynamoDB Standard-IA&lt;/strong&gt;&lt;br&gt;
Recommended for tables that store data that is infrequently accessed, with storage as the dominant table cost.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;
  &lt;a href="#setting-up-dynamodb-table-class"&gt;
  &lt;/a&gt;
  Setting up DynamoDB table class &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;You could use your existing deployment methods for creating or updating DynamoDB tables with &lt;em&gt;TableClass&lt;/em&gt; attribute via CloudFormation and also from the web console.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#creating-a-table-with-dynamodb-standardia"&gt;
  &lt;/a&gt;
  Creating a table with DynamoDB Standard-IA
&lt;/h5&gt;

&lt;p&gt;Whenever creating the table from console, under &lt;strong&gt;Customized settings&lt;/strong&gt; selection, the choice of table class shows up where you can choose between &lt;strong&gt;DynamoDB Standard&lt;/strong&gt; and &lt;strong&gt;DynamoDB Standard-IA&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YXgYc6Lm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhrnl9tcbbou9a7u9ga9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YXgYc6Lm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhrnl9tcbbou9a7u9ga9.png" alt="Create table with Standard IA" width="816" height="469"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#updating-a-table-to-dynamodb-standardia"&gt;
  &lt;/a&gt;
  Updating a table to DynamoDB Standard-IA
&lt;/h5&gt;

&lt;p&gt;For updating an existing table, select the table and view details on the console. Under the &lt;strong&gt;Actions&lt;/strong&gt; menu, select &lt;strong&gt;Update table class&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YD_0mAvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxxn4yf1bbpasitndin2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YD_0mAvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxxn4yf1bbpasitndin2.png" alt="Updating a table to DynamoDB Standard-IA" width="880" height="418"&gt;&lt;/a&gt; This will present you an UI where you can choose between &lt;strong&gt;DynamoDB Standard&lt;/strong&gt; and &lt;strong&gt;DynamoDB Standard-IA&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P4hdwqmx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xfxwq1mhm77ycs5jvnt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4hdwqmx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xfxwq1mhm77ycs5jvnt.png" alt="Update table to Standard IA" width="809" height="258"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#creating-or-updating-with-cloudformation-sam-cli"&gt;
  &lt;/a&gt;
  Creating or updating with CloudFormation / SAM CLI
&lt;/h5&gt;

&lt;p&gt;SAM CLI which uses CloudFormation based resource definition with YAML/JSON, the table class can be updated with the new property introduced &lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-tableclass"&gt;&lt;strong&gt;TableClass&lt;/strong&gt;&lt;/a&gt; which accepts &lt;strong&gt;STANDARD&lt;/strong&gt; for DynamoDB Standard class or &lt;strong&gt;STANDARD_INFREQUENT_ACCESS&lt;/strong&gt; for DynamoDB Standard IA class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;DynamoDBTable&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AWS::DynamoDB::Table&lt;/span&gt;
    &lt;span class="na"&gt;Properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;AttributeDefinitions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;AttributeName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;id&lt;/span&gt;
          &lt;span class="na"&gt;AttributeType&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;S&lt;/span&gt;
      &lt;span class="na"&gt;KeySchema&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;AttributeName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;id&lt;/span&gt;
          &lt;span class="na"&gt;KeyType&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;HASH&lt;/span&gt;
      &lt;span class="na"&gt;ProvisionedThroughput&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;ReadCapacityUnits&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;
        &lt;span class="na"&gt;WriteCapacityUnits&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;
      &lt;span class="na"&gt;TableClass&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;STANDARD_INFREQUENT_ACCESS&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#how-dynamodb-table-class-affects-cost"&gt;
  &lt;/a&gt;
  How DynamoDB table class affects cost &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;The introduction of table classes, has changed how DynamoDB pricing works in terms of &lt;em&gt;storage&lt;/em&gt;, &lt;em&gt;read-write requests&lt;/em&gt; and &lt;em&gt;global tables&lt;/em&gt;. &lt;br&gt;
The cost for storage with &lt;em&gt;DynamoDB Standard IA&lt;/em&gt; class is much much &lt;strong&gt;cheaper&lt;/strong&gt; when compared with &lt;em&gt;DynamoDB Standard&lt;/em&gt; class with almost a difference of $0.15 per GB-month.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YfTsp9qz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kduziybyfqtj4lp31grk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YfTsp9qz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kduziybyfqtj4lp31grk.png" alt="Data storage" width="880" height="315"&gt;&lt;/a&gt; However, first 25 GB/month is available for free under &lt;em&gt;DynamoDB Standard&lt;/em&gt; class with the &lt;em&gt;monthly free tier&lt;/em&gt;.&lt;br&gt;
But in terms of &lt;em&gt;read-write requests&lt;/em&gt; and also &lt;em&gt;global tables&lt;/em&gt;, the &lt;em&gt;DynamoDB Standard IA&lt;/em&gt; class would make DynamoDB pricing expensive. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MEYY2a_F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9hvoz6nvga905l0zbvvw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MEYY2a_F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9hvoz6nvga905l0zbvvw.png" alt="Global tables" width="880" height="455"&gt;&lt;/a&gt; But comparing to the number of read requests which would happen with &lt;em&gt;DynamoDB Standard&lt;/em&gt; and &lt;em&gt;DynamoDB Standard IA&lt;/em&gt; class would be much much lesser as they are infrequently accessed.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oG_K6jiX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3531ucl0lz2yfq0hsfy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oG_K6jiX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3531ucl0lz2yfq0hsfy.png" alt="Read-write requests" width="880" height="498"&gt;&lt;/a&gt;&lt;br&gt;
There is a detailed information on DynamoDB pricing page for &lt;a href="https://aws.amazon.com/dynamodb/pricing/on-demand/"&gt;On Demand&lt;/a&gt; and &lt;a href="https://aws.amazon.com/dynamodb/pricing/provisioned/"&gt;Provisioned&lt;/a&gt;. From the example of table classes - DynamoDB Standard IA classes with On Demand is &lt;strong&gt;44.2% cheaper&lt;/strong&gt; than Standard and Provisioned is &lt;strong&gt;37.6% cheaper&lt;/strong&gt; than Standard even though the read-write requests with both the pricing models, Stardard IA is &lt;strong&gt;expensive&lt;/strong&gt; over Standard class.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#best-fit-for-standard-ia"&gt;
  &lt;/a&gt;
  Best fit for Standard IA &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;The new table class &lt;em&gt;DynamoDB Standard IA&lt;/em&gt; may not fit into all the applications as if the DynamoDB table is often requested with read/write it would generate a high DynamoDB bill. Standard IA would fit in best for the scenarios such as - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Social media app where posts prior to 1 year (365 days) are rarely accessed. &lt;/li&gt;
&lt;li&gt;Enterprise applications where the archives of years of data are maintained.&lt;/li&gt;
&lt;li&gt;Healthcare systems where the patient bill records are rarely accessed once cleared by insurance.&lt;/li&gt;
&lt;li&gt;Ecommerce applications where the low rated / less searched products are in IA state.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>dynamodb</category>
      <category>costsaving</category>
    </item>
    <item>
      <title>Time Management for Junior Developers</title>
      <author>Mikhail Karan</author>
      <pubDate>Sun, 02 Jan 2022 11:24:21 +0000</pubDate>
      <link>https://dev.to/mikhailkaran/time-management-for-junior-developers-3bgd</link>
      <guid>https://dev.to/mikhailkaran/time-management-for-junior-developers-3bgd</guid>
      <description>&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5AVQEXseTPZxZmYLLXzMgS"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-html-all-the-things"&gt;
  &lt;/a&gt;
  What is HTML All The Things
&lt;/h2&gt;

&lt;p&gt;HTML All The Things is a &lt;a href="https://podcast.htmlallthethings.com/"&gt;web development podcast&lt;/a&gt; and &lt;a href="https://discord.com/invite/jweMCx9"&gt;discord community&lt;/a&gt; which was started by Matt and Mike, developers based in Ontario, Canada. &lt;/p&gt;

&lt;p&gt;The podcast speaks to web development topics as well as running a small business, self-employment and time management. You can join them for both their successes and their struggles as they try to manage expanding their Web Development business without stretching themselves too thin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#announcements"&gt;
  &lt;/a&gt;
  Announcements
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Svelte for Beginners&lt;/strong&gt; Udemy course is now live! Mike took his experience in teaching and learning Svelte and created a course. &lt;/p&gt;

&lt;p&gt;This course will teach you the fundamentals of JavaScript frameworks. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get it now on Udemy!&lt;/strong&gt; 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/svelte-for-beginners/?couponCode=HATTSALE"&gt;Svelte For Beginners&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-this-one-about"&gt;
  &lt;/a&gt;
  What's This One About?
&lt;/h2&gt;

&lt;p&gt;Time management is a challenging part of any developers' day. Between the coding work that needs to be done alongside planning, and support requests - getting ahead may seem impossible. For junior developers, the added challenge is that they're actively learning, while balancing all the things that come with job searching, working, and even traditional school. In this episode, Matt and Mike cover some time management tips and tricks for developers - with some specific ones in there for junior developers and their crazy schedules. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#show-notes"&gt;
  &lt;/a&gt;
  Show Notes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#balancing-learning-applying-for-jobs-and-more"&gt;
  &lt;/a&gt;
  Balancing | Learning, Applying for Jobs, and more
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Determine your task priority&lt;/li&gt;
&lt;li&gt;Make an 'if I skip' list/consideration&lt;/li&gt;
&lt;li&gt;Don't always shoot for the most productive tasks &lt;/li&gt;
&lt;li&gt;Take breaks and days off &lt;/li&gt;
&lt;li&gt;Don't force a perfect plan &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#managing-your-learning-time"&gt;
  &lt;/a&gt;
  Managing Your Learning Time
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Tutorial hell&lt;/li&gt;
&lt;li&gt;Don't get stuck and not move on&lt;/li&gt;
&lt;li&gt;Don't learn it all at once&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#managing-your-job-application-time"&gt;
  &lt;/a&gt;
  Managing your Job Application Time
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Prioritize jobs based on your preferences&lt;/li&gt;
&lt;li&gt;Don't over apply&lt;/li&gt;
&lt;li&gt;Don't take anything personally (in the application process)&lt;/li&gt;
&lt;li&gt;Don't get discouraged &lt;/li&gt;
&lt;li&gt;Invest extra time wisely&lt;/li&gt;
&lt;li&gt;Acknowledge it's a grind&lt;/li&gt;
&lt;li&gt;Try multiple methods&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank you!
&lt;/h2&gt;

&lt;p&gt;If you're enjoying the podcast consider giving us a review on &lt;a href="https://podcasts.apple.com/us/podcast/html-all-things-web-development-web-design-small-business/id1412209136"&gt;Apple Podcasts&lt;/a&gt; or checking out our Patreon to get a shoutout on the podcast. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.patreon.com/htmlallthethings"&gt;Support us on Patreon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can find us on all the podcast platforms out there as well as&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/htmlallthethings/"&gt;Instagram (@htmlallthethings)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/htmleverything"&gt;Twitter (@htmleverything)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.tiktok.com/@htmlallthethings"&gt;TikTok (Html All The Things)&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>podcast</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>How the Metaverse is Changing Web Development</title>
      <author>Igor Polyakov</author>
      <pubDate>Sun, 02 Jan 2022 10:57:44 +0000</pubDate>
      <link>https://dev.to/igor_polyakov_gstq/how-the-metaverse-is-changing-web-development-18ga</link>
      <guid>https://dev.to/igor_polyakov_gstq/how-the-metaverse-is-changing-web-development-18ga</guid>
      <description>&lt;p&gt;The internet is no longer just text and pictures. With the development of new technologies like Virtual Reality, augmented reality, and mixed reality, the future of web development is changing. With these new technologies, we are looking at a world where more than just images will be available on websites. We are looking at a world where people can interact with 3D images. Read on to learn how this new technology is changing the game for web developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-development-in-the-new-world"&gt;
  &lt;/a&gt;
  Web Development in the New World
&lt;/h2&gt;

&lt;p&gt;The next generation of web development is a paradigm shift in the world of online marketing.&lt;/p&gt;

&lt;p&gt;3D content, otherwise known as 3D Web Content, is becoming more and more popular. Websites are now able to take advantage of their new capabilities with the help of tools like WebGL, WebVR, and WebAR to create interactive content that really engages viewers.&lt;/p&gt;

&lt;p&gt;The future of web development doesn't just mean 3D content — it also means mixed reality and augmented reality. This means that users will be able to interact with virtual objects on websites that have been placed into the real world. For example, companies can create virtual products or virtual installations on websites and then place those objects into physical spaces for people to experience them firsthand.&lt;/p&gt;

&lt;p&gt;This opens up so many possibilities for web development in the future. With the addition of these new technologies, we are looking at an entirely different landscape for website design and development than what has come before it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-virtual-reality-difference"&gt;
  &lt;/a&gt;
  The Virtual Reality Difference
&lt;/h2&gt;

&lt;p&gt;Virtual Reality is not just a new platform for entertainment, although it has been used for that as well. It has also been used to create business applications and products that provide value to the customer. In other words, VR can be used in a variety of industries from health care, education, real estate and manufacturing.&lt;/p&gt;

&lt;p&gt;With the world's first virtual reality headset, Google Cardboard, being released in 2014, there is no doubt that Virtual Reality will continue to change the web development landscape.&lt;/p&gt;

&lt;p&gt;Let's take a look at what you can expect from VR in your next website redesign or web application development project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Increased User Engagement: VR allows users to engage with digital products in a more immersive way than they've ever done before. It also allows them to experience things in a more personal way by having them virtually visit places they might have never seen before.&lt;/li&gt;
&lt;li&gt;Clarity: Users are able to see clearly where they're looking because of the lack of blurriness caused by using screens on desktop computers or devices like smartphones. With VR headsets like Oculus Rift and HTC Vive, users are able to see everything without any obstructions--making it easier for them to focus on what they're doing.&lt;/li&gt;
&lt;li&gt;Flexibility: Because of the 3D environment, users are able to see objects in different dimensions and angles, which gives them totally new opportunities.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#augmented-reality-and-mixed-reality"&gt;
  &lt;/a&gt;
  Augmented Reality and Mixed Reality
&lt;/h2&gt;

&lt;p&gt;are changing the future of web development&lt;/p&gt;

&lt;p&gt;The rapid increase in developments in augmented reality and mixed reality has changed the way developers approach web development. With these new technologies, we are looking for a more immersive experience online. For example, users will be able to walk into a virtual world and interact with 3D images on websites.&lt;/p&gt;

&lt;p&gt;For web developers, this means that they need to design websites that work on this new technology or they won't be as engaging as they should be. If your website doesn't have room for these new technologies, then you are losing out on engaging customers and potential clients.&lt;br&gt;
Because of these changes in the industry, web developers need to get off their butts and start investing in augmented and mixed reality technologies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-ar-and-mr-are-impacting-design"&gt;
  &lt;/a&gt;
  How AR and MR are Impacting Design
&lt;/h2&gt;

&lt;p&gt;While the internet is still primarily text and pictures, we are now seeing a lot more than just those two things. With the development of new technologies, like augmented reality and mixed reality, we are seeing a world where more than just images will be available on websites. This has been an especially important development for web design because it opens up our creativity and allows us to create better sites in less time.&lt;/p&gt;

&lt;p&gt;With these new technologies, designers can now use imagery that feels real. We can create content that is not only visually stunning but also experiential or interactive. But this doesn't mean that all websites are going to change overnight. In order to utilize these new technologies properly, you need to make sure you have the necessary skillsets and tech knowledge to do so successfully.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finishing-thoughts"&gt;
  &lt;/a&gt;
  Finishing Thoughts.
&lt;/h2&gt;

&lt;p&gt;The future of web development is changing. With the development of new technologies like Virtual Reality, augmented reality, and mixed reality, a world where people can interact with 3D images is on the horizon.&lt;/p&gt;

&lt;p&gt;These new technologies are making it possible for developers to create an immersive experience that will allow users to have a more intimate connection with websites.&lt;/p&gt;

&lt;p&gt;However, this technology isn't without its problems. For one thing, these types of websites are difficult to build and maintain because they require skills in both traditional and emerging technologies. And while these technologies are still a long way off from becoming mainstream (as evidenced by the lack of any major companies currently using them), we're excited about the possibilities that lie ahead for web developers!&lt;/p&gt;

&lt;p&gt;Originally posted at &lt;a href="https://hotsnow.fi/hotsnow-blog-workshtml/tpost/lvznxx4si1-how-the-metaverse-is-changing-web-develo"&gt;hotsnow.fi&lt;/a&gt;&lt;/p&gt;

</description>
      <category>metaverse</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
