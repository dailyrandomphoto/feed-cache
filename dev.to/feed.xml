<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What Exactly Is IPFS?</title>
      <author>Enoch Chejieh</author>
      <pubDate>Fri, 12 Nov 2021 17:37:02 +0000</pubDate>
      <link>https://dev.to/ecj222/what-exactly-is-ipfs-3a8c</link>
      <guid>https://dev.to/ecj222/what-exactly-is-ipfs-3a8c</guid>
      <description>&lt;p&gt;InterPlanetary File System (IPFS) is a term used to describe a peer-to-peer (p2p) distributed file-sharing system for storing and accessing data.&lt;/p&gt;

&lt;p&gt;IPFS is one of a few projects that are part of the Protocol Labs Organization, which was also founded by Benet. Inter-Planetary Linked Data (IPLD) and Filecoin are two Protocol Labs projects that are closely related to IPFS. The IPLD data model is a data model for distributed data structures such as blockchains. This model makes it simple to store and access blockchain data via IPFS. Users who store data on IPFS will be rewarded with Filecoin.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-ipfs-work"&gt;
  &lt;/a&gt;
  How does IPFS work?
&lt;/h3&gt;

&lt;p&gt;Let's imagine you just uploaded some content to IPFS. That content will then be split up into small pieces of data, the data is then given a certain unique fingerprint called a cryptographic hash.&lt;/p&gt;

&lt;p&gt;When multiple people upload the same content to IPFS, it will only be created once and that makes the network very efficient.&lt;/p&gt;

&lt;p&gt;Also when you need to look up content to view or download on IPFS you don't need to remember the hash assigned to that content, every content on IPFS can be found using Inter-Planetary Naming System (IPNS), a human-readable decentralized naming system for IPFS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-ipfs"&gt;
  &lt;/a&gt;
  Why use IPFS?
&lt;/h3&gt;

&lt;p&gt;The internet as it is today is built on technologies like Hypertext Transfer Protocol (HTTP), Domain Name System (DNS), and the way it works is by looking up IP addresses and forwarding the content from the IP address, This is called location-based addressing.&lt;/p&gt;

&lt;p&gt;When a user searches for a website, let's say &lt;a href="http://amazon.com"&gt;amazon.com&lt;/a&gt; for instance the user is trusting that whatever is located at that server to be the content that they want and that could be a problem because theirs nothing stopping the content from changing without the user doing anything about it.&lt;/p&gt;

&lt;p&gt;Another problem is that when there's only one source of content it creates constriction and centralization. On the contrary, IPFS uses content-based addressing. So when a user is requesting a piece of data it retrieves the content and not the location of that content which is more efficient. This really makes the web a lot more robust and protected.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Software developers are currently moving to decentralized data networks as a way to build new models around data ownership and to develop a better internet.&lt;/p&gt;

&lt;p&gt;This article is just an introduction to IPFS, there's still a lot to know about this wonderful technology. If you want to know more you can check out their &lt;a href="https://ipfs.io/"&gt;website&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>web3</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How to Host Website on Google Drive</title>
      <author>Bhavyashah</author>
      <pubDate>Fri, 12 Nov 2021 17:32:34 +0000</pubDate>
      <link>https://dev.to/bhavyashah/how-to-host-website-on-google-drive-422j</link>
      <guid>https://dev.to/bhavyashah/how-to-host-website-on-google-drive-422j</guid>
      <description>&lt;p&gt;Today I am going to teach you how to host website on google drive with custom free domain with free SSL certificates .We all know that google drive is one of the most popular content storage system in web, where we can upload our documents with no hassle.&lt;/p&gt;


&lt;p&gt;&lt;span&gt;There are few steps that you have to follow that you have to apply before host a website on google drive:&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;span&gt;1)&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;span&gt;First of all, you have to create a new folder and name the folder like your website name. In&lt;/span&gt;&lt;span&gt; my case, the website name is (&lt;/span&gt;&lt;b&gt;&lt;a href="https://www.gocodergo.tk"&gt;&lt;span&gt;&lt;a href="http://www.gocodergo.tk"&gt;www.gocodergo.tk&lt;/a&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;span&gt;). Now you have to create your HTML file and name your HTML file named as &lt;/span&gt;&lt;b&gt;index.html.&lt;/b&gt;&lt;span&gt; After you have made your HTML file, paste your file in your given folder and upload this folder in google drive, as you can see in the image&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;a href="https://1.bp.blogspot.com/-nMknIWsMePU/YE8-jeLlnZI/AAAAAAAAAHs/wEWfsqevar0BZfjJDtlOf8fRduPOBsYlACLcBGAsYHQ/s765/1.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XNGjTiE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-nMknIWsMePU/YE8-jeLlnZI/AAAAAAAAAHs/wEWfsqevar0BZfjJDtlOf8fRduPOBsYlACLcBGAsYHQ/s16000/1.jpg" width="765" height="424"&gt;&lt;/a&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;2) After you have uploaded your folder now to have to public your folder as we have listed below:&lt;/span&gt;&lt;span&gt;&lt;b&gt;Right-click&lt;/b&gt; on your folder you can see an option to &lt;b&gt;get a link. Click&lt;/b&gt; on the get link. You can see this type of interface as image shown below:&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;a href="https://1.bp.blogspot.com/-ucp_RpKtVME/YE9AVUa5p4I/AAAAAAAAAH0/3schQDzicoMmDatkXdmMQj_ZBqUZsJLLwCLcBGAsYHQ/s973/2.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XhLZwgEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-ucp_RpKtVME/YE9AVUa5p4I/AAAAAAAAAH0/3schQDzicoMmDatkXdmMQj_ZBqUZsJLLwCLcBGAsYHQ/w640-h384/2.jpg" width="639" height="384"&gt;&lt;/a&gt;&lt;br&gt;&lt;span&gt;Here you have to select &lt;b&gt;anyone with this link. Now&lt;/b&gt; click on done. After that, your link will be publicly shown to anyone. &lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;3) Now you have to go to the website &lt;b&gt;&lt;a href="https://drv.tw/"&gt;&lt;span&gt;Drive to web&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Here on this website, you have to host your website using google drive here, click on the &lt;b&gt;host on google drive, &lt;/b&gt;and log in with the same account. You have to give permission after that, you have to click you will automatically redirect on servers account panel like in this image given below:&lt;/span&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;b&gt; &lt;a href="https://1.bp.blogspot.com/-XekpD_dPcnI/YE9D2cVXQBI/AAAAAAAAAH8/0xS8uFmI3hkXmMkHVC4V3-CF6bOK20jwACLcBGAsYHQ/s1117/4.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AGAmPMZG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-XekpD_dPcnI/YE9D2cVXQBI/AAAAAAAAAH8/0xS8uFmI3hkXmMkHVC4V3-CF6bOK20jwACLcBGAsYHQ/w640-h480/4.jpg" width="640" height="480"&gt;&lt;/a&gt;&lt;br&gt;&lt;/b&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;span&gt;4) When you click on the link, it will host your site, but you can see that you do not have a custom domain as you can see this in the image: like &lt;b&gt;random-name/&lt;a href="http://www.your"&gt;www.your&lt;/a&gt; folder name. tk/&lt;/b&gt;&lt;/span&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;a href="https://1.bp.blogspot.com/-XlarMCZAJ_Y/YE9EoMCtyfI/AAAAAAAAAIE/fjY9sjiwrowV6FNFxRxLoJLDTRyYoZCTQCLcBGAsYHQ/s1077/5.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wfaTNLJn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-XlarMCZAJ_Y/YE9EoMCtyfI/AAAAAAAAAIE/fjY9sjiwrowV6FNFxRxLoJLDTRyYoZCTQCLcBGAsYHQ/w640-h150/5.jpg" width="640" height="150"&gt;&lt;/a&gt;&lt;br&gt;&lt;span&gt;5) As we can see that we have hosted your website, but now we can add the free custom domain name&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;First, you must register with &lt;u&gt;&lt;a href="https://www.freenom.com/en/index.html?lang=en"&gt;&lt;b&gt;&lt;span&gt;Freenom.com&lt;/span&gt;&lt;/b&gt;&lt;/a&gt;&lt;/u&gt; to get a .tk domain for free. This site also allows you to have other free domains such as .ml, .ck, etc.&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;6) Now, you can find the domain as you want. In my case, the domain name was &lt;b&gt;&lt;a href="https://www.gocodergo.tk"&gt;&lt;span&gt;&lt;a href="http://www.gocodergo.tk"&gt;www.gocodergo.tk&lt;/a&gt;&lt;/span&gt;&lt;/a&gt;. As&lt;/b&gt; I have searched, this type of domain is available, so I will buy this domain for 1 year, as you can see in the image:&lt;/span&gt;&lt;br&gt;&lt;a href="https://1.bp.blogspot.com/-sGRH2YbD-hc/YE9IfSHz5BI/AAAAAAAAAIM/3d2lsfgSdFY2X7KvAwFBxlyxwrjLt7xrQCLcBGAsYHQ/s1711/12.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jyn4z-RE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-sGRH2YbD-hc/YE9IfSHz5BI/AAAAAAAAAIM/3d2lsfgSdFY2X7KvAwFBxlyxwrjLt7xrQCLcBGAsYHQ/w640-h268/12.jpg" width="640" height="268"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;7) If you have bought your domain name, then you can see this type of typo interface &lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;a href="https://1.bp.blogspot.com/-LLLoODbmpks/YE9KYfLJM2I/AAAAAAAAAIU/aj5W05JjIOs6ZVRQlbsoriYeh_liSWCdwCLcBGAsYHQ/s1777/13.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cdYtp8zD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-LLLoODbmpks/YE9KYfLJM2I/AAAAAAAAAIU/aj5W05JjIOs6ZVRQlbsoriYeh_liSWCdwCLcBGAsYHQ/w640-h96/13.jpg" width="640" height="96"&gt;&lt;/a&gt;&lt;br&gt;&lt;span&gt;8) Now, you can go to the manage DNS section and add the name as listed below:&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;how to add a name first of going to manage DNS and then select cname in the manage DNS section after that you have to fill &lt;b&gt;target&lt;/b&gt; &lt;b&gt;column of your link as given bold but your link you have to add &lt;/b&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;https://&lt;b&gt;lzfdfj8ryhtzcrap3bmxqq-on.drv.tw&lt;/b&gt;/&lt;a href="http://www.yourdomainname.domainlevel/"&gt;www.yourdomainname.domainlevel/&lt;/a&gt;&lt;/span&gt;&lt;br&gt;&lt;a href="https://1.bp.blogspot.com/-U1Ibfrg_ryc/YE9MJkl370I/AAAAAAAAAIc/pAHvsK086ZE1gutypbIC0f-SkDwrQq5RgCLcBGAsYHQ/s1894/16.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K6XZ2pcO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-U1Ibfrg_ryc/YE9MJkl370I/AAAAAAAAAIc/pAHvsK086ZE1gutypbIC0f-SkDwrQq5RgCLcBGAsYHQ/w640-h218/16.jpg" width="640" height="217"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;9) Now, you have to wait for &lt;b&gt;half an hour to Update DNS, and then your website is hosted with the custom domain name. as you can see in my case in the image given below (&lt;a href="http://www.gocdergo.tk"&gt;www.gocdergo.tk&lt;/a&gt;)&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;a href="https://1.bp.blogspot.com/-ySDMeyvvFbA/YFHNIRwaNaI/AAAAAAAAAJE/n0Z3JG7L8BIrM6ytov8cY1PNHup84nnKQCLcBGAsYHQ/s1321/18.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bY3a71LD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-ySDMeyvvFbA/YFHNIRwaNaI/AAAAAAAAAJE/n0Z3JG7L8BIrM6ytov8cY1PNHup84nnKQCLcBGAsYHQ/s16000/18.jpg" width="880" height="136"&gt;&lt;/a&gt;&lt;br&gt;


  &lt;b&gt;Read Also:&lt;/b&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href="https://www.blogtriggers.com/2021/03/host-a-website-in-infinityfree-hosting-for-free.html"&gt;Host website in infinity free hosting&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;




&lt;p&gt;&lt;span&gt;10) Now, you can see that your website is ready, but their problem is that the SSL certificate and your site are also not secure; for that, you have to use &lt;span&gt;&lt;a href="https://www.cloudflare.com"&gt;&lt;b&gt;Cloudflare&lt;/b&gt;&lt;/a&gt;.&lt;/span&gt; &lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;b&gt;Cloudflare can protect your website from DDoS attacks&lt;/b&gt;. And watch your website from all types of attacks. Now we use Cloudflare to protect our website and also for SSL certificates.&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;First of all, signup for Cloudflare or account on Cloudflare, so log in. after signup or login, add your website domain name in Cloudflare. Now you have to set your DNS in your Cloudflare account. as shown in the given image&lt;/span&gt;&lt;a href="https://1.bp.blogspot.com/-6EwCnfetjI4/YFHOji-NwvI/AAAAAAAAAJM/ssuoJlJO-pwf86v64wnnN-vdsLwmsGrvgCLcBGAsYHQ/s811/19.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJ63Pzzf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-6EwCnfetjI4/YFHOji-NwvI/AAAAAAAAAJM/ssuoJlJO-pwf86v64wnnN-vdsLwmsGrvgCLcBGAsYHQ/s16000/19.jpg" width="811" height="355"&gt;&lt;/a&gt;&lt;span&gt;After adding your site now you have to checkout for a plan here in this, you can see &lt;b&gt;free plan &lt;/b&gt;at the bottom after that you have can see this image in the given below, and in this, you have to add a record with&lt;b&gt; text &lt;/b&gt;and write the &lt;b&gt;name www &lt;/b&gt;then you have to fill the content like the &lt;/span&gt;&lt;span&gt;URL&lt;/span&gt;&lt;span&gt;&lt;span&gt;https://&lt;/span&gt;&lt;b&gt;lzfdfj8ryhtzcrap3bmxqqon.drv.tw&lt;/b&gt;&lt;span&gt;/&lt;a href="http://www.gocodergo.tk/"&gt;www.gocodergo.tk/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;of this part. Still, you have to write only this part of the URL name and then click continue.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;a href="https://1.bp.blogspot.com/-bnMhQAnjy_c/YFHPoxhhQmI/AAAAAAAAAJQ/CZ_UdvgwaIYu3Nvp4T3jnnfoEvRQCG6AwCLcBGAsYHQ/s1495/20.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UNc-JUSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-bnMhQAnjy_c/YFHPoxhhQmI/AAAAAAAAAJQ/CZ_UdvgwaIYu3Nvp4T3jnnfoEvRQCG6AwCLcBGAsYHQ/s16000/20.jpg" width="880" height="403"&gt;&lt;/a&gt;&lt;span&gt;&lt;br&gt;&lt;span&gt;After that, you have to change the nameservers and replace your nameservers with Cloudflare 2 nameservers. &lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;After changing the nameservers, you have to wait for 24 hrs, and your site is ready to protect from &lt;b&gt;DDoS attacks. You&lt;/b&gt; have also seen your site have an &lt;b&gt;SSL certificate&lt;/b&gt; for one year after that, you have to renew both the SSL certificate also and the domain also as you can show in the below images:&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;a href="https://1.bp.blogspot.com/-LezO8xJMUS4/YFH2TC-nNHI/AAAAAAAAAJc/EhXZYSCY2P0S8yr_0Ia6Hnvy40wzQGGmQCLcBGAsYHQ/s1032/Screenshot%2B2021-03-17%2B175935.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V9ieQXOZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-LezO8xJMUS4/YFH2TC-nNHI/AAAAAAAAAJc/EhXZYSCY2P0S8yr_0Ia6Hnvy40wzQGGmQCLcBGAsYHQ/s16000/Screenshot%252B2021-03-17%252B175935.jpg" width="880" height="220"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I hope you Like our Post on &lt;a href="https://www.blogtriggers.com/2021/03/how-to-host-website-in-google-drive.html"&gt;host website on google drive&lt;/a&gt;. If you Find Any Queries regarding Host website on google drive then comment us we will solve your all queries below.&lt;/p&gt;

</description>
      <category>hosting</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>MVVM Design Pattern in iOS</title>
      <author>MKilmer</author>
      <pubDate>Fri, 12 Nov 2021 17:10:42 +0000</pubDate>
      <link>https://dev.to/mkilmer/mvvm-design-pattern-in-ios-5f9f</link>
      <guid>https://dev.to/mkilmer/mvvm-design-pattern-in-ios-5f9f</guid>
      <description>&lt;h1&gt;
  &lt;a href="#mvvm-modelviewmodel-model-"&gt;
  &lt;/a&gt;
  MVVM ( Model-ViewModel- Model )
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#you-can-ask-me-marcos-whats-mvvm-why-use-it-there-why-not-use-another"&gt;
  &lt;/a&gt;
  You can ask me : "Marcos, what's MVVM? Why use it there? Why not use another?"
&lt;/h2&gt;

&lt;p&gt;## Well, adopting a design pattern will depend on many things. Whether it's a business strategy, be size of what will be developed, testing requirements and so on. In this article, i will show some &lt;strong&gt;&lt;em&gt;concepts&lt;/em&gt;&lt;/strong&gt; about MVVM and a &lt;strong&gt;&lt;em&gt;code&lt;/em&gt;&lt;/strong&gt; demonstration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-go"&gt;
  &lt;/a&gt;
  Let's go!!!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/TLqkzhMIZxAQg/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/TLqkzhMIZxAQg/giphy.gif" alt="Alt Text" width="380" height="285"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mvvm-flow"&gt;
  &lt;/a&gt;
  MVVM Flow
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;ViewController / View will have a reference to the ViewModel&lt;/li&gt;
&lt;li&gt;ViewController / View get some &lt;strong&gt;&lt;em&gt;user action&lt;/em&gt;&lt;/strong&gt; and will call &lt;strong&gt;&lt;em&gt;ViewModel&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;ViewModel request some API Service and API Service will sends a response to ViewModel&lt;/li&gt;
&lt;li&gt;ViewModel will notifies the ViewController / View with binding&lt;/li&gt;
&lt;li&gt;The ViewController / View will update the UI with data&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BR1IPrXA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/34096743/141125060-b219cac2-0295-421f-bcb7-cbea1aff449e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BR1IPrXA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/34096743/141125060-b219cac2-0295-421f-bcb7-cbea1aff449e.png" alt="1_8MiNUZRqM1XDtjtifxTSqA" width="820" height="238"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#project-informations"&gt;
  &lt;/a&gt;
  Project Informations
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Use &lt;strong&gt;&lt;em&gt;jsonplaceholder&lt;/em&gt;&lt;/strong&gt; REST API&lt;/li&gt;
&lt;li&gt;URLSession to fetch data&lt;/li&gt;
&lt;li&gt;The table view will show data from service &lt;/li&gt;
&lt;/ol&gt;




&lt;h1&gt;
  &lt;a href="#mvvm-modelviewmodel-model-"&gt;
  &lt;/a&gt;
  MVVM ( Model-ViewModel- Model )
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#m-model-represents-data-just-it-holds-the-data-and-has-nothing-and-dont-have-business-logic"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;M&lt;/em&gt;&lt;/strong&gt; ( Model ) : Represents data. &lt;strong&gt;&lt;em&gt;JUST&lt;/em&gt;&lt;/strong&gt; it. Holds the data and has &lt;strong&gt;&lt;em&gt;nothing&lt;/em&gt;&lt;/strong&gt; and don't have business logic.
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="kt"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Decodable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Int&lt;/span&gt;
  &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt;
  &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;
  &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#v-view-represents-the-ui-in-the-view-we-have-user-actions-that-will-call-view-model-to-call-api-service-after-it-the-data-will-through-to-view-view-model-is-responsible-to-do-it-and-shows-informations-in-the-screen"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;V&lt;/em&gt;&lt;/strong&gt; ( View ) : Represents the &lt;strong&gt;&lt;em&gt;UI&lt;/em&gt;&lt;/strong&gt;. In the view, we have &lt;strong&gt;&lt;em&gt;User Actions&lt;/em&gt;&lt;/strong&gt; that will call view model to call api service. After it, the data will through to view ( view model is responsible to do it ) and shows informations in the screen.
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;PostViewController&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;UIViewController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;postViewModel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;PostViewModel&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;postDataSource&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;PostTableViewDataSource&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;PostTableViewCell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;postDelegate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;PostTableViewDelegate&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;lazy&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;postTableView&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;UITableView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;tableView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;UITableView&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;tableView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;translatesAutoresizingMaskIntoConstraints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tableView&lt;/span&gt;
    &lt;span class="p"&gt;}()&lt;/span&gt;

    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;viewDidLoad&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;viewDidLoad&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nf"&gt;setupViews&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nf"&gt;setupConstraints&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nf"&gt;updateUI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;setupViews&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;postTableView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;PostTableViewCell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;forCellReuseIdentifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;PostTableViewCell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cellIdentifier&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;addSubview&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postTableView&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;setupConstraints&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;activate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="n"&gt;postTableView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leadingAnchor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;constraint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;equalTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leadingAnchor&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;postTableView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trailingAnchor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;constraint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;equalTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trailingAnchor&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;postTableView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widthAnchor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;constraint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;equalTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widthAnchor&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;postTableView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heightAnchor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;constraint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;equalTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heightAnchor&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;postTableView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;centerXAnchor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;constraint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;equalTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;centerXAnchor&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;postTableView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;centerYAnchor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;constraint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;equalTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;centerYAnchor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;updateUI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;postViewModel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;PostViewModel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;postDelegate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;PostTableViewDelegate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;postViewModel&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bindPostViewModelToController&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;weak&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;updateDataSource&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;updateDataSource&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;guard&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;postViewModel&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getPosts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;postDataSource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;PostTableViewDataSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;cellIdentifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;PostTableViewCell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cellIdentifier&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;configureCell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;configureCell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;post&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;

        &lt;span class="kt"&gt;DispatchQueue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;postTableView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delegate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;postDelegate&lt;/span&gt;
            &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;postTableView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dataSource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;postDataSource&lt;/span&gt;
            &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;postTableView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;reloadData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;PostTableViewCell&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;PostTableViewCell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;UITableViewCell&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;cellIdentifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"PostTableViewCellIdentifier"&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;lazy&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;titleLabel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;UILabel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;UILabel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;numberOfLines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lineBreakMode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;byWordWrapping&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;black&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;UIFont&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;boldSystemFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ofSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;translatesAutoresizingMaskIntoConstraints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;
    &lt;span class="p"&gt;}()&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;lazy&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;bodyLabel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;UILabel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;UILabel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;numberOfLines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lineBreakMode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;byWordWrapping&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;
        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;translatesAutoresizingMaskIntoConstraints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;
    &lt;span class="p"&gt;}()&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;postStackView&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;UIStackView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;stackView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;UIStackView&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;stackView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vertical&lt;/span&gt;
        &lt;span class="n"&gt;stackView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spacing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
        &lt;span class="n"&gt;stackView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distribution&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fill&lt;/span&gt;
        &lt;span class="n"&gt;stackView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;translatesAutoresizingMaskIntoConstraints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;stackView&lt;/span&gt;
    &lt;span class="p"&gt;}()&lt;/span&gt;

    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;UITableViewCell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;CellStyle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;reuseIdentifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;reuseIdentifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;reuseIdentifier&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;setupViews&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nf"&gt;setupConstraints&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;required&lt;/span&gt; &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;?(&lt;/span&gt;&lt;span class="n"&gt;coder&lt;/span&gt; &lt;span class="nv"&gt;aDecoder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;NSCoder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;coder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;aDecoder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;prepareForReuse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;prepareForReuse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;titleLabel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
        &lt;span class="n"&gt;bodyLabel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;configureCell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;post&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;titleLabel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;
        &lt;span class="n"&gt;bodyLabel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;setupViews&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;contentView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;addSubview&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postStackView&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;postStackView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;addArrangedSubview&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;titleLabel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;postStackView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;addArrangedSubview&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bodyLabel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;setupConstraints&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;activate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="n"&gt;postStackView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leadingAnchor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;constraint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;equalTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;contentView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leadingAnchor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;constant&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;postStackView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trailingAnchor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;constraint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;equalTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;contentView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trailingAnchor&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;postStackView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topAnchor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;constraint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;equalTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;contentView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topAnchor&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;postStackView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bottomAnchor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;constraint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;equalTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;contentView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bottomAnchor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;PostTableViewDataSource&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;PostTableViewDataSource&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;CELL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;UITableViewCell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;NSObject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UITableViewDataSource&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;cellIdentifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;configureCell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;CELL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;cellIdentifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;configureCell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;@escaping&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;CELL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cellIdentifier&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cellIdentifier&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configureCell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configureCell&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;tableView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="nv"&gt;tableView&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;UITableView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numberOfRowsInSection&lt;/span&gt; &lt;span class="nv"&gt;section&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;tableView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="nv"&gt;tableView&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;UITableView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cellForRowAt&lt;/span&gt; &lt;span class="nv"&gt;indexPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;IndexPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;UITableViewCell&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;cell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tableView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dequeueReusableCell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;withIdentifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cellIdentifier&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;for&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;indexPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as?&lt;/span&gt; &lt;span class="kt"&gt;CELL&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;indexPath&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;configureCell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kt"&gt;UITableViewCell&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;PostTableViewDelegate&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;PostTableViewDelegate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;NSObject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UITableViewDelegate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;tableView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="nv"&gt;tableView&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;UITableView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;heightForRowAt&lt;/span&gt; &lt;span class="nv"&gt;indexPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;IndexPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;CGFloat&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mf"&gt;300.0&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#vm-viewmodel-responsible-to-call-service-class-to-fetch-data-from-the-serverthe-viewmodel-dont-know-what-the-views-and-what-thew-view-does"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;VM&lt;/em&gt;&lt;/strong&gt; ( ViewModel ) : Responsible to call service class to fetch data from the server.The ViewModel don't know what the views and what thew view does.
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;PostViewModel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;NSObject&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;postService&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;PostService&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;didSet&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;bindPostToViewController&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;postService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;PostService&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;callGetPosts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;bindPostToViewController&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;callGetPosts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;postService&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apiToGetPosts&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;posts is a property observer, so when we have API response, we will populate posts variable and call bindPostToViewController. Once we have data from view model, we can update the UI. bindPostToViewController will tell us when the response is already.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;PostService&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;PostService&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;postsPath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://jsonplaceholder.typicode.com/posts"&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;apiToGetPosts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;@escaping&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="kt"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;]?,&lt;/span&gt; &lt;span class="kt"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;guard&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;postsPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kt"&gt;URLSession&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dataTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nf"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;guard&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;dataReceive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="kt"&gt;JSONDecoder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="kt"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dataReceive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nf"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nf"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;resume&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#thanks-for-all-metal"&gt;
  &lt;/a&gt;
  Thanks for all! 🤘
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;I hope that i help you. Any question, please, tell me in comments&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mkilmerr/MVVM"&gt;Github Project&lt;/a&gt;&lt;/p&gt;

</description>
      <category>swift</category>
      <category>mvvm</category>
      <category>pattern</category>
      <category>ios</category>
    </item>
    <item>
      <title>Analyze Live Salesforce Data in Infragistics Reveal </title>
      <author>Jerod Johnson</author>
      <pubDate>Fri, 12 Nov 2021 16:44:35 +0000</pubDate>
      <link>https://dev.to/jerodimusprime/analyze-live-salesforce-data-in-infragistics-reveal-44j5</link>
      <guid>https://dev.to/jerodimusprime/analyze-live-salesforce-data-in-infragistics-reveal-44j5</guid>
      <description>&lt;p&gt;Infragistics Reveal is a data visualization solution that simplifies the way you add embedded analytics and visualizations to your apps. Reveal supports connecting to OData APIs, but many enterprise APIs are not built using the OData standard. By combining Reveal with &lt;a href="https://www.cdata.com/products/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=analyze-live-salesforce-data-in-infragistics-reveal"&gt;CData solutions&lt;/a&gt;, you can instantly build dynamic dashboards from live enterprise data sources like Salesforce. &lt;/p&gt;

&lt;p&gt;With access to live data, you can build real-time, responsive dashboards that retrieve new data points with every refresh. &lt;a href="https://www.cdata.com/connect/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=analyze-live-salesforce-data-in-infragistics-reveal"&gt;CData Connect Cloud&lt;/a&gt; and &lt;a href="https://www.cdata.com/apiserver/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=analyze-live-salesforce-data-in-infragistics-reveal"&gt;API Server&lt;/a&gt; let you generate standard data APIs like OData for all your data, offering out-of-the-box connectivity to tools like Reveal. &lt;/p&gt;

&lt;p&gt;In this article, we walk through how to connect to Salesforce to Infragistics Reveal to create a simple dashboard, leveraging CData Connect Cloud and CData API server to facilitate the connection. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-cdata"&gt;
  &lt;/a&gt;
  Why CData?
&lt;/h3&gt;

&lt;p&gt;Both CData Connect Cloud and CData API Server provide a single point of contact for all your enterprise data through standard data interfaces like SQL and OData. Instead of migrating data from dozens of sources to a static data store or writing your own integrations, simply point your tools to Connect Cloud or API Server and get instant, live access to all your data. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-connect-cloud"&gt;
  &lt;/a&gt;
  Why Connect Cloud?
&lt;/h3&gt;

&lt;p&gt;As a cloud-based integration platform, Connect Cloud is ideal for working with cloud apps that have embedded Reveal visualizations. With no servers to configure or data proxies to set up, you can simply use the Web-based UI to create a virtual database for Salesforce, generate an OData API, and connect from Reveal to start building dashboards based on live Salesforce data.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-cdata-api-server"&gt;
  &lt;/a&gt;
  Why CData API Server?
&lt;/h3&gt;

&lt;p&gt;CData API Server can be installed on-prem or in a self-hosted environment enabling you to connect to data from on-prem or self-hosted apps built on Reveal dashboards. Create an OData endpoint for Salesforce using the straightforward point-and-click interface and connect from Reveal to create dynamic Salesforce visualizations.  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#getting-started-salesforce-connection-properties"&gt;
  &lt;/a&gt;
  Getting Started: Salesforce Connection Properties
&lt;/h1&gt;

&lt;p&gt;To work with live Salesforce data in Reveal, you need to authenticate with Salesforce. There are several authentication methods available for connecting to Salesforce: Login, OAuth, and SSO. The Login method requires you to have the username, password, and security token of the user. &lt;/p&gt;

&lt;p&gt;If you do not have access to the username and password or do not wish to require them, you can use OAuth authentication. &lt;/p&gt;

&lt;p&gt;Use SSO (single sign-on) by setting the SSOProperties, SSOLoginUrl, and TokenUrl connection properties, which allow you to authenticate to an identity provider. See the "Getting Started" chapter in the help documentation for more information. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#using-cdata-connect-cloud"&gt;
  &lt;/a&gt;
  Using CData Connect Cloud
&lt;/h1&gt;

&lt;p&gt;To connect to your Salesforce data in Connect Cloud and enable OData access, navigate to the web interface for your Connect Cloud instance (&lt;a href="https://www.cdatacloud.net/myinstance"&gt;https://www.cdatacloud.net/myinstance&lt;/a&gt;). Follow the steps below to configure Connect Cloud. (Jump to building a dashboard.) &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-a-connect-cloud-user"&gt;
  &lt;/a&gt;
  Add a Connect Cloud User
&lt;/h2&gt;

&lt;p&gt;Create a User to connect to Salesforce from Reveal through Connect Cloud. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Click Users -&amp;gt;  Add &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configure a User &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d_6tM2y_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7su5jmqywrs6ctcv66i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d_6tM2y_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7su5jmqywrs6ctcv66i.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Click Save Changes and make a note of the Authtoken for the new user &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o081ONlu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iwci48u9zpqr1gp5ggrq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o081ONlu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iwci48u9zpqr1gp5ggrq.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#connect-to-salesforce-from-connect-cloud"&gt;
  &lt;/a&gt;
  Connect to Salesforce from Connect Cloud
&lt;/h3&gt;

&lt;p&gt;CData Connect Cloud uses a straightforward, point-and-click interface to connect to data sources and generate APIs. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open Connect Cloud and click Databases &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MnHrNifH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2afqyxm1ojpcigdk744x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MnHrNifH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2afqyxm1ojpcigdk744x.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Select "Salesforce" from Available Data Sources &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enter the necessary authentication properties to connect to Salesforce (see above) &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tpLKaF_9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kt8qtqef4y688v8biri4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tpLKaF_9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kt8qtqef4y688v8biri4.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Click  Test Database &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click Privileges -&amp;gt;  Add and add the new user (or an existing user) with the appropriate permissions (SELECT is the only required permission for Reveal) &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#add-salesforce-odata-endpoints-in-connect-cloud"&gt;
  &lt;/a&gt;
  Add Salesforce OData Endpoints in Connect Cloud
&lt;/h3&gt;

&lt;p&gt;After connecting to Salesforce, create OData Endpoint for the desired table(s). &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Click OData -&amp;gt; Tables -&amp;gt; Add Tables &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_2ji8Gtd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2d4adhz247rymmeeshc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_2ji8Gtd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2d4adhz247rymmeeshc.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select the Salesforce database &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KHzAcRRH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/inqq08jp2w6kkwwxfqa6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KHzAcRRH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/inqq08jp2w6kkwwxfqa6.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select the table(s) you wish to work with and click Next &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UPTmH8pi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbcfka4xsys5qvhn0ocx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UPTmH8pi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbcfka4xsys5qvhn0ocx.png" alt="Image description" width="880" height="557"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;(Optional) Edit the resource to select specific fields and more &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Save the settings &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#optional-configure-crossorigin-resource-sharing-cors"&gt;
  &lt;/a&gt;
  (Optional) Configure Cross-Origin Resource Sharing (CORS)
&lt;/h3&gt;

&lt;p&gt;When accessing and connecting to multiple different domains from an application such as Ajax, there is a possibility of violating the limitations of cross-site scripting. In that case, configure the CORS settings in OData -&amp;gt; Settings. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Enable cross-origin resource sharing (CORS): ON &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Allow all domains without '*': ON &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Access-Control-Allow-Methods: GET, PUT, POST, OPTIONS &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Access-Control-Allow-Headers: Authorization &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Save the changes to the settings. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FxiW5m14--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yne8m299vyvfp8m5hrd3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FxiW5m14--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yne8m299vyvfp8m5hrd3.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#using-api-server"&gt;
  &lt;/a&gt;
  Using API Server
&lt;/h1&gt;

&lt;p&gt;To connect to your Salesforce data in API Server and enable OData access, navigate to the web interface for your API Server instance (&lt;a href="https://localhost:8153"&gt;https://localhost:8153&lt;/a&gt;). Follow the steps below to configure the API Server. (Jump to building a dashboard.) &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#connect-to-salesforce-from-api-server"&gt;
  &lt;/a&gt;
  Connect to Salesforce from API Server
&lt;/h3&gt;

&lt;p&gt;CData API Server uses a straightforward, point-and-click interface to connect to data sources and generate APIs. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open API Server and click Settings -&amp;gt; Connection -&amp;gt;  Add Connection &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XjtcBlBA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i126nt9bi7frn444usmp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XjtcBlBA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i126nt9bi7frn444usmp.png" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select "Salesforce" &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pd0dIPiN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x7qhjqhtrm8gvmw7wyqx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pd0dIPiN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x7qhjqhtrm8gvmw7wyqx.png" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Enter the necessary authentication properties to connect to Salesforce (see above) &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oXtG6IqO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xolrvexiikffd2e8ha5w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oXtG6IqO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xolrvexiikffd2e8ha5w.png" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-salesforce-resource-definitions-in-api-server"&gt;
  &lt;/a&gt;
  Add Salesforce Resource Definitions in API Server
&lt;/h3&gt;

&lt;p&gt;After connecting to Salesforce, create Resources, which represent API endpoints for Salesforce data. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Click Settings -&amp;gt; Resources -&amp;gt; Add Resource &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FCHIJwCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2u7xt3j5jn37ffsvcql9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FCHIJwCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2u7xt3j5jn37ffsvcql9.png" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select the Salesforce connection &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lq-6dcC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/li0037b65traiapd8z9u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lq-6dcC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/li0037b65traiapd8z9u.png" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select the table you wish to retrieve and click Next &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ARtYUHBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ue1hzcsn501fu2izd0m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ARtYUHBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ue1hzcsn501fu2izd0m.png" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;(Optional) Edit the resource to select specific fields and more &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Save the settings &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#add-an-api-server-user"&gt;
  &lt;/a&gt;
  Add an API Server User
&lt;/h3&gt;

&lt;p&gt;Create a User to connect to Salesforce from Reveal through API Server. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Click Settings -&amp;gt; Users &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click  Add &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configure a User with access to the Salesforce Connection and Resource(s) &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QdDP5Vdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1bv804752olacfec092.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QdDP5Vdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1bv804752olacfec092.png" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nl5X-NZM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hl5jz4tjo8a0wj6jf7y4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nl5X-NZM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hl5jz4tjo8a0wj6jf7y4.png" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optional-configure-crossorigin-resource-sharing-cors"&gt;
  &lt;/a&gt;
  (Optional) Configure Cross-Origin Resource Sharing (CORS)
&lt;/h3&gt;

&lt;p&gt;When accessing and connecting to multiple different domains from an application such as Ajax, there is a possibility of violating the limitations of cross-site scripting. In that case, configure the CORS settings in Settings -&amp;gt; Server. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Enable cross-origin resource sharing (CORS): ON &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Allow all domains without '*': ON &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Access-Control-Allow-Methods: GET, PUT, POST, OPTIONS &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Access-Control-Allow-Headers: Authorization &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Save the changes to the settings. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d2BcSZxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/239ajiquudh7fmnylkvs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d2BcSZxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/239ajiquudh7fmnylkvs.png" alt="Image description" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#create-a-dashboard-in-reveal"&gt;
  &lt;/a&gt;
  Create a Dashboard in Reveal
&lt;/h1&gt;

&lt;p&gt;With the API Server configured, we can visualize Salesforce data in Reveal. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Log into Reveal and click Dashboards -&amp;gt;  New &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dOpa9FWD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxhq0ev54wlgm5wssjws.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dOpa9FWD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxhq0ev54wlgm5wssjws.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Click  Data Source -&amp;gt; OData Feed &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5JNfCSaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cz5gozzg9vd9e76xpxz9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5JNfCSaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cz5gozzg9vd9e76xpxz9.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Specify the API Server or Connect Cloud API endpoint URL, for example, &lt;a href="https://serverurl/api.rsc"&gt;https://serverurl/api.rsc&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kSe7ADcJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v89jczk19wxejsyaw912.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kSe7ADcJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v89jczk19wxejsyaw912.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select Generic Credentials and specify the API Server username and authentication token &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JtmmTnXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp4e6bw7m5n84hfjfhpv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JtmmTnXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp4e6bw7m5n84hfjfhpv.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select the entity you wish to visualize &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o7kgw_FW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyvqt20mws71fkwh70in.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o7kgw_FW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyvqt20mws71fkwh70in.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select fields and choose a chart type &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zUXp8UNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzy8ri0eb3zvwckp33ry.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zUXp8UNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzy8ri0eb3zvwckp33ry.png" alt="Image description" width="880" height="574"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#more-information"&gt;
  &lt;/a&gt;
  More Information
&lt;/h1&gt;

&lt;p&gt;Companies everywhere are looking to leverage their data to make effective decisions and grow their businesses. &lt;/p&gt;

&lt;p&gt;By providing industry-standard connectivity, both &lt;a href="https://www.cdata.com/connect/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=analyze-live-salesforce-data-in-infragistics-reveal"&gt;CData Connect Cloud&lt;/a&gt; and &lt;a href="https://www.cdata.com/apiserver/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=analyze-live-salesforce-data-in-infragistics-reveal"&gt;CData API Server&lt;/a&gt; democratize Salesforce access. Now everyone in the organization, from IT professionals &amp;amp; app developers to citizen analysts &amp;amp; data scientists can work with and find value from the entire Salesforce platform. &lt;/p&gt;

</description>
      <category>automation</category>
      <category>integration</category>
      <category>database</category>
      <category>connectivity</category>
    </item>
    <item>
      <title>Full Stack Developer Road-map 2021 || FREE RESOURCES 🔥🔥( Front-end)  Part I</title>
      <author>Femil Savaliya</author>
      <pubDate>Fri, 12 Nov 2021 16:44:34 +0000</pubDate>
      <link>https://dev.to/femil/full-stack-developer-road-map-2021-free-resources-front-end-part-i-2ceh</link>
      <guid>https://dev.to/femil/full-stack-developer-road-map-2021-free-resources-front-end-part-i-2ceh</guid>
      <description>&lt;p&gt;First thing first, &lt;br&gt;
Do you have questions? Here's an answer&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-fullstack-developer"&gt;
  &lt;/a&gt;
  What is a full-stack developer??
&lt;/h3&gt;

&lt;p&gt;A Full-Stack Developer is someone who works with the Back End — or server-side — of the application as well as the Front End or client-side.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-become-a-fullstack-developer"&gt;
  &lt;/a&gt;
  Why Become a Full-Stack Developer??
&lt;/h3&gt;

&lt;p&gt;A Full-Stack Developer, or someone who can work on both the back-end and front-end of an application, is a rare and valuable person to have on a team. It's why they can earn upwards of $120,000 a year and why companies fight to snag one for their team.&lt;/p&gt;

&lt;p&gt;In this blog, I will cover the front-end part. Let's jump into it.&lt;/p&gt;

&lt;p&gt;As easy as eating a burger!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M8qoedD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/hamburger-full-stack.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M8qoedD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.linkpicture.com/q/hamburger-full-stack.jpg" alt="full-stack burgur" width="735" height="593"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you can digest this burger, then you are good to go 🤣🤣,&lt;/p&gt;

&lt;p&gt;Now serious, let's look at this front-end web dev languages and technologies 🙌,&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1html"&gt;
  &lt;/a&gt;
  1.HTML
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;HyperText Markup Language (HTML)&lt;/strong&gt; is the set of markup symbols or codes inserted into a file intended for display on the Internet. The markup tells web browsers how to display a web page's words and images&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTML describes the structure of a Web page&lt;/li&gt;
&lt;li&gt;HTML consists of a series of elements&lt;/li&gt;
&lt;li&gt;HTML elements tell the browser how to display the content&lt;/li&gt;
&lt;li&gt;HTML elements label pieces of content such as "this is a 
heading", "this is a paragraph", "this is a link", etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Resources&lt;/h3&gt;

&lt;ul&gt;
      &lt;li&gt;
        &lt;a href="https://www.w3schools.com/html/"&gt;W3Schools&lt;/a&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;a href="https://www.codecademy.com/learn/learn-html"&gt;Learn HTML&lt;/a&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;a href="https://www.udemy.com/topic/html/free/"&gt;Free UDEMY Course for HTML/CSS from scratch&lt;/a&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;a href="https://www.freecodecamp.org/news/html-css-11-hour-course/"&gt;HTML and CSS From scratch - FreeCodeCamp&lt;/a&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;a href="https://youtu.be/pQN-pnXPaVg"&gt;HTML in 2hr - FreeCodeCamp&lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#2css"&gt;
  &lt;/a&gt;
  2.CSS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Cascading Style Sheets (CSS)&lt;/strong&gt; is a stylesheet language used to describe the presentation of a document written in HTML or XML (including XML dialects such as SVG, MathML or XHTML).&lt;/p&gt;

&lt;ul&gt;
      &lt;li&gt;CSS describes how HTML elements are to be displayed on screen, 
          paper, or in other media&lt;/li&gt;
&lt;li&gt;HTML consists of a series of elements&lt;/li&gt;
&lt;li&gt;External stylesheets are stored in CSS files&lt;/li&gt;
&lt;li&gt;CSS saves a lot of work. It can control the layout of multiple 
  web pages all at once
&lt;/li&gt;
    &lt;/ul&gt;

&lt;h3&gt;Resources&lt;/h3&gt;

&lt;ul&gt;
      &lt;li&gt;
        &lt;a href="https://www.w3schools.com/w3css/defaulT.asp"&gt;W3Schools CSS&lt;/a&gt;
      &lt;/li&gt;
      
      &lt;li&gt;
        &lt;a href="https://www.freecodecamp.org/news/tag/css/"&gt;FreeCodeCamp - CSS Course&lt;/a&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;a href="https://youtu.be/3_9znKVNe5g"&gt;Intro CSS - This series will teach you CSS in one hour&lt;/a&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;a href="https://openbase.com/search?q=css"&gt;ulma - Tutorials provided by OpenBase&lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#3javascript"&gt;
  &lt;/a&gt;
  3.JAVASCRIPT
&lt;/h2&gt;

&lt;p&gt;JavaScript is a &lt;strong&gt;dynamic computer programming language&lt;/strong&gt;. It is lightweight and most commonly used as a part of web pages, whose implementations allow client-side scripts to interact with the user and make dynamic pages. It is an interpreted programming language with object-oriented capabilities.&lt;/p&gt;

&lt;ul&gt;
      &lt;li&gt;JavaScript can update and change both HTML and CSS.&lt;/li&gt;
&lt;li&gt;JavaScript can calculate, manipulate and validate data.&lt;/li&gt;
&lt;li&gt;JavaScript is the Programming Language for the Web.&lt;/li&gt;

    &lt;/ul&gt;

&lt;h3&gt;Resources&lt;/h3&gt;

&lt;ul&gt;
      &lt;li&gt;
        &lt;a href="https://www.w3schools.com/whatis/whatis_js.asp"&gt;W3Schools JS&lt;/a&gt;
      &lt;/li&gt;
      
      &lt;li&gt;
        &lt;a href="https://www.freecodecamp.org/news/learn-javascript-full-course/"&gt;FreeCodeCamp - JS Course&lt;/a&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;a href="https://youtu.be/W6NZfCO5SIk%0A%20%20%20%20%20%20%20%20%20%20target="&gt;JavaScript Tutorial for Beginners: Learn JavaScript in 1 Hour&lt;/a&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;a href="https://www.javascript.com"&gt;Javascript&lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#frameworks"&gt;
  &lt;/a&gt;
  ||Frameworks||
&lt;/h2&gt;

&lt;p&gt;The front-end of a website or application is the stuff visible to the user on the website. ... In addition, it includes building user-friendly interfaces and efficiently presenting the data from the back end to a user. Thus, &lt;strong&gt;a Front-end Framework is a platform/tool to build the front end of your website&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;There are many debet on which frameworks are better, and why, but as per global user this are top five,&lt;/p&gt;

&lt;ul&gt;
      &lt;li&gt;&lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="https://vuejs.org/"&gt;VueJs&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="https://jquery.com/"&gt;JQuery&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="https://emberjs.com/"&gt;EmberJs&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;p&gt;Best way to learn and understand each concept in deep, I recommend you to refer to the documentation of a particular framework.&lt;/p&gt;

&lt;p&gt;Although there are more technologies for all HTML, CSS, and JAVASCRIPT that will help you to enhance your productivity and make it easy to write code if you ask me first to understand and learn the core language, then go for the framework and their technologies.&lt;/p&gt;

&lt;p&gt;Congratulations!!! You’re now a front-end developer. 😎&lt;/p&gt;

&lt;p&gt;All the best  &lt;code&gt;&amp;lt;p style="life:flex;"&amp;gt;Happy Code&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Part II will be uploaded soon. Thanks for reading. 💖💖&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>TruStacks</title>
      <author>TruStacks</author>
      <pubDate>Fri, 12 Nov 2021 16:19:46 +0000</pubDate>
      <link>https://dev.to/trustacks1/trustacks-1if5</link>
      <guid>https://dev.to/trustacks1/trustacks-1if5</guid>
      <description>&lt;p&gt;Speed is power. TruStacks gives you the power and ability to quickly standardize your developer workflows and will provide you a consistent foundation that can be easily followed and replicated.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>automation</category>
      <category>softwaredevelopmet</category>
      <category>pipelines</category>
    </item>
    <item>
      <title>Improve Developer Productivity with Ephemeral Environments</title>
      <author>Sam Allen</author>
      <pubDate>Fri, 12 Nov 2021 16:16:55 +0000</pubDate>
      <link>https://dev.to/allensam88/improve-developer-productivity-with-ephemeral-environments-2m2l</link>
      <guid>https://dev.to/allensam88/improve-developer-productivity-with-ephemeral-environments-2m2l</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;There seems to be an insatiable demand for software; indeed there is an app for everything these days. In many ways, modern software development is more akin to a continuous manufacturing process, where products are frequently produced and shipped. Software companies are constantly iterating on new product features. User expectations demand constant improvements ranging from bug fixes to expanded product offerings.&lt;/p&gt;

&lt;p&gt;The Developer process for HOW software is shipped is vital for maintaining a competitive edge. For example, having access to rapid-prototyping test environments is a critical process that can greatly enhance the overall Developer Experience. At ReleaseHub, our mission is to enable companies to get their best ideas to the world quickly by helping them produce consistent, reliable, and plentiful Environments on demand.&lt;/p&gt;

&lt;p&gt;Additionally, having an overall improvement strategy for streamlining the Developer Experience is crucial for eliminating any internal friction that may arise. There are many different approaches for conducting process improvement, ranging from formal methodologies to informal ad hoc projects. All approaches are valid and can add value depending on your company culture. In recent years, the Lean Manufacturing philosophy has become a popular approach for analyzing and improving internal work processes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#brief-lean-manufacturing-history"&gt;
  &lt;/a&gt;
  Brief Lean Manufacturing History
&lt;/h3&gt;

&lt;p&gt;Prior to pivoting my career toward software development, I lived another life as an industrial engineer facilitating Lean Manufacturing projects and workshops where the goal was to leverage employee ingenuity to identify and creatively eliminate any waste in a process.&lt;/p&gt;

&lt;p&gt;The Lean Manufacturing philosophy has a rich history that can be traced back to Walter Shewart’s statistical quality control methods at Bell Laboratories in the early 20th century. W. Edward Deming learned and enhanced these techniques from Shewart. After WWII, Deming was called upon to help rebuild Japanese industry and he championed this thought-process of continuous improvement through statistical analysis. Companies like Toyota embraced this approach and continued to enhance it where it gradually morphed into the Lean philosophy that many of us are familiar with today.&lt;/p&gt;

&lt;p&gt;Lean Manufacturing can now be found in other non-manufacturing sectors such as healthcare, banking, government, software development, etc. Essentially, all work consists of a “process” that can be continually improved upon, regardless of the product or work environment. Continuous improvement enables the employee to be more successful by standardizing or automating routines, eliminating blockers, and harvesting worker ideas for improving their own work. Many software companies do this naturally and they may or may not call it “kaizen”, which is the Japanese word for continuous improvement. There are agile scrum retrospectives where teams debrief on how their last Sprint went to see whether they can improve the overall developer experience. However a team approaches it, continuous improvement cannot be avoided.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-releasehub-can-help"&gt;
  &lt;/a&gt;
  How ReleaseHub Can Help
&lt;/h3&gt;

&lt;p&gt;At many tech organizations, there is still the common bottleneck problem of generating test environments. Software companies typically employ a DevOps team to produce such environments which can be costly to maintain and frequently break down. Any shared resource can be a pain point for both large and small companies that are trying to rapidly ship new features. Developer teams must wait around for testing environments to become available or argue over priorities and who can utilize the environment.&lt;/p&gt;

&lt;p&gt;Our entire mission at ReleaseHub is to enable companies to get their best ideas to the world quickly by helping them produce consistent, reliable, and plentiful Environments on demand. This is a huge kaizen improvement opportunity that can greatly improve the overall Developer Experience by eliminating frustrating downtime and improving quality, throughput, and morale. If you wish to get your organization set up with automated Environments, let us know how we can help you accomplish your mission faster and easier.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@lennykuhne?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Lenny Kuhne&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/manufacturing?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>5 Articles every WebDev should read this week (#45)
</title>
      <author>martin krause</author>
      <pubDate>Fri, 12 Nov 2021 16:10:33 +0000</pubDate>
      <link>https://dev.to/martinkr/5-articles-every-webdev-should-read-this-week-45-2h5d</link>
      <guid>https://dev.to/martinkr/5-articles-every-webdev-should-read-this-week-45-2h5d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#towards-an-animation-smoothness-metric"&gt;
  &lt;/a&gt;
  Towards an animation smoothness metric
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Learn about measuring animations, how to think about animation frames, and overall page smoothness.&lt;br&gt;
&lt;a href="https://web.dev/smoothness/"&gt;https://web.dev/smoothness/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#developer-tools-secrets-that-shouldnt-be-secrets"&gt;
  &lt;/a&gt;
  Developer Tools secrets that shouldn’t be secrets
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Christian Heilmann: This is a talk that I’ve given at CityJS this September. I am a principal product manager for developer tools in Microsoft Edge and these are things I encountered during working on the tools, documenting them and going through user feedback.&lt;br&gt;
&lt;a href="https://christianheilmann.com/2021/11/01/developer-tools-secrets-that-shouldnt-be-secrets/?ref=sidebar&amp;amp;fbclid=IwAR3nUhkdzWDm6gdbtf0nWDdgImcyxpj22WRqSK2J4X5RmYI_vHv_stgZSDM"&gt;https://christianheilmann.com/2021/11/01/developer-tools-secrets-that-shouldnt-be-secrets/?ref=sidebar&amp;amp;fbclid=IwAR3nUhkdzWDm6gdbtf0nWDdgImcyxpj22WRqSK2J4X5RmYI_vHv_stgZSDM&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#a-guide-to-load-testing-nodejs-apis"&gt;
  &lt;/a&gt;
  A Guide to Load Testing Node.js APIs
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Artillery is an open-source command-line tool purpose-built for load testing and smoke testing web applications. It is written in JavaScript and it supports testing HTTP, Socket.io, and WebSockets APIs.&lt;br&gt;
&lt;a href="https://blog.appsignal.com/2021/11/10/a-guide-to-load-testing-nodejs-apis-with-artillery.html"&gt;https://blog.appsignal.com/2021/11/10/a-guide-to-load-testing-nodejs-apis-with-artillery.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#announcing-typescript-45-rc"&gt;
  &lt;/a&gt;
  Announcing TypeScript 4.5 RC
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Today we’re excited to announce our Release Candidate (RC) of TypeScript 4.5! Between now and the stable release of TypeScript 4.5, we expect no further changes apart from critical bug fixes.&lt;br&gt;
&lt;a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-5-rc/"&gt;https://devblogs.microsoft.com/typescript/announcing-typescript-4-5-rc/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#angular-v13-is-now-available"&gt;
  &lt;/a&gt;
  Angular v13 is now Available
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;We’re back with the brand new release of Angular v13 to share with all of you! This latest release brings all sorts of updates and features to help your teams build great apps.&lt;br&gt;
&lt;a href="https://blog.angular.io/angular-v13-is-now-available-cce66f7bc296"&gt;https://blog.angular.io/angular-v13-is-now-available-cce66f7bc296&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#plus-one-video-what-the-heck-is-the-event-loop-anyway-philip-roberts-jsconf-eu"&gt;
  &lt;/a&gt;
  PLUS one video: What the heck is the event loop anyway? | Philip Roberts | JSConf EU
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A good explanations of how JavaScript actually works with some handy visualisations, and fun hacks for an intuitive understanding of what happens when JavaScript runs.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ"&gt;https://www.youtube.com/watch?v=8aGhZQkoFbQ&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Follow me on &lt;a href="http://twitter.com/_martinkr"&gt;Twitter: @martinkr&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@burntime"&gt;Alex Kulikov&lt;/a&gt; on &lt;a href="https://unsplash.com"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;




</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 12 Nov 2021 16:08:40 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-641</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-641</guid>
      <description>&lt;p&gt;Hey there! &lt;/p&gt;

&lt;p&gt;Looking back on this past week, what was something you were proud of accomplishing?&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Playing with an adorable pet... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Congrats on your wins! Excuse me while I slide into the weekend. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/cAhGmJPBqsXAlDTYHi/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/cAhGmJPBqsXAlDTYHi/giphy.gif" alt="Panda Cub going down a slide" width="340" height="256"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Windows 11 in React Js 💻🌈 Update (Unofficial)</title>
      <author>Blue edge</author>
      <pubDate>Fri, 12 Nov 2021 15:49:36 +0000</pubDate>
      <link>https://dev.to/blueedgetechno/update-on-windows-11-in-react-js-unofficial-2m87</link>
      <guid>https://dev.to/blueedgetechno/update-on-windows-11-in-react-js-unofficial-2m87</guid>
      <description>&lt;p&gt;Hello devs,&lt;/p&gt;

&lt;p&gt;So this is a follow up of my &lt;a href="https://dev.to/blueedgetechno/windows-11-in-react-js-hd3"&gt;previous post&lt;/a&gt; about the remaking of windows 11 in ReactJs.&lt;/p&gt;

&lt;p&gt;Visit: &lt;a href="http://win11.blueedge.me"&gt;win11.blueedge.me&lt;/a&gt;&lt;br&gt;
Github: &lt;a href="https://github.com/blueedgetechno/win11React"&gt;blueedgetechno/win11React&lt;/a&gt;&lt;br&gt;
Discord: &lt;a href="https://discord.gg/qmEZwUhb4b"&gt;discord.gg/qmEZwUhb4b&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After a few months of regular updates and huge support from the community, we have been able to add dozens of features and lots of enhancements.&lt;/p&gt;

&lt;p&gt;This version presents you:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Dark mode and ton of CSS optimizations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A fully featured and community-backed store system to download external applications.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;New apps like Spotify, Discord, Camera, Store (updated), and a lot more.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Native features like Context menu, Action center, Lockscreen, Boot Screen.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A lot more responsive for mobile and tablets.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And a lot more on my bucket list ...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preview"&gt;
  &lt;/a&gt;
  Preview
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h9Gf_wv0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj0nd5np1l4wypdqarfn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h9Gf_wv0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj0nd5np1l4wypdqarfn.png" alt="winvslight" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mO9GybdJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lidaz7e00jf96o03xcrr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mO9GybdJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lidaz7e00jf96o03xcrr.png" alt="store&amp;amp;spotify" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tyFx8H1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/con4vecc2hzpaxssy3hn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tyFx8H1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/con4vecc2hzpaxssy3hn.png" alt="contextmenu" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GEEZei8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5b9ghwwgoxr6ujpys9u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GEEZei8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5b9ghwwgoxr6ujpys9u.png" alt="widget" width="880" height="558"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, There were a lot of hiccups during the development of this project. We even faced a backlash from Microsoft for trademark violation but we managed our way through.&lt;/p&gt;

&lt;p&gt;Special thanks to &lt;a class="mentioned-user" href="https://dev.to/andrewstech"&gt;@andrewstech&lt;/a&gt;
 for being so helpful during the entire process.&lt;/p&gt;

&lt;p&gt;Visit: &lt;a href="http://win11.blueedge.me"&gt;win11.blueedge.me&lt;/a&gt;&lt;br&gt;
Github: &lt;a href="https://github.com/blueedgetechno/win11React"&gt;blueedgetechno/win11React&lt;/a&gt;&lt;br&gt;
Discord: &lt;a href="https://discord.gg/qmEZwUhb4b"&gt;discord.gg/qmEZwUhb4b&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>css</category>
      <category>javascript</category>
      <category>design</category>
    </item>
    <item>
      <title>How to make a TailwindCSS SaaS Landing Page in record time</title>
      <author>Haris#</author>
      <pubDate>Fri, 12 Nov 2021 15:38:11 +0000</pubDate>
      <link>https://dev.to/harishash/how-to-make-a-tailwindcss-saas-landing-page-in-record-time-152b</link>
      <guid>https://dev.to/harishash/how-to-make-a-tailwindcss-saas-landing-page-in-record-time-152b</guid>
      <description>&lt;p&gt;Hi everyone,&lt;br&gt;
My name is Haris and today I’ll be showing you how to make a SaaS Landing Page with TailwindCSS within 5 minutes, and the best part is that it’ll be totally free! So, let’s jump right in!&lt;/p&gt;

&lt;p&gt;To make this Landing Page, we’ll be using the blox extension for VS Code. You can grab it for free &lt;a href="https://bit.ly/30mBC4U"&gt;here&lt;/a&gt; on VS Code Marketplace.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WTory9Xm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ewcnfm70vt4oo8gormd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WTory9Xm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ewcnfm70vt4oo8gormd.png" alt="blox VS code Marketplace" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start things off with a hero section. I'll be using &lt;code&gt;Center Aligned with Image&lt;/code&gt; for this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rgKvdweL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sa6bunkbuvgvi7z4xhtj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rgKvdweL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sa6bunkbuvgvi7z4xhtj.png" alt="Hero Section" width="880" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up we’ll add a Feature section. Here you can highlight the main features of your product. For that purpose &lt;code&gt;Feature 7&lt;/code&gt; will work just fine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KIv3uZfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0x4kf4kyjuesaf08b5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KIv3uZfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0x4kf4kyjuesaf08b5x.png" alt="Feature Section" width="880" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the feature section, we can add a Pricing section to showcase the offerings of the product. We’ll go with &lt;code&gt;3 Cards with Yellow Hover&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--teqPu1aw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c835amv64wjaf7brufuy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--teqPu1aw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c835amv64wjaf7brufuy.png" alt="Pricing Section" width="512" height="313"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’ll close things off with a CTA and I think &lt;code&gt;Right Aligned Avatars with Gradient&lt;/code&gt; will look perfect for this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g2PBJoxQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkwfp8smrv0awm9zhu25.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g2PBJoxQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qkwfp8smrv0awm9zhu25.png" alt="CTA Section" width="512" height="313"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And just like that, we’re done with the first draft of the SaaS Landing Page. Here’s how the end product looks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aapitohd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghls655z95zhezz62ov4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aapitohd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghls655z95zhezz62ov4.gif" alt="Final Preview GIF" width="600" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since blox offers support for other frameworks like React, Angular and Vue, the same page can be developed for those projects as well. So with just a couple of clicks, we can set up the structure for our TailwindCSS landing page and make modifications according to the project from that point onwards. Hope this helps you save your precious developer hours.&lt;/p&gt;

&lt;p&gt;You can access the page that I made here at: &lt;a href="https://github.com/vs-blox/examples"&gt;https://github.com/vs-blox/examples&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy Developing!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>Editing API Driver API Profiles </title>
      <author>Jerod Johnson</author>
      <pubDate>Fri, 12 Nov 2021 15:28:44 +0000</pubDate>
      <link>https://dev.to/jerodimusprime/editing-api-driver-api-profiles-m63</link>
      <guid>https://dev.to/jerodimusprime/editing-api-driver-api-profiles-m63</guid>
      <description>&lt;p&gt;RESTful APIs offer a straightforward way for businesses to work with external data and offer access to their own data. With more than 24,000 public APIs providing access to limitless data and the typical enterprise leveraging more than 200 applications, teams and developers need more efficient ways to query API data. With the CData API Driver, it is easier than ever to integrate with APIs at scale for data analytics and application development. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-the-api-driver"&gt;
  &lt;/a&gt;
  Why use the API Driver?
&lt;/h2&gt;

&lt;p&gt;Use simple SQL to access and work with data anywhere there’s an API. Like all &lt;a href="https://www.cdata.com/drivers/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=editing-api-driver-api-profiles"&gt;CData Drivers&lt;/a&gt;, the CData API Driver makes it easier to work with your data. With the API Driver and the available API Profiles, you can instantly and codelessly query dozens of APIs (including any APIs built using the &lt;a href="https://www.cdata.com/apiserver/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=editing-api-driver-api-profiles"&gt;CData API Server&lt;/a&gt;) from BI, data integration, and custom applications.  &lt;/p&gt;

&lt;p&gt;Thanks to its extensible design, organizations and developers can modify API Profiles from API Server to customize integrations and even create their own API Profiles. Easily expand the connectivity offered by API Driver to any RESTful API. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#editing-an-api-profile"&gt;
  &lt;/a&gt;
  Editing an API Profile
&lt;/h1&gt;

&lt;p&gt;By default, existing API Profiles grant read access to APIs. We can edit the API Profiles to gain write access to APIs (where supported). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unzip-the-existing-profile"&gt;
  &lt;/a&gt;
  Unzip the Existing Profile
&lt;/h2&gt;

&lt;p&gt;API Profiles (.apip files) are compressed folders that contain a collection of schema files representing the endpoints available for the API. When you decompress (unzip) the file, you can edit the schema files individually to extend the functionality. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CkDkVzQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bqum8t6f0dh5zojgao37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CkDkVzQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bqum8t6f0dh5zojgao37.png" alt="Image description" width="854" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-the-schema-file"&gt;
  &lt;/a&gt;
  Open the Schema File
&lt;/h2&gt;

&lt;p&gt;Once the Profile is decompressed, open the schema file for the API endpoint you wish to modify (in your preferred text editor). Each schema file has several parts that define how SQL access is enabled for an API endpoint. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;api:info: This keyword maps API fields to table columns through scripted column definitions. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;attr: This element represents a column definition (details are below). &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;api:set attr="...": This keyword (attribute) sets various parameters for the API integration, including paging functionality and information on how to parse the API response (via the RepeatElement attribute). &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;api:script method="...": This keyword defines how read and write functionality is implemented for the API endpoint, including which internal operation is called and how specific functionality like filtering is managed. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below are the full contents of a the schema file for retrieving Zoom Meetings. &lt;/p&gt;

&lt;p&gt;Meetings.rsd &lt;/p&gt;































&lt;p&gt;&lt;a href="/api:info"&gt;/api:info&lt;/a&gt; &lt;/p&gt;

























&lt;p&gt;&lt;a&gt;api:push/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:call"&gt;/api:call&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;





&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;





&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;





&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#update-column-definitions"&gt;
  &lt;/a&gt;
  Update Column Definitions
&lt;/h2&gt;

&lt;p&gt;If we are going to implement write functionality, we need to modify the schema to allow write permissions to the appropriate columns. Before we update a column definition for the Profile, let's examine a single column definition and discuss the different attributes. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#id-column-definition"&gt;
  &lt;/a&gt;
  Id Column Definition
&lt;/h2&gt;



&lt;h2&gt;
  &lt;a href="#column-definition-attributes"&gt;
  &lt;/a&gt;
  Column Definition Attributes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;name: The name of the column in the SQL interface for the API endpoint &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xs:type: The data type associated with the column (e.g.: string, datetime, int, etc.) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;readonly: Whether the column allows writes (by default, this is always true) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;key: Whether a column is intended to be a unique identifier for the elements in a table/view &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;other:xPath: The path (exact or relative to theRepeatElement) in the API response to the column value &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can see from the schema file that most of the columns (which correspond to various API fields) are flagged as read-only. The first edit we need to make is to change those columns so the API Driver can write to them (based on the API specification) by removing the read-only flags: &lt;/p&gt;

&lt;p&gt;... &lt;/p&gt;





















&lt;p&gt;... &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-insert-functionality"&gt;
  &lt;/a&gt;
  Add INSERT Functionality
&lt;/h2&gt;

&lt;p&gt;In this section, we walk through modifying the Schema file to support INSERT statements like the following: &lt;/p&gt;

&lt;p&gt;INSERT INTO Meetings &lt;/p&gt;

&lt;p&gt;(Topic,Type,StartTime,Duration,TimeZone,UserId) &lt;/p&gt;

&lt;p&gt;VALUES &lt;/p&gt;

&lt;p&gt;('Test Meeting',2,'2019-12-31T00:00:00',60,'EST','&lt;a href="mailto:user@domain.com"&gt;user@domain.com&lt;/a&gt;') &lt;/p&gt;

&lt;p&gt;NOTE: Topic, Type, StartTime, Duration, and TimeZone are all columns in our schema. The UserId attr is a pseudocolumn, which behaves like a table column but is not actually stored in the table. In this case, the UserId is used to POST the new meeting to a specific user account. &lt;/p&gt;

&lt;p&gt;In the schema file, the SELECT functionality is implemented in the  element: &lt;/p&gt;







&lt;p&gt;&lt;a&gt;api:push/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:call"&gt;/api:call&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;To implement INSERT functionality, we need to modify the  element, setting the method attribute value to "POST", setting the input values in a data attribute and calling the appropriate operation (apisadoExecuteJSONGet in this case). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-the-method-attribute"&gt;
  &lt;/a&gt;
  Setting the method Attribute
&lt;/h3&gt;





&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-the-data-attribute"&gt;
  &lt;/a&gt;
  Setting the data Attribute
&lt;/h3&gt;

&lt;p&gt;The Zoom Meetings API endpoint allows you to create a new meeting by submitting a JSON object with various fields for the new meeting. Values from an INSERT statement are mapped to corresponding fields in an _input object and are used to create the data attribute, which will be POSTed to the Zoom API. &lt;/p&gt;



&lt;p&gt;{ &lt;/p&gt;

&lt;p&gt;"topic": "[_input.Topic]", &lt;/p&gt;

&lt;p&gt;"type": [_input.Type], &lt;/p&gt;

&lt;p&gt;"start_time": "[_input.StartTime]", &lt;/p&gt;

&lt;p&gt;"duration": "[_input.Duration]", &lt;/p&gt;

&lt;p&gt;"timezone": "[_input.TimeZone]" &lt;/p&gt;

&lt;p&gt;} &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:set"&gt;/api:set&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#calling-the-apisadoexecutejsonget-operation"&gt;
  &lt;/a&gt;
  Calling the apisadoExecuteJSONGet Operation
&lt;/h3&gt;

&lt;p&gt;Once the data attribute is set, call the apisadoExecuteJSONGet operation using an api:call keyword and push the operation to the API Driver with an api:push keyword. &lt;/p&gt;



&lt;p&gt;... &lt;/p&gt;



&lt;p&gt;&lt;a&gt;api:push&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:push"&gt;/api:push&lt;/a&gt;&lt;a href="/api:call"&gt;/api:call&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="/api:script"&gt;/api:script&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-edited-profile"&gt;
  &lt;/a&gt;
  Using the Edited Profile
&lt;/h2&gt;

&lt;p&gt;With the edits made to the schema file, you are ready to start INSERTing Meetings to a Zoom account. Save the schema file, recompress (zip) the schema files, and change the extension of the compressed file to .apip. Use an application that supports standard connectivity to connect to the API Profile using the API Driver, then submit your INSERT statement. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#insert-statement"&gt;
  &lt;/a&gt;
  INSERT Statement
&lt;/h1&gt;

&lt;p&gt;INSERT INTO Meetings &lt;/p&gt;

&lt;p&gt;(Topic,Type,StartTime,Duration,TimeZone,UserId) &lt;/p&gt;

&lt;p&gt;VALUES &lt;/p&gt;

&lt;p&gt;('Test Meeting (Edited Profile)',2,'2019-12-31T00:00:00',60,'EST','&lt;a href="mailto:user@domain.com"&gt;user@domain.com&lt;/a&gt;') &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#meeting-in-zoom"&gt;
  &lt;/a&gt;
  Meeting in Zoom
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oKdAq0iS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpmk4l5de7ss46ftb1wa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oKdAq0iS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpmk4l5de7ss46ftb1wa.png" alt="Image description" width="725" height="762"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#more-information"&gt;
  &lt;/a&gt;
  More Information
&lt;/h1&gt;

&lt;p&gt;The CData API Drivers simplify data connectivity for a wide range of popular data tools. Connect BI, Reporting, &amp;amp; ETL tools to live data from any application, database, or Web API. Built on the same robust SQL engine that powers other CData Drivers, the &lt;a href="https://www.cdata.com/apidriver/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=editing-api-driver-api-profiles"&gt;CData API Driver&lt;/a&gt; enables simple codeless query access to APIs through a single client interface. &lt;/p&gt;

</description>
      <category>automation</category>
      <category>connectivity</category>
      <category>database</category>
      <category>integration</category>
    </item>
  </channel>
</rss>
