<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>40+ JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS [Beginners-Advance]</title>
      <author>John</author>
      <pubDate>Sun, 31 Oct 2021 16:05:30 +0000</pubDate>
      <link>https://dev.to/jdj/40-javascript-projects-for-beginners-easy-ideas-to-get-started-coding-js-beginners-advance-d2k</link>
      <guid>https://dev.to/jdj/40-javascript-projects-for-beginners-easy-ideas-to-get-started-coding-js-beginners-advance-d2k</guid>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;The best way to learn a new programming language is to build projects.

I have created a list of 40 beginner friendly project tutorials in Vanilla JavaScript, React, and TypeScript.

My advice for tutorials would be to watch the video, build the project, break it apart and rebuild it your own way. Experiment with adding new features or using different methods.

That will test if you have really learned the concepts or not.

You can click on any of the projects listed below to jump to that section of the article.

&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/40-javascript-projects-for-beginners/&amp;amp;ved=2ahUKEwiB9tj0rPjyAhUMX30KHZQ5CG0QFnoECAgQAQ&amp;amp;usg=AOvVaw26RDQjHugdhbATVS83LI83"&gt;40 JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS

&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>A guide to getting out of a rut when you are working alone</title>
      <author>Siddharth Kanungo (primerlabs.io)</author>
      <pubDate>Sun, 31 Oct 2021 15:15:39 +0000</pubDate>
      <link>https://dev.to/primerlabs/a-guide-to-getting-out-of-a-rut-when-you-are-working-alone-44l7</link>
      <guid>https://dev.to/primerlabs/a-guide-to-getting-out-of-a-rut-when-you-are-working-alone-44l7</guid>
      <description>&lt;p&gt;For a while, I had been in a rut. If you don't know what rut means, here is the dictionary definition for you. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;a habit or pattern of behavior that has become dull and unproductive but is hard to change&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have been working alone on a project for so long, and the rest of my life took a hit. I didn't enjoy anything else. I would bail out when my friends call. I didn't like the foods I used to like earlier, and I didn't feel like doing anything for a while.&lt;/p&gt;

&lt;p&gt;Gradually, even my passion project,  &lt;a href="https://primerlabs.io"&gt;Primer&lt;/a&gt; , seemed a bit too much for me. I didn't enjoy working on it anymore. Seemed like another "job" to me. That's when I knew I was in a rut. Something needed to change. The following is what I did to recover from the rut and I am writing this guide in the hopes that it will help you get out of it too. &lt;/p&gt;

&lt;p&gt;Here's the tl;dr version&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Find what you love and schedule it&lt;/li&gt;
&lt;li&gt;Measure your productivity&lt;/li&gt;
&lt;li&gt;Go to sleep at the same time and try to wake up at the same time&lt;/li&gt;
&lt;li&gt;Exercise  (Show up at the gym, everyday)&lt;/li&gt;
&lt;li&gt;Make plans with friends&lt;/li&gt;
&lt;li&gt;Plan a vacation that you look forward to&lt;/li&gt;
&lt;li&gt;Listen to classical music&lt;/li&gt;
&lt;li&gt;Write Night Reviews&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#find-what-you-love-and-schedule-it"&gt;
  &lt;/a&gt;
  Find What you love and schedule it
&lt;/h2&gt;

&lt;p&gt;I have a keyboard, a guitar, and a ukelele and have never got around to actually learning any of them. The first thing I did to get out of the rut was to pick up a hobby. My hobby always had been programming and reading about the latest computer science advancement. While other people browsed too much Facebook or Instagram, I found myself checking out Hacker News or Less Wrong, sometimes multiple times a day.  I am also a movie buff, so I would look out for Screenplay breakdowns often. &lt;/p&gt;

&lt;p&gt;I decided it's time to change hobbies now. &lt;/p&gt;

&lt;p&gt;I started learning the uke and surprisingly it's fun. Maybe next year, I will graduate to learning guitar as well. For now, the ukulele is a good thing to learn. The best thing about the ukulele is that you start seeing progress soon enough. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When you start getting good at something, you start enjoying it more. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I think I read this in the book,  &lt;a href="https://www.goodreads.com/en/book/show/95708.The_Now_Habit"&gt;The Now Habit&lt;/a&gt;, which recommends making room for play in your schedule. I scheduled one hour daily for uke and have been enjoying it for a while now. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Find what you love and let it kill you schedule it in your calendar. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ImxL3lXe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635692740664/gGUb2D3Qz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ImxL3lXe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635692740664/gGUb2D3Qz.png" alt="image (2).png" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#measure-your-productivity"&gt;
  &lt;/a&gt;
  Measure your productivity
&lt;/h2&gt;

&lt;p&gt;The second thing to get out of the rut is to measure your productivity. I work in terms of Pomodoro. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;One Pomodoro = 30 minutes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In my calendar, you can see I have three Deep work sessions. In which I target to do roughly 15 pomodoros. Each day is different and getting yourself to work is one of the most difficult things to do.  And it never gets easier either. But, it is a good system to have.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P2tL5YAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635692784810/Q_INkFIlZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P2tL5YAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635692784810/Q_INkFIlZ.png" alt="image-2.png" width="426" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another metric I have is words written. My work at  &lt;a href="https://primerlabs.io"&gt;Primerlabs&lt;/a&gt; \is mostly writing self-paced computer science courses. The platform is developed and I am not keen to code much features anymore. So, I track how many words I have written. I write using  &lt;a href="https://typora.io"&gt;Typora&lt;/a&gt; , without the internet. It helps me focus. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--gcrZ40-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1111657547558080512/AZgXDvFx_normal.jpg" alt="Siddharth Kanungo (primerlabs.io) profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Siddharth Kanungo (primerlabs.io)
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @_wzard
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I have used Evernote, Workflowy, Roam, Obsidian, and Mem as well. &lt;br&gt;&lt;br&gt;But when I write, (which is most of the time nowadays), I use &lt;a href="https://twitter.com/Typora"&gt;@Typora&lt;/a&gt;  &lt;br&gt;&lt;br&gt;Typora is delightful and simple.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:12 PM - 26 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1442130011062816773" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1442130011062816773" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1442130011062816773" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I rewrite a lot because of my perfectionism. My perfectionism also took me three years to build the course platform. So, that's also something I am dealing with. &lt;/p&gt;

&lt;p&gt;I try to keep it simple with just two metrics. It's a less number to keep track of. There are other few columns in the excel sheets: &lt;strong&gt;note/reason for not meeting the targets&lt;/strong&gt;, which I have hidden. Because frankly, it's embarrassing.   &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Keep few metric and log them religiously. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, use work mode/ DND mode on your phone to help you focus.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#go-to-sleep-at-the-same-time-and-try-to-wake-up-at-the-same-time"&gt;
  &lt;/a&gt;
  Go to sleep at the same time and try to wake up at the same time
&lt;/h2&gt;

&lt;p&gt;I cannot stress the importance of this enough. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Go to sleep at the same time. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For me, I go to bed at 10 and my wind-down begins at 9:30. That's when I put on my headphones and do my Night review, which I will discuss later in the post. I also have a premium "meditation" app subscription. I won't name it, because I am not happy with it. But it is really easy to guess. &lt;/p&gt;

&lt;p&gt;Wind down is a feature in iPhone and it has useful automation built-in. Whenever the wind-down begins, it automatically prompts me to do a few actions, such as reminding me to close my laptop, dim the lights, start winding down on the "meditation" app and start night review. &lt;/p&gt;

&lt;p&gt;Getting 8 hours is difficult for me as I have difficulty sleeping. But I consistently try to go to bed at 10 PM nonetheless. Overall, I am finding it easier to sleep frequently than before and my mood is better the next day. &lt;/p&gt;

&lt;p&gt;Waking up early is difficult, but I have days when I woke up without an alarm. So, I am definitely making progress. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exercise-show-up-at-the-gym-"&gt;
  &lt;/a&gt;
  Exercise ( Show up at the Gym )
&lt;/h2&gt;

&lt;p&gt;Exercise has helped me a lot to get out of the rut. I got a yearly membership at a cheaper price at a local gym and my goal has been to show up at the gym. Moving my goal from doing exercises ( which my trainer kind of forces to me go on hard mode ), I try this mini-goal of showing up in the gym. &lt;/p&gt;

&lt;p&gt;Sometimes, I think, I can always just run on the treadmill and cycle and then bail out. &lt;/p&gt;

&lt;p&gt;However, after a run, I automatically feel to work out. So, if you are just starting out, I recommend, making a goal to just show up. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Just show up at the gym everyday&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#make-plans-with-friends"&gt;
  &lt;/a&gt;
  Make plans with friends
&lt;/h2&gt;

&lt;p&gt;When you are in a rut, it's natural for introverts to avoid people like plague (or pandemic).  But making plans with friends is a good way to destress for people who usually work alone ( digital nomads, freelancers, solo founders, etc). It's easy to become self-centered and keep on postponing your social debt to your friends. However, what many people forget is that it's a debt that you must pay for your own sanity. &lt;/p&gt;

&lt;p&gt;This pandemic made me realize that I don't really like to be alone. And it's really awkward when you are in need and you want to suddenly ask for favors from friends out of blue. So, make plans, even if all your friends are lazy ass introverts. Take initiatives and make plans. It is worth it. &lt;/p&gt;

&lt;p&gt;One of the things, online gaming does is help reconnect with friends. I have been playing chess with friends more often. And sometimes, call of duty on mobile as well. It's a great way to spend time with friends with whom you cannot meet directly due to distance.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#plan-a-vacation-that-you-look-forward-to"&gt;
  &lt;/a&gt;
  Plan a vacation that you look forward to
&lt;/h2&gt;

&lt;p&gt;When you are working alone, you might wait for the next big goal to hit, when you will finally enjoy some time off. At least, it was for me, I would think, I cannot take a vacation until I get &lt;strong&gt;XYZ&lt;/strong&gt; done. But when you plan a vacation and book your tickets ( which are at a low cost ), you can plan for months ahead. Your targets are well-defined in the time frame. I have had difficulty planning and organizing my life, because of the mess of working alone. But planning a vacation helps a lot in helping you prioritize what you actually need to do. &lt;/p&gt;

&lt;p&gt;Say, your vacation is four months from now, you can make a list of things you need to in four months. And then work your way backward, for monthly goals and weekly goals and stuff.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Plan a vacation and backtrack your work schedule&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#listen-to-classical-music"&gt;
  &lt;/a&gt;
  Listen to classical music
&lt;/h2&gt;

&lt;p&gt;It might not work for everyone, but I listen to classical music while I work. I used to be a fan of lo-fi and trance music combined with famous OSTs from Interstellar, Social Network, etc. But I now listen mostly to classical music. &lt;/p&gt;

&lt;p&gt;I have read that classical music helps in focusing, but for me, I have really started appreciating the music. It also helps when you learn a bit about classical music. I can highly recommend  &lt;a href="https://www.coursera.org/learn/introclassicalmusic"&gt;this course&lt;/a&gt;  from Coursera. &lt;/p&gt;

&lt;p&gt;I listen to a mix of western and Indian classical music. I listen to Indian Classical music at   &lt;a href="https://www.ragya.com/"&gt;Ragya&lt;/a&gt;  which is plays music depending on the time of the day. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#write-night-reviews"&gt;
  &lt;/a&gt;
  Write Night Reviews
&lt;/h2&gt;

&lt;p&gt;Writing night reviews consist of the following things for me:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Going through what I did throughout the day and what I could have done better&lt;/li&gt;
&lt;li&gt;Logging my metrics.&lt;/li&gt;
&lt;li&gt;Plan for the next day and some targets to meet. &lt;/li&gt;
&lt;li&gt;Write what you are grateful for&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Doing night reviews has been a great way to let go of the worries of the day and prepare for the next day.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Review your day, daily&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#closing-note"&gt;
  &lt;/a&gt;
  Closing Note
&lt;/h2&gt;

&lt;p&gt;This is my second month, doing this and I already feel that I am out of the rut. You will start seeing good changes in your mood in two weeks or so. So, stick to that. If you found this write-up useful, you can connect with me on  &lt;a href="https://twitter.com/_wzard"&gt;Twitter&lt;/a&gt; . And if you are interested to know what I am working on, you can check out this  &lt;a href="https://primerlabs.io/comics/introducing-primer-comics/"&gt;comic-based blog&lt;/a&gt;  post to understand more. &lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Useful Shortcut Keys for VSCode</title>
      <author>Danish Saleem</author>
      <pubDate>Sun, 31 Oct 2021 15:05:30 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/useful-shortcut-keys-for-vscode-387n</link>
      <guid>https://dev.to/mrdanishsaleem/useful-shortcut-keys-for-vscode-387n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#basic-editing"&gt;
  &lt;/a&gt;
  Basic Editing
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Ctrl + X                    // Cut line
Ctrl + C                    // Copy line
Alt + ⬆ or ↓                // Move line up / down
Shift + Alt + ⬆ or ↓        // Copy line up / down
Ctrl + Shfit + K            // Delete line
Enter                       // Insert line below
Ctrl + Shift + Enter        // Intsert line above
Ctrl + F                    // Find
Ctrl + H                    // Replace
Ctrl + /                    // Toggle line comment
Shift + Alt + A             // Toggle block comment
Alt + Z                     // Select Multiple line individually
Tab                         // Indent line
Shift + Tab                 // Indent back the line
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#navigation"&gt;
  &lt;/a&gt;
  Navigation
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Ctrl + Shift + `            // Open New Terminal
Ctrl + Shift + M            // Open Problem Panel
Ctrl + P                    // Go to File

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#file-management"&gt;
  &lt;/a&gt;
  File Management
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Ctrl + N                    // New file
Ctrl + O                    // Open file
Ctrl + S                    // Save
Ctrl + Shfit + S            // Save As
Ctrl + Shfit + T            // Reopen closed file
Ctrl + Tab                  // Open next file
Ctrl + Shfit + Tab          // Open previous file
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#display"&gt;
  &lt;/a&gt;
  Display
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Ctrl + / -                  // Zoom in / out
Ctrl + B                    // Show sidebar visibility
Ctrl + Shfit + F            // Show Search
Ctrl + Shfit + X            // Show Extension
Ctrl + Shfit + D            // Show Debug
Ctrl + Shfit + U            // Show Output Panel
Ctrl + Shfit + G            // Show Source Control
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Did you find it help? Let me know your thoughts in the comments below!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect!
&lt;/h2&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/mrdanishsaleem/"&gt;LinkedIn&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IrvJezlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0ikih5nlsqs0oops11e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IrvJezlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0ikih5nlsqs0oops11e.png" alt="Buy Me a Coffee" width="880" height="193"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>productivity</category>
      <category>codenewbie</category>
      <category>tooling</category>
    </item>
    <item>
      <title>Divtober Day 30: Contrast</title>
      <author>Alvaro Montoro</author>
      <pubDate>Sun, 31 Oct 2021 14:58:33 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/divtober-day-30-contrast-23em</link>
      <guid>https://dev.to/alvaromontoro/divtober-day-30-contrast-23em</guid>
      <description>&lt;p&gt;Again, I forgot to publish this yesterday, when the word was "Contrast." I did two drawings:&lt;/p&gt;

&lt;p&gt;The first one was a basic "logo" showing the word "contrast" with the contrast symbol (kind of):&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alvaromontoro/embed/MWvvMpy?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The second one was an animated drawing showing the contrast between the summer and winter season on the same landscape (slide right and left to see the changes):&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alvaromontoro/embed/VwzMvzx?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Unfortunately, this last one won't work for Firefox users, who will only see the static winter landscape and won't be able to interact with it.&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>divtober</category>
      <category>css</category>
      <category>art</category>
    </item>
    <item>
      <title>✉️Application for collecting data from the Telegram (part 2: Chat participants)👾</title>
      <author>Vadim Kolobanov</author>
      <pubDate>Sun, 31 Oct 2021 14:54:41 +0000</pubDate>
      <link>https://dev.to/vadimkolobanov/application-for-collecting-data-from-the-telegram-part-2-chat-participants-3b7e</link>
      <guid>https://dev.to/vadimkolobanov/application-for-collecting-data-from-the-telegram-part-2-chat-participants-3b7e</guid>
      <description>&lt;p&gt;Hello everyone In the second part, we will continue to collect chat data from the "secure and twice encrypted" Telegram server.&lt;/p&gt;

&lt;p&gt;Before reading the article, I strongly recommend &lt;a href="https://dev.to/vadimkolobanov/telegram-parsing-part-1-setup-and-first-launch-1j2m"&gt;reading the first part&lt;/a&gt;. In it, we created a Telegram developer account and set up our project.&lt;/p&gt;

&lt;p&gt;Now our project is just one ".py" file, settings and session file.&lt;br&gt;
As one well- known wisdom says:&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;A chain is only as strong as its weakest link.&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;Therefore, we will make a beautiful strong project&lt;/p&gt;

&lt;p&gt;In this part, we will get a list of users from the telegram chat and see, what information about its participants telegram will give us if we are not the chat administrator, but went there as a regular user.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#go-to-pycharm-my-friends"&gt;
  &lt;/a&gt;
  Go to PyCharm my friends
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;In order not to get confused in our code in the future, we will create several files in the project directory:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Users.py&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;links.txt&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We will write all our code in this chapter in a separate file Users.py . This will greatly simplify our work in the future.&lt;/p&gt;

&lt;p&gt;Let's import this file into our main project, which we wrote in the first part (&lt;em&gt;At the end of the article I will post the code from both parts so don't worry&lt;/em&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;Users&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In addition, for further work with chat users, we will need a couple more imports from our Telethon library.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;telethon.tl.functions.channels&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GetParticipantsRequest&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;telethon.tl.types&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ChannelParticipantsSearch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For clarity and convenience, let's install the &lt;strong&gt;tqdm&lt;/strong&gt; library in our project. It will allow us to create in our console a beautiful readable Progress Bar ( a graphical strip of the progress of our unloading )&lt;/p&gt;

&lt;p&gt;Writing the &lt;strong&gt;pip install tqdm&lt;/strong&gt; command&lt;/p&gt;

&lt;p&gt;Importing the library class into our project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tqdm&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tqdm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All imports in main file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;configparser&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;telethon&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TelegramClient&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;Users&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;telethon.tl.functions.channels&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GetParticipantsRequest&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;telethon.tl.types&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ChannelParticipantsSearch&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tqdm&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tqdm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We still have a file that we don't understand &lt;strong&gt;links.txt&lt;/strong&gt; , which you and I will use as a list of our links to chats from which we will parse data, but we will talk about this a little further.&lt;/p&gt;

&lt;p&gt;In our file Users.py let's create an async function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dump_all_participants&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;ChannelParticipantsSearch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;GetParticipantsRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;tqdm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;channel&lt;/strong&gt;— this will be our telegram chat which we will pass to our function&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ChannelParticipantsSearch&lt;/strong&gt; and &lt;strong&gt;GetParticipantsRequest&lt;/strong&gt; are our imports that we did above, they are the same classes of the Telethon library that we will need in our function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tqdm&lt;/strong&gt; is our library for progress bar&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;client&lt;/strong&gt; is our connection that we created in the first part. No way without it)&lt;/p&gt;

&lt;p&gt;Now let's set up reading chat links from our file links.txt&lt;/p&gt;

&lt;p&gt;In our main file &lt;strong&gt;Update.py&lt;/strong&gt; inside the main function from the last part, we will write this code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"links.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;
                &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_entity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump_all_participants&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ChannelParticipantsSearch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                  &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GetParticipantsRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tqdm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, immediately after reading the file, we will call our &lt;strong&gt;dump_all_participants&lt;/strong&gt; function from the file Users.py by passing our arguments to it.&lt;/p&gt;

&lt;p&gt;Moving on....&lt;/p&gt;

&lt;p&gt;Go to the file &lt;strong&gt;Users.py&lt;/strong&gt; where we created our &lt;strong&gt;dump_all_participants&lt;/strong&gt; function and we will write the initial settings for the Telethon library.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dump_all_participants&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;ChannelParticipantsSearch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;GetParticipantsRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;tqdm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Get info from channel'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;OFFSET_USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="c1"&gt;#start user position
&lt;/span&gt;    &lt;span class="n"&gt;LIMIT_USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;  &lt;span class="c1"&gt;#the maximum number of records transmitted 
&lt;/span&gt;                      &lt;span class="c1"&gt;#at a time, but not more than 200
&lt;/span&gt;    &lt;span class="n"&gt;ALL_PARTICIPANTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;  
    &lt;span class="n"&gt;FILTER_USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ChannelParticipantsSearch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#filter user
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's create an infinite while loop:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Within our cycle, the magic itself begins.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;participants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetParticipantsRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="n"&gt;FILTER_USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OFFSET_USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LIMIT_USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
&lt;span class="n"&gt;ALL_PARTICIPANTS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;OFFSET_USER&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We turned to telegram, and with the help of its class and our constants, we sent a request to get a list of users of the chat we are interested in, which is stored in the channel variable.&lt;/p&gt;

&lt;p&gt;As a result, in the participants variable we will get a list of objects that contain information about each user.&lt;/p&gt;

&lt;p&gt;For clarity, we will prescribe in advance the recording of the received information in a text file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"w"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Be sure to specify the encoding to avoid problems with nicknames containing characters.&lt;/p&gt;

&lt;p&gt;Now let's iterate through our users in a loop but using our tqdm library&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;participant&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tqdm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ALL_PARTICIPANTS&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
           &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writelines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" ID: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;participant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; "&lt;/span&gt;
                           &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" First_Name:&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;participant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
                           &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" Last_Name: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;participant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
                           &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" Username: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;participant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
                           &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" Phone: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;participant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phone&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
                           &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" Channel: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'The end!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the result on the example of the first found chat about Python:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JBhwV7jY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c93slbdcode38uemk5n9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JBhwV7jY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c93slbdcode38uemk5n9.png" alt="Example" width="880" height="460"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the root of our program, we have a file {channel name}.txt which contains information about users&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ujQL4Kqd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6g2pfiuqh0qpfs63x2e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ujQL4Kqd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6g2pfiuqh0qpfs63x2e.png" alt="Users" width="880" height="478"&gt;&lt;/a&gt;&lt;br&gt;
To run our parsing, in a file &lt;strong&gt;links.txt&lt;/strong&gt; you need to insert a link to a chat or group. You can find this link in the chat description.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EEAIoCkV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v1vuqev0avyp9etuxxns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EEAIoCkV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v1vuqev0avyp9etuxxns.png" alt="Links" width="880" height="372"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Important! You will not be able to parse the channel because you are not its administrator. To parse a chat or a group, you need to be subscribed to them.)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There can be many links to chats. It is important to write them from a new line.&lt;/p&gt;

&lt;p&gt;Perfectly! We just downloaded the list of chat users. We found out their unique identifiers (IDs), which will help us in the future to find messages of a certain user in this (or in any other chat). We will talk about unloading messages from the chat in part 3.&lt;/p&gt;

&lt;p&gt;Thank you all for your attention! Write about your impressions in the comments.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By tradition, the full code.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;strong&gt;File Update.py&lt;/strong&gt;&lt;/p&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;configparser&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;telethon&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TelegramClient&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;Users&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;telethon.tl.functions.channels&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GetParticipantsRequest&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;telethon.tl.types&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ChannelParticipantsSearch&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tqdm&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tqdm&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configparser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"config.ini"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;api_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Telegram'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'api_id'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;api_hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Telegram'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'api_hash'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Telegram'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TelegramClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;api_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;api_hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"links.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;
                &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_entity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump_all_participants&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="n"&gt;ChannelParticipantsSearch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="n"&gt;GetParticipantsRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tqdm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_until_complete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;File Users.py&lt;/strong&gt;&lt;/p&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dump_all_participants&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                                &lt;span class="n"&gt;ChannelParticipantsSearch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;GetParticipantsRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tqdm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Get info from channel'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;OFFSET_USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  
    &lt;span class="n"&gt;LIMIT_USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt; 
    &lt;span class="n"&gt;ALL_PARTICIPANTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;  
    &lt;span class="n"&gt;FILTER_USER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ChannelParticipantsSearch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="n"&gt;participants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetParticipantsRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;FILTER_USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OFFSET_USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LIMIT_USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="n"&gt;ALL_PARTICIPANTS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;OFFSET_USER&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"w"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                                                         &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;participant&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tqdm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ALL_PARTICIPANTS&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writelines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" ID: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;participant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; "&lt;/span&gt;
                          &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" First_Name:&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;participant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
                          &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" Last_Name: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;participant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
                          &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" Username: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;participant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
                          &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" Phone: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;participant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;phone&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
                          &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" Channel: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
                    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'The end!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#i-wish-you-success"&gt;
  &lt;/a&gt;
  I wish you success!
&lt;/h3&gt;

</description>
      <category>telegram</category>
      <category>python</category>
      <category>beginners</category>
      <category>scrap</category>
    </item>
    <item>
      <title>Terra Network SmartContract Migration</title>
      <author>Rungsikorn Rungsikavanich</author>
      <pubDate>Sun, 31 Oct 2021 14:50:45 +0000</pubDate>
      <link>https://dev.to/zapkub/terra-network-smartcontract-migration-4i56</link>
      <guid>https://dev.to/zapkub/terra-network-smartcontract-migration-4i56</guid>
      <description>&lt;p&gt;Terra network มีอัพเดทครั้งใหญ่ เพื่อเพิ่มประสิทธิภาพของ Network แต่ในบทความนี้ ผมจะไม่พูดเรื่อง Network แต่จะไป focus เรื่อง Smart Contract แทน โดยถ้าอยากรู้ว่ามีอะไรเปลี่ยนไปบ้าง ลองดูได้ลิ้งนี้แทน&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/terra-money/columbus-5-launches-welcome-to-the-future-of-terra-8a9ebfa570c5"&gt;https://medium.com/terra-money/columbus-5-launches-welcome-to-the-future-of-terra-8a9ebfa570c5&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;หนึ่งในการอัพเดทคือการ Bump cosmwasm ไปเป็น version 0.16 ( ซึ่ง breaking change กระจาย ) เรามาดูกันว่า เราต้องเปลี่ยนอะไรบ้างจาก contract version เดิม ( 0.10 ) &lt;/p&gt;

&lt;p&gt;นอกจากนี้ feature ที่เพิ่มมาก็เยอะมาก เพราะมัน upgrade กันข้ามมา 6 version ถ้าต้องการไล่อ่าน ตามไปที่ &lt;a href="https://github.com/CosmWasm/cosmwasm/blob/main/CHANGELOG.md"&gt;https://github.com/CosmWasm/cosmwasm/blob/main/CHANGELOG.md&lt;/a&gt; ได้เลย&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OtJyUto8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ex4435aqwh78d0niwzka.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OtJyUto8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ex4435aqwh78d0niwzka.png" alt="image" width="880" height="435"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ของ Avareum protocol พังไป 240 errors 😱&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#%E0%B8%A1%E0%B8%B5%E0%B8%AD%E0%B8%B0%E0%B9%84%E0%B8%A3%E0%B9%80%E0%B8%9B%E0%B8%A5%E0%B8%B5%E0%B9%88%E0%B8%A2%E0%B8%99%E0%B9%84%E0%B8%9B%E0%B8%9A%E0%B9%89%E0%B8%B2%E0%B8%87"&gt;
  &lt;/a&gt;
  มีอะไรเปลี่ยนไปบ้าง?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;API มีความกระชับขึ้น Type ต่างๆ Generic ต่างๆใช้ง่ายขึ้น&lt;/li&gt;
&lt;li&gt;Support การทำ Migration ผ่าน Contract ได้แล้ว&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;โดยบทความนี้จะยกเอาแค่ Major change หลักๆ ที่ทีม Avareum ต้อง Migrate ซึ่งทางทีมก็ยังใช้ Feature ของมันไม่หมด (เยอะเกิน)&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#support-onchain-contract-migration"&gt;
  &lt;/a&gt;
  Support On-chain Contract Migration
&lt;/h2&gt;

&lt;p&gt;อันนี้คือที่รอคอยมานาน ซึ่งพึ่งมาเพิ่มใน coswasm 0.14 ทำให้ Contract สามารถ Migrate กันเองได้แบบ On-chain &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OCBEOGM5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lwugxnyhc8up2xadehxo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OCBEOGM5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lwugxnyhc8up2xadehxo.png" alt="Image description" width="880" height="50"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;โดยที่ก่อนหน้านี้ จะจำกัดเรื่องการ migrate contract สามารถทำได้โดยผ่าน Off Chain API อย่างเดียว ทำให้ต้องเป็นหน้าที่ของ Owner ของ Contract เท่านั้นที่สามารถ Migrate ได้และหากมีหลาย Contract ก็ต้องทำทีละอันจาก Off chain&lt;/p&gt;

&lt;p&gt;จาก Feature นี้ทำให้เราสามารถ Deploy contract set ที่มี Logic ในการ ทำ Migration ออกมาและสั่ง Migrate ที่เดียวจาก Off chain จาก Entrypoint ที่เดียว&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="nd"&gt;#[cfg_attr(not(feature&lt;/span&gt; &lt;span class="nd"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"library"&lt;/span&gt;&lt;span class="nd"&gt;),&lt;/span&gt; &lt;span class="nd"&gt;entry_point)]&lt;/span&gt;
&lt;span class="k"&gt;pub&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;migrate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DepsMut&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;_&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MigrateMsg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ContractError&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;cfg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;query_config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;deps&lt;/span&gt;&lt;span class="nf"&gt;.as_ref&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nf"&gt;.add_messages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="nn"&gt;CosmosMsg&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;Wasm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;WasmMsg&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Migrate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;contract_addr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cfg&lt;/span&gt;&lt;span class="py"&gt;.executor_mirror_address&lt;/span&gt;&lt;span class="nf"&gt;.into&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="n"&gt;new_code_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="py"&gt;.sub_contract.executor_mirror_code_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;to_binary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="py"&gt;.sub_contract.executor_mirror_migrate_msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}),&lt;/span&gt;
        &lt;span class="nn"&gt;CosmosMsg&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;Wasm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;WasmMsg&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Migrate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;contract_addr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cfg&lt;/span&gt;&lt;span class="py"&gt;.executor_anchor_address&lt;/span&gt;&lt;span class="nf"&gt;.into&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="n"&gt;new_code_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="py"&gt;.sub_contract.executor_anchor_code_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;to_binary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="py"&gt;.sub_contract.executor_anchor_migrate_msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}),&lt;/span&gt;
        &lt;span class="nn"&gt;CosmosMsg&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;Wasm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;WasmMsg&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Migrate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;contract_addr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cfg&lt;/span&gt;&lt;span class="py"&gt;.executor_terraswap_address&lt;/span&gt;&lt;span class="nf"&gt;.into&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="n"&gt;new_code_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="py"&gt;.sub_contract.executor_terraswap_code_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;to_binary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="py"&gt;.sub_contract.executor_terraswap_migrate_msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#%E0%B8%A7%E0%B8%B4%E0%B8%98%E0%B8%B5-binding-entrypoint-%E0%B9%80%E0%B8%9B%E0%B8%A5%E0%B8%B5%E0%B9%88%E0%B8%A2%E0%B8%99%E0%B9%83%E0%B8%AB%E0%B8%A1%E0%B9%88"&gt;
  &lt;/a&gt;
  วิธี binding Entrypoint เปลี่ยนใหม่
&lt;/h3&gt;

&lt;p&gt;จากปกติก่อนหน้านี้ การกำหนด entrypoint ทั้งหมดจะอยู่ที่ &lt;code&gt;lib.rs&lt;/code&gt; ให้ลบตรงนั้นทิ้งออกให้หมดแล้วไปใช้ macro กับ function ชื่อ &lt;code&gt;entry_point&lt;/code&gt; แทน&lt;br&gt;
พร้อมกับ เปลี่ยนชื่อ &lt;code&gt;init&lt;/code&gt; เป็น &lt;code&gt;instantiate&lt;/code&gt; และ &lt;code&gt;handle&lt;/code&gt; เป็น &lt;code&gt;execute&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/CosmWasm/cosmwasm/blob/main/CHANGELOG.md#changed-6"&gt;https://github.com/CosmWasm/cosmwasm/blob/main/CHANGELOG.md#changed-6&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;
&lt;span class="nd"&gt;#[cfg_attr(not(feature&lt;/span&gt; &lt;span class="nd"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"library"&lt;/span&gt;&lt;span class="nd"&gt;),&lt;/span&gt; &lt;span class="nd"&gt;entry_point)]&lt;/span&gt;
&lt;span class="k"&gt;pub&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;instantiate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;deps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DepsMut&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;_&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;_&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MessageInfo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;InitMsg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ContractError&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;


&lt;span class="nd"&gt;#[cfg_attr(not(feature&lt;/span&gt; &lt;span class="nd"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"library"&lt;/span&gt;&lt;span class="nd"&gt;),&lt;/span&gt; &lt;span class="nd"&gt;entry_point)]&lt;/span&gt;
&lt;span class="k"&gt;pub&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;deps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DepsMut&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MessageInfo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ExecuteMsg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ContractError&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#extern-api-%E0%B9%80%E0%B8%9B%E0%B8%A5%E0%B8%B5%E0%B9%88%E0%B8%A2%E0%B8%99%E0%B9%80%E0%B8%9B%E0%B9%87%E0%B8%99-deps-%E0%B9%81%E0%B8%A5%E0%B8%B0-depsmut"&gt;
  &lt;/a&gt;
  Extern API เปลี่ยนเป็น Deps และ DepsMut
&lt;/h3&gt;

&lt;p&gt;จากการใช้งาน &lt;code&gt;Extern&lt;/code&gt; กับ Generic type ทาง cosmwasm ได้เปลี่ยนมาเป็น type alias ทำให้ ปกติที่ใช้ &lt;code&gt;Extern&lt;/code&gt; ให้เปลี่ยนเป็น &lt;code&gt;Deps&lt;/code&gt; และ &lt;code&gt;mut Extern&lt;/code&gt; เปลี่ยนเป็น &lt;code&gt;DepsMut&lt;/code&gt; &lt;br&gt;
&lt;a href="https://github.com/CosmWasm/cosmwasm/blob/main/MIGRATING.md#011---012"&gt;Reference&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#%E0%B8%95%E0%B8%B1%E0%B8%A7%E0%B8%AD%E0%B8%A2%E0%B9%88%E0%B8%B2%E0%B8%87"&gt;
  &lt;/a&gt;
  ตัวอย่าง
&lt;/h4&gt;

&lt;p&gt;จาก&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;pub&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Storage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Api&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Querier&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;deps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;Extern&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;_&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;InitMsg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;StdResult&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;InitResponse&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;เปลี่ยนเป็น&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;pub&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;deps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DepsMut&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;_&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;InitMsg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;StdResult&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;InitResponse&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;จากอันนี้ การ access funds ที่ส่งมาจะเปลี่ยนจาก access ที่ env ไปผ่านตัว info แทน&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#%E0%B9%80%E0%B8%9E%E0%B8%B4%E0%B9%88%E0%B8%A1-arguments-%E0%B9%83%E0%B8%AB%E0%B9%89%E0%B8%81%E0%B8%B1%E0%B8%9A-contract-entry-point-init-handle-migrate-"&gt;
  &lt;/a&gt;
  เพิ่ม Arguments ให้กับ Contract entry point ( init, handle, migrate )
&lt;/h3&gt;

&lt;p&gt;Type &lt;code&gt;Env&lt;/code&gt; ถูกนำเอา sender ออกและย้ายไปไว้ใน Type ชื่อ &lt;code&gt;MessageInfo&lt;/code&gt; เข้าใจว่าเพื่อให้เป็นระเบียบมากขึ้นเฉยๆ&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#%E0%B8%95%E0%B8%B1%E0%B8%A7%E0%B8%AD%E0%B8%A2%E0%B9%88%E0%B8%B2%E0%B8%87"&gt;
  &lt;/a&gt;
  ตัวอย่าง
&lt;/h4&gt;

&lt;p&gt;จาก&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;pub&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;deps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DepsMut&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HandleMsg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;StdResult&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;HandleResponse&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;.....&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;senderAddr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="py"&gt;.message.sender&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;เปลี่ยนเป็น&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;pub&lt;/span&gt; &lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;deps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DepsMut&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MessageInfo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HandleMsg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;StdResult&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;HandleResponse&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;.....&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;senderAddr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="py"&gt;.sender&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#migrate-response-handleresponse-initresponse-%E0%B8%81%E0%B8%A5%E0%B8%B2%E0%B8%A2%E0%B9%80%E0%B8%9B%E0%B9%87%E0%B8%99-response-%E0%B9%80%E0%B8%89%E0%B8%A2%E0%B9%86-%E0%B9%81%E0%B8%A5%E0%B8%B0%E0%B9%80%E0%B8%9B%E0%B9%87%E0%B8%99-nonexhaustive"&gt;
  &lt;/a&gt;
  Migrate Response, HandleResponse, InitResponse กลายเป็น Response เฉยๆ และเป็น non_exhaustive
&lt;/h3&gt;

&lt;p&gt;มีการรวม Response ต่างๆเป็นอันเดียว และใช้ Higher order function ในการ assign parameter ต่างๆให้กับ Response ( ไม่อนุญาตให้สร้าง Response แบบ struct expression แล้ว&lt;/p&gt;

&lt;p&gt;ซึ่งผมชอบนะอันนี้ ดูกระชับขึ้นเยอะเลย ( ถึงจะต้องแก้ Contract เก่าเยอะหน่อย )&lt;/p&gt;

&lt;p&gt;จาก&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;cosmwasm_std&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt; &lt;span class="n"&gt;HandleResponse&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="o"&gt;.....&lt;/span&gt;

 &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HandleResponse&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nn"&gt;Option&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nb"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;logs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;เปลี่ยนเป็น&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;cosmwasm_std&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="o"&gt;.....&lt;/span&gt;

    &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nf"&gt;.add_attributes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;.add_messages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msgs&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h4&gt;
  &lt;a href="#log-api-%E0%B9%80%E0%B8%9B%E0%B8%A5%E0%B8%B5%E0%B9%88%E0%B8%A2%E0%B8%99%E0%B8%8A%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B9%80%E0%B8%9B%E0%B9%87%E0%B8%99-attribute"&gt;
  &lt;/a&gt;
  Log API เปลี่ยนชื่อเป็น Attribute
&lt;/h4&gt;

&lt;p&gt;version 0.16 เอา log ออกหมดเลย เปลี่ยนไปเรียกว่า Attribute แทน รวมถึงการ return log จาก response ก็จะเปลี่ยนไปใช้ &lt;code&gt;add_attributes&lt;/code&gt; หรือ &lt;code&gt;add_attribute&lt;/code&gt; จาก Response แทน ( เพราะว่า &lt;code&gt;HandleResponse&lt;/code&gt; ถูก Deprecated ไปแล้วจากด้านบน&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;logs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;LogAttribute&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Attribute&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;

&lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;HandleResponse&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;log&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;logs&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="nn"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nf"&gt;.add_attributes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#humanaddr-%E0%B8%96%E0%B8%B9%E0%B8%81-deprecated"&gt;
  &lt;/a&gt;
  HumanAddr ถูก Deprecated
&lt;/h3&gt;

&lt;p&gt;ใน API version ใหม่จะมี &lt;code&gt;Addr&lt;/code&gt; มาแทน &lt;code&gt;HumanAddr&lt;/code&gt; โดยที่ API ส่วนใหญ่ ที่ใช้ &lt;code&gt;HumanAddr&lt;/code&gt; จะเปลี่ยนไปใช้ &lt;code&gt;String&lt;/code&gt; แทนแล้ว&lt;/p&gt;

&lt;p&gt;เช่น &lt;code&gt;WasmMsg:Execute&lt;/code&gt; จากปรกติ รับ &lt;code&gt;contarct_addr&lt;/code&gt; เป็น &lt;code&gt;HumanAddr&lt;/code&gt; ตอนนี้จะรับเป็น &lt;code&gt;String&lt;/code&gt; แทน ซึ่งหากเราตัดสินใจใช้ &lt;code&gt;Addr&lt;/code&gt; ก็จะมี &lt;code&gt;to_string&lt;/code&gt; ให้ใช้เปลี่ยนจาก &lt;code&gt;Addr&lt;/code&gt; เป็น &lt;code&gt;String&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;contract_addr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HumanAddr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;contract_addr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nn"&gt;WasmMsg&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Execute&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;contract_addr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;contract_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="n"&gt;contract_addr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;contract_addr&lt;/span&gt;&lt;span class="nf"&gt;.to_string&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;หลักๆเราต้อง Migrate ตัว contract ประมานนี้ ส่วนใหญ่ยังไม่มีอะไรที่ Breaking Change ถึงกับขนาดต้องออกแบบ Contract ใหม่&lt;/p&gt;

&lt;p&gt;ส่วนอื่นๆ นอกจากนี้ลึกๆ ตามไปไล่อ่านที่นี่ได้เลยจ้า&lt;br&gt;
&lt;a href="https://github.com/CosmWasm/cosmwasm/blob/main/MIGRATING.md"&gt;https://github.com/CosmWasm/cosmwasm/blob/main/MIGRATING.md&lt;/a&gt;&lt;/p&gt;

</description>
      <category>terremoney</category>
      <category>coswasm</category>
    </item>
    <item>
      <title>All Algorithms</title>
      <author>Danish Saleem</author>
      <pubDate>Sun, 31 Oct 2021 14:28:46 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/all-25-algorithms-5292</link>
      <guid>https://dev.to/mrdanishsaleem/all-25-algorithms-5292</guid>
      <description>&lt;h2&gt;
  &lt;a href="#searching"&gt;
  &lt;/a&gt;
  Searching
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Linear Search&lt;/li&gt;
&lt;li&gt;Binary Search&lt;/li&gt;
&lt;li&gt;Depth First Search&lt;/li&gt;
&lt;li&gt;Breadth First Search&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sorting"&gt;
  &lt;/a&gt;
  Sorting
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Insertion Sort&lt;/li&gt;
&lt;li&gt;Heap Sort&lt;/li&gt;
&lt;li&gt;Selection Sort&lt;/li&gt;
&lt;li&gt;Merge Sort&lt;/li&gt;
&lt;li&gt;Quick Sort&lt;/li&gt;
&lt;li&gt;Counting Sort&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#graphs"&gt;
  &lt;/a&gt;
  Graphs
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Kruskal’s Algorithm&lt;/li&gt;
&lt;li&gt;Dijkstra’s Algorithm&lt;/li&gt;
&lt;li&gt;Bellman Ford Algorithm&lt;/li&gt;
&lt;li&gt;Floyd Warshall Algorithm&lt;/li&gt;
&lt;li&gt;Topological Sort Algorithm&lt;/li&gt;
&lt;li&gt;Flood Fill Algorithm&lt;/li&gt;
&lt;li&gt;Lee Algorithm&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#arrays"&gt;
  &lt;/a&gt;
  Arrays
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Kadane’s Algorithm&lt;/li&gt;
&lt;li&gt;Floyd’s Cycle Detection Algorithm&lt;/li&gt;
&lt;li&gt;KMP Algorithm&lt;/li&gt;
&lt;li&gt;Quick Select Algorithm&lt;/li&gt;
&lt;li&gt;Boyer – More Majority Vote Algorithm&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#basics"&gt;
  &lt;/a&gt;
  Basics
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Huffman Coding Compression Algorithm&lt;/li&gt;
&lt;li&gt;Euclid’s Algorithm&lt;/li&gt;
&lt;li&gt;Union Find Algorithm&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect!
&lt;/h2&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/mrdanishsaleem/"&gt;LinkedIn&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IrvJezlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0ikih5nlsqs0oops11e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IrvJezlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0ikih5nlsqs0oops11e.png" alt="Buy Me a Coffee" width="880" height="193"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>beginners</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>JavaScript Vs TypeScript</title>
      <author>Sneha Maurya</author>
      <pubDate>Sun, 31 Oct 2021 14:22:00 +0000</pubDate>
      <link>https://dev.to/sneha025/javascript-vs-typescript-43li</link>
      <guid>https://dev.to/sneha025/javascript-vs-typescript-43li</guid>
      <description>&lt;p&gt;Before we dive into the differences let's have a little background on both languages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; (often shortened as JS) is a lightweight, interpreted, cross-platform, object-oriented scripting language that conforms to the ECMAScript specification and is used to make interactive web pages. JavaScript is used on both client-side and server-side that allows programmers to make web pages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TypeScript&lt;/strong&gt; (Often shortened as TS) is a programming language developed and maintained by Microsoft. It is a strongly typed superset of Javascript, cross-platform, object-oriented, compiles to plain javascript language, and is used to make interactive web pages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When we have JavaScript as a client-side and server-side technology, then why we needed TypeScript?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As we know by the development of Nodejs, JavaScript has become more popular than it was before due to server-side and client-side web development. However, when JavaScript was growing then the code getting more complex and making it difficult to maintain the reusability of code. It was not able to fulfill the necessity of Object-Oriented programming. These flaws hinder JavaScript from succeeding at the enterprise level as a server-side technology. Then TypeScript comes into the picture to fill the gap.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Difference between JavaScript and TypeScript&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;TypeScript is an Object-oriented programming language whereas JavaScript is an Object-oriented scripting language &lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Object-oriented programming languages are based on objects whereas scripting languages are made up of scripts to automate any function/action.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scripting languages don't need a compilation step and mostly get interpreted.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TypeScript always calls attention to errors during the development period but JavaScript highlights at the runtime.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;TypeScript support static typing but javaScript has dynamic typing&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;JavaScript assigns the type to any variable at runtime(dynamically typed)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TypeScript gives the option for static typing, the type of a variable is declared while writing the code. For example&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;in JavaScript:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;&lt;span class="hljs-keyword"&gt;let&lt;/span&gt; name_ =&lt;span class="hljs-string"&gt;"JavaScript"&lt;/span&gt;;&lt;br&gt;
&lt;span class="hljs-built_in"&gt;console&lt;/span&gt;.log(&lt;span class="hljs-string"&gt;"name variable is infered as string"&lt;/span&gt;,names);&lt;br&gt;
name_=&lt;span class="hljs-number"&gt;45&lt;/span&gt;;&lt;br&gt;
&lt;span class="hljs-built_in"&gt;console&lt;/span&gt;.log(&lt;span class="hljs-string"&gt;"name variable is infered as number "&lt;/span&gt;,names);&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;in TypeScript:&lt;/p&gt;
&lt;br&gt;
&lt;pre&gt;&lt;code&gt;let name_ = &lt;span class="hljs-string"&gt;"TypeScript"&lt;/span&gt;;&lt;br&gt;
&lt;span class="hljs-built_in"&gt;console&lt;/span&gt;.log(&lt;span class="hljs-string"&gt;"name variable is infered as string"&lt;/span&gt;,name_);&lt;br&gt;
name_=&lt;span class="hljs-number"&gt;45&lt;/span&gt;;    &lt;span class="hljs-regexp"&gt;//&lt;/span&gt; &lt;span class="hljs-keyword"&gt;throw&lt;/span&gt; error &lt;span class="hljs-string"&gt;"Type 'number' is not assignable to type 'string' "&lt;/span&gt;&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;

&lt;li&gt;When a language is not statically typed, it is more prone to errors in runtime.&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;TypeScript support interface but Javascript does not.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Being an object-oriented programming language TypeScript s supports  OOPs 
concepts like interfaces, classes, inheritances, generics, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many benefits TypeScript provides over JavaScript like it helps to make code management easier, increases team performance by the explicitly defined data structure, and variables type annotation make code by far easier to comprehend the decisions made by the other engineers who were working originally on your codebase.
TypeScript is getting popular and adopted by the Industry giants.&lt;/p&gt;

&lt;p&gt; &lt;a href="https://www.npmtrends.com/typescript"&gt;NPM downloads in the past 2 years&lt;/a&gt; :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--12yvlsn9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631464058934/gKzhw7CcA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--12yvlsn9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631464058934/gKzhw7CcA.png" alt="image.png" width="880" height="322"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;a href="https://insights.stackoverflow.com/survey/2020#technology-most-loved-dreaded-and-wanted-languages-loved"&gt;Stackoverflow survey on most loved language&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i0P5Okyx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631464807404/uUvgNCcQI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i0P5Okyx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631464807404/uUvgNCcQI.png" alt="Screenshot (5).png" width="750" height="613"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TypeScript is an awesome tool for JavaScript developers. It makes large codebases easy to understand and gives a fine code-writing toolkit as well.&lt;/p&gt;

&lt;p&gt;That's it for now, thank you for reading.&lt;/p&gt;

&lt;p&gt;-sneha&lt;/p&gt;


&lt;p&gt;This blog is posted using &lt;a href="www.blogtiple.com"&gt;Blogtiple&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This blog is posted using &lt;a href="www.blogtiple.com"&gt;Blogtiple&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This blog is posted using &lt;a href="www.blogtiple.com"&gt;Blogtiple&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>javascriptframework</category>
      <category>developer</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Creating an NFT on Solana with Metaplex Candy Machine. </title>
      <author>Devind Dev</author>
      <pubDate>Sun, 31 Oct 2021 14:16:53 +0000</pubDate>
      <link>https://dev.to/devindxdeveloper/creating-an-nft-on-solana-with-metaplex-candy-machine-4agp</link>
      <guid>https://dev.to/devindxdeveloper/creating-an-nft-on-solana-with-metaplex-candy-machine-4agp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#guide-overiew"&gt;
  &lt;/a&gt;
  Guide Overiew
&lt;/h2&gt;

&lt;p&gt;After what felt like walking through a mine field trying to figure out how to create my own NFT on Solana with the current guides, I decided to put together a guide myself in a very beginner friendly fashion.&lt;/p&gt;

&lt;p&gt;I won't be taking a deeper dive into the specifics of how everything works, but rather help people with zero knowledge of rust obtain a general understanding on how to create their very own NFT on Solana with the help of Metaplex candy machine and a web starter kit.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I used &lt;strong&gt;Ubuntu 21.10 - Wayland&lt;/strong&gt; for it. Some things may vary depending on the operating system you are running.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-metaplex-candy-machine"&gt;
  &lt;/a&gt;
  What is a Metaplex Candy Machine?
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Metaplex&lt;/code&gt; is a command line tool that interacts with the candy-machine program. In this guide, we will use it to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;em&gt;Upload&lt;/em&gt; your images along with their metadata to &lt;em&gt;arweave&lt;/em&gt;, then register them on the Solana blockchain.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Verify&lt;/em&gt; that the state of your candy machine is valid and complete.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Mint&lt;/em&gt; individual tokens.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;Candy Machine&lt;/code&gt; is a system that manages fair mints.&lt;br&gt;
• The minting process starts and finishes at the same time for everyone.&lt;br&gt;
• It won't accept your funds if there are no more NFTs to sell.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://nodejs.org/en/"&gt;NodeJS&lt;/a&gt; &lt;em&gt;(version 14.17.6)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.solana.com/cli/install-solana-cli-tools"&gt;SolanaCLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metaplex-foundation/metaplex.git"&gt;Metaplex CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://phantom.app/"&gt;Phantom Wallet&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you have a different version of Node installed on your system, you can use &lt;a href="https://github.com/nvm-sh/nvm"&gt;nvm&lt;/a&gt; which allows you to quickly install and use different versions of node via the command line.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#installing-the-solanacli"&gt;
  &lt;/a&gt;
  Installing The SolanaCLI
&lt;/h3&gt;

&lt;p&gt;Solana already has really well made guides on installing and using the Solana command line.&lt;br&gt;
• &lt;a href="https://docs.solana.com/cli/install-solana-cli-tools"&gt;Install Solana Command Line Tools&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#using-devnet"&gt;
  &lt;/a&gt;
  Using Devnet
&lt;/h4&gt;

&lt;p&gt;Devnet is really useful for developers to test out their programs and applications.&lt;/p&gt;

&lt;p&gt;You can set your default Solana url to devnet using:&lt;br&gt;
&lt;code&gt;$ solana config set --url https://api.devnet.solana.com&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, let's create a devnet wallet:&lt;br&gt;
&lt;code&gt;$ solana-keygen new --outfile ~/.config/solana/devnet.json&lt;/code&gt;&lt;br&gt;
Remember to store your seed phrase somewhere safe.&lt;/p&gt;

&lt;p&gt;I highly recommend making devnet your default &lt;em&gt;keypair&lt;/em&gt;&lt;br&gt;
&lt;code&gt;$ solana config set --keypair ~/.config/solana/devnet.json&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#funding-the-devnet-wallet"&gt;
  &lt;/a&gt;
  Funding The Devnet Wallet
&lt;/h4&gt;

&lt;p&gt;Firstly, let’s make sure that we’re on devnet by checking the configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ solana config get
//Output:
Config File: /Users/dev/.config/solana/cli/config.yml
RPC URL: https://api.devnet.solana.com
WebSocket URL: wss://api.devnet.solana.com/ (computed)
Keypair Path: /Users/dev/.config/solana/devnet.json
Commitment: confirmed
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let’s fund that wallet:&lt;br&gt;
Firstly, We check the balance of our current wallet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ solana balance 
//Output:
0 SOL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we airdrop the amount of SOL to our wallet. Remember, the amount is capped to 5 SOL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ solana airdrop 4
//Output
Requesting airdrop of 4

Signature: Transaction Signature

4 SOL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, Let’s check our balance to confirm the airdrop was successful.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ solana balance
//Output:
4 SOL //This can vary depending on the balance you initially had.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;In case you’re confused by any of the above steps, you can check the manuals to get a better understanding by running:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ solana help config
$ solana help balance
$ solana help airdrop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#configuring-phantom-wallet"&gt;
  &lt;/a&gt;
  Configuring Phantom Wallet
&lt;/h4&gt;

&lt;p&gt;After setting up your phantom wallet, we can link our newly created devnet wallet above to phantom.&lt;br&gt;
To do so, first we need to open its settings, click on &lt;code&gt;Change Network&lt;/code&gt; and select &lt;code&gt;Devnet&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, we need to obtain the devnet wallet private key. To obtain that, open your terminal and &lt;code&gt;cat&lt;/code&gt; to view the contents of the &lt;code&gt;keypair.json&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cat .config/solana/devnet.json
//Output:
[12,22,.....]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now copy the output you received and open phantom wallet. Click on the top left navigation menu and click on &lt;code&gt;Add/Connect Wallet&lt;/code&gt; and then click on &lt;code&gt;Import Private Key&lt;/code&gt; and give it a suitable name and paste the contents we copied before in the Private Key field.&lt;/p&gt;

&lt;p&gt;You should be able to see 4 SOL in your wallet.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-candy-machine-cli"&gt;
  &lt;/a&gt;
  Running Candy Machine CLI
&lt;/h3&gt;

&lt;p&gt;Please ensure that you have &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;yarn&lt;/code&gt; installed before proceeding.&lt;/p&gt;

&lt;p&gt;Also install &lt;code&gt;ts-node&lt;/code&gt; by running:&lt;br&gt;
&lt;code&gt;$ npm install -g ts-node&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, let’s clone the metaplex project into the location of your choice.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git clone https://github.com/metaplex-foundation/metaplex.git
$ cd metaplex/js
$ yarn install &amp;amp;&amp;amp; yarn bootstrap &amp;amp;&amp;amp; yarn build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run the command line utility,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$  ts-node metaplex/js/packages/cli/src/candy-machine-cli.ts help
Usage: candy-machine-cli [options] [command]

Options:
  -V, --version                          output the version number
  -h, --help                             display help for command

Commands:
  upload [options] &amp;lt;directory&amp;gt;
  verify [options]
  verify_price [options]
  create_candy_machine [options]
  update_candy_machine [options]
  mint_one_token [options]
  sign [options]
  sign_candy_machine_metadata [options]
  help [command]                         display help for command
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#organizing-amp-uploading-your-assets"&gt;
  &lt;/a&gt;
  Organizing &amp;amp; Uploading Your Assets
&lt;/h3&gt;

&lt;p&gt;For this guide, we will be using pre-made assets which you can download by &lt;a href="https://drive.google.com/drive/folders/1DoV44eED8PrgmMeAL-i-ceJ3NAx1ND5L?usp=sharing"&gt;clicking here.&lt;/a&gt; courtesy of &lt;a href="https://github.com/kevinfaveri/solana-candy-factory"&gt;solana-candy-factory&lt;/a&gt;&lt;br&gt;
Place this &lt;code&gt;assets&lt;/code&gt; folder in a suitable location.&lt;br&gt;
Here is how you should organize your NFT files to upload:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ls assets | sort -n
0.json
0.png
1.json
1.png
2.json
2.png
3.json
3.png
....
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can notice that these files come in numerical pairs, that is &lt;code&gt;1.png&lt;/code&gt; and &lt;code&gt;1.json&lt;/code&gt; are the two halves of the NFT. The &lt;code&gt;png&lt;/code&gt; file is the art work and the &lt;code&gt;json&lt;/code&gt; file contains the metadata.&lt;/p&gt;

&lt;p&gt;The directory name &lt;code&gt;assets&lt;/code&gt; does not matter. You can go with anything you like.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#validating-your-assets"&gt;
  &lt;/a&gt;
  Validating Your Assets
&lt;/h4&gt;

&lt;p&gt;This may feel tedious but it's just as important. Checkout the the manual on carrying this out at&lt;br&gt;
&lt;a href="https://docs.metaplex.com/nft-standard"&gt;https://docs.metaplex.com/nft-standard&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#uploading-your-project-assets"&gt;
  &lt;/a&gt;
  Uploading Your Project Assets
&lt;/h3&gt;

&lt;p&gt;Now that we have the funds, assets all organized and vaidated, we can proceed with the fun stuff!&lt;/p&gt;

&lt;p&gt;We will proceed with uploading our assets with the CLI. Remember, our assets are located at &lt;code&gt;metaplex\js\packages\cli\example-assets&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ts-node metaplex/js/packages/cli/src/candy-machine-cli.ts upload assets --env devnet --keypair ~/.config/solana/devnet.json

//Output
Processing file: 0
Processing file: 1
Processing file: 2
Processing file: 3
Done
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By uploading, it sends the files to Arweave and also registers those files with your candy machine. Both Arweave and Solana are initialized after a successful run.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#validating-your-candy-machine"&gt;
  &lt;/a&gt;
  Validating Your Candy Machine
&lt;/h4&gt;

&lt;p&gt;You can confirm the health and status of your on-chain assets using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ts-node metaplex/js/packages/cli/src/candy-machine-cli.ts verify --env devnet --keypair ~/.config/solana/devnet.json
//Output:
Looking at key  0
Name {redacted-name} 0 with https://arweave.net/{redacted-tx-id} checked out
Looking at key  1
Name {redacted-name} 1 with https://arweave.net/{redacted-tx-id} checked out
Looking at key  2
Name {redacted-name} 2 with https://arweave.net/{redacted-tx-id} checked out
Looking at key  3
Name {redacted-name} 3 with https://arweave.net/{redacted-tx-id} checked out
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#starting-your-candy-machine"&gt;
  &lt;/a&gt;
  Starting Your Candy Machine
&lt;/h4&gt;

&lt;p&gt;After verifying that our assets are good to go, we can finally start the candy machine.&lt;br&gt;
&lt;code&gt;$ ts-node metaplex/js/packages/cli/src/candy-machine-cli.ts create_candy_machine --env devnet --keypair ~/.config/solana/devnet.json&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#updating-your-candy-machine"&gt;
  &lt;/a&gt;
  Updating Your Candy Machine
&lt;/h4&gt;

&lt;p&gt;We can modify our candy machine details to include a start date and/or price etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ts-node metaplex/js/packages/cli/src/candy-machine-cli.ts update_candy_machine --env devnet --keypair ~/.config/solana/devnet.json --price 1 --date "29 Oct 2021 00:12:00 GMT"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#minting-our-nft"&gt;
  &lt;/a&gt;
  Minting Our NFT
&lt;/h2&gt;

&lt;p&gt;To mint our NFT, we can use &lt;code&gt;mint_one_token&lt;/code&gt; like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ts-node metaplex/js/packages/cli/src/candy-machine-cli.ts mint_one_token --env devnet --keypair ~/.config/solana/devnet.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If all goes well, you can now open your phantom wallet, open the collectibles page (It's beside the $ symbol on the bottom) and voila! Your newly minted NFT will be there!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-web-starter-kit"&gt;
  &lt;/a&gt;
  Setting Up The Web Starter Kit
&lt;/h2&gt;

&lt;p&gt;Now that we've successfully minted an NFT into our wallet, let's make a web application to carry out the mint instead! &lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; This project is very new and could cause some issues, if it does then please report it on github.&lt;/p&gt;

&lt;p&gt;The goal of the project is for you to be able to configure it and customize it to your liking.&lt;/p&gt;

&lt;p&gt;Fork the project and then clone it to your desired location.&lt;br&gt;
Link: &lt;a href="https://github.com/exiled-apes/candy-machine-mint"&gt;https://github.com/exiled-apes/candy-machine-mint&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we need to build the project,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd candy-machine-mint
yarn install
yarn build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is where things get a little bit complicated. When we uploaded our NFTs, a cache file was created in the &lt;strong&gt;same&lt;/strong&gt; directory as our assets directory. However, this &lt;code&gt;.cache&lt;/code&gt; folder is hidden! If you're on ubuntu, use &lt;code&gt;ctrl+h&lt;/code&gt; to display hidden files.&lt;/p&gt;

&lt;p&gt;Once you have discovered that folder, open it and you'll find &lt;code&gt;devnet-temp&lt;/code&gt; file. Open it in your IDE and you'll see the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"program"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"uuid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Ch3xxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"config"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Ch3xxx"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"items"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"0"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://arweave.net/xxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"onChain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://arweave.net/xxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"onChain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"2"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://arweave.net/xxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"onChain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"3"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://arweave.net/xxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"onChain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"4"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://arweave.net/xxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"onChain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"5"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://arweave.net/xxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"onChain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"env"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"devnet"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cacheName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"temp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"authority"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"9xJxxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"candyMachineAddress"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"3Wmxxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"startDate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1632615120&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're going to need all this data when we run our web application to mint.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-candymachinemint"&gt;
  &lt;/a&gt;
  Configuring Candy-Machine-Mint
&lt;/h3&gt;

&lt;p&gt;Open up the candy-machine-mint folder, where you will find a file called &lt;code&gt;.env.example&lt;/code&gt; &lt;br&gt;
(The file is usually hidden, use &lt;code&gt;ctrl+h&lt;/code&gt; to display hidden files)&lt;br&gt;
Rename it to &lt;code&gt;.env&lt;/code&gt; and then open it to edit the following details:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_CANDY_MACHINE_CONFIG=__PLACEHOLDER__
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the &lt;code&gt;program.config&lt;/code&gt; key from our &lt;code&gt;.cache/devnet-temp&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_CANDY_MACHINE_ID=__PLACEHOLDER__
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the &lt;code&gt;candyMachineAddress&lt;/code&gt; from our &lt;code&gt;.cache/devnet-temp&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_TREASURY_ADDRESS=__PLACEHOLDER__
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This the Solana address that receives the funds gathered during the minting process. You can set this to your devnet wallet address.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_CANDY_START_DATE=__PLACEHOLDER__
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the &lt;code&gt;startDate&lt;/code&gt; key from our &lt;code&gt;.cache/devnet-temp&lt;/code&gt; file. &lt;br&gt;
Note: If you cannot find it, use &lt;code&gt;update_candy_machine&lt;/code&gt; as mentioned above as you may have missed out on mentioning the date.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_SOLANA_NETWORK=devnet
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This identifies the Solana network you want to connect to. Options are devnet, testnet, and mainnet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_SOLANA_RPC_HOST=https://explorer-api.devnet.solana.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This identifies the RPC server your web app will access the Solana network through.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#starting-the-web-application"&gt;
  &lt;/a&gt;
  Starting The Web Application
&lt;/h3&gt;

&lt;p&gt;Open your terminal and navigate to the &lt;code&gt;candy-machine-mint&lt;/code&gt; directory and start the react app by using &lt;code&gt;yarn start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once you see &lt;em&gt;Compiled Successfully&lt;/em&gt; in your terminal, Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to view it in the browser.&lt;/p&gt;

&lt;p&gt;You can now proceed with connecting your wallet, and clicking on the &lt;strong&gt;mint&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;After clicking on the &lt;strong&gt;mint&lt;/strong&gt; button, you can check the collectibles page on your phantom wallet and you'll see your newly minted NFT!&lt;/p&gt;

&lt;p&gt;That’s all I will be covering in this guide. If you encounter any issues, comment down below and I’ll try to help!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-resources"&gt;
  &lt;/a&gt;
  Other Resources
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://hackmd.io/@levicook/HJcDneEWF"&gt;https://hackmd.io/@levicook/HJcDneEWF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.metaplex.com/"&gt;https://docs.metaplex.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Follow &lt;a href="https://twitter.com/aeyakovenko?s=21"&gt;Anatoly&lt;/a&gt; and &lt;a href="https://twitter.com/rajgokal?s=21"&gt;Raj Gokal&lt;/a&gt; for good vibes.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>blockchain</category>
      <category>nft</category>
      <category>solana</category>
      <category>beginners</category>
    </item>
    <item>
      <title>🚄 ScrollTriggering Through a Tube GSAP - ScrollTrigger Demo</title>
      <author>Jayant Goel</author>
      <pubDate>Sun, 31 Oct 2021 14:13:47 +0000</pubDate>
      <link>https://dev.to/jayantgoel001/scrolltriggering-through-a-tube-gsap-scrolltrigger-demo-59c0</link>
      <guid>https://dev.to/jayantgoel001/scrolltriggering-through-a-tube-gsap-scrolltrigger-demo-59c0</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/motionharvest/embed/WNQYJyM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Dominos with Physijs and ScrollTrigger</title>
      <author>Jayant Goel</author>
      <pubDate>Sun, 31 Oct 2021 14:10:40 +0000</pubDate>
      <link>https://dev.to/jayantgoel001/dominos-with-physijs-and-scrolltrigger-3n7a</link>
      <guid>https://dev.to/jayantgoel001/dominos-with-physijs-and-scrolltrigger-3n7a</guid>
      <description>&lt;p&gt;Dominos wrapped with Physijs and a  ball controlled with GSAP ScrollTrigger&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/motionharvest/embed/KKdrezJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>HOW TO LEARN TO CODE AS A BEGINNER</title>
      <author>webcodespace</author>
      <pubDate>Sun, 31 Oct 2021 13:57:07 +0000</pubDate>
      <link>https://dev.to/webcodespace/how-to-learn-to-code-as-a-beginner-j28</link>
      <guid>https://dev.to/webcodespace/how-to-learn-to-code-as-a-beginner-j28</guid>
      <description>&lt;p&gt;So you want to learn a new technical skill, and you've heard a lot about programming and you've decided this is the new skill you want to learn. &lt;/p&gt;

&lt;p&gt;You keep wondering how you are going to acquire this new skill of programming and as a result you start googling a lot of things about programming. &lt;/p&gt;

&lt;p&gt;The only problem is that, the internet is full with a lot of information about what you should and shouldn't do. &lt;/p&gt;

&lt;p&gt;You will have a lot of people presenting you with a lot of technology to learn and by the end of the day, you're going to get confused. &lt;/p&gt;

&lt;p&gt;In this post, I'm going to be talking about four steps you can take if you want to learn how to code. &lt;/p&gt;

&lt;p&gt;These steps are:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-set-a-goal"&gt;
  &lt;/a&gt;
  1. Set a goal
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EcOQkFSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jf8vp54yrk4ymdwevwia.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EcOQkFSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jf8vp54yrk4ymdwevwia.jpg" alt="how to learn programming" width="880" height="517"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is really important. Not just in programming but everything else. What do you want to achieve? What do you want to be able to build? Which area of programming do you want to go into? You need to have answers to these questions. Without a set goal, you're going to spend more time trying to learn how to code and nothing will ever really satisfy you&lt;/p&gt;

&lt;p&gt;This step can actually take you quite some time, but it is definitely worth it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-choose-a-programming-language"&gt;
  &lt;/a&gt;
  2. Choose a programming language:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j9EMLMXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wvsf9lflw7rcffpsctno.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j9EMLMXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wvsf9lflw7rcffpsctno.jpg" alt="learn to code" width="880" height="473"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you've completed the first step, you'll be ready to &lt;a href="https://www.webcodespace.com/best-programming-languages-for-beginners"&gt;choose your first programming language&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Choosing your first programming language can sometimes be a hassle for a lot of beginners. &lt;/p&gt;

&lt;p&gt;There are a lot of amazing options out there and sometimes you just wish you can learn them all, all at once. &lt;/p&gt;

&lt;p&gt;Well, before picking up a new programming language, you need to consider the following:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-the-popularity-of-that-language"&gt;
  &lt;/a&gt;
  a. The popularity of that language
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dTOy0AJp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhgskcv5521b43lkc4ms.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dTOy0AJp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhgskcv5521b43lkc4ms.jpg" alt="how to choose a programming language" width="880" height="622"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reason why this is so important is because you need to a language that is already used by a lot of programmers. &lt;/p&gt;

&lt;p&gt;If there are a lot of programmers using this particular language, it will be easier to find tutorials or code examples to learn from. &lt;/p&gt;

&lt;p&gt;As a beginner, it wouldn't be very nice to start switching between different programming languages in order to learn new concepts. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#b-the-job-market"&gt;
  &lt;/a&gt;
  b. The job market
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f8aoQfq1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i7g36ycz5ouibx86c3j6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f8aoQfq1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i7g36ycz5ouibx86c3j6.jpg" alt="beginner programmer" width="880" height="530"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some people actually go into programming because they believe they can find a promising job. &lt;/p&gt;

&lt;p&gt;If you are one of those people, then it will be really important to check out the job opportunities available to you both locally and remotely. &lt;/p&gt;

&lt;p&gt;If you are learning how to program because of job opportunities and there are a lot of javascript jobs available around you, it wouldn't really be advisable to learn something else like java or ruby.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c-your-interest"&gt;
  &lt;/a&gt;
  c. Your interest
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R69T82x0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iob42b4p4y9u0sm3nit9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R69T82x0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iob42b4p4y9u0sm3nit9.jpg" alt="learn code" width="880" height="586"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is all about what really excites you about programming. &lt;/p&gt;

&lt;p&gt;Do you love to play and build games? You can become a game developer. Do you think you will enjoy coding out web applications? You can consider web development.&lt;/p&gt;

&lt;p&gt;Doing the things that really excite you, can really help you learn faster. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#d-learning-curve"&gt;
  &lt;/a&gt;
  d. Learning curve
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QGg-g3ln--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcp3vccdq3dewnxgaq2i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QGg-g3ln--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcp3vccdq3dewnxgaq2i.jpg" alt="coding tutorial" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose something easy, you're just starting out. &lt;/p&gt;

&lt;p&gt;Having a good understanding of the basics of programming can really help you to become a very good programmer.&lt;/p&gt;

&lt;p&gt;The best programmers know their basics very well. &lt;/p&gt;

&lt;p&gt;If you choose an easy language, it will be easier for you to learn those basic programming concepts. &lt;/p&gt;

&lt;p&gt;It wouldn't be very nice that while you are trying to learn those new concepts, you also struggle to understand the syntax of a new programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-look-for-a-course"&gt;
  &lt;/a&gt;
  3. Look for a course:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yX6bjEwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xb2uahif0jiafmj4e7qi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yX6bjEwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xb2uahif0jiafmj4e7qi.jpg" alt="programmer guide" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These days there are a lot of resources online to help you learn code. There are both free and paid ones. &lt;/p&gt;

&lt;p&gt;You can go through YouTube and find cool videos that can help you learn or you can also buy a course on udemy. It's totally up to you. &lt;/p&gt;

&lt;p&gt;You need to find content that you can easily understand. If you come across anything you don't understand, you can google them.&lt;/p&gt;

&lt;p&gt;However, I would advise that you find a course that has a good structure and gradually follow it step by step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-practice"&gt;
  &lt;/a&gt;
  4. Practice
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iwv1bo-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yln6a00nao85a4gvo9i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iwv1bo-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yln6a00nao85a4gvo9i.jpg" alt="webcodespace" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Programming is a skill, and just like every other skill, you need to practice in order to become proficient. &lt;/p&gt;

&lt;p&gt;Once you are done with your courses and you have a good understanding of the basics, you can move on to practicing and building out projects. &lt;/p&gt;

&lt;p&gt;Start building out your dream projects. This is where the real fun begins. This is really important because once you successfully complete one project, it will prompt you to build another. And by the time you successfully complete a lot of projects, your skill and experience will develop. &lt;/p&gt;

&lt;p&gt;Learning how to code still remains one of the most valuable skill anyone can learn. &lt;/p&gt;

&lt;p&gt;Be patient with the learning process and soon you'll begin to notice progress. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy coding!!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>tutorial</category>
      <category>python</category>
    </item>
  </channel>
</rss>
