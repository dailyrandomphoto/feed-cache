<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>My Command Line Tools for Linux Terminal in 2022</title>
      <author>Juan Belieni</author>
      <pubDate>Mon, 17 Jan 2022 12:31:46 +0000</pubDate>
      <link>https://dev.to/juanbelieni/my-command-line-tools-for-linux-terminal-in-2022-co7</link>
      <guid>https://dev.to/juanbelieni/my-command-line-tools-for-linux-terminal-in-2022-co7</guid>
      <description>&lt;p&gt;In the beginning of this year, I started to search some new and modern command line tools for the Linux terminal. Here are some that I am currently using.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lsd"&gt;
  &lt;/a&gt;
  LSD
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h7oGZmdc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Peltoche/lsd/assets/screen_lsd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h7oGZmdc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Peltoche/lsd/assets/screen_lsd.png" alt="LSD" width="812" height="188"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Peltoche/lsd"&gt;LSD&lt;/a&gt; (or LSDeluxe) is a rewrite of &lt;code&gt;ls&lt;/code&gt; command, with a lot of new features like colors, icons, tree-view, etc.&lt;/p&gt;

&lt;p&gt;This tool uses icons from the &lt;a href="https://github.com/ryanoasis/nerd-fonts"&gt;Nerd Fonts&lt;/a&gt; project, and is capable of creating beautiful and useful outputs of your files and directories.&lt;/p&gt;

&lt;p&gt;After installing this command, you can create an alias for LSD, replacing the traditional &lt;code&gt;ls&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;alias ls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"lsd"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#bat"&gt;
  &lt;/a&gt;
  Bat
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/c436c206f2c86605ab2f9fb632dd485afc05fccbf14af472770b0c59d876c9cc/68747470733a2f2f692e696d6775722e636f6d2f326c53573452452e706e67" class="article-body-image-wrapper"&gt;&lt;img src="https://camo.githubusercontent.com/c436c206f2c86605ab2f9fb632dd485afc05fccbf14af472770b0c59d876c9cc/68747470733a2f2f692e696d6775722e636f6d2f326c53573452452e706e67" alt="Bay" width="656" height="327"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/sharkdp/bat"&gt;Bat&lt;/a&gt; is a &lt;code&gt;cat&lt;/code&gt; clone with syntax highlighting and Git integration.&lt;/p&gt;

&lt;p&gt;Like LSD, Bat can be used to replace the &lt;code&gt;cat&lt;/code&gt; command, and it is recommended to use this alias to preserve the default behavior:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;alias cat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"bat --paging=never"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#zoxide"&gt;
  &lt;/a&gt;
  Zoxide
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z1Vtml4g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ajeetdsouza/zoxide/raw/main/contrib/tutorial.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z1Vtml4g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ajeetdsouza/zoxide/raw/main/contrib/tutorial.webp" alt="Zoxide" width="880" height="475"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ajeetdsouza/zoxide"&gt;Zoxide&lt;/a&gt; is a smarter &lt;code&gt;cd&lt;/code&gt; command, inspired in z and autojump. The best feature of this tool is to remember the paths you use most frequently.&lt;/p&gt;

&lt;p&gt;Besides its &lt;code&gt;z&lt;/code&gt; command, Zoxide has the &lt;code&gt;zi&lt;/code&gt; command, which uses fzf to interactively select the path.&lt;/p&gt;

&lt;p&gt;This tool supports all major shells, so you can use it on Zsh, Fish, PowerShell, etc.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#fzf"&gt;
  &lt;/a&gt;
  Fzf
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gjf3bcz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/junegunn/i/master/fzf-preview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gjf3bcz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/junegunn/i/master/fzf-preview.png" alt="Fzf" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;Fzf&lt;/a&gt; is a general-purpose command-line fuzzy finder. Like I commented in Zoxide section, Fzf is used to interactively find and select something.&lt;/p&gt;

&lt;p&gt;It can be used to find paths, host names, environment variables and much more.&lt;/p&gt;

&lt;p&gt;Currently, I am using this tool with the &lt;a href="https://github.com/Aloxaf/fzf-tab"&gt;fzf-tab&lt;/a&gt; plugin for Zsh, which replaces zsh's default completion selection menu with Fzf, and it is working very well.&lt;/p&gt;




&lt;p&gt;There is a tool that you are using this year that I have not commented here? Write it below! I will love to find new interesting projects.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>terminal</category>
      <category>productivity</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Amazon Machine Learning: Amazon SageMaker 🔥</title>
      <author>Emma Donery</author>
      <pubDate>Mon, 17 Jan 2022 12:20:33 +0000</pubDate>
      <link>https://dev.to/emma_donery/amazon-machine-learning-amazon-sagemaker-4ljj</link>
      <guid>https://dev.to/emma_donery/amazon-machine-learning-amazon-sagemaker-4ljj</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8irEijX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/avgq0293lnbeqyntydnn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8irEijX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/avgq0293lnbeqyntydnn.png" alt="Image description" width="880" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Introduction&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Amazon Web Services (AWS) offers a wealth of services and tools that help data scientists leverage machine learning to craft better, more intelligent solutions. This article is ideal for data scientists, programmers, and machine-learning enthusiasts who want to learn about the artificial intelligence and machine learning capabilities of&lt;br&gt;
the Amazon Web Services.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-cloud-computing"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is cloud computing&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Cloud computing&lt;/strong&gt; is the on-demand delivery of IT resources over the Internet with pay-as-you-go pricing. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cloud-service-providers"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Cloud Service providers&lt;/strong&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Amazon Web Services&lt;/li&gt;
&lt;li&gt;Google Cloud platform&lt;/li&gt;
&lt;li&gt;Microsoft azure&lt;/li&gt;
&lt;li&gt;IBM Cloud&lt;/li&gt;
&lt;li&gt;Digital Ocean&lt;/li&gt;
&lt;li&gt;Terremark&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-aws"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is AWS&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Amazon Web Services&lt;/strong&gt;(AWS) is a secure cloud services platform, offering compute power, database, storage, content delivery and other functionality to help businesses scale and grow.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-amazon-web-services"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why Amazon Web Services&lt;/strong&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Easy to use&lt;/li&gt;
&lt;li&gt;Flexible&lt;/li&gt;
&lt;li&gt;Cost-Effective&lt;/li&gt;
&lt;li&gt;Reliable&lt;/li&gt;
&lt;li&gt;Scalable and high-performance&lt;/li&gt;
&lt;li&gt;Secure.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-machine-learning"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Machine Learning?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Machine Learning is a subset of Artificial Intelligence in the field of computer science that often uses statistical techniques to provide computers with the ability to learn&lt;br&gt;
with data without being programmed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-amazon-machine-learning"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Amazon Machine Learning?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Amazon Machine Learning&lt;/strong&gt; is a service that allows users to create prediction apps based on their data using algorithms and mathematical models.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0MWXXute--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vj9q27et6v6zb39jkl0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0MWXXute--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vj9q27et6v6zb39jkl0.png" alt="Image description" width="760" height="428"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-amazon-sagemaker"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Amazon SageMaker?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Amazon SageMaker helps data scientists and developers to prepare, build, train, and deploy high-quality machine learning models quickly by bringing together a broad set of capabilities purpose-built for machine learning. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-amazon-sagemaker"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why Amazon SageMaker?&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;In the hosted environment, many data scientists design, train, and deploy machine learning models. Unfortunately, they did not have the capability to scale up or down resources as needed. AWS SageMaker addresses this problem by making it easier for developers to construct and train models in order to bring them into production faster and at a reduced cost.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-machine-learning-works-with-aws-sagemaker"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How machine learning works with AWS SageMaker.&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PtnNWGF8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bg585buerx029pqm9b0j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PtnNWGF8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bg585buerx029pqm9b0j.png" alt="Image description" width="880" height="384"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Prepare and build the models&lt;/em&gt;&lt;/strong&gt; -Connecting to additional AWS services like S3 and manipulating data in Amazon SageMaker notebooks completes the build stage.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Train and tune&lt;/em&gt;&lt;/strong&gt; -The train step is about using AWS SageMaker's algorithms and frameworks for distributed training, or bringing our own.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Deploy and analyze&lt;/em&gt;&lt;/strong&gt; - Models can be delivered to Amazon SageMaker endpoints for real-time or batch predictions once they've been trained.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This article gives a brief introduction on Machine learning with AWS. Next we will learn hoe to build, train, and deploy Machine Learning Models using AWS SageMaker. &lt;br&gt;
Stay Tuned🎈&lt;/p&gt;

&lt;p&gt;Let's Connect on &lt;a href="https://twitter.com/Emma_Donery"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/in/emma-donery-0831a7188/"&gt;Linkein&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>beginners</category>
      <category>machinelearning</category>
      <category>datascience</category>
    </item>
    <item>
      <title>How to install Flowbite and Tailwind CSS with Laravel</title>
      <author>Zoltán Szőgyényi</author>
      <pubDate>Mon, 17 Jan 2022 12:18:40 +0000</pubDate>
      <link>https://dev.to/themesberg/how-to-install-flowbite-and-tailwind-css-with-laravel-5eop</link>
      <guid>https://dev.to/themesberg/how-to-install-flowbite-and-tailwind-css-with-laravel-5eop</guid>
      <description>&lt;p&gt;In this guide you will learn how to install and work with Laravel, Tailwind CSS, and Flowbite.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://flowbite.com"&gt;Flowbite&lt;/a&gt; is a popular open source component library built on top the utility-first Tailwind CSS framework including UI components such as dropdowns, modals, buttons, and more.&lt;/p&gt;

&lt;p&gt;Laravel is the most popular PHP web framework based on the model-view-controller (MCV) model that helps you build modern web applications and API's.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-tailwind-css-with-laravel"&gt;
  &lt;/a&gt;
  Install Tailwind CSS with Laravel
&lt;/h2&gt;

&lt;p&gt;Follow the next steps to install Tailwind CSS and Flowbite with Laravel Mix.&lt;/p&gt;

&lt;p&gt;Make sure that you have &lt;a href="https://getcomposer.org/" rel="nofollow"&gt;Composer&lt;/a&gt; and &lt;a href="https://nodejs.org/en/" rel="nofollow"&gt;Node.js&lt;/a&gt; installed locally on your computer.&lt;/p&gt;

&lt;p&gt;Require the Laravel Installer globally using Composer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer global require laravel/installer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure to place the vendor bin directory in your PATH. Here's how you can do it based on each OS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;macOS: &lt;code&gt;export PATH="$PATH:$HOME/.composer/vendor/bin"&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Windows: &lt;code&gt;set PATH=%PATH%;%USERPROFILE%\AppData\Roaming\Composer\vendor\bin&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Linux: &lt;code&gt;export PATH="~/.config/composer/vendor/bin:$PATH"&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create a new project using Laravel's CLI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;laravel new awesome-project

&lt;span class="nb"&gt;cd &lt;/span&gt;awesome-project
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can now access the Laravel application on &lt;code&gt;http://localhost:8000&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This command will initialize a blank Laravel project that you can get started with.&lt;/p&gt;

&lt;p&gt;Install Tailwind CSS and Flowbite using NPM:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;D&lt;/span&gt; &lt;span class="nx"&gt;tailwindcss&lt;/span&gt; &lt;span class="nx"&gt;postcss&lt;/span&gt; &lt;span class="nx"&gt;autoprefixer&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;themesberg&lt;/span&gt;&lt;span class="sr"&gt;/flowbit&lt;/span&gt;&lt;span class="err"&gt;e
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a Tailwind CSS config file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx tailwindcss init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A new &lt;code&gt;tailwind.config.js&lt;/code&gt; file will be created inside your root folder.&lt;/p&gt;

&lt;p&gt;Add the view paths and require Flowbite as a plugin inside &lt;code&gt;tailwind.config.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./resources/**/*.blade.php&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./resources/**/*.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./resources/**/*.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./node_modules/@themesberg/flowbite/**/*.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@themesberg/flowbite/plugin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add Tailwind CSS to your Laravel Mix configuration by requiring it inside the &lt;code&gt;webpack.mix.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mix&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resources/js/app.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;public/js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postCss&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resources/css/app.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;public/css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;

    &lt;span class="c1"&gt;// add here&lt;/span&gt;
    &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tailwindcss&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

  &lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the directives inside the &lt;code&gt;./resources/css/app.css&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Include the &lt;code&gt;app.css&lt;/code&gt; file inside the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag of your view templates:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/css/app.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Require the &lt;code&gt;flowbite.bundle.js&lt;/code&gt; file before the end of the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"../path/to/@themesberg/flowbite/dist/flowbite.bundle.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alternatively, you can also include the JavaScript file using CDN:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/@themesberg/flowbite@{{&amp;lt; current_version &amp;gt;}}/dist/flowbite.bundle.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that you've set everything up start up a local development server using &lt;code&gt;php artisan serve&lt;/code&gt; and run the build process for Webpack by using &lt;code&gt;npm run watch&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flowbite-components"&gt;
  &lt;/a&gt;
  Flowbite components
&lt;/h2&gt;

&lt;p&gt;Now that you have successfully installed the project you can start using the &lt;a href="https://flowbite.com/docs/getting-started/introduction/"&gt;UI components from Flowbite&lt;/a&gt; and Tailwind CSS to develop modern websites and web applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KGEHyF9F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qntpacwojs9ydkgbscwz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KGEHyF9F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qntpacwojs9ydkgbscwz.png" alt="Flowbite - Tailwind CSS components" width="880" height="470"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We recommend exploring the components using the search bar navigation (&lt;code&gt;cmd&lt;/code&gt; or &lt;code&gt;ctrl&lt;/code&gt; + &lt;code&gt;k&lt;/code&gt;) or by browsing the components section of the sidebar on the left side of this page.&lt;/p&gt;

&lt;p&gt;This guide is based on the official &lt;a href="https://flowbite.com/docs/getting-started/laravel/"&gt;Tailwind CSS Laravel&lt;/a&gt; documentation from Flowbite.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>tailwindcss</category>
      <category>tutorial</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How to Implement Attribute Based Access Control (ABAC) using Open Policy Agent (OPA)</title>
      <author>Daniel Bass</author>
      <pubDate>Mon, 17 Jan 2022 12:13:40 +0000</pubDate>
      <link>https://dev.to/permit_io/how-to-implement-attribute-based-access-control-abac-using-open-policy-agent-opa-3ek4</link>
      <guid>https://dev.to/permit_io/how-to-implement-attribute-based-access-control-abac-using-open-policy-agent-opa-3ek4</guid>
      <description>&lt;p&gt;Building authorization can be a complicated endeavor. There are different models for building authorization and different ways of implementing them. At the end of the day, only one thing matters - we want the &lt;strong&gt;right person&lt;/strong&gt; to have the &lt;strong&gt;right access&lt;/strong&gt; to the &lt;strong&gt;right asset&lt;/strong&gt;.&lt;br&gt;
 &lt;br&gt;
For this purpose, we want to review a couple of &lt;strong&gt;authorization models&lt;/strong&gt; (ABAC and RBAC), and then explain how (and why) should you implement them using Open Policy Agent - which allows you to create a separate microservice for authorization, decoupling our policy from our code.&lt;br&gt;
⁠&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-why-abac-and-rbac"&gt;
  &lt;/a&gt;
  So why ABAC and RBAC?
&lt;/h2&gt;

&lt;p&gt;ABAC and RBAC are the two most basic and commonly used authorization models, and they provide the baseline for most other complex and specific ones. Let’s start by getting to know them a little better:&lt;br&gt;
⁠&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-rbac"&gt;
  &lt;/a&gt;
  What is RBAC?
&lt;/h2&gt;

&lt;p&gt;Role-based access control (RBAC), is an authorization model used to determine access control based on predefined roles. Permissions are assigned onto roles (Like “Admin or “User”), and roles are assigned to users by the administrator. This structure allows you to easily understand who has access to what.&lt;br&gt;
 &lt;br&gt;
The combination of three elements - &lt;strong&gt;who &lt;/strong&gt;(What role are they assigned?) can do &lt;strong&gt;what &lt;/strong&gt;(What actions are they allowed to perform) with a &lt;strong&gt;resource &lt;/strong&gt;(Which resources) is called a &lt;strong&gt;policy&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.permit.io/blog/implement-rbac-using-opa"&gt;⁠You can also check out our tutorial on implementing RBAC in OPA&lt;/a&gt;&lt;br&gt;
⁠&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-abac"&gt;
  &lt;/a&gt;
  What is ABAC?
&lt;/h2&gt;

&lt;p&gt;ABAC (Attribute-based access control), determines access based on a set of characteristics called &lt;strong&gt;“attributes”&lt;/strong&gt;, rather than roles. Attributes include parameters such as a user’s role, security clearance, time of access, current time, location of the data, current organizational threat levels, resource creation date or ownership, data sensitivity, etc.&lt;/p&gt;

&lt;p&gt;It's important to note that the attributes examined in ABAC are not just the user's - but of the accessed resource, the overall system, and anything else that is relevant in this context.&lt;/p&gt;

&lt;p&gt;ABAC based policies are based on a combination of four elements: &lt;strong&gt;Who &lt;/strong&gt;(The identity of the user) can do &lt;strong&gt;what &lt;/strong&gt;(What actions are they allowed to perform) with a &lt;strong&gt;resource &lt;/strong&gt;(Which resources) in what *&lt;em&gt;context *&lt;/em&gt;(What are the circumstances required for the action to be performed).&lt;br&gt;
⁠&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rbac-vs-abac"&gt;
  &lt;/a&gt;
  RBAC VS ABAC
&lt;/h2&gt;

&lt;p&gt;The choice between RBAC and ABAC depends on the needs of your organization -&lt;/p&gt;

&lt;p&gt;RBAC provides a rather simple solution for determining authorization. Having evolved from RBAC, ABAC provides a more in-depth approach for authorization needed in order to prevent unauthorized access. While requiring more processing power and time, ABAC provides a more complex and detailed authorization method factoring a much greater number of variables.&lt;/p&gt;

&lt;p&gt;In many cases, RBAC and ABAC can be used together hierarchically, with broad access enforced by RBAC protocols and more complex access managed by ABAC. That being said, it is important to choose relevant authorization methods tailored to your organization’s needs - so the authorization process is &lt;strong&gt;neither too simplistic nor too complex&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For the purpose of this post, we’ll assume you decided you want to set up your policies with ABAC. &lt;br&gt;
⁠&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-challenge-of-setting-up-policies-with-abac%C2%A0"&gt;
  &lt;/a&gt;
  The challenge of setting up policies with ABAC 
&lt;/h2&gt;

&lt;p&gt;In case you decided to set up your policies using ABAC, it is important to note the challenges you’ll have to face along the way:&lt;br&gt;
 &lt;/p&gt;

&lt;p&gt;The set of policies for each individual service has to be manually set up inside the service itself. This can be kind of a pain to do - as the amount of policies, users, and services grows, updating them in each relevant service becomes super tedious and time-consuming. Not only that, but considering the fact that policies change all the time - they have to be at least somewhat fluid.&lt;br&gt;
 &lt;br&gt;
Another issue can come from having the code of the authorization layer mixed in with the code of the application itself. This creates a situation where we struggle to upgrade, add capabilities and monitor the code as it is replicated between different microservices. Each change would require us to refactor large areas of code that only drift further from one another as these microservices develop. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So how can we solve these challenges? &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GrYUvxbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78n4tnnk9mvu18dt19dq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GrYUvxbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78n4tnnk9mvu18dt19dq.gif" alt="Plankton Safe" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By creating &lt;strong&gt;a separate microservice for authorization&lt;/strong&gt;, thus &lt;strong&gt;decoupling our policy from our code&lt;/strong&gt;. Controlling access management centrally through a separate authorization service allows you to offer it as a service to every system that needs to check whether a user can or cannot access its resources. This can be done by using &lt;a href="https://www.openpolicyagent.org/"&gt;Open Policy Agent&lt;/a&gt; (OPA). &lt;/p&gt;

&lt;p&gt;⁠&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-opa-gives-us"&gt;
  &lt;/a&gt;
  What OPA gives us?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;OPA unifies all policies across each individual service in one server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Takes on the role of policy decision-making and enforcement from the service: The service queries OPA, OPA makes a decision and sends an output to the service, The service acts according to OPA’s reply. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It allows you to have a policy as code, that can be easily reviewed, edited, and rolled back.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While we have a centralized authorization solution, the enforcement itself is still distributed - &lt;br&gt;
&lt;br&gt;
We have an OPA agent next to every microservice, providing decisions and enforcement with near-zero network latency. The OPA agents are distributed and can grow as the services scales. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Go3ckZbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vb9abkffzifew1fbpa2k.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Go3ckZbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vb9abkffzifew1fbpa2k.gif" alt="Spongebob Door" width="480" height="306"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⁠&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-implement-abac-in-opa"&gt;
  &lt;/a&gt;
  How to implement ABAC in OPA?
&lt;/h2&gt;

&lt;p&gt;With attribute-based access control, you make policy decisions using the attributes of users, objects, and actions involved in the request. For this we need three types of information:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Attributes for users&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Attributes for objects&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Logic dictating which attribute combinations are authorized&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, let’s take the following attributes for our users:&lt;br&gt;
&lt;code&gt;Squid&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Joined the company 10 years ago&lt;/li&gt;
&lt;li&gt;Is a cashier&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;Pat&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Joined the company 6 months ago&lt;/li&gt;
&lt;li&gt;Is a cashier &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We would also have attributes for the objects, in this case, menu items:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Burger&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is sold on the menu&lt;/li&gt;
&lt;li&gt;Costs 3$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;Shake&lt;/code&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is sold on the menu&lt;/li&gt;
&lt;li&gt;Costs 1$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we try and write up an example ABAC policy in English, it will look like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cashiers may process orders of up to 1$ total. &lt;/li&gt;
&lt;li&gt;Cashiers with more than 1 year of experience may process orders of up to 10$ total. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eUOfV1Rs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xyd3xrqjmcllu1ti4kl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eUOfV1Rs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xyd3xrqjmcllu1ti4kl.jpg" alt="Patrick" width="880" height="578"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⁠&lt;strong&gt;OPA supports ABAC policies as shown below:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package abac

# User attributes
user_attributes := {
    "Squid": {"tenure": 10, "title": "cashier"},
    "Pat": {"tenure": 0.000114155, "title": "cashier"}
}

# Menu attributes
menu_attributes := {
    "Burger": {"items": "Menu", "price": 3},
    "Shake": {"items": "Menu", "price": 1}
}

default allow = false

# All cashiers may process orders of up to 1$ total
allow {
    # Lookup the user's attributes
    user := user_attributes[input.user]
    # Check that the user is a cashier
    user.title == "cashier"
    # Check that the item being sold is on the menu
    menu_attributes[input.ticker].items == "Menu"
    # Check that the processed amount is under 1$
    input.amount &amp;lt;= 1

}

# Cashiers with 1=&amp;gt; year of experience may ⁠process orders of up to 10$ total.
allow {
    # Lookup the user's attributes
    user := user_attributes[input.user]
    # Check that the user is a cashier
    user.title == "cashier"

    # Check that the item being sold is on the menu
    menu_attributes[input.ticker].items == "Menu"
    # Check that the user has at least 1 year of experience
    user.tenure &amp;gt; 1
    # Check that the processed amount is under is under $10
    input.amount &amp;lt;= 10
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;⁠Now let’s review the following input:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "user": "Squid",
  "menu": "Burger",
  "action": "sell",
  "amount": 2
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;⁠Querying the allow rule with the input above returns the following answer: &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---YJvhKLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8a7x0zpey0deethmmm8q.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---YJvhKLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8a7x0zpey0deethmmm8q.gif" alt="Patrick Plank" width="540" height="304"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Congrats! You have successfully implemented RBAC in OPA! &lt;/strong&gt;&lt;br&gt;
⁠&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-sum-things-up"&gt;
  &lt;/a&gt;
  To sum things up:
&lt;/h2&gt;

&lt;p&gt;Let’s do a quick review of what we learned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;RBAC&lt;/strong&gt; is an authorization model based on &lt;strong&gt;predefined roles&lt;/strong&gt;, while &lt;strong&gt;ABAC&lt;/strong&gt; determines access based on a set of characteristics called &lt;strong&gt;“attributes”&lt;/strong&gt;. &lt;br&gt;
&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;While RBAC provides a rather simple solution for determining authorization that fits most organizations, ABAC is a more complex and detailed authorization method factoring in a much greater number of variables.&lt;br&gt;
&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is important to choose an authorization model that fits your organization's needs, so it’s &lt;strong&gt;neither too simple nor too complex&lt;/strong&gt;.&lt;br&gt;
&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The main challenges of setting up policies with RBAC are the requirement to manually set up the set of policies for each individual service, and having the code of the authorization layer mixed in with the code of the application itself. &lt;strong&gt;Both can be solved by using OPA&lt;/strong&gt;.&lt;br&gt;
&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OPA solves these issues by &lt;strong&gt;unifying all policies&lt;/strong&gt; in one server, &lt;strong&gt;taking on the role of policy decision-making and enforcement&lt;/strong&gt; from the service, and allowing you to manage &lt;strong&gt;policy as code&lt;/strong&gt;. &lt;br&gt;
&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We saw an example of how to &lt;strong&gt;successfully implement ABAC in OPA&lt;/strong&gt; :)&lt;br&gt;
&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;⁠Want to learn more? check out the rest of our &lt;a href="https://www.permit.io/blog"&gt;Blog&lt;/a&gt; for more useful tutorials, or join our ⁠&lt;a href="https://opal-access.slack.com/join/shared_invite/zt-nz6yjgnp-RlP9rtOPwO0n0aH_vLbmBQ#/shared-invite/email"&gt;Slack channel&lt;/a&gt; to ask questions and talk about authorization.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>authorization</category>
      <category>openpolicyagent</category>
      <category>abac</category>
    </item>
    <item>
      <title>First job at the age of 20.</title>
      <author>Mysterio</author>
      <pubDate>Mon, 17 Jan 2022 11:41:08 +0000</pubDate>
      <link>https://dev.to/shubhamtiwari909/first-job-at-the-age-of-20-1ol3</link>
      <guid>https://dev.to/shubhamtiwari909/first-job-at-the-age-of-20-1ol3</guid>
      <description>&lt;h4&gt;
  &lt;a href="#hello-guys-today-i-wanted-to-share-with-you-all-a-good-news-that-i-got-my-first-job-as-a-frontend-web-developer-at-the-age-of-20"&gt;
  &lt;/a&gt;
  Hello Guys today i wanted to share with you all a good news that i got my first job as a front-end web developer at the age of 20.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#i-worked-hard-and-learned-new-skills-time-to-time-and-finally-got-2-job-offers-in-web-development-field"&gt;
  &lt;/a&gt;
  I worked hard and learned new skills time to time and finally got 2 job offers in web development field.
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#i-am-sharing-the-path-and-tips-i-followed-to-get-to-the-level-i-am-today-on"&gt;
  &lt;/a&gt;
  I am sharing the path and tips i followed to get to the level i am today on.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#practice-the-basics-as-much-as-you-can-"&gt;
  &lt;/a&gt;
  Practice the Basics as much as you can -
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The base of the web development is HTML , CSS and JAVASCRIPT.
Try to practice these things as much as you can at the core levels Because the advance topics are related or combination of core topics and can only be understood if you are familiar with the basics. &lt;/li&gt;
&lt;li&gt;For the HTML part - try to practice the important tags as much as you can like p , h1-h6 , ol  and ul , div, etc and also semantic tags like main , section , header , footer.&lt;/li&gt;
&lt;li&gt;For the CSS part - get familiar with selectors , fonts styling , 
background , color(hex and rgb), positioning , images etc.&lt;/li&gt;
&lt;li&gt;For the JS part - get familiar with bsics like variables , datatypes , operators , conditional statement , loops , functions etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#then-move-on-to-the-intermediate-topics-"&gt;
  &lt;/a&gt;
  Then move on to the Intermediate topics -
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;For HTML - form , input , select , form attributes , script tag , input types , etc&lt;/li&gt;
&lt;li&gt;For CSS Part - Transition , animation , keyframes , filter , 
positioning etc.&lt;/li&gt;
&lt;li&gt;For JS part - Event handlers , DOM manipulation(Complete) , Styling css using js events , Error Handling , Date , Math , etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#then-move-on-to-the-advance-topics-"&gt;
  &lt;/a&gt;
  Then move on to the Advance topics -
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For CSS - Flex box , Grid , Media Queries and the remaining css properties.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For JS - Object oriented programming concepts(constructor , this , prototype , inheritance , abstraction , encapsulation , polymorphism) , Callbacks , Promises , Async and Await etc.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#create-some-projects-using-html-css-and-javascript"&gt;
  &lt;/a&gt;
  Create some projects  using  HTML , CSS and Javascript.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To-do list&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;background Color changer&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Calculator&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Static web page design with animations and transitions&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#then-move-on-to-advance-things-like-react-js-or-vue-js"&gt;
  &lt;/a&gt;
  Then move on to  advance things like  React js or Vue js
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I prefer  learning React js because it is fast and strong and has many options and code reusability  and the community is also very large so better support and also huge amount of libraries in react to simplify your work .&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The second option is Vue js it is also a good frontend framework but it is not trending yet and the community support and libraries are also smaller than React but its syntax and  code  is easier to learn and implement than React js.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#then-move-on-to-the-backend-part-if-you-wish-to"&gt;
  &lt;/a&gt;
  Then move on to the  backend  part if you wish to
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Node js  with express js .&lt;/li&gt;
&lt;li&gt;Mongo DB as a database .&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#resources-and-websites-to-learn-topics-"&gt;
  &lt;/a&gt;
  Resources and websites to  learn  topics  -
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/"&gt;https://www.w3schools.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.javatpoint.com/"&gt;https://www.javatpoint.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/"&gt;https://developer.mozilla.org/en-US/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ"&gt;https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UC80PWRj_ZU8Zu0HSMNVwKWw"&gt;https://www.youtube.com/channel/UC80PWRj_ZU8Zu0HSMNVwKWw&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also you can directly read the documents of the language you want to learn.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-this-post-and-if-you-find-any-mistake-or-wants-to-give-any-suggestion-please-mention-it-in-the-comment-section"&gt;
  &lt;/a&gt;
  THANK YOU FOR READING THIS POST AND IF YOU FIND ANY MISTAKE OR WANTS TO GIVE ANY SUGGESTION , PLEASE MENTION IT IN THE COMMENT SECTION.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#you-can-help-me-by-some-donation-at-the-link-below-thank-you-"&gt;
  &lt;/a&gt;
  ^^You can help me by some donation at the link below Thank you👇👇 ^^
&lt;/h2&gt;

&lt;p&gt;☕ --&amp;gt; &lt;a href="https://www.buymeacoffee.com/waaduheck"&gt;https://www.buymeacoffee.com/waaduheck&lt;/a&gt; &amp;lt;--&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#also-check-these-posts-as-well"&gt;
  &lt;/a&gt;
  Also check these posts as well
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/animation-with-react-spring-3k22"&gt;https://dev.to/shubhamtiwari909/animation-with-react-spring-3k22&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/text-to-speech-in-reactjs-52ml"&gt;https://dev.to/shubhamtiwari909/text-to-speech-in-reactjs-52ml&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/shubhamtiwari909/best-vs-code-extensions-for-web-development-2lk3"&gt;https://dev.to/shubhamtiwari909/best-vs-code-extensions-for-web-development-2lk3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>beginners</category>
      <category>productivity</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Day 80 of 100 Days of Code &amp; Scrum: Thinking of Learning MySQL or Flutter</title>
      <author>Rammina</author>
      <pubDate>Mon, 17 Jan 2022 11:38:29 +0000</pubDate>
      <link>https://dev.to/rammina/day-80-of-100-days-of-code-scrum-thinking-of-learning-mysql-or-flutter-1bbi</link>
      <guid>https://dev.to/rammina/day-80-of-100-days-of-code-scrum-thinking-of-learning-mysql-or-flutter-1bbi</guid>
      <description>&lt;p&gt;Happy new week, everyone!&lt;/p&gt;

&lt;p&gt;...I don't think anyone says "happy new week" but whatever.&lt;/p&gt;

&lt;p&gt;Today, I planned out my Weekly Sprint Goals. I intend to finish the Services pages for my &lt;a href="https://www.rammina.com"&gt;company website&lt;/a&gt;, then deploy them after fixing any bugs and cleaning up the styling for them. I also intend to continue learning Next.js, Scrum, and SWR. Lastly, I would like to learn new technologies, and I'm thinking of MySQL/postgreSQL or Flutter, but I will most likely do it if I have the extra time.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;Just like I do every weekend, I did my 11th Weekly Sprint Review and Retrospective, in which I went over what I've managed to do well, what my shortcomings were, and what I could do better in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;I set up my weekly Sprint Goals, which will focus on learning Next.js, Scrum, and SWR, updating my website, and maybe picking up another technology when I have the extra time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-sprint-goals"&gt;
  &lt;/a&gt;
  Weekly Sprint Goals
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#company-website"&gt;
  &lt;/a&gt;
  Company Website
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;finish building the Services pages for my &lt;a href="https://www.rammina.com"&gt;company website&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;deploy the updates after fixing any bugs and cleaning up the styling for them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;continue learning by reading the Next.js documentation.&lt;/li&gt;
&lt;li&gt;continue going through &lt;a href="https://www.udemy.com/course/nextjs-react-the-complete-guide/"&gt;Next.js &amp;amp; React by Maximilian Schwarzmüller&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;learn SWR and go through the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;continue to learn more about Scrum, through reading articles and watching videos.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#learn-new-skills"&gt;
  &lt;/a&gt;
  Learn New Skills
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If I have the extra time, I'm going to learn either MySQL/postgreSQL or Flutter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading! Have a good day!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/course/nextjs-react-the-complete-guide/"&gt;Next.js &amp;amp; React by Maximilian Schwarzmüller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/docs/getting-started"&gt;Next.js official documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swr.vercel.app/"&gt;SWR official documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h2&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://www.rammina.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-zilS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1638444046/rammina-button-128_x9ginu.png" alt="Rammina Logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>GraphQL Fundamentals: Hands-On</title>
      <author>Michael Bromley</author>
      <pubDate>Mon, 17 Jan 2022 11:16:52 +0000</pubDate>
      <link>https://dev.to/michlbrmly/graphql-fundamentals-hands-on-30lk</link>
      <guid>https://dev.to/michlbrmly/graphql-fundamentals-hands-on-30lk</guid>
      <description>&lt;p&gt;In this post we will explore some of the fundamental concepts of GraphQL in a hands-on way. The goal of this post is to allow the beginner to gain a familiarity with the basic features of GraphQL. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up"&gt;
  &lt;/a&gt;
  Setting up
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The best way to learn is to do&lt;/strong&gt;. So this tutorial will be light on theory and heavy on practical exercises. &lt;/p&gt;

&lt;p&gt;So we'll need a real graphql server to play with. Let's use &lt;a href="https://www.vendure.io"&gt;Vendure&lt;/a&gt;, an open-source GraphQL e-commerce framework. I chose Vendure because it is really easy to set up - all you need is to make sure you have &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; installed. Plus I built it so I know the API quite well 😉&lt;/p&gt;

&lt;p&gt;To install a local instance of Vendure, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx @vendure/create my-shop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and follow the prompts. Select SQLite and use the defaults for all other prompts. Installation should take about 5 minutes and then you'll have a full, production-grade GraphQL server pre-populated with sample data ready to play with! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ctIbbL7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlginhsfg9pvuhyq5333.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ctIbbL7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlginhsfg9pvuhyq5333.gif" alt="Installing the Vendure GraphQL server" width="800" height="561"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once installation is complete, open up &lt;a href="http://localhost:3000/shop-api"&gt;http://localhost:3000/shop-api&lt;/a&gt; in your browser. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: if you are unable to install Vendure locally for any reason (e.g. you are on a mobile device), you can still follow along with this article by using the public demo server at &lt;a href="https://demo.vendure.io/shop-api"&gt;demo.vendure.io/shop-api&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You should see the GraphQL Playground - an interactive interface for working directly with the GraphQL server. This is what we'll be using for all the exercises on this article. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pDd4Qk7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9mfosupk3zq5lhb5b4w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pDd4Qk7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9mfosupk3zq5lhb5b4w.png" alt="GraphQL Playground" width="880" height="617"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-first-query"&gt;
  &lt;/a&gt;
  Your first query
&lt;/h2&gt;

&lt;p&gt;GraphQL allows us to fetch data by sending &lt;em&gt;queries&lt;/em&gt;. Queries are similar to GET requests in a REST API. Let's write our first query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy this into the left pane of the playground and then press the play button. You should see the response in the right pane:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"product"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Congratulations! You executed your first graphql operation! &lt;/p&gt;

&lt;p&gt;What did we do here? Let's analyze each part of this. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;query&lt;/code&gt;: First of all we are declaring that we are making a &lt;em&gt;query&lt;/em&gt;. This is in contrast to a &lt;em&gt;mutation&lt;/em&gt; (which we will cover below). Technically you can omit that &lt;code&gt;query&lt;/code&gt; keyword, but we'll keep using it just to be more explicit.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;product&lt;/code&gt;: Next we are specifying the query we wish to use: &lt;em&gt;product&lt;/em&gt;. Each GraphQL server defines a set of possible queries. Since Vendure is an e-commerce server, it exposes queries related to products, orders, customers, etc. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;id: 1&lt;/code&gt;: We then pass an argument to our query, specifying the ID of the product we want to return. You can think of this very much like a function call. Just like function calls, GraphQL queries can take zero, one or more arguments. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;{ id, name }&lt;/code&gt;: We finally specify the fields we want to return. Fields are like &lt;em&gt;properties&lt;/em&gt; on a JavaScript object. In this case, we want to know just the ID and name of the product. &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#selecting-fields"&gt;
  &lt;/a&gt;
  Selecting fields
&lt;/h2&gt;

&lt;p&gt;One of the big benefits of GraphQL over REST APIs is that you can specify the exact data you need, and the server will return those &lt;em&gt;and only those&lt;/em&gt; fields. This means you can avoid sending too much data over the wire, leading to faster data transfer and lower bandwidth usage. &lt;/p&gt;

&lt;p&gt;Let's try adding some more fields to our query. Add the &lt;code&gt;slug&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; fields to the selection, and press the play button. You should see that these two new fields are added to the result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"product"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"slug"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"laptop"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Now equipped with seventh-generation Intel Core processors, ..."&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's try an experiment: what happens if we add a field to our selection that does not actually exist on our product. Try adding the field &lt;code&gt;age&lt;/code&gt;, and you'll get the following result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"errors"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Cannot query field &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;age&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; on type &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Product&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;. Did you mean &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"locations"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"line"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"column"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#schema-amp-types"&gt;
  &lt;/a&gt;
  Schema &amp;amp; Types
&lt;/h2&gt;

&lt;p&gt;This highlights another important property of GraphQL: it is &lt;em&gt;statically typed&lt;/em&gt;. That is to say, the exact fields available, and the types of data they can hold (strings, numbers, dates etc.) are explicitly defined in a &lt;strong&gt;schema&lt;/strong&gt;. The schema, in fact, defines all available queries and mutations, and the exact type of objects they can return. &lt;/p&gt;

&lt;p&gt;This is an extremely powerful property of GraphQL and allows things like auto-complete and automatic validation of data you send to the server.&lt;/p&gt;

&lt;p&gt;You have already seen the auto-complete as you typed the field names above. You can also see &lt;em&gt;all&lt;/em&gt; available fields on a given object by pressing &lt;code&gt;ctrl + space&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--95GAXfA---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x62cshbp26cpdmqlsfsi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--95GAXfA---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x62cshbp26cpdmqlsfsi.gif" alt="Autocomplete" width="800" height="564"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the bottom of the auto-complete popup, in orange text, you'll see the &lt;em&gt;type&lt;/em&gt; of that field. GraphQL types are analogous to &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Primitive"&gt;primitives&lt;/a&gt; in JavaScript, &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt; &amp;amp; &lt;code&gt;ID&lt;/code&gt;. In GraphQL these are known as &lt;em&gt;scalar types&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;When a field represents a more complex data type, GraphQL supports &lt;em&gt;object types&lt;/em&gt;. In fact, we've been working with an object type all along - the &lt;code&gt;Product&lt;/code&gt; object! That's right, &lt;em&gt;queries&lt;/em&gt; themselves have a type. In this case, the &lt;code&gt;product&lt;/code&gt; query has the type &lt;code&gt;Product&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;📖 &lt;em&gt;Reference: &lt;a href="https://graphql.org/learn/schema/#scalar-types"&gt;graphql.org Scalar Types&lt;/a&gt;, &lt;a href="https://graphql.org/learn/schema/#object-types-and-fields"&gt;graphql.org Object Types&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nested-objects"&gt;
  &lt;/a&gt;
  Nested Objects
&lt;/h2&gt;

&lt;p&gt;Another of the major benefits of GraphQL is that a single query allows you to fetch an object &lt;em&gt;plus nested relations&lt;/em&gt;. What would require several individual http requests using a REST API can be achieved in &lt;strong&gt;a single GraphQL query&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;To illustrate that, let's update our query to select all the variants of our Laptop product:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;variants&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;sku&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; 
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when we run this, we'll get the requested fields on &lt;em&gt;each&lt;/em&gt; of the laptop variants:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"product"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"slug"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"laptop"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Now equipped with seventh-generation Intel Core processors, ..."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"variants"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop 13 inch 8GB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"sku"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"L2201308"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;129900&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop 15 inch 8GB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"sku"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"L2201508"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;139900&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop 13 inch 16GB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"sku"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"L2201316"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;219900&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Laptop 15 inch 16GB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"sku"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"L2201516"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;229900&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In a REST API, we'd typically need to make 5 separate requests to get all that data - one for the product, and one for each of the 4 variants!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#handson-queries"&gt;
  &lt;/a&gt;
  Hands-on: Queries
&lt;/h2&gt;

&lt;p&gt;Now that we know the fundamental concepts of GraphQL queries, spend some time exploring the Vendure API! Use the &lt;code&gt;ctrl + space&lt;/code&gt; hotkey to bring up the available queries and their fields.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PpH9dUS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnfq4xdwqwws7mj6fbv0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PpH9dUS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnfq4xdwqwws7mj6fbv0.gif" alt="Exploring the available queries" width="800" height="564"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mutations"&gt;
  &lt;/a&gt;
  Mutations
&lt;/h2&gt;

&lt;p&gt;Mutations are the counterpart to queries, and as the name suggests, they are used to &lt;em&gt;mutate&lt;/em&gt; (change) data. Mutations are similar to POST or PUT requests in a REST API.&lt;/p&gt;

&lt;p&gt;Let's execute a mutation. Paste this into the left hand panel of the playground:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;mutation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;addItemToOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;productVariantId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Order&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;totalQuantity&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;totalWithTax&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ErrorResult&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;errorCode&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Press the play button and you'll see something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"addItemToOrder"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"state"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"AddingItems"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"totalQuantity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"totalWithTax"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;155880&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's once again break down each part of the mutation syntax:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;mutation&lt;/code&gt;: declares that we are dealing with a mutation as opposed to a query. Unlike with queries, this keyword is &lt;em&gt;not&lt;/em&gt; optional. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;addItemToOrder&lt;/code&gt;: the name of the mutation as declared by our schema. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;productVariantId: 1&lt;/code&gt;: like queries, mutations can (and usually do) take arguments. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;... on Order&lt;/code&gt;: this is known as an inline fragment. Since things might go wrong when adding an item to an order (e.g. insufficient stock), the mutation will return either an &lt;code&gt;Order&lt;/code&gt; object, or an &lt;code&gt;ErrorResult&lt;/code&gt; object. This syntax is like saying &lt;em&gt;"if it returns an Order, then give me the ID, state, totalQuantity &amp;amp; totalWithTax fields. If it returns an ErrorResult, then give me the errorCode and message fields."&lt;/em&gt; You can try this out by entering &lt;code&gt;quantity: -1&lt;/code&gt; and observing what happens.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you can see, mutations share all the same parts as a query. In fact, the only real difference is the &lt;code&gt;mutation&lt;/code&gt; keyword at the start. Just like with queries, they have arguments and they return a type. In this case the type is a combination of several object types (known in GraphQL as a &lt;em&gt;union&lt;/em&gt; type, a more advanced topic out of the scope of this tutorial). &lt;/p&gt;

&lt;p&gt;📖 &lt;em&gt;Reference: &lt;a href="https://graphql.org/learn/queries/#mutations"&gt;graphql.org Mutations&lt;/a&gt;, &lt;a href="https://graphql.org/learn/schema/#union-types"&gt;graphql.org Union Types&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#handson-mutations"&gt;
  &lt;/a&gt;
  Hands-on: Mutations
&lt;/h2&gt;

&lt;p&gt;Now you can explore for yourself how mutations work using the GraphQL playground. With the initial &lt;code&gt;mutation { }&lt;/code&gt; keyword in place, pressing &lt;code&gt;ctrl + space&lt;/code&gt; will now bring up auto-complete on all available mutations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RXC6NICJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1faoebkt45gmecvd9gps.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RXC6NICJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1faoebkt45gmecvd9gps.gif" alt="Exploring mutations" width="800" height="564"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here's a challenge for you:&lt;/strong&gt; see if you are able to successfully execute the &lt;code&gt;adjustOrderLine&lt;/code&gt; mutation in order to change the quantity of laptops in your order. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;In this post we've covered how to set up a full-featured GraphQL server using Vendure, and then learned the basics of queries and mutations. These two concepts form the basis of everything you'll be doing with GraphQL.&lt;/p&gt;

&lt;p&gt;But of course this is more that you can learn - fragments, interfaces, named operations, variables, aliases and more. If you like the style of this tutorial and would like to see a follow-up that takes the next step into these more advanced topics, please leave a comment below!&lt;/p&gt;

&lt;p&gt;And if you enjoyed working with Vendure - &lt;a href="https://github.com/vendure-ecommerce/vendure"&gt;check out the GitHub repo&lt;/a&gt; and leave a star! 🙏&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Django v4 Release Summary - Free Samples Included</title>
      <author>Sm0ke</author>
      <pubDate>Mon, 17 Jan 2022 11:16:26 +0000</pubDate>
      <link>https://dev.to/sm0ke/django-v4-release-summary-free-samples-included-4ekc</link>
      <guid>https://dev.to/sm0ke/django-v4-release-summary-free-samples-included-4ekc</guid>
      <description>&lt;p&gt;Hello Coders! &lt;/p&gt;

&lt;p&gt;This article is a quick overview over the latest release of Django Framework. In December 2021 &lt;strong&gt;Django Version 4&lt;/strong&gt; has been released with various upgrades to the framework, improvements, deprecations, and also a few breaking changes. At the end of the article a few OSS samples that use Django v4 are mentioned.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! &lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#release-highlights"&gt;
  &lt;/a&gt;
  Release highlights
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;zoneinfo&lt;/code&gt; default time zone&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this version the default &lt;code&gt;pytz&lt;/code&gt; time zone has been migrated to &lt;code&gt;zoneinfo&lt;/code&gt; &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Template-based form rendering&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;Forms&lt;/code&gt;, &lt;code&gt;Formsets&lt;/code&gt;, and &lt;code&gt;ErrorList&lt;/code&gt; are now rendered using the template engine to enhance customization.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;RedisCache&lt;/strong&gt; backend &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This feature provides built-in support for caching with Redis via &lt;code&gt;redis-py&lt;/code&gt; library&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;scrypt&lt;/code&gt; &lt;strong&gt;password hasher&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This new &lt;code&gt;password hasher&lt;/code&gt; is more secure compared to PBKDF2 (the default hashing algorithm before v4)&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#deprecated-features"&gt;
  &lt;/a&gt;
  Deprecated Features
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;PostgreSQL v9.6 &lt;code&gt;support dropped&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;PostgreSQL v9.6 and earlier are not supported by Django v4.0. Django v4.0 will only support PostgreSQL ≥v10.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Oracle v12.2 and 18c &lt;code&gt;support dropped&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Starting with Django 4, the Oracle version should be at least v19 or above. The Django team has officially removed support for Oracle versions 18c and earlier.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#breaking-changes"&gt;
  &lt;/a&gt;
  Breaking Changes
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;CSRF_TRUSTED_ORIGINS&lt;/code&gt; config parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Values in the &lt;a href="https://docs.djangoproject.com/en/4.0/ref/settings/#std:setting-CSRF_TRUSTED_ORIGINS"&gt;&lt;code&gt;CSRF_TRUSTED_ORIGINS&lt;/code&gt;&lt;/a&gt; setting must include the scheme (e.g. &lt;code&gt;'http://'&lt;/code&gt; or &lt;code&gt;'https://'&lt;/code&gt;) instead of only the hostname. Also, this might be required in the project configuration. &lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# settings.py sample (partial content)
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;ALLOWED_HOSTS&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'localhost:85'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'127.0.0.1'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;CSRF_TRUSTED_ORIGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'http://localhost:85'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'http://127.0.0.1'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;For curious minds I will mention a few &lt;code&gt;open-source&lt;/code&gt; starters released under the MIT license on Github already updated to Django  v4.1. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#django-bootstrap-5-volt"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-volt"&gt;Django Bootstrap 5 Volt&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Volt Dashboard is a free and open source Bootstrap 5 Admin Dashboard featuring over 100 components, 11 example pages and 3 plugins with Vanilla JS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/django-volt-dashboard"&gt;Django Bootstrap 5 Volt&lt;/a&gt; - Source Code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-volt-dashboard.appseed-srv1.com/"&gt;Django Bootstrap 5 Volt&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FZJ0VTwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owrzvmifbuw1s1dmgd29.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FZJ0VTwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owrzvmifbuw1s1dmgd29.jpg" alt="Django Bootstrap 5 Volt - Updated for Django version 4." width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#soft-ui-design-django"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/product/django-soft-ui-design-system"&gt;Soft UI Design Django&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Soft UI Design System is a Premium Bootstrap 5 UI Kit designed by Creative-Tim designed for those who like bold elements and beautiful websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/django-soft-ui-design"&gt;Soft UI Design Django&lt;/a&gt; - Source Code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-soft-ui-free.appseed-srv1.com/"&gt;Soft UI Design Django&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BaUU53MK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbexcjy2fa3e9c914zue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BaUU53MK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbexcjy2fa3e9c914zue.png" alt="Django Soft UI Design - Updated for Django version 4." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#datta-able-django"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/admin-dashboards/django-datta-able"&gt;Datta Able Django&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The design is a simple BS4 released under the MIT license. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/django-datta-able"&gt;Datta Able Django&lt;/a&gt; - Source Code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-datta-able.appseed-srv1.com/"&gt;Datta Able Django&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SF3A3NF3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ow4h4hg2hr8uf01jdk78.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SF3A3NF3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ow4h4hg2hr8uf01jdk78.jpg" alt="Django Datta Able - Updated for Django version 4." width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resource and support, feel free to access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ Get &lt;a href="https://appseed.us/support"&gt;support&lt;/a&gt; via email and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Free Dashboards&lt;/a&gt; crafted in Flask, &lt;strong&gt;Django&lt;/strong&gt;, and &lt;code&gt;React&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>django</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>python</category>
    </item>
    <item>
      <title>15 Recommended Books For Computer Science Students</title>
      <author>Astrodevil</author>
      <pubDate>Mon, 17 Jan 2022 10:53:51 +0000</pubDate>
      <link>https://dev.to/astrodevil/15-recommended-books-for-computer-science-students-32pl</link>
      <guid>https://dev.to/astrodevil/15-recommended-books-for-computer-science-students-32pl</guid>
      <description>&lt;p&gt;We are in the modern world where the digitization of education is already going on. Now lots of blogs, articles are there on the internet to learn from. But Book has its own value, the author puts his all knowledge experience and time to write one whole book. The knowledge and details you get from a book are very precious.&lt;/p&gt;

&lt;p&gt;In this article, I am going to discuss 15 Recommended Books For Computer Science Students&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-clean-code-a-handbook-of-agile-software-craftsmanship"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://amzn.to/3F96hkA"&gt;Clean Code: A Handbook of Agile Software Craftsmanship&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3F96hkA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGzwDG5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641891220161/uLyxG3zNT.jpeg" alt="cc.jpg" width="378" height="500"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Because it's more approachable, especially for inexperienced developers, Clean Code is one of the most regularly seen books on a programmer's desk. Clean Code focuses on tactical ideas, such as how to build classes and functions, rather than high-level procedures.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-head-first-java"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://amzn.to/3Fem9Ct"&gt;Head First Java&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3Fem9Ct"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ETB7emK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642410737622/8H298dREE.jpeg" alt="510l5fQkfoL.jpg" width="432" height="500"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Learning a difficult new language, especially an object-oriented computer programming language like Java, is no simple undertaking. You could believe the issue is with your mind. It appears to have its own mind, one that doesn't always want to take in the dry, technical information you're required to learn. This book is like bible for java beginners.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-java-the-complete-reference"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://amzn.to/3GCVnF8"&gt;Java: The Complete Reference&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3GCVnF8"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ye4rSAEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642411110679/WMXzl9Q-J.png" alt="image.png" width="500" height="275"&gt;&lt;br&gt;
&lt;/a&gt; &lt;br&gt;
In "Java: The Complete Reference, Eighth Edition," popular programming author Herb Schildt covers all you need to know about writing, building, debugging, and running Java programmes. This comprehensive volume covers the whole Java language, including syntax, keywords, and core programming concepts, and has been updated for Java Platform, Standard Edition 7 (Java SE 7). You'll also learn about the key components of the Java API library. Swing, JavaBeans, servlets, and applets are all addressed, with real-world examples to demonstrate how they function. Try-with-resources, strings in switch, type inference with the diamond operator, NIO.2, and the Fork/Join Framework are all covered in detail.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-cracking-the-coding-interview"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://amzn.to/3ftNW7l"&gt;Cracking the Coding Interview&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3ftNW7l"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pufESEKi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415984437/csfrM0fqU.png" alt="image.png" width="312" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Cracking the Coding Interview is well worth your time and money if you're ready to start interviewing with FAANG firms. Everything from the interview procedure to unique scenarios, pre-interview preparation to behavior questions, Big O to technical questions, and 189 real-world programming problems are covered.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-introduction-to-algorithms"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://amzn.to/3I8MDqM"&gt;Introduction to Algorithms&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3I8MDqM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ReAJNZMi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642411866958/BmiIkLEHg.png" alt="image.png" width="373" height="475"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This book examines a wide range of algorithms in depth while making their creation and analysis accessible to readers of all levels. Each chapter is self-contained and can be utilized as a study unit on its own. The algorithms are given in English and pseudocode that anyone who has done some programming may understand. Without losing the depth of information or mathematical rigor, the explanations have been kept simple.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-data-structures-and-algorithms-made-easy"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://amzn.to/3GEnUKs"&gt;Data Structures And Algorithms Made Easy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3GEnUKs"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZJ5irpL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415939523/K2h6xcVUK.png" alt="image.png" width="291" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;"Data Structures And Algorithms Made Easy: Data Structures and Algorithmic Puzzles" addresses questions about complex data structures and algorithms. Because each problem has several solutions and the book is written in C/C++, it may be used as an interview and test preparation tool for computer scientists.&lt;br&gt;
Easy Data Structures and Algorithms: Data Structures and Algorithmic Puzzles is a collection of solutions to a variety of difficult problems involving data structures and algorithms. Any expert in computer science will find it useful. It may be used as a reference manual for computer science professionals. This book will assist you in preparing for campus interviews, exams, and employment. In a word, this book presents solutions to a wide range of challenging data structures.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-the-algorithm-design-manual"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://amzn.to/3qzqrA1"&gt;The Algorithm Design Manual&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3qzqrA1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X46M8t3s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415902363/TzCVeT6QW.png" alt="image.png" width="299" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The "mystery" of building algorithms and measuring their usefulness and efficiency is removed in this substantially extended and updated third edition of the best-selling classic. The book currently serves as the fundamental textbook for algorithm design classes, while also serving as the foremost practical reference guide on algorithms for programmers, researchers, and students, with updates to the first and second editions.&lt;/p&gt;

&lt;p&gt;The user-friendly format The Algorithm Design Manual makes combinatorial algorithms technology accessible to anybody, with a focus on design rather than analysis. The first section, Techniques, explains how to develop and analyse computer algorithms in a clear and understandable manner. The second section, Resources, has a library of algorithmic resources, implementations, and a wide bibliography for browsing and reference.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-eloquent-javascript"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://amzn.to/3A7p6DR"&gt;Eloquent JavaScript&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3A7p6DR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--59-YLaNJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642413043180/IEVC-sVu4.png" alt="image.png" width="500" height="464"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Eloquent JavaScript goes beyond the cut-and-paste scripts found in recipe books to teach you how to write elegant and effective code. Variables, control structures, functions, and data structures are among the first programming concepts you'll study. After that, you'll dive into JavaScript's higher-order functions, closures, and object-oriented programming.&lt;/p&gt;

&lt;p&gt;You'll learn how to: Understand the principles of programming and best practises. By combining the capabilities of functional and object-oriented programming, regular expressions may be used to quickly analyse and edit text. Errors and browser incompatibilities should be handled compassionately. Handle browser events and DOM modifications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-let-us-c"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://amzn.to/3nzuWsx"&gt;Let Us C&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3nzuWsx"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LbEuTt0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415822343/HyKx24Kbc.png" alt="image.png" width="216" height="312"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The book's simplicity and storytelling style set it out from the packed shelves of C Programming books. These two characteristics have been present in all six prior versions of this book. Today's C programmer must not only learn the language's complexity and nuances, but also deal with its use in systems such as Windows and Linux. This book does an excellent job of covering all three areas of C programming.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-head-first-design-patterns"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://amzn.to/3qyzxNo"&gt;Head First Design Patterns&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3qyzxNo"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XclPfbC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415773733/Q_v0m-FWne.png" alt="image.png" width="359" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;This book teaches you the patterns that matter, when and why to use them, how to apply them to your own ideas, and the object-oriented design concepts that underpin them. Join the hundreds of thousands of developers who have used Head First Design Patterns to enhance their object-oriented design abilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-the-basics-of-bitcoins-and-blockchains"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://amzn.to/3FExyeS"&gt;The Basics of Bitcoins and Blockchains&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3FExyeS"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qsIb9Suy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642414306694/jfw2Yxacu.png" alt="image.png" width="269" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Learn about the history and fundamentals of cryptocurrencies and blockchains: There is a wealth of information available about bitcoin and blockchains. However, most of this information may be incomprehensible to the untrained. The Basics of Bitcoins and Blockchains seeks to give an easy-to-understand introduction to this new money and the groundbreaking technology that underlies it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-database-system-concepts"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://amzn.to/3nxBat8"&gt;Database System Concepts&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3nxBat8"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f8E8_TwC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642414662145/UaK8fkAyS.png" alt="image.png" width="312" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Database System Concepts is a classic and essential work in database education. It presents the fundamental concepts of database management in an easy-to-understand manner, allowing students to begin working with databases straight away.&lt;/p&gt;

&lt;p&gt;The text is aimed towards junior/senior undergraduate database courses or first-year graduate database courses. It also includes additional information that may be utilized as a supplement or as a prelude to a more advanced course.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-python-crash-course"&gt;
  &lt;/a&gt;
  13. &lt;a href="https://amzn.to/3A6wXkT"&gt;Python Crash Course&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3A6wXkT"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vOW729ow--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415222287/Q7V-MSOlq.png" alt="image.png" width="315" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Look no further if you need to learn Python as soon as possible. Python Crash Course is designed to get novice Python programmers up and running quickly.&lt;br&gt;
Learn the fundamentals of programming quickly using a project-based approach, so you can focus on what you want to build: websites, data visualization, online apps, or even programming a Raspberry Pi. Python Crash Course is the world's best-selling Python book.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14-designing-dataintensive-applications-the-big-ideas-behind-reliable-scalable-and-maintainable-systems"&gt;
  &lt;/a&gt;
  14. &lt;a href="https://amzn.to/3rsQeZQ"&gt;Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3rsQeZQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PDgFGVRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415371081/U60Ei_rpmE.png" alt="image.png" width="320" height="416"&gt;&lt;br&gt;
&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;"Foundations of data systems" provides an excellent overview of data systems. This section begins by discussing desired database qualities such as dependability, scalability, and maintainability. Database concepts such as the classic relational model, the document model, and graph-based models are investigated. The implementation of data storage and retrieval in databases is then thoroughly explained.&lt;br&gt;
You will learn about SStables, LSM trees, and B-Trees, as well as how they are employed in databases. Data warehousing and column-oriented databases are thoroughly discussed. The distinctions between OLTP and OLAP are presented in a tabular manner. There is a nice introduction to message brokers, protocolbuf, thrift, and avro.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-objectoriented-programming-with-c"&gt;
  &lt;/a&gt;
  15. &lt;a href="https://amzn.to/3GE7SjP"&gt;Object-Oriented Programming with C++&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3GE7SjP"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eqh9Df4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642415714814/sxl5Smsoz.png" alt="image.png" width="315" height="416"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The book's goal is to provide a comprehensive enrichment of knowledge in the domain of object-oriented programming using C++ as the implementation language. The author has utilized simple language to convey important principles of object-oriented programming and to aid readers' comprehension. The same ideas have been implemented in solved examples written in the C++ programming language. The book retains its original style of straightforward writing and includes plenty of solved examples, programming exercises, and additional practice problems.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#if-you-my-content-connect-me-on-twitter-or-supports-me-by-buying-me-a-coffee"&gt;
  &lt;/a&gt;
  If You ❤️ My Content! Connect Me on  &lt;a href="https://mobile.twitter.com/Astrodevil_"&gt;Twitter&lt;/a&gt; or Supports Me By Buying Me A Coffee☕👇🏼
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/Astrodevil"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rZDB_RRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-orange.png" alt="Buy Me A Coffee" width="545" height="153"&gt; &lt;/a&gt;&lt;/p&gt;

</description>
      <category>books</category>
      <category>beginners</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Stop rewarding quantity!</title>
      <author>Ingo Steinke</author>
      <pubDate>Mon, 17 Jan 2022 10:52:04 +0000</pubDate>
      <link>https://dev.to/ingosteinke/stop-rewarding-quantity-20o8</link>
      <guid>https://dev.to/ingosteinke/stop-rewarding-quantity-20o8</guid>
      <description>&lt;p&gt;I have received a DEV badge to honor consistency of writing, as I had published at least one post per week for eight weeks. Notifying me of the badge, &lt;a href="https://dev.to/devteam"&gt;DEV&lt;/a&gt; wants to encourage me to continue the streak and receive another badge for posting &lt;em&gt;something&lt;/em&gt; (&lt;strong&gt;anything&lt;/strong&gt;, actually) every week for another eight weeks. I could even write a bot who does that, and then I'll write another post featuring a codepen of my bot script.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-the-hype-about-consistency"&gt;
  &lt;/a&gt;
  What's the hype about consistency? 🪥
&lt;/h3&gt;

&lt;p&gt;After a thoughtful second, I decided to put the badge on my not-to-do-list.&lt;/p&gt;

&lt;p&gt;While building habits can help people to achieve their goals, I think that rewarding quantity is a step in the wrong direction (unless it's about brushing your teeth every day). Our society is already based on routine, making people drive to their 9-to-5-jobs in their cars day by day, so it feels like a genius "life hack" to replace some of our old routines by other, slightly less toxic ones, and "earning" imaginary badges in our habit tracking apps or gratefulness journals.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-could-post-a-rant-every-day-"&gt;
  &lt;/a&gt;
  I could post a rant every day ...
&lt;/h3&gt;

&lt;p&gt;For the sake of consistency of writing, I could also post a little rant about any annoying misfeature every day. I don't mean DEV misfeatures, but rather anything digital, Android, Apple, Google, Microsoft, JavaScript, or some bad idea a customer absolutely thinks I must develop that does not have proper native support in browsers. It won't be hard to publish something ungrateful every day.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-or-lower-my-standards-and-dont-finish-my-work"&gt;
  &lt;/a&gt;
  ... or lower my standards and don't finish my work
&lt;/h3&gt;

&lt;p&gt;Last, but not least, I could make less of an effort when researching and learning new features and make sure to release a new post every week no matter if I'm finished with what I set out to achieve. Just let the community correct my mistakes and fill in the blanks. DEV would reward the achieved &lt;em&gt;consistency&lt;/em&gt; with another badge in eight weeks from now, despite the decreased quality of my content.&lt;/p&gt;

&lt;p&gt;I can also split up my content in much smaller pieces to publish series, so instead of my conclusion, you'd get a cliff hanger quote to meditate about for another week.&lt;br&gt;
Sometimes that makes sense, but often, it does not.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#badges-are-pretty-pointless"&gt;
  &lt;/a&gt;
  Badges are pretty pointless 🏆
&lt;/h2&gt;

&lt;p&gt;As &lt;a href="https://dev.to/inhuofficial/my-writing-stats-for-2021-best-time-to-post-on-dev-and-plans-for-2022-2023-over-250-articles-planned-557l#badges"&gt;INHU pointed out&lt;/a&gt;, "badges are pretty pointless". Which might seem funny to hear from someone who set their own goals accouncing a huge quantity of new post in 2022.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/my-writing-stats-for-2021-best-time-to-post-on-dev-and-plans-for-2022-2023-over-250-articles-planned-557l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My writing stats for 2021, best time to post on DEV and plans for 2022-2023 [over 250 articles planned]&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ Jan 3 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#writing&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#1kto1mil&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Quantity allows no conclusion about quality. A continuously growing pile of bullshit is still a pile of bullshit. No personal offense: some people release a lot of content while providing high quality at the same time, and &lt;a class="mentioned-user" href="https://dev.to/inhuofficial"&gt;@inhuofficial&lt;/a&gt; is probably on of those people.&lt;/p&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/thormeier"&gt;@thormeier&lt;/a&gt; also seems to find it easy enough to deliver weekly content and use the writing process to push themselves beyond their comfort zone:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thormeier" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pl7xkg-8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--wbt3mQFY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/436259/00cde9af-e704-48b7-a00a-32cdc4997190.jpeg" alt="thormeier"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thormeier/how-15-years-of-writing-posts-on-devto-made-me-a-better-developer--25j4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How 1.5 years of writing posts on dev.to made me a better developer ✍️↔️🧑‍💻🚀&lt;/h2&gt;
      &lt;h3&gt;Pascal Thormeier ・ Jan 16 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;But while quality and quantity are unrelated in theory, often we have to decide to prioritize either one of them. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#side-effects-of-gamification"&gt;
  &lt;/a&gt;
  Side effects of gamification 💩💩💩
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Gamification"&gt;Gamification&lt;/a&gt; is a controversial approach to reward desired behavior, &lt;a href="https://holub.com/kpis-velocity-and-other-destructive-metrics/"&gt;risking to boost unwanted side effects instead&lt;/a&gt;. StackOverflow has been trying to build a "meritocracy" focused on high-quality technological discussions, but they are still &lt;a href="https://meta.stackoverflow.com/questions/262446/are-we-being-elitist-is-there-something-wrong-with-that"&gt;pretty far from reaching their goal&lt;/a&gt; in my opinion, often giving the impression of a gatekeeping community proud of their museum of outdated jQuery code snippets, but that doesn't mean it was wrong to try.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#irrelevant-clickbait-and-dangerous-advice"&gt;
  &lt;/a&gt;
  Irrelevant clickbait and dangerous advice
&lt;/h3&gt;

&lt;p&gt;DEV, as a very open-minded and &lt;a href="https://dev.to/code-of-conduct"&gt;welcoming online community&lt;/a&gt;, has proved a source of information, inspiration, discussion, and entertainment. But, besides many articles being irrelevant to me &lt;em&gt;personally&lt;/em&gt;, DEV also attracts a lot of dubious content with spammy headlines like &lt;strong&gt;"22 node modules / react plugins EVERY developer MUST know in 2022"&lt;/strong&gt; featuring copy-and-pasted half-knowledge, sometimes even giving risky advice contrary to established best-practice consensus.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-dev-a-victim-of-its-own-success"&gt;
  &lt;/a&gt;
  Is DEV a victim of its own success?
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/samuelfaure"&gt;@samuelfaure&lt;/a&gt;, who left Medium "after it became shit", elaborated on the problems that arise from popularity.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/samuelfaure" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m2v3LgxY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--UznEvYbA--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/260009/e299cfe5-54c7-449d-9b51-cfa2facee1c5.jpeg" alt="samuelfaure"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/samuelfaure/is-dev-to-victim-of-its-own-success-1ioj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Is Dev.to victim of its own success?&lt;/h2&gt;
      &lt;h3&gt;Samuel FAURE ・ Jul 6 '21 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#writing&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#meta&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;As DEV allows everyone to write to the best of their ability, which is a good thing, it is still a great benefit for the community to reward and promote outstanding quality content.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#promoting-outstanding-quality-content"&gt;
  &lt;/a&gt;
  Promoting outstanding quality content 🙏
&lt;/h3&gt;

&lt;p&gt;DEV already has topical hashtags and options to indicate the difficulty level, and they have a team that reads, awards and curates content. I can't thank them enough! Their helpfpul expertise and effort could never be achieved by an algorithm.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-hashtags-and-experience-level-as-filters"&gt;
  &lt;/a&gt;
  Using hashtags and experience level as filters
&lt;/h3&gt;

&lt;p&gt;Hashtags like &lt;code&gt;#beginners&lt;/code&gt; or &lt;code&gt;#javascript&lt;/code&gt; could be used to filter by personal preference and interests and help which content to feature on certain landing pages automatically. Maybe we could use an option to suggest changing hashtags or difficulty classifications of articles that we have read and find they are not tagged accordingly.&lt;/p&gt;

&lt;p&gt;But there is one simple change that might make much of a difference:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stop-rewarding-quantity"&gt;
  &lt;/a&gt;
  Stop rewarding quantity!
&lt;/h2&gt;

&lt;p&gt;Badges are nice, especially if someone wrote an article that got hand-picked into a best of the week or best topical write-up curation.&lt;/p&gt;

&lt;p&gt;But why would we want to reward consistency? I like to create high quality content, include working demo code and make sure my claims are factually correct and proved by authoritative citations. That benefits my readers, and it benefits my own learning process at the same time. That takes time to do properly, and we should rather take our time and release one good article per month instead of feeling obliged to deliver something every week.&lt;/p&gt;

&lt;p&gt;At least, that's my own opinion, also due to the fact that I see a growing number of articles on DEV that might have better been saved as a draft instead of being published in their current state.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--81YvqC0Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14kp6d8sxbzwk726p9iu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--81YvqC0Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14kp6d8sxbzwk726p9iu.png" alt="Collage of the 8-weak-streak badge, and emoji clip art graphic of a calendar with weekly checkmarks, a diamond, and a lot of poo pile characters" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Being tempted to release a half-baked post just to get on with a continuity streak, or release additional "inspirational" posts with calendar motto bullshit does not help to improve quality at all. DEV is neither StackOverflow nor Wikipedia, but it doesn't have to become the next LinkedIn or Medium either. There are already too many platforms promoting mediocre bulk content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prioritize-quality-over-quantity"&gt;
  &lt;/a&gt;
  Prioritize quality over quantity
&lt;/h2&gt;

&lt;p&gt;Let's take our time to finish well-written articles and don't let the hollow goal of a continuous streak divert us from prioritizing quality over quantity!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to get rid of Internet Explorer faster but carefully</title>
      <author>Matouš Borák</author>
      <pubDate>Mon, 17 Jan 2022 10:41:45 +0000</pubDate>
      <link>https://dev.to/nejremeslnici/how-to-get-rid-of-internet-explorer-faster-but-carefully-40bg</link>
      <guid>https://dev.to/nejremeslnici/how-to-get-rid-of-internet-explorer-faster-but-carefully-40bg</guid>
      <description>&lt;p&gt;Many web developers eagerly look forward to &lt;a href="https://docs.microsoft.com/en-us/lifecycle/faq/internet-explorer-microsoft-edge#what-is-the-lifecycle-policy-for-internet-explorer"&gt;Internet Explorer End of Life&lt;/a&gt;, scheduled on June 15th, 2022. We definitely do as well! Of course, this EOL date doesn’t mean that all IE users will be gone by then. But it will be OK to take IE into consideration even less when updating the site.&lt;/p&gt;

&lt;p&gt;Nevertheless, we’ve already set out that journey about a year ago:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we show an overlay popup to all IE users, asking them to switch:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gd2GN-nA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nixm67g3y1ulwoanj7p.png" alt="Internet Explorer popup" width="880" height="646"&gt;
&lt;/li&gt;
&lt;li&gt;throughout last year, we upgraded to &lt;a href="https://tailwindcss.com/docs/upgrading-to-v2#support-for-ie-11-has-been-dropped"&gt;Tailwind 2&lt;/a&gt; and &lt;a href="https://github.com/hotwired/stimulus/releases/tag/v3.0.0-beta.1"&gt;Stimulus 3&lt;/a&gt; even though both frameworks drop official support for IE,&lt;/li&gt;
&lt;li&gt;we still use a few IE-related polyfills that solve the biggest issues, but only for the most critical use cases,&lt;/li&gt;
&lt;li&gt;and we generally don’t test newly built features in IE any more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(For more details about our previous IE-related measures, see our &lt;a href="https://dev.to/nejremeslnici/upgrade-to-stimulus-3-say-bye-to-ie11-and-celebrate-b7g"&gt;last post&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;Since then, we saw a clear trend: relative IE usage dropped from 1.7% in January 2021 down to ~0.5% in early November. Still, we were thinking: could we help this trend even more? Our site is a marketplace connecting customers with various craftspeople. We observed that almost all IE visits were from our customers, especially first-time visitors. We knew our customers were often not very tech-savvy and we couldn’t expect them to migrate to a newer browser unless the experience was really seamless. So, could we still help them make the switch somehow? Turns out we could!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-need-microsoft-edge-list"&gt;
  &lt;/a&gt;
  The ”Need Microsoft Edge List“
&lt;/h2&gt;

&lt;p&gt;A nice migration process is actually &lt;strong&gt;offered by Microsoft itself&lt;/strong&gt; although the feature can be harder to find. Microsoft keeps an official list of websites that want their users to switch from IE to Edge. Windows systems periodically download this file and take care of the migration process on the sites listed there.&lt;/p&gt;

&lt;p&gt;The list is called &lt;strong&gt;&lt;a href="https://docs.microsoft.com/en-us/microsoft-edge/web-platform/ie-to-microsoft-edge-redirection"&gt;IE Compatibility List&lt;/a&gt;&lt;/strong&gt; and the process to get there is both surprising and lovely — because very old-school and manual 😍:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;as a prerequisite, you need to show a message to your IE visitors on your web, asking them to switch,&lt;/li&gt;
&lt;li&gt;then you can officially &lt;a href="https://docs.microsoft.com/en-us/microsoft-edge/web-platform/ie-to-microsoft-edge-redirection#request-an-update-to-the-ie-compatibility-list"&gt;request&lt;/a&gt; Microsoft to add your site to the list; you do that by sending a free-form email including the required information,&lt;/li&gt;
&lt;li&gt;a human replies (in our case it was Kelly, hi! 👋) to confirm your request or clarify details,&lt;/li&gt;
&lt;li&gt;the same person takes care of you during the whole time and informs you about the progress,&lt;/li&gt;
&lt;li&gt;about a week later, your site is added to the &lt;a href="https://edge.microsoft.com/neededge/v1"&gt;list itself&lt;/a&gt; and starts being recognized by Windows immediately.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From now on, when a user visits your site with IE, he or she is &lt;strong&gt;redirected to the Edge browser&lt;/strong&gt; and a localized explanation pops up. Most importantly, all bookmarks, settings, cookies and passwords are &lt;strong&gt;automatically transferred&lt;/strong&gt; so everything works just the same as in IE (but better).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FgedkA_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mwpta2lpr39pviclld4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FgedkA_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mwpta2lpr39pviclld4.png" alt="IE to Edge migration" width="880" height="628"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-effect"&gt;
  &lt;/a&gt;
  The effect
&lt;/h2&gt;

&lt;p&gt;Of course we were very curious how effective this IE compatibility list was. Our analytics data shows that the number of IE visits &lt;strong&gt;dropped to half of the previous numbers&lt;/strong&gt; within a few days after the addition to the list.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NRccN5WA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ez8k8gwj087smvqc57j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NRccN5WA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ez8k8gwj087smvqc57j.png" alt="Effect of the IE compatibility list" width="880" height="118"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s great! Using the official list, we were able to migrate even many first-time visitors and the relative proportion of IE visits dropped to ~0.2%. Still, as can be seen in the chart, there are a few IE visitors left, making around one hundred visits per week. We guess these are users of very old and long-time-not-updated Windows systems who must experience increasingly serious problems accessing the internet overall… We are sorry about that but we believe we did all we could. So, good luck to all and see you in better browser times!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>ie</category>
      <category>browser</category>
      <category>edge</category>
    </item>
    <item>
      <title>What is .env ? How to Set up and test a .env file in Node?</title>
      <author>nermineslimane</author>
      <pubDate>Mon, 17 Jan 2022 10:30:31 +0000</pubDate>
      <link>https://dev.to/nermineslimane/what-is-env-how-to-set-up-and-test-a-env-file-in-node-18bl</link>
      <guid>https://dev.to/nermineslimane/what-is-env-how-to-set-up-and-test-a-env-file-in-node-18bl</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-are-environment-variables-"&gt;
  &lt;/a&gt;
  What are environment variables ?
&lt;/h2&gt;

&lt;p&gt;Environment variables offer information on the process's operating environment (producton, development, build pipeline, and so on). Environment variables in Node are used to store sensitive data such as passwords, API credentials, and other information that should not be written directly in code. Environment variables must be used to configure any variables or configuration details that may differ between environments.&lt;/p&gt;

&lt;p&gt;Environment variables are already included in the Node.js ecosystem, which gives them a significant benefit over alternative configuration choices such as a config.js or config.json file. Environment variables, especially when used in conjunction with automation, such as a build pipeline, allow you to avoid doing unpleasant things like scripting configuration files.&lt;/p&gt;

&lt;p&gt;Now let's dive in some coding and practice !&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-set-up-and-read-a-env-file-"&gt;
  &lt;/a&gt;
  How to Set up and read a .env file ?
&lt;/h2&gt;

&lt;p&gt;The dotenv package for handling environment variables is the most popular option in the Node.js community. You can create an.env file in the application's root directory that contains key/value pairs defining the project's required environment variables. The dotenv library reads this.env file and appends it to process.env. Please do not save your.env file on your computer.&lt;/p&gt;

&lt;p&gt;In five easy steps, we'll update.gitignore, create a.env file, and read it:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add .env to gitignore &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ivjSWsHX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8g18ljfiwnzbgij33x84.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ivjSWsHX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8g18ljfiwnzbgij33x84.png" alt="Image description" width="406" height="111"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Commit the changes to your repository
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .gitignore
git commit -m "Adding .env to .gitignore"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Install npm package &lt;a href="https://www.npmjs.com/package/dotenv"&gt;&lt;code&gt;dotenv&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;It's time to use our env variables&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Add some variable to your .env file, for exemple we're going to add a status for our nodejs app and define two different ports, one for development status and one for production &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eR_2y69p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8dhw6zxqs0czsyel6hy1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eR_2y69p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8dhw6zxqs0czsyel6hy1.png" alt="Image description" width="328" height="130"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then in our entry point we're testing if the &lt;code&gt;STATUS&lt;/code&gt;is production we're going to use the &lt;code&gt;PROD_PORT&lt;/code&gt; else we're using the &lt;code&gt;DEV_PORT&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T7uZnBle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfus3kwiabm7m59e50mt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T7uZnBle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfus3kwiabm7m59e50mt.png" alt="Image description" width="832" height="196"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run the application
Change the status variable in your .env and see what happens &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uCS_a9KM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ampvva436evn5ds1eurt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uCS_a9KM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ampvva436evn5ds1eurt.png" alt="Image description" width="461" height="76"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is excellent practice to document the.env file with an example. The.env file should be particular to the environment and not checked into version control. This.env.example file documents the application's necessary variables and can be committed to version control. This serves as a helpful reference and speeds up the onboarding process for new team members by reducing the amount of time spent digging through the coding to figure out what needs to be set up.&lt;/p&gt;

&lt;p&gt;This is an example of a .env.example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Environment variables.
STATUS=production
#Development port
DEV_PORT=7000
#Production port
PROD_PORT=8000

#DB CONFIG
HOST=db.host
USER=root
PASSWORD=db.password
DB=db.name
DIALECT=mysql

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for reading and if you have any questions, use the comment function !&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
