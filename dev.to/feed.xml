<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Hello World In Dart</title>
      <author>Kinanee Samson</author>
      <pubDate>Wed, 20 Oct 2021 11:49:16 +0000</pubDate>
      <link>https://dev.to/kalashin1/hello-world-in-dart-2efe</link>
      <guid>https://dev.to/kalashin1/hello-world-in-dart-2efe</guid>
      <description>&lt;p&gt;Dart, a statically typed programming language that was invented and released by Google in October 10, 2011. It was originally created to replace JavaScript in the browser, me and you know that the last part of the statement hasn't really happened yet. However this does not mean that Dart is a lame programming language with no use. Dart found solace with flutter. The flutter framework for cross-platform mobile app development uses Dart as it's programming language. Flutter with Dart really abstracts away most of the complexity encountered when building cross-platform applications. With Flutter and Dart, you can write your code once and be sure it will be compiled to run on the web, mobile and even desktop. The goal of today's article is to get you to start using Dart as developer with experience in another language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;To install dart visit this &lt;a href="https://dart.dev/get-dart"&gt;address&lt;/a&gt; to install the recommended version for your operating system. This installation ships with the dart compiler and a dart2js compiler. The dart2js compiler&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-dart"&gt;
  &lt;/a&gt;
  What is Dart?
&lt;/h2&gt;

&lt;p&gt;Dart as a programming language is a compiled and statically typed language asynchronous programming language, it bears a similar syntax to some statically typed languages like &lt;code&gt;typescript&lt;/code&gt;, if you are used to writing TypeScript code you will pick up Dart much faster because they look alike a lot. Dart code can be compiled to an executable binary that can be run on a PC if the need be or you can use the &lt;code&gt;dart2js&lt;/code&gt; compiler that comes baked with Dart programming language to compile your Dart code to JavaScript, the dart2js compiler transpiles dart code to JavaScript code. Which most browsers can run.&lt;/p&gt;

&lt;p&gt;By being a statically typed language this implies that the type of value a variable can store is specified before run time, once the variable has been annotated with that type, storing a different type of value inside that variable will lead to errors, since Dart has good support across most IDE/Text editors you will be hinted about the error before you compile your code. Dart is an Object Oriented Programming language and also functional programming. Let's write some Dart code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hello world"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// hello world&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Every Dart code is expected to have a main function that serves as the entry point where the application will begin execution, although we could have other functions nested inside the main function or outside of it, however the main function is always required for every application we build with dart. We use the &lt;code&gt;print&lt;/code&gt; function to log out a message on the console. Commenting works very much like in other C family of languages, let's see how we can create variables.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#variables-in-dart"&gt;
  &lt;/a&gt;
  Variables In Dart
&lt;/h3&gt;

&lt;p&gt;There are reserved keyword for creating variable in dart just like in other language some of them you will have encountered if you have worked with JavaScript in the past. When a variable is declared in Dart, the type of the variable can be explicitly declared by annotating the variable with it's type or you can let Dart to automatically infer the type of value stored in the variable to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'samson'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// samson&lt;/span&gt;
  &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// not possible&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;var&lt;/code&gt; keyword in dart is used to declare a variable and automatically infer the type of the value to the variable. In the code block above, storing an integer inside the name variable will throw an error because dart has auto inferred the &lt;code&gt;String&lt;/code&gt; type to the variable hence, it can only store strings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'John'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;taxRate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.10&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;isAdult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By annotating the variable with a type it ensures that all future assignment of values to that variable will only be considered as legit if the type value matches the one specified when we created the variable. Above we saw some of the built in types in Dart, but it is not limited to those ones above. Let's look at other variable declaration keywords.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;dynamic&lt;/span&gt; &lt;span class="n"&gt;canHoldAnyType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'sam'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;canHoldAnyType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="c1"&gt;// Run time constant&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;birthYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1997&lt;/span&gt; &lt;span class="c1"&gt;// Compile time constant&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;dynamic&lt;/code&gt; keyword let's us bypass type checking for a particular variable enabling us to store different types of values inside the variable. The &lt;code&gt;final&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; keyword are used to store create constants, the &lt;code&gt;const&lt;/code&gt; keyword allows one to create a constant that will evaluated at compile time, before our code is run, while the final keyword creates run time constant, i.e a constant that while our code is currently executing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lists"&gt;
  &lt;/a&gt;
  Lists
&lt;/h2&gt;

&lt;p&gt;Dart has &lt;code&gt;List&lt;/code&gt; for handling series of data in a collection, since Dart also supports generics like TypeScript so we can strongly type an array to expect only a specific type of values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'sam'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'frodo'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'pipin'&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;otherNames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'TAA'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'AOC'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'AWB'&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="c1"&gt;// otherNames cannot store integers&lt;/span&gt;
    &lt;span class="n"&gt;otherNames&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Will throw an error in IDE&lt;/span&gt;
    &lt;span class="n"&gt;otherNames&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'SKA'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Add an item to a list&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;// sam&lt;/span&gt;
    &lt;span class="n"&gt;otherNames&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;remove&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'AWB'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Remove an item from a list&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sets"&gt;
  &lt;/a&gt;
  Sets
&lt;/h2&gt;

&lt;p&gt;Dart also supports sets, sets are like array but they ensure that each item inside them are unique. It is often useful when we want to create an array that stores unique items.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;Set&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'AWB'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'TAA'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"AOC"&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;

  &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'SKA'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// add an item&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// { AWB, TAA, AOC, SKA }&lt;/span&gt;
  &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;remove&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'AWB'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// remove an item&lt;/span&gt;
  &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'SKA'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// will be ignored&lt;/span&gt;

  &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;elementAt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// get an element at an index&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// { TAA, AOC, SKA }&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#control-flow"&gt;
  &lt;/a&gt;
  Control Flow
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#conditionals"&gt;
  &lt;/a&gt;
  Conditionals
&lt;/h3&gt;

&lt;p&gt;We handle conditional statements in Dart much like we do in other languages, however let's see a use case.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;manin&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'You are an adult'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Not for children'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You could also do switch statements as demonstrated below;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;team&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Liverpool'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;team&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;'Liverpool'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Reds!'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;'Chelsea'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Blues'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Citizens'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#loops"&gt;
  &lt;/a&gt;
  Loops
&lt;/h3&gt;

&lt;p&gt;Dart supports both &lt;code&gt;for&lt;/code&gt; loop and &lt;code&gt;while&lt;/code&gt; loop, as demonstrated below;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="n"&gt;List&lt;/span&gt; &lt;span class="n"&gt;ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;

  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ids&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ids&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ids&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ids&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#functions"&gt;
  &lt;/a&gt;
  Functions
&lt;/h2&gt;

&lt;p&gt;Dart like any other programming language supports functional programming, and as such we can create higher order functions, e.g pass functions as arguments to other functions, return a function from another function and lot's more. The main function which we must have in all our dart application is a typical example of a function. The return type of a functions can also be strongly typed including the arguments that the function expects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="c1"&gt;// function name&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;adder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;makeAdderFunc&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;adder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// functions accepting other functions as argument&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;


&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;addNums&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numA&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numB&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;numA&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;numB&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;makeAdderFunc&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;addNums&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// returning a function from another function&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dart supports anonymous functions and arrow functions just like in other languages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;List&lt;/span&gt; &lt;span class="n"&gt;oddNums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="c1"&gt;// anonymous functions&lt;/span&gt;
  &lt;span class="n"&gt;oddNums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forEach&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;oddNums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forEach&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;});&lt;/span&gt;
  &lt;span class="c1"&gt;// OR arrow functions&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;oddNums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can pass in optional arguments in dart using two methods, We can wrap the optional parameter inside square brackets or we can use named Parameters. Named parameters are similar to using object destructuring in JavaScript. If we use named parameters then each argument passed in should  be named to match the parameters name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;makeAdder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 6 &lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;makeAdder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 4&lt;/span&gt;

  &lt;span class="c1"&gt;// named parameters&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;makeAdder2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;a:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;b:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 5&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;makeAdder2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;a:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 4&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// square brackets&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;makeAdder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]){&lt;/span&gt; &lt;span class="c1"&gt;// using square brackets&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;makeAdder2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nl"&gt;b:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;}){&lt;/span&gt; &lt;span class="c1"&gt;// using named parameters&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#oop-in-dart"&gt;
  &lt;/a&gt;
  OOP in Dart
&lt;/h2&gt;

&lt;p&gt;since Dart is an Oriented Language, we can work with classes to create complex objects from classes, dart supports encapsulation, polymorphism, abstraction and inheritance all out of the box.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="n"&gt;sam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Kalashin'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;Admin&lt;/span&gt; &lt;span class="n"&gt;superAdmin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Admin&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'super'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;sam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getProfile&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// { 'Name': 'Kalashin', 'Age': 23}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;_name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;getProfile&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'Name'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Age'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;age&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Admin&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;Admin&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt;&lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;class&lt;/code&gt; keyword is used to create a new class, we all know that all every class requires a constructor to instantiate the class, in Dart the constructor bears the same name as the class, that's why the &lt;code&gt;Person&lt;/code&gt; class has a method named after it likewise the &lt;code&gt;Admin&lt;/code&gt; class has a method named after it. That is it's own constructor. However since it is inheriting from the &lt;code&gt;Person&lt;/code&gt; class it calls &lt;code&gt;super&lt;/code&gt; which is a reference to the parent class that it is inheriting from. In Dart there are no access modifiers but if we declare a property/variable with the underscore character &lt;code&gt;_&lt;/code&gt; it is private to it's class or library. There is no need to call the new keyword when instantiating a class, we can just invoke the class like a function. In dart everything we can store inside a variable is treated as an Object including functions too.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getters-and-setters"&gt;
  &lt;/a&gt;
  Getters And Setters
&lt;/h3&gt;

&lt;p&gt;We can use getters and setters to get and set the value for a private property on a class. Getters don't require a parameter list so we omit the parenthesis right after the name of the getter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;Person&lt;/span&gt; &lt;span class="n"&gt;sam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Kalashin'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Kalashin&lt;/span&gt;
  &lt;span class="n"&gt;sam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Samson'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Samson&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;_name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dart looks a lot like JavaScript albeit with some few exceptions, this article was designed to beginner friendly for JavaScript developers, I do hope to cover more advanced topics in Dart as we go along. If you are familiar with Dart and I forgot to include something you think is relevant for beginners then feel free to share below, if you are looking for a more comprehensive approach then check this &lt;a href="https://dart.dev/guides/language/language-tour"&gt;article&lt;/a&gt;, you can also checkout this &lt;a href="https://youtu.be/7sJZi0grFR4"&gt;video&lt;/a&gt; to get started. Thanks for reading hope you learnt something new.&lt;/p&gt;

</description>
      <category>dart</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>10 Flutter tips - season 2 - part 1/10</title>
      <author>Tomic Riedel 💙</author>
      <pubDate>Wed, 20 Oct 2021 11:13:55 +0000</pubDate>
      <link>https://dev.to/tomicriedel/10-flutter-tips-season-2-part-110-336d</link>
      <guid>https://dev.to/tomicriedel/10-flutter-tips-season-2-part-110-336d</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hki-uUuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtxji25q6bo3r1l3p683.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hki-uUuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtxji25q6bo3r1l3p683.png" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
 After the last part of the 1st season was published, there was actually no plan to do a second season, but you asked for it and here it is.&lt;/p&gt;

&lt;p&gt;We are looking at websites, packages, GitHub repositories, widgets, extensions and much more in the second season, so I recommend you to follow me now not to miss this!&lt;/p&gt;

&lt;p&gt;Then I hope you enjoy the 1st part of the second season,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy Reading!&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#flutter-carplay"&gt;
  &lt;/a&gt;
  Flutter Carplay
&lt;/h3&gt;

&lt;p&gt;Meanwhile it is in the hype, Flutter Carplay. You can use it to develop an app in Flutter that will &lt;strong&gt;work on Apple Carplay&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jOk-D9oe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/54781138/131184549-3cb62678-ad3f-4d67-85fb-1410bd05eaff.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOk-D9oe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/54781138/131184549-3cb62678-ad3f-4d67-85fb-1410bd05eaff.gif" alt="https://user-images.githubusercontent.com/54781138/131184549-3cb62678-ad3f-4d67-85fb-1410bd05eaff.gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#scribble"&gt;
  &lt;/a&gt;
  Scribble
&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://pub.dev/packages/scribble"&gt;scribble&lt;/a&gt; is a simple package that &lt;strong&gt;allows you to draw&lt;/strong&gt;. It reacts to changes in pressure, supports different thicknesses of a stroke and much more.&lt;/p&gt;

&lt;p&gt;It is still under development, but it is constantly getting new features and already has the most important features.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iGihcgs1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/timcreatedit/scribble/raw/master/scribble_demo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iGihcgs1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/timcreatedit/scribble/raw/master/scribble_demo.gif" alt="https://github.com/timcreatedit/scribble/raw/master/scribble_demo.gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#badges"&gt;
  &lt;/a&gt;
  Badges
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="http://pub.dev/packages/badges"&gt;Package&lt;/a&gt; badges is used to &lt;strong&gt;add a badge to any widget&lt;/strong&gt;. This can be a number to indicate how many items you have in your cart or how many new messages you have, but it can also be used to indicate a warning, for example with an exclamation mark, or a new feature with "NEW". As you can see, the possibilities are almost endless.&lt;/p&gt;

&lt;p&gt;The great thing is that it is very easy to use. You just need to wrap your widget with the "Badge" widget and then specify the badeContent, for example a text. Here is an example of it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Badge&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;badgeContent:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'3'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hPs45wgg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/yadaniil/flutter_badges/master/images/logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hPs45wgg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/yadaniil/flutter_badges/master/images/logo.png" alt="https://raw.githubusercontent.com/yadaniil/flutter_badges/master/images/logo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pinput"&gt;
  &lt;/a&gt;
  Pinput
&lt;/h3&gt;

&lt;p&gt;pinput is used to &lt;strong&gt;create a pin code input&lt;/strong&gt; where each pixel is customizable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s3sqnOg---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/Tkko/Flutter_PinPut/master/example/media/pin_put_demo_3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s3sqnOg---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/Tkko/Flutter_PinPut/master/example/media/pin_put_demo_3.gif" alt="https://raw.githubusercontent.com/Tkko/Flutter_PinPut/master/example/media/pin_put_demo_3.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flutter-blurhash"&gt;
  &lt;/a&gt;
  Flutter Blurhash
&lt;/h3&gt;

&lt;p&gt;This &lt;a href="https://pub.dev/packages/flutter_blurhash"&gt;Package&lt;/a&gt; is for adding a &lt;strong&gt;blur effect to an image&lt;/strong&gt;. The blurhash is the code that specifies how your image will look blured. To get this code you need to go to &lt;a href="https://blurha.sh/"&gt;https://blurha.sh/&lt;/a&gt; and paste your image there. Here is a visual example of how this works:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gRy8aHzo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1295961/75059847-129d6800-54de-11ea-8832-d19ea58eb7eb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gRy8aHzo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1295961/75059847-129d6800-54de-11ea-8832-d19ea58eb7eb.png" alt="https://user-images.githubusercontent.com/1295961/75059847-129d6800-54de-11ea-8832-d19ea58eb7eb.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now to insert your blurhash you have to implement the following in your flutter code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BlurHashAppextendsStatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nf"&gt;BlurHashApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;MaterialApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;home:&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;title:&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"BlurHash"&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;SizedBox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;expand&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;AspectRatio&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;aspectRatio:&lt;/span&gt; &lt;span class="mf"&gt;1.6&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;BlurHash&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;hash:&lt;/span&gt; &lt;span class="s"&gt;"L5H2EC=PM+yV0g-mq.wG9c010J}I"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bottom-bar-with-sheet"&gt;
  &lt;/a&gt;
  Bottom Bar with Sheet
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://pub.dev/packages/bottom_bar_with_sheet"&gt;bottom_bar_with_sheet&lt;/a&gt; is a normal bottom bar, but it provides a very useful functionality. Sometimes you want to have more space on your screen, but how do you do it? Well, quite simple: with this nav bar you can &lt;strong&gt;pull up a "second screen"&lt;/strong&gt;/sheet and by doing so you get much more space. Here is a small example how it could look like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xctO2ely--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/Frezyx/bottom_bar_with_sheet/master/example/rep_files/examples/main.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xctO2ely--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/Frezyx/bottom_bar_with_sheet/master/example/rep_files/examples/main.gif" alt="https://raw.githubusercontent.com/Frezyx/bottom_bar_with_sheet/master/example/rep_files/examples/main.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How do you implement this? Well, you just write the following code in your scaffold:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nl"&gt;bottomNavigationBar:&lt;/span&gt; &lt;span class="n"&gt;BottomBarWithSheet&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;selectedIndex:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;sheetChild:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Place for your another content"&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
        &lt;span class="nl"&gt;bottomBarTheme:&lt;/span&gt; &lt;span class="n"&gt;BottomBarTheme&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;mainButtonPosition:&lt;/span&gt; &lt;span class="n"&gt;MainButtonPosition&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;middle&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;selectedItemBackgroundColor:&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xFF2B65E3&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;mainActionButtonTheme:&lt;/span&gt; &lt;span class="n"&gt;MainActionButtonTheme&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;size:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;color:&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xFF2B65E3&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;white&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;size:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;onSelectItem:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'item &lt;/span&gt;&lt;span class="si"&gt;$index&lt;/span&gt;&lt;span class="s"&gt; was pressed'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;items:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
          &lt;span class="n"&gt;BottomBarWithSheetItem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;people&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="n"&gt;BottomBarWithSheetItem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shopping_cart&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="n"&gt;BottomBarWithSheetItem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="n"&gt;BottomBarWithSheetItem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;favorite&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;],&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looks a bit complex, but it is not. The package has a great readme file that explains everything in detail.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#string-validator"&gt;
  &lt;/a&gt;
  String Validator
&lt;/h2&gt;

&lt;p&gt;This package has already saved me a lot of time. &lt;a href="http://pub.dev/packages/string_validator"&gt;string_validator&lt;/a&gt; is there to &lt;strong&gt;validate a string&lt;/strong&gt; (who would have thought it). It doesn't sound that exciting, but if you look at how &lt;strong&gt;many possibilities&lt;/strong&gt; there are to validate a string with this package, then it belongs in almost every Flutter project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IvHoR2j---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e8eea90b-f32b-44ac-b99a-8dcf43008dd7/Screenshot_2021-10-20_at_09.55.17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IvHoR2j---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e8eea90b-f32b-44ac-b99a-8dcf43008dd7/Screenshot_2021-10-20_at_09.55.17.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e8eea90b-f32b-44ac-b99a-8dcf43008dd7/Screenshot_2021-10-20_at_09.55.17.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GuMNwFZQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/17383206-255d-4f2d-ace9-e2d59dcd9bae/Untitled.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GuMNwFZQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/17383206-255d-4f2d-ace9-e2d59dcd9bae/Untitled.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/17383206-255d-4f2d-ace9-e2d59dcd9bae/Untitled.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flutter-gen"&gt;
  &lt;/a&gt;
  Flutter gen
&lt;/h2&gt;

&lt;p&gt;This &lt;a href="http://pub.dev/packages/flutter_gen"&gt;tool&lt;/a&gt; is very useful. We all know that string based APIs are &lt;strong&gt;not the most secure&lt;/strong&gt;. If you insert a single character incorrectly, the whole string will stop working. The problem is that you use sting apis very often in Flutter. Assets, fonts, colors... Flutter gen is there to solve this problem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oZpF0GDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/55102ebe-b168-4cd2-9093-7e44c3bb230e/Screenshot_2021-10-20_at_10.01.47.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZpF0GDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-us-west-2.amazonaws.com/secure.notion-static.com/55102ebe-b168-4cd2-9093-7e44c3bb230e/Screenshot_2021-10-20_at_10.01.47.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/55102ebe-b168-4cd2-9093-7e44c3bb230e/Screenshot_2021-10-20_at_10.01.47.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a bit complicated to set up, but well worth it and you should use it in every project!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photo-view"&gt;
  &lt;/a&gt;
  Photo View
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://pub.dev/packages/photo_view"&gt;photo_view&lt;/a&gt; is a very simple but useful package. When you display a photo, you also want to be able &lt;strong&gt;to zoom in and out and other things&lt;/strong&gt;. Just wrap your image with the PhotoView widget and you are done.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nd"&gt;@override&lt;/span&gt;
&lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="nf"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;PhotoView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;imageProvider:&lt;/span&gt; &lt;span class="n"&gt;AssetImage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"assets/large-image.jpg"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rj6Psbiu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/6718144/56463745-45ec0380-63b0-11e9-8e56-0dba5deabb1a.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rj6Psbiu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/6718144/56463745-45ec0380-63b0-11e9-8e56-0dba5deabb1a.gif" alt="https://user-images.githubusercontent.com/6718144/56463745-45ec0380-63b0-11e9-8e56-0dba5deabb1a.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also create a gallery of photos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wakelock"&gt;
  &lt;/a&gt;
  Wakelock
&lt;/h2&gt;

&lt;p&gt;If the user has set it, then the screen goes off after a certain time and the phone locks itself. But this is sometimes very annoying, because a process is running in the app or something else. With this simple &lt;a href="https://pub.dev/packages/wakelock"&gt;plugin&lt;/a&gt; you can &lt;strong&gt;prevent the phone from locking itself automatically&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:wakelock/wakelock.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// The following lines of code toggle the wakelock based on a bool value.&lt;/span&gt;
&lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// The following statement enables the wakelock.&lt;/span&gt;
&lt;span class="n"&gt;Wakelock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;enable:&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// The following statement disables the wakelock.&lt;/span&gt;
&lt;span class="n"&gt;Wakelock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;enable:&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// If you want to retrieve the current wakelock status,&lt;/span&gt;
&lt;span class="c1"&gt;// you will have to be in an async scope&lt;/span&gt;
&lt;span class="c1"&gt;// to await the future returned by `enabled`.&lt;/span&gt;
&lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;wakelockEnabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;Wakelock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Now we have reached the end of the first part of the second season.&lt;/p&gt;

&lt;p&gt;I am looking forward to the next parts. If you liked something very much or if you didn't like something that I could improve, I would be very happy if you let me know so that I can improve.&lt;/p&gt;

&lt;p&gt;If you liked the tips, I would also be happy about some claps and very happy about a follow, so you don't miss the next parts of this series!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Have a great day, thanks for reading!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
    </item>
    <item>
      <title>.NET MAUI is HERE! 3 NEW Features that will blow your mind 🤯</title>
      <author>Dotnetsafer</author>
      <pubDate>Wed, 20 Oct 2021 11:10:08 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/net-maui-is-here-3-new-features-that-will-blow-your-mind-ngp</link>
      <guid>https://dev.to/dotnetsafer/net-maui-is-here-3-new-features-that-will-blow-your-mind-ngp</guid>
      <description>&lt;p&gt;.NET MAUI is a &lt;strong&gt;framework&lt;/strong&gt; for .NET Core and ASP.NET Core MVC applications which can be used in &lt;strong&gt;cross-platform development&lt;/strong&gt; and in building complex web applications.&lt;/p&gt;

&lt;p&gt;.NET MAUI was created by &lt;strong&gt;Microsoft&lt;/strong&gt; to take care of all the things that developers usually need to do themselves, such as managing HTTP requests, setting up routing logic, handling errors and more. So that they can &lt;strong&gt;focus on what’s important:&lt;/strong&gt; building an application that does something useful for their customers.&lt;/p&gt;

&lt;p&gt;In the latest preview, Microsoft showed three new features about .NET MAUI that &lt;strong&gt;will blow your mind&lt;/strong&gt; 👇&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#updated-controls"&gt;
  &lt;/a&gt;
  ✨Updated Controls
&lt;/h2&gt;

&lt;p&gt;Microsoft has changed the implementations of numerous controls in this new .NET MAUI version, which is a &lt;strong&gt;significant improvement.&lt;/strong&gt; Let’s look at the most important ones.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boxview"&gt;
  &lt;/a&gt;
  📦 BoxView
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;BoxView&lt;/code&gt; is a &lt;strong&gt;basic rectangle&lt;/strong&gt; with a given width, height, and color. It could be used for &lt;code&gt;BoxView&lt;/code&gt; decorating, basic graphics, and touch interaction with the user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0guolCii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5heueta2wsukni92sxt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0guolCii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5heueta2wsukni92sxt.png" alt="BoxView (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#indicatorview"&gt;
  &lt;/a&gt;
  📐IndicatorView
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;IndicatorView&lt;/code&gt; is a &lt;strong&gt;control&lt;/strong&gt; that shows indications in a &lt;code&gt;CarrouselView&lt;/code&gt; that reflect the number of items and the current position:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PRMdh-bL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fw384qzxqx38huqfs1kz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PRMdh-bL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fw384qzxqx38huqfs1kz.png" alt="IndicatorView control (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#imagebutton"&gt;
  &lt;/a&gt;
  📷 ImageButton
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;ImageButton&lt;/code&gt; view has the ability to &lt;strong&gt;combine&lt;/strong&gt; the &lt;strong&gt;Button&lt;/strong&gt; and &lt;strong&gt;Image views&lt;/strong&gt; to produce a button with an image as its content. To command the program to do a certain activity, the user &lt;strong&gt;pushes&lt;/strong&gt; the &lt;code&gt;ImageButton&lt;/code&gt; with their finger or clicks it with their mouse. The &lt;code&gt;ImageButton&lt;/code&gt; view, unlike the Button view, has no idea of text and text appearance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MJXH3uXK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1zhx6fp979rlvn76c5ps.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MJXH3uXK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1zhx6fp979rlvn76c5ps.png" alt="ImageButton (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#webview"&gt;
  &lt;/a&gt;
  💻 WebView
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;WebView&lt;/code&gt; renders any online or embedded HTML material using the platform’s native browser control; suitable for displaying markup that is more complicated than the subset of HTML supported by &lt;code&gt;Label&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R-JHHnzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i55sirhkys3f2e1khnfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-JHHnzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i55sirhkys3f2e1khnfl.png" alt="New .NET MAUI WebView (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#shadows-corners-and-borders"&gt;
  &lt;/a&gt;
  🔲 Shadows, corners, and borders
&lt;/h2&gt;

&lt;p&gt;Here we have &lt;code&gt;Microsoft.Maui.Graphics&lt;/code&gt; library, that offers an &lt;em&gt;+uniform UI&lt;/em&gt;* drawing API based on native graphics engines, &lt;strong&gt;allowing&lt;/strong&gt; us to &lt;strong&gt;quickly add&lt;/strong&gt; borders, corner rendering, and gorgeous shadows to nearly any .NET MAUI layout or control.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CwysQKek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpp0bcak5m0ioom9c647.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CwysQKek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpp0bcak5m0ioom9c647.png" alt="Corners and borders in .NET MAUI (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Microsoft presents a new &lt;code&gt;Border&lt;/code&gt; control. It can be wrapped around any layout or control to offer borders and independent corner control. This controls are available in &lt;strong&gt;WPF, UWP, Silverlight&lt;/strong&gt;, and the most recent &lt;strong&gt;Windows App SDK styles.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this &lt;a href="https://devblogs.microsoft.com/dotnet/announcing-net-maui-preview-9/"&gt;Microsoft example&lt;/a&gt;, we can see how they added the &lt;strong&gt;stroke&lt;/strong&gt; and &lt;strong&gt;rounded&lt;/strong&gt; the top-left and bottom-right &lt;strong&gt;corners&lt;/strong&gt; by wrapping a border checks around the counter label this template 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Border&lt;/span&gt; 
    &lt;span class="n"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Row&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;
    &lt;span class="n"&gt;Padding&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"16,8"&lt;/span&gt;
    &lt;span class="n"&gt;Stroke&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{StaticResource PrimaryBrush}"&lt;/span&gt;
    &lt;span class="n"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#2B0B98"&lt;/span&gt;
    &lt;span class="n"&gt;StrokeThickness&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt;
    &lt;span class="n"&gt;HorizontalOptions&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Center"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Border&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StrokeShape&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;RoundRectangle&lt;/span&gt; &lt;span class="n"&gt;CornerRadius&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"40,0,0,40"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Border&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StrokeShape&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt; 
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;".NET MAUI Preview: 9"&lt;/span&gt;                
        &lt;span class="n"&gt;FontSize&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"18"&lt;/span&gt;
        &lt;span class="n"&gt;FontAttributes&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Bold"&lt;/span&gt;
        &lt;span class="n"&gt;TextColor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"White"&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"CounterLabel"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Border&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The specified shape’s corner radius accepts a &lt;code&gt;Thickness&lt;/code&gt; type value, allowing separate &lt;strong&gt;control&lt;/strong&gt; of each of the rectangle’s &lt;em&gt;+four corners:&lt;/em&gt;* bottom-left, bottom-right, top-left and top-right.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;border control&lt;/strong&gt; creates a wraparound view element around a single piece of content, allowing you to &lt;strong&gt;customize the background&lt;/strong&gt; color and padding. There are several more attributes that may be used to modify the border’s stroke, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeLineCap:&lt;/strong&gt; is a form that appears at the end of a line.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeDashOffset:&lt;/strong&gt; is the distance between the dots in the dash pattern.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeMiterLimit:&lt;/strong&gt; set the miter length ratio to half of the stroke thickness.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeLineJoin:&lt;/strong&gt; a type of vertices join.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;StrokeDashArray:&lt;/strong&gt; a dash and gap pattern in the stroke.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Are you ready to give your user interface some &lt;strong&gt;depth&lt;/strong&gt;? Any layout or control, including pictures and objects, can be given with &lt;code&gt;Shadow&lt;/code&gt; 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Shadow&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Shadow&lt;/span&gt; &lt;span class="n"&gt;Brush&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#000000"&lt;/span&gt; 
                &lt;span class="n"&gt;Offset&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"20,20"&lt;/span&gt;
                &lt;span class="n"&gt;Radius&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"40"&lt;/span&gt;
                &lt;span class="n"&gt;Opacity&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.8"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Shadow&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the result 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MqNtAV9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68fjxr7as02y5eal90w4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqNtAV9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68fjxr7as02y5eal90w4.png" alt="Shadows in .NET MAUI (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#android-quick-start"&gt;
  &lt;/a&gt;
  🚄 Android Quick Start
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Ahead-of-time&lt;/strong&gt; (AOT) compilation &lt;strong&gt;improves the speed&lt;/strong&gt; with which your Android applications can code start. If you’re trying to stay below the wifi installation bar, full AOT may make your application artifacts larger than you want.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Startup tracing&lt;/strong&gt; is the solution in this case. We may balance performance and space by partially AOT’ing only the sections of your program that are run at startup.&lt;/p&gt;

&lt;p&gt;The following are the &lt;strong&gt;results&lt;/strong&gt; of device testing on the &lt;strong&gt;Pixel 5:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UaPBu-Up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/po6nrkq7ne6ace854oeo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UaPBu-Up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/po6nrkq7ne6ace854oeo.png" alt="Microsoft Benchmark on Pixel 5 (By. Dotnetsafer)"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ecosystem-controls"&gt;
  &lt;/a&gt;
  🔰 Ecosystem Controls
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://community.devexpress.com/blogs/mobile/archive/2021/09/30/net-maui-free-early-access-preview-of-data-editors-and-more-for-mobile-development-v21-2.aspx"&gt;DevExpress&lt;/a&gt;, &lt;a href="https://www.syncfusion.com/blogs/post/introducing-the-first-set-of-syncfusion-net-maui-controls.aspx"&gt;Syncfusion&lt;/a&gt;, and &lt;a href="https://www.telerik.com/maui-ui"&gt;Telerik&lt;/a&gt; have all recently released new sets of controls for.NET MAUI that take use of Microsoft’s strong graphics capabilities. Maui.Graphics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yVNIsGaw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50e8he74owjy8z9q736r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yVNIsGaw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50e8he74owjy8z9q736r.png" alt="Ecosystem Controls (By. Microsoft)"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#do-you-want-a-gift"&gt;
  &lt;/a&gt;
  🎁 Do you want a gift?
&lt;/h2&gt;

&lt;p&gt;Just for entering this article and making it this far, I’m GIVING you a &lt;strong&gt;GIFT&lt;/strong&gt; of a &lt;strong&gt;GUIDE&lt;/strong&gt; to keeping your &lt;strong&gt;.NET applications secure&lt;/strong&gt; 🎁.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KQuuSh2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09cnn5pfmylevlvymslj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KQuuSh2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09cnn5pfmylevlvymslj.png" alt=".NET security guide FREE (By. Dotnetsafer)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The ONLY thing you have to do is &lt;strong&gt;enter your email&lt;/strong&gt; to receive it for &lt;strong&gt;FREE&lt;/strong&gt;🤑.&lt;/p&gt;

&lt;p&gt;🚨&lt;strong&gt;This won’t be around forever.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To maintain exclusivity, I’ll be editing the article soon and &lt;strong&gt;there will no longer be a gift&lt;/strong&gt;. So HURRY UP and get your guide to becoming a .NET security expert! 👇👇👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dotnetsafer220122.typeform.com/to/qefAo3WO?utm_source=netmauiishere&amp;amp;utm_medium=devto&amp;amp;utm_campaign=xxxxx&amp;amp;utm_term=xxxxx&amp;amp;utm_content=xxxxx"&gt;Get your guide for FREE&lt;/a&gt;&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>netcore</category>
      <category>netmaui</category>
    </item>
    <item>
      <title>Top 5 Mobile App Marketing Tools</title>
      <author>Gegosoft SEO Services</author>
      <pubDate>Wed, 20 Oct 2021 10:48:01 +0000</pubDate>
      <link>https://dev.to/gegosoftseo/top-5-mobile-app-marketing-tools-42db</link>
      <guid>https://dev.to/gegosoftseo/top-5-mobile-app-marketing-tools-42db</guid>
      <description>&lt;p&gt;In the latest study report suggests that global consumers are actually spending 25 per cent of their time on mobile phones or handheld devices, while key businesses are only allocating 12 per cent of their advertisement budgets wholly towards mobile advertising. Thereby there is an immense difference when it comes to customer behaviour and how organizations market to the customers. The vital Businesses that adapt to these changes would see more amount of money streaming in.&lt;/p&gt;

&lt;p&gt;More importantly, the businesses require discovering ways in which they could enhance the mobile experience of global users. They require using app marketing tools that could assist them to step up the engagement of global customers in mobile devices across several platforms, channels, and kinds of operating systems (OSs). Many popular Mobile App Marketing Agency also utilizes the best tools and unique strategies to achieve an important goal. Moreover, you can utilize mobile app marketing tools to get all of your app marketing purposes. Below is the list of top app marketing tools.&lt;/p&gt;

&lt;p&gt;How Best Apptentive Works for You&lt;br&gt;
It was adeptly created to make it easy for firms to develop stronger relationships with their customers. It is found that most tools were either reactive or pushy. They wished to utilize software to develop enjoyable experiences for companies to not only start conversations with their clients, but also actually listen to them, react quickly and accordingly, and use insights attained to develop more customer-centric skills.&lt;/p&gt;

&lt;p&gt;Top Tool Apptentitive&lt;br&gt;&lt;br&gt;
This tool solution comprises shifts in emotion from consumer experience to get back customers and highly activates fans at scale. They are using machine-powered knowledge and more specific targeting. It helps business brands to capture actionable sentiments and reviews from 90 per cent of customer voices actually missed and immediately converts that feedback into action.&lt;/p&gt;

&lt;p&gt;How Localytics Perform Better&lt;br&gt;
Their key purpose is to set people at the core of brands’ digital engagement offering personalization and benefits in all activities. They professionally aspire to be the secret behind the digital businesses that adeptly brands which have with their prospective clients, assisting them to develop strong, more kind of successful associations.&lt;/p&gt;

&lt;p&gt;Few globes’ top known names, comprising Bose, HSN, The Weather Channel, and Comcast actually use quality Localytics to do what everyone understands is much possible. Primarily there is a no different solution that has been able to solve like how to use intelligence and data to make every client feel applauded and valued.&lt;/p&gt;

&lt;p&gt;The Quality Stream of Tapstream&lt;br&gt;
The biggest apps wholly depend on Tapstream to scale and optimize their app marketing. It assists app creators in all verticals understand who their top loyal users are, where they are actually from, and how to actually get more users like them.&lt;/p&gt;

&lt;p&gt;This tool cuts down all metrics on a per-campaign basis. You can view the firm’s engagement, actual conversion rate, and LTV for every channel. It is possible to actively measure how LTV varies between virally acquired users, highly competing for mobile ad networks, and even several social sites. All this data is illustrated in a simple cohort examination report, presenting Tapstream’s dashboard your new top friend. In addition, Tapstream quality campaigns will also enumerate in iTunes Connect App Analytics.&lt;/p&gt;

&lt;p&gt;Most Famous Tool of Google AdMob&lt;br&gt;
This tool effectively makes getting revenue easy with in-app install ads, actionable insights, and reliable, simple to use tools that ameliorate your app business. Primarily they are one of the largest global advertising networks, it could fulfil their ad requests from everywhere in the globe. You can perfectly maximize the value of every pattern across all the quality systems with the latest monetization technology. This tool helps in transforming the hard work into absolute earnings from around the globe with traits like multiple currency support, top fill rates, and kind of country-level mediation.&lt;/p&gt;

&lt;p&gt;Why You Should Select AppsFlyer&lt;br&gt;
This tool provides a need for that where you can drive your top marketing success. Because a business can only trust its marketing outputs if it’s absolutely confident with the data input, this tool professionally works hard to bring the perfect attribution data within the familiar industry. It also permits you as a marketer or business owner to actively attribute every touchpoint within the passionate user journey. The more perfect accuracy of the data guarantees that marketers could deliver reliable results.&lt;/p&gt;

&lt;p&gt;The platform permits you to actively engage your customers or users where and when it wholly matters most. Moreover, you can actually measure ad spend as well as respective app engagement so that you identify your top marketing ROI; also you can protect the ad spend against mobile fraud utilizing tools offered in the platform. This tool offers numerous tools that business owners and marketers can utilize, comprising OneLink that assists with link building, Protect 360 that wholly prevents fraud in mobile ads and global Audiences, which assists segment and managing audiences from a central point. Thereby this tool comes with a marketing stack of tools to ameliorate performance in marketing and advertising.&lt;/p&gt;

</description>
      <category>android</category>
      <category>ios</category>
      <category>python</category>
      <category>java</category>
    </item>
    <item>
      <title>PASSWORD GENERATOR using HTML, CSS, and Javascript</title>
      <author>Divyamcm</author>
      <pubDate>Wed, 20 Oct 2021 10:44:35 +0000</pubDate>
      <link>https://dev.to/divyamcm/password-generator-using-html-css-and-javascript-3a0c</link>
      <guid>https://dev.to/divyamcm/password-generator-using-html-css-and-javascript-3a0c</guid>
      <description>&lt;p&gt;==================================================&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I0QIFUj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1477039181047-efb4357d01bd%3Fixlib%3Drb-1.2.1%26ixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26auto%3Dformat%26fit%3Dcrop%26w%3D1470%26q%3D80" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I0QIFUj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1477039181047-efb4357d01bd%3Fixlib%3Drb-1.2.1%26ixid%3DMnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8%26auto%3Dformat%26fit%3Dcrop%26w%3D1470%26q%3D80" alt=""&gt;&lt;/a&gt;Photo by &lt;a href="https://unsplash.com/@markusspiske?utm_source=medium&amp;amp;utm_medium=referral"&gt;Markus Spiske&lt;/a&gt; on &lt;a href="https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dear Reader,&lt;/p&gt;

&lt;p&gt;Let’s build a password generator which generate passwords of different lengths and which can include or exclude special characters in the generated passwords based on user selection. This is going to be simple. Stay with me till the end. 🔐&lt;/p&gt;

&lt;p&gt;Folder structure:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;em&gt;index.html — contains the HTML layout which defines the element structure that would be shown on the page.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt; &lt;em&gt;style.css- contains CSS code for styling. Using CSS we can style the different portions to make them more visually appealing.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt; &lt;em&gt;script.js — contains Javascript code where all the functions are placed.&lt;/em&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#html-layout"&gt;
  &lt;/a&gt;
  HTML Layout
&lt;/h1&gt;

&lt;p&gt;Open VSCode and create the basic HTML structure in an &lt;strong&gt;index.html&lt;/strong&gt; file by pressing ! and then pressing tab. Give the &lt;strong&gt;title&lt;/strong&gt; as ‘&lt;strong&gt;Password Generator&lt;/strong&gt;’. Link &lt;strong&gt;style.css&lt;/strong&gt; and &lt;strong&gt;script.js&lt;/strong&gt; to the created HTML file and link &lt;strong&gt;FontAwesome&lt;/strong&gt; CSS to use icons*&lt;em&gt;.&lt;/em&gt;*&lt;/p&gt;

&lt;p&gt;Generate Password Button: Create &lt;strong&gt;button&lt;/strong&gt; inside &lt;strong&gt;div&lt;/strong&gt; class &lt;strong&gt;wrapper&lt;/strong&gt; clicking on which we will generate the password. Add &lt;code&gt;&amp;lt;i class=”fab fa-keycdn”&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt; to display icon.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button id="generate" class="action-btn"&amp;gt;Generate Password &amp;lt;i class="fab fa-keycdn"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Slider to select length: Add one more div class &lt;strong&gt;slider_main&lt;/strong&gt; inside &lt;strong&gt;wrapper class .slider_main&lt;/strong&gt; class contains the slider which is used to select the length of the password. The  min, max and the initial  value is set and the selected value using slider will be displayed in the &lt;strong&gt;output&lt;/strong&gt; section.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="slider\_main"&amp;gt;
 &amp;lt;input type="range" value="8" min="1" max="25" class="slider"oninput="this.nextElementSibling.value = this.value" id="slider"&amp;gt;
 &amp;lt;output&amp;gt;8&amp;lt;/output&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Checkbox to include special characters: Add an &lt;strong&gt;input&lt;/strong&gt; tag of type &lt;strong&gt;checkbox&lt;/strong&gt;, on checking we will include special characters in the password, and on unchecking we will remove special characters from password.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;label class="container" style="font-family: fantasy;color: rgb(3, 3, 3);"&amp;gt;Include special characters
            &amp;lt;input type="checkbox" checked="checked" id="checkbox"&amp;gt;
            &amp;lt;span class="checkmark"&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;/label&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Password display and copy button: Add a &lt;strong&gt;h5&lt;/strong&gt; tag under div class &lt;strong&gt;wrapper_main&lt;/strong&gt; to display the generated password and add a button to copy the generated password. Use &lt;code&gt;&amp;lt;i class=”fas fa-clipboard”&amp;gt;&lt;/code&gt; for the clipboard icon.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="wrapper_main"&amp;gt;
        &amp;lt;h5 id="pwd_txt"&amp;gt;&amp;lt;/h5&amp;gt;
        &amp;lt;button id="clipboard" class="clipboard"&amp;gt;
            &amp;lt;i class="fas fa-clipboard"&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the complete HTML code,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;

&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Password Generator&amp;lt;/title&amp;gt;
    &amp;lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"&amp;gt;
     &amp;lt;link rel="stylesheet" href="style.css"&amp;gt; 
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;div class="wrapper"&amp;gt;
        &amp;lt;button id="generate" class="action-btn"&amp;gt;
            Generate Password &amp;lt;i class="fab fa-keycdn"&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;/button&amp;gt;
        &amp;lt;div class="slider_main"&amp;gt;
            &amp;lt;input type="range" value="8" min="1" max="25" class="slider"
                oninput="this.nextElementSibling.value = this.value" id="slider"&amp;gt;
            &amp;lt;output&amp;gt;8&amp;lt;/output&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;label class="container" style="font-family: fantasy;color: rgb(3, 3, 3);"&amp;gt;Include special characters
            &amp;lt;input type="checkbox" checked="checked" id="checkbox"&amp;gt;
            &amp;lt;span class="checkmark"&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;/label&amp;gt;
    &amp;lt;/div&amp;gt;



    &amp;lt;div class="wrapper_main"&amp;gt;
        &amp;lt;h5 id="pwd_txt"&amp;gt;&amp;lt;/h5&amp;gt;
        &amp;lt;button id="clipboard" class="clipboard"&amp;gt;
            &amp;lt;i class="fas fa-clipboard"&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;script src="script.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt; 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#css-styling"&gt;
  &lt;/a&gt;
  CSS Styling
&lt;/h1&gt;

&lt;p&gt;Implement a slider to override the default one and hovering on the slider will make it less opaque.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.slider{

-webkit-appearance: none;
width: 70%;
height: 10px;
background: #f7be04;
border-radius: 15px;
opacity: 1;
-webkit-transition: .2s;
transition: opacity .2s;
margin-left: 40px;
margin-top: 25px;
margin-bottom: 20px;
}

.slider:hover{
opacity: 0.5;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Complete CSS code is here&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;html{
min-height: 100%;
}



body{
min-height: 100%;
background-color: #2d3436;
background-image: linear-gradient(315deg, #2d3436 0%, #000000 74%);
text-align: center;
}



.slider{
-webkit-appearance: none;
width: 70%;
height: 10px;
background: #f7be04;
border-radius: 15px;
opacity: 1;
-webkit-transition: .2s;
transition: opacity .2s;
margin-left: 40px;
margin-top: 25px;
margin-bottom: 20px;
}

.slider:hover{
opacity: 0.5;
}

.slider::-webkit-slider-thumb{
-webkit-appearance: none;
width: 15px;
height: 15px;
background: #000000;
border-radius: 50%;
cursor: pointer;
}

.action-btn{
background-color: #000;
border: 0;
color: #f7be04;
font-size: 20px;
cursor: pointer
padding: 10px;
margin: 10px  20px;
border-radius: 15px;
font-family: fantasy;
opacity: 1;
transition: opacity .2s;
}



.action-btn:hover{
opacity: 0.5;
}



.wrapper{
display: flex;
background-color: rgb(253, 253, 252);
flex-direction: column;
width: 30%;
margin-top: 10%;
margin-left: 35%;
border-radius: 15px;
font-family: fantasy;
padding-bottom: 1%;
}

.slider_main{
display: flex;
flex-direction: row;
}

output{
margin-top: 20px;
margin-left: 10px;
}



.wrapper_main
{
display: flex;
background-color: rgb(253, 253, 252);
flex-direction: row;
width: 22%;
margin-top: 5%;
margin-left: 38%;
border-radius: 15px;
font-family: Georgia, serif;
padding-left: 45px;
}



.clipboard{
margin-left: auto;
cursor: pointer;
border: 0;
background-color: white;
color:black;
border-radius: 15px;
font-size: 23px;
opacity: 1;
transition: opacity .2s;
}



.clipboard:hover{
opacity: 0.5;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#javascript-logic"&gt;
  &lt;/a&gt;
  Javascript logic
&lt;/h1&gt;

&lt;p&gt;We need to generate the password by selecting characters randomly. The length slider value given by the user will determine the length of the password and the user can choose whether to include special characters or not using the checkbox. To implement this functionality let’s fetch the required elements and store them in the below constants and variables.&lt;/p&gt;

&lt;p&gt;password_ele — To store the &lt;strong&gt;h5&lt;/strong&gt; element which is used to set the generated password.&lt;/p&gt;

&lt;p&gt;string — To store the &lt;strong&gt;characters&lt;/strong&gt; used to generate passwords except for special characters.&lt;/p&gt;

&lt;p&gt;special_chars —Used to store &lt;strong&gt;special characters&lt;/strong&gt;, based on check box value we can add special characters to the password.&lt;/p&gt;

&lt;p&gt;generate — Used to store the &lt;strong&gt;Generate Password&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;clipboard — Used to store &lt;strong&gt;clipboard&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;pwd_length — Used to store the &lt;strong&gt;slider&lt;/strong&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const password_ele = document.getElementById("pwd_txt");

var string = "ABCDEFGHIJKLMNOPQRSTUVWXYZacdefghijklnopqrstuvwxyz0123456789";

const special_chars = "@#$%^&amp;amp;*";

const generate = document.getElementById("generate");

const clipboard = document.getElementById("clipboard");

var pwd_length = document.getElementById("slider");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On clicking &lt;strong&gt;Generate Password&lt;/strong&gt; button we will execute some lines of codes to generate the password using &lt;strong&gt;Math.random()&lt;/strong&gt; function. If checkbox is checked then we will add special characters to our original string. Original string contains &lt;code&gt;“ABCDEFGHIJKLMNOPQRSTUVWXYZacdefghijklnopqrstuvwxyz0123456789”.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Loop through the string to fetch the character randomly and in each loop add the randomly selected character to the &lt;strong&gt;password&lt;/strong&gt; variable which was empty initially. The number of times the loop is executed is equal to the slider length so, the length of the password will be equal to the length given by the user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;generate.addEventListener('click', () =&amp;gt; {
    let password = "";
    var checked = document.getElementById("checkbox").checked;
    var final_string = string;
    console.log(checked);
    if (checked) {
        final_string += "@#$%^&amp;amp;*";
    }
    for (var i = 0; i &amp;lt; pwd_length.value; i++) {
        let pwd = final_string[Math.floor(Math.random() * final_string.length)];
        password += pwd;
    }
    password_ele.innerText = password;
    final_string = string;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;on click of clipboard icon, the password text should get selected and display an alert message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

clipboard.addEventListener('click', () =&amp;gt; {

 navigator.clipboard.writeText(password_ele.innerText);

 alert("Password copied to clipboard");

});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Complete javascript code is here,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const password_ele = document.getElementById("pwd_txt");
var string = "ABCDEFGHIJKLMNOPQRSTUVWXYZacdefghijklnopqrstuvwxyz0123456789";
const special_chars = "@#$%^&amp;amp;*";
const generate = document.getElementById("generate");
const clipboard = document.getElementById("clipboard");
var pwd_length = document.getElementById("slider");


generate.addEventListener('click', () =&amp;gt; {
    let password = "";
    var checked = document.getElementById("checkbox").checked;
    var final_string = string;
    console.log(checked);
    if (checked) {
        final_string += "@#$%^&amp;amp;*";
    }
    for (var i = 0; i &amp;lt; pwd_length.value; i++) {
        let pwd = final_string[Math.floor(Math.random() * final_string.length)];
        password += pwd;
    }
    password_ele.innerText = password;
    final_string = string;
});


clipboard.addEventListener('click', () =&amp;gt; {
    navigator.clipboard.writeText(password_ele.innerText);
    alert("Password copied to clipboard");
});


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s check the output&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fz6LiqBjVxs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Complete code is placed in &lt;a href="https://github.com/Divyamcm/Projects/tree/main/Password_Generator"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for your interest.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>List Of The Top Website Design Companies In Bulgaria</title>
      <author>Bispendra Brsoftech</author>
      <pubDate>Wed, 20 Oct 2021 10:41:28 +0000</pubDate>
      <link>https://dev.to/bispendra_brsoftech/list-of-the-top-website-design-companies-in-bulgaria-2jhi</link>
      <guid>https://dev.to/bispendra_brsoftech/list-of-the-top-website-design-companies-in-bulgaria-2jhi</guid>
      <description>&lt;p&gt;Those who do business in the Bulgaria have problem in looking for the top website design company in Bulgaria but we have a list of top web design companies of Bulgaria which can be helpful for your business to take online.  &lt;/p&gt;

&lt;p&gt;Web design is the unique process of developing a visual feel, layout, and flow of website pages.&lt;/p&gt;

&lt;p&gt;It includes UX design, graphic design, and overall information of spacing, fonts, shapes, &amp;amp; colours to create a user-friendly experience.&lt;/p&gt;

&lt;p&gt;Luckily, Bulgaria has some of the best web design developers which can be hired at a low cost. Using our list you can  connect with web designers in Bulgaria. &lt;/p&gt;

&lt;p&gt;List Of The Top Website Design Companies In Bulgaria:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;1. BR Softech&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;2. eDesign Interactive&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;3. Oblik Studio&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;4. Grind Web Studio&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;5. Digitawise&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;#1 BR Softech&lt;/h3&gt;

&lt;p&gt;BR Softech always strive to create meaningful website design for their Bulgarian clients. Their work turn into a fantastic digital experience for the business clients. &lt;/p&gt;

&lt;p&gt;Their work in 4 simple steps: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Discover&lt;/li&gt;
&lt;li&gt;Define&lt;/li&gt;
&lt;li&gt;Design&lt;/li&gt;
&lt;li&gt;Deliver&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;They analyse their clients requirements then they apply the data into personalised visuals fulfil the needs of the business.&lt;/p&gt;

&lt;p&gt;The Company Offers Services Other Than Website Design In Bulgaria: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;App Development&lt;/li&gt;
&lt;li&gt;Website Development&lt;/li&gt;
&lt;li&gt;Software Development&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.brsoftech.com/br-carwash/"&gt;Car Cleaning App Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;#2 eDesign Interactive&lt;/h3&gt;

&lt;p&gt;It is an award-winning website design and digital marketing company in Bulgaria. &lt;/p&gt;

&lt;p&gt;They are in this business over 16 years and known for creating stunning website design, landing pages, etc.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/bispendra_brsoftech" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WiOUnrjz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mYfQd7BM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/625793/e227b8eb-d0a8-4bc1-883c-6e5234d6a886.jpg" alt="bispendra_brsoftech"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/bispendra_brsoftech/top-5-website-development-companies-in-wellington-of-2021-22mk" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top 5 Website Development Companies In Wellington Of 2021&lt;/h2&gt;
      &lt;h3&gt;Bispendra Brsoftech ・ Oct 19 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#inclusion&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;They developers team use digital technology so that client's customers can engage your audience, encourage sharing, &amp;amp; to convert traffic into loyal customers.&lt;/p&gt;

&lt;h3&gt;#3 Oblik Studio&lt;/h3&gt;

&lt;p&gt;Oblik Studio was founded in the year 2014 as an website design company in Bulgaria. &lt;/p&gt;

&lt;p&gt;They have a team of 10+ creatives members that innovate the business of business of their clients through the implementation of advanced technologies.&lt;/p&gt;

&lt;p&gt;Their consistent efforts for their businesses improves product perceptions and it is also one of the key factors that enable rapid business growth of its clients.&lt;/p&gt;

&lt;h3&gt;#4 Grind Web Studio&lt;/h3&gt;

&lt;p&gt;Grind Web Studio is known as the top custom woocommerce and shopify website design development company in Bulgaria. &lt;/p&gt;

&lt;p&gt;They create an exceptional UI(user interface) concepts and effective user experience in the website design.&lt;/p&gt;

&lt;p&gt;Their mission is to help businesses to built and setup their online presence so that their business grow at a faster rate.&lt;/p&gt;

&lt;p&gt;Grind Web Studio built amazing website design in Bulgaria for brands believes in them. &lt;/p&gt;

&lt;h3&gt;#5 Digitawise&lt;/h3&gt;

&lt;p&gt;This company is known for its &lt;a href="https://www.brsoftech.com/br-shopping/"&gt;amazon clone app development&lt;/a&gt; because it is good in making eCommerce website design in  Bulgaria.&lt;/p&gt;

&lt;p&gt;They work together with their clients to understand their requirements of their brands &amp;amp; business.&lt;/p&gt;

&lt;p&gt;This web design company of Bulgaria create unique online stores, advertising campaigns, and editorial contents that drive traffic and awareness.&lt;/p&gt;

&lt;h2&gt;The Last Words&lt;/h2&gt;

&lt;p&gt;All the above listed website design company of Bulgaria love to create products that helps the business owners to progress with their passion and goals to impact the online business. &lt;/p&gt;

&lt;p&gt;They create digital adventure for users of their clients. For every solutions building a website design product is a process of individual and unique solutions.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__625793"&gt;
  
    .ltag__user__id__625793 .follow-action-button {
      background-color: #000000 !important;
      color: #000000 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/bispendra_brsoftech" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WiOUnrjz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mYfQd7BM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/625793/e227b8eb-d0a8-4bc1-883c-6e5234d6a886.jpg" alt="bispendra_brsoftech image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/bispendra_brsoftech"&gt;Bispendra Brsoftech&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/bispendra_brsoftech"&gt;Bispendra Singh is an Digital Content Writer Likes To Write On Latest And Advanced Technologies Via Blogs. &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>devops</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>I wasted 2 months in tutorial hell😖😫</title>
      <author>Mahesh </author>
      <pubDate>Wed, 20 Oct 2021 10:30:01 +0000</pubDate>
      <link>https://dev.to/ali6nx404/i-wasted-2-months-in-tutorial-hell-136c</link>
      <guid>https://dev.to/ali6nx404/i-wasted-2-months-in-tutorial-hell-136c</guid>
      <description>&lt;p&gt;As I started learning to code, I was stuck in tutorial hell. It felt like, I am learning a lot of the stuff. I have mastered CSS and JS.&lt;/p&gt;

&lt;p&gt;After Creating a lot of projects while watching tutorials. One day I decided to create a project of my own, and the biggest myth busted 😫.&lt;/p&gt;

&lt;p&gt;I came to know that I don't know anything so I started another course and then the same happens until I discovered that I was in tutorial hell.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wtf-is-tutorial-hell"&gt;
  &lt;/a&gt;
  WTF is Tutorial Hell?
&lt;/h2&gt;

&lt;p&gt;Tutorial hell is when you continuously watch tutorials one after another and you feel like, you are learning a lot of things.&lt;/p&gt;

&lt;p&gt;But when you start doing something your own, you found out you're even not able to solve a basic coding problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem-with-tutorial-hell"&gt;
  &lt;/a&gt;
  The problem with tutorial hell?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You get fake confidence.&lt;/li&gt;
&lt;li&gt;Fake feeling of growth.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Quote by Albert Einstein - &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;" insanity is doing the same thing over and over again and expecting different results. "&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is nothing wrong with using tutorials to learn new things. You just need to stop that desire of starting a new tutorial as soon as you finish the one you were working on.&lt;/p&gt;

&lt;p&gt;When you complete a tutorial, try to recreate the same code using only your memory.  You will probably be stuck in a few things so rewatch/reread and again start the solving problem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-break-tutorial-hell"&gt;
  &lt;/a&gt;
  How to Break tutorial hell?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Learn the Basics&lt;/li&gt;
&lt;li&gt;take Proper Notes&lt;/li&gt;
&lt;li&gt;Start With a Small problem&lt;/li&gt;
&lt;li&gt;Be consistent&lt;/li&gt;
&lt;li&gt;Teach others&lt;/li&gt;
&lt;li&gt;Build Projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Deep Dive 👇&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-learn-basics-"&gt;
  &lt;/a&gt;
  1. Learn Basics -
&lt;/h4&gt;

&lt;p&gt;Don't try to jump into advanced stuff without learning enough basics.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Core Fundamentals &amp;gt;&amp;gt;&amp;gt;&amp;gt; frameworks&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#2-take-proper-notes-"&gt;
  &lt;/a&gt;
  2. take proper Notes -
&lt;/h4&gt;

&lt;p&gt;Notes are the best way to revise your learning because we humans are never able to remember all the things.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note the key points.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#3-start-with-a-small-problem-"&gt;
  &lt;/a&gt;
  3. Start with a small problem -
&lt;/h4&gt;

&lt;p&gt;Always start with small coding problems, do not try to solve big problems because you get demotivated easily in the beginning.&lt;/p&gt;

&lt;p&gt;Coding is all about solving problems so always break your problem into small sub-problem. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-be-consistent-"&gt;
  &lt;/a&gt;
  4. Be consistent -
&lt;/h4&gt;

&lt;p&gt;Do not try to learn everything in one or two months. be consistent with your learning soon you will see Great results.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-teach-others-"&gt;
  &lt;/a&gt;
  5. Teach others -
&lt;/h4&gt;

&lt;p&gt;teaching is the best way to Recalling back what we have learned. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-build-projects-"&gt;
  &lt;/a&gt;
  6. Build Projects -
&lt;/h4&gt;

&lt;p&gt;The more you code, The better you become 💛, Don't just watch the tutorials, practice what you learn.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-"&gt;
  &lt;/a&gt;
  Conclusion -
&lt;/h2&gt;

&lt;p&gt;If you are able to relate to this article that you are in tutorial hell. Use the given techniques to escape from tutorial hell. &lt;/p&gt;

&lt;p&gt;I hope you enjoyed reading&lt;/p&gt;

&lt;p&gt;Let's connect with me on &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Ali6nX404"&gt;twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/mahesh-patidar-34a982192/"&gt;Linkedin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>developer</category>
      <category>css</category>
      <category>webdeveloper</category>
    </item>
    <item>
      <title>How to setup golang backend and react frontend in a monorepo </title>
      <author>ynwd</author>
      <pubDate>Wed, 20 Oct 2021 10:23:49 +0000</pubDate>
      <link>https://dev.to/ynwd/how-to-setup-golang-backend-and-react-frontend-in-a-monorepo-3api</link>
      <guid>https://dev.to/ynwd/how-to-setup-golang-backend-and-react-frontend-in-a-monorepo-3api</guid>
      <description>&lt;p&gt;&lt;a href="https://dev.to/ynwd/how-to-setup-react-tailwind-webpack-and-typescript-in-a-monorepo-3ogm"&gt;Previously&lt;/a&gt;, we have set up a frontend module using react and typescript in a monorepo.&lt;/p&gt;

&lt;p&gt;Next, we will use the golang server to serve the built webapp.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── go.mod
├── go.sum
├── main.go
├── package.json
└── web
    ├── components
    └── modules
        └── root
            ├── build
            │   ├── asset-manifest.json
            │   ├── favicon.ico
            │   ├── index.html
            │   ├── logo192.png
            │   ├── logo512.png
            │   ├── manifest.json
            │   ├── robots.txt
            │   └── static
            │       ├── css
            │       │   ├── main.33a5a96b.chunk.css
            │       │   └── main.33a5a96b.chunk.css.map
            │       └── js
            │           ├── 2.59f16c8b.chunk.js
            │           ├── 2.59f16c8b.chunk.js.LICENSE.txt
            │           ├── 2.59f16c8b.chunk.js.map
            │           ├── 3.93db3793.chunk.js
            │           ├── 3.93db3793.chunk.js.map
            │           ├── main.f7ff0158.chunk.js
            │           ├── main.f7ff0158.chunk.js.LICENSE.txt
            │           ├── main.f7ff0158.chunk.js.map
            │           ├── runtime-main.08d49f3a.js
            │           └── runtime-main.08d49f3a.js.map
            └── package.json


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;clone repo: &lt;a href="https://github.com/ynwd/monorepo/tree/typescript"&gt;https://github.com/ynwd/monorepo/tree/typescript&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;create services folder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir -p internal/services
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;init golang app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go mod init github.com/ynwd/monorepo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;downlod fastrex package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go get github.com/fastrodev/fastrex
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this will generate go.mod file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module github.com/ynwd/monorepo

go 1.17

require github.com/fastrodev/fastrex v0.0.0-20211008073151-687f0b90ec18 // indirect

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;create golang app entry point&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="c"&gt;/* main.go */&lt;/span&gt;
&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/fastrodev/fastrex"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;fastrex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;New&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"web/modules/root/build/index.html"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"web/modules/root/build"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="n"&gt;fastrex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="n"&gt;fastrex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;build react root module&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run build -w @fstr/root
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;run golang server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see the final source code here: &lt;a href="https://github.com/ynwd/monorepo/tree/fastrex"&gt;https://github.com/ynwd/monorepo/tree/fastrex&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>react</category>
      <category>typescript</category>
      <category>monorepo</category>
    </item>
    <item>
      <title>Off-Campus Drive October |  Batch 2020/2021/2022/2019/2023  | Off-Campus Jobs</title>
      <author>Kunal Garg</author>
      <pubDate>Wed, 20 Oct 2021 10:22:16 +0000</pubDate>
      <link>https://dev.to/gargkunal/off-campus-drive-october-batch-20202021202220192023-off-campus-jobs-2cfd</link>
      <guid>https://dev.to/gargkunal/off-campus-drive-october-batch-20202021202220192023-off-campus-jobs-2cfd</guid>
      <description>&lt;p&gt;For all opportunities with batch and ctc you can visit this:&lt;br&gt;
&lt;a href="https://youtu.be/DJFzT1DhCnI"&gt;https://youtu.be/DJFzT1DhCnI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for watching &lt;/p&gt;

</description>
      <category>career</category>
    </item>
    <item>
      <title>Redux </title>
      <author>Gilson Gangadhar</author>
      <pubDate>Wed, 20 Oct 2021 10:14:11 +0000</pubDate>
      <link>https://dev.to/gilsongangadhar/redux-4jgf</link>
      <guid>https://dev.to/gilsongangadhar/redux-4jgf</guid>
      <description>&lt;p&gt;Introduction: &lt;/p&gt;

&lt;p&gt;If data need to be passed from one component to another component. There are two ways to do it : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;By making the component from which data(state values) need to be passed as parent and the component which recieves data as child component. And data is send to child component as "props". This process is called "one-way data binding" .&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If data need to be passed between two or three components, then data(state values) is lifted to the top common component and then data is shared to the child components. This process is called "lifting the state up" &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But as the number of components to which data need to be passed increases in an app, the above two methods cannot be used. That where redux store come into the picture. &lt;/p&gt;

&lt;p&gt;-&amp;gt; What is Redux?&lt;/p&gt;

&lt;p&gt;Redux is a predictable state container for JavaScript apps based on the Flux design pattern. Redux can be used together with React, or with any other view library. It is tiny (about 2kB) and has no dependencies.&lt;/p&gt;

&lt;p&gt;-&amp;gt; What are the core principles of Redux?&lt;/p&gt;

&lt;p&gt;a). Single source of truth: The state of your whole application is stored in an object tree within a single store. The single state tree makes it easier to keep track of changes over time and debug or inspect the application.&lt;/p&gt;

&lt;p&gt;b). State is read-only: The only way to change the state is to emit an action, an object describing what happened. This ensures that neither the views nor the network callbacks will ever write directly to the state.&lt;/p&gt;

&lt;p&gt;c). Changes are made with pure functions: To specify how the state tree is transformed by actions, you write reducers. Reducers are just pure functions that take the previous state and an action as parameters, and return the next state.&lt;/p&gt;

&lt;p&gt;-&amp;gt; Explanation : &lt;/p&gt;

&lt;p&gt;Redux store is obtained to the react app via "redux" package. In redux store, we store "application state", which needed to be shared to all component in an app. &lt;/p&gt;

&lt;p&gt;We only state state which is required by all components is stored in redux store i.e("application state"). Not the local state which is required by a perticular component. &lt;/p&gt;

&lt;p&gt;Redux store is connected to all the components via Provider. And the components are connected to the store via Connect. Both Provider and Connect are obtained through "react-redux" package. &lt;/p&gt;

&lt;p&gt;State values of redux store can be accessed by components through mapStateToProps() function or via useSelector() hook. &lt;/p&gt;

&lt;p&gt;mapStateToProps() function : is a utility which helps your component get updated state (which is updated by some other components). It maps the state variables from your store to the props that you specify. &lt;/p&gt;

&lt;p&gt;It takes state as its argument and returns an object. &lt;/p&gt;

&lt;p&gt;useSelector() hook is obtained via "react-redux" package. It maps the state of your redux store and is used to access state values. &lt;/p&gt;

&lt;p&gt;-&amp;gt; How state values are stored &amp;amp; updating in the redux store : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_RNWxbVu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6zh1ue52i21ki3jq3y3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_RNWxbVu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6zh1ue52i21ki3jq3y3.jpg" alt="Redux-flow-diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;a). In the component, if there has to be any changes in the state value of the redux store, an action is dispatched. It is dispatched either using useDispatch() hook or using dispatch() method got as a property of props of the wrapped component using Connect(). &lt;/p&gt;

&lt;p&gt;b). Actions are functions. They are two types : asynchronous and synchronous. It's the asynchronous action generator, which talks to backend and get the data using dispatch method(got through "redux-thunk" package) and it pass it on to synchronous action generator, which returns an object. It passes the data to redux store. &lt;/p&gt;

&lt;p&gt;c). Redux store gets the data from synchronous action generator and passes the data along with previous state value to the reducer. Reducer is a function which updates the state values of the redux store. Once store passes the data &amp;amp; previous state to reducer, it returns the updated state value to the redux store. &lt;/p&gt;

&lt;p&gt;d). Then the redux store passes the updated state to the component, which is rendered. &lt;/p&gt;

&lt;p&gt;So this is the brief explantion of Redux and the working for redux store. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Start CPU Mining Polygon MATIC with Your Computer in 2021</title>
      <author>Course Probe</author>
      <pubDate>Wed, 20 Oct 2021 10:13:57 +0000</pubDate>
      <link>https://dev.to/courseprobe/how-to-start-cpu-mining-polygon-matic-with-your-computer-in-2021-3nf</link>
      <guid>https://dev.to/courseprobe/how-to-start-cpu-mining-polygon-matic-with-your-computer-in-2021-3nf</guid>
      <description>&lt;p&gt;A Step by Step Guide to Pool Mining Polygon MATIC Coins in 2021 with a CPU!&lt;/p&gt;




&lt;p&gt;Sometimes mining can seem to be too complex for the average computer user, so I thought about putting together a quick guide to get you excited about mining cryptocurrency and Polygon MATIC in particular.&lt;/p&gt;

&lt;p&gt;Anyone can start mining Matic with any computer in under 5 minutes with this guide, regardless of your technical skill level you will be able to increase your crypto knowledge and start mining MATIC with your CPU today!!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Polygon is a protocol and a framework for building and connecting Ethereum-compatible blockchain networks. Aggregating scalable solutions on Ethereum supporting a multi-chain Ethereum ecosystem..&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Please take a moment to learn more about Polygon in the official site: &lt;a href="https://polygon.technology/"&gt;Polygon&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Okay, let’s get you started!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1:&lt;/strong&gt; Get yourself a Wallet.&lt;/p&gt;

&lt;p&gt;I recommend installing Metamask as a Chrome extension, you can get it at metamask.io&lt;/p&gt;

&lt;p&gt;Connect Metamask with the Polygon network:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to the settings page in Metamask.&lt;/li&gt;
&lt;li&gt;Click on Networks &amp;gt; Add Network.&lt;/li&gt;
&lt;li&gt;Key in the relevant details:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Matic Mainnet​Network Name:&lt;/strong&gt; Matic MainnetNew &lt;br&gt;
&lt;strong&gt;RPC URL:&lt;/strong&gt; &lt;a href="https://rpc-mainnet.maticvigil.com/"&gt;https://rpc-mainnet.maticvigil.com/&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;ChainID:&lt;/strong&gt; 137&lt;br&gt;
&lt;strong&gt;Symbol:&lt;/strong&gt; MATIC&lt;br&gt;
&lt;strong&gt;Block Explorer URL:&lt;/strong&gt; &lt;a href="https://explorer.matic.network/"&gt;https://explorer.matic.network/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more information on how to use MetaMask with Polygon (Matic Network), check out &lt;a href="https://docs.matic.network/docs/develop/metamask/config-matic"&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Download XMRig from the official site or the Github repository.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://xmrig.com/"&gt;XMrig.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;Xmrig Github Releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you download the .zip file, extract it into any location on your computer.&lt;/p&gt;

&lt;p&gt;Inside the XMRig folder, locate a file usually called "pool_mine_example.bat" and edit it's contents.&lt;/p&gt;

&lt;p&gt;After editing it should look something similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd %~dp0
xmrig.exe -o rx.unmineable.com:3333 -u 
MATIC:0x6DaE7D542FACfC6523611bbEF2ED8dC72165A240.wkid01#e4xd-wmzl -p x
pause
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the second line after the -o you can see the Pool URL, in this case all you have to do depending on your location is to use one of the following URLs (select the one closer to your location).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;USA:&lt;/strong&gt; rx-us.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Europe:&lt;/strong&gt; rx-eu.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Asia:&lt;/strong&gt; rx-asia.unmineable.com:3333&lt;/p&gt;

&lt;p&gt;Then, the third line is where you will enter your wallet's public address (copied in STEP 1), place it after the MATIC: and before the first dot "." .&lt;/p&gt;

&lt;p&gt;The general structure of the address needs to be:&lt;/p&gt;

&lt;p&gt;[COIN]:[Wallet address].[workerID]#[Code to lower mining fee]&lt;/p&gt;

&lt;p&gt;The workerID is any name you want to give to each computer where you are running the miner so it can easily be identified later on under the pool stats.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The code after the # is important&lt;/strong&gt; because mining with that code will drop the Mining Fee from 1% to 0.75% (it makes a difference). You can start mining using that code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Run the file as an administrator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" alt="XMRig Mining"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point you are already mining Matic!!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP3:&lt;/strong&gt; Let's check your mining Stats in Unmineable&lt;/p&gt;

&lt;p&gt;Unmineable.com is a mining Pool which allows you to mine with your CPU using RandomX and pay you in any coin you select. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" alt="Unmineable Site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember when you set up the address inside the XMRig config file ? &lt;/p&gt;

&lt;p&gt;Well, there you just let Unmineable know the coin you want to be paid in, in this example MATIC and then the address where they will transfer the mined coins.&lt;/p&gt;

&lt;p&gt;In order to check your balance, log into &lt;a href="https://unmineable.com"&gt;Unmineable&lt;/a&gt; and then select the coin you want to mine. In this example, MATIC.&lt;/p&gt;

&lt;p&gt;Then you can select the Tab that reads RandomX and enter your address in the box that reads "Enter your address to check your stats:". &lt;/p&gt;

&lt;p&gt;After doing this you will see the balance on your account and you will even be able to request a payment.&lt;/p&gt;




&lt;p&gt;Congrats, you are a miner now! &lt;/p&gt;




&lt;p&gt;Additional questions you might have:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#will-mining-hurt-my-cpu-in-any-way-"&gt;
  &lt;/a&gt;
  Will mining hurt my CPU in any way ?
&lt;/h2&gt;

&lt;p&gt;No, this process shouldn't hurt or damage your computer in any way. It is recommended though to monitor the temperature of your processor with any software like "Hardware Info".&lt;/p&gt;




&lt;p&gt;If you are looking for more information, there's a good guide in a &lt;strong&gt;PDF ebook and is Free&lt;/strong&gt;, get it at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" alt="Mining with CPU"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://leanpub.com/how-to-start-mining-crypto-with-cpu"&gt;Start CPU Mining&lt;/a&gt;&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>blockchain</category>
      <category>polygon</category>
      <category>matic</category>
    </item>
    <item>
      <title>Connecting to Amazon DocumentDB with MongoDB Drivers </title>
      <author>Jerod Johnson</author>
      <pubDate>Wed, 20 Oct 2021 09:55:22 +0000</pubDate>
      <link>https://dev.to/jerodimusprime/connecting-to-amazon-documentdb-with-mongodb-drivers-14dp</link>
      <guid>https://dev.to/jerodimusprime/connecting-to-amazon-documentdb-with-mongodb-drivers-14dp</guid>
      <description>&lt;p&gt;With Amazon DocumentDB developers and DBAs can balance availability, read scalability, and latency with five pre-configured consistency levels. The data in an Amazon DocumentDB cluster is accessible just like a MongoDB 3.6 cluster.  &lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.cdata.com/drivers/mongodb/odbc/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=connecting-to-amazon-documentdb-with-mongodb-drivers"&gt;CData Software Drivers for MongoDB&lt;/a&gt; provide a SQL-like interface to MongoDB data through standards-based drivers. This allows users to see their data in the BI, reporting, and ETL tools of their choice, as well as in custom tools and applications. &lt;/p&gt;

&lt;p&gt;This article walks through configuring an Amazon DocumentDB cluster and connecting to the cluster through any of the available CData Software MongoDB drivers. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-a-documentdb-cluster"&gt;
  &lt;/a&gt;
  Creating a DocumentDB Cluster
&lt;/h1&gt;

&lt;p&gt;To create a DocumentDB cluster, log in to your AWS Console, select Amazon DocumentDB, click Clusters and Create to add a new cluster. Once you create the cluster, you can connect to the cluster using the MongoDB client from an EC2 instance to populate the cluster. Once you have data in the Amazon DocumentDB cluster, you can connect using the CData MongoDB Drivers. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#connecting-to-a-amazon-documentdb-cluster"&gt;
  &lt;/a&gt;
  Connecting to a Amazon DocumentDB Cluster
&lt;/h1&gt;

&lt;p&gt;With your cluster created, make note of the cluster details (found by clicking on the cluster name on the Clusters page). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wtZCN5dz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82szjw2dn860aaegpu87.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wtZCN5dz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82szjw2dn860aaegpu87.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The table below describes the mapping from the DocumentDB cluster details to the CData Driver properties: &lt;/p&gt;

&lt;p&gt;CData Driver Property       |        Amazon DocumentDB Property &lt;/p&gt;

&lt;p&gt;Server                      --&amp;gt;           Cluster endpoint&lt;/p&gt;

&lt;p&gt;Port                        --&amp;gt;                  Port                                    &lt;/p&gt;

&lt;p&gt;User                        --&amp;gt;               Master username &lt;/p&gt;

&lt;p&gt;Password                    --&amp;gt;  (set when you create the cluster) &lt;/p&gt;

&lt;p&gt;In addition to the cluster details, you need to set a few more additional properties in the CData drivers to connect to an Amazon DocumentDB cluster: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;UseSSL:&lt;/strong&gt; True &lt;br&gt;
(Amazon DocumentDB Clusters have SSL enabled by default and this cannot be changed.) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;SSLServerCert:&lt;/strong&gt; * &lt;br&gt;
(This automatically accepts the certificate presented by the DocumentDB Cluster, which is already hosted within the same region and security group as the EC2 instance.) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Other:&lt;/strong&gt; "UseFindAPI=true" &lt;br&gt;
(This is set to ensure compatibility with the DocumentDB version of the MongoDB API.) &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With all of the properties, your standard connection string would look like the following: &lt;/p&gt;

&lt;p&gt;Server=.cluster-xxxxxxxxxxxx..docdb.amazonaws.com; Port=27107; User=myMaster; Password=myPassword; UseSSL=True; SSLServerCert=*; Other='UseFindAPI=True'; &lt;/p&gt;

&lt;p&gt;Once the connection properties are set, you can quickly connect to your Amazon DocumentDB account using any of the MongoDB Drivers. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#more-information"&gt;
  &lt;/a&gt;
  More Information
&lt;/h1&gt;

&lt;p&gt;When developing modern applications, document databases like MongoDB are a popular choice for storing semi-structured data for use cases like product catalogs, user profiles, mobile applications, and content management. &lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.cdata.com/drivers/mongodb/odbc/?utm_source=dev.to&amp;amp;utm_medium=kb-article-posting&amp;amp;utm_campaign=connecting-to-amazon-documentdb-with-mongodb-drivers"&gt;MongoDB ODBC Driver&lt;/a&gt; is a powerful tool that allows you to connect with live MongoDB document databases, directly from any applications that support ODBC connectivity. Access MongoDB like you would a database - read, write, and update through a standard ODBC Driver interface. &lt;/p&gt;

</description>
      <category>automation</category>
      <category>integration</category>
      <category>connectivity</category>
      <category>database</category>
    </item>
  </channel>
</rss>
