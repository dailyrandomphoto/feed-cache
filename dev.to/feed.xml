<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>My first impressions with pyenv</title>
      <author>Waylon Walker</author>
      <pubDate>Thu, 30 Dec 2021 15:23:45 +0000</pubDate>
      <link>https://dev.to/waylonwalker/my-first-impressions-with-pyenv-29h8</link>
      <guid>https://dev.to/waylonwalker/my-first-impressions-with-pyenv-29h8</guid>
      <description>&lt;p&gt;pyenv provides an easy way to install almost any version of python from a large list of distributions. I have simply been using the version of python from the os package manager for awhile, but recently I bumped my home system to Ubuntu 21.10 impish, and it is only 3.9+ while the libraries I needed were only compatable with up to 3.8.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I needed to install an older version of python on ubuntu&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I've been wanting to check out pyenv for awhile now, but without a burning need to do so.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing"&gt;
  &lt;/a&gt;
  installing
&lt;/h2&gt;

&lt;p&gt;Based on the Readme it looked like I needed to install using homebrew,so this is what I did, but I later realized that there is a pyenv-installer repo that may have saved me this need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://waylonwalker.com/til/installing-homebrew-linux/"&gt;https://waylonwalker.com/til/installing-homebrew-linux/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-out-install-candidates"&gt;
  &lt;/a&gt;
  List out install candidates
&lt;/h2&gt;

&lt;p&gt;You can list all of the available versions to install with&lt;br&gt;
&lt;code&gt;pyenv install --list&lt;/code&gt;.  It does reccomend updating pyenv if you suspect that it is missing one.  At the time of writing this comes out to 532 different versions!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lets-install-the-latest-38-patch"&gt;
  &lt;/a&gt;
  Let's install the latest 3.8 patch
&lt;/h2&gt;

&lt;p&gt;Installing a version is as easy as &lt;code&gt;pyenv install 3.8.12&lt;/code&gt;.  This will install it, but not make it active anywhere.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pyenv install 3.8.12
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lets-use-python-3812-while-in-this-directory"&gt;
  &lt;/a&gt;
  let's use python 3.8.12 while in this directory
&lt;/h2&gt;

&lt;p&gt;Running &lt;code&gt;pyenv local&lt;/code&gt; will set the version of python that we wish to use while in this directory and any directory underneath of it while using the pyenv command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;local &lt;/span&gt;python3.8.12
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pythonversion-file"&gt;
  &lt;/a&gt;
  .python-version file
&lt;/h2&gt;

&lt;p&gt;This creates a &lt;code&gt;.python-version&lt;/code&gt; files in the directory I ran it in, that contains simply the version number.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;3.8.12
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-with-pipx"&gt;
  &lt;/a&gt;
  using with pipx
&lt;/h2&gt;

&lt;p&gt;I immediately ran into the same issue I was having before when trying to run pipx, as pipx was running my system python.  I had to install pipx in the python3.8 environment to get it to use it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;exec &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;pipx
pyenv &lt;span class="nb"&gt;exec &lt;/span&gt;pipx run kedro new
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#python-is-still-the-system-python"&gt;
  &lt;/a&gt;
  python is still the system python
&lt;/h2&gt;

&lt;p&gt;When I open a terminal and call &lt;code&gt;python&lt;/code&gt; its still my system python that I installed and set with update-alternatives.  I am not sure if this is expected or based on how I had installed the system python previously, but it's what happened on my system.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;update-alternatives --query python

Name: python
Link: /home/walkers/.local/bin/python
Status: auto
Best: /usr/bin/python3
Value: /usr/bin/python3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#making-a-virtual-environment"&gt;
  &lt;/a&gt;
  making a virtual environment
&lt;/h2&gt;

&lt;p&gt;To make a virtual environment, I simply ran &lt;code&gt;pyenv exec python&lt;/code&gt; in place of where I would normally run python and it worked for me.  There is a whole package to get pyenv and venv to play nicely together, so I suspect that there is more to it, but this worked well for me and I was happy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pyenv exec python -m venv .venv --prompt $(basename $PWD)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when my virtual environment is active it points to the python in that virtual environment, and is the version of python that was used to create the environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/pyenv/pyenv#installation"&gt;https://github.com/pyenv/pyenv#installation&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;I wrote this during my first few minutes of using pyenv.  It's been working great for me since then and has been practically invisible.  If you have more experience with pyenv I would really appreciate a comment on your experience below.&lt;/p&gt;

</description>
      <category>python</category>
      <category>linux</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Designing the Analytics patterns using a Lake House approach on AWS
</title>
      <author>Adit Modi</author>
      <pubDate>Thu, 30 Dec 2021 15:12:13 +0000</pubDate>
      <link>https://dev.to/aws-builders/designing-the-analytics-patterns-using-a-lake-house-approach-on-aws-2hh6</link>
      <guid>https://dev.to/aws-builders/designing-the-analytics-patterns-using-a-lake-house-approach-on-aws-2hh6</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Many organizations are moving all their data from various silos into a single location, often called a data lake, to perform analytics and ML. These same companies also store data in purpose-built data stores for the performance, scale, and cost advantages they provide for specific use cases. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Examples of such data stores include data warehouses (to get quick results for complex queries on structured data) and technologies like Elasticsearch (to quickly search and analyze log data to monitor the health of production systems). A one-size-fits-all approach to data analytics no longer works, because it inevitably leads to compromises.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lake House architecture on AWS provides a strategic vision of how multiple AWS data and analytics services can be combined into a multi-purpose data processing and analytics environment. There are the three analytics patterns you can derive insights from by using a Lake House approach on AWS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inside-out data movement&lt;/li&gt;
&lt;li&gt;Outside-in data movement&lt;/li&gt;
&lt;li&gt;Data movement around the perimeter&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#derive-insights-with-insideout-data-movement"&gt;
  &lt;/a&gt;
  Derive insights with inside-out data movement
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To get the most from your data lakes and these purpose-built stores, you need to move data between these systems easily. For example, clickstream data from web applications can be collected directly in a data lake and a portion of that data can be
moved out to a data warehouse for daily reporting. We think of this concept as insideout data movement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--666pQD59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ewq8i9c3ky79tqjl0jn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--666pQD59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ewq8i9c3ky79tqjl0jn.png" alt="Image description" width="336" height="274"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#gt-derive-real-time-eventbased-visualization-insights-from-your-lake-house-with-amazon-redshift-and-amazon-quicksight"&gt;
  &lt;/a&gt;
  -&amp;gt; Derive real time event-based visualization insights from your Lake house with Amazon Redshift and Amazon QuickSight
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Customers often want to analyze their data visually as soon as data is ingested into their data lake, to make decisions with speed and agility for downstream business value.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following diagram illustrates the Lake House inside-out data movement with Amazon Redshift and Amazon QuickSight to perform data visualization insights.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x9iggSYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eetcz0225kjwo54fcpz6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x9iggSYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eetcz0225kjwo54fcpz6.jpg" alt="Image description" width="683" height="270"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Derive real time event-based visualization insights from your Lake House with Amazon Redshift and Amazon QuickSight&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The steps that data follows through the architecture are as follows:&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data ingestion&lt;/strong&gt; — A new data file is uploaded in Amazon S3. An S3 event triggers an AWS Lambda function.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Event trigger&lt;/strong&gt; —Lambda triggers an AWS Glue workflow to start processing the file. Lambda updates Glue Data Catalog with metadata changes.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data processing&lt;/strong&gt; — Load transformed data into target data stores like S3 and Amazon Redshift. AWS Glue jobs push logs and notifications to Amazon CloudWatch. CloudWatch triggers a Lambda function upon AWS Glue job completion.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data analytics&lt;/strong&gt; — Analyze the data in Amazon Redshift and the data lake (S3). Lambda calls the QuickSight ingestion API to refresh the SPICE dataset.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data visualizations&lt;/strong&gt; — New data is reflected in QuickSight visuals. QuickSight can create a data set by combining data in Amazon Redshift and Athena. Output is stored in SPICE for fast analytics.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#gt-derive-personacentric-insights-from-your-lake-house-with-aws-glue-databrew-amazon-athena-amazon-redshift-and-amazon-quicksight"&gt;
  &lt;/a&gt;
  -&amp;gt; Derive persona-centric insights from your Lake House with AWS Glue DataBrew, Amazon Athena, Amazon Redshift, and Amazon QuickSight
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Many organizations want to get insights from exponentially growing data volumes to help them make decisions with speed and agility. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They need to embrace data gravity by using both a central data lake, and a ring of purpose-built data services and data&lt;br&gt;
warehouses based on persona or job function.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following diagram illustrates the Lake House inside-out data movement with AWS Glue DataBrew, Amazon Athena, Amazon Redshift, and Amazon QuickSight to perform persona-centric data analytics&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--43IpzBm3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptlte7njbuz44asxkwzh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--43IpzBm3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptlte7njbuz44asxkwzh.gif" alt="Image description" width="639" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The steps that data follows through the architecture are as follows:&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data ingestion&lt;/strong&gt; — Data is ingested into S3 from different sources.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ad-hoc data processing&lt;/strong&gt; — Data curators and data scientists use Data Brew to validate, clean, and enrich the data. Amazon Athena is also used to run ad-hoc queries to analyze the data in the lake. The transformation is shared with data engineers to set up batch processing.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Batch data processing&lt;/strong&gt; — Data engineers or developers set up batch jobs in AWS Glue and AWS Glue DataBrew. Jobs can be event-triggered, or can be scheduled to run periodically.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data analytics&lt;/strong&gt; — Data and business analysts can now analyze prepared datasets in Amazon Redshift, or in S3 using Athena.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data visualizations&lt;/strong&gt; — Business analysts can create visuals in QuickSight. Data curators can enrich data from multiple sources. Administrators can enforce security and data governance. Developers can embed the QuickSight dashboard in applications.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#derive-insights-with-outsidein-data-movement"&gt;
  &lt;/a&gt;
  Derive insights with outside-in data movement
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You can also move data in the other direction: from the outside-in. For example, you can copy query results for sales of products in a given Region from your data warehouse into your data lake, to run product recommendation algorithms against a larger data set using machine learning. Think of this concept as outside-in data
movement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W2uZDwCl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3ubzeb9v25ucgw0jr8r.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W2uZDwCl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3ubzeb9v25ucgw0jr8r.jpg" alt="Image description" width="306" height="241"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#gt-derive-insights-from-amazon-dynamodb-data-for-realtime-prediction-with-amazon-sagemaker"&gt;
  &lt;/a&gt;
  -&amp;gt; Derive insights from Amazon DynamoDB data for real-time prediction with Amazon SageMaker
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon DynamoDB is a fast NoSQL database used by applications that need consistent, single-digit millisecond latency. Customers want to move valuable data in DynamoDB into S3 to derive insights. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This data in S3 can be the primary source for understanding customers’ past behavior, predicting future behavior, and generating downstream business value. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following diagram illustrates the Lake House outside-in data movement with DynamoDB data to derive personalized recommendations.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zqtCfglR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jlcoguem03uxf2ltk7s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zqtCfglR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jlcoguem03uxf2ltk7s.jpg" alt="Image description" width="570" height="79"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Derive insights from Amazon DynamoDB data for real-time prediction with Amazon SageMaker&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The steps that data follows through the architecture are as follows:&lt;/li&gt;
&lt;li&gt;Export DynamoDB tables as JSON into S3.&lt;/li&gt;
&lt;li&gt;Exported JSON files are converted to comma-separated value (.csv) format to
use as a data source for Amazon SageMaker by using AWS Glue.&lt;/li&gt;
&lt;li&gt;Amazon SageMaker renews the model artifact and updates the endpoint.&lt;/li&gt;
&lt;li&gt;The converted .csv file is available for ad hoc queries with Athena.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#gt-derive-insights-from-amazon-aurora-data-with-apache-hudi-aws-glue-aws-dms-and-amazon-redshift"&gt;
  &lt;/a&gt;
  -&amp;gt; Derive insights from Amazon Aurora data with Apache Hudi, AWS Glue, AWS DMS, and Amazon Redshift
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS Database Migration Service (AWS DMS) can replicate the data from your source systems to S3. When the data is in S3, customers process it based on their analytics requirements. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A typical requirement is to sync the data in S3 with the updates on the source systems. Although it’s easy to apply updates on a relational database management system (RDBMS) that backs an online source application, it’s difficult to apply this CDC process on your data lakes. Apache Hudi is a good way to solve this problem. Currently, you can use Hudi on Amazon EMR to create Hudi tables.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following diagram illustrates the Lake House outside-in data movement with Amazon Aurora Postgres-changed data to derive analytics.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xjw5_LLA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e2d8c49b6vgjn1lw04h5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xjw5_LLA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e2d8c49b6vgjn1lw04h5.jpg" alt="Image description" width="576" height="222"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Derive insights from Amazon Aurora data with Apache Hudi, AWS Glue, AWS DMS, and Amazon Redshift&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The steps that data follows through the architecture are as follows:&lt;/li&gt;
&lt;li&gt;AWS DMS replicates the data from the Aurora cluster to the raw S3 bucket.&lt;/li&gt;
&lt;li&gt;Use Apache Hudi to create tables in the AWS Glue Data Catalog using AWS Glue jobs. An AWS Glue job (HudiJob) that is scheduled to run at a frequency set in the ScheduleToRunGlueJob parameter.&lt;/li&gt;
&lt;li&gt;This job reads the data from the raw S3 bucket, writes to the curated S3 bucket, and creates a Hudi table in the Data Catalog.&lt;/li&gt;
&lt;li&gt;The job also creates an Amazon Redshift external schema in the Amazon Redshift cluster.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can now query the Hudi table in Amazon Athena or Amazon Redshift.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Refer to the blog post Creating a source to Lakehouse data replication pipe using Apache Hudi, AWS Glue, AWS DMS, and Amazon Redshift for additional details.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#derive-insights-with-moving-data-around-the-perimeter"&gt;
  &lt;/a&gt;
  Derive insights with moving data around the perimeter
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In other situations, you want to move data from one purpose-built data store to another: data movement around-the-perimeter. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For example, you may copy the product catalog data stored in your database to your search service to make it easier to look through your product catalog and offload the search queries from the database. We think of this concept as data movement around the perimeter.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DEkWJYxL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yyubyhn09kqbkvtacej4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DEkWJYxL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yyubyhn09kqbkvtacej4.gif" alt="Image description" width="291" height="258"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#gt-derive-insights-from-your-data-lake-data-warehouse-and-operational-databases"&gt;
  &lt;/a&gt;
  -&amp;gt; Derive insights from your data lake, data warehouse and operational databases
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A data warehouse is a database optimized to analyze relational data coming from transactional systems and line of business applications. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon Redshift is a fast, fully managed data warehouse that makes it simple and cost-effective to analyze data using standard SQL and existing Business Intelligence (BI) tools.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To get information from unstructured data that would not fit in a data warehouse, you can build a data lake. A data lake is a centralized repository that allows you to store all your structured and unstructured data at any scale. With a data lake built on Amazon S3, you can easily run big data analytics and use ML to gain insights from your semistructured (such as JSON, XML) and unstructured datasets.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AWS is launching two new features to help you improve the way you manage your data warehouse and integrate with a data lake:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data Lake Export to unload data from an Amazon Redshift cluster to S3 in Apache Parquet format, an efficient open columnar storage format optimized for analytics.&lt;/li&gt;
&lt;li&gt;Federated Query to be able, from an Amazon Redshift cluster, to query:
o Across data stored in the cluster
o In your S3 data lake
o In one or more Amazon Relational Database Service (Amazon RDS) for PostgreSQL and Amazon Aurora PostgreSQL databases&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following diagram illustrates the “moving the data around the perimeter” Lake House approach with S3, Amazon Redshift, Amazon Aurora PostgreSQL, and Amazon EMR to derive analytics.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---upfA3pN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lzlsubh4l8tv4j1nuh6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---upfA3pN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lzlsubh4l8tv4j1nuh6.gif" alt="Image description" width="627" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Derive insights from your data lake, data warehouse and operational databases&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The steps that data follows through the architecture are as follows:&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Using the Redshift data lake export&lt;/strong&gt; — You can unload the result of a Redshift query to an S3 data lake in Apache Parquet format. The Parquet format is up to 2x faster to unload, and consumes up to 6x less storage in S3, compared to text formats. Redshift Spectrum enables you to query data directly from files in S3
without moving data. Or, you can use Amazon Athena, Amazon EMR, or
Amazon SageMaker to analyze the data.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Using the Redshift federated query&lt;/strong&gt; — You can also access data in Amazon RDS and Aurora PostgreSQL stores directly from your Amazon Redshift data warehouse. In this way, you can access data as soon as it is available. By using federated queries in Amazon Redshift, you can query and analyze data across operational databases, data warehouses, and data lakes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;See the blog post &lt;a href="https://aws.amazon.com/blogs/aws/new-for-amazon-redshift-data-lake-export-and-federated-queries/"&gt;New for Amazon Redshift – Data Lake Export and Federated Query&lt;/a&gt; for additional details.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#gt-derive-insights-from-your-data-lake-data-warehouse-and-purposebuilt-analytics-stores-by-using-glue-elastic-views"&gt;
  &lt;/a&gt;
  -&amp;gt; Derive insights from your data lake, data warehouse, and purpose-built analytics stores by using Glue Elastic Views
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS Glue Elastic Views automates the flow of data from one AWS location to another, helping to eliminate the need for data engineers to write complex extract, transform and load (ETL) or extract, load and transform (ELT) scripts to facilitate data movement in the AWS Cloud. By utilizing CDC technology, you can be assured that you’re getting the latest changes from the source data sources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can just create a view using SQL and pull data out of databases, like DynamoDB or Aurora, and then you can pick a target like Amazon Redshift or S3 or Elastic Search Service, and all changes will propagate through. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can scale up and down automatically. AWS also monitors that flow of data for any change, so all the error handling and monitoring is no longer your responsibility. It simplifies that data movement across services.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS Glue Elastic Views builds on Athena’s federated query capability by making it easier for users to get access to the most up-to-date data while also enabling them to query data wherever it might reside–all using SQL. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The preview of AWS Glue Elastic Views supports DynamoDB and Aurora as sources, and Amazon Redshift and Elasticsearch as targets. The goal is for AWS to add more supported sources and destinations over time. It’s also welcoming customers and partners to use the Elastic Views API to add support for their databases and data stores, too.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following diagram illustrates the “moving the data around the perimeter” Lake House approach with AWS Glue Elastic Views to derive insights.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jr9do65m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32y8rt5kn2zbr3u46dm6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jr9do65m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32y8rt5kn2zbr3u46dm6.gif" alt="Image description" width="568" height="229"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Derive insights from your data lake, data warehouse, and purpose-built analytics stores by using AWS Glue Elastic Views&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;A Lake House architecture, built on a portfolio of purpose-built services, helps you quickly get insight from all your data to all your users. It enables you to build for the future so you can easily add new analytic approaches and technologies as they become
available.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Hope this guide helps you with Designing the Analytics patterns using a Lake House approach on AWS.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section 👇&lt;br&gt;
And if you haven't yet, make sure to follow me on below handles:&lt;/p&gt;

&lt;p&gt;👋 &lt;strong&gt;connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🤓 &lt;strong&gt;connect with me on &lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🐱‍💻 &lt;strong&gt;follow me on &lt;a href="https://github.com/AditModi"&gt;github&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
✍️ &lt;strong&gt;Do Checkout &lt;a href="https://aditmodi.hashnode.dev"&gt;my blogs&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Like, share and follow me 🚀 for more content.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__497987"&gt;
  
    .ltag__user__id__497987 .follow-action-button {
      background-color: #000000 !important;
      color: #fa6c00 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/aditmodi" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYJrtrA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mUzXbt1U--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497987/edde8513-7308-4a4d-9592-2be160d074d2.png" alt="aditmodi image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/aditmodi"&gt;Adit Modi&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/aditmodi"&gt;Cloud Engineer | AWS Community Builder | 8x AWS Certified | 3x Azure Certified | Author of Cloud Tech , DailyDevOps &amp;amp; BigDataJournal | DEV moderator&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://d1.awsstatic.com/whitepapers/derive-insights-from-aws-lake-house.pdf?did=wp_card&amp;amp;trk=wp_card"&gt;Reference Notes&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>bigdata</category>
      <category>cloud</category>
      <category>analytics</category>
    </item>
    <item>
      <title>Convert video to gif in python</title>
      <author>Praveen Kumar</author>
      <pubDate>Thu, 30 Dec 2021 14:44:36 +0000</pubDate>
      <link>https://dev.to/abipravi/convert-video-to-gif-in-python-464n</link>
      <guid>https://dev.to/abipravi/convert-video-to-gif-in-python-464n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-to-convert-raw-video-file-endraw-to-raw-gif-endraw-format-using-python-programming-language"&gt;
  &lt;/a&gt;
  How to convert &lt;code&gt;video file&lt;/code&gt; to &lt;code&gt;gif&lt;/code&gt; format using &lt;strong&gt;Python&lt;/strong&gt; programming language
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;First install module
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install MoviePy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Now Code the following
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;moviepy.editor&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;clip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VideoFileClip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"./video1.mp4"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_gif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"output.gif"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also trim the video from one part and then convert them into gif&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;moviepy.editor&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; 
&lt;span class="n"&gt;clip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VideoFileClip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"./video1.mp4"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;subclip&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ACCORDING&lt;/span&gt; &lt;span class="n"&gt;TO&lt;/span&gt; &lt;span class="n"&gt;THE&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="n"&gt;WISH&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_gif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"output.gif"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for Reading&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wmBtEpkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nefpdykghwyfpuve2f2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wmBtEpkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nefpdykghwyfpuve2f2.gif" alt="Image 1" width="498" height="498"&gt;&lt;/a&gt; &lt;br&gt;
If you like this article please like and leave us an comment&lt;/p&gt;

</description>
      <category>python</category>
      <category>abipravi</category>
    </item>
    <item>
      <title>Bootstrap vs Tailwind CSS</title>
      <author>Kamran Ahmad</author>
      <pubDate>Thu, 30 Dec 2021 13:59:28 +0000</pubDate>
      <link>https://dev.to/officialkamran/bootstrap-vs-tailwind-css-13o8</link>
      <guid>https://dev.to/officialkamran/bootstrap-vs-tailwind-css-13o8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#bootstrap"&gt;
  &lt;/a&gt;
  Bootstrap
&lt;/h2&gt;

&lt;p&gt;Bootstrap is &lt;strong&gt;Component-based&lt;/strong&gt; framework. It is based on &lt;strong&gt;object-oriented CSS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Bootstrap comes with a set of &lt;strong&gt;pre-made components&lt;/strong&gt; that are used to design a typical website quickly.&lt;/p&gt;

&lt;p&gt;Bootstrap CSS is an &lt;strong&gt;easy-to-learn framework&lt;/strong&gt; that maintains consistency for different browser and devices. If you know CSS, then it is pretty easy to learn customization in Bootstrap for website development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css"&gt;
  &lt;/a&gt;
  Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Tailwind is known as Utility-first CSS Framework.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The most interesting feature of Tailwind CSS is &lt;strong&gt;high customization.&lt;/strong&gt; You can style each component of your website as the Tailwind UI demands form it.&lt;/p&gt;

&lt;p&gt;This framework has &lt;strong&gt;no ready-made components&lt;/strong&gt; for designing. You &lt;strong&gt;build your own custom components&lt;/strong&gt; with the utility classes.&lt;/p&gt;

&lt;p&gt;**&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performance-of-bootstrap-vs-tailwind-css"&gt;
  &lt;/a&gt;
  Performance of Bootstrap vs Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap&lt;/strong&gt; requires four main files to be incorporate in the project for development which requires heavy space to be occupaied about &lt;strong&gt;300 kb.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;Tailwind CSS&lt;/strong&gt; , we need style sheets to get our task done. This CSS file occupies about &lt;strong&gt;30kb&lt;/strong&gt; of the space.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-time-of-bootstrap-vs-tailwind-css"&gt;
  &lt;/a&gt;
  Build time of Bootstrap vs Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;In &lt;strong&gt;Bootstrap&lt;/strong&gt;, we have a lot of overhead code and this causes the build time to be around &lt;strong&gt;160 seconds&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As &lt;strong&gt;Tailwind&lt;/strong&gt; has built-in utility libraries, this shortens the build time up to &lt;strong&gt;8 to 10 seconds&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#which-one-to-pick-and-why"&gt;
  &lt;/a&gt;
  Which one to Pick and why?
&lt;/h2&gt;

&lt;p&gt;So, we can conclude that if you are working as a new backend developer or a "Full-Stack" developer, you should opt for Bootstrap first. Whereas if you are working as front-end developer then Tailwind CSS is the better option for the custom designs.&lt;/p&gt;

&lt;p&gt;but in the end, it is your choice either you want to go with Bootstrap for responsive design, or you want high customization in style your web with advantages of Tailwind CSS. it depends on project requirements and personal preferences.&lt;/p&gt;

&lt;p&gt;one more thing you can do for me &lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/kamranah"&gt;buymeacoffee&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>css</category>
      <category>webdev</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>LIVING IN THE ERA OF METAVERSE: 
</title>
      <author>Aqsa A. Razzaq</author>
      <pubDate>Thu, 30 Dec 2021 13:55:25 +0000</pubDate>
      <link>https://dev.to/zenkoders/living-in-the-era-of-metaverse-h3e</link>
      <guid>https://dev.to/zenkoders/living-in-the-era-of-metaverse-h3e</guid>
      <description>&lt;p&gt;When they say METAVERSE, do they actually mean an entire VIRTUAL UNIVERSE?&lt;br&gt;
A world where science will lay off and fiction will meet reality, is this what our future beholds?&lt;br&gt;
These, including several mind-blowing questionnaires, would be running in each one of our minds including us too. But for what has been this hype? Is it just fiction? Or is it a reality? Or maybe, even a fictitious reality?&lt;br&gt;
We have come up today with an answer to a number of your questions.&lt;br&gt;
Metaverse; A Family of apps comprising virtual reality is “an expansive network of persistent, real-time rendered 3D worlds and simulations.”&lt;br&gt;
The word “metaverse” is a portmanteau of two words “meta-” and “verse”. The word “meta” is a prefix of Greek-origin meaning “beyond” while “verse” comes from the word “universe.&lt;br&gt;
The metaverse is officially a game-changer. Though in its infancy, it's clear that the metaverse will radically change how we're able to interact online, how brands advertise, how fast crypto is adopted, and any number of other facets of life. Here's an explainer to help understand what changes are underway—and what's to come.&lt;br&gt;
Cmon’! Let’s watch the metaverse get physical!&lt;br&gt;
Imagine a VIRTUAL WORLD where people can connect from any corner of the glode by actually sitting next to each other, Avatars of every person around the globe representing their respective humans, including wardrobe of virtual clothes. A home space where people can store virtual goods, invite people over, and teleport (a whole different world of gaming where they are in to play). A world where your privacy and safety are taken good care of virtually. Fitness freaks get their own space to spend a good amount of time staying fit without any hassle of actually going or paying to the gym. A platform where businessmen and entrepreneurs can connect to their meetings or clients from everywhere on the earth, physically. Students can learn and practice virtually from history and space by watching every process of required info from closest to their eyes.&lt;br&gt;
Now imagine “YOU“ being a part of this world and actually living in this virtual reality!!! Isn’t it insane? Yes, we know it is.&lt;br&gt;&lt;br&gt;
If you haven’t considered how the metaverse will impact marketing, then you’re already behind the curve. The metaverse isn’t an “if” but a “when.” That is, it’s an inevitability. The metaverse will impact marketing in many ways, some of which you can begin to implement now.&lt;br&gt;
A few days ago, an NFT-based metaverse real estate company named Metaverse Group bought a parcel of land on a virtual real estate platform known as Decentraland for USD 2.43 million. It was the highest ever amount spent so far on virtual real estate!&lt;/p&gt;

&lt;p&gt;Virtual reality isn’t new. It’s been around in one variation or another for decades. Of course, it’s improved leaps in bounds in recent years, and it will continue to do so in the years to come.&lt;br&gt;
So what are the improvements which this new version of the virtual world holds?&lt;br&gt;
Selling physical and digital goods.&lt;br&gt;
Future hardware.&lt;br&gt;
Avatars being able to make actual eye contact and facial expressions. Also, having the same skin tones like that of the representative human.&lt;br&gt;
Measuring geometrics of a house to turn it into an avatar.&lt;br&gt;
From product development to the sale of existing products or services, virtual reality enables you to bring your customers into the fold. They can play an active role in all stages of the process. A virtual world, like aspects of Fortnite that can be accessed through PCs, game consoles, and even phones, could be metaverse.&lt;br&gt;
As the metaverse grows, so too will branding and advertising opportunities. Including virtual message boards, billboards, merchandise, and even the virtual clothing avatars wear.&lt;/p&gt;

&lt;p&gt;With events like this becoming more popular, especially with Generations Z and Alpha, metaverse events won’t just be a tool you can use but a necessity. As your target audience changes, so too will your marketing efforts. This is just one example of how the metaverse will play a role.&lt;/p&gt;

&lt;p&gt;METAVERSE; An ultimate promise of technology to connect people.&lt;br&gt;
It is the future, where just with a pair of glasses you can step beyond the physical world into the virtual world. &lt;/p&gt;

&lt;p&gt;How do you see this world ahead? &lt;/p&gt;

</description>
      <category>metaverse</category>
    </item>
    <item>
      <title>Ultimate list of JavaScript Learning Resource (Free)</title>
      <author>Kamran Ahmad</author>
      <pubDate>Thu, 30 Dec 2021 13:15:12 +0000</pubDate>
      <link>https://dev.to/officialkamran/ultimate-list-of-javascript-learning-resource-free-3kef</link>
      <guid>https://dev.to/officialkamran/ultimate-list-of-javascript-learning-resource-free-3kef</guid>
      <description>&lt;h2&gt;
  &lt;a href="#this-post-is-going-to-have-some-awesome-resources"&gt;
  &lt;/a&gt;
  This post is Going to have some Awesome Resources
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Website&lt;/strong&gt;&lt;br&gt;
👉&lt;a href="https://www.tutorialrepublic.com/"&gt;TutorialRepublic&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.javascript.com/"&gt;Javascript.org&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://htmldog.com/"&gt;HTML Dog&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.freecodecamp.org/"&gt;FreeCodeCamp.org&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.theodinproject.com/"&gt;The Odin Project&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.w3schools.com/"&gt;W3Schools&lt;/a&gt; &lt;br&gt;
👉&lt;a href="https://www.javatpoint.com/"&gt;Javapoint&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://wesbos.com/javascript"&gt;JavaScript Notes  &amp;amp; Reference(by Wesbos)&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.studytonight.com/"&gt;Study Tonight&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.tutorialspoint.com/index.htm"&gt;Tutorial Point&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://devdocs.io/"&gt;Devdocs.io&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN web Docs&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.geeksforgeeks.org/"&gt;Geeks for Geeks&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.sololearn.com/home"&gt;Sololearn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Youtube Channels&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;👉&lt;a href="https://www.youtube.com/c/Freecodecamp"&gt;FreeCodeCamp.org&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/HiteshChoudharydotcom"&gt;Hitesh Chaudhary &lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/Telusko"&gt;Telusko&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/akshaymarch7"&gt;Akshay Saini&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/CodeWithHarry"&gt;CodeWithHarry&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/Academind"&gt;Academaind&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/YahooBaba"&gt;Yahoo Baba&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/TraversyMedia"&gt;Traversy Media&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/TheNetNinja"&gt;The Net Ninja&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/WebDevSimplified"&gt;Web Dev Simplified&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/ThapaTechnical"&gt;Thapa Technical&lt;/a&gt; &lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/dcode-software"&gt;Dcode&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/user/LearnWebCode"&gt;LearnWebCode&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/DevEd"&gt;Dev Ed&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://dev.toJavaScript%20Mastery"&gt;JavaScript Mastery&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/FlorinPop"&gt;Florin Pop&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/CleverProgrammer"&gt;Clever Programmer&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.youtube.com/c/WesBos"&gt;Wes Bos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;E-Book&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;👉&lt;a href="https://eloquentjavascript.net/"&gt;Eloquent JavaScript&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;You Don't Know JS Yet Series&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/"&gt;JavaScript: The Definitive Guide&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.oreilly.com/library/view/javascript-the-good/9780596517748/"&gt;JavaScript: The Good Parts&lt;br&gt;
&lt;/a&gt;👉&lt;a href="https://www.geeksforgeeks.org/difference-between-javascript-and-jquery/"&gt;JavaScript And JQuery&lt;/a&gt;&lt;br&gt;
👉&lt;a href="http://speakingjs.com/es5/"&gt;Speaking JavaScript&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://exploringjs.com/impatient-js/"&gt;JavaScript For Impatient Programmers&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.amazon.in/Effective-JavaScript-Specific-Software-Development/dp/0321812182"&gt;Effective JavaScript &lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.amazon.in/JavaScript-Easy-Steps-Mike-McGrath-ebook/dp/B00DMHO5EK"&gt;JavaScript in Easy Steps&lt;/a&gt;&lt;br&gt;
👉&lt;a href="https://www.amazon.in/Learn-JavaScript-VISUALLY-Interactive-Exercises-ebook/dp/B00LDZ7824"&gt;Learn JavaScript Visually&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Easy understanding of functions in python</title>
      <author>enosemi</author>
      <pubDate>Thu, 30 Dec 2021 13:11:42 +0000</pubDate>
      <link>https://dev.to/enosemi/easy-understanding-of-functions-in-python-1508</link>
      <guid>https://dev.to/enosemi/easy-understanding-of-functions-in-python-1508</guid>
      <description>&lt;p&gt;We should all understand a function is a block of organized reusable code for performing single or related action. Python has many built-in functions that we have probably used e.g &lt;code&gt;print()&lt;/code&gt;,&lt;code&gt;input()&lt;/code&gt;, etc. But there are also user-defined functions which allows you to create a block of code to perform your bidding at any time it is called.&lt;/p&gt;

&lt;p&gt;Now let's look at the python function syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
def functionname(parameters):
   '''block of code'''
   pass

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is as simple as that, next is explaining the use of each keywords in the syntax.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;def&lt;/code&gt; keyword is also know as  define is the first keyword that a function should begin with.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Parameters&lt;/code&gt; or &lt;code&gt;arguments&lt;/code&gt; are placed within the parentheses and we use them inside our function body&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The code block begins after a colon and is usually indented&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's put this into practice and write a function that takes the sum of two numbers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def sum(num1, num2):
      '''this function adds two numbers'''
      Return num1 + num2

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code shows the function name &lt;code&gt;sum&lt;/code&gt; that has two parameters for calculating the sum of two numbers&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-call-a-function"&gt;
  &lt;/a&gt;
  How to call a function
&lt;/h2&gt;

&lt;p&gt;In the previous code we wrote our function wasn't called so if we execute the command it will return nothing. To call a function we just type the function name and the desired parameters.&lt;br&gt;
 Let's try another example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Def sum(a , b):
    #this function add two numbers
    Return num1 + num2
#now call the function
sum(2,5)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-define-a-functionuserdefined-functions"&gt;
  &lt;/a&gt;
  How To Define A Function(User-Defined Functions).
&lt;/h2&gt;

&lt;p&gt;The four steps to defining a function in Python are the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the keyword def to declare the function and follow this up with the function name.&lt;/li&gt;
&lt;li&gt;Add parameters to the function: they should be within the parentheses of the function. End your line with a colon.&lt;/li&gt;
&lt;li&gt;Add statements that the functions should execute.&lt;/li&gt;
&lt;li&gt;End your function with a return statement if the function should output something. Without the return statement, your function will return an object None.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally I want us to know we have two types of functions in python which are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Built-in functions that were developed with the language e.g min()&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;user-defined functions that are created by the users to solve their problem.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>Best CSS Frameworks for 2022</title>
      <author>samlan </author>
      <pubDate>Thu, 30 Dec 2021 13:02:37 +0000</pubDate>
      <link>https://dev.to/samlan/best-css-frameworks-for-2022-1afm</link>
      <guid>https://dev.to/samlan/best-css-frameworks-for-2022-1afm</guid>
      <description>&lt;p&gt;I must admit, when I first got introduced to CSS, I hated the idea of using CSS frameworks. I saw it as a lazy way to go around a challenge. &lt;/p&gt;

&lt;p&gt;But along the way, as I played around with a few frameworks, I realized they save you the headache that is CSS coding. &lt;/p&gt;

&lt;p&gt;In this article, we look at five of the best CSS frameworks that you can start learning or using today. But first, why use frameworks anyway? &lt;/p&gt;

&lt;p&gt;Let’s find out! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-css-frameworks"&gt;
  &lt;/a&gt;
  Why use CSS frameworks?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Help you learn CSS&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are new to CS, centering elements or creating a responsive navbar can be a daunting task – it used to be for me. &lt;/p&gt;

&lt;p&gt;Luckily with CSS frameworks such as Bootstrap, this is a walk in the park.&lt;/p&gt;

&lt;p&gt;These tools introduce you to complex CSS concepts in a beginner-friendly manner allowing you to accelerate your learning process.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Rich documentation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They come with well-detailed documentation so you can refer to them should you get stuck. &lt;/p&gt;

&lt;p&gt;Also, this helps you to smoothly communicate with a client should they request changes or support. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ready to use&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With a CSS framework, you don’t need to build blocks from scratch. They come pre-designed all you have to do is tweak them to your desired outcome. &lt;/p&gt;

&lt;p&gt;Besides, most frameworks will come with pre-built components such as navbars and menus. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cross-browser compatibility&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Imagine the sting you get when you create a website only to realize it does not render in several browsers, awful! Right? This is where frameworks come in. &lt;/p&gt;

&lt;p&gt;They ensure that your websites can render in different browsers with little input on your side.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Clean code&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They make your CSS code clean, readable, and scalable. No longer do you need to use weird class names since they come with pre-determined classes. &lt;/p&gt;

&lt;p&gt;As such, you’ll have an easy time debugging or explaining code to your teammate or client.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-css-frameworks"&gt;
  &lt;/a&gt;
  Types of CSS frameworks
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Preprocessors&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These frameworks provide you with features that are lacking in vanilla CSS. &lt;/p&gt;

&lt;p&gt;While they do not output the CSS code, they help you write the code faster. &lt;/p&gt;

&lt;p&gt;The most popular are Less, SASS, and PostCSS. &lt;/p&gt;

&lt;p&gt;Most CSS preprocessors come with plugins and frameworks for easier coding.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CSS UI frameworks&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They are the most popular CSS frameworks as little coding is needed. &lt;/p&gt;

&lt;p&gt;They feature pre-designed components such as tables. The downside, they might make your website look generic since the HTML structure is pre-determined. &lt;/p&gt;

&lt;p&gt;The most used include Bootstrap, Materialize, and Bulma.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Utility-first CSS frameworks&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to use these frameworks, I recommend having basic CSS skills under your belt. &lt;/p&gt;

&lt;p&gt;Why? Because you’ll have to write vanilla CSS and HTML code. The best part, they are flexible allowing you to create unique HTML structures. &lt;/p&gt;

&lt;p&gt;Frameworks to consider include Tailwind CSS, Tachyons, and Shed.CSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#top-5-css-frameworks"&gt;
  &lt;/a&gt;
  Top 5 CSS frameworks
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#tailwind-css"&gt;
  &lt;/a&gt;
  Tailwind CSS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NDeWmYdM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/66n136i6g8972z947ggi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NDeWmYdM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/66n136i6g8972z947ggi.png" alt="Tailwind CSS" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
If you want a CSS framework that allows you to do more, consider Tailwind CSS. &lt;/p&gt;

&lt;p&gt;In fact, it is becoming a favorite for me. It is lightweight, flexible, and does not come with pre-designed components.&lt;/p&gt;

&lt;p&gt;However, thanks to their classes, you can create components faster. &lt;/p&gt;

&lt;p&gt;Whether you want to use Flexbox or Grid for your layouts, Tailwind CSS got you sorted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why use Tailwind&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Improved productivity&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It allows you to bolster your productivity thanks to the reusable components. &lt;/p&gt;

&lt;p&gt;And since you don’t have to input your classes, it makes creating components from scratcher easier. &lt;/p&gt;

&lt;p&gt;In fact, most experienced front-end developers use it for large projects. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Customizable&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tailwind does not come with pre-made designs. It gives you classes to create the designs. &lt;/p&gt;

&lt;p&gt;As such, you won’t override designs that can crash the website&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Reusable&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do you find yourself copy-pasting classes? Well, with Tailwind, this is a thing of the past. &lt;/p&gt;

&lt;p&gt;Thanks to the Components feature, you can reuse your designs throughout your project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootstrap"&gt;
  &lt;/a&gt;
  Bootstrap
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WwEyLzct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tu2zcobbmngfet8nobua.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwEyLzct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tu2zcobbmngfet8nobua.png" alt="BootStrap" width="880" height="401"&gt;&lt;/a&gt;&lt;br&gt;
This is arguably the most popular framework. Since its introduction in 2011, the framework has gained a reputation among novice and avid front—end developers. &lt;/p&gt;

&lt;p&gt;It makes creating appealing and responsive websites easy eliminating the need for using media queries.&lt;/p&gt;

&lt;p&gt;Fast forward, the framework supports modern CSS allowing you to create better-looking and functioning websites. &lt;/p&gt;

&lt;p&gt;It is the framework that introduced the “mobile-first” concept through the grid concept. &lt;/p&gt;

&lt;p&gt;The concept utilizes 12 columns so you can easily create components that take a third or half of the screen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why use Bootstrap&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pre-made components&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It comes with pre-made components eliminating the need to code them. &lt;/p&gt;

&lt;p&gt;This means you only need to code the HTML structure and apply the provided CSS classes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Most popular&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Being the most popular, the framework attracts a large support community. &lt;/p&gt;

&lt;p&gt;Besides, you can get just about any answer to a Bootstrap question on platforms such as StackOverFlow. &lt;/p&gt;

&lt;p&gt;In fact, its GitHub page consists of more than 2000 contributors.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Detailed documentation&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It has robust documentation that allows you to easily get started with CSS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Customizable&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can customize Bootstrap using SASS. &lt;/p&gt;

&lt;p&gt;With SASS installed, you can import the Bootstrap project and use the SASS variables to give it a personal touch. &lt;/p&gt;

&lt;p&gt;In fact, this is what most front-end developers do to save their coding time.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Reputable support base&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Think of React, Angular, or WordPress. What do they have in common? Backing from an established entity. &lt;/p&gt;

&lt;p&gt;The same case applies to Bootstrap. It is backed by Twitter significantly bolstering the faith among developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#foundation"&gt;
  &lt;/a&gt;
  Foundation
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--luPTB2rC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prg5oky94waynf5wjfst.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--luPTB2rC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prg5oky94waynf5wjfst.png" alt="Foundation" width="880" height="378"&gt;&lt;/a&gt;&lt;br&gt;
Closely following Bootstrap is Foundation. It is built in HTML, CSS, SASS, and JavaScript. &lt;/p&gt;

&lt;p&gt;It is yet another framework that is popular among avid front-end developers. &lt;/p&gt;

&lt;p&gt;This is because it offers flexibility while coming with stellar designs.&lt;/p&gt;

&lt;p&gt;Not only does it allow you to create stunning websites but also animations and emails. &lt;/p&gt;

&lt;p&gt;For this, you’ll need to use Motion UI for animations and Foundation for Emails to create converting emails.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why use Foundation&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ideal for large projects&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Foundation is the most ideal CSS framework for large projects.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Full control&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The framework allows the developer freedom to create components, unlike Bootstrap. &lt;/p&gt;

&lt;p&gt;As such the framework is well-suited for established developers since you’ll have to incorporate vanilla CSS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Support&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The company behind Foundation offers support to large clients. It also offers training to teams which is uncommon with other frameworks on the list. &lt;/p&gt;

&lt;p&gt;Besides, ZURB – the company behind it – does not treat Foundation as a side project, rather, it pours its resources to advance the framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bulma"&gt;
  &lt;/a&gt;
  Bulma
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---lGzUmxa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iwjlteqik68tyqo58sj5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---lGzUmxa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iwjlteqik68tyqo58sj5.png" alt="Bulma" width="880" height="436"&gt;&lt;/a&gt;&lt;br&gt;
While a new entrant in the market, Bulma has attracted a large user base thanks to its elegance and beginner-friendliness. &lt;/p&gt;

&lt;p&gt;What’s more, it is entirely created in CSS, unlike other frameworks that have JavaScript components.&lt;/p&gt;

&lt;p&gt;The framework is a favorite among many front-end devs since it allows you to create visually appealing designs. &lt;/p&gt;

&lt;p&gt;With SASS, you can seamlessly customize components to your liking with little input. &lt;/p&gt;

&lt;p&gt;Not only is it compatible with Font Awesome 4 and 5 but also with Laravel (a PHP framework).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why use Bulma?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Elegant&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If it’s daunting to come up with elegant designs, I’d recommend you use Bulma. &lt;/p&gt;

&lt;p&gt;It eliminates the fluffy CSS codes allowing you to use easy-to-read CSS classes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Easy to learn&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bulma has a rather flat learning curve. However, this is dependent on your CSS foundation skills.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Large and growing community&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As of writing, the framework has more than 40K starts on its Github page. &lt;/p&gt;

&lt;p&gt;This means that developers buy into the idea of using Bulma.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#materialize-css"&gt;
  &lt;/a&gt;
  Materialize CSS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eZ7khH3A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gt58n6rktmku8qj6tog.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eZ7khH3A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gt58n6rktmku8qj6tog.png" alt="Materialize CSS" width="880" height="434"&gt;&lt;/a&gt;&lt;br&gt;
Finally, we have Materialize CSS from Google. The main aim of the framework is to achieve uniformity to Google UI using Google Material Design. &lt;/p&gt;

&lt;p&gt;It is written in JavaScript, CSS, and HTML. It is hailed for enabling one to create responsive, elegant, and browser-compatible websites. &lt;/p&gt;

&lt;p&gt;And if you are into animations, I bet you’ll love working with Materialize CSS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why use Materialize CSS?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Elegance&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It has an elegant design that allows for the creation of appealing web components. &lt;/p&gt;

&lt;p&gt;Besides, you can use their exquisite templates.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Smooth learning&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Curve it comes with easy-to-understand documentation that makes learning a walk in the park.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-verdict"&gt;
  &lt;/a&gt;
  Final verdict
&lt;/h2&gt;

&lt;p&gt;While this is not an exhaustive list, these are some of the popular CSS frameworks that have a large community. &lt;/p&gt;

&lt;p&gt;There are supported by at least all browsers and make learning and using CSS seamless.&lt;/p&gt;

&lt;p&gt;Other frameworks that you can consider include Skeleton, Sematic UI, Pure CSS, and Susy. &lt;/p&gt;

&lt;p&gt;So, which CSS framework do you use for your projects? Let me know in the comment section.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>css</category>
    </item>
    <item>
      <title>Drag and Drop with React (with no libraries) part 2</title>
      <author>Aaron Wolf</author>
      <pubDate>Thu, 30 Dec 2021 12:59:20 +0000</pubDate>
      <link>https://dev.to/wolfmath/drag-and-drop-with-react-519m</link>
      <guid>https://dev.to/wolfmath/drag-and-drop-with-react-519m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;In this tutorial I will show how to make a Drag and Drop component from scratch (no libraries) using React.&lt;/p&gt;

&lt;p&gt;I already made a post on Drag and Drop in React, so why make a new one?&lt;/p&gt;

&lt;p&gt;Well, many of us learn new things and think we have a good understanding of it. But then we learn more and realize that there was more to know. So I made a new Drag and Drop that uses better methodologies. Enjoy. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#important-info"&gt;
  &lt;/a&gt;
  Important info
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;There exists &lt;code&gt;e.dataTransfer&lt;/code&gt; which helps with drag and drop functionality, but as we're using React I find using state to be simpler.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make sure to check out the &lt;a href="https://codesandbox.io/s/change-cursor-on-dragover-rfl5u?file=/src/Dnd.js"&gt;Code Sandbox&lt;/a&gt;. I may add a few things that aren't reflected below, but the code below is complete.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You might know a better way to do this! If you think you can improve the code please comment.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#drag-and-drop-in-html5"&gt;
  &lt;/a&gt;
  Drag and Drop in HTML5
&lt;/h2&gt;

&lt;p&gt;There are a few new elements that we will be using (we're not using &lt;em&gt;all&lt;/em&gt; of the HTML5 Drag and Drop elements).&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;draggable&lt;/code&gt; makes a div &lt;strong&gt;draggable&lt;/strong&gt; (instead of highlighting)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;onDragStart&lt;/code&gt; fires when you &lt;strong&gt;begin&lt;/strong&gt; to drag&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;onDragEnter&lt;/code&gt; fires ONCE when the dragged div &lt;strong&gt;enters&lt;/strong&gt; another.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;onDragOver&lt;/code&gt; fires &lt;strong&gt;CONTINUOUSLY&lt;/strong&gt; when &lt;strong&gt;dragging over&lt;/strong&gt; a div&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;onDrop&lt;/code&gt; fires when the &lt;strong&gt;mouse click is released&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The final 4 of these we will pass to JavaScript to give it the DND logic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started.
&lt;/h2&gt;

&lt;p&gt;Let's make a some &lt;code&gt;groups&lt;/code&gt; to drag between and some &lt;code&gt;item&lt;/code&gt;s to be dragged around.&lt;/p&gt;

&lt;p&gt;Dnd.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState } from "react";
import "./Dnd.scss";

export default function Dnd() {

  // my groups to be dragged between

  const groups = ["group1", "group2", "group3", "noDrop"];

  // My items to be dragged around

  const initialItems = [
    { id: 1, group: "group1", value: "drag 1" },
    { id: 2, group: "group1", value: "drag 2" },
    { id: 3, group: "group1", value: "drag 3" }
  ];

  return (
    &amp;lt;&amp;gt;

      // Creating the group divs 

      &amp;lt;div className="groups"&amp;gt;
        {groups.map((group) =&amp;gt; (
          &amp;lt;div className="group"&amp;gt;
            &amp;lt;h1 className="title"&amp;gt;{group}&amp;lt;/h1&amp;gt;
            &amp;lt;div&amp;gt;

              // Creating our items to drag and drop

              {items
                .filter((item) =&amp;gt; item.group === group)
                .map((item) =&amp;gt; (
                  &amp;lt;div
                    key={item.id}
                    id={item.id}
                    className="item"

                    // THIS MAKES THE ITEM DRAGGABLE!!!

                    draggable
                  &amp;gt;
                     // item title
                    {item.value}
                  &amp;lt;/div&amp;gt;
                ))}
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
        ))}
      &amp;lt;/div&amp;gt;
    &amp;lt;/&amp;gt;
  );
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dnd.scss&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.groups {
  display: flex;
  margin: 5px;
  padding: 5px;
  flex-wrap: wrap;


  .group {
    margin: 2px;
    padding: 20px;
    min-height: 16rem;
    background-color: green;

    .title{
      color: white;
      padding: 0;
      margin-top: 0;
    }
  }
}


.item {
  background-color: yellow;
  color: blue;
  margin: 5px;
  padding: 5px;
  border: 2px green;
  cursor: grab;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates something that looks like this: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hCctbvaH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdoz1o8do2cr1zvt8s3y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hCctbvaH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdoz1o8do2cr1zvt8s3y.png" alt="Image description" width="705" height="311"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we'll add the events and event handlers. Make sure to read the comments in the code as that's where the explanations are. I think this is simpler than describing everything.&lt;/p&gt;

&lt;p&gt;Hint: The comments are easier to read in the &lt;a href="https://codesandbox.io/s/change-cursor-on-dragover-rfl5u?file=/src/Dnd.js"&gt;Code Sandbox&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dnd.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState } from "react";
import "./Dnd.scss";

export default function Dnd() {
  // Initial groups to drag between
  const groups = ["group1", "group2", "group3", "noDrop"];
  // Initial items to be dragged 
  const initialItems = [
    { id: 1, group: "group1", value: "drag 1" },
    { id: 2, group: "group1", value: "drag 2" },
    { id: 3, group: "group1", value: "drag 3" }
  ];
  // Sets the state of the items. I may add an "add" function later
  // Can be used to add items
  const [items, setItems] = useState(initialItems);
  // Data about a things id, origin, and destination
  const [dragData, setDragData] = useState({});
  // Are we hovering over the noDrop div?
  const [noDrop, setNoDrop] = useState("");

  // onDragStart we setDragData.
  // useState instead of e.dataTransfer so we can transfer more data
  const handleDragStart = (e, id, group) =&amp;gt; {
    setDragData({ id: id, initialGroup: group });
  };

  // If we enter the noDrop zone the state will be updated
  // Used for styling.
  const handleDragEnter = (e, group) =&amp;gt; {
    if (group === "noDrop") {
      setNoDrop("noDrop");
    }
  };

  // DND will not work without this.
  const handleDragOver = (e) =&amp;gt; {
    e.preventDefault();
  };

  // setNoDrop to nothing to return styling to normal
  const handleDragLeave = (e) =&amp;gt; {
    setNoDrop("");
  };

  // 1. makes copy of items (newItems)
  // 2. changes category of the item to its new group
  // 3. setItem to our NewItems
  const changeCategory = (itemId, group) =&amp;gt; {
    const newItems = [...items];
    newItems[itemId - 1].group = group;
    setItems([...newItems]);
  };

  // 1. setNoDrop in case item was dropped in noDrop
  // 2. gets the item id
  // 3. doesn't allow drop in noDrop
  // 4. changeCategory (see above)
  const handleDrop = (e, group) =&amp;gt; {
    setNoDrop("");
    const selected = dragData.id;
    if (group === "noDrop") {
      console.log("nuh uh");
    } else {
      changeCategory(selected, group);
    }
  };

  return (
    &amp;lt;&amp;gt;
      &amp;lt;div className="groups"&amp;gt;
        {/* iterate over groups */}
        {groups.map((group) =&amp;gt; (
          &amp;lt;div
            // change styling if dragging into noDrop zone
            className={`${
              group === "noDrop" &amp;amp;&amp;amp; noDrop === "noDrop" ? noDrop : "group"
            }`}
            // event handlers
            onDragEnter={(e) =&amp;gt; handleDragEnter(e, group)}
            onDragOver={handleDragOver}
            onDragLeave={handleDragLeave}
            onDrop={(e) =&amp;gt; handleDrop(e, group)}
            key={group}
          &amp;gt;
            &amp;lt;h1 className="title"&amp;gt;{group}&amp;lt;/h1&amp;gt;
            &amp;lt;div&amp;gt;
              {/* iterate over items */}
              {items
                .filter((item) =&amp;gt; item.group === group)
                .map((item) =&amp;gt; (
                  &amp;lt;div
                    key={item.id}
                    id={item.id}
                    // change style if dragged over noDrop
                    className={`${
                      group === "noDrop" &amp;amp;&amp;amp; noDrop === "noDrop"
                        ? "notAllowed"
                        : "item"
                    }`}
                    // MAKES THE ITEM DRAGGABLE!!!!
                    draggable
                    // event handler
                    onDragStart={(e) =&amp;gt; handleDragStart(e, item.id, group)}
                  &amp;gt;
                    {/* The name of each item */}
                    {item.value}
                  &amp;lt;/div&amp;gt;
                ))}
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
        ))}
      &amp;lt;/div&amp;gt;
    &amp;lt;/&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dnd.scss&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.groups {
  display: flex;
  margin: 5px;
  padding: 5px;
  flex-wrap: wrap;


  .group {
    margin: 2px;
    padding: 20px;
    min-height: 16rem;
    background-color: green;

    .title{
      color: white;
      padding: 0;
      margin-top: 0;
    }
  }
  .noDrop {
    margin: 2px;
    padding: 20px;
    min-height: 16rem;
    background-color: red;
    cursor: not-allowed !important;

    .title{
      color: white;
      padding: 0;
      margin-top: 0;
    }
  }
}


.item {
  background-color: yellow;
  color: blue;
  margin: 5px;
  padding: 5px;
  border: 2px green;
  cursor: grab;
}

.notAllowed {
  background-color: yellow;
  color: blue;
  margin: 5px;
  padding: 5px;
  border: 2px green;
  cursor: not-allowed;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#this-is-what-it-looks-like"&gt;
  &lt;/a&gt;
  This is what it looks like
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iyaHYFeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vcxwt7g8lvah8amwn2r.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iyaHYFeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vcxwt7g8lvah8amwn2r.gif" alt="Image description" width="718" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This is the basic gist of it. If you need something simple that works this is it, otherwise feel free to install a library. &lt;/p&gt;

&lt;p&gt;Watch it in action! &lt;a href="https://codesandbox.io/s/change-cursor-on-dragover-rfl5u?file=/src/Dnd.js"&gt;See the Code Sandbox&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>All About Arrow Functions</title>
      <author>Aravind Sanjeev</author>
      <pubDate>Thu, 30 Dec 2021 12:52:11 +0000</pubDate>
      <link>https://dev.to/aravsanj/all-about-arrow-functions-8eo</link>
      <guid>https://dev.to/aravsanj/all-about-arrow-functions-8eo</guid>
      <description>&lt;p&gt;Arrow functions are an alternative to regular functions in JavaScript. They have short and simple syntax. But they weren't designed just to have a shorter and simpler way to write functions. In this post, we will deep dive in to the logic and reasoning for introducting arrow functions in JavaScript. We'll also walk through examples on the way. Buckle up!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#functions-in-javascript"&gt;
  &lt;/a&gt;
  Functions in JavaScript
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.humaneer.org/blog/everything-you-need-to-know-about-js-functions"&gt;Functions in JavaScript&lt;/a&gt; are created using the &lt;code&gt;function&lt;/code&gt; keyword. You can also assign a function definition to a variable to create a function expression.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// function declaration&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// function expression&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;double&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Arrow functions are function expressions but they don't use &lt;code&gt;function&lt;/code&gt; keyword. Instead, they have the fat arrow syntax.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// arrow function&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;double&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way of creating functions comes with much simpler syntax. But more importantly, there is also a difference in how the scope gets implemented.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scope"&gt;
  &lt;/a&gt;
  Scope
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.humaneer.org/blog/JavaScript-scope-an-easy-explanation"&gt;Scope&lt;/a&gt; of a variable determines where the variable can be used. A variable declared in global scope can be used everywhere compared to a variable declared in function scope, which can be only used inside the function.&lt;/p&gt;

&lt;p&gt;If you think vice-versa, a function has to be declared in the right scope to access the right variable. A function declared in global scope cannot access a variable declared inside an object.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#functions-and-scope"&gt;
  &lt;/a&gt;
  Functions and scope
&lt;/h3&gt;

&lt;p&gt;Regular functions in JavaScript defines its own scope depending on their invocation. The following function will be in global scope.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;globalFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;globalFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Window&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, this one will be in object scope.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The difference is that one was invoked as a normal function while the other was invoked as a method. This becomes a problem when you have a situation like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Window&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we have a function &lt;code&gt;hello&lt;/code&gt; that is invoked inside a &lt;code&gt;method&lt;/code&gt;. However, since the function &lt;code&gt;hello&lt;/code&gt; was invoked normally, it ends up in global context. This becomes an issue when we have to use variables defined inside the object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My name is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// My name is undefined&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since the function &lt;code&gt;hello&lt;/code&gt; has global scope, &lt;code&gt;this&lt;/code&gt; represents &lt;code&gt;Window&lt;/code&gt; object. So the value of &lt;code&gt;name&lt;/code&gt; is undefined.&lt;/p&gt;

&lt;p&gt;To overcome this, we can use solutions like &lt;code&gt;bind()&lt;/code&gt; (or arrow functions, which will discuss in a while).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My name is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bindedHello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;bindedHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// My name is Mike&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the uninitiated, &lt;code&gt;bind()&lt;/code&gt; method is used to bind a function to a scope. In the above case, we binded function &lt;code&gt;hello&lt;/code&gt; to scope of &lt;code&gt;obj&lt;/code&gt; which is the value of &lt;code&gt;this&lt;/code&gt;. Now the &lt;code&gt;bindedHello()&lt;/code&gt; is being executed inside the &lt;code&gt;obj&lt;/code&gt; scope. So variable &lt;code&gt;name&lt;/code&gt; has value Mike.&lt;/p&gt;

&lt;p&gt;This might look like a straight-forward solution, but as the code gets complex, it becomes immensely difficult to predict the value of &lt;code&gt;this&lt;/code&gt;. There will also be a swarm of confusion on which method is appropriate - bind, call, or apply. There is also a reduced performance associated with the &lt;code&gt;bind()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;In the end, these are all work arounds to an obvious solution - &lt;em&gt;lexical scoping&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lexical-scope"&gt;
  &lt;/a&gt;
  Lexical scope
&lt;/h3&gt;

&lt;p&gt;Lexical scoping is simply inheriting the scope of your parent along with your own scope. In the above case, if the function &lt;code&gt;hello&lt;/code&gt; had lexical scoping, it would have object scope instead of window scope. So, the big deal about arrow functions is that it comes with lexical scoping.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mike&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My name is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// My name is Mike&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So arrow functions cannot change the value of &lt;code&gt;this&lt;/code&gt; depending on how they're invoked. It inherits scope of its parent. In the above case, function &lt;code&gt;hello&lt;/code&gt; inherited scope from &lt;code&gt;meth&lt;/code&gt;. Since &lt;code&gt;meth&lt;/code&gt; has object scope as it was invoked as a method, so will function &lt;code&gt;hello&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On the flip side, you cannot use arrow functions as methods for the same reason.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Window&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since arrow functions does not have the ability to define its own &lt;code&gt;this&lt;/code&gt;, it doesn't matter whether it was invoked as a method in the above case. It will always inherit the scope of parent. The parent here is &lt;code&gt;obj&lt;/code&gt; which is in window scope.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#arrow-functions"&gt;
  &lt;/a&gt;
  Arrow functions
&lt;/h2&gt;

&lt;p&gt;Now that we learned the big deal about arrow functions is that it comes with lexical scoping, let's dig a little deeper.&lt;/p&gt;

&lt;p&gt;Arrow functions have deliberate limitations,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It cannot have binding to &lt;code&gt;this&lt;/code&gt; or &lt;code&gt;super&lt;/code&gt; (due to lexical scoping)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;bind&lt;/code&gt;, &lt;code&gt;call&lt;/code&gt;, and &lt;code&gt;apply&lt;/code&gt; methods doesn't work as intended as they cannot establish a new scope&lt;/li&gt;
&lt;li&gt;Cannot be used as constructors. Constructors use the &lt;code&gt;new&lt;/code&gt; keyword to create new instances. It is not possible to create a new instance of an arrow function when you cannot actually change the scope.&lt;/li&gt;
&lt;li&gt;Host of other related limitations.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use-arrow-functions"&gt;
  &lt;/a&gt;
  When to use arrow functions?
&lt;/h3&gt;

&lt;p&gt;Arrow functions are very limited in nature but there are instances where this limitation can be a gift. We already saw that we can use arrow functions inside a method without loosing scope. So here are few instances where you should be using arrow functions instead of regular ones.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. When it offers simpler syntax&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// regular function&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// arrow function&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;double&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above case, there is no need to go for the longer, less-readble syntax when you can just get away with the arrow function. Note that unlike regular function declaration, arrow functions does not have &lt;a href="https://www.humaneer.org/blog/javascript-hoisting-eloquently-explained"&gt;hoisting&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Inside array methods&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doubled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;doubled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// [2, 4, 6, 9, 10]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using arrow functions inside array methods make our lives far easier. The code typically remains in a single line maximizing readability.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Which Python Framework is fastest?  </title>
      <author>Dhruv Rajkotia</author>
      <pubDate>Thu, 30 Dec 2021 12:29:26 +0000</pubDate>
      <link>https://dev.to/dhruv_rajkotia/which-python-framework-is-fastest-2fgo</link>
      <guid>https://dev.to/dhruv_rajkotia/which-python-framework-is-fastest-2fgo</guid>
      <description>&lt;p&gt;Now a days, we have seen an usage of the web development is increased a lot &amp;amp; along with that Python language is became the world's 2nd most popular programming language based on it's usage. Python has grown to become one of the most popular server-side languages on the Internet. According to W3Techs, it is used by more high-traffic sites than ColdFusion, PHP, ASP.NET And Java. Even Tech giants like Google, Facebook, Netflix, Microsoft all have started using the Python as a server side language for their applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qzxWxV9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrgmm2gmhpflcu62g1hs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qzxWxV9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrgmm2gmhpflcu62g1hs.gif" alt="Image description" width="500" height="320"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Today, there is a wide variety of Python frameworks that make creating web applications much easier. These frameworks bring together the modules and packages that allow you to build applications quickly, without the need to take care of involved details, like sockets and protocols, all in one place. &lt;/p&gt;

&lt;p&gt;Top Python Frameworks&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Django&lt;/li&gt;
&lt;li&gt;Flask&lt;/li&gt;
&lt;li&gt;FastAPI&lt;/li&gt;
&lt;li&gt;CherryPy&lt;/li&gt;
&lt;li&gt;Bottle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To know more Python frameworks visit &lt;a href="https://www.upgrad.com/blog/top-python-framework-for-web-development/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now our questions arise, which python framework is fastest among all the python frameworks. Based on the &lt;a href="https://www.techempower.com/benchmarks/#section=test&amp;amp;runid=7464e520-0dc2-473d-bd34-dbdfd7e85911&amp;amp;hw=ph&amp;amp;test=query&amp;amp;l=v2qiv3-db&amp;amp;a=2"&gt;Techempower&lt;/a&gt; listing, Fastest Python Framework is "&lt;strong&gt;FastAPI&lt;/strong&gt;". &lt;/p&gt;

&lt;p&gt;FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.&lt;/p&gt;

&lt;p&gt;The key features are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fast: Very high performance, on par with NodeJS and Go. One of the fastest Python frameworks available.&lt;/li&gt;
&lt;li&gt;Fast to code: Increase the speed to develop features by about 200% to 300%. *&lt;/li&gt;
&lt;li&gt;Fewer bugs: Reduce about 40% of human (developer) induced errors. *&lt;/li&gt;
&lt;li&gt;Intuitive: Great editor support. Completion everywhere. Less time debugging.&lt;/li&gt;
&lt;li&gt;Easy: Designed to be easy to use and learn. Less time reading docs.&lt;/li&gt;
&lt;li&gt;Short: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.&lt;/li&gt;
&lt;li&gt;Robust: Get production-ready code. With automatic interactive documentation.&lt;/li&gt;
&lt;li&gt;Standards-based: Based on (and fully compatible with) the open standards for APIs: OpenAPI (previously known as Swagger) and JSON Schema.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can check the full documentation &lt;a href="https://fastapi.tiangolo.com/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I do recommend to check the documentation and use this framework for one of your microservice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;br&gt;
As there are so many Python frameworks available in the market, we first need to identify which framework we should use to build our web applications. So we need to identify which Python framework is best, easy and fast. Python FastAPI is one of the fastest and come up with so many good features which reduce the development efforts. So I would highly recommend to use this framework for one of your next web services. Hope you liked it. Have a Great Day. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rfvbxqJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rh594ku9d2j4ua1ls3nu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rfvbxqJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rh594ku9d2j4ua1ls3nu.gif" alt="Image description" width="380" height="304"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Will automated cloud optimization replace your DevOps job?</title>
      <author>CAST AI</author>
      <pubDate>Thu, 30 Dec 2021 12:20:53 +0000</pubDate>
      <link>https://dev.to/castai/will-automated-cloud-optimization-replace-your-devops-job-2h8m</link>
      <guid>https://dev.to/castai/will-automated-cloud-optimization-replace-your-devops-job-2h8m</guid>
      <description>&lt;p&gt;Everything about automation sounds tempting. Apart from the fact that it would be doing the tasks that now take a good chunk of your day? Let’s see if automation can really put your DevOps, cloud engineer, or solutions architect job at risk anytime soon.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Replacing human folly for algorithmic efficiency means faster and better service and a perfect cheeseburger every time. So what can you expect when automated solutions start making decisions about your cloud infrastructure?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well, with the tasks it can do, automation certainly buys you time to do more interesting things than micromanaging your cloud infrastructure.&lt;/p&gt;

&lt;p&gt;I wrote a guide to help you understand the impact of automation on your job:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#therearenotnearlyenoughqualifiedengineers"&gt;There are not nearly enough qualified engineers in the world&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thepathtoautomationisunavoidableintech"&gt;The path to automation is unavoidable in tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cloudcomputinghasalreadyreducedjobs"&gt;Cloud computing has already reduced quite a few jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#butwhataboutdevops"&gt;But what about DevOps?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cloudautomationisntgoingtoreplaceyourjob"&gt;Cloud automation isn’t going to replace your job - it’s going to transform it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#whatcanyouexpectfromautomatedcloudcostoptimization"&gt;What can you expect from automated cloud cost optimization?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#heresanexampleofhowautomatecloudoptimizationworks"&gt;Here’s an example of how automated cloud optimization works&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dontspendtimemicromanagingyourinfrastructure"&gt;Don’t spend time micromanaging your infrastructure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="therearenotnearlyenoughqualifiedengineers"&gt;There are not nearly enough qualified engineers in the world&lt;/h2&gt;

&lt;p&gt;Just look at the job market for DevOps and cloud engineers.&lt;/p&gt;

&lt;p&gt;There are some &lt;a href="https://www.replacedbyrobot.info/5054/devops-engineer"&gt;794k DevOps engineers&lt;/a&gt; on the US market. According to the &lt;a href="https://devopsinstitute.com/upskilling-2020/"&gt;Upskilling 2020: Enterprise DevOps Skills Report&lt;/a&gt;, finding skilled DevOps experts and retaining them are two top challenges today. HR managers are ready to participate in a round of Squid Game just to get you on board.&lt;/p&gt;

&lt;p&gt;And the requirements in this area are only going to grow because merely building a smooth CI/CD pipeline is no longer enough. Also because engineers are tasked with ever more repetitive tasks to do.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Even if automation managed to reduce some of these tasks, it’s nowhere near enough to solve the skill shortage in the field. Realistically, it could help you transition from doing the job of three people (as it happens now) to a process that is more sustainable.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;One site based on the research from The University of Oxford gives DevOps engineers a meek &lt;a href="https://www.replacedbyrobot.info/5054/devops-engineer"&gt;4.2% chance of getting replaced by automation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="thepathtoautomationisunavoidableintech"&gt;The path to automation is unavoidable in tech&lt;/h2&gt;

&lt;p&gt;Writing code is also getting automated. And this approach is already fostered by industry leaders like GitHub’s CEO Chris Wanstrath who expects that in the future, &lt;a href="http://www.businessinsider.com/github-ceo-wanstrath-says-automation-will-replace-software-coding-2017-10"&gt;coding will be fully automated&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then there’s Will Iverson, the CEO of Dev9, who uses automation to power a process he calls “Continuous Development” where small teams write code and AI does the&lt;a href="https://www.forbes.com/sites/julianmitchell/2016/07/11/robots-replacing-developers-this-startup-uses-artificial-intelligence-to-build-smart-software/#7bfe82df324c"&gt; automated testing and deployment&lt;/a&gt;. This speeds up the delivery rate and minimizes labor costs.&lt;/p&gt;

&lt;h2 id="cloudcomputinghasalreadyreducedjobs"&gt;Cloud computing has already reduced quite a few jobs&lt;/h2&gt;

&lt;p&gt;If your business uses the cloud infrastructure of AWS, you sure need to dedicate time to managing it properly. So, you hire software engineers and give this job to them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But what if you never turned to AWS and its wonderland of managed services? &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You’d have to build a cloud platform on your own - and hire way more engineers to take care of your infrastructure’s integrity, security, scalability, and more. AWS solved this problem for you. And then automated its solutions with managed services. &lt;/p&gt;

&lt;p&gt;So, companies that use public cloud services no longer need to have an army of experts in data center, virtualization, storage, or database administrator teams.&lt;/p&gt;

&lt;h2 id="butwhataboutdevops"&gt;But what about DevOps?&lt;/h2&gt;

&lt;p&gt;DevOps is all about enabling teams to release often and reduce bottlenecks. This is impossible without automated build or testing. &lt;/p&gt;

&lt;p&gt;Automation has been the fundamental pillar of DevOps since its inception. And it works.&lt;/p&gt;

&lt;p&gt;In the &lt;a href="https://puppet.com/resources/report/2021-state-of-devops-report"&gt;2021 State of DevOps Report&lt;/a&gt;, an overwhelming majority (97%) of companies that are advanced in their DevOps journey agreed that automation improves the quality of their work. &lt;/p&gt;

&lt;p&gt;But then some criticize DevOps as a justification for the “&lt;a href="https://www.techerati.com/features-hub/opinions/devops-automation-jobs-digital-transformation/"&gt;firing of a lot of people&lt;/a&gt;”. This opinion gained traction because of the general interest in how automation impacts jobs outside of IT and society as a whole.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In case you’re wondering about that, the &lt;a href="https://www.weforum.org/agenda/2020/10/dont-fear-ai-it-will-lead-to-long-term-job-growth/"&gt;World Economic Forum&lt;/a&gt; estimates that by 2025, technology will bring about at least 12 million more jobs than it wipes out. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You need someone who can align this development culture with all the other processes happening in the business. And develop cloud-native solutions. And make sure that key customer services actually get better thanks to all that automation and orchestration.&lt;/p&gt;

&lt;p&gt;All of the above is hours of thinking that automation won’t replace. But it will buy you more time to do it.&lt;/p&gt;

&lt;h2 id="cloudautomationisntgoingtoreplaceyourjob"&gt;Cloud automation isn’t going to replace your job - it’s going to transform it&lt;/h2&gt;

&lt;p&gt;If you’ve ever been in charge of managing your cloud spend, you probably know how much time and effort goes into it. &lt;/p&gt;

&lt;p&gt;Here’s a &lt;strong&gt;typical cost optimization sequence&lt;/strong&gt; most of our clients followed &lt;strong&gt;before starting to use automation&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Take a snapshot of your cloud costs at a specific point in time.&lt;/li&gt;
&lt;li&gt;Allocate costs to teams or departments to understand where they come from.&lt;/li&gt;
&lt;li&gt;Identify usage and growth patterns to clarify which of the costs make sense and which ones are good candidates for optimization.&lt;/li&gt;
&lt;li&gt;Examine your infrastructure in-depth to check whether you could eliminate any of your costs (like abandoned projects, shadow IT projects, or unused instances that were left running).&lt;/li&gt;
&lt;li&gt;Examine the virtual machines and other resources used by your teams to check for overprovisioning or underutilization.&lt;/li&gt;
&lt;li&gt;Come up with an optimization plan and reach out to the engineering team for buy-in and confirmation. &lt;/li&gt;
&lt;li&gt;Also, do your best to convince engineers that costs are just as important as performance when it comes to cloud resources.&lt;/li&gt;
&lt;li&gt;Once everything is approved, implement the infrastructure changes.&lt;/li&gt;
&lt;li&gt;Now it’s time to think about the future. Analyze your requirements and start planning how you’re going to get extra capacity or remove resources you’ll no longer need.&lt;/li&gt;
&lt;li&gt;Take a look at your cloud provider’s offer to learn about their pricing, forecast your costs, reserve capacity upfront, or negotiate volume discounts with the vendor.&lt;/li&gt;
&lt;li&gt;Establish rules for teams to follow to use the discounted resources you bought to the fullest.&lt;/li&gt;
&lt;li&gt;And then hope that your cloud bill is as high as you expect it to be at the end of the month!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;It’s clear that allocating, understanding, analyzing, and forecasting cloud costs takes a lot of time. &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And it’s not something you do once a month. To achieve reasonable savings manually, you need to constantly apply infrastructure changes, spin up new resources, and many other things that allow building a cost-efficient infrastructure that responds to the current demand.&lt;/p&gt;

&lt;p&gt;An automated cloud optimization solution takes all of these tasks off your plate:&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iIiwqUU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/12/CMKT-12-1080x1080-Cloud-Native.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iIiwqUU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/12/CMKT-12-1080x1080-Cloud-Native.png" alt="automated cloud cost optimization" width="880" height="978"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="whatcanyouexpectfromautomatedcloudcostoptimization"&gt;What can you expect from automated cloud cost optimization?&lt;/h2&gt;

&lt;p&gt;Typically, an automated solution will take care of these tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Selecting the most cost-efficient instance types and sizes to match the demand of your applications,&lt;/li&gt;
&lt;li&gt;Autoscaling cloud resources to handle spikes and drops in demand,&lt;/li&gt;
&lt;li&gt;Removing resources that aren’t being used to cut costs,&lt;/li&gt;
&lt;li&gt;Automating Spot instance usage by handling potential interruptions gracefully,&lt;/li&gt;
&lt;li&gt;Helping you to avoid costs in other areas - automating storage and backups, security, and various changes to configurations and settings.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Most importantly, automation means that all of these changes are applied in real time. This is how you master cloud cost optimization which is a point-in-time exercise.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All of this gets done without adding any repetitive tasks. The solution keeps an eye on your application and the available resources 24/7 to identify new savings opportunities and scale things up or down instantly.&lt;/p&gt;

&lt;h2 id="heresanexampleofhowautomatecloudoptimizationworks"&gt;Here’s an example of how automated cloud optimization works&lt;/h2&gt;

&lt;p&gt;Our team was running our application on a mix of AWS On-demand and Spot instances. We used CAST AI to analyze our setup and find the most cost-effective Spot instance alternatives. We needed a machine with 8 CPUs and 16 GB.&lt;/p&gt;

&lt;p&gt;The platform opted for an instance called INF1. But wait, isn’t that the incredibly expensive supercomputer with a powerful ML-specialized GPU?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why did CAST AI pick it?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Everything was clear once we checked the pricing. As it turned out, at that time INF1 happened to be cheaper than the general-purpose virtual machines we used. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If an engineer had to pick this manually, they would have never guessed to look for an instance in this category. &lt;/strong&gt;Automation gives a helping hand in finding this hidden gem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dPD8b4X_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/4JyY0MkyqcKJh3FyySgrggZnxzd8MMT6PeFGQzoVEqO2zK1BBOYWaXb-45XD279nbGNhdQK3_u5GC6RY9n7rQOYYFm1akYc2J5UoDMfPCvg-tT8QeyvFdFqSYcWC8_M1CG9hFQqX" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dPD8b4X_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/4JyY0MkyqcKJh3FyySgrggZnxzd8MMT6PeFGQzoVEqO2zK1BBOYWaXb-45XD279nbGNhdQK3_u5GC6RY9n7rQOYYFm1akYc2J5UoDMfPCvg-tT8QeyvFdFqSYcWC8_M1CG9hFQqX" alt="" width="880" height="101"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="dontspendtimemicromanagingyourinfrastructure"&gt;Don’t spend time micromanaging your infrastructure&lt;/h2&gt;

&lt;p&gt;Manual cloud cost optimization methods like cost monitoring and reporting steal your time away from doing more interesting stuff.&lt;/p&gt;

&lt;p&gt;Automated cloud optimization is here to transform your job into one free from the burden of doing repetitive tasks you don’t enjoy.&lt;/p&gt;

&lt;p&gt;See what resources automation could manage for you by trying out CAST AI. It’s free to start and brings results fast.&lt;/p&gt;



</description>
      <category>cloud</category>
      <category>devops</category>
      <category>kubernetes</category>
      <category>cloudskills</category>
    </item>
  </channel>
</rss>
