<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Make your pages look good on social media ü§≥</title>
      <author>kaspera</author>
      <pubDate>Mon, 19 Apr 2021 07:16:30 +0000</pubDate>
      <link>https://dev.to/kaspera/make-your-pages-look-good-on-social-media-561g</link>
      <guid>https://dev.to/kaspera/make-your-pages-look-good-on-social-media-561g</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9BJnP-zh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptgdyi4yq6elv67vg93a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9BJnP-zh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptgdyi4yq6elv67vg93a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You‚Äôve made sure your pages look good and attract customers. But how do your pages look ‚Äúoffsite‚Äù? &lt;/p&gt;

&lt;p&gt;More specifically, how do your pages look when they get shared on social media sites like Facebook, LinkedIn, Twitter, and Pinterest?&lt;/p&gt;

&lt;p&gt;This is how our site, Alertdesk.com, looks:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A3WNvN6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k825j5hu9alyu1ynnf3p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A3WNvN6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k825j5hu9alyu1ynnf3p.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How Alertdesk.com looks when shared on Facebook.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;How did we achieve that? The answer is social tags.&lt;/p&gt;

&lt;p&gt;Social tags refer to Open Graph and the Twitter Cards, which are meta tags you place in the &lt;/p&gt;-section of your pages.

&lt;p&gt;Setting up social tags can make your pages more eye-catching when shared on social media. Properly set up tags can also help sites like Facebook to better understand what your content is about.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-social-tags"&gt;
  &lt;/a&gt;
  Types of social tags
&lt;/h2&gt;

&lt;p&gt;There are essentially two types of social meta tags ‚Äì those who work on Twitter and those who work on every other site, roughly speaking.&lt;/p&gt;

&lt;p&gt;These two types are called Twitter Card and Open Graph. &lt;/p&gt;

&lt;p&gt;Twitter Card, developed by Twitter (who would have guessed?), mainly works on Twitter. By adding it to your pages, users who share your pages on Twitter will have a ‚Äúcard‚Äù added to their tweet. &lt;a href="https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/abouts-cards"&gt;You can read more about Twitter cards here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Open Graph, developed by Facebook, works on a few more sites than just Facebook. LinkedIn and Pinterest, to name a few, also support the Open Graph-format. &lt;a href="https://ogp.me/"&gt;You can read more about the Open Graph protocol here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#which-tags-should-you-use"&gt;
  &lt;/a&gt;
  Which tags should you use?
&lt;/h2&gt;

&lt;p&gt;There are many kinds of Open Graph- and Twitter Card tags and attributes. We‚Äôre not going to cover them all in this article. &lt;/p&gt;

&lt;p&gt;The tags below are the ones you should have to help sites like Facebook and Twitter better understand your content.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#open-graph-tags"&gt;
  &lt;/a&gt;
  Open Graph tags
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;og:title ‚Äì The title of your page (doesn‚Äôt have to match your page title).&lt;/li&gt;
&lt;li&gt;og:url ‚Äì The canonical URL of your page (all shares will go to this URL).&lt;/li&gt;
&lt;li&gt;og:image ‚Äì The URL of the image you want to appear in your social snippet (recommended resolution 1200√ó627 px).&lt;/li&gt;
&lt;li&gt;og:description ‚Äì A description of your page (doesn‚Äôt have to match your page‚Äôs meta description).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It can also be a good idea to add:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;og:type ‚Äì The type of content (Article, website, video, etc.).&lt;/li&gt;
&lt;li&gt;og:locale ‚Äì Your page‚Äôs language (Facebook will assume this is ‚Äúen_US‚Äù if no other is set).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#twitter-card-tags"&gt;
  &lt;/a&gt;
  Twitter Card tags
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;twitter:card ‚Äì The type of card you want ‚Äì &lt;a href="https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/abouts-cards"&gt;choose between 4 types&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;twitter:title ‚Äì The title of your page (doesn‚Äôt have to match your page title).&lt;/li&gt;
&lt;li&gt;twitter:description ‚Äì A description of your page (doesn‚Äôt have to match your page‚Äôs meta description.&lt;/li&gt;
&lt;li&gt;twitter:image ‚Äì The URL of the image you want to appear in your social snippet (1:1 aspect ratio ‚Äì minimum 144√ó144 px and maximum 4096√ó4096 px).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note: For Pinterest, there are a few more Open Graph tags available. &lt;a href="https://developers.pinterest.com/docs/rich-pins/reference/"&gt;You can view Pinterest‚Äôs documentation here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-set-up-your-tags"&gt;
  &lt;/a&gt;
  How to set up your tags
&lt;/h2&gt;

&lt;p&gt;If you are using WordPress, several plugins can get the job done. SEO plugins like &lt;a href="https://wordpress.org/plugins/wordpress-seo/"&gt;Yoast SEO&lt;/a&gt; and &lt;a href="https://wordpress.org/plugins/seo-by-rank-math/"&gt;RankMath&lt;/a&gt; both have a social feature, where you can customize your Open Graph and Twitter Card data.&lt;/p&gt;

&lt;p&gt;Almost all CMS‚Äô either have this functionality natively, like &lt;a href="https://support.squarespace.com/hc/en-us/articles/115009564587"&gt;Squarespace&lt;/a&gt;, or has some kind of plugin or add-on for it like &lt;a href="https://marketplace.magento.com/mageworx-module-seomarkupmeta.html"&gt;Magento&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-view-and-debug-your-tags"&gt;
  &lt;/a&gt;
  How to view and debug your tags
&lt;/h2&gt;

&lt;p&gt;Sometimes you may need to test and debug your tags. For that, you can use these tools to get the job done:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.facebook.com/tools/debug/sharing/"&gt;Facebook Sharing Debugger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cards-dev.twitter.com/validator"&gt;Twitter Card Validator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/post-inspector/inspect/"&gt;LinkedIn Post Inspector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#use-alertdesk-to-check-your-social-tags"&gt;
  &lt;/a&gt;
  ü§≥ Use Alertdesk to check your social tags
&lt;/h2&gt;

&lt;p&gt;In our social &amp;amp; content reports, you can see how your page will look on Facebook and Twitter when shared. &lt;/p&gt;

&lt;p&gt;We also check to see if you are missing any of the recommended social tags (the ones mentioned above). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.alertdesk.com/?utm_source=devto&amp;amp;utm_medium=organic&amp;amp;utm_campaign=article&amp;amp;utm_content=make-your-pages-look-good-on-social-media"&gt;Check your social tags today with Alertdesk. Try us free for 14 days.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
      <category>frontend</category>
    </item>
    <item>
      <title>How to Grow a Freelancing Business by Outsourcing</title>
      <author>Kyle Prinsloo üöÄ</author>
      <pubDate>Mon, 19 Apr 2021 06:57:16 +0000</pubDate>
      <link>https://dev.to/study_web_dev/how-to-grow-a-freelancing-business-by-outsourcing-4hp3</link>
      <guid>https://dev.to/study_web_dev/how-to-grow-a-freelancing-business-by-outsourcing-4hp3</guid>
      <description>&lt;p&gt;Outsourcing can change your &lt;a href="https://studywebdevelopment.com/how-to-start-freelancing-as-developer.html"&gt;freelancing business&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you realize that TIME is your greatest ASSET, you'll think of your work and life differently.&lt;/p&gt;

&lt;p&gt;Few people are able to work 4 hour days, earn a good income and live a life of freedom.&lt;/p&gt;

&lt;p&gt;There are many ways to get to this outcome, with outsourcing being near the top.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is outsourcing?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You are paying someone else to do the work.&lt;/p&gt;

&lt;p&gt;What work?&lt;/p&gt;

&lt;p&gt;ANYTHING.&lt;/p&gt;

&lt;p&gt;Before we get into the "how" of outsourcing, let's have a closer look at some of the tangible benefits you can derive from including it in your business model.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#benefits-of-outsourcing"&gt;
  &lt;/a&gt;
  Benefits of Outsourcing
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-increase-efficiencypromote-growth"&gt;
  &lt;/a&gt;
  1. Increase Efficiency/Promote Growth
&lt;/h2&gt;

&lt;p&gt;As freelancers, we like to think we can do and handle everything.&lt;/p&gt;

&lt;p&gt;If you see yourself as the sole solution to completing a project then you will achieve one of two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You will maximize profits in the short term by doing all the work yourself, but you may land in a position where you are pressed for time with creeping deadlines catching you out.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will only be able to accept a small number of projects at a time due to the physical limitations of how much work you can do in any given day.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, you can make this work, but the solution that will see you avoiding both options is getting others involved.&lt;/p&gt;

&lt;p&gt;By breaking a web development project into different aspects and delegating it to others capable of completing those tasks, you will naturally be able to take on more projects without, in theory, a drop in quality.&lt;/p&gt;

&lt;p&gt;By carefully selecting the right people to trust in working on specific project objectives, you may find an increase in quality compared to if you did the work yourself. You can intentionally only outsource work to others that they are particularly skilled with.&lt;/p&gt;

&lt;p&gt;For example, if you're not a great logo designer, then you can find someone who is especially skilled with logos to create one for you.&lt;/p&gt;

&lt;p&gt;This approach to delegating specific tasks to those with the specific relevant skill will allow you to scale your business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-increase-focus-on-core-activities"&gt;
  &lt;/a&gt;
  2. Increase Focus on Core Activities
&lt;/h2&gt;

&lt;p&gt;Imagin you have a project that includes a wireframe design, logo design, copywriting, SEO and the actual development of the site.&lt;/p&gt;

&lt;p&gt;Now, thanks to the outsourcing of a logo design, you've saved yourself hours of work. Sure, it's always good to learn and improve your design skills as a developer and practising with a logo design is a good opportunity for this but it detracts from two things - quality, as we have already spoken about, and efficiency.&lt;/p&gt;

&lt;p&gt;By having a logo design off your plate, you can now focus on project tasks that you are more skilled with like the site development. Or maybe you've outsourced that too which leaves you more time to focus on creating the perfect website design.&lt;/p&gt;

&lt;p&gt;More time to focus on what you're good at will result in an overall better end-result, a happier client, more referrals, and business growth.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-staffing-flexibilitycost-saving"&gt;
  &lt;/a&gt;
  3. Staffing Flexibility/Cost Saving
&lt;/h2&gt;

&lt;p&gt;This is a certain benefit if you are considering hiring full-time employees.&lt;/p&gt;

&lt;p&gt;Unless you're already quite established in your industry, you're going to find business to be up and down - some months will be good or great while others will be bad or terrible.&lt;/p&gt;

&lt;p&gt;This is the nature of freelancing and is a risk you need to be ready to accept.&lt;/p&gt;

&lt;p&gt;There are a few ways to avoid this, &lt;a href="https://studywebdevelopment.com/digital-marketing.html"&gt;read here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As soon as you add others to your full-time staff, you're adding the potential for collateral damage should things go wrong. At the very least, you'll essentially be wasting money if you are paying a full-time employee to fulfil project-related tasks when there are no projects to work on.&lt;/p&gt;

&lt;p&gt;Outsourcing alleviates these risks by virtue of their temporary nature. You only need help with projects when there is work so your work relationship can end, or be on hold, until the next project comes up.&lt;/p&gt;

&lt;p&gt;This approach is more frugal and can be a wise decision to make, especially in the early stages of your business' growth.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-outsource"&gt;
  &lt;/a&gt;
  How to Outsource
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#1-define-your-goals"&gt;
  &lt;/a&gt;
  1. Define your goals
&lt;/h2&gt;

&lt;p&gt;Do you want to use your freelancing as a way of growing in the many subfields within freelance development?&lt;/p&gt;

&lt;p&gt;Do you want to treat your freelancing business as a business from the start with the only goal being growth and industry establishment?&lt;/p&gt;

&lt;p&gt;I hope that you want both and are open to learning new skills while keeping your eye on the horizon in terms of what's possible for your business to grow into.&lt;/p&gt;

&lt;p&gt;Some freelancers only use this opportunity to learn new skills while getting paid until they feel they are ready to take on full-time employment with a company. &lt;/p&gt;

&lt;p&gt;Outsourcing may be less beneficial to them in this short-term approach, but it depends on what they outsource.&lt;/p&gt;

&lt;p&gt;Think about your goals here before moving on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-weigh-things-up"&gt;
  &lt;/a&gt;
  2. Weigh Things Up
&lt;/h2&gt;

&lt;p&gt;Do you want to be a freelancer who only works on project code or do you mainly want to design websites while dabbling with some copywriting?&lt;/p&gt;

&lt;p&gt;You don't have to decide and stick to your decision for the rest of your career, but it's worth a moment of introspection to figure what you would like to do yourself and what you like to pay others to do for you.&lt;/p&gt;

&lt;p&gt;Like mentioned earlier, you may feel like you can or want to take care of every aspect of the project. That's fine, it'll work in the beginning but will cap your progress and scalability later. There is only so much time and resources available so choosing correctly can save you both.&lt;/p&gt;

&lt;p&gt;Once you've done this, choosing the right person to help becomes a lot simpler.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-budget"&gt;
  &lt;/a&gt;
  3. Budget
&lt;/h2&gt;

&lt;p&gt;Do you know exactly how much you can afford to spend on a freelance logo designer before it becomes financially unfeasible?&lt;/p&gt;

&lt;p&gt;You need to become serious about your business finances if outsourcing is going to be a viable solution for your business to scale.&lt;/p&gt;

&lt;p&gt;No, "serious" does not mean "underpaying people", it means understanding exactly what your expenses are capped at and what you have to spend.&lt;/p&gt;

&lt;p&gt;To get this right, you need to figure out the quality of work you can get for a certain price.&lt;/p&gt;

&lt;p&gt;For this, you need to undertake a bit of research, observe what‚Äôs the going price on different freelancing platforms to get ideas and then cap yourself. It will be tempting to go over this limit when you have found someone amazing but this limit is meant to guide you and serve as a reminder of what is possible versus what is financially speculative.&lt;/p&gt;

&lt;p&gt;Once you understand the cost-benefit of outsourcing project tasks, it's time to find your person or people.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-start-looking-for-people"&gt;
  &lt;/a&gt;
  4. Start Looking for People
&lt;/h2&gt;

&lt;p&gt;At this point, you will know exactly what tasks you'd like to outsource and why it makes sense to outsource them.&lt;/p&gt;

&lt;p&gt;You will also know exactly how much money is reasonable to spend. This is a really important fact to possess because prices vary wildly out there.&lt;/p&gt;

&lt;p&gt;I would recommend starting your search with your inner social circle and expanding out from there. This will come with a higher inherent trust between you and the other party than what you would get with a random person from the internet at the outset of the relationship.&lt;/p&gt;

&lt;p&gt;From your inner circle of friends and family, you can move to social media. &lt;/p&gt;

&lt;p&gt;Twitter is a popular place for developers to get in touch with freelancers who can help them with specific tasks. You can send out a tweet and you'll have people reaching out to you.&lt;/p&gt;

&lt;p&gt;I did that and found some great writers and designers. &lt;/p&gt;

&lt;p&gt;Even if you have found someone through social media, it's worth checking out freelancer platforms like Upwork and Fiverr. This has the potential to be more reliable than your inner circle and social media-sourced people.&lt;/p&gt;

&lt;p&gt;These platforms are equipped with smart filters allowing you to only view the profiles of those who fit within your predefined parameters such as price per hour, area of expertise, and years of expertise. You're able to see some examples of their work and get a feel for what it would be like to work with them.&lt;/p&gt;

&lt;p&gt;Use a combination of the above methods to get a couple of people that seem suitable. Don't overthink it but it's good to have a couple of options which you can weigh up in terms of quality, price, and communication-style.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-go-for-a-trial-period-if-possible"&gt;
  &lt;/a&gt;
  5. Go for a trial period (if possible)
&lt;/h2&gt;

&lt;p&gt;Some won't allow this and will instead only allow you to immediately hire them for a particular task but, where possible, you should first agree on a trial period.&lt;/p&gt;

&lt;p&gt;This is obviously not needed if you require them to perform one specific task that will be completed in a week. It's more useful for repetitive tasks that you'll need someone for such as monthly content writing for the marketing strategy you provide your clients or weekly site maintenance.&lt;/p&gt;

&lt;p&gt;In cases like these, it's better to first get a feel for what it's like to work with the other person before committing to a longer-term working relationship.&lt;/p&gt;

&lt;p&gt;This presents as a chance for you to see how they communicate, whether they stick to deadlines, what quality of work they produce, and it gives you an overall feel for how pleasant it is to work with this person overall.&lt;/p&gt;

&lt;p&gt;Ultimately, hiring someone to help out is supposed to make your life easier, not harder so take your time in choosing the person for the job.&lt;/p&gt;

&lt;p&gt;I also use (and continue to use) UpWork and Hubstaff Talent - great resources to find quality people to work with.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-reap-the-rewards"&gt;
  &lt;/a&gt;
  6. Reap the Rewards
&lt;/h2&gt;

&lt;p&gt;Now that you've got someone working on parts of your projects, you'll find that you have more time to focus on areas that deserve your specific attention. This will result in a higher quality end-result making your clients very happy.&lt;/p&gt;

&lt;p&gt;With time, you can outsource more of the work as your business grows and you learn to step away.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Outsourcing is a skill that deserves your attention as a freelancer.&lt;/p&gt;

&lt;p&gt;It's one that you should pick up, put into practice and expand upon. Your freelancing business will grow without it taking over your entire life and every single minute of your time.&lt;/p&gt;

&lt;p&gt;We need to remember why we started freelancing after all.&lt;/p&gt;

&lt;p&gt;For many of us, it was to begin a life of more freedom... Outsourcing can help us get there faster without sacrificing any of the attention to detail we bestow on our projects.&lt;/p&gt;

&lt;p&gt;Found this helpful?&lt;/p&gt;

&lt;p&gt;You'll love my &lt;a href="//8020freelancingbook.com"&gt;80/20 Freelancing eBook&lt;/a&gt; then.&lt;/p&gt;

&lt;p&gt;Catch you &lt;a href="https://twitter.com/study_web_dev"&gt;on Twitter&lt;/a&gt; :)&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Azure Disk Encryption for Data Disk on Linux</title>
      <author>James Cook</author>
      <pubDate>Mon, 19 Apr 2021 06:46:00 +0000</pubDate>
      <link>https://dev.to/officialcookj/azure-disk-encryption-for-data-disk-on-linux-303c</link>
      <guid>https://dev.to/officialcookj/azure-disk-encryption-for-data-disk-on-linux-303c</guid>
      <description>&lt;p&gt;When configuring a new Linux Virtual Machine (VM) you may think your data is stored on Azure hardware which means is encrypted so no further encryption method is needed. It's true Microsoft encrypts its data but this is at &lt;a href="https://docs.microsoft.com/en-us/azure/security/fundamentals/encryption-atrest#the-purpose-of-encryption-at-rest"&gt;rest&lt;/a&gt;, meaning it is protected at the hardware level when there is a physical attack. Other than this, there is no logical encryption of the data disk, leaving you vulnerable if someone was able to download the disk. What I will cover in this post is what type of encryption does Azure uses for Linux Data Disks and how to enable this and attach to a VM.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-encryption-method-is-used"&gt;
  &lt;/a&gt;
  What encryption method is used
&lt;/h2&gt;

&lt;p&gt;The Azure platform uses &lt;a href="https://en.wikipedia.org/wiki/Dm-crypt"&gt;DM-Crypt&lt;/a&gt; to encrypt Linux VMs data. This is the only method available from Azure when encrypting Linux data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-the-encryption-key-generate-and-where-is-it-stored"&gt;
  &lt;/a&gt;
  How does the encryption key generate and where is it stored
&lt;/h2&gt;

&lt;p&gt;As encryption is a supported method offered by Microsoft, the Azure platform integrated data disk encryption with &lt;a href="https://docs.microsoft.com/en-us/azure/key-vault/general/overview"&gt;Azure Key Vault&lt;/a&gt;. As part of the encryption process, you will be asked to select a Key Vault (or create a new one) and select or create the key that will be used for the encryption.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#are-there-prerequisites"&gt;
  &lt;/a&gt;
  Are there prerequisites
&lt;/h2&gt;

&lt;p&gt;There are a couple requirements you must meet to be able to configure encryption on a data disk:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The Linux virtual machine must have at least 2GB of RAM (8GB if you are doing both OS and Data Disk)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The OS must be one of the supported operating systems Microsoft have outlined in their &lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machines/linux/disk-encryption-overview#supported-operating-systems"&gt;documentation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will need to mount the data disk in advance of encryption so the virtual machine can mount after encryption is enabled. You can follow Microsoft documented approach to this &lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machines/linux/disk-encryption-overview#additional-vm-requirements"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Azure Key Vault you use must have Enable Access to Azure Disk Encryption for volume encryption policy enabled. If not, the Key Vault used for the procedure below will not work.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-to-enable-encryption-using-the-azure-portal"&gt;
  &lt;/a&gt;
  How to enable encryption using the Azure Portal
&lt;/h2&gt;

&lt;p&gt;Make sure you first mount the data disk to the virtual machine and turn it off ready for encryption to start. When ready, follow these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open the &lt;strong&gt;Virtual Machine&lt;/strong&gt; resource&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Disks&lt;/strong&gt; from the left side menu
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hka2tInD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618773544001/pXZae5xRw.png" alt="disks.png"&gt;
&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Additional Settings&lt;/strong&gt; from the top of the window
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uq0WQfkm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618773628182/yjbO76zXv.png" alt="additional-settings.png"&gt;
&lt;/li&gt;
&lt;li&gt;From the &lt;strong&gt;Disk to encrypt&lt;/strong&gt; drop down, select &lt;strong&gt;Data disks&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--10Jgu_ts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618773726184/EDqwetdzA.png" alt="encrypt-disk-list.png"&gt;
&lt;/li&gt;
&lt;li&gt;Select the &lt;strong&gt;Click to select a key&lt;/strong&gt; option that appeared after the above step completed
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FXr3wm7m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618773992232/SXpGqOuMf.png" alt="select-keyvault.png"&gt;
&lt;/li&gt;
&lt;li&gt;Here complete the fields, either by select an existing Key Vault or creating a new. Once done, click the &lt;em&gt;Select&lt;/em&gt;* button
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ynCHr19X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618774112979/h460mPY7l.png" alt="keyvault-config.png"&gt;
&lt;/li&gt;
&lt;li&gt;You will return to the configuration window to finish by selecting &lt;strong&gt;Save&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-to-enable-encryption-using-azure-cli"&gt;
  &lt;/a&gt;
  How to enable encryption using Azure CLI
&lt;/h2&gt;

&lt;p&gt;Run the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;az vm encryption enable -g "ResourceGroupName" --name "LinuxVMName" --disk-encryption-keyvault "NameOfKeyVault" --volume-type DATA
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace the following values with your own:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ResourceGroupName&lt;/strong&gt; - The name of the resource group that the Linux VM is.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;LinuxVMName&lt;/strong&gt; - Name of the Linux VM where the data disk will be encrypted&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;NameOfKeyVault&lt;/strong&gt; - Key Vault name you are using for storing the encryption key&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>azure</category>
      <category>cloud</category>
      <category>linux</category>
      <category>security</category>
    </item>
    <item>
      <title>I made more VS Code themes, here they are.</title>
      <author>michael-andreuzza</author>
      <pubDate>Mon, 19 Apr 2021 05:55:03 +0000</pubDate>
      <link>https://dev.to/michaelandreuzza/i-made-more-vs-code-themes-here-they-are-3le3</link>
      <guid>https://dev.to/michaelandreuzza/i-made-more-vs-code-themes-here-they-are-3le3</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hello-everyone-how-you-all-doing"&gt;
  &lt;/a&gt;
  Hello everyone, how you all doing?
&lt;/h1&gt;

&lt;p&gt;So I have been making some themes for VS Code because I found it pretty addictive. &lt;/p&gt;

&lt;p&gt;I have tried to make them accessible and pretty "contrastish" with a darker background. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-darker"&gt;
  &lt;/a&gt;
  Why darker?
&lt;/h3&gt;

&lt;p&gt;Well, I keep trying themes and they are made with a light gray background with almost neon text, my eyes don't like it, so I took action. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#let-me-show-you-the-themes-and-the-little-story-behind-them"&gt;
  &lt;/a&gt;
  Let me show you the themes and the little story behind them.
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#wvsc-theme"&gt;
  &lt;/a&gt;
  WVSC Theme
&lt;/h4&gt;

&lt;p&gt;I made this theme to match the snippets and theme on my &lt;a href="http://blocks.wickedtemplates.com/"&gt; side-projects, wickedblocks&lt;/a&gt; and &lt;a href="http://wickedtemplates.com/"&gt; wickedtemplates&lt;/a&gt;   &lt;/p&gt;

&lt;p&gt;Get it here ¬ª¬ª &lt;a href="https://marketplace.visualstudio.com/items?itemName=wicked-labs.wicked-blocks"&gt;https://marketplace.visualstudio.com/items?itemName=wicked-labs.wicked-blocks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JS&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fFNGbGK6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uogv78mui77lsxkxwt41.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFNGbGK6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uogv78mui77lsxkxwt41.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
HTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XRz5qW4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xw3hwf833bwf5zkvsm75.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XRz5qW4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xw3hwf833bwf5zkvsm75.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
CSS&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XdjIqNsl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gk3wjr99z6lt3sdpan52.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XdjIqNsl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gk3wjr99z6lt3sdpan52.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#wvsc-play"&gt;
  &lt;/a&gt;
  WVSC Play
&lt;/h4&gt;

&lt;p&gt;This is the theme that I made for myself, I thought I could share it and maybe someone finds it useful.&lt;/p&gt;

&lt;p&gt;GEt it here ¬ª¬ª &lt;a href="https://marketplace.visualstudio.com/items?itemName=wicked-labs.wicked-play"&gt;https://marketplace.visualstudio.com/items?itemName=wicked-labs.wicked-play&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JS&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ocl7vAUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4brefv5yexc1cbauc3ja.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ocl7vAUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4brefv5yexc1cbauc3ja.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
HTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x5TJd548--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ab3k8ib2k2r8490m2qn7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x5TJd548--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ab3k8ib2k2r8490m2qn7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
CSS&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NxcH2mhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzqat3jm7fayakfs0sih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NxcH2mhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzqat3jm7fayakfs0sih.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#wvsc-steel"&gt;
  &lt;/a&gt;
  WVSC Steel
&lt;/h4&gt;

&lt;p&gt;GEt it here ¬ª¬ª &lt;a href="https://marketplace.visualstudio.com/items?itemName=wicked-labs.wicked-pastel"&gt;https://marketplace.visualstudio.com/items?itemName=wicked-labs.wicked-pastel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I made this theme because of those gray backgrounds. A darker gray is nicer for the eye, and the contrast is more obvious.&lt;/p&gt;

&lt;p&gt;JS&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qeDN0-PW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7a9pfviyqho50d2wqnut.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qeDN0-PW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7a9pfviyqho50d2wqnut.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
HTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TheOpZ0M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ye19m802xqz3mxsyixb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TheOpZ0M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ye19m802xqz3mxsyixb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
CSS&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GXuc7g_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzjaqwic22f25lhuymex.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GXuc7g_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzjaqwic22f25lhuymex.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#wvsc-indie-hackers"&gt;
  &lt;/a&gt;
  WVSC Indie Hackers
&lt;/h4&gt;

&lt;p&gt;Get it here ¬ª¬ª &lt;a href="https://marketplace.visualstudio.com/items?itemName=wicked-labs.wicked-indiehackers"&gt;https://marketplace.visualstudio.com/items?itemName=wicked-labs.wicked-indiehackers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have been for pretty long on the IH hackers forum, I really enjoy the blue color palette and simplicity.&lt;/p&gt;

&lt;p&gt;JS&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CRV6c-oO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ug30baq61m8yt2ee2nw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CRV6c-oO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ug30baq61m8yt2ee2nw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
HTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pu4sGUTF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9utsfbg0q2jda55iroma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pu4sGUTF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9utsfbg0q2jda55iroma.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
CSS&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f9TtMfPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3ueenmaujzee1w1pjsv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f9TtMfPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3ueenmaujzee1w1pjsv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#wvsc-betamax"&gt;
  &lt;/a&gt;
  WVSC Betamax
&lt;/h4&gt;

&lt;p&gt;GEt it here ¬ª¬ª &lt;a href="https://marketplace.visualstudio.com/items?itemName=wicked-labs.wicked-betamax"&gt;https://marketplace.visualstudio.com/items?itemName=wicked-labs.wicked-betamax&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;**This one you may know from last week.&lt;/p&gt;

&lt;p&gt;JS&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oT90i8pC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18y701vv7kipcs6eb21j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oT90i8pC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18y701vv7kipcs6eb21j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
HTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DnAnH1wu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8z0sg3gdp0uck1yfewvw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DnAnH1wu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8z0sg3gdp0uck1yfewvw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
CSS&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XVfMn4qv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3ux3d64m90y2jd3ixw9.png" alt="Alt Text"&gt;
&lt;/h2&gt;

&lt;p&gt;If you have any question you can always reach me out here or on twitter &lt;a href="https://twitter.com/mike_andreuzza"&gt;https://twitter.com/mike_andreuzza&lt;/a&gt;&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>productivity</category>
      <category>vscode</category>
    </item>
    <item>
      <title>How to write technical content</title>
      <author>Armen Vardanyan</author>
      <pubDate>Mon, 19 Apr 2021 05:44:28 +0000</pubDate>
      <link>https://dev.to/this-is-learning/how-to-write-technical-content-56h5</link>
      <guid>https://dev.to/this-is-learning/how-to-write-technical-content-56h5</guid>
      <description>&lt;p&gt;&lt;em&gt;Original cover photo by &lt;a href="https://unsplash.com/@honza_kahanek"&gt;Jan Kah√°nek&lt;/a&gt; on Unsplash.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It is early morning, you grab a cup of coffee, turn on your computer at work, scroll through emails and notifications, and also open up some favorite resource of yours and try to catch up with the latest developments in the world of software engineering. You read several interesting articles, find out some useful, but less known features of your favorite framework, or some obscure, but fun technique, and move on to your everyday work.&lt;/p&gt;

&lt;p&gt;Later that day, you stumble upon a problem, figure out a solution, but are not sure if that is the best thing you can do about it. You google the problem, and find a great article with nice examples which helps you overcome your challenge in an elegant way.&lt;/p&gt;

&lt;p&gt;In the evening, before going home (or to the kitchen - in the age of COVID-19 and remote work), you scroll through Twitter a bit and encounter yet another article which describes some interesting use case that another developer had to deal with.&lt;/p&gt;

&lt;p&gt;During the day, you have read multiple articles, and your experience in the field has grown a bit. Want it or not, but we, as developers, consume huge amounts of technical content created by other developers - people just like everyone else, but with a passion for sharing knowledge and experience. And if you have read this far, chances are you are interested in starting contributing back and creating your own technical content. I have been doing this for the fifth year now, so let me try and give you, an aspiring creator, some insight into what challenges you might encounter on that journey, and how you can overcome that.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#where-to-start"&gt;
  &lt;/a&gt;
  Where to start?
&lt;/h1&gt;

&lt;p&gt;Creating content can sound challenging and even intimidating; and trust me, the beginning of that journey &lt;em&gt;is&lt;/em&gt; somewhat uneasy. You may experience anxiety comparable to stage-fright; ‚ÄúWhat if the content I am about to create is not necessary?‚Äù. ‚ÄúWhat if I get criticized?‚Äù. ‚ÄúWhat if it is just not for me?‚Äù. All those are very normal questions that an aspiring creator will ask themselves, and I have gone through that too. To understand how to proceed, we need to answer three key questions: &lt;em&gt;Why? What&lt;/em&gt; and &lt;em&gt;How?&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-why"&gt;
  &lt;/a&gt;
  The &lt;em&gt;Why?&lt;/em&gt;
&lt;/h1&gt;

&lt;p&gt;At the very beginning of any endeavour there is a reason, a drive that makes us try and create something, and reach a new level of experience. So, before starting our journey into writing articles, tutorials and other content, let us examine why we want to do that, and what exactly it will give us back.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-and-growing"&gt;
  &lt;/a&gt;
  Learning and growing
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs start with how writing content will benefit &lt;em&gt;you&lt;/em&gt;. There is an old saying - ‚Äúif you want to understand something better, explain it to someone‚Äù. Some students use this technique to master sciences they study&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;there are people that will essentially tell something to themselves (sometimes out loud), which helps them gain more insight into some topic and remember the details. Writing is the same in that sense - but better. When we write tech content, we experience the things that we have created another time, helping us see it from different points of view, which eventually, even if we don‚Äôt try hard, makes us more experienced with the subject. So first of all, writing tech content is very beneficial to your own experience and knowledge.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#gaining-popularity"&gt;
  &lt;/a&gt;
  Gaining popularity
&lt;/h2&gt;

&lt;p&gt;Now let us explore a bit more ‚Äúegotistical‚Äù side of writing content. If you write content that is clear, understandable to most and, most importantly, helpful, you will attract attention towards you, the author. Now this is not necessarily something everyone wants - for me personally, even if I help exactly one single person, then my effort was worth it. But the good thing is that writing content does not necessarily mean you now have to tweet tips and tricks all the time - writing is a voluntary contribution to the community, not a burden. But now and then it will also help you meet awesome new people - something I will cover a bit more in the next paragraph.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#establishing-connections"&gt;
  &lt;/a&gt;
  Establishing connections
&lt;/h2&gt;

&lt;p&gt;Writing content will help you meet new people. Lots of people you meet will be plain amazing - strong experts ready to help you out. I personally met dozens of great people - cannot even list them in an article, and they have influenced me positively a lot. You will meet them too, and it has a list of great benefits:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Meeting new people opens you to new knowledge. Talking with other professionals in the fields will help you discover things you didn't even know in an area you thought you knew thoroughly. It is a great opportunity for personal growth&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;New people will also open you to new content. Chances are, you will meet other content creators and get exposed to their thoughts and experiences, which will again inevitably help you grow&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is good for finding new challenges and jobs. The more people you know, the more you are exposed to great job opportunities, chances to participate in open source work or solving challenging problems&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#sharing-is-caring"&gt;
  &lt;/a&gt;
  Sharing is caring
&lt;/h2&gt;

&lt;p&gt;We have covered the benefits &lt;em&gt;you&lt;/em&gt; will receive when you start writing, but now let's focus for a while on the good that you are making for the community. As I have mentioned, for me the most important aspect of writing is the opportunity to help others. Modern tech industry is built on the hard, but voluntary work of thousands, if not millions of contributors. Frameworks and libraries that we use in our day-to-day jobs are often built by people like us - enthusiastic engineers that want better tech and better working environments (and who will argue that working with better code is less stressful?). So, working on creating content for other developers is our way of contributing back to a community that has undoubtedly helped us grow and become who we are now.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-what"&gt;
  &lt;/a&gt;
  The &lt;em&gt;What?&lt;/em&gt;
&lt;/h1&gt;

&lt;p&gt;So, it is possible that after reading the previous chapter, you are already dead set on the resolution to start writing technical content. But then comes a harder challenge: what &lt;em&gt;exactly&lt;/em&gt; should I write? Of course, this is a more complex question, but I will try to present some advice on it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Warning&lt;/em&gt;&lt;/strong&gt;: even if you already know &lt;strong&gt;exactly&lt;/strong&gt; what content you want to create, I still recommend reading this chapter. You might gain valuable insight, and even if it is not useful right now, it will be in the future. One day, you will eventually run out of ideas, and this chapter is aimed at helping you find new ideas for content easier.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#catching-ideas"&gt;
  &lt;/a&gt;
  Catching ideas
&lt;/h2&gt;

&lt;p&gt;You write some code at your job, fix a problem, and realize you have used an interesting solution that is worth sharing with others. Or maybe you uncover a bad pattern of code that is used throughout your application, and want to write a piece explaining why it is bad and how to fix it. &lt;/p&gt;

&lt;p&gt;But there is a slight problem - you don‚Äôt really have enough content to write a thoughtful article, and just one example will be a bit shallow. You might try to imagine a scenario or an example, but more often than not those attempts will be futile - examples you come up might be just too contrived or unrealistic. So what, forget about this idea and move on? The answer is &lt;strong&gt;definitely not.&lt;/strong&gt; What helped me greatly is the following: every time I encountered an idea worth sharing in an article, but without enough content to write it right away, I would write that idea in a special note, come up with a working name for my future article, and wait. During the following days I would naturally encounter examples and thoughts that would reinforce my article; I would add those to the note too; and so on until I had enough bullet points to actually write the article. Sometimes that process would take longer; my article titled&lt;br&gt;
&lt;a href="https://indepth.dev/posts/1292/rxjs-the-unexpected"&gt;&lt;em&gt;RxJS: the Unexpected&lt;/em&gt;&lt;/a&gt; actually took several months to form in my mind (and my note) until it finally became an article.&lt;/p&gt;

&lt;p&gt;Now you might think that this approach might help in, say, 30 to 40 percent of ideas you have, but in my experience, that is simply not the case. Out of 10 ideas that I wrote down in my notebook only 1 did not ever become an article. So think about ideas for content, but don‚Äôt ever push yourself too hard: ideas will be coming to you naturally all the time, it is just important no not let go of them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-underestimate-the-power-of-use-cases"&gt;
  &lt;/a&gt;
  Don‚Äôt underestimate the power of use cases
&lt;/h2&gt;

&lt;p&gt;There are lots of types of articles and written content out there. There are tutorials, best/bad practices articles, in depth explanations of stuff works under the hood, and so on. But for me, one of the most important types of articles that I ever read are ‚Äúuse cases‚Äù articles. What is it? Simply speaking, it is a story about how a certain developer encountered, analyzed and fixed some problem they faced. And the thing is, those articles are very beneficial both for their writers and readers simultaneously:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;What do readers get: possible helpful guidance on how to face a certain problem, coupled with a safeguard against writing an unnecessarily complicated solution and then refactoring it + extended knowledge and experience&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What do writers get: an opportunity to really reflect upon the problem and remember the solution + as a bonus, coming up with ideas for such articles is really easy, as we are essentially facing use cases all day long in our day-to-day jobs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So next time you find out you‚Äôve run out of ideas, try to reflect on the code you wrote in the last week; it can be very much possible you have faced an interesting problem and came up with a solution worthy of an article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-if-the-content-i-write-already-exists"&gt;
  &lt;/a&gt;
  What if the content I write already exists?
&lt;/h2&gt;

&lt;p&gt;One question that often bothers content creators is whether their content is even worth writing, because someone else has already explained that. Obviously, this is a valid question: repeating the same thing others said seems not to be the noblest thing. But as they love to say in Armenia, ‚Äúrepetition is the mother of knowledge‚Äù. Consider this: I have written my article about &lt;a href="https://codeburst.io/angular-bad-practices-eab0e594ce92"&gt;&lt;em&gt;Angular Bad Practices&lt;/em&gt;&lt;/a&gt; almost four years ago. Have you read it? Has everyone you know in the Angular community read it? Will they probably encounter that article in the future? If the answer is no, no and yes, then here is another question: will someone benefit from reading an article that reiterates some of the points provided in my article + some new advice? Now, when you write &lt;em&gt;any&lt;/em&gt; content, chances that everyone who needs that content will, in fact read that content, are really slim. This means, some important topics &lt;em&gt;need&lt;/em&gt; repeating, especially things like best practices, existing approaches to solving common problems and so on. So be calm: even if someone has already written about the topic you find interesting, you still can have a very valuable input.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-how"&gt;
  &lt;/a&gt;
  The &lt;em&gt;How?&lt;/em&gt;
&lt;/h1&gt;

&lt;p&gt;Now at this point, we already know that we want to create content, and maybe what content exactly we want to create. But how do we make that content really good? How do we engage the reader, but at the same time provide valuable information without being too verbose or ‚Äúon-the-nose‚Äù? Don‚Äôt worry, there are things you can do to achieve this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-explain-something"&gt;
  &lt;/a&gt;
  How do I explain something?
&lt;/h2&gt;

&lt;p&gt;Explaining something is the core aspect of writing technical content. It is essentially why we write anything at all: we try to convey an idea and make sure it is understandable by the reader. How do we achieve this? Here are some bullet points to help you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Start from the problem. Before explaining any approach, start with presenting the issue that our idea is coming to help with. Present code examples that show exactly what the problem is, so it also makes people identify easily where in their own applications that problem arises&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Provide good, but simple examples. Don‚Äôt include any code that is not relevant to the problem and the solution, even if it makes the example ‚Äúprettier‚Äù. Make sure the central idea are, in fact, in the center of the example&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What I personally find very helpful is providing two examples per approach: on with ‚Äúbad‚Äù code that has problems, and another one that shows the ‚Äúgood‚Äù code, which is the goal of our article&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Write comments &lt;em&gt;inside&lt;/em&gt; the code examples; now you might think ‚Äúam I not going to elaborate on the example in the article itself?‚Äù. But the thing is, code comments help illustrate &lt;em&gt;exactly where&lt;/em&gt; in the code the cool stuff is happening, or a problem lurks, so it can be more valuable and attract the reader‚Äôs attention to the most important spots&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now let‚Äôs understand how we can present the content in other ways.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-present-something"&gt;
  &lt;/a&gt;
  How do I present something?
&lt;/h2&gt;

&lt;p&gt;Words are very cool. Groups of symbols that convey meaning are probably the most important invention of humankind, allowing us to reach the heights of the civilization we enjoy today. But the thing is, sometimes words are simply not enough. ‚ÄúShow, don‚Äôt say‚Äù is a very old saying, and has lots of truth to it. Help the reader visualize ideas that are hard to convey by using only words. Create graphs, use gifs, or charts. One of the nicest examples of visualization are &lt;a href="https://rxmarbles.com/"&gt;&lt;em&gt;RxJS marble diagrams&lt;/em&gt;&lt;/a&gt;. Use tools like this to create powerful representations of topics you write about, and you will find your articles become way more helpful&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#respect-the-reader"&gt;
  &lt;/a&gt;
  Respect the reader
&lt;/h2&gt;

&lt;p&gt;Language we use is also very important. You don‚Äôt want to sound condescending, or too ‚Äúsmarty‚Äù. You are there to help the reader, not establish yourself as a knowledgeable person. Here are some tips how to make your content more friendly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use the word ‚Äúwe‚Äù instead of ‚Äúyou‚Äù. This creates an idea that we are learning together with the reader, and respect them and put on the same level as ourselves. Now you might ask ‚Äúbut you have been using ‚Äúyou‚Äù all the time in this article!‚Äù. But this article is me sharing my personal experiences with you, the aspiring content creator, and you can be sure you have my utmost respect simply for wanting to contribute to the community.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avoid words like ‚Äúsimply‚Äù, ‚Äújust‚Äù and ‚Äúeasily‚Äù. Those words create the sense that those ideas you explain are primitive. And even if they are &lt;em&gt;for you&lt;/em&gt;, it might very well not be the case for the reader. If you state that an idea is simple, but the reader still did not understand it, it will subconsciously create a sense of inferiority and feed into their anxieties. Again, treat the reader as an equal, don‚Äôt assume they have the same experiences as you have, be mindful.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don‚Äôt use condescending language about ‚Äúbad‚Äù code. People write code with bad practices every day. I have, and you have too, and every single person in tech. People that (sometimes, or even often) write bad code are not bad people or useless employees, they are people just like me and you, working in a huge tech industry and looking to grow. Again, you are there to help, not disenfranchise.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Respect people‚Äôs opinions and don‚Äôt allow inflammatory comments to hurt you. Some people will disagree with what you write in your article. After all, almost everything we have in our minds are opinions. Respect their different opinions, engage them in a discussion, present points and listen to them, but always in a mutually respectful environment. Remember, even if you present new, strong arguments, they still might not change their opinion, and &lt;em&gt;that is completely okay.&lt;/em&gt; You try to share knowledge, not convince and enforce. One unenjoyable part of creating content might be people writing inflammatory and condescending opinions. I have encountered some people like this, thankfully not very often, but here is an important thing: continue being respectful to them even if they present their ideas and opinions in a way you don‚Äôt like. (unless they outright offend you, in which case ignore or block them - but don‚Äôt ever engage in a disrespectful exchange).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-make-sure-people-really-understood-me-or-the-power-of-feedback"&gt;
  &lt;/a&gt;
  How do I make sure people really understood me? (or the power of feedback)
&lt;/h2&gt;

&lt;p&gt;After you have written an article, your readers will start commenting on it. We have covered that a bit in the last paragraph, but we only addressed opinions. In most cases, comments that people leave will be not opinions, but questions. And it is very important for you to try to stay in touch with the readers, and provide more insight into your ideas. Don‚Äôt push yourself too hard, it is not required to answer the questions in under five minutes; but do your best not to leave any questions ignored.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-point-involve-other-content-creators"&gt;
  &lt;/a&gt;
  Bonus point: involve other content creators
&lt;/h2&gt;

&lt;p&gt;What really helped me grow as a content creator is having other content creators review my drafts (and of course reviewing theirs). As a matter of fact, lots of advice presented in this article is not my own ideas, but rather something that I have learned from my fellow writers. So, a very nice opportunity to start writing content is to join This is Learning / This is Angular, a community I am also a member of, filled with awesome people that will be happy to give you advice, review your content, and help you grow.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  In conclusion
&lt;/h1&gt;

&lt;p&gt;When I started writing this article, I carefully drew an outline, named the chapters and sections, and planned on how to proceed. You don‚Äôt &lt;em&gt;need&lt;/em&gt; that. As a matter of fact, you can get down to writing something &lt;em&gt;right now,&lt;/em&gt; and you might find yourself inspired just because you are doing what you really wanted to do (forget about this article for a moment - it is never guaranteed that it will in fact help you, I am just trying to do my best).&lt;/p&gt;

&lt;p&gt;Now my personal goal for the future is to help people not only write better code, but also start helping others do the same. So I am inviting you to share your ideas for articles, videos, tutorials - or any other content you think you can create and share with others, and I will do my best to give you feedback and help with advice - consider this some sort of a challenge. You can both comment on this article and reach out to &lt;a href="https://twitter.com/Armandotrue"&gt;&lt;em&gt;me on Twitter&lt;/em&gt;&lt;/a&gt; - I am available most of the time and will try to provide you with the best suggestions I can. Or go ahead and join This is Learning.&lt;/p&gt;

&lt;p&gt;Because I believe that you too can create awesome content.&lt;/p&gt;

</description>
      <category>writing</category>
      <category>content</category>
      <category>education</category>
    </item>
    <item>
      <title>Top 14 Best Css Frameworks For Your Next Projects</title>
      <author>Pawan Bhayde</author>
      <pubDate>Mon, 19 Apr 2021 05:26:58 +0000</pubDate>
      <link>https://dev.to/pawanbhayde/top-14-best-css-frameworks-for-your-next-projects-2no2</link>
      <guid>https://dev.to/pawanbhayde/top-14-best-css-frameworks-for-your-next-projects-2no2</guid>
      <description>&lt;p&gt;HomeFrontendTop 14 Best Css Frameworks For Your Next Projects&lt;br&gt;
Top 14 Best Css Frameworks For Your Next Projects&lt;/p&gt;

&lt;p&gt;Hey Welcome...!, In this post we see top 14 Best Css Frameworks for your next web development projects. this 14 frameworkd are easy to use and easily customizable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Bootstrap&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;Bootstrap&lt;/a&gt; may be a front-end development framework that permits developers &amp;amp; designers to quickly build fully responsive websites. The framework contains global CSS settings with built-in components and extensible classes within the sort of typography, navigation, buttons and far more.&lt;/p&gt;

&lt;p&gt;Bootstrap also contains optional jQuery plugins that further enhance the framework.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;p&gt;1 Massive community support&lt;br&gt;
2 Widest variety of themes&lt;br&gt;
3 Best browser capability&lt;br&gt;
4 Has both a fluid and fixed pattern grid system&lt;br&gt;
5 More development tools available&lt;br&gt;
6 Many popular websites are built on this framework&lt;/p&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;p&gt;1 Not as lightweight when compared to others&lt;br&gt;
2 Difficult to use jQuery plugins&lt;br&gt;
3 Websites are easily recognizable&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Foundation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;Foundation&lt;/a&gt; may be a CSS framework designed by ZURB in September 2011. it's a rather more advanced interface compared to other frameworks. Foundation is compatible on multiple browsers and hand-held devices. The responsive menu is one among its greatest assets. The menu is incredible when it involves functionality and may even be easily styled using CSS. This responsive framework allows designers and developers to make elegant websites with more of a design-it-yourself approach.&lt;/p&gt;

&lt;p&gt;Pros:&lt;br&gt;
1 Design-it-yourself approach&lt;br&gt;
2 Immense customization settings&lt;br&gt;
3 Strong grid system&lt;br&gt;
4 Provides rapid development of code&lt;br&gt;
5 Easy to use templates available for download&lt;br&gt;
6 Lightweight&lt;/p&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;p&gt;1 More complex when trying to customize&lt;br&gt;
2 Not a great framework for beginners&lt;br&gt;
3 Less popular than Bootstrap&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Bulma&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;Bulma&lt;/a&gt; may be a relatively new entrant to the battleground of CSS frameworks and has made a reputation for itself during a short time. Its attractiveness lies during a strict, CSS-only approach (there are not any JavaScript components), and stylish defaults, which are some things many developers with an honest eye for design have a drag with when working with Bootstrap.&lt;/p&gt;

&lt;p&gt;Why choose the Bulma CSS Framework&lt;/p&gt;

&lt;p&gt;1 Quite popular&lt;br&gt;
2 Extremely readable classes&lt;br&gt;
3 Flat learning curve&lt;br&gt;
4 Elegant&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. UIkit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The thing that involves mind when thinking of &lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;UIkit&lt;/a&gt; is minimalism. Minimalism not in features (in fact, it offers perhaps the foremost features of all frameworks), but in design. If super-clean, elegant, non-whitespace-shy designs are your thing, UIkit has you covered.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Semantic UI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another contender within the race is &lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;Semantic UI&lt;/a&gt;, which tries to differentiate itself with tons of themes and customization. There are quite 3000 theming variables, which ends up during a massive breadth. approximately the docs say.&lt;/p&gt;

&lt;p&gt;Bootstrap 4 quite covers all this and is fully customizable also , but one advantage with Semantic UI is that it leads to nice-looking layouts by default. Still, it‚Äôs not the best-looking out of the box, which is why I put it later down on my list.&lt;/p&gt;

&lt;p&gt;It also has one among the steepest learning curves, and coding conventions are far more strict. Try it; I‚Äôd say, and see if it's like something you would possibly prefer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Susy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;Susy&lt;/a&gt; may be a little-known framework at now , but it‚Äôs a desirable and refreshing idea. Another pure-layout framework, Susy does away with all predefined ideas of float, grid, Flexbox, tables, or anything , and allows you to compose the type of layout you would like . ‚ÄúCompose‚Äù is that the keyword here, as Susy is supposed for creating highly modular, staggering layouts with ultra-complex, unusual, and precise needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Materialize&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you‚Äôre crazy with Google‚Äôs Material Design, &lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;Materialize&lt;/a&gt; may be a framework you‚Äôll enjoy. the simplest thing is that it's only a couple of components and classes to find out , and is concentrated on getting you productive as fast as possible. There are few customization options, and Materialize follows the favored 12-column grid format established by Bootstrap.&lt;/p&gt;

&lt;p&gt;If you inquire from me , though, a cloth design is becoming so common, and is so . . . Flat by default, that pretty soon we‚Äôll be complaining about it as we do about Bootstrap‚Äôs all-websites-look-the-same problem. Still, it‚Äôs a pleasant framework to start out with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Pure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Is Yahoo dead?&lt;/p&gt;

&lt;p&gt;No, this question isn't a diversion, but highlights a crucial observation: Yahoo built the Pure framework and released it under the BSD license.&lt;/p&gt;

&lt;p&gt;A quick look impresses me, and that i wonder why this offering isn't known to more people. Anyway, what makes Pure, well, pure, is that it‚Äôs a &lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;pure&lt;/a&gt; CSS framework. üôÇ actually , the developers have gone the additional mile and broken it up into different CSS modules that you simply can import as required . So, if you would like only the grid system, there‚Äôs no got to import the whole CSS and add it to the site‚Äôs load time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Skeleton&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As you'll see within the screenshot, &lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;Skeleton&lt;/a&gt; is so minimal that it doesn‚Äôt even call itself a CSS framework, library, or maybe module. It‚Äôs boilerplate, and contains only 400 lines of source code! Incredible? i feel so, but to place things in perspective, Skeleton was designed for little or small projects that require little quite layouts and positioning.&lt;/p&gt;

&lt;p&gt;Worth a look; in any case , who knows, Skeleton could be what you were trying to find all along!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Milligram&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;Milligram&lt;/a&gt;, a CSS framework designed for speed and productivity. The developers have kept it under 2 KB in size, which by today‚Äôs standards, means tons .&lt;/p&gt;

&lt;p&gt;A milligram may be a fun little combat CSS frameworks that you‚Äôll appreciate working with. Extending it's easy, and with a couple of lines of custom CSS, you'll change its look to the way you would like .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. Tailwind Css&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I remember the first days when &lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;Tailwind CSS&lt;/a&gt; was released. It barely made a soft thud, and therefore the ecosystem gave it no attention; and rightly so, as long as Tailwind was neither backed by a tech giant nor had the push of a huge marketing budget. Besides, with Tailwind, you didn‚Äôt get a Bootstrap-like experience, something that had (or maybe still is) become the norm.&lt;/p&gt;

&lt;p&gt;In fact, Tailwind advocated a method of writing and using CSS that sent many screaming in disgust. I mean, check out the utilization of CSS classes within the following piece of code (taken from the Tailwind website)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12. Tacit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;Tacit&lt;/a&gt; is somebody‚Äôs side-project that I found while trying to find interesting things for this text . Yup, simply a side project; nothing quite one person‚Äôs work supported their liking.&lt;/p&gt;

&lt;p&gt;Why do I stress that so much?&lt;/p&gt;

&lt;p&gt;Because this generally means the danger of getting abandoned is extremely high. But then, I also can consider a few of positives: 1) The project is on GitHub, and so, if you‚Äôre a developer and need to support/expand Tacit, you recognize what to try to to . üòâ 2) CSS isn't like JavaScript in terms of change or evolution; whatever styling you‚Äôre using today are going to be supported by browsers for a really while .&lt;/p&gt;

&lt;p&gt;So, what exactly is that this Tacit thing?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;13. Spectre&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Modern, flexible, lightweight ‚Äî if you‚Äôre trying to find something with these attributes, &lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;Spectre&lt;/a&gt; is worth a glance .&lt;/p&gt;

&lt;p&gt;Let me explain my choice of adjectives for Spectre:&lt;/p&gt;

&lt;p&gt;Modern: The layout system of Spectre is predicated on Flexbox, which is among the simplest things modern CSS has given us. Simultaneously, many facilities and tooling found in modern CSS workflows or other frameworks also are included.&lt;br&gt;
Flexible: you'll write the foremost modular and advanced CSS framework, but it‚Äôs little use if it‚Äôs not easily customizable. i prefer how customization is mentioned at the very top of their docs; follow the rabbit burrow , and you‚Äôll find extensive explanations.&lt;br&gt;
Lightweight: We are in an era where concerns about web performance are on an upswing; every kilobyte being transferred is scrutinized and criticized. As such, Spectre wraps up everything during a sweet 10KB package, which shouldn't be ‚Äútoo much‚Äù for all folks . üòù&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;14. Primer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-14-best-css-frameworks-for-your.html"&gt;Primer&lt;/a&gt; isn't a CSS framework or library. It‚Äôs not even a set of CSS classes or another weird twist on terminology.&lt;/p&gt;

&lt;p&gt;Then why is it on this list? Two reasons:&lt;/p&gt;

&lt;p&gt;It has a CSS framework.&lt;br&gt;
It‚Äôs one among the foremost all-encompassing and mind-blowing things you‚Äôll ever see.&lt;/p&gt;

&lt;p&gt;Yes, because the screenshot says, Primer may be a design system developed by GitHub for his or her own use. Eventually, they realized this thing was powerful and very useful for frontend and visual work; so, they made it open source.&lt;/p&gt;

&lt;p&gt;I‚Äôve been struggling to seek out the proper words to explain Primer. Their own Design System Team calls it . . . well, yes, a design system, but i feel the scope is way broader than what we mean once we say ‚Äúdesign system‚Äù.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Node.JS - Foal framework - What's new in version 2 (4/4)</title>
      <author>Lo√Øc Poullain</author>
      <pubDate>Mon, 19 Apr 2021 05:25:41 +0000</pubDate>
      <link>https://dev.to/loicpoullain/node-js-foal-framework-what-s-new-in-version-2-4-4-3k0l</link>
      <guid>https://dev.to/loicpoullain/node-js-foal-framework-what-s-new-in-version-2-4-4-3k0l</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This article was originally published on &lt;a href="https://foalts.org/blog/2021/04/08/whats-new-in-version-2-part-4"&gt;https://foalts.org/blog/2021/04/08/whats-new-in-version-2-part-4&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This article presents the improvements to the session system in FoalTS version 2.&lt;/p&gt;

&lt;p&gt;The new syntax can be used either with cookies or with the &lt;code&gt;Authorization&lt;/code&gt; header. It adds the following new features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;query all sessions of a given user&lt;/li&gt;
&lt;li&gt;query all connected users&lt;/li&gt;
&lt;li&gt;force logout of a specific user&lt;/li&gt;
&lt;li&gt;flash sessions&lt;/li&gt;
&lt;li&gt;session ID regeneration&lt;/li&gt;
&lt;li&gt;anonymous and authenticated sessions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FoalTS also simplifies stateful CSRF protection so that all it takes is one setting to enable it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-session-system"&gt;
  &lt;/a&gt;
  New Session System
&lt;/h2&gt;

&lt;p&gt;The new authentication system is probably the main new feature of version 2. The old session components have been redesigned so as to serve three purposes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;be easy to use with very little code,&lt;/li&gt;
&lt;li&gt;support a large variety of applications and architectures (SPA, Mobile, SSR, API, &lt;code&gt;Authorization&lt;/code&gt; header, cookies, serverless environment, social auth, etc),&lt;/li&gt;
&lt;li&gt;and add missing features impossible to implement in version 1.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the way to use it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First &lt;a href="https://foalts.org/docs/authentication-and-access-control/session-tokens#choosing-a-session-store"&gt;specify in the configuration&lt;/a&gt; where your sessions should be stored (SQL database, redis, Mongo, etc).&lt;/li&gt;
&lt;li&gt;Then decorate any route or controller that need authentication with &lt;code&gt;@UseSessions&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#example-with-the-raw-authorization-endraw-header"&gt;
  &lt;/a&gt;
  Example with the &lt;code&gt;Authorization&lt;/code&gt; header
&lt;/h3&gt;

&lt;p&gt;In this first example, we'd like to use the &lt;code&gt;Authorization&lt;/code&gt; header to handle authentication.&lt;/p&gt;

&lt;p&gt;We want to send an email address and password to &lt;code&gt;/login&lt;/code&gt; and retrieve a token in return to authenticate further requests.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;dependency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;UserRequired&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;UseSessions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ValidateBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseUnauthorized&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Post&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@foal/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;fetchUser&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@foal/typeorm&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Product&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../entities&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;UseSessions&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fetchUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ApiController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;dependency&lt;/span&gt;
  &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Store&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;UserRequired&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;readProducts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseOK&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ValidateBody&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;additionalProperties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseUnauthorized&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;verifyPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseUnauthorized&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;createSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseOK&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getToken&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/logout&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroy&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseOK&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#example-with-cookies"&gt;
  &lt;/a&gt;
  Example with cookies
&lt;/h3&gt;

&lt;p&gt;In this second example, we will use cookies to manage authentication. Foal will auto-creates a session when none exists.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;dependency&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;UserRequired&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;UseSessions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ValidateBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseUnauthorized&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Post&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@foal/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;fetchUser&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@foal/typeorm&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Product&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../entities&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;UseSessions&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="c1"&gt;// highlight-next-line&lt;/span&gt;
  &lt;span class="na"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fetchUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ApiController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;dependency&lt;/span&gt;
  &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Store&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;UserRequired&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;readProducts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseOK&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;ValidateBody&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;additionalProperties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseUnauthorized&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;verifyPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseUnauthorized&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// highlight-next-line&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// highlight-next-line&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseOK&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/logout&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;logout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroy&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HttpResponseOK&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#new-features"&gt;
  &lt;/a&gt;
  New features
&lt;/h3&gt;

&lt;p&gt;In addition to this redesign, version 2 also offers new features.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#query-all-sessions-of-a-user-typeorm-only"&gt;
  &lt;/a&gt;
  Query all sessions of a user (TypeORM only)
&lt;/h4&gt;

&lt;p&gt;This feature allows you to list all sessions associated with a specific user. This can be useful if a user is connected on several devices and you like to audit them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSessionIDsOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#query-all-connected-users-typeorm-only"&gt;
  &lt;/a&gt;
  Query all connected users (TypeORM only)
&lt;/h4&gt;

&lt;p&gt;This feature lists all users that have at least one session in the database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAuthenticatedUserIds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#force-the-disconnection-of-a-user-typeorm-only"&gt;
  &lt;/a&gt;
  Force the disconnection of a user (TypeORM only)
&lt;/h4&gt;

&lt;p&gt;In case you want to remove all sessions associated with a specific user, you can use the &lt;code&gt;destroyAllSessionsOf&lt;/code&gt; method. This can be useful if you think a session has been corrupted or when you want, for example when a password is changed, to disconnect a user from all other devices to which he/she has previously logged on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroyAllSessionsOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#flash-sessions"&gt;
  &lt;/a&gt;
  Flash sessions
&lt;/h4&gt;

&lt;p&gt;Flash content is used when we want to save data (a message for example) only for the next request. A typical use case is when a user enters wrong credentials. The page is refreshed and an error message is displayed.&lt;/p&gt;

&lt;p&gt;To use flash content, you only need to add the option &lt;code&gt;flash&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;set&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Incorrect email or password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;flash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#regenerate-the-session-id"&gt;
  &lt;/a&gt;
  Regenerate the session ID
&lt;/h4&gt;

&lt;p&gt;Regenerating the session ID is a &lt;a href="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#renew-the-session-id-after-any-privilege-level-change"&gt;recommended practice&lt;/a&gt; when changing a user's privileges or password. This can now be done with the &lt;code&gt;regenerateID&lt;/code&gt; method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;regenerateID&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#expired-sessions-clean-up-regularly-typeorm-and-mongodb"&gt;
  &lt;/a&gt;
  Expired sessions clean up regularly (TypeORM and MongoDB)
&lt;/h4&gt;

&lt;p&gt;Starting from version 2, Foal regularly cleanup expired sessions in your database so you don't have to do it manually.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#anonymous-sessions-and-templates"&gt;
  &lt;/a&gt;
  Anonymous sessions and templates
&lt;/h4&gt;

&lt;p&gt;In version 2, &lt;code&gt;@UseSessions({ cookie: true })&lt;/code&gt; automatically creates a session if none exists. This is particularly useful if you're building a shopping website with SSR templates. When the user navigates on the website, he/she can add items to the cart without having to log in the first place. Then, when the user wants to place his/her order, he can log in and the only thing you have to do is this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#stateful-csrf-protection-simplified"&gt;
  &lt;/a&gt;
  Stateful CSRF protection simplified
&lt;/h2&gt;

&lt;p&gt;In version 1, providing a CSRF protection was quite complex. We needed to manage token generation, handle the CSRF cookie (expiration, etc), use an additional hook, etc.&lt;/p&gt;

&lt;p&gt;Starting from version 2, the CSRF protection is all managed by &lt;code&gt;@UseSessions&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;YAML version&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;settings&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;session&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;csrf&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;JSON version&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"settings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"session"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"csrf"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"enabled"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;JS version&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;session&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;csrf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When it is enabled, an additional &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie is sent to the client at the same time as the session cookie. It contains a CSRF token associated with your session.&lt;/p&gt;

&lt;p&gt;When a request is made to the server, the &lt;code&gt;@UseSessions&lt;/code&gt; hooks expects you to include its value in the &lt;code&gt;XSRF-TOKEN&lt;/code&gt; header.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're building a regular web application and want to include the CSRF token in your templates, you can retrieve it with this statement: &lt;code&gt;ctx.session.get('csrfToken')&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>node</category>
    </item>
    <item>
      <title>Write Your First Python-Powered Web Server</title>
      <author>MichaelPaulKunz</author>
      <pubDate>Mon, 19 Apr 2021 05:22:10 +0000</pubDate>
      <link>https://dev.to/michaelpaulkunz/write-your-first-python-powered-web-server-3pee</link>
      <guid>https://dev.to/michaelpaulkunz/write-your-first-python-powered-web-server-3pee</guid>
      <description>&lt;p&gt;Mark Wahlbeck from Devslopes thinks &lt;a href="https://www.youtube.com/watch?v=sO1ctUNQ1k8&amp;amp;t=2s&amp;amp;ab_channel=Devslopes"&gt;beginners shouldn't learn Python&lt;/a&gt;. I don't know if he's right or not, but I do want to stress that this tutorial is for people who already have some experience with JavaScript, have built a server with Node and Express, and want to try something new. If nothing else, building your server with Python and Django might cement your understanding of how your Node server is working. And if you get comfortable with Python, it can be a good catch-all language for automating your daily tasks, even if it never gets you hired as a junior developer.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-your-dev-environment"&gt;
  &lt;/a&gt;
  Setting Up Your Dev Environment
&lt;/h3&gt;

&lt;p&gt;Because this tutorial is for JavaScript coders, we'll be working in VS Code instead of PyCharm. I'm working in Ubuntu 18.04, so ideally this is for other Linux users, but I will include alternative commands for Mac and Windows where possible. &lt;/p&gt;

&lt;p&gt;The first thing you'll need to do is fire up VS Code. I created a directory named "python" to work in. Install the Python extension for VS Code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XLtEUmfi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkpzoocfnji8i5zw23wh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XLtEUmfi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkpzoocfnji8i5zw23wh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next you'll need a Python package manager and interpreter. Ubuntu users can &lt;a href="https://linuxize.com/post/how-to-install-pip-on-ubuntu-18.04/"&gt;install Pip&lt;/a&gt; with the commands &lt;code&gt;sudo apt update&lt;/code&gt; followed by &lt;code&gt;sudo apt install python3-pip&lt;/code&gt; in the terminal. Enter &lt;code&gt;pip3 --version&lt;/code&gt; to confirm you did it right. You'll get back something like this: &lt;code&gt;pip 9.0.1 from /usr/lib/python3/dist-packages (python 3.6)&lt;/code&gt;. &lt;a href="https://docs.python.org/3.9/using/windows.html"&gt;Windows&lt;/a&gt; and &lt;a href="https://code.visualstudio.com/docs/setup/mac#_launching-from-the-command-line"&gt;Mac&lt;/a&gt; users can follow the respective links for instructions on installing package managers. &lt;/p&gt;

&lt;p&gt;Linux users should have Python3 as a default Python interpreter. If you're not sure if you have it, or if you'd like to change it, you can press &lt;code&gt;ctrl+shft+P&lt;/code&gt; and type "Python: Select Interpreter" into the search box. Click the one you want. I'm using Python 3.6.9. If you have an interpreter set up, you should have a ".vscode" folder in your project folder with a "settings.json" file that includes a "python.pythonPath" key whose value is the file path to your interpreter.   &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-python"&gt;
  &lt;/a&gt;
  Testing Python
&lt;/h3&gt;

&lt;p&gt;In your root directory, create a folder called "test.py" (&lt;code&gt;touch test.py&lt;/code&gt; for Linux users), and enter the following two lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;msg = "Its Alive"
print(msg)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save the file, and run it by pressing the play button at the top-right of your VS Code window. You've probably never used this thing if you're used to writing JavaScript, so here's a picture with the button highlighted.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mQVIlprv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/si5qt046qjoq7h94cd19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mQVIlprv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/si5qt046qjoq7h94cd19.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Pressing it should have the same effect as running &lt;code&gt;node [somefile].js&lt;/code&gt;. If you see the text "Its Alive" in your terminal, you are officially coding in Python. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#virtual-environment"&gt;
  &lt;/a&gt;
  Virtual Environment
&lt;/h3&gt;

&lt;p&gt;Before we install Django, we're going to create a virtual envrironment. I'm running Linux, so I'll run the following two commands in my terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install python3-venv
python3 -m venv env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here are the MacOS and Windows alternatives:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 -m venv env (for Mac)
python -m venv env (for Windows)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Say yes to all the prompts. Your project folder should now contain an "env" directory with some folders in it ("bin", "include", "lib", ect). It should sort of look like your standard JavaScript / Node project. You're going to redirect your Python interpreter to this folder. So once again press &lt;code&gt;ctrl+shft+P&lt;/code&gt; and search for "Python: Select Interpreter". You should see a new option with ('env') at the end. Click it, and it should update your "settings.json" file to direct to the new file path ("env/bin/python" on my end). &lt;/p&gt;

&lt;p&gt;Press &lt;code&gt;ctr+shift+P&lt;/code&gt; again, and this time type "Terminal: Create New Integrated Terminal" into the search bar. Click the result, and your terminal window should display a command line starting with "(env)". This is your integrated terminal window, where we'll install Django. If at any point you close your project and come back, your terminal will not default to the integrated terminal window. The following commands will bring you back into your integrated terminal window:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;source env/bin/activate (Linux or Mac)
env\Scripts\Activate.ps1 (Windows)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#django"&gt;
  &lt;/a&gt;
  Django
&lt;/h3&gt;

&lt;p&gt;In your integrated terminal window, enter the following two commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python -m pip install --upgrade pip
python -m pip install django

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you're using Windows, and these commands don't work, try troubleshooting with &lt;a href="https://docs.djangoproject.com/en/3.2/howto/windows/"&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When the installation is complete, you're ready to make a Django app. You'll start your project by running the following command in your integrated terminal:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;django-admin startproject web_project .&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;This will create a new folder called web_project in your parent directory as well as a few utility files. Next, create your database and start your server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python manage.py migrate
python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your terminal will give you a link to &lt;a href="http://127.0.0.1:8000/"&gt;http://127.0.0.1:8000/&lt;/a&gt; and you'll see the following default message on your page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ukY9Dta6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mvg28l891560oo64hdt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ukY9Dta6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mvg28l891560oo64hdt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next step is to replace the default success screen with some personalized content, which we'll do with the startapp command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python manage.py startapp myfirstpython
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a "myfirstpython" folder with a "views.py" file. Replace the contents of "views.py" with the following code and save:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.http import HttpResponse

def home(request):
    return HttpResponse("Boilerplate Django App")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, in your "myfirstpython" folder, create a file called ursl.py with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.urls import path
from hello import views

urlpatterns = [
    path("", views.home, name="home"),
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your web_project folder also contains a urls.py file. Replace its code with this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.contrib import admin
from django.urls import include, path

urlpatterns = [
    path("", include("myfirstpython.urls")),
    path('admin/', admin.site.urls)
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save and re-run the command to start your server in your integrated terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Following the link to &lt;a href="http://127.0.0.1:8000/"&gt;http://127.0.0.1:8000/&lt;/a&gt; should bring up a plain white page with the text "Boilerplate Django App." And there you have it. Your first webpage without any JavaScript. It's not much, but if you study Python, and follow some of the links below, you can make a fully interactive page with Django. Feel free to &lt;a href="https://github.com/MichaelPaulKunz/pythondjangobiolerplate"&gt;fork this boilerplate&lt;/a&gt; and run with it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nsbi__XX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/glvb5zy0y1gxqd9wjbuo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nsbi__XX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/glvb5zy0y1gxqd9wjbuo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#citations"&gt;
  &lt;/a&gt;
  Citations:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/docs/python/python-tutorial"&gt;Installing Python&lt;/a&gt;&lt;br&gt;
&lt;a href="https://linuxize.com/post/how-to-install-pip-on-ubuntu-18.04/"&gt;Installing Pip&lt;/a&gt;&lt;br&gt;
&lt;a href="https://code.visualstudio.com/docs/python/tutorial-django"&gt;Django&lt;/a&gt;&lt;br&gt;
&lt;a href="https://docs.python.org/3.9/using/windows.html"&gt;For Windows Users&lt;/a&gt;&lt;br&gt;
&lt;a href="https://code.visualstudio.com/docs/setup/mac#_launching-from-the-command-line"&gt;For Mac Users&lt;/a&gt;&lt;br&gt;
&lt;a href="https://docs.djangoproject.com/en/3.2/howto/windows/"&gt;More Windows Troubleshooting&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=UmljXZIypDc&amp;amp;t=237s&amp;amp;ab_channel=CoreySchafer"&gt;Cooler and more complex Django App Code-along&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>devops</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Building perfect portfolio</title>
      <author>Aditya Giri</author>
      <pubDate>Mon, 19 Apr 2021 05:00:12 +0000</pubDate>
      <link>https://dev.to/brainbuzzer/building-perfect-portfolio-261b</link>
      <guid>https://dev.to/brainbuzzer/building-perfect-portfolio-261b</guid>
      <description>&lt;p&gt;Building a developer portfolio is one of the most daunting tasks. Where do you start? What do you need in your portfolio?&lt;/p&gt;

&lt;p&gt;A portfolio just like one for designers is a website that showcases all the work you have done.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why do you need a portfolio?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Well, you already have a resume, and a LinkedIn profile, isn't that enough? While both of them are important, a portfolio has much more to it.&lt;/p&gt;

&lt;p&gt;If your projects are a monument, A resume and a LinkedIn profile are like the broachers you get at the gates of the monument when you visit them, a bunch of screenshots, external links, and that's it. A portfolio, on the other hand, is more like a guided tour of your projects. Where you show (rather than just state) your skills. A portfolio lets you highlight the most impressive and important parts of your projects, stuff that isn't visible at the first glance, or things that you are really proud of.&lt;/p&gt;

&lt;p&gt;So how do you build a decent portfolio?&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#curating-the-projects"&gt;
  &lt;/a&gt;
  Curating the projects.
&lt;/h3&gt;

&lt;p&gt;Go deep not wide.&lt;/p&gt;

&lt;p&gt;A portfolio is meant to be a showcase, a showcase of your best work and not an exhaustive list of all your work. Nobody will spend time looking at more than 3-4 projects. If you make it an exhaustive list, chances are a potential employer would end up looking at one of the least impressive ones.&lt;/p&gt;

&lt;p&gt;Pick 4 projects that best represent your skills, and if you really want to include more than that consider putting up an archive link to all the other projects.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#make-it-personal"&gt;
  &lt;/a&gt;
  Make it Personal
&lt;/h3&gt;

&lt;p&gt;The portfolio should reflect your personality. Avoid generic terms and language, you are making your personal portfolio, not a template for mass use. So make sure it reflects you!&lt;/p&gt;

&lt;p&gt;Tell your story, include information that shows the human whose work they are looking at.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#be-a-tour-guide"&gt;
  &lt;/a&gt;
  Be a tour guide
&lt;/h3&gt;

&lt;p&gt;When it comes to the project description pages, guide the reader through the most important aspects of your projects, show them the challenges you went through, how the project came into being, highlight the sections that you are really proud of. Tell the story of your journey while working on the projects, the difficulties, the way you resolved them, what new things you came across, everything. Your project description pages should convey to employers that you're competent and enthusiastic.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#good-uxui"&gt;
  &lt;/a&gt;
  Good UX/UI
&lt;/h3&gt;

&lt;p&gt;Obviously, every website needs a decent UX/UI. Even if you are not a designer, it still matters that your portfolio site has a good design and aesthetic.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#domain-and-hosting"&gt;
  &lt;/a&gt;
  Domain and Hosting.
&lt;/h3&gt;

&lt;p&gt;A portfolio site should probably be a static site and if possible prefer buying a domain for your portfolio site, eg yourname.com.&lt;/p&gt;

&lt;p&gt;Make sure your portfolio follows accessibility standards.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#general-layout"&gt;
  &lt;/a&gt;
  General Layout
&lt;/h3&gt;

&lt;p&gt;Obviously, the layout of your portfolio depends on your own designs and templates that you use, but let's talk basics, what are the most basic elements that every portfolio has.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An About me section

&lt;ul&gt;
&lt;li&gt;A small about me section that highlights your personality and your background.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;A list of projects

&lt;ul&gt;
&lt;li&gt;a curated list of the projects you have worked on, with each project having a link to a project page that talks more about the project.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Contact Information.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;About the Project description pages, while it is a tricky and time-consuming thing to build decent project description pages. Nevertheless, these pages are important.&lt;/p&gt;

&lt;p&gt;Here's a template drawn by Josh Comeau in his book "Building an effective dev portfolio" for the project description pages to give you a better idea.&lt;/p&gt;

&lt;p&gt;Introduction&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;High-level summary of what the project is&lt;/li&gt;
&lt;li&gt;List of core functionalities / interesting features&lt;/li&gt;
&lt;li&gt;Your role in the project.&lt;/li&gt;
&lt;li&gt;Technologies used&lt;/li&gt;
&lt;li&gt;Links to live demo + source code (if applicable)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Purpose and Goal&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Why did you build this project? Why is it important to you?&lt;/li&gt;
&lt;li&gt;What was the expected outcome of the project?&lt;/li&gt;
&lt;li&gt;What were the initial designs?&lt;/li&gt;
&lt;li&gt;Any other preliminary planning that you did which helps build a narrative&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Spotlight&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is the ‚Äúkiller feature‚Äù of your project?&lt;/li&gt;
&lt;li&gt;What were the technical hurdles that got in your way? Any major problems you hit during development?&lt;/li&gt;
&lt;li&gt;How did you solve those problems? What was the solution? Go deep here, and write with a developer in mind.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Current status&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This section is optional. If the project is actively being used by real people, talk a little bit about the current status, who uses it, why they use it, what they say to you about it, stuff like that.&lt;/li&gt;
&lt;li&gt;If the project was contrived specifically for the portfolio, omit this section.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lessons Learned&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What did you learn doing this project? Feel free to list multiple things. Also, feel free to cover non-technical lessons. It‚Äôs great to talk about how you learned to use an advanced feature of a framework or library, but it‚Äôs just as valuable to talk about the project-management experience or things you learned about shipping projects.&lt;/li&gt;
&lt;li&gt;If you used a framework or other libraries/tools, was it a good choice? How did it help? In which ways was it insufficient?&lt;/li&gt;
&lt;li&gt;Is your project accessible? What did you learn about accessibility, while building this project? Describing how you tested your project using keyboard navigation or a screen reader can make for a really compelling story!&lt;/li&gt;
&lt;li&gt;How has this affected the work you‚Äôve done since then? Real examples of how this project built your knowledge for future projects are fantastic.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;In summary,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your Portfolio site should have a decent enough UI/UX&lt;/li&gt;
&lt;li&gt;Make sure it reflects your personality and the content isn't generic.&lt;/li&gt;
&lt;li&gt;It should have a minimum general layout with an About me section and a Project details list.&lt;/li&gt;
&lt;li&gt;Make sure your portfolio follows accessibility standards.&lt;/li&gt;
&lt;li&gt;Use a domain custom domain.&lt;/li&gt;
&lt;li&gt;Connect your social media profiles and blogs.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Are you looking to create a portfolio but don't know where to start? &lt;a href="https://hyperlog.io"&gt;Hyperlog&lt;/a&gt; was made with just that use-case in mind. It allows you to build a portfolio according to your style while giving you the ability to add cool pluggable and themes to your project. Connect your repositories and get your code analyzed. The best part, you can get your portfolio on the WWW in under 5 minutes. Get custom domains, website analytics, and much more.&lt;/p&gt;

&lt;p&gt;You focus on the code, we do the rest.&lt;/p&gt;

</description>
      <category>portfolio</category>
      <category>javascript</category>
      <category>firstyearincode</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Amazon EBS vs EFS vs S3: Picking the Best AWS Storage Option</title>
      <author>Adit Modi</author>
      <pubDate>Mon, 19 Apr 2021 04:57:27 +0000</pubDate>
      <link>https://dev.to/aws-builders/amazon-ebs-vs-efs-vs-s3-picking-the-best-aws-storage-option-2kdj</link>
      <guid>https://dev.to/aws-builders/amazon-ebs-vs-efs-vs-s3-picking-the-best-aws-storage-option-2kdj</guid>
      <description>&lt;p&gt;The storage strategy you choose plays a major role in the performance you receive, as well as the costs you‚Äôll expend. To achieve peak efficiency, you must match your computing, application, and processing needs to the appropriate storage technology. But which option is right for you?&lt;/p&gt;

&lt;p&gt;To answer this question, we‚Äôll explore the differences between Amazon Elastic Block Store (Amazon EBS), Amazon Elastic File System (Amazon EFS), and Amazon Simple Storage Service (Amazon S3) and understand each solution‚Äôs unique benefits and uses. This will make it easier to pick the best solution to support your business objectives and storage needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lVfzGRxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idvhggqn8i6vwu64yh51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lVfzGRxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idvhggqn8i6vwu64yh51.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Background: I am Cloud , DevOps &amp;amp; Big Data Enthusiast | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified . &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-the-difference-between-amazon-ebs-vs-efs-vs-s3"&gt;
  &lt;/a&gt;
  What‚Äôs The Difference Between Amazon EBS Vs EFS Vs S3?
&lt;/h2&gt;

&lt;p&gt;Amazon EFS, Amazon EBS, and Amazon S3 are AWS‚Äô three different storage types that can be applicable for different types of workload needs. Let‚Äôs take a closer look at the key features of each option, as well as the similarities and differences.&lt;/p&gt;

&lt;p&gt;Amazon EBS delivers high-availability block-level storage volumes for Amazon Elastic Compute Cloud (EC2) instances. It stores data on a file system which is retained after the EC2 instance is shut down. Amazon EFS offers scalable file storage, also optimized for EC2. It can be used as a common data source for any application or workload that runs on numerous instances. Using an EFS file system, you may configure instances to mount the file system. The main differences between EBS and EFS is that EBS is only accessible from a single EC2 instance in your particular AWS region, while EFS allows you to mount the file system across multiple regions and instances.&lt;/p&gt;

&lt;p&gt;Finally, Amazon S3 is an object store good at storing vast numbers of backups or user files. Unlike EBS or EFS, S3 is not limited to EC2. Files stored within an S3 bucket can be accessed programmatically or directly from services such as AWS CloudFront. This is why many websites use it to hold their content and media files, which may be served efficiently from AWS CloudFront.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-how-can-you-choose-between-amazon-ebs-vs-efs-vs-s3"&gt;
  &lt;/a&gt;
  So how can you choose between Amazon EBS vs EFS vs S3?
&lt;/h2&gt;

&lt;p&gt;That depends on what benefits you‚Äôre looking for, and your use case for your workload. Let‚Äôs take an in-depth look at each one to understand their benefits and use cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-elastic-block-store-amazon-ebs"&gt;
  &lt;/a&gt;
  Amazon Elastic Block Store (Amazon EBS)
&lt;/h2&gt;

&lt;p&gt;Use Amazon EBS to provide storage for the drives of your virtual machines. It stores data in equally-sized blocks and organizes them into a hierarchy similar to a traditional file system. The volumes are provisioned in size and attached to EC2 instances in a way that‚Äôs similar to the local disk drive on a physical machine. Here are EBS‚Äô benefits and use cases:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-ebs-benefits"&gt;
  &lt;/a&gt;
  Amazon EBS Benefits
&lt;/h2&gt;

&lt;p&gt;Performance optimization: Increase throughput by devoting network capacity and minimizing the network contention between your instances and EBS.&lt;/p&gt;

&lt;p&gt;Low-latency performance: By using SSD EBS volumes, it offers reliable I/O performance scaled to meet your workload needs.&lt;br&gt;
Highly available and secure storage: EBS volumes offer redundancy within its Availability Zones while access control and encryption bolster security.&lt;/p&gt;

&lt;p&gt;Geographic interchangeability: With EBS, you can duplicate snapshots throughout AWS regions and place resources and data in multiple locations. This makes disaster recovery, data center migration, and geographical expansion simple.&lt;/p&gt;

&lt;p&gt;Easy data backup and restoration: Point-in-time volume snapshots safeguard data.&lt;/p&gt;

&lt;p&gt;Rapid up- or down-scaling: EBS can quickly scale volumes, ensuring you get the right performance and capacity for changing computing needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-ebs-use-cases"&gt;
  &lt;/a&gt;
  Amazon EBS Use Cases
&lt;/h2&gt;

&lt;p&gt;Testing and development: You can scale, archive, duplicate or provision your testing, development, or production environments.&lt;/p&gt;

&lt;p&gt;NoSQL databases: EBS offers NoSQL databases the low-latency performance and dependability they need for peak performance.&lt;br&gt;
Relational databases: EBS scales to meet your changing storage needs. This makes it a great choice for deploying databases, including PostgreSQL, MySQL, Oracle, or Microsoft SQL Server.&lt;/p&gt;

&lt;p&gt;Business consistency: Copy EBS Snapshots and Amazon Machine Images (AMIs) to run applications in different AWS regions. This reduces data loss and speeds recovery time by backing up log files and data regularly, across geographies.&lt;/p&gt;

&lt;p&gt;Enterprise-wide applications: It can meet a variety of enterprise computing needs through powerful block storage that can support your most important applications, such as Microsoft Exchange, Oracle, or Microsoft SharePoint.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-elastic-file-system-amazon-efs"&gt;
  &lt;/a&gt;
  Amazon Elastic File System (Amazon EFS)
&lt;/h2&gt;

&lt;p&gt;EFS is the best choice for running any application that has a high workload, requires scalable storage, and must produce output quickly. It scales automatically, even to meet the most abrupt workload spikes. After the period of high-volume storage demand has passed, EFS will automatically scale back down. EFS can be mounted to different AWS services and accessed from all your virtual machines. Use it for running shared volumes, or for big data analysis. You‚Äôll always pay for the storage you actually use, rather than provisioning storage in advance that‚Äôs ultimately wasted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-efs-benefits"&gt;
  &lt;/a&gt;
  Amazon EFS Benefits
&lt;/h2&gt;

&lt;p&gt;Performance that scales to support any workload: EFS offers the throughput changing workloads need. It can provide higher throughput in spurts that match sudden file system growth, even for workloads up to 500,000 IOPS or 10 GB per second.&lt;/p&gt;

&lt;p&gt;Energetic elasticity: Automatically scale your file system storage up or down. Remove or add files and never disturb applications. Once you make your EFS file system you can add files without worrying about storage provisioning.&lt;/p&gt;

&lt;p&gt;Accessible file storage: On-premises servers and EC2 instances can access shared file systems concurrently. EC2 instances can also access EFS file systems located in other AWS regions through VPC peering.&lt;/p&gt;

&lt;p&gt;Comprehensive managed service: EFS is a complete managed service, meaning your firm will never have to patch, deploy, or maintain your file system.&lt;/p&gt;

&lt;p&gt;Cost savings: The only storage you‚Äôll pay for is exactly what you use, as there‚Äôs no advance provisioning, up-front fees, or commitments. Moreover, you can use Lifecycle Management to transfer files that have been unused for a month to a more cost-effective storage class, which can lower expenses up to 85%.&lt;br&gt;
Tighter security and compliance: You can securely access the file system with your current security solution, or control access to EFS file systems using AWS Identity and Access Management (IAM), Amazon Virtual Private Cloud (Amazon VPC), or POSIX permissions. And, EFS can encrypt your data, whether it‚Äôs in transit or at rest. This gives you dependable security and makes regulatory compliance easier.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-efs-use-cases"&gt;
  &lt;/a&gt;
  Amazon EFS Use Cases
&lt;/h2&gt;

&lt;p&gt;Lift-and-shift application support: EFS is elastic, available, and scalable, and enables you to move enterprise applications easily and quickly without needing to re-architect them.&lt;/p&gt;

&lt;p&gt;Analytics for big data: It has the ability to run big data applications, which demand significant node throughput, low-latency file access, and read-after-write operations.&lt;/p&gt;

&lt;p&gt;Content management system and web server support: EFS is a robust throughput file system capable of enabling content management systems and web serving applications, such as archives, websites, or blogs.&lt;/p&gt;

&lt;p&gt;Application development and testing: Only EFS provides a shared file system needed to share code and files, across multiple compute resources to facilitate auto-scaling workloads.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-s3"&gt;
  &lt;/a&gt;
  Amazon S3
&lt;/h2&gt;

&lt;p&gt;Amazon S3 provides object storage. Each object has its own unique identifier or key, for access through web requests from any location. S3 also supports static web content hosting that can be accessed from the S3 bucket or from AWS CloudFront. And S3 is notably secure, providing. ‚Äúeleven nines‚Äù - 99.999999999 of data durability.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-s3-benefits"&gt;
  &lt;/a&gt;
  Amazon S3 Benefits
&lt;/h2&gt;

&lt;p&gt;Robust performance, scalability, and availability: Amazon S3 scales storage resources free from resource procurement cycles or investments upfront. It keeps your data safe from errors, failures, and threats and makes it available when you need it.&lt;br&gt;
Cost-saving storage classes: Storing data throughout S3 storage classes saves costs and maintains high levels of performance. Storage class analysis enables you to locate data that may be moved to a lower-cost storage class. Then you can make the transfer using an S3 Lifecycle policy. &lt;/p&gt;

&lt;p&gt;Finally, S3 intelligent-tiering enables the storage of data that has changing or unknown access patterns by tiering objects, which cuts storage costs.&lt;/p&gt;

&lt;p&gt;Easier security, compliance, and audit features: S3 can store data and protect it from unauthorized access using its powerful access management and encryption tools. S3 has features that make it easy to comply with regulatory requirements, and Amazon Macie can deny irregular access requests to your sensitive data. Plus, S3 works well with AWS‚Äô many auditing features.&lt;/p&gt;

&lt;p&gt;Exacting data control: An array of management tools enable you to classify and report on data. S3 has storage class analysis that monitors access patterns, while S3 Lifecycle analyzes object transfers to lower-cost storage. &lt;br&gt;
S3 Object Lock assigns retention dates to objects to prevent deletion, and S3 Inventory offers visibility of stored objects and their encryption and metadata. Finally, S3 Batch Operations can run storage management maintenance for billions of objects while AWS Lambda can be used to automate workflows, define alerts and log activities without added management of infrastructure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-s3-use-cases"&gt;
  &lt;/a&gt;
  Amazon S3 Use Cases
&lt;/h2&gt;

&lt;p&gt;Data lake and big data analytics: Create a data lake to hold raw data in its native format, then use machine learning tools, query-in-place, and analytics to draw insights. S3 works with AWS Lake Formation to create data lakes, then define governance, security, and auditing policies. Together, they can be scaled to meet your growing data stores, and you‚Äôll never have to make an investment upfront.&lt;/p&gt;

&lt;p&gt;Backup and restoration: Secure, robust backup and restoration solutions are easy to build when you combine S3 with other AWS offerings, including EBS, EFS, or S3 Glacier. These offerings enhance your on-premises capabilities, while other offerings can help you meet compliance, recovery time, and recovery point objectives.&lt;/p&gt;

&lt;p&gt;Reliable disaster recovery: S3 storage, S3 Cross-Region Replication and additional AWS networking, computing, and database services make it easy to protect critical applications, data, and IT systems. It offers nimble recovery from outages, no matter if they are caused by system failures, natural disasters, or human error.&lt;/p&gt;

&lt;p&gt;Methodical archiving: S3 works seamlessly with other AWS offerings to provide methodical archiving capabilities. S3 Glacier and S3 Glacier Deep Archive enable you to archive data and retire physical infrastructure. There are three S3 storage classes you can use to retain objects for extended periods of time at their lowest rates. &lt;/p&gt;

&lt;p&gt;S3 Lifecycle policies can be created to archive objects at any point within their lifecycle, or you can upload objects to archival storage classes directly. &lt;/p&gt;

&lt;p&gt;S3 Object Lock meets compliance regulations by applying retention dates objects to avoid their deletion. And unlike a tape library, S3 Glacier can restore any archived object within minutes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X2hORSun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/455ibg4awp8z3qyht4ho.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X2hORSun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/455ibg4awp8z3qyht4ho.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this guide helps you understand the Different AWS Storage Options, feel free to connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn.&lt;/a&gt;&lt;br&gt;
You can view my badges &lt;a href="https://www.youracclaim.com/users/adit-modi/badges"&gt;here.&lt;/a&gt;&lt;br&gt;
If you are interested in learning more about AWS then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>beginners</category>
      <category>career</category>
      <category>aws</category>
    </item>
    <item>
      <title>Why you shouldn't be a full-stack engineer</title>
      <author>Sonny Alves Dias</author>
      <pubDate>Mon, 19 Apr 2021 04:47:20 +0000</pubDate>
      <link>https://dev.to/sonny_ad/why-you-shouldn-t-be-a-full-stack-engineer-faa</link>
      <guid>https://dev.to/sonny_ad/why-you-shouldn-t-be-a-full-stack-engineer-faa</guid>
      <description>&lt;p&gt;Everybody is hiring full-stack engineers! Startups and big corporations throw big salaries for hiring such profiles. But let me tell you why you shouldn't contribute to that trend.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-fullstack-is-too-vague"&gt;
  &lt;/a&gt;
  1. "Full-stack" is too vague üåä
&lt;/h2&gt;

&lt;p&gt;In the beginning, the label full-stack was coming with another precision: which stack? Nowadays, we just consider a full-stack having the mastery of front-end and back-end. But &lt;strong&gt;there is no one stack&lt;/strong&gt;.  &lt;br&gt;&lt;br&gt;
Back-end systems are composed of plenty of micro-services and integrations of different sorts. A front-end can be a website, a mobile app, a smartwatch app, etc. There are also dedicated stacks for Analytics and QA. So which stack are we talking about?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-you-are-fooling-yourself-into-thinking-you-are-capable-of-everything"&gt;
  &lt;/a&gt;
  2. You are fooling yourself into thinking you are capable of everything üé≠
&lt;/h2&gt;

&lt;p&gt;This is for a simple reason: &lt;strong&gt;time&lt;/strong&gt;.  &lt;br&gt;&lt;br&gt;
While you should always learn and improve, you can't overpromise. You are an important actor in the risks' evaluation! Put your overconfidence aside, and ask yourself: "Am I alright if I am wrong?" &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-employers-underestimate-what-being-a-fullstack-engineer-would-actually-mean"&gt;
  &lt;/a&gt;
  3. Employers underestimate what being a full-stack engineer would actually mean üë®‚Äçüíº
&lt;/h2&gt;

&lt;p&gt;In the past, being a full-stack meant working with HTML/CSS/JS on a LAMP (Linux, Apache, MySQL, PHP) stack. And use FTP to update your site. &lt;br&gt;&lt;br&gt;
Today full-stack means having the mastery of HTML, CSS, JS, SASS, React, NPM, Shell, Docker, Python, Linux, MySQL, Redis, AWS S3, AWS EKS, AWS EC2, Google Analytics, Selenium, Git, Travis CI, Kubernetes, etc. &lt;br&gt;&lt;br&gt;
There are many and many. And that &lt;strong&gt;makes our job more complicated than ever&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
So in the end, what should you be? My answer is &lt;strong&gt;a software engineer&lt;/strong&gt;. He/she is versatile by definition. Also, as a software engineer, you won't be trapped in any role and be able to grow your skills in the directions you want.&lt;/p&gt;




&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@eklektikum?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Iva Rajoviƒá&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/stack?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>fullstack</category>
      <category>junior</category>
    </item>
    <item>
      <title>Html Tags for frontend developers</title>
      <author>joeaspiazudeveloper</author>
      <pubDate>Mon, 19 Apr 2021 04:40:52 +0000</pubDate>
      <link>https://dev.to/joeaspiazudeveloper/html-tags-that-most-frontend-developers-must-know-l88</link>
      <guid>https://dev.to/joeaspiazudeveloper/html-tags-that-most-frontend-developers-must-know-l88</guid>
      <description>&lt;p&gt;Some web developers doesn't have enough time to check some useful html tags that can save us time in our applications.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Datalist&lt;/li&gt;
The "datalist" html element provides an autocomplete interface for "input" elements. It contains a set of  elements that have an associated value. 
&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist"&gt;datalist resource&lt;/a&gt;&lt;/p&gt;

&lt;li&gt;Details&lt;/li&gt;
The accordions are very common UI element in websites or applications when we need to show lot of data, such as a questions page. 
By using the "details" element alongside "summary", we can achieve the same effect without JavaScript. Clicking the summary will toggle the rest of the content. 
&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details"&gt;details resource&lt;/a&gt;&lt;/p&gt;

&lt;li&gt;ColorPicker&lt;/li&gt;
When we want to add a colorPicker element, most of time we have implemented it with a Javascript library or Jquery (a little bit faster). 
In html we can use this type of input (type="color") to provide a user interface element that lets a user specify a color.
&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/color"&gt;input color resource&lt;/a&gt;&lt;/p&gt;

&lt;li&gt;Progress&lt;/li&gt;
One of the more surprised for me is the "progress" element. 
It displays an indicator showing the completion progress of a task.
&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress"&gt;progress bar resource&lt;/a&gt;&lt;/p&gt;
&lt;/ol&gt;

</description>
      <category>htmlfordevelopers</category>
      <category>html</category>
      <category>frontend</category>
      <category>webdeveloper</category>
    </item>
  </channel>
</rss>
