<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Understanding Network things: part 3 – DNS</title>
      <author>Aurélie Vache</author>
      <pubDate>Wed, 23 Jun 2021 12:54:10 +0000</pubDate>
      <link>https://dev.to/aurelievache/understanding-network-things-part-3-dns-976</link>
      <guid>https://dev.to/aurelievache/understanding-network-things-part-3-dns-976</guid>
      <description>&lt;p&gt;Hi,&lt;br&gt;
I've got a secret for you, since several years. I'm a developer and I'm a mess in undestanding network things! :'(&lt;/p&gt;

&lt;p&gt;It's hard to not understanding things that anyone seems to understand and understanding network concepts can be difficult or time-consuming, specially for developers. That the reason I started to create sketchnotes about Network concepts. I think it could be a good way, more visual, to explain it.&lt;/p&gt;

&lt;p&gt;In this third article, we will see DNS concepts.&lt;br&gt;
Is it always a DNS problem? ^^&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i6_bucnd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7j46kpsdlh9a6cwtz0s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i6_bucnd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7j46kpsdlh9a6cwtz0s.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nCFUT8Ee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhosd1sfkrqnnuucle8u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nCFUT8Ee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhosd1sfkrqnnuucle8u.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TP8lGHkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrmb5npqj9e7sipymltc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TP8lGHkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrmb5npqj9e7sipymltc.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As usual, if you like theses sketchnotes, you can follow me, and tell me what do you think. I will publish others sketchs shortly :-).&lt;/p&gt;

&lt;p&gt;If you are interested, I already published sketchnotes about &lt;a href="https://gumroad.com/aurelievache"&gt;Kubernetes, Docker and Istio&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>network</category>
      <category>http</category>
      <category>beginners</category>
      <category>cloud</category>
    </item>
    <item>
      <title>10 JavaScript features that will help you adopt React faster</title>
      <author>Amel Halilović</author>
      <pubDate>Wed, 23 Jun 2021 12:52:56 +0000</pubDate>
      <link>https://dev.to/infobipdev/10-javascript-features-that-will-help-you-adopt-react-faster-5ggb</link>
      <guid>https://dev.to/infobipdev/10-javascript-features-that-will-help-you-adopt-react-faster-5ggb</guid>
      <description>&lt;p&gt;Is there a better way to start a blog post than with plain and simple facts? Of course, there is but let’s do the Captain-Obvious routine anyway!&lt;/p&gt;

&lt;p&gt;We can all agree that JavaScript is the most popular programming language in the world. We could also agree on the fact that libraries and frameworks are indispensable elements of any efficient JS programming task.&lt;/p&gt;

&lt;p&gt;According to State of JS survey, the most popular JavaScript library for building frontend applications is React. And it has been for 5 consecutive years.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-is-react-so-popular-with-frontend-developers"&gt;
  &lt;/a&gt;
  WHY IS REACT SO POPULAR WITH FRONTEND DEVELOPERS?
&lt;/h4&gt;

&lt;p&gt;Since its initial release in May 2013, React has seen a steady incline, followed by an ever-growing number of job opportunities. A part of its appeal and user adoption is due to its non-complicated architecture, based on a lot of native JavaScript features.&lt;/p&gt;

&lt;p&gt;Given the fact that many companies are moving towards re-writing their frontend using it, React is likely to stay at the top of the UI library pyramid.&lt;/p&gt;

&lt;p&gt;If you are new to frontend development or you want to make a transition from another frontend technology, we’ve compiled a list of 10 JavaScript features to help you jumpstart your React basics!&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#1-ecmascript-modules"&gt;
  &lt;/a&gt;
  1. ECMAScript modules
&lt;/h5&gt;

&lt;p&gt;React application is organized into multiple small files — modules which all together form a graph of dependencies. The connection between them is created by using different ways of importing the right code.&lt;/p&gt;

&lt;p&gt;ECMAScript modules (or ES modules) provide an easy way to export and import parts of the code like constants, functions, components, etc. This way we can specify exactly which part of the module should be loaded.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#2-the-document-object-model-dom"&gt;
  &lt;/a&gt;
  2. The Document Object Model — DOM
&lt;/h5&gt;

&lt;p&gt;Efficient DOM manipulation is one of the main challenges for the frontend technologies such as React. It is an expensive operation and tools are competing to develop a better solution for it and dominate the sphere of UI libraries.&lt;/p&gt;

&lt;p&gt;React is top of the game in this regard. It uses VirtualDOM, which is a “virtual” representation of a “real” DOM state. It is saved in memory and synced with the real DOM by a library such as ReactDOM. To fully understand how VirtualDOM works, one must know what is and how does the real DOM work.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#3-class"&gt;
  &lt;/a&gt;
  3. Class
&lt;/h5&gt;

&lt;p&gt;One of the most popular features introduced in the ES6 version was JavaScript classes. Classes represent templates for creating objects — they define which properties and methods will the object have.&lt;/p&gt;

&lt;p&gt;In React, classes are primarily used to create stateful components. In fact, it was the only way to do it until hooks were introduced.. Since there are many developers who still prefer to use class components and many projects that haven’t migrated class components to functional, it will be useful to know how classes work.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#4-array-methods"&gt;
  &lt;/a&gt;
  4. Array methods
&lt;/h5&gt;

&lt;p&gt;Standard array methods like forEach, map, push, filter, some, etc., are widely used in React to manipulate data, so it is a good thing to be familiar with them before starting to learn and work with React. For example, map is used when we want to render multiple elements based on a collection of objects.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#5-spread-operator"&gt;
  &lt;/a&gt;
  5. Spread operator
&lt;/h5&gt;

&lt;p&gt;Spread operator takes in an iterable (e.g an array or object) and expands it into individual elements. In React it is widely used to create shallow copies of objects or to concatenate data from multiple objects or arrays. It provides a concise and readable code that enhances its use.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#6-destructuring-assignment"&gt;
  &lt;/a&gt;
  6. Destructuring assignment
&lt;/h5&gt;

&lt;p&gt;Destructuring assignment (often called just destructuring) is a JavaScript expression used for unpacking values from arrays or properties from objects into separate variables.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#7-fetch-api-promises"&gt;
  &lt;/a&gt;
  7. Fetch API /Promises
&lt;/h5&gt;

&lt;p&gt;Usually, our React applications require some data that we prepared on our backend services and exposed on RESTful APIs. To deliver that data to frontend applications we need Fetch API. Fetch API allows web-browser to make HTTP requests to web servers and fetch resources and data.&lt;/p&gt;

&lt;p&gt;Calling fetch returns a promise that resolves to a Response object holding information about the server’s response, such as its status code and its headers.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#8-bindings-and-scopes"&gt;
  &lt;/a&gt;
  8. Bindings and scopes
&lt;/h5&gt;

&lt;p&gt;When building class components, beginners usually encounter a problem — the context of the class methods is not the expected one( from the component). We need to manually bind the component’s context to the method. This is expected behavior because of JavaScript and how this is treated.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#9-arrow-functions"&gt;
  &lt;/a&gt;
  9. Arrow functions
&lt;/h5&gt;

&lt;p&gt;Arrow functions are an ES2015 feature for a simpler way of writing functions. They have some limitations so they shouldn’t be used in every situation. Despite that, they are commonly used in React to solve the problem with methods binding or to create functional components.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#10-higherorder-functions"&gt;
  &lt;/a&gt;
  10. Higher-order functions
&lt;/h5&gt;

&lt;p&gt;A function that accepts and/or returns another function is called a higher-order function. Some of the examples of higher-order functions are already mentioned array methods forEach, map, reduce, filter.&lt;/p&gt;

&lt;p&gt;Inspired by this concept, React has higher-order components (HOCs), an advanced technique for reusing component’s logic. HOCs are part of many famous libraries like react-redux, react-router, material-ui, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-shortcuts-get-to-know-javascript"&gt;
  &lt;/a&gt;
  NO SHORTCUTS — GET TO KNOW JAVASCRIPT
&lt;/h3&gt;

&lt;p&gt;These 10 features can help you fast-track your React learning curve.&lt;/p&gt;

&lt;p&gt;However, if you want to do more complex tasks, eliminate errors, and gain a better understanding of how the code works, there are no shortcuts. You’re going to have to put in the work and learn how JavaScript works, especially those tricky illogical parts.&lt;/p&gt;

&lt;p&gt;Overall, React is a friendly UI library that can help you create extensive, complex and demanding graphical interfaces. It’s backed by Facebook, has a strong developer community gathered around it and there’s no shortage of learning materials. In fact, there’s a ton of reasons for you to learn React.&lt;/p&gt;

&lt;p&gt;It’s up to you to start.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally posted on &lt;a href="https://www.bitsbyamel.com"&gt;https://www.bitsbyamel.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>How to make dynamic pages for your website firebase tutorial.</title>
      <author>Techy Programmers</author>
      <pubDate>Wed, 23 Jun 2021 12:22:28 +0000</pubDate>
      <link>https://dev.to/kunaal438/how-to-make-dynamic-pages-for-your-website-firebase-tutorial-4i20</link>
      <guid>https://dev.to/kunaal438/how-to-make-dynamic-pages-for-your-website-firebase-tutorial-4i20</guid>
      <description>&lt;p&gt;Hello, glad you are here. I am kunaal and today we will see how to make dynamic pages for your website.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iP9F7usZF3M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope you understood everything. If you have any doubt or you find any mistake that I made or you have any suggestion feel free to ask me in comment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are interested in programming and want to know how I a 15yr old teen do coding make these design. You can follow me on my Instagram. I am also planning to post my game development stuff on Instagram.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/c/TechyProgrammers/"&gt;My youtube Channel&lt;/a&gt;, &lt;a href="https://www.instagram.com/techy_programmers/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>A quick and simple color palette generator for your next project.</title>
      <author>Jash Gopani</author>
      <pubDate>Wed, 23 Jun 2021 11:38:56 +0000</pubDate>
      <link>https://dev.to/jashgopani/a-quick-and-simple-color-palette-generator-for-your-next-project-40ap</link>
      <guid>https://dev.to/jashgopani/a-quick-and-simple-color-palette-generator-for-your-next-project-40ap</guid>
      <description>&lt;p&gt;Hello guys,🙋‍♂️&lt;br&gt;
this short article is about my recent side project called&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#colorinator"&gt;
  &lt;/a&gt;
  COLORINATOR
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wm3W2wgE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za0kxc5pbe4gtnqe1v75.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wm3W2wgE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za0kxc5pbe4gtnqe1v75.png" alt="doofenshmirtz"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a quick color palette generator based on the &lt;strong&gt;60-30-10&lt;/strong&gt; rule of UI design. You can use the color palettes generated by &lt;a href="http://jashgopani.me/colorinator"&gt;this website&lt;/a&gt; for any kind of project; apps, website, ppts and almost everywhere.&lt;/p&gt;

&lt;p&gt;One of the main highlight is that you can see the real time preview of the theme colors! This will help you to get an idea of which color combination works best for your project.&lt;/p&gt;

&lt;p&gt;Because this website is responsive, you will have no trouble using it from any device.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5II9lia9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nny9whbx7jjert45w19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5II9lia9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nny9whbx7jjert45w19.png" alt="Responsive"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;I used to get confused about what color scheme should I use for my projects. There are numerous colour palette generators available, but the problem is that most of those provide too many possibilities, and many of them just produce random colours that may or may not work well together.&lt;/p&gt;

&lt;p&gt;To minimize this ambiguity, I developed this simple solution, which selects a primary color based on user input or at random, and then derives secondary and accent colors depending on the contrast ratio.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#603010-rule"&gt;
  &lt;/a&gt;
  60-30-10 rule
&lt;/h2&gt;

&lt;p&gt;To explain you in short, use a main/primary color on 60% of your elements as a theme color. Out of remaining 40%, you can use a secondary color on 30% elements which need user attention or provide valuable information to user. The rest 10% will be action elements which can be colored with Accent color to give them a distinct look from the rest of the elements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-where-do-you-colors-from-"&gt;
  &lt;/a&gt;
  So where do you colors from ?
&lt;/h2&gt;

&lt;p&gt;The user can provide a main color which is intended to be used as a primary color for the project or the user can go for a random color as primary color using the random button. &lt;br&gt;
On getting the primary color, the app calculates the font color for the website and the secondary and accent colors that go with the primary color.&lt;br&gt;
How does it calculate secondary and accent colors ? The answer lies in &lt;a href="https://digitalsynopsis.com/design/how-to-apply-color-to-user-interface/"&gt;this article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apart from this, the accent color is either calculated based on the logic mentioned in the article or the color opposite to the primary color is picked from the color wheel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-this-"&gt;
  &lt;/a&gt;
  How to use this ?
&lt;/h2&gt;

&lt;p&gt;I have very well documented everything on in my &lt;a href="https://github.com/jashgopani/colorinator"&gt;github readme&lt;/a&gt;. If still you have any doubts/ suggestions you can comment them below and I'll get back to you😉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-to-be-added"&gt;
  &lt;/a&gt;
  Features to be added
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Copy button on saved theme palettes, to individually copy the hex code to clipboard&lt;/li&gt;
&lt;li&gt;Import and export themes&lt;/li&gt;
&lt;li&gt;You suggest&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do use this app for your upcoming projects and let me know what better can be done. Thank you!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>7 Awesome  Portfolio websites</title>
      <author>gourav majee</author>
      <pubDate>Wed, 23 Jun 2021 11:34:50 +0000</pubDate>
      <link>https://dev.to/varuogm/7-awesome-portfolio-websites-4pf7</link>
      <guid>https://dev.to/varuogm/7-awesome-portfolio-websites-4pf7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-im-gourav"&gt;
  &lt;/a&gt;
  Hello, 👋I'm Gourav,
&lt;/h2&gt;



&lt;p&gt;&lt;em&gt;Building a developer portfolio can be a cumbersome task, we have to think of a good design, best projects, blogs, and other details.&lt;/em&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#so-here-are-7-web-developer-portfolios-that-i-found-while-making-my-portfolio-website-and-also-they-will-give-you-all-the-inspiration-you-need-to-create-your-own-first-portfolio"&gt;
  &lt;/a&gt;
  &lt;em&gt;So, here are 7 web developer portfolios 🤩 that I found while making my portfolio website, and also they will give you all the inspiration you need to create your own first portfolio👌.&lt;/em&gt;
&lt;/h3&gt;



&lt;h2&gt;
  &lt;a href="#1-josh-w-comeau"&gt;
  &lt;/a&gt;
  1. Josh W Comeau
&lt;/h2&gt;

&lt;p&gt;A cool and awesome portfolio from josh . Also, Don't forget to hover around for cool effects. &lt;code&gt;must visit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Link 👉 - &lt;a href="https://www.joshwcomeau.com/"&gt;here    &lt;/a&gt;   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ChEZZw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624444116236/6Vq79DqCn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ChEZZw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624444116236/6Vq79DqCn.png" alt="josh.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-art"&gt;
  &lt;/a&gt;
  2. ART
&lt;/h2&gt;

&lt;p&gt;A cool and awesome portfolio from Patricia Aas .this type of PF can be usful for artists for showcasing their art.&lt;/p&gt;

&lt;p&gt;Link 👉 - &lt;a href="https://patricia.no/"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hW4KY2tm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624301988107/_GTnwItff.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hW4KY2tm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624301988107/_GTnwItff.png" alt="art.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-cow"&gt;
  &lt;/a&gt;
  3. COW
&lt;/h2&gt;

&lt;p&gt;Every small minimalistic detail in it has its own uniqueness.Go check it out on your own. &lt;/p&gt;

&lt;p&gt;Link 👉- &lt;a href="https://seeyouspacecow.com/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4lNHd_xA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302097601/RAe5ULSUt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4lNHd_xA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302097601/RAe5ULSUt.png" alt="cow.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-hack"&gt;
  &lt;/a&gt;
  4. HACK
&lt;/h2&gt;

&lt;p&gt;This is by far the most hacker-style website I've seen. you can change channels and every effect has its own unique effects. A  &lt;code&gt;must visit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Link 👉- &lt;a href="https://kaisermann.me/websites/"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6nNXfelJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307041182/pSYllnFaE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6nNXfelJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307041182/pSYllnFaE.png" alt="distirt.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-flower"&gt;
  &lt;/a&gt;
  5. FLOWER
&lt;/h2&gt;

&lt;p&gt;Again a very awesome website. minimalistic and cool hover flower effects steal everyone's Hearts. &lt;code&gt;must visit&lt;/code&gt;&lt;br&gt;
Link - &lt;a href="https://jolienhoop.com/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WtyKzjA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302271695/c81nAwSgH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WtyKzjA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302271695/c81nAwSgH.png" alt="flower.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-pixel"&gt;
  &lt;/a&gt;
  6. PIXEL
&lt;/h2&gt;

&lt;p&gt;A cool indie pixelated sword game portfolio. Every game details are present.  &lt;code&gt;must visit&lt;/code&gt;&lt;br&gt;
Link 👉 - &lt;a href="https://nachocaiafa.com.ar/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B2LOi5sv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307101807/wc_mb4MXO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B2LOi5sv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307101807/wc_mb4MXO.png" alt="picel.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-pop-shake"&gt;
  &lt;/a&gt;
  7. POP SHAKE
&lt;/h2&gt;

&lt;p&gt;As a beginner, this website could be useful as it contains many small hover things which I thought could be useful for beginners.&lt;br&gt;
Link 👉- &lt;a href="https://villivald.com/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sYSlkoAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302436328/hQGI1Tp4X.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sYSlkoAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302436328/hQGI1Tp4X.png" alt="pop shake.png"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#everyone-like-a-little-extra"&gt;
  &lt;/a&gt;
  💯&lt;em&gt;(everyone like a little extra)💯😄&lt;/em&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;7+2 websites&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#8-swag"&gt;
  &lt;/a&gt;
  8. SWAG
&lt;/h2&gt;

&lt;p&gt;Another cool single-page portfolio. Also, Don't forget to hover on the Get Started and Social icons for cool effects.&lt;/p&gt;

&lt;p&gt;Link 👉- &lt;a href="https://nicovanzyl.com/"&gt;here&lt;/a&gt; &lt;code&gt;must visit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bnpvj06W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302380590/NXBLOEkFH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bnpvj06W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302380590/NXBLOEkFH.png" alt="swag.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-my-first-portfolio-"&gt;
  &lt;/a&gt;
  9. My first portfolio :
&lt;/h2&gt;

&lt;p&gt;Also, I made my simple portfolio from all the learnings I got from different creators.&lt;/p&gt;

&lt;p&gt;Link 👉- &lt;a href="//http:gouravmajee.me"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E9SJBuot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307201451/7Sf3aUrMV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E9SJBuot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307201451/7Sf3aUrMV.png" alt="gourav.png"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion 🎀
&lt;/h1&gt;

&lt;p&gt;If you found this article useful or gave you the inspiration you need to build your portfolio. Do like and share with your network.&lt;/p&gt;

&lt;p&gt;If you've enjoyed this article  &lt;code&gt;≧◠‿◠≦✌&lt;/code&gt; or You have any questions then contact me  &lt;a href="https://twitter.com/Varougm"&gt;@Varougm&lt;/a&gt;  where I'd be more than happy to answer you  💖  . I'm new to this. if you find any mistake please let me know ✌.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MDdHoi2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624447964425/MBXCmRLEa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MDdHoi2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624447964425/MBXCmRLEa.png" alt="Thank you so much for reading.png"&gt;&lt;/a&gt;&lt;br&gt;
Buy me my first coffee  &lt;a href="https://www.buymeacoffee.com/Gouravmajee"&gt;🥤here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PART 2  coming soon.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#portfolio-inspiration-mustread-website"&gt;
  &lt;/a&gt;
  portfolio #inspiration #mustread #website
&lt;/h1&gt;

</description>
      <category>portfolio</category>
      <category>development</category>
      <category>developer</category>
      <category>website</category>
    </item>
    <item>
      <title>Lets make an quote-of-the-day instagram bot!</title>
      <author>Ryan The Ghost</author>
      <pubDate>Wed, 23 Jun 2021 11:34:35 +0000</pubDate>
      <link>https://dev.to/ryandaghost/lets-make-an-quote-of-the-day-instagram-bot-3lbk</link>
      <guid>https://dev.to/ryandaghost/lets-make-an-quote-of-the-day-instagram-bot-3lbk</guid>
      <description>&lt;h1&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Lets get started
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  🎉 Demo
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/dailydouseofquotes/"&gt;https://www.instagram.com/dailydouseofquotes/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EU3sDxTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psuqu81mepelkebjpylr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EU3sDxTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psuqu81mepelkebjpylr.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make a files: &lt;br&gt;
&lt;code&gt;main.py&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#starting-the-code"&gt;
  &lt;/a&gt;
  Starting the code
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#importing-the-libaries"&gt;
  &lt;/a&gt;
  🧪 Importing the libaries
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
import urllib.request
import os
from PIL import Image, ImageDraw, ImageFont, ImageOps
import requests
from instabot import Bot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#getting-an-image-and-saving-it"&gt;
  &lt;/a&gt;
  📷 Getting an image and saving it
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dl_image&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;image_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://source.unsplash.com/user/eberhardgross/1080x1080/"&lt;/span&gt;
    &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlretrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"image.jpg"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Installing image"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;The following code will get an 1080x1080 image by the author eberhardgross from unsplash, &lt;strong&gt;Why him ?&lt;/strong&gt; I haven't seen anything 18+ from this user and have seen amazing images only!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#getting-the-daily-quote"&gt;
  &lt;/a&gt;
  🙌 Getting the daily quote
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dailyquote&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'https://quotes.rest/qod.json?language=en'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response_output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response_output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;This code will get a &lt;strong&gt;json daily quote of the day&lt;/strong&gt; response from quotes.rest, as you can see we will output certain results that we from FROM the dailyquote function &lt;strong&gt;later&lt;/strong&gt;!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#putting-the-quote-and-image-in-one"&gt;
  &lt;/a&gt;
  😎 Putting the quote and image in one!!
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#%E2%80%8D-fixing-the-line-order"&gt;
  &lt;/a&gt;
  🐱‍🚀 Fixing the line order
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;We will be doing this so we can get a good word-per-line system, so we see the whole text!&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrap_by_word&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#lets-do-it-all"&gt;
  &lt;/a&gt;
  🎨 Lets do it all!
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;text_overlay_ig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wrap_by_word&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;image_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="s"&gt;'image.jpg'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;im&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Fixing the quote line order and then opening our image file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Time to put on everything!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;draw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDraw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;im&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageFont&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;truetype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'font.ttf'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;shadowColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;thickness&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;700&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"— "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;im&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"image.jpg"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#adding-a-fonttff-file"&gt;
  &lt;/a&gt;
  🌁 Adding a font.tff file!
&lt;/h5&gt;

&lt;p&gt;i'd recommend using &lt;a href="https://github.com/9ebd7134/Python-quote-of-the-day-instagram-bot/blob/master/font.ttf"&gt;https://github.com/9ebd7134/Python-quote-of-the-day-instagram-bot/blob/master/font.ttf&lt;/a&gt; just click on download and put it in your folder ! The font is easy to read so its perfect&lt;/p&gt;

&lt;p&gt;And now lets put on the quote on the image&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;shadowColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;thickness&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The x, y are the position of the text we want to put, change this but be careful this &lt;strong&gt;won't change based on the text length&lt;/strong&gt;! We could do that but lets stick with this for now&lt;/p&gt;

&lt;p&gt;Everything else is us just putting the text alongside the text shadow on the image.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Time to put the author&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;700&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"— "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
 Same thing but we are changing the x, y positions &lt;strong&gt;AND&lt;/strong&gt; also adding — to the author username&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-steps"&gt;
  &lt;/a&gt;
  😎🙌 Final steps
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dailyquote&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'contents'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'quotes'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'quote'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dailyquote&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'contents'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'quotes'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dailyquote&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'contents'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'quotes'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;dl_image&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;text_overlay_ig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;ptag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;ptag&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;' '&lt;/span&gt;


&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"This bot was made by ryan s.(@9ebd7134 on github), Hope you enjoyed this quote, This quote was by"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Links:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;📷Image by: https://unsplash.com/user/eberhardgross&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Tags:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;#️⃣ "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ptag&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"****"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"password1234"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upload_photo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"image.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;caption&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
 Simply change the caption/content and then bot.login username/password details for this to fully work!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#fixing-up-some-issues"&gt;
  &lt;/a&gt;
  🆘 Fixing up some issues
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;I'll be updating this and updating the github page for it, i will make an issue and a pull request talking all about the changes! If you want to fix my code i'd love to see it!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#link-for-the-github"&gt;
  &lt;/a&gt;
  Link for the github:
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/9ebd7134/Python-quote-of-the-day-instagram-bot"&gt;https://github.com/9ebd7134/Python-quote-of-the-day-instagram-bot&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>pythonbot</category>
      <category>automation</category>
      <category>bot</category>
    </item>
    <item>
      <title>Pourquoi les développeurs Web utilisent encore Ruby on Rails ?</title>
      <author> Eric Le Codeur</author>
      <pubDate>Wed, 23 Jun 2021 11:18:06 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/pourquoi-les-developpeurs-web-utilisent-encore-ruby-on-rails-2g4b</link>
      <guid>https://dev.to/ericlecodeur/pourquoi-les-developpeurs-web-utilisent-encore-ruby-on-rails-2g4b</guid>
      <description>&lt;p&gt;Si vous désirez plus de contenu francophone comme celui-ci, cliquer &lt;strong&gt;Follow ou &lt;a href="https://twitter.com/EricLeCodeur"&gt;suivez-moi sur Twitter&lt;/a&gt;&lt;br&gt;

&lt;br&gt;
De nombreux nouveaux développeurs Web n'ont absolument aucune idée de ce qu'est Ruby on Rails.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;J'encourage ces personnes à faire leurs recherches et à en apprendre davantage sur ce magnifique framework.&lt;/p&gt;

&lt;p&gt;Ruby est un langage de programmation et Rails est un framework pour créer des applications Web.&lt;/p&gt;

&lt;p&gt;D'autres frameworks web comme Laravel, Django, Adonis utilisent de nombreux concepts utilisés par Rails.&lt;/p&gt;

&lt;p&gt;Rails est en quelque sorte le père de ces frameworks modernes. Rails a inspiré et continu de d'inspirer de nombreux concepts de développement Web modernes.&lt;/p&gt;

&lt;p&gt;Avec Rails, vous pouvez créer une application Web fullstack. Vous pouvez aussi créer une application Web frontend (style SPA comme React et Vue) en utilisant uniquement du code html/css et ruby.&lt;/p&gt;

&lt;p&gt;Oui rails est vieux mais Rails n'est pas resté ce qu'il était lors de son introduction. Rails a évolué au cours des années pour ajouter tous les goodies modernes. Rails est présentement à la version 6 et la version 7 approche à grands pas.&lt;/p&gt;

&lt;p&gt;Alors pourquoi l'utiliser ? Pourquoi ne pas utiliser une application Node.js/Express ou tout autre framework backend plus populaire ?&lt;/p&gt;

&lt;p&gt;Je suppose que les raisons peuvent être différentes pour chaque développeurs Rails, mais pour ma part je choisis Rails lorsque j'ai besoin de vitesse et d'efficacité de développement ! Aucun autre framework ne peut créer une application Web plus rapidement que Rails.&lt;/p&gt;

&lt;p&gt;Pour cette raison spécifique, Rails est utilisé par de nombreuses startups.&lt;/p&gt;

&lt;p&gt;Ruby on Rails est également utilisé par des sociétés géantes comme Shopify, GitHub, Air B&amp;amp;B et bien d'autres.&lt;/p&gt;

&lt;p&gt;J'aime aussi beaucoup le langage Ruby. Faites-vous plaisir et découvrez vous aussi ce langage merveilleux. &lt;/p&gt;

&lt;p&gt;Rails est il les meilleurs pour tous les projets ? Bien sûr que non, mais avec le bon type de projet, c'est toujours le numéro 1 même après toutes ces années.&lt;/p&gt;

&lt;p&gt;Enfin, si vous êtes un développeur Ruby on Rails, veuillez laisser dans la section des commentaires pourquoi pour vous Rails est toujours l'un de vos frameworks préférés ?&lt;/p&gt;

</description>
      <category>french</category>
      <category>rails</category>
      <category>ruby</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to Master Python Fast and Easy: A Complete Simple tutorial Based on the Official Documentation of Python</title>
      <author>Amin M. Boulouma</author>
      <pubDate>Wed, 23 Jun 2021 11:06:47 +0000</pubDate>
      <link>https://dev.to/amboulouma/how-to-master-python-fast-and-easy-a-complete-simple-tutorial-based-on-the-official-documentation-of-python-1dej</link>
      <guid>https://dev.to/amboulouma/how-to-master-python-fast-and-easy-a-complete-simple-tutorial-based-on-the-official-documentation-of-python-1dej</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t3wcmbHL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/allhtaccess.info/wp-content/uploads/2018/03/programming.gif%3Ffit%3D1281%252C716%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t3wcmbHL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/allhtaccess.info/wp-content/uploads/2018/03/programming.gif%3Ffit%3D1281%252C716%26ssl%3D1" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Hey, guys! Here is the &lt;a href="https://youtu.be/ne4Xsoe5Br8"&gt;Complete Simple tutorial Based on the Official Documentation of Python&lt;/a&gt; that already helped a lot of people! These 15 episodes are very helpful if you just start coding or want to improve your skills. The information is well combined, the source code is provided for each video, a lot of practical tips and btw, the whole course takes just 5 hours to complete!&lt;br&gt;
I hope this course will be very useful for you and you will learn a lot!&lt;/p&gt;

&lt;p&gt;To give you an overview, here is the table of content of the crash course:&lt;/p&gt;

&lt;p&gt;🖥️  &lt;a href="https://www.youtube.com/watch?v=vQqisFjAnsE"&gt;Introduce you the Python Official Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️  Get started with &lt;a href="https://www.youtube.com/watch?v=NmzIyE4wBGs&amp;amp;t=4s"&gt;Numbers, Strings and Lists in Python&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;🖥️  What are &lt;a href="https://www.youtube.com/watch?v=4-2x_zhwvSM&amp;amp;t=3s"&gt;if, for and loop statements&lt;/a&gt; and everything about &lt;a href="https://www.youtube.com/watch?v=A-JLsh38ODs&amp;amp;t=35s"&gt;Functions in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️  Very simple about &lt;a href="https://www.youtube.com/watch?v=6TJERSlqQIk&amp;amp;t=8s"&gt;Data Structures in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️  Easy explanation of &lt;a href="https://www.youtube.com/watch?v=9dukuNA2wAk&amp;amp;t=19s"&gt;Python Modules and their usages&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;🖥️  Only good stuff about &lt;a href="https://www.youtube.com/watch?v=UpIYUJgcZMU&amp;amp;t=39s"&gt;Input, Output, Files and JSON in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️  Very helpful information about &lt;a href="https://www.youtube.com/watch?v=_zJzpZepIUE"&gt;Errors and Exceptions in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️  What’s the point of &lt;a href="https://www.youtube.com/watch?v=tlKBlwj375c&amp;amp;t=2s"&gt;OOP, Classes, Scopes, Iterators and Generators in Python&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;🖥️  You have just 13 minutes about &lt;a href="https://www.youtube.com/watch?v=E-jVDSRkuws&amp;amp;t=5s"&gt;Internet, Math, OS and Regex Modules in Python&lt;/a&gt; and only 6 to find out what are the &lt;a href="https://www.youtube.com/watch?v=MYGY0Siw_Zo&amp;amp;t=11s"&gt;Performance, Dates and Compression Modules in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️ How to make &lt;a href="https://www.youtube.com/watch?v=R0LqfY1m1NU&amp;amp;t=6s"&gt;Tests, Templating, Multi-threading and Logging Modules in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️ You will learn More on &lt;a href="https://www.youtube.com/watch?v=BUUvaOUaK2o&amp;amp;t=3s"&gt;Lists, Heaps and Decimal Precision in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️ It’s time for you to know about &lt;a href="https://www.youtube.com/watch?v=yQ0A-v8ysJE&amp;amp;t=8s"&gt;Virtual Environments and Packages in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️ Finally, let’s summarize what we have learned in a &lt;a href="https://www.youtube.com/watch?v=xJSWOKGfsqk&amp;amp;t=11s"&gt;Python Official Documentation Overview&lt;/a&gt;  and get the easy access to the main recourses, codes and information&lt;/p&gt;

&lt;p&gt;Handy links: &lt;br&gt;
⇨ ⇨ ⇨ Here is the link on &lt;a href="https://www.youtube.com/watch?v=ne4Xsoe5Br8&amp;amp;t=1s"&gt;Python Full Course - Complete Tutorial based on the Python Official Documentation&lt;/a&gt;  (5 hours long video)&lt;/p&gt;

&lt;p&gt;✅ And not to mix up the information and study the episodes in its order, here is the link on the playlist for you: &lt;a href="https://www.youtube.com/watch?v=vQqisFjAnsE&amp;amp;list=PLpMTHmi814W0nSToTOC0Q18kREOjcJspW"&gt;Python Ultimate Tutorial [Official Documentation]&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Top 5 Git Tips &amp; Tricks</title>
      <author>Agnieszka Stec</author>
      <pubDate>Wed, 23 Jun 2021 10:19:41 +0000</pubDate>
      <link>https://dev.to/gitlive/top-5-git-tips-tricks-8na</link>
      <guid>https://dev.to/gitlive/top-5-git-tips-tricks-8na</guid>
      <description>&lt;p&gt;Becoming a Git power-user is on the bucket list of every developer. Today we prepared 5 Git tips that will help you level up your workflow and bring you one step closer to Git mastery.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip1"&gt; Tip #1 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Modify previous commit without changing the commit message &lt;/h2&gt;
 

&lt;p&gt;You’ve just committed your changes on your local copy with a detailed and thought-through message, but the moment you hit RETURN you realised you forgot to add that one change that really belongs there. If only there was a way to update the previous commit instead of creating a new one...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git commit &lt;span class="nt"&gt;--amend&lt;/span&gt; &lt;span class="nt"&gt;--no-edit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command lets you modify the last commit without changing the commit message. The hash value will be updated, but there will be only one commit record leaving your local Git history nice and clean.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip2"&gt; Tip #2 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Keep your commits organised &lt;/h2&gt;
 

&lt;p&gt;You just wanted to fix that one feature, but in the meantime got into the flow, took care of a tricky bug and spotted a very annoying typo. One thing led to another, and suddenly you realised that you’ve been coding for hours without actually committing anything. Now your changes are too vast to squeeze in one commit...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git add &lt;span class="nt"&gt;-p&lt;/span&gt; &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With git &lt;code&gt;add -p&lt;/code&gt; (or &lt;code&gt;git add --patch&lt;/code&gt;) you can choose which parts of code from a file you want to include in your commit. After running the command you will get the list of the options you can add to git &lt;code&gt;add -p&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;By choosing &lt;code&gt;s&lt;/code&gt; you can split the hunk into smaller pieces. From there you can simply choose the chunks you want to stage for commit (and omit those you don’t) by navigating with &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; (or go for any other option from the list).&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip3"&gt; Tip #3 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Take me back to better times (when everything worked!)  &lt;/h2&gt;
 

&lt;p&gt;Not your best day. You made changes you shouldn’t have and now everything is broken… Is there a way to undo those commits?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reflog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this handy command, you can get the record of all the commits done in Git. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---08fBqr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/6033cf9dce54c65d97d57571/60d2f2e0aefc62540cefc79c_gitreflog.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---08fBqr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/6033cf9dce54c65d97d57571/60d2f2e0aefc62540cefc79c_gitreflog.png" alt="termianl view"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you just need to find the commit prior to the one that caused all the hassle. &lt;code&gt;HEAD@{index}&lt;/code&gt; represents the specified commit, so just replace index with the correct number and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset HEAD@&lt;span class="o"&gt;{&lt;/span&gt;index&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The default action for &lt;code&gt;git reset&lt;/code&gt; is &lt;code&gt;git reset --mixed&lt;/code&gt;. It means that the changes in your working directory will be preserved but not staged (since the index was modified to match the chosen commit, the changes are not in the index anymore).&lt;/p&gt;

&lt;p&gt;Other options are:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt;
&lt;span class="c"&gt;# Doesn’t modify the index or the working tree, leaving your changes staged for commit.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt;
&lt;span class="c"&gt;# Use with caution, as it resets both the index and working tree. Uncommitted changes and all commits after will be removed.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And voilà, you can start over from the point when everything in your repository worked like a charm. Remember to use it only locally, as modifying a shared repository is considered a serious crime.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip4"&gt; Tip #4 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Let’s face those merge conflicts  &lt;/h2&gt;
 

&lt;p&gt;You're on to a hairy merge conflict, but after comparing two conflicting versions you still have no idea which one is correct.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout &lt;span class="nt"&gt;--conflict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;diff3 &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Resolving merge conflicts is not all fun and games, but this command can make your life a little bit easier. Often you need more context to decide which branch is correct. By default, Git shows you a version of the markers that contains versions of the two files that have a conflict. By choosing the option above you will be able to see the base version as well, which can hopefully save you some trouble. You can also set it as default with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; merge.conflictstyle diff3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;sup&gt;💡 "Resolving merge conflicts is fun!" - said no one ever. The good news is that with GitLive you can get notified of conflicts before they occur. Gutter indicators show your teammates changes in your editor in real-time. Check out &lt;a href="https://blog.git.live/gitlive-11.0-Real-time-merge-conflict-detection"&gt;this blog post &lt;/a&gt; to find out more.&lt;br&gt;
&lt;/sup&gt;&lt;/p&gt;



&lt;p&gt;
&lt;a href="#tip5"&gt; Tip #5 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Let autocorrect take care of it   &lt;/h2&gt;
 

&lt;p&gt;You’re pretty proud of your breakneck typing speed, but at the same time you can’t even remember how many times you typed “git stauts” instead of “git status” and it leaves you mildly annoyed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; help.autocorrect &amp;lt;integer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Git Autocorrect is a convenient option for all the impatient devs out there. The integer value represents a tenth of a second. Choosing 30 will give you 3 seconds to change your mind and stop the operation - otherwise Git will assume you meant the instruction most similar to the one you wrote. Don’t worry though, if you type something that is not even close to a Git command, Git will give up on guessing and print an error message instead.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading! Hope you found our Git-pick useful. Feel free to share your favorite hacks in the comments! Happy Git-ing! &lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>git</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Vim : Keymapping Guide</title>
      <author>Meet Gor</author>
      <pubDate>Wed, 23 Jun 2021 10:06:05 +0000</pubDate>
      <link>https://dev.to/mrdestructive/vim-keymapping-guide-3olb</link>
      <guid>https://dev.to/mrdestructive/vim-keymapping-guide-3olb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Keymapping or Key binding is a process in which a user or a system can assign certain keys or commands to perform a particular task or commands. This can be quite useful in Vim as well as in other text editors to avoid some repetitive tasks and save time. In Vim this can be a great power to have for programmers as it can be really very flexible to set up for any programming language and it's environment.&lt;/p&gt;

&lt;p&gt;This is not a in-depth guide of Vim-keymappings, it is just a overview of how to make keymappings and make the workflow a bit easier, probably give some insights on the strength of Vim to easily integrate with terminal and perform tasks with shortcuts. &lt;/p&gt;

&lt;p&gt;In Vim, you can map a particular keystroke combination to trigger a command or any operation. You can also map a key in place of a weird key combination as well. You can map a key to integrate several commands and make it run at a single key or without much of a hassle. Key Mapping is quite powerful in Vim, only your creativity and imagination are the limits here. Vim can really shine in such aspects where the user has the freedom to tailor the editor and his development environment as per his/her needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-the-structure-of-key-binding"&gt;
  &lt;/a&gt;
  Understanding the structure of Key binding
&lt;/h2&gt;

&lt;p&gt;You can basically map a key depending on the current mode you are in. So that means you can have the same key mapped to different commands depending on the mode. That is really flexible and powerful. Vim allows you to basically map in almost every mode such as normal, insert, visual, command, and any other existing modes. Let us see what a basic key mapping looks like.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{mode}{attribute}map {key} {command}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The key mapping is broken down by adding the mode to map the key, an optional attribute to change/modify the way the mapping behaves and we finally have the key and the command pair. If you want to test a map you can temporarily map in the command mode using the syntax for the map command or if you want a permanent mapping, you can add the mappings in your vimrc file.&lt;/p&gt;

&lt;p&gt;For a basic example let us map c to paste from the clipboard.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:map c "+p&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command maps the "c" key in the &lt;strong&gt;normal/visual mode&lt;/strong&gt; by default to paste the contents from the clipboard. It is just an example of how a basic key mapping or binding can be used to save your time and efforts. This is a very small example to demonstrate the concept of mapping in Vim but it scales quite fantastically and smoothly.&lt;/p&gt;

&lt;p&gt;Now let's see how to view the mapping inside of the current vim buffer. We can simply type map, imap, or nmap in the command mode to view the mappings in the respective modes. This will display the maps which are currently present inside of the vim buffer, some might be temporary and most of them will be permanent.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:map 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you type in map being in the command mode, it will list out the maps. If you want to stop seeing the list just press q, and you will be back in the editor. You can also view the maps in the normal, visual, insert, or any other modes by prefixing n, v, i, or other modes with map. For any further detailed explanation and specifications on any concepts related to mapping in Vim, you can type in :h map.txt in Vim, to get the neat tiny details. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-mapping-in-modes"&gt;
  &lt;/a&gt;
  Key Mapping in Modes
&lt;/h2&gt;

&lt;p&gt;To map a key binding explicitly in the normal mode or any other modes, we have to prefix the word such as n for normal, v for visual or i for insert, and so on. The map will only work in the provided mode so the same keys may have several different maps depending on the current mode, but that can create a bit of confusion so avoid doing that. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But before mapping keys with commands, Here's a side note: Do not use simply map, make a habit of using noremap because if your map contains already mapped keys, it can freeze out Vim, cause bugs, cause unintentional response and behaviour from the keymap. So after selecting the mode of map, use "noremap" instead of just map, it'll be good to be on a safer side. Still you can use map if you are sure with the behaviour.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#normal-mode"&gt;
  &lt;/a&gt;
  Normal mode
&lt;/h3&gt;

&lt;p&gt;Let's map a key in the normal mode for example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nnoremap &amp;lt;C-s&amp;gt; :w&amp;lt;CR&amp;gt;    
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In normal mode non-recursively map CTRL + S to enter in command mode and type :w and hit enter( carriage return, same as  or )&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#insert-mode"&gt;
  &lt;/a&gt;
  Insert Mode
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;inoremap &amp;lt;C-u&amp;gt; &amp;lt;ESC&amp;gt;ui
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In Insert mode, non-recursively map CTRL + U, to escape out of insert mode and type u (to undo ) and then again back to insert mode i. Just lazy stuff to avoid going to the normal mode and undoing things and back again in insert mode. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#visual-mode"&gt;
  &lt;/a&gt;
  Visual Mode
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vnoremap &amp;lt;C-p&amp;gt; "+p
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In visual mode, non-recursively map CTRL + p, to paste the text from the clipboard(vim register +).&lt;/p&gt;

&lt;p&gt;Mapping in insert mode but executing commands from the normal that is what is the flexibilty of Vim, you can surely make insert mode maps for insert mode, that is to avoiding repetition in typing, surely that is cool.&lt;/p&gt;

&lt;p&gt;This is pretty bad for Vim beginners as it will spoil the real Vim experience of saving with :w, If you feel comfortable using Ctrl + s to save a file, the above map will be perfect. It will map the key Ctrl + s by pressing :w and then pressing enter to save changes to the file. &lt;/p&gt;

&lt;p&gt;We can also map certain non-alphabetical keys such as CTRL, ALT, and others, it will help you in saving time to leave a mode and enter the mode again to edit the text. The following is a perfect example of such.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;inoremap &amp;lt;C-c&amp;gt; &amp;lt;ESC&amp;gt;"+pa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command is &lt;strong&gt;mapped in insert mode&lt;/strong&gt; as the mode is set to insert at the command's beginning. The CTRL+c keys are mapped to first Escaping out of insert mode and then pasting from the "+ register which is the device clipboard here. In the end, we again get back to insert mode just to the right of the current cursor position. So, that is how we can map the keys to do the task and save a bit of time. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-keymaps-in-vimrc-file"&gt;
  &lt;/a&gt;
  Adding Keymaps in vimrc file
&lt;/h2&gt;

&lt;p&gt;So you can now map in any available modes in Vim and test it out in te=he current buffer, but if you notice when you close the buffer, your custom keymaps will not be functioning as they remain in the buffer until you close it. To make it permanent you need to type the exact map command to the vimrc file. Just don't add ":" as it is not a command mode, it should be only the pure command of the map.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nnoremap &amp;lt;C-s&amp;gt; :w&amp;lt;CR&amp;gt;
nnoremap &amp;lt;C-p&amp;gt; "+p
vnoremap &amp;lt;C-y&amp;gt; "+y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above commands are pasted in the vimrc file. These keymaps once sourced will stay in permanently unless you remove them from the file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keymap-modifications"&gt;
  &lt;/a&gt;
  Keymap Modifications
&lt;/h2&gt;

&lt;p&gt;We can also add extra arguments to the keymaps such as noremap and remap and others. In remap, the keymap is recursive which means the key pair will get mapped to the keys mapped already somewhere. The keymap will redefine its map depending on the already existing maps.  It is preferred to use noremap as it will not mix up the existing maps and have a fresh key binding. The mapping in Vim is quite versatile and there are quite a lot of modifications you could do to make your key binding feel and work according to you. So for further un depth understanding of modifications of keymap in Vim you can check out their documentation  &lt;a href="https://vim.fandom.com/wiki/Mapping_keys_in_Vim_-_Tutorial_(Part_1)"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keymapping-usecases"&gt;
  &lt;/a&gt;
  Keymapping Usecases
&lt;/h2&gt;

&lt;p&gt;Now, it's entirely up to you to make keymaps according to your preference and choice. You can use your creativity and knowledge to make powerful and efficient keymaps.&lt;/p&gt;

&lt;p&gt;For some insights, I'd like to give in some cool and productive keymaps which I personally use very frequently in coding a particular programming language.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nnoremap py :!python %&amp;lt;CR&amp;gt;                          " Python run keymap
nnoremap cpp :!c++ % -o %:r &amp;amp;&amp;amp; ./%:r &amp;lt;CR&amp;gt;           " C++ compile and run keymap
nnoremap sh :!chmod +x % &amp;amp;&amp;amp; source %&amp;lt;CR&amp;gt;            " Bash sourcing keymap 
nnoremap c :!clang % -o %:r &amp;amp;&amp;amp; ./%:r &amp;lt;CR&amp;gt;           " C compile and run keymap 
nnoremap jv :!javac % &amp;amp;&amp;amp; java %:r &amp;lt;CR&amp;gt;              " Java compile and run keymap
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above mapping will run the file or compile and run the file you are currently editing in Vim. That is just an overview of how you can use key mappings in Vim for any programming language or tool. Vim allows you to modify and make the keys do the heavy lifting very easily and save a lot of time and frustration. This is how you implement DRY(don't repeat yourself) perfectly. I personally think this is just perfect to do certain things which are quite common and sometimes daunts you to do this again. So just have a look and play around with Vim keymaps, it is the power with which one can excel in saving time and energy. This is just flawless. OK, That was too much from my side. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keymapping-and-macros"&gt;
  &lt;/a&gt;
  Keymapping and Macros
&lt;/h2&gt;

&lt;p&gt;Some Keymappings provided above are quite interesting for a person trying to understand macros and key binding. A macro is a bunch of commands packed in together to access it very efficiently, Not the exact definition, but still, it just means to simplify things and saves time. Keymapping is the same thing but to map with the keys. &lt;/p&gt;

&lt;p&gt;From some snippets and explanations of Vim keymaps, it must be easier now for a beginner to understand Keymappings in Vim and how to customize accordingly.&lt;/p&gt;

&lt;p&gt;I hope it helped, Thank you for listening to my understanding of Vim keymapping. So, Keymaps are quite powerful and can be a bit difficult to set up in a single try. Keep experimenting with keymaps and make Vim the powerhouse of productivity and customization. Happy Viming :)&lt;/p&gt;

</description>
      <category>vim</category>
      <category>linux</category>
      <category>programming</category>
      <category>keymap</category>
    </item>
    <item>
      <title>Accessibility in React</title>
      <author>Sreashi Saha</author>
      <pubDate>Wed, 23 Jun 2021 09:52:32 +0000</pubDate>
      <link>https://dev.to/sreashi/accessibility-in-react-2m2n</link>
      <guid>https://dev.to/sreashi/accessibility-in-react-2m2n</guid>
      <description>&lt;p&gt;Accessibility is the ability for applications to be used by everyone, including those with disabilities.As a devloprer its your responsibility to make sure that everyone get the right experience in your app. For making your react app Accessible you should know what is accessibility exactly is??  so let's get started&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Accessibility and Why it is needed?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Web accessibility is also referred to as a11y.A11y is a numero-nym that stands for accessibility as “a” followed by 11 more letters, followed by “y”.It is the design and creation of websites that can be used by everyone.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Accessibility support is necessary to allow assistive technology to interpret web pages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Accessibility is the necessary tool or ways in which a website can be made easy to access by the user with features like clickable buttons or dropdowns or spaces to write a comment and stuff.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Accessiblity also helps in power users may find it faster to interact with your application using a keyboard, rather than a mouse or touch screen. Especially for applications involving a large amount of data entry, good keyboard navigation support can dramatically increase user productivity.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Accessibility Standards and Guidelines&lt;/strong&gt;&lt;br&gt;
There are some standard guidelines available for achiving accessibility which helps us to achive accessibilty for buildinng websites.Some of them are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WCAG:&lt;/strong&gt; Web Content Accessibility Guidelines (WCAG) is developed through the W3C process in cooperation with individuals and organizations around the world, with a goal of providing a single shared standard for web content accessibility that meets the needs of individuals, organizations, and governments internationally.The WCAG documents explain how to make web content more accessible to people with disabilities. Web “content” generally refers to the information in a web page or web application, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;natural information such as text, images, and sounds&lt;/li&gt;
&lt;li&gt;code or markup that defines structure, presentation, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;WAI-ARIA:&lt;/strong&gt; Web Accessibility Initiative - Accessible Rich Internet Applications (WAI-ARIA) is the Accessible Rich Internet Applications Suite, defines a way to make Web content and Web applications more accessible to people with disabilities. It especially helps with dynamic content and advanced user interface controls developed with HTML, JavaScript, and related technologies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Accessibility Using React:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;React fully supports building accessible websites, often by using standard HTML techniques.Let's see how we can make your react applications more accessible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ARAI:&lt;/strong&gt;&lt;br&gt;
Accessible Rich Internet Applications (ARIA) is a set of attributes that define ways to make Web content and Web applications more accessible for users with disabilities.ARIA  HTML attributes are fully supported in JSX, and therefore can be used as attributes for elements and components in React. Whereas most DOM properties and attributes in React are camelCased, these attributes should be hyphen-cased.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input
  aria-label={labelText}
  aria-required="true"
  onChange={onchangeHandler}
  value={inputValue}
  name="name"
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Semantic HTML:&lt;/strong&gt;&lt;br&gt;
Semantic HTML is the foundation of accessibility in a web application.Sometimes we break HTML semantics when we add &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements to our JSX to make our React code work, especially when working with lists &lt;code&gt;(&amp;lt;ol&amp;gt;, &amp;lt;ul&amp;gt; and &amp;lt;dl&amp;gt;)&lt;/code&gt; and the HTML &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; this  makes a problem of understanding the code and thus debugging the code.&lt;/p&gt;

&lt;p&gt;So at times, we use pieces like &amp;lt;&amp;gt; or   allows you to group together a list of child elements without adding more nodes to the DOM.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { Fragment } from 'react';
function  employeeList() {
return (
    &amp;lt;Fragment&amp;gt;  
        &amp;lt;dt&amp;gt;EA824412&amp;lt;/dt&amp;gt;
        &amp;lt;dd&amp;gt; Sreashi Saha&amp;lt;/dd&amp;gt;
    &amp;lt;/Fragment&amp;gt; );
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Labeling:&lt;/strong&gt;&lt;br&gt;
Labeling is used to makes the forms accesible.Every HTML form control, such as &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;, needs to be labeled accessibly. There is one important thing you must provide in your application: a textual label for each control . This gives a screen reader user context about the control they are interacting with.Although these standard HTML practices can be directly used in React, note that the for attribute is written as htmlFor in JSX:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;label htmlFor="name"&amp;gt;Name:&amp;lt;/label&amp;gt;
&amp;lt;input id="name" type="text" name="name"/&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Keyboard Focus:&lt;/strong&gt;&lt;br&gt;
Keyboard Focus refers to the part of the web application that is accepting data or actions from the keyboard from the user often refers to the DOM input.We can use ref functions to handle where we want the user to focus on in our application.Using the React.createRef() we can control the focus.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use the &lt;code&gt;ref&lt;/code&gt; callback to store a reference to the text input DOM&lt;/li&gt;
&lt;li&gt;Create a ref to store the textInput DOM element&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's have a look how to create a ref to an element in the JSX of a component class..&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class CustomDiv extends React.Component {
  constructor(props) {
    super(props);

    this.div = React.createRef();
  }
  render() {

    return (
      &amp;lt;div
        tabIndex= "-1"

        ref={this.div}
      /&amp;gt;
    );
  }


}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can focus it elsewhere in our component when needed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Explicitly focus the div using raw DOM API&lt;/li&gt;
&lt;li&gt;We are accessing "current" to get the DOM node
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;focus() {

 this.textInput.current.focus();


}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When using a HOC to extend components, it is recommended to foward the ref to the wrapped component using the forwardRef function of React. If a third party HOC does not implement ref forwarding, the above pattern can still be used as a fallback.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting Document Title:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Setting document title  provides a declarative way to specify document.title in a single-page app.It is actually crucial for screen readers, the document title is the first thing screen readers announce. It updates the content currently showing in the browser tab helping to announce exactly where the users &lt;code&gt;(who might depend on screen readers)&lt;/code&gt; are in your application. It is also really great for search engine optimisation.Set the document &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; to correctly describe the current page content as this ensures that the user remains aware of the current page context.Let's see an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function App() {
  return (
    &amp;lt;DocumentTitle title='My Web App'&amp;gt;
      &amp;lt;SomeRouter /&amp;gt;
    &amp;lt;/DocumentTitle&amp;gt;
  );
}

class NewArticlePage extends React.Component {
  constructor(props) {
    super(props);
    this.state = { title: 'Untitled' };
  }

  render() {
    return (
      &amp;lt;DocumentTitle title={this.state.title}&amp;gt;
        &amp;lt;div&amp;gt;
          &amp;lt;h1&amp;gt;New Article&amp;lt;/h1&amp;gt;
          &amp;lt;input
            value={this.state.title}
            onChange={(e) =&amp;gt; this.setState({ title: e.target.value })}
          /&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/DocumentTitle&amp;gt;
    );
  }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Development Assistance:&lt;/strong&gt;&lt;br&gt;
Devlopment Assistance can helps to improve yours  website Accessibility.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install ESLint jsx-a11y plugin for your React projects to display accessibility rules you miss while building your application.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install eslint-plugin-jsx-a11y  -— save-dev

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Update your eslint.rc file’s plugin and extends sections in your code editor. For plugin section:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "extends": ["react-app", "plugin:jsx-a11y/recommended"],
  "plugins": ["jsx-a11y"]

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hopefully, It helps to improve your efficiency writing React and also helps to build your website more accesible. If any queries regarding this write them down in the comment below. Thank you for your time and I hoped my blog is helpful for you.&lt;/p&gt;

&lt;p&gt;Happy Learning!!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>a11y</category>
    </item>
    <item>
      <title>cute owl using css and html</title>
      <author>Saba Alikhani</author>
      <pubDate>Wed, 23 Jun 2021 09:45:25 +0000</pubDate>
      <link>https://dev.to/fydsa/cute-owl-using-css-and-html-1jge</link>
      <guid>https://dev.to/fydsa/cute-owl-using-css-and-html-1jge</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/fydsa/embed/qBrzqor?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>css</category>
      <category>html</category>
    </item>
  </channel>
</rss>
