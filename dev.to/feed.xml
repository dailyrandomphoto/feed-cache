<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Returning to CS after *mumble mumble* years</title>
      <author>Brent Michael Gannetta</author>
      <pubDate>Fri, 30 Jul 2021 21:30:34 +0000</pubDate>
      <link>https://dev.to/brentnotmichael/returning-to-cs-after-mumble-mumble-years-3mi7</link>
      <guid>https://dev.to/brentnotmichael/returning-to-cs-after-mumble-mumble-years-3mi7</guid>
      <description>&lt;h6&gt;
  &lt;a href="#or-how-i-finally-stopped-worrying-if-i-can-still-learn-cs-at-my-age-and-actually-started-thanks-to-certificates"&gt;
  &lt;/a&gt;
  Or, "how I finally stopped worrying &lt;em&gt;if&lt;/em&gt; I can still learn CS at my age and actually started thanks to certificates"
&lt;/h6&gt;

&lt;h3&gt;
  &lt;a href="#my-sob-story"&gt;
  &lt;/a&gt;
  My sob story
&lt;/h3&gt;

&lt;p&gt;I am a 44 year old returning student at &lt;a href="https://ccsf.edu"&gt;City College of San Francisco&lt;/a&gt; (shout out to my Rams!) who has always wanted to be a software engineer but was discouraged by guidance counselors and others due to the amount of math one needs for a full CS degree. Back in the wild days of the web and just after I finished my Associates Degree in Graphic Design I worked on web-based database applications with Active Server Pages (ASP), HTML, Microsoft Access (!), and an embarrassing number of &lt;code&gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/code&gt;'s and &lt;code&gt;spacer.gif&lt;/code&gt;'s. Nowadays we call it fullstack web development. The Great Browser Wars were in full swing and Netscape was the bees knees with its promise of a better way (CSS). I was self-taught and that got me a great gig fixing up a friend's dad's online car parts warehouse website (pictured below), but finding other work was challenging without a piece of paper that said "Brent knows stuff".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1bibZ4Ir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9jyhp4wzm4jz0yu1s1qt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1bibZ4Ir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9jyhp4wzm4jz0yu1s1qt.png"&gt;&lt;/a&gt;&lt;/p&gt;
Nostalgia courtesy archive.org and a little Photoshop



&lt;p&gt;Eventually after being let go in favor of a kid fresh out of college with lower salary requirements I moved to San Francisco and worked for a virtual world company as a quality assurance engineer, then a UI designer, and finally an in-world content developer. The recession hit and I was laid off along with 60-some percent of the company. This was a devastating blow to my confidence and one that put a sour taste in my mouth for anything in the tech industry. I tried to get jobs in tech but couldn't even score an interview, most likely because I didn't have a piece of paper that said Brent knows stuff. Defeated and desperate for a job that didn't involve flipping burgers, I worked for a while as a legal office assistant with a friend, then moved on to a career as a veterinary assistant. In 2019 this was quickly becoming less viable due to nerve damage in my dominant left hand and arm that was responsible for more than a few dropped syringes. My right hand and I aren't really friends--more like begrudging coworkers who lift one corner of their mouths into a bare-minimum smile when we pass each other on the way to the snack machine. Righty is useful only for carrying groceries and holding open doors, so building the dexterity needed to do the job well with my right hand was not an option. My general health started to decline due to stress and chronic pain. Arthritis in my neck and back finally convinced me to change career paths, but to do that I would need to go back to school.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rOhV9E3t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dz0hpwin891g0f0ik2gy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rOhV9E3t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dz0hpwin891g0f0ik2gy.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
Before my body betrayed me



&lt;h3&gt;
  &lt;a href="#from-classroom-to-zoom-college"&gt;
  &lt;/a&gt;
  From classroom to Zoom College
&lt;/h3&gt;

&lt;p&gt;It had been a while since I had been in a formal school setting and I was definitely worried about being able to learn. In addition to the medical drama mentioned above, I'm also dyslexic, and many signs were pointing to a misdiagnosis as a kid with ADHD that was really Autism Spectrum Disorder. The idea of going back to school at my age surrounded by folks a score younger than me that communicated primarily through TikTok was paralyzing. I registered for Spring 2020 at City College of San Francisco as a CS major and went to classes on campus with those TikTokking youngins and--surprisingly--students who looked like me: older, probably starting a new career, probably also nervous about returning to in-person education *mumble mumble* years later, too. By mid-March I had mostly hit my stride. I was doing well in my courses and was actually very excited to be back in school. I watched every video I could find on how to study better, how to take great notes (Cornell notes and doodle notes FTW), and how to manage my time. I took notes on my Galaxy Tab with a stylus and drew a lot of pictures to help cement the ideas in my very doodly brain. Things were going great!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--59s9kPBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nq80i9d6j616awm8l7b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--59s9kPBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nq80i9d6j616awm8l7b.png"&gt;&lt;/a&gt;&lt;br&gt;Sameness, explained with food (a page from my notes on Java)
  &lt;/p&gt;

&lt;p&gt;And then the pandemic hit and we were sent home for "two weeks" while the school figured things out with the promise that this was "only temporary". &lt;/p&gt;

&lt;p&gt;Well, we all know how &lt;em&gt;that&lt;/em&gt; worked out. &lt;/p&gt;

&lt;p&gt;Online instruction started, and I found that I was doing even better in my courses, except those dreaded math courses. Learning from home was working really well for me. I didn't have to travel and I didn't have to sit in an incredibly uncomfortable lecture hall seat with a desk attached to the right side (I'm a Lefty, remember). My interactions were through Zoom so my social anxiety was mitigated. I became a tutor and a teacher's aide, and discovered that other students didn't feel the same as I did about Zoom school, so I focused on helping them succeed, which in turn supported my success. &lt;/p&gt;

&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lLai4uSR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EB3HlixX4AEN1q7.jpg" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rAnL5mqb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/914900893706924032/P1zS0T0G_normal.jpg" alt="Josh Jordan profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Josh Jordan
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @numbersmuncher
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Imagine walking into a classroom as a left-handed person and having to sit in those right-handed desks while trying to write neatly on a spiral notebook designed for right-handed people.&lt;br&gt;&lt;br&gt;The struggle is real. Happy &lt;a href="https://twitter.com/hashtag/LeftHandersDay"&gt;#LeftHandersDay&lt;/a&gt; to my fellow lefties! 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:49 PM - 13 Aug 2019
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1161303730941284352" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1161303730941284352" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1161303730941284352" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
My literal hell.



&lt;h3&gt;
  &lt;a href="#degree-schmegree-certificates-ftw"&gt;
  &lt;/a&gt;
  Degree schmegree, certificates FTW
&lt;/h3&gt;

&lt;p&gt;Eventually I dropped math courses because I just couldn't keep up, and switched to a certificate program. I've already earned my Linux Administration certificate and I am working on a Java certificate and an Android development certificate this fall. I didn't want to lose the momentum I had built over these past semesters and so this summer I decided to keep the learning going by seeking out other online (and, where possible, free) educational programs and certifications. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#grow-with-google-succeed-with-datastax"&gt;
  &lt;/a&gt;
  Grow With Google, Succeed with Datastax
&lt;/h3&gt;

&lt;p&gt;Grow with Google's &lt;a href="https://developer.android.com/courses"&gt;Android Basics with Kotlin&lt;/a&gt; course was the first I tried. I found it to be fun to learn with this self-paced program and I felt an indescribable joy when I launched my first app on my Galaxy S21. I'm on track to finish this before school starts in the fall. The material requires a lot of reading, though, and being dyslexic that can slow me down. This course is one of a series that is meant to prepare students for the &lt;a href="https://developers.google.com/certification/associate-android-developer"&gt;Associate Android Developer&lt;/a&gt; certification exam, which is USD $149. So, the courses may be free, but the exam will cost you. &lt;/p&gt;

&lt;p&gt;A few days ago I decided to see if I could get a jump start on &lt;em&gt;CS 150A Introduction to SQL Databases and NoSQL&lt;/em&gt; and for that a helpful nudge from Reddit directed me to Datastax's &lt;a href="https://www.datastax.com/workshops"&gt;NoSQL Workshop&lt;/a&gt; series featuring AstraDB. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SvcDrV79--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwwt5bya6kvj4jzp8dqy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SvcDrV79--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwwt5bya6kvj4jzp8dqy.png"&gt;&lt;/a&gt;&lt;/p&gt;
Don't click the Register Now "button" (it's an image). Use the link above instead.



&lt;p&gt;Prior to taking this free, live, and interactive workshop I had only heard of MongoDB, which uses a schemaless document-based data structure. AstraDB is really flexible and focuses on the AP (Availability and Partition Tolerant) in &lt;a href="https://en.wikipedia.org/wiki/CAP_theorem"&gt;Eric Brewer's CAP theorem&lt;/a&gt; while providing interfaces and APIs to use this Cassandra-in-the-cloud solution with Tabular, Document-Oriented, Key Value, and Graph databases. The presenters explained advantages and disadvantages of each, and gave us the tools to learn more on our own. The workshop was incredibly useful with live, hands-on activities, a free AstraDB account with $25 credit per month, and even a voucher for free attempts at the certification test in the future, a USD $145 per attempt value! As I am a starving student this was a exciting surprise! More and more employers are looking for these certifications to show you know your stuff, and since I am no longer pursuing a CS degree these certificates are like gold, since they definitively state that Brent knows stuff. I am really grateful for the opportunity to learn these systems both in real-time interactive workshops and at my own pace self-study work. I feel that this course is setting me up for success. &lt;/p&gt;

&lt;p&gt;Certificate programs have given me the confidence to seek out more opportunities to learn. They offer me quicker rewards than full degree programs. I can work on multiple certificates at a time, pause one while I work on another, and come back to them whenever I like. More companies like Google and Datastax are offering free or reduced price certificates, and it makes sense. I'm more likely to use Datastax cloud services if I learn from them, prompting me to evangelize in their name at whatever company I end up at. And I'll have another piece of (digital) paper that proudly proclaims that Brent knows stuff.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hkXp72fJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ouurk5rlbmji7nmcwcw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hkXp72fJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ouurk5rlbmji7nmcwcw.png"&gt;&lt;/a&gt;&lt;/p&gt;
No dear Hiring Manager, I did not make this fake cert in Word. I made it in Illustrator.



</description>
      <category>growwithgoogle</category>
      <category>datastax</category>
      <category>astradb</category>
      <category>firstpost</category>
    </item>
    <item>
      <title>Countdown: Runtime code maps at GitLab Commit 2021</title>
      <author>Kevin Gilpin</author>
      <pubDate>Fri, 30 Jul 2021 20:51:08 +0000</pubDate>
      <link>https://dev.to/kgilpin/countdown-runtime-code-maps-at-gitlab-commit-2021-dpo</link>
      <guid>https://dev.to/kgilpin/countdown-runtime-code-maps-at-gitlab-commit-2021-dpo</guid>
      <description>&lt;p&gt;GitLab commit is just a few days away, and I'm excited to talk about how to &lt;a href="https://gitlabcommitvirtual2021.sched.com/event/kuJp/upgrade-your-development-workflow-with-interactive-code-maps"&gt;"Upgrade your development workflow with runtime code maps"&lt;/a&gt;. Attendance is free; visit &lt;a href="https://gitlabcommitvirtual2021.com/"&gt;https://gitlabcommitvirtual2021.com/&lt;/a&gt; for details. My talk is on Tuesday August 3 at 9:40 AM PDT. I'll be around online after the talk to chat and answer questions.&lt;/p&gt;

&lt;p&gt;In anticipation of the talk, we've added support for GitLab to AppMap, our open source project which records your code, in your local dev environment, to create and share visual code maps. &lt;/p&gt;

&lt;p&gt;In this brief video, you can see how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Record AppMaps in your code editor (VSCode or JetBrains) or with a Chrome browser extension.&lt;/li&gt;
&lt;li&gt;View AppMap visual dependency map and execution trace in the code editor.&lt;/li&gt;
&lt;li&gt;Upload AppMaps to the AppMap Cloud - a place to store and  share them - logging in with GitLab.&lt;/li&gt;
&lt;li&gt;Attach links to AppMaps stored in AppMap Cloud to your GitLab merge requests.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can use this workflow to find out exactly what code, web services, dependency services, and SQL is used in any use case or test case, and how all that code and data fits together. &lt;/p&gt;

&lt;p&gt;Then you can share AppMaps with your dev team so that they can see exactly what you see. For example, exactly how you spotted and fixed a bug.&lt;/p&gt;

&lt;p&gt;Check it out, and I hope to see you at GitLab Commit 2021!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>ruby</category>
      <category>python</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 30 Jul 2021 20:10:29 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-4129</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-4129</guid>
      <description>&lt;p&gt;Hey there!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking back on your week, what was something you're proud of?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Scheduling some time off... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Wishing you more wins to come — and as much relaxation as this cat is experiencing...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/6yKquSnGwI5Ak/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/6yKquSnGwI5Ak/giphy.gif" alt="Tony the Tiger High Five"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>6 Steps to Succeed as an Introvert</title>
      <author>Amrapali Rai</author>
      <pubDate>Fri, 30 Jul 2021 19:54:33 +0000</pubDate>
      <link>https://dev.to/amrapali/6-steps-to-succeed-as-an-introvert-1g4p</link>
      <guid>https://dev.to/amrapali/6-steps-to-succeed-as-an-introvert-1g4p</guid>
      <description>&lt;p&gt;From working in the corporate world over several years, I’ve observed that people who speak more and are very vocal about their accomplishments and ideas are thought to be smarter and win the most important projects.&lt;/p&gt;

&lt;p&gt;The workplace often punishes people who are introverts and want quiet time. Introverts are often seen as followers, not leaders. More often than not, perception triumphs actual work. I’ve often wondered if it was even possible to succeed as an introvert. In my own case, in many instances, I had let people take credit for my ideas and for my work, as I didn’t speak up at the right time.&lt;/p&gt;

&lt;p&gt;How can you succeed as an Introvert in the corporate world?&lt;br&gt;
By taking the following steps I’ve been able to succeed as an introvert in the workplace and have ensured that my voice was heard when it mattered. Hope they help you as well!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-use-the-power-of-email"&gt;
  &lt;/a&gt;
  1. Use the power of Email
&lt;/h2&gt;

&lt;p&gt;When I thought of an idea or had a solution for a problem, I took the time to write down my thoughts before the meeting and share it with my coworkers through email. I found that this gave people a chance to review it and mull on it before they showed up to the meetings, as well as gave me credit for my ideas. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-cross-check-facts"&gt;
  &lt;/a&gt;
  2. Cross check facts
&lt;/h2&gt;

&lt;p&gt;Often times, extroverts are quick to speak before fully processing things and often don’t fully cross checking facts. As an introvert, I had to be 100% sure before I said something. I naturally thought (too much) before speaking, so I used it to my advantage. I made sure I cross checked facts and built my credibility.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-build-personal-relationships-by-listening"&gt;
  &lt;/a&gt;
  3. Build personal relationships by listening
&lt;/h2&gt;

&lt;p&gt;As an introvert, building relationships one on one was easier to me than building rapport with a crowd. One of my strengths was listening, so it was easy to build connections with people on my team and other teams. Speaking up in meetings became much easier when the crowd was a bunch of people who I knew well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-reduce-stimulations"&gt;
  &lt;/a&gt;
  4. Reduce stimulations
&lt;/h2&gt;

&lt;p&gt;I often found that when there was too much going on, emails, meetings, interruptions and escalations, it was draining my energy. However, this unfortunately is the life of a Product Manager, so I took a hard look at my priorities each day and ruthlessly cut off unimportant stuff that was wasting my time needlessly. Interestingly, I found that I could always get out of meetings saying I had a conflict. No one really cared what the conflict was, as long as you didn’t do it too often.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-find-time-to-recharge"&gt;
  &lt;/a&gt;
  5. Find time to recharge
&lt;/h2&gt;

&lt;p&gt;I made sure that I declined any back to back meetings and found some time in between meetings to stay quiet or just go on a walk and recharge. This way, I was energized before my next meeting and found it easier to work well with a crowd, at least for a short period of time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-build-on-public-speaking-skills"&gt;
  &lt;/a&gt;
  6. Build on public speaking skills
&lt;/h2&gt;

&lt;p&gt;As an introvert, my quietness was a mix of shyness and a reluctance to engage in pointless small talk. I made a concerted effort to expand my network and my public speaking skills by enrolling in a toastmasters club with a non work audience so that I could practice my public speaking. This helped me become comfortable with crowds to an extent. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Extroverts do get a fair share of the limelight, but with a little strategy and planning you can succeed as an introvert and achieve your goals in the workplace, while staying true to your nature and not getting burned out. Remember, it’s not a battle of Extroverts vs Introverts, but to find what works for you best and play to your strengths.&lt;/p&gt;

</description>
      <category>career</category>
      <category>watercooler</category>
      <category>mentalhealth</category>
    </item>
    <item>
      <title>Helpful patterns I use in Vue</title>
      <author>Jordan Brennan</author>
      <pubDate>Fri, 30 Jul 2021 19:43:55 +0000</pubDate>
      <link>https://dev.to/jfbrennan/helpful-patterns-i-use-in-vue-539i</link>
      <guid>https://dev.to/jfbrennan/helpful-patterns-i-use-in-vue-539i</guid>
      <description>&lt;p&gt;There’s some simple patterns I tend to follow in my Vue projects that I figure work well enough to share, so here ya go. &lt;/p&gt;

&lt;p&gt;I’m really curious to see what other people do for these cases, so please share.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#loading-state"&gt;
  &lt;/a&gt;
  Loading state
&lt;/h1&gt;

&lt;p&gt;I use a simple &lt;code&gt;loading&lt;/code&gt; object of true/false flags that I toggle whenever that loading state changes. Messaging, loading indicators, and entire content sections are driven by these flags. &lt;/p&gt;

&lt;p&gt;Even though there are cases where I could use the presence or absence of the relevant data, using a separate object provides the flexibility needed for any design requirement. &lt;/p&gt;

&lt;p&gt;An example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;loading.users&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;!loading.users&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/table&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
      &lt;span class="na"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="nx"&gt;created&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#error-messaging"&gt;
  &lt;/a&gt;
  Error messaging
&lt;/h1&gt;

&lt;p&gt;Similar to loading states, I set up a simple &lt;code&gt;errors&lt;/code&gt; object and toggle flags. I’ve found error messages are best done in the template rather than in the errors object because one error can sometimes trigger multiple UI bits.&lt;/p&gt;

&lt;p&gt;An example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;errors.fetchUsers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Failed&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/template&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
      &lt;span class="na"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;fetchUsers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="nx"&gt;created&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetchUsers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Occasionally a component needs to know if there are any errors at all. That's really easy to check for:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Basic programmatic check&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hasErrors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Or as a computed&lt;/span&gt;
&lt;span class="nx"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;hasErrors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#avoid-event-modifiers"&gt;
  &lt;/a&gt;
  Avoid &lt;a href="https://v3.vuejs.org/guide/events.html#event-modifiers"&gt;Event Modifiers&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;From the docs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;v-on:submit.prevent=&lt;/span&gt;&lt;span class="s"&gt;"onSubmit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That &lt;code&gt;.prevent&lt;/code&gt; is a shortcut to the already short &lt;code&gt;e.preventDefault()&lt;/code&gt;. The cost of proprietary markup like this scattered all over your app trumps their negligible convenience.&lt;/p&gt;

&lt;p&gt;A strength Vue (and Riot) have is their plainness. That makes them easier to adopt and easier to replace. Using too much of a framework's special sauce increases the dependency - not good! And makes it harder for newcomers to understand your code as well.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#flatter-component-hierarchy"&gt;
  &lt;/a&gt;
  Flatter component hierarchy
&lt;/h1&gt;

&lt;p&gt;I avoid nesting Vue components beyond the third layer. The fourth layer is implemented as &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements"&gt;Custom Elements&lt;/a&gt; because I strongly prefer to write vanilla js any time there isn't a need for framework-specific features. &lt;/p&gt;

&lt;p&gt;My Vue (and Riot) projects look like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mOEfGtv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6jgrkw71qyig43iyeih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mOEfGtv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c6jgrkw71qyig43iyeih.png" alt="Flatter component hierarchy"&gt;&lt;/a&gt;&lt;br&gt;
This is an ideal design I could never quite achieve with React because React struggles a bit with Custom Elements even though they are a web standard.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#shared-modules"&gt;
  &lt;/a&gt;
  Shared modules
&lt;/h1&gt;

&lt;p&gt;This one may be obvious, but I sometimes see over-engineered solutions for these kinds of problems so I figured it's worth sharing.&lt;/p&gt;

&lt;p&gt;Instead of creating a Vue component or custom directive or other Vue-dependent solution, I strive to use simple Vue-free modules where possible. For example, in several components I need to format a raw number of bytes as KB, MB, GB, etc. I export a function that does this and import it in the components that need it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// data-utils.js&lt;/span&gt;
&lt;span class="c1"&gt;// No Vue allowed!&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;formatBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bytes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Zero is a valid value&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bytes&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0 bytes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Handle non-zero falsy&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Format value, e.g. "5 MB"&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sizes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bytes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;KB&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MB&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GB&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TB&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseFloat&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;bytes&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;File size is {{ formatBytes(file.size) }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;formatBytes&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../data-utils&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;File&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;formatBytes&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I usually end up with a dozen or more of these and they're so much easier to write, use, and test when there's no dependency on Vue itself even though they're for a Vue project. Sometimes these end up graduating to a shared package that can be used by other projects because they're decoupled from Vue.&lt;/p&gt;




&lt;p&gt;Beyond that I'm just using the basic features of Vue as-is and that alone takes me incredibly far. It's this straight-forwardness that makes Vue more powerful than other more ambitious and proprietary frameworks. Vue gives you so much more than it takes in my experience, and in many cases you don't have to let it take either.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Beyond the basics, what patterns are you using in Vue?&lt;/em&gt; &lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Turn your keyboard into a sound FX board with pygame</title>
      <author>Code_Jedi</author>
      <pubDate>Fri, 30 Jul 2021 19:34:19 +0000</pubDate>
      <link>https://dev.to/code_jedi/turn-your-keyboard-into-a-sound-fx-board-with-pygame-5b8m</link>
      <guid>https://dev.to/code_jedi/turn-your-keyboard-into-a-sound-fx-board-with-pygame-5b8m</guid>
      <description>&lt;p&gt;&lt;em&gt;Before we start, I'm just going to say that this obviously isn't supposed to be a tutorial that will help you improve your python skills, and I'm not intending it to be, I intend this to be a tutorial on how to build a fun beginner project.&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started!
&lt;/h2&gt;

&lt;p&gt;First, your going to need to install pygame, a python library used for making games, sound effects and more...&lt;br&gt;
&lt;code&gt;pip3 install pygame&lt;/code&gt;&lt;/p&gt;



&lt;p&gt;Next, create a python file and put these lines of code at the beginning:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pygame
pygame.init()
from pygame import mixer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;em&gt;This code first imports the pygame library, initiates it and finally imports mixer from pygame&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Before you start using mixer to create sound effects with python, you're going to need to put these lines of code first:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;running = True
if __name__ == "__main__":
    while running:

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Let me explain...&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The first 3 lines of code will make sure that your python script will run forever&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;_The last 3 lines of code are then going to make sure to contradict the &lt;code&gt;while running:&lt;/code&gt; loop only if the user willingly exits from the python launcher window&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#now-you-can-start-making-sounds-in-python"&gt;
  &lt;/a&gt;
  Now you can start making sounds in python!
&lt;/h4&gt;

&lt;p&gt;For this tutorial I'm going to be using the "noice" sound effect which I downloaded from &lt;a href="https://www.voicy.network/clips/7QSw-IHgGkKvHmhECMVrtQ"&gt;https://www.voicy.network/clips/7QSw-IHgGkKvHmhECMVrtQ&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After you've downloaded your sound, add these lines of code into the &lt;code&gt;for event in pygame.event.get():&lt;/code&gt; loop like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

            press = pygame.key.get_pressed()

            if press[pygame.K_n]:
                b = mixer.Sound("Noice.mp3")
                b.play()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Let me explain...&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;"press" is going to detect keyboard inputs from the user&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;_ Next, the &lt;code&gt;if press[pygame.K_n]:&lt;/code&gt; statement is going to detect if the user has pressed the "n" key on their keyboard. If they have, your python script is going to play the specified sound effect using mixer's "Sound" function.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#time-to-test"&gt;
  &lt;/a&gt;
  Time to test!
&lt;/h3&gt;

&lt;p&gt;Here's what your code should look like so far:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pygame
pygame.init()
from pygame import mixer
running = True
if __name__ == "__main__":
    while running:

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

            press = pygame.key.get_pressed()

            if press[pygame.K_n]:
                b = mixer.Sound("Noice.mp3")
                b.play()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you run your code, you should be able to play your sound effect when pressing a key on your keyboard.&lt;/p&gt;




&lt;p&gt;You can then add more keys and sounds to turn your keyboard into a full sound FX board:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pygame
pygame.init()
from pygame import mixer
running = True
if __name__ == "__main__":
    while running:

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

            press = pygame.key.get_pressed()

            if press[pygame.K_n]:
                b = mixer.Sound("sound1.mp3")
                b.play()
            if press[pygame.K_k]:
                b = mixer.Sound("sound2.mp3")
                b.play()
            if press[pygame.K_y]:
                b = mixer.Sound("sound3.mp3")
                b.play()
            if press[pygame.K_t]:
                b = mixer.Sound("sound4.mp3")
                b.play()
            if press[pygame.K_r]:
                b = mixer.Sound("sound5.mp3")
                b.play()
            if press[pygame.K_f]:
                b = mixer.Sound("sound6.mp3")
                b.play()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;









&lt;p&gt;If you're a beginner who likes discovering new things about python, try &lt;a href="https://rebrand.ly/Python_Weekly"&gt;my weekly python newsletter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8UJC9uHS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3tzwrb1iw2wesc8gdc5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8UJC9uHS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3tzwrb1iw2wesc8gdc5.png" alt="minecraft in python"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#thats-it-for-this-tutorial"&gt;
  &lt;/a&gt;
  That's it for this tutorial!
&lt;/h4&gt;

&lt;p&gt;Byeeeee👋 &lt;/p&gt;

</description>
      <category>python</category>
      <category>sideprojects</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Reading Code: How to Write Abstract and Reusable Code</title>
      <author>Ikechukwu</author>
      <pubDate>Fri, 30 Jul 2021 19:06:52 +0000</pubDate>
      <link>https://dev.to/ikechukwu/writing-abstract-reusable-code-16fa</link>
      <guid>https://dev.to/ikechukwu/writing-abstract-reusable-code-16fa</guid>
      <description>&lt;p&gt;A code that is abstract and reusable is code not tied to unique details of the problem set when writing it. For instance, if you are building an application with core PHP, and have about ten tables in your database, each with its unique set of columns. Imagine having to write insert method for each of these tables, and then update methods for each. That will work but it is tedious and more prone to bugs. &lt;/p&gt;

&lt;p&gt;How about you have a single insert method that when supplied with table name and inputs, viola it inserts the table in the table. Just any table at all-that is to say that this insert method is table agnostic. &lt;em&gt;Behind the scene, this method is a dynamic MySQL query builder&lt;/em&gt;. Now, this is abstract and reusable code. This is how frameworks work. &lt;/p&gt;

&lt;p&gt;In my early days in this business, I heard one developer say he doesn’t use frameworks, I was blown away, well it is simpler than I imagined (I am not advising you not to be using frameworks). He has his own set of reusable codes he uses in all projects. &lt;br&gt;
Ability to write code this way is the hallmark of a professional or senior developer. &lt;/p&gt;

&lt;p&gt;The question is, as a newbie, how do you get to this level in no time? There are two ways:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Give it time. Continue writing code tied to unique details of the problem set while trying as much as possible to follow the DRY principle. Over time you will be able to synthesize a pattern out of it all. Then write abstract reusable code based on the patterns. The whole pattern wouldn’t emerge at once though. &lt;br&gt;
The problem now is that this will take you years and useful hours wasted. You don’t have time. So, what is the next option?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The next option is: READ FINE CODEBASES. Yeah, read codebases where the developer wrote abstract reusable code. Your best bet is to find a codebase of a mini framework and read the hell out of it. Start with a mini framework meant for learning purposes. That will advance you fast. From there move to open source, production-grade lightweight frameworks. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Caution: you won’t understand it enough from your first reading to replicate or even integrate its concepts into your project. Even if you type along, you may still not understand it the first time. Maybe not even the second time. However, this is your best bet to drastically improve the quality of your code in next to no time. &lt;br&gt;
Number two was how I did it. Most importantly, reading codes especially ones better than yours will improve your skills all around as a developer more than writing code can do. &lt;br&gt;
What does you as a developer stand to benefit by writing abstract reusable code?&lt;/p&gt;

&lt;p&gt;I would have told you that, it is the most professional way to do things, but I won’t. Humans are animals, driven more than anything else, by incentive and material gain. So here is what you stand to gain…&lt;br&gt;
As an independent or employed developer, it makes your work faster so you can take on more work. More efficient as there will be a single or central point of failure. It is one of the skills you will need to work with a giant team. Each developer working on a different part of the project don’t and won’t have to reinvent the wheel. I will hope you don’t need me to spell out how this will turn into more money for you. Thank you for reading.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Ikechukwu Vincent 
I am Enugu State, Nigeria-based tired Physicist, PHP(Laravel), and JavaScript (React) Developer. I work by day and learn at night.
Let's connect:&lt;/li&gt;
&lt;li&gt;Facebook: &lt;a href="https://web.facebook.com/ikechukwu.unegbu.14"&gt;https://web.facebook.com/ikechukwu.unegbu.14&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;LinkedInd: &lt;a href="https://www.linkedin.com/in/ikechukwu-vincent-002934176/"&gt;https://www.linkedin.com/in/ikechukwu-vincent-002934176/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>beginners</category>
    </item>
    <item>
      <title>11 Free eBooks to Learn Python</title>
      <author>Envoy-VC</author>
      <pubDate>Fri, 30 Jul 2021 18:51:22 +0000</pubDate>
      <link>https://dev.to/envoy_/11-free-ebooks-to-learn-python-gn4</link>
      <guid>https://dev.to/envoy_/11-free-ebooks-to-learn-python-gn4</guid>
      <description>&lt;p&gt;Join my Discord to get Direct Download Link to all the E-Books - &lt;br&gt;
&lt;a href="//discord.link/envoy"&gt;Discord&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎉Picking a PythonVersion: A Manifesto &lt;/p&gt;

&lt;p&gt;This report guides you through the implicit decision tree of choosing what Python version, implementation, and distribution is best suited for you. It weighs and discusses the merits of each of these choices, and briefly discusses the reasons each option exists.&lt;/p&gt;



&lt;p&gt;🎉A Whirlwind Tour of Python&lt;/p&gt;

&lt;p&gt;To tap into the power of Python’s open data science stack — including NumPy, Pandas, Matplotlib, Scikit-learn, and other tools — you first need to understand the syntax, semantics, and patterns of the Python language. This report provides a brief yet comprehensive introduction to Python for engineers, researchers, and data scientists who are already familiar with another programming language.&lt;/p&gt;



&lt;p&gt;🎉 PYTHON: THE BLUEPRINTTOPYTHON PROGRAMMING: A Beginners Guide: Everything You Need to Know to Get Started&lt;/p&gt;

&lt;p&gt;The Blueprint to Python Programming: A Beginners Guide to Everything You Need to Know to Get Started is the perfect book for you to get started with this programminglanguage and delivers everything you’ll need to get you started &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Getting to know the Python program &lt;/li&gt;
&lt;li&gt;Basic commands you need to know Working with loops&lt;/li&gt;
&lt;li&gt;Handling exceptions in your code&lt;/li&gt;
&lt;li&gt;Conditional statements&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;🎉Hacking with Python: Beginner’s Guide to Ethical Hacking, Basic Security, Penetration Testing, and Python Hacking&lt;/p&gt;

&lt;p&gt;The world of hacking is an interesting study. It allows you the opportunity to learn more about your computer system, work with different programs, and even protects your computer and your network against black hat hackers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The basics of hacking&lt;/li&gt;
&lt;li&gt;Some of the things that you need to know how to do before hacking&lt;/li&gt;
&lt;li&gt;Picking out the best hacking tools&lt;/li&gt;
&lt;li&gt;How to get through passwords on a computer&lt;/li&gt;
&lt;li&gt;How to do spoofing and man in the middle attacks&lt;/li&gt;
&lt;li&gt;How to hack through a network or wireless connection&lt;/li&gt;
&lt;li&gt;How to protect your system and keep it safe&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;🎉Learn Python The Hard Way&lt;/p&gt;

&lt;p&gt;The original Hard Way book and still the most popular way for total beginners to finally learn how to code. Learn Python The Hard Way takes you from absolute zero to able to read and write basic Python to then understand other books on Python. No experience necessary to begin, and you can even try the book out for free to see if the method works for you. If you’ve always wanted to learn to code but have no idea where to begin, then this book is for you.&lt;/p&gt;



&lt;p&gt;🎉20 Python Libraries You Aren’t Using (But Should)&lt;/p&gt;

&lt;p&gt;The Python ecosystem is vast and far-reaching in both scope and depth. Starting out in this crazy, open-source forest is daunting, and even with years of experience, it still requires continual effort to keep up-to-date with the best libraries and techniques. Thisreport helps you explore some of the lesser known Python libraries and tools, including third-party modules and several extremely useful tools in the standard library that deserve more attention&lt;/p&gt;



&lt;p&gt;🎉Hadoop with Python&lt;/p&gt;

&lt;p&gt;Hadoop is mostly written in Java, but that doesn’t exclude the use of other programming languages with this distributed storage and processing framework, particularly Python.With this concise book, you’ll learn how to use Python with the Hadoop Distributed FileSystem (HDFS), MapReduce, the Apache Pig platform and Pig Latin script, and theApache Spark cluster-computing framework.&lt;/p&gt;



&lt;p&gt;🎉How to Make Mistakes in Python&lt;/p&gt;

&lt;p&gt;Even the best programmers make mistakes, and experienced programmer Mike Pirnathas made his share during 15+ years with Python. Some have been simple and silly; others were embarrassing and downright costly. In this O’Reilly report, he dissects some of his most memorable blunders, peeling them back layer-by-layer to reveal just what went wrong&lt;/p&gt;



&lt;p&gt;🎉Python in Education&lt;/p&gt;

&lt;p&gt;You’ve probably heard about the computing revolution in schools, and perhaps you’ve even heard of Raspberry Pi. The Python programming language is at the center of these fundamental changes in computing education. Whether you’re a programmer, teacher, student, or parent, this report arms you with the facts and information you need to understand where Python sits within this context.&lt;/p&gt;



&lt;p&gt;🎉A Byte of Python&lt;/p&gt;

&lt;p&gt;“A Byte of Python” is a free book on programming using the Python language. It serves as a tutorial or guide to the Python language for a beginner audience. If all you know about computers is how to save text files, then this is the book for you.&lt;/p&gt;



&lt;p&gt;🎉Think Python&lt;/p&gt;

&lt;p&gt;An introduction to Python programming for beginners. It starts with basic concepts of programming, and is carefully designed to define all terms when they are first used and to develop each new concept in a logical progression. Larger pieces, like recursion and object-oriented programming are divided into a sequence of smaller steps and introduced over the course of several chapters.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>ebooks</category>
      <category>free</category>
    </item>
    <item>
      <title>3 Ways to Make Buttons more Enticing to Interact With</title>
      <author>Kyle Gill</author>
      <pubDate>Fri, 30 Jul 2021 18:49:53 +0000</pubDate>
      <link>https://dev.to/gillkyle/3-ways-to-make-buttons-more-enticing-to-interact-with-3cjb</link>
      <guid>https://dev.to/gillkyle/3-ways-to-make-buttons-more-enticing-to-interact-with-3cjb</guid>
      <description>&lt;p&gt;Buttons are one of the most common elements in all of UI. It'll probably be the first thing you see when you open up a new component library or start working on a new project.&lt;/p&gt;

&lt;p&gt;They can be surprisingly complex when you factor in all the different states and implications a button can have when pressed, clicked, or tapped.&lt;/p&gt;

&lt;p&gt;Think about these differnt states you need to consider when designing a button:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Full color, outlined, or "ghost" buttons&lt;/li&gt;
&lt;li&gt;Loading, disabled, and submitting states&lt;/li&gt;
&lt;li&gt;Button sizes like sm, md, and lg&lt;/li&gt;
&lt;li&gt;Hover, focus, and active states&lt;/li&gt;
&lt;li&gt;Buttons used as links, vs buttons used as... well, buttons&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After all is said and done, you can still do more to make sure your button looks "clickable". Here are a couple ways you can enhance a button.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#techniques-for-making-buttons-look-more-clickable"&gt;
  &lt;/a&gt;
  Techniques for making buttons look more "clickable"
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Overlap content sections&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add animations&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add &lt;code&gt;cursor: pointer&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-overlap-content-sections"&gt;
  &lt;/a&gt;
  1. Overlap content sections
&lt;/h2&gt;

&lt;p&gt;An element that sits on top of 2 sections looks like it almost "floats", and looks like it could be clicked.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QFaoRe2l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0b92akyskxx5zsmokzbf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QFaoRe2l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0b92akyskxx5zsmokzbf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Material UI does this with their + buttons.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-add-animations"&gt;
  &lt;/a&gt;
  2. Add animations
&lt;/h2&gt;

&lt;p&gt;Entrance animations, hover animations, and tap animations can all add to a button in subtle but important ways.&lt;/p&gt;

&lt;p&gt;Consider scaling the button or text within it when you hover or click.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-add-cursor-pointer"&gt;
  &lt;/a&gt;
  3. Add cursor: pointer
&lt;/h2&gt;

&lt;p&gt;It makes a button obviously clickable to have a little finger pop up over a button! Consider adding it to something you know will be clicked.&lt;/p&gt;

&lt;p&gt;You can't rely on this to signal a button is clickable though for users who navigate without a cursor.&lt;/p&gt;



&lt;blockquote&gt;
&lt;br&gt;
&lt;p&gt;🔥 3 ways to make your button more enticing to click&lt;br&gt;&lt;br&gt;1️⃣ Overlap content sections&lt;br&gt;2️⃣ Add animations&lt;br&gt;3️⃣ Add cursor: pointer&lt;a href="https://twitter.com/hashtag/uifoundations?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#uifoundations&lt;/a&gt; &lt;a href="https://t.co/Q47GPEKvk6"&gt;pic.twitter.com/Q47GPEKvk6&lt;/a&gt;&lt;/p&gt;— Kyle Gill (@gill_kyle) &lt;a href="https://twitter.com/gill_kyle/status/1420906363438260225?ref_src=twsrc%5Etfw"&gt;July 30, 2021&lt;/a&gt;&lt;br&gt;
&lt;/blockquote&gt; 

</description>
      <category>uiweekly</category>
      <category>css</category>
      <category>codenewbie</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Streaming Fauna Documents with Python</title>
      <author>LordGhostX</author>
      <pubDate>Fri, 30 Jul 2021 18:44:53 +0000</pubDate>
      <link>https://dev.to/lordghostx/streaming-fauna-documents-with-python-18c3</link>
      <guid>https://dev.to/lordghostx/streaming-fauna-documents-with-python-18c3</guid>
      <description>&lt;p&gt;With Fauna’s document streaming feature, you can get real-time updates about changes made to your database. &lt;/p&gt;

&lt;p&gt;In this tutorial, you will learn how to use Fauna’s document streaming feature in a Python application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here for the code alone? Head over to the &lt;a href="//#h.yqdu04ukzkz1"&gt;implementation section&lt;/a&gt; of this article.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#what-is-streaming"&gt;
  &lt;/a&gt;
  What is Streaming?
&lt;/h2&gt;

&lt;p&gt;Streaming refers to when a program continuously reads and fetches data from a given source in real-time. For example, while watching a YouTube video or downloading a file from the internet, you stream the data from the origin and process it on your client’s device instantaneously.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GeEYbkuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5h55hnzrab1bhowmlxm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GeEYbkuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5h55hnzrab1bhowmlxm.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Streaming, in some ways, can arguably be a better alternative to polling. Polling refers to when a client periodically makes queries to a data source to get updates. It is more expensive than streaming as the client sends many requests only to get a single update or none at all. Polling is only aware of changes when the query results return.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o__yLo2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1m9etlwcigbalgp4tnn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o__yLo2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1m9etlwcigbalgp4tnn.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-fauna"&gt;
  &lt;/a&gt;
  What is Fauna?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://fauna.com/"&gt;Fauna&lt;/a&gt; is a flexible database delivered as a secure data API providing two interfaces: GraphQL and the Fauna Query Language (FQL). It offers functionality to store collections, indexes, and other databases. To learn more about Fauna, visit the &lt;a href="https://docs.fauna.com/"&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE: The rest of this article assumes you have a fair understanding of Fauna and Python. Check out my &lt;a href="https://dev.to/lordghostx/building-a-telegram-bot-with-python-and-fauna-494i"&gt;introductory tutorial&lt;/a&gt; first if you don't.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#setting-up-our-fauna-database"&gt;
  &lt;/a&gt;
  Setting up our Fauna database
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-fauna-database"&gt;
  &lt;/a&gt;
  Creating the Fauna database
&lt;/h2&gt;

&lt;p&gt;We need to first create the database to use in Fauna’s dashboard. If you have not created an account on Fauna before now, &lt;a href="https://dashboard.fauna.com/accounts/register"&gt;do so here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the dashboard, click on the &lt;code&gt;NEW DATABASE&lt;/code&gt; button, provide a name for the database, then press &lt;code&gt;SAVE.&lt;/code&gt; We will also be ticking the &lt;code&gt;Pre-populate&lt;/code&gt; option to get demo data that will be used in this article:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--khAKoVTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsgmiu8a20uhltha7560.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--khAKoVTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsgmiu8a20uhltha7560.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h8G4wbp1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjyrjch8ws5q4nlnsd2q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h8G4wbp1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjyrjch8ws5q4nlnsd2q.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#generate-the-database-security-key"&gt;
  &lt;/a&gt;
  Generate the database security key
&lt;/h2&gt;

&lt;p&gt;Then, we need to create a security key to connect the database to the application. Go to the &lt;code&gt;Security&lt;/code&gt; tab on the Fauna sidebar (located on the left side of the screen), click the &lt;code&gt;NEW KEY&lt;/code&gt; button, provide the necessary information, and press &lt;code&gt;SAVE:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_3Z2YNSD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07rfqvz5d6ovfzhts2t4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_3Z2YNSD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07rfqvz5d6ovfzhts2t4.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fauna will then present you with your &lt;code&gt;Secret Key.&lt;/code&gt; Copy the key immediately and store it somewhere easily retrievable because it will only be displayed once.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#implementing-document-streaming-with-python"&gt;
  &lt;/a&gt;
  Implementing document streaming with Python
&lt;/h1&gt;

&lt;p&gt;Fauna features built-in support for document streaming. Whenever changes in a particular document are streamed, all the clients subscribed to it will be notified in real-time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#initializing-our-fauna-client"&gt;
  &lt;/a&gt;
  Initializing our Fauna client
&lt;/h2&gt;

&lt;p&gt;Let’s write some code to implement this functionality!.&lt;/p&gt;

&lt;p&gt;First, we will install the Fauna Python driver, importing the required libraries, and creating a database client.&lt;/p&gt;

&lt;p&gt;In the terminal, type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install faunadb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, create a Python script and save the code below in it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;faunadb&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;  
&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;faunadb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ref&lt;/span&gt;  
&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;faunadb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;FaunaClient&lt;/span&gt;  

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FaunaClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"FAUNA_SECRET_KEY"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#selecting-a-document-to-stream"&gt;
  &lt;/a&gt;
  Selecting a document to stream
&lt;/h2&gt;

&lt;p&gt;Next, we will fetch the document from the Fauna database collections that we want to stream:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eRk6SCzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1km54sq0hmb8d1rp9un.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eRk6SCzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1km54sq0hmb8d1rp9un.png" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"customers"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"101"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-an-onstart-function"&gt;
  &lt;/a&gt;
  Creating an OnStart function
&lt;/h2&gt;

&lt;p&gt;We will start by defining an &lt;code&gt;on_start&lt;/code&gt; function, which will be triggered when a document stream starts:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"started stream at &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txn&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;"firstName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"lastName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Smith"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"telephone"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"719-872-4470"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"ref"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our &lt;code&gt;on_start&lt;/code&gt; function, we printed out the current timestamp of the transaction emitting the event (in microseconds) provided by &lt;code&gt;event.txn.&lt;/code&gt; Then, the streamed document, so Fauna notifies our application in real-time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-an-onversion-function"&gt;
  &lt;/a&gt;
  Creating an OnVersion function
&lt;/h2&gt;

&lt;p&gt;Next, we will define an &lt;code&gt;on_version&lt;/code&gt; function. It will be triggered when there is a change in the streamed document and Fauna has sent a notification to the subscribing application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_version&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"on_version event at &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txn&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Event action: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Changes made: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'diff'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'data'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our &lt;code&gt;on_version&lt;/code&gt; function, we printed out the current timestamp again (in microseconds), then printed out the event action provided by &lt;code&gt;event.event['action'].&lt;/code&gt; We then printed out the changes made to the document.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-an-onerror-function"&gt;
  &lt;/a&gt;
  Creating an OnError function
&lt;/h2&gt;

&lt;p&gt;After that, we will define an &lt;code&gt;on_error&lt;/code&gt; function. It will be triggered when an error occurs while processing the data in the &lt;code&gt;on_version:&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Received error event &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our &lt;code&gt;on_error&lt;/code&gt; function, we printed out the event that triggered the issue along with its error message.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#starting-the-document-streaming"&gt;
  &lt;/a&gt;
  Starting the document streaming
&lt;/h2&gt;

&lt;p&gt;We will now begin  document streaming:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"fields"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"document"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"diff"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="n"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"ref"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on_error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on_version&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, we defined the fields we want in every event update. Then, we passed the &lt;code&gt;on_start,&lt;/code&gt; &lt;code&gt;on_error,&lt;/code&gt; and &lt;code&gt;on_version&lt;/code&gt; functions to the stream object and triggered it with the &lt;code&gt;start&lt;/code&gt; method. &lt;/p&gt;

&lt;p&gt;You should get an image like the one below when the entire script executes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvdrBjhl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q658zoc9xxgyh4o4og3x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvdrBjhl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q658zoc9xxgyh4o4og3x.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE: You can stop active streams using the &lt;code&gt;stream.close()&lt;/code&gt; method.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#a-few-things-to-note"&gt;
  &lt;/a&gt;
  A few things to note
&lt;/h1&gt;

&lt;p&gt;At the time of writing, Fauna’s document streaming is still an Early Access feature. Hence there are some limitations to using it, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You cannot have more than 100 active stream connections to Fauna from a single client device.&lt;/li&gt;
&lt;li&gt;Document streaming is currently not supported in Node.js clients due to an HTTP/2 implementation issue.&lt;/li&gt;
&lt;li&gt;You can only stream Fauna documents. It is not possible to stream collections or any schema document.&lt;/li&gt;
&lt;li&gt;Streams can only report events to the fields and values within a document’s &lt;code&gt;data&lt;/code&gt; field.&lt;/li&gt;
&lt;li&gt;There is currently no support for GraphQL subscriptions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this article, we learned about Fauna’s document streaming capabilities and how easy it is to integrate Fauna’s document streaming into a Python application.&lt;/p&gt;

&lt;p&gt;You can learn more about Fauna document streaming from the &lt;a href="https://docs.fauna.com/fauna/current/drivers/streaming.html"&gt;official documentation&lt;/a&gt;. If you have any questions, don't hesitate to contact me on Twitter: &lt;a href="https://twitter.com/LordGhostX"&gt;@LordGhostX&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>faunadb</category>
      <category>database</category>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>How create ⚛️ React Swiper Slider - easy tutorial 👨‍🏫</title>
      <author>Roden</author>
      <pubDate>Fri, 30 Jul 2021 18:43:49 +0000</pubDate>
      <link>https://dev.to/kerthin/how-create-react-swiper-slider-easy-tutorial-51il</link>
      <guid>https://dev.to/kerthin/how-create-react-swiper-slider-easy-tutorial-51il</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;p&gt;In fact, today's article is devoted not only to how to make a specific slider, which you could see on the preview of this post, but also in general how to implement various simple sliders on React without putting much effort.&lt;/p&gt;

&lt;p&gt;The slider that I will give you today as an example is part of my separate project. The slider itself is made in the form of many columns, each of which is a structure that is divided into countries and inside each column there is information about the artists of these countries.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/psMKtHgZwidS55vhLK/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/psMKtHgZwidS55vhLK/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Swiper Slider&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/RodenKerthin/embed/xNNVPV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;Let's Get Started&lt;/h1&gt;

&lt;h3&gt;01. Swiper.js&lt;/h3&gt;

&lt;p&gt;First, we need to connect the &lt;a href="https://swiperjs.com/"&gt;Swiper.js&lt;/a&gt;. You can follow the link and download it, or connect it via &lt;code&gt;npm&lt;/code&gt; using the line in the &lt;code&gt;npm i swiper&lt;/code&gt; console. &lt;a href="https://swiperjs.com/react"&gt;You can read all the documentation on the official page in the React section.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since I was creating a slider in &lt;strong&gt;CodePen&lt;/strong&gt;, I connected the link through the settings in the &lt;code&gt;JS&lt;/code&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ZaoTWTg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9g78a4rd1orxxcn6xwje.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ZaoTWTg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9g78a4rd1orxxcn6xwje.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get the links, click on the &lt;code&gt;Settings&lt;/code&gt; button, then select the &lt;code&gt;JS&lt;/code&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Jfwttnj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hf56ge43txangz441fj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Jfwttnj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hf56ge43txangz441fj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We also need to connect &lt;code&gt;Swiper.css&lt;/code&gt; for the correct rendering of slides. &lt;strong&gt;(You can always change the styles as you like).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To get the link, click on the &lt;code&gt;Settings&lt;/code&gt; button, then select the &lt;code&gt;CSS&lt;/code&gt; section.&lt;/p&gt;

&lt;h3&gt;02. Functionality&lt;/h3&gt;

&lt;p&gt;First of all, we need to create a &lt;code&gt;Slider&lt;/code&gt; Class, inside which we will specify the characteristics of the slider and also render a container for slides.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Slider&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Swiper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;refs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
      &lt;span class="na"&gt;slidesPerView&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slidePerView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;slidesPerGroup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slidesPerGroup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;freeMode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;containerSlider&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;swiper-container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;slider&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;swiper-wrapper&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;componentDidMount()&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
&lt;strong&gt;slidesPerView&lt;/strong&gt; - Number of slides per view (slides visible at the same time on slider's container). &lt;em&gt;(Personally, I specified &lt;strong&gt;auto&lt;/strong&gt; because I wanted the slider to look more natural, but if you don't want to bother with the size of the slides, you can just specify the number of slides that should fit on the screen at a time.)&lt;/em&gt;
&lt;/li&gt;
  &lt;li&gt;
&lt;strong&gt;slidesPerGroup&lt;/strong&gt; - Set numbers of slides to define and enable group sliding. Useful to use with slidesPerView &amp;gt; 1. &lt;em&gt;(The property is necessary so that when you finish turning the slider to the end, you would be thrown to the very beginning of the slider, so that you do not have to turn back. It is necessary for long sliders.)&lt;/em&gt;
&lt;/li&gt;
  &lt;li&gt;
&lt;strong&gt;loop&lt;/strong&gt; - Set to true to enable continuous loop mode.&lt;/li&gt;
  &lt;li&gt;
&lt;strong&gt;freeMode&lt;/strong&gt; - If enabled then slides will not have fixed positions. You can stop the slider at any convenient scrolling point.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;render()&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
&lt;strong&gt;containerSlider&lt;/strong&gt; - You can name this class as you like, it is needed in order to set the dimensions of the entire slider.&lt;/li&gt;
  &lt;li&gt;
&lt;strong&gt;swiper-container&lt;/strong&gt; &amp;amp; &lt;strong&gt;swiper-wrapper&lt;/strong&gt; - these classes should be left in the form in which they are written. They are needed for the slider to work correctly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can find most of the other properties on the official website in the &lt;a href="https://swiperjs.com/swiper-api"&gt;API section&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;03. Creating Slides&lt;/h3&gt;

&lt;p&gt;After we have created a container for the slider and specified its properties, it is necessary to work out the appearance of the slides. As I mentioned earlier, the slider consists of &lt;code&gt;7 sections&lt;/code&gt;, each of which is a &lt;code&gt;country&lt;/code&gt;, and inside each section there is a brief information about the &lt;code&gt;artists&lt;/code&gt; of these countries.&lt;/p&gt;

&lt;p&gt;I decided to make all the slides &lt;code&gt;520px&lt;/code&gt; in size, but you can set a different size for each slide using the pseudo-class &lt;code&gt;nth-child()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;2 artists&lt;/code&gt; will be represented inside each slide.&lt;/p&gt;

&lt;p&gt;To do this, we need to create a function inside which we will work out the &lt;code&gt;DOM structure&lt;/code&gt; of the slide. You can call it whatever you want, I personally called it &lt;code&gt;Сountries&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Сountries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;swiper-slide&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;countryTitle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;countryTitle__name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;countryTitle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__textWrap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__years&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;born&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__imgWrap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`painter__imgBg _bg_&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__textWrap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__years&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;born2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__imgWrap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`painter__imgBg _bg_&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;class2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the function, we have specified special &lt;code&gt;properties&lt;/code&gt; with which we can fill in &lt;code&gt;information about our artists&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;04. Content&lt;/h3&gt;

&lt;p&gt;Now we just need to fill the slider with content, inside which we will add the information we need.&lt;/p&gt;

&lt;p&gt;To do this, we need to create a class inside which we need to specify the &lt;code&gt;Slider&lt;/code&gt; class using the &lt;code&gt;&amp;lt;Slider slidePerView="auto" slidesPerGroup="7"&amp;gt;&amp;lt;/Slider&amp;gt;&lt;/code&gt; tags.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Slider&lt;/span&gt; &lt;span class="nx"&gt;slidePerView&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;slidesPerGroup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;7&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Slider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And inside the &lt;code&gt;Slider&lt;/code&gt; tag, we must individually insert as many slides as we need. We will do this using the &lt;code&gt;Countries&lt;/code&gt; class, in which we prescribed the &lt;code&gt;DOM structure&lt;/code&gt; of the slides.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Сountries&lt;/span&gt; &lt;span class="nx"&gt;countryTitle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Italy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
           &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Titian Vecellio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1488 - 1576&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;titian&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
           &lt;span class="nx"&gt;name2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Leonardo da Vinci&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1452 - 1519&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;class2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vinci&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Here's what it looks like in general:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Slider&lt;/span&gt; &lt;span class="nx"&gt;slidePerView&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;slidesPerGroup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;7&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Сountries&lt;/span&gt; &lt;span class="nx"&gt;countryTitle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Italy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
          &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Titian Vecellio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1488 - 1576&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;titian&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;name2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Leonardo da Vinci&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1452 - 1519&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;class2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vinci&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Сountries&lt;/span&gt; &lt;span class="nx"&gt;countryTitle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;France&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
          &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Louis-Michel van Loo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1707 - 1771&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vanLoo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;name2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Eugene Delacroix&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1798 - 1863&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;class2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;delacroix&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Сountries&lt;/span&gt; &lt;span class="nx"&gt;countryTitle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Spain&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
          &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bartholomew Murillo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1618 - 1682&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;murillo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;name2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;El Greco&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1541 - 1614&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;class2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;greco&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Сountries&lt;/span&gt; &lt;span class="nx"&gt;countryTitle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Belgium&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
          &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jan van Eyck&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1385 - 1441&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eyck&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;name2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Anthony van Dyck&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1599 - 1641&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;class2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dyck&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Сountries&lt;/span&gt; &lt;span class="nx"&gt;countryTitle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Germany&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
          &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Rafael Mengs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1728 - 1779&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mengs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;name2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Franz Xaver Winterhalter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1818 - 1885&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;class2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;winterhalter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Сountries&lt;/span&gt; &lt;span class="nx"&gt;countryTitle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Russia&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
          &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Karl Pavlovich Brullov&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1799 - 1852&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;brullov&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;name2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Viktor Mikhailovich Vasnetsov&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1848 - 1926&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;class2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vasnetsov&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Сountries&lt;/span&gt; &lt;span class="nx"&gt;countryTitle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Netherlands&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
          &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pieter Bruegel The Elder&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1525 - 1569&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bruegel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;name2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter Paul Rubens&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;born2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1577 - 1640&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;class2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rubens&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Slider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;05. Render&lt;/h3&gt;

&lt;p&gt;It remains only to render the &lt;code&gt;App&lt;/code&gt; class and everything is ready.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;Responsive&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/KeO7bH1Bg38dw6BWEE/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/KeO7bH1Bg38dw6BWEE/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The site is adapted for screen resolutions such as:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;@media screen and (orientation: landscape) and (max-height: 780px)&lt;br&gt;
@media screen and (orientation: landscape) and (max-height: 630px)&lt;br&gt;
@media screen and (orientation: landscape) and (max-height: 540px)&lt;br&gt;
@media screen and (orientation: landscape) and (max-height: 460px)&lt;br&gt;
@media screen and (max-width: 1600px)&lt;br&gt;
@media screen and (max-width: 1440px)&lt;br&gt;
@media screen and (max-width: 1366px)&lt;br&gt;
@media screen and (max-width: 1280px)&lt;br&gt;
@media screen and (max-width: 1024px)&lt;br&gt;
@media screen and (max-width: 768px)&lt;br&gt;
@media screen and (max-width: 414px)&lt;br&gt;
@media screen and (max-width: 375px)&lt;br&gt;
@media screen and (max-width: 320px)&lt;br&gt;
@media screen and (max-width: 680px) and (max-height: 520px)&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;The End&lt;/h1&gt;

&lt;p&gt;Finally, it is worth saying that this is not the most ideal way to create a slider, and I agree with you. If I were making a similar slider in a real project, I would output it through an object, and would create significantly more components. But I wrote this post in order to just give a simple understanding for beginners how to make such sliders.&lt;/p&gt;

&lt;p&gt;Thank you for giving your precious time to my post. See you soon.&lt;br&gt;
I can advise you to subscribe to my &lt;a href="https://twitter.com/BelichenkoRoden"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;, I also post my work there.&lt;br&gt;
&lt;br&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goodbye. Have a good slide.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://i.giphy.com/media/l2QZX9mMfuht3TVx6/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l2QZX9mMfuht3TVx6/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Is Github Copilot a friend or a foe ?!</title>
      <author>AIDRI</author>
      <pubDate>Fri, 30 Jul 2021 18:37:05 +0000</pubDate>
      <link>https://dev.to/byteslash/is-github-copilot-a-friend-or-a-foe-255i</link>
      <guid>https://dev.to/byteslash/is-github-copilot-a-friend-or-a-foe-255i</guid>
      <description>&lt;p&gt;Hi guys,🖐&lt;/p&gt;

&lt;p&gt;Today, I wanted to share with you his experience on the Github Copilot assistant that helps developers. &lt;/p&gt;

&lt;p&gt;We hope you'll like it. Let's start:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-introduction"&gt;
  &lt;/a&gt;
  I/ Introduction
&lt;/h3&gt;

&lt;p&gt;On June 29, 2021, Github announced on its blog and on Twitter the release of a revolutionary assistant, able to help developers to code faster, discover APIs, and solve problems. Its name: Github Copilot. Immediately, this assistant made a lot of noise in the programming field. That's why we decided to create this article to summarize what happened last month, and the opinions about this AI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bevCG28L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvm2wxzw0xp955c3d8jr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bevCG28L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvm2wxzw0xp955c3d8jr.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ii-what-is-gpt3-and-openai-codex"&gt;
  &lt;/a&gt;
  II/ What is GPT3 and OpenAI Codex
&lt;/h3&gt;

&lt;p&gt;Github Copilot has been developed in collaboration with OpenAI, the company founded by Sam Altman and Elon Musk, and managed by Ilya Sutskever. GPT-3 is an AI developed by this company, but it is especially the big brother of GPT-2, another similar AI developed a few years before. This AI is based on the technology of the Transformers, which uses a mechanism of attention (Attention Layer). It is composed of 175 billions of parameters, which makes it one of the biggest AIs ever created. To take advantage of all the capabilities of GPT-3, OpenAI has created alternative versions: DALL-E, GPT-F, and OpenAI Codex. Here, the AI has been trained on billions of lines of code from projects available on the internet. Github, led by Microsoft which has the exclusivity of GPT-3, decided to make OpenAI Codex available via VS Code, thus creating one of the most attractive private betas!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iii-the-positive-points-of-github-copilot"&gt;
  &lt;/a&gt;
  III/ The positive points of Github Copilot
&lt;/h3&gt;

&lt;p&gt;Github Copilot has many advantages:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-you-can-write-code-faster-"&gt;
  &lt;/a&gt;
  - You can write code faster : 💨
&lt;/h4&gt;

&lt;p&gt;Indeed, OpenAI's AI runs on very powerful hardware technologies, which allows to predict results quickly. Moreover, many results are generated just as quickly, which allows me to introduce the following point...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fn5cvham--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1fr5654vwefp2j8o60z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fn5cvham--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1fr5654vwefp2j8o60z.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-we-have-access-to-many-results"&gt;
  &lt;/a&gt;
  - We have access to many results:
&lt;/h4&gt;

&lt;p&gt;If the first result generated by Copilot is not suitable, it is easy to choose another one that may be more relevant. The number of results generated can even be changed in the AI settings.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-the-ai-takes-into-account-the-context"&gt;
  &lt;/a&gt;
  - The AI takes into account the context: 👂
&lt;/h4&gt;

&lt;p&gt;It can be given feedback to help it find relevant results. Moreover, it takes into account the previously written code, which allows it to adapt to our code. It constantly tries to understand our project. A funny example: the AI even adds its own comments! It's magical!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-it-allows-to-discover-apis-more-easily-ez"&gt;
  &lt;/a&gt;
  - It allows to discover APIs more easily: EZ
&lt;/h4&gt;

&lt;p&gt;Copilot allows you to generate functions to call APIs, it's great if you want to save time, but personally I don't recommend to do that if you are still a beginner. Don't forget that it's Github Copilot, not Github Pilot ^^.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rIlZqjm3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az9pj6pphye1l8ldmt1y.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rIlZqjm3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az9pj6pphye1l8ldmt1y.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-copilot-is-improving-day-by-day"&gt;
  &lt;/a&gt;
  - Copilot is improving day by day: 💪
&lt;/h4&gt;

&lt;p&gt;As announced by Github, when you accept the proposed code, it may be sent to Microsoft services for the AI to continue training. The results will be more and more relevant.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iv-the-negative-points"&gt;
  &lt;/a&gt;
  IV/ The negative points
&lt;/h3&gt;

&lt;p&gt;However, all is not rosy with this AI ^^ :&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-there-is-a-legal-blur-"&gt;
  &lt;/a&gt;
  - There is a legal blur : ⚖️
&lt;/h4&gt;

&lt;p&gt;The AI is trained on code available on the Internet, but the owners may not necessarily agree to this use. However, the answers of the AI are based on these codes: you understand that on some points, it's a bit vague.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j_N4tGcn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqswyrqz3fo8zy2ev1io.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j_N4tGcn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqswyrqz3fo8zy2ev1io.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-the-ai-can-repeat-itself"&gt;
  &lt;/a&gt;
  - The AI can repeat itself: 🔁
&lt;/h4&gt;

&lt;p&gt;Although the AI has a system to avoid repetition, it happens that the AI creates two similar functions which can quickly become ugly.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-the-ai-does-not-use-the-latest-conventions"&gt;
  &lt;/a&gt;
  - The AI does not use the latest conventions:
&lt;/h4&gt;

&lt;p&gt;Indeed, Copilot tends to use old practices that nobody uses anymore and that make the code ugly. It can even become annoying when using some APIs, databases, etc...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-unfortunately-copilot-can-give-the-impression-to-beginners-to-know-how-to-use-it"&gt;
  &lt;/a&gt;
  - Unfortunately, Copilot can give the impression to beginners to know how to use it: 🧞
&lt;/h4&gt;

&lt;p&gt;Copilot helps developers to code, but beginners shouldn't use it too much : indeed, they will learn bad manners, and will think they know how to code, when in reality, it's not the case. So Copilot is great for senior developers, but probably not for beginners.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GOZL2HRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwf8a68fzkzbbt0u2sy8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GOZL2HRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwf8a68fzkzbbt0u2sy8.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#v-my-opinion-about-github-copilot"&gt;
  &lt;/a&gt;
  V/ My opinion about Github Copilot
&lt;/h3&gt;

&lt;p&gt;After using Github Copilot, I quickly realized that the AI was great to help the developer, but that it was not going to take our work. Indeed, it needs to be oriented, redirected to the solution. However, I was able to do some repetitive tasks, like coding a function to read data and show it, quite easily, which I liked. So you don't have to be afraid of Github Copilot.&lt;br&gt;
If I had to summarize in one line what Github Copilot is now, I would say that it is a form of intelligent StackOverflow, a little bit like a little brain that would know all the languages, algorithms, and that would try to help us by all means.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--14-IegtU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5ao2qrli4x9axiy47rn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--14-IegtU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5ao2qrli4x9axiy47rn.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vi-some-screens"&gt;
  &lt;/a&gt;
  VI/ Some screens
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;I let Copilot code a basic NN, here is the NN by Copilot... The good point is he even managed to create some functions that he coded separately for me right after !&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1DqJsGrG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q9mslxop7h0zs0cciubk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1DqJsGrG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q9mslxop7h0zs0cciubk.jpg" alt="I let Copilot code a basic NN, here is the NN by Copilot... The good point is he even managed to create some functions that he coded separately for me right after !"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I just asked him to code me a class to create Polynomes : in addition to defining them, I can do elementary operations with them, it's rather successful...&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NsfgfNg_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3g3sjvqci429biq809v.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NsfgfNg_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3g3sjvqci429biq809v.jpg" alt="I just asked him to code me a class to create Polynomes : in addition to defining them, I can do elementary operations with them, it's rather successful..."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But hey, not everything is perfect, and sometimes he makes a few little mistakes! He didn't respect the order here ^^ !&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tv_5b3Gf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rk4j5ctb0u52imvodgvd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tv_5b3Gf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rk4j5ctb0u52imvodgvd.jpg" alt="But hey, not everything is perfect, and sometimes he makes a few little mistakes! He didn't respect the order here ^^ !"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#if-you-liked-my-article-do-not-hesitate-to-share-it-but-also-to-give-me-your-feedback"&gt;
  &lt;/a&gt;
  If you liked my article, do not hesitate to share it, but also to give me your feedback
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#adrien"&gt;
  &lt;/a&gt;
  Adrien
&lt;/h6&gt;

</description>
      <category>github</category>
      <category>programming</category>
      <category>githubcopilot</category>
      <category>career</category>
    </item>
  </channel>
</rss>
