<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Get started with github</title>
      <author>Nikhil Bobade </author>
      <pubDate>Sat, 02 Oct 2021 07:43:13 +0000</pubDate>
      <link>https://dev.to/nikhil27b/get-started-with-github-2647</link>
      <guid>https://dev.to/nikhil27b/get-started-with-github-2647</guid>
      <description>&lt;p&gt;Hey guys hacktoberfest is started if you don’t know about GitHub or what is GitHub how its use so this is useful post for you.&lt;br&gt;
In this post you learn how to use GitHub and create your 1st pull request with using GitHub. and also after 4 successful pull request you will be get free t-shirt from hacktoberfest event. so learn and participate in event.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-github"&gt;
  &lt;/a&gt;
  What is GitHub:-
&lt;/h3&gt;

&lt;p&gt;GitHub is a web-based interface that uses Git, the open source version control software that lets multiple people make separate changes to web pages at the same time. As Carpenter notes, because it allows for real-time collaboration, GitHub encourages teams to work together to build and edit their site content.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github-account-and-create-repo-"&gt;
  &lt;/a&gt;
  GitHub Account and create repo :-
&lt;/h3&gt;

&lt;p&gt;1.go to github.com and simple create your account .&lt;br&gt;
2.Create a new repository&lt;br&gt;
3.To create a new repository, select New Repository from the + sign dropdown menu (you can see I've selected it in the upper-right corner in the image above).&lt;br&gt;
4.Enter a name for your repository (e.g., "portfolio") and click Create Repository).&lt;br&gt;
5.Your 1st repo is created. 😊🎉&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#now-we-are-moved-to-next-step-"&gt;
  &lt;/a&gt;
  Now we are moved to next step :-
&lt;/h4&gt;

&lt;p&gt;1.Download git from browser.&lt;br&gt;
2.&lt;a href="https://git-scm.com/"&gt;https://git-scm.com/&lt;/a&gt; .&lt;br&gt;
3.simple download and install the git software&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#simple-now-open-your-command-prompt-or-powershell"&gt;
  &lt;/a&gt;
  Simple now open your command prompt or PowerShell 💻
&lt;/h5&gt;

&lt;p&gt;1.Now we are Create folder for your project folder use this command (mkdir Demo).&lt;br&gt;
2.Change your terminal to the Demo directory with the command (cd Demo).&lt;br&gt;
3.Now create your 1st file readme file and save as (readme.md)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#yeah-now-its-time-to-add-our-file-in-github"&gt;
  &lt;/a&gt;
  yeah 😀 Now its time to add our file in GitHub
&lt;/h5&gt;

&lt;p&gt;1.Use command ( git init  )in terminal .&lt;br&gt;
2.and add that file in git like git add (filename) or git add . there are to add multiple file we are use ( git add . ).&lt;br&gt;
3.add your remote URL &lt;br&gt;
4.git remote add origin &lt;a href="https://github.com/"&gt;https://github.com/&lt;/a&gt;/Demo.git&lt;br&gt;
5.then use command for commit the changes ( git commit -m “first commit”&lt;br&gt;
6.After this you can be use git status to check the your files .&lt;br&gt;
if you want to change the branch use this command (git branch -m main)&lt;br&gt;
7.now its time to push your code  or files to GitHub&lt;br&gt;
8.Use git push  -u origin main &lt;/p&gt;

&lt;p&gt;Congratulations! 🎉🎉🎉 You have create your 1st requst to git now if you want to learn more comment git at this post or simple check github docs .&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank You.
&lt;/h5&gt;

&lt;p&gt;A collabration with Geeky4u Did you find it helpful let me know in comments.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How JavaScript Works🔥 🤖 [Visually Explained]</title>
      <author>John Doe</author>
      <pubDate>Sat, 02 Oct 2021 07:41:18 +0000</pubDate>
      <link>https://dev.to/johndoee/how-javascript-works-visually-explained-14i</link>
      <guid>https://dev.to/johndoee/how-javascript-works-visually-explained-14i</guid>
      <description>&lt;p&gt;JavaScript is one of the most loved and hated languages in the world. It is loved because it is potent. You can make a full-stack application by just learning JavaScript and nothing else. It is also hated because it behaves in unexpected and upsetting ways, which, if you're not invested in understanding the language, might make you hate it 💔.&lt;/p&gt;
&lt;p&gt;This blog will explain how JavaScript executes code in the browser, and we will learn it through animated gifs 😆. After reading this blog, you will be one step closer to become a Rockstar Developer 🎸😎 &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/magical-javascript-tips-for-every-web-developer/&amp;amp;ved=2ahUKEwi0xPfgnKvzAhUK8HMBHfwmC1AQFnoECAQQBQ&amp;amp;usg=AOvVaw1v-MANPn9WvzeIHX7EYsM8"&gt;How JavaScript Works🔥 🤖 [Visually Explained]&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Hacktoberfest 2021 is here!</title>
      <author>Shivam Jha</author>
      <pubDate>Sat, 02 Oct 2021 07:35:31 +0000</pubDate>
      <link>https://dev.to/shivamjjha/hacktoberfest-2021-is-here-4e83</link>
      <guid>https://dev.to/shivamjjha/hacktoberfest-2021-is-here-4e83</guid>
      <description>&lt;h3&gt;
  &lt;a href="#following-are-links-to-get-you-started"&gt;
  &lt;/a&gt;
  Following are links to get you started:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest Website&lt;/a&gt;&lt;br&gt;
&lt;a href="https://hacktoberfest.digitalocean.com/register"&gt;Register for Hacktoberfest 2021&lt;/a&gt;&lt;br&gt;
&lt;a href="https://hacktoberfest.digitalocean.com/resources/qualitystandards"&gt;Hacktoberfest 2021 - Quality Standards&lt;/a&gt;&lt;br&gt;
&lt;a href="https://hacktoberfest.digitalocean.com/resources#values"&gt;Values&lt;/a&gt;&lt;br&gt;
&lt;a href="https://hacktoberfest.digitalocean.com/resources/participation"&gt;Hacktoberfest 2021 - Participation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://hacktoberfest.digitalocean.com/faq"&gt;FAQs&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/devteam/hacktoberfest-2021-is-here-4a3l"&gt;A great dev post summing up Hacktoberfest 2021&lt;/a&gt;&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
    </item>
    <item>
      <title>blocked by CORS policy? CORS Proxy is Solution 😎</title>
      <author>Rajesh Joshi</author>
      <pubDate>Sat, 02 Oct 2021 07:18:27 +0000</pubDate>
      <link>https://dev.to/rajeshj3/blocked-by-cors-policy-cors-proxy-is-solution-5ck8</link>
      <guid>https://dev.to/rajeshj3/blocked-by-cors-policy-cors-proxy-is-solution-5ck8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-cors"&gt;
  &lt;/a&gt;
  ❓ What is CORS?
&lt;/h2&gt;

&lt;p&gt;Cross-Origin Resource Sharing (CORS) is an HTTP-header based mechanism that allows a server to indicate any origins (domain, scheme, or port) other than its own from which a browser should permit loading of resources. CORS also relies on a mechanism by which browsers make a “preflight” request to the server hosting the cross-origin resource, in order to check that the server will permit the actual request. In that preflight, the browser sends headers that indicate the HTTP method and headers that will be used in the actual request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uv8vudaC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kiupwc46knz12xffdvk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uv8vudaC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kiupwc46knz12xffdvk.png" alt="CORS Error Example"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-is-the-solution"&gt;
  &lt;/a&gt;
  🤔 What is the Solution?
&lt;/h3&gt;

&lt;p&gt;The solution to bypass CORS is to use a &lt;strong&gt;Proxy&lt;/strong&gt;. A Proxy server, that forwards your request &lt;strong&gt;as it is&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;But, problems with a Proxy Server is to manage the server, optimize the server, handle traffic, use of Kubernetes to minimize bills, and what not.&lt;/p&gt;

&lt;p&gt;😭😭 So what is the solution to this?&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#cors-proxy"&gt;
  &lt;/a&gt;
  ✨ CORS Proxy ✨
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://rapidapi.com/joshirajesh448@gmail.com/api/cors-proxy1/"&gt;CORS Proxy&lt;/a&gt; provides &lt;strong&gt;Free Service&lt;/strong&gt; to bypass CORS.&lt;/p&gt;

&lt;p&gt;CORS Proxy API uses backend technologies to complete your request for any third party resource . You are just required to send all request data (ie. URL, params, body, headers, cookies, etc.) to CORS Proxy API End-Point in the body, CORS Proxy will then forward your request in an optimized manner.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sample-code"&gt;
  &lt;/a&gt;
  Sample Code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://cors-proxy1.p.rapidapi.com/v1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content-type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;x-rapidapi-host&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cors-proxy1.p.rapidapi.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;x-rapidapi-key&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;YOUR-x-rapidapi-key&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.gymslate.ml/auth/login/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user@mail.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SecurePassword&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="na"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#free-to-use"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Free&lt;/strong&gt; to use
&lt;/h3&gt;

&lt;p&gt;CORS Proxy offers &lt;strong&gt;FREEMIUM&lt;/strong&gt; pricing model. So Yes, we can start with the &lt;a href="https://rapidapi.com/joshirajesh448@gmail.com/api/cors-proxy1/pricing"&gt;&lt;strong&gt;Free Plan&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Di5zNYVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adfdogvx8ofx9rxhaoe2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Di5zNYVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adfdogvx8ofx9rxhaoe2.png" alt="CORS Proxy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 1. Create a Free Account at &lt;a href="https://rapidapi.com/"&gt;Rapid API&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 2. Freely Subscribe to &lt;a href="https://rapidapi.com/joshirajesh448@gmail.com/api/cors-proxy1/pricing"&gt;Basic Plan&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 3: Test API End Points&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MwxSEK9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m1lz6k6g823hd2e61gsf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MwxSEK9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m1lz6k6g823hd2e61gsf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 4: Integrate with your Frontend Project&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#no-more-cors-errors"&gt;
  &lt;/a&gt;
  🥳 No more CORS Errors 🥳
&lt;/h3&gt;




&lt;p&gt;Cheers&lt;/p&gt;

&lt;p&gt;🤓 Happy Coding&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>cors</category>
      <category>webdev</category>
      <category>node</category>
    </item>
    <item>
      <title>10 Awesome Github Repos Every Web Developer Should Know</title>
      <author>John Doe</author>
      <pubDate>Sat, 02 Oct 2021 06:45:38 +0000</pubDate>
      <link>https://dev.to/johndoee/10-awesome-github-repos-every-web-developer-should-know-3eb2</link>
      <guid>https://dev.to/johndoee/10-awesome-github-repos-every-web-developer-should-know-3eb2</guid>
      <description>&lt;p&gt;&lt;span&gt;Here I list 10 excellent JavaScript based GitHub resources that will help you to understand the language better and help you to write clean code. This list is based on my personal preference. &lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;ReadUI&amp;amp;quot More: &lt;b&gt;&lt;a href="https://news.google.com/articles/CAIiEHRNZDbK-6L3wLhhd1mvgX8qGQgEKhAIACoHCAow7-ynCzDc978DMKOIlgc?hl=en-US&amp;amp;gl=US&amp;amp;ceid=US%3Aen"&gt;10 Awesome Github Repos Every Web Developer Should Know&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>Video vs. Interactive and Multi-Media Content for Programming Courses</title>
      <author>Grégory D'Angelo</author>
      <pubDate>Sat, 02 Oct 2021 06:38:12 +0000</pubDate>
      <link>https://dev.to/alterclass/video-vs-interactive-and-multi-media-content-for-programming-courses-5bie</link>
      <guid>https://dev.to/alterclass/video-vs-interactive-and-multi-media-content-for-programming-courses-5bie</guid>
      <description>&lt;p&gt;At some point in our career, we all have watched coding tutorials on YouTube or followed some coding courses on Udemy to stay up to date on a specific technology or learn completely new skills. Myself, included.&lt;/p&gt;

&lt;p&gt;And as an instructor, creating those video-based and coding-along courses/tutorials are great as it helps to quickly and easily share our knowledge on a topic by screencasting our code on VS Code.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But here's the catch.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The resources created this way that we share for free on YouTube or through paid courses on Udemy (or elsewhere) are passive learning and do not help our viewers.&lt;/p&gt;

&lt;p&gt;Who wants in 2021 to sit for hours in front of a screen watching someone coding, especially after being forced at home during the COVID-19 pandemic?&lt;/p&gt;

&lt;p&gt;Plus, I'm asking you. Have you ever applied the skills taught in these videos in a real-world project?&lt;/p&gt;

&lt;p&gt;Are you even able to remember what you have seen from those videos a few weeks later?&lt;/p&gt;

&lt;p&gt;Or, in other words, are you really learning something from those video-based courses apart from a few tips here and there?&lt;/p&gt;

&lt;p&gt;Finally, I want you to think about it. Is the coding-along format really efficient to teach a new skill in software development?&lt;/p&gt;

&lt;p&gt;It is what I will explore in this article and provide you with a better alternative based on interactive and multi-media content where your students can learn at their own pace and practice along the way.&lt;/p&gt;

&lt;p&gt;I will cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#whats-wrong-with-video-based-and-coding-along-courses"&gt;What's wrong with video-based and coding-along courses?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-should-you-use-interactive-and-multi-media-content"&gt;Why should you use interactive and multi-media content?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#whats-wrong-with-videobased-and-codingalong-courses"&gt;
  &lt;/a&gt;
  What's wrong with video-based and coding-along courses?
&lt;/h2&gt;

&lt;p&gt;In some way, video-based only courses are a double-edged sword. Let me explain.&lt;/p&gt;

&lt;p&gt;On one side, platforms like YouTube or Udemy have allowed people to share an incredible amount of high-skilled knowledge on the internet, either for free or a few bucks. In addition, creating videos has become very easy and inexpensive as anyone with a smartphone can do it.&lt;/p&gt;

&lt;p&gt;As a consequence, it has allowed more and more people across the globe to access this knowledge and acquire some kind of education through those resources.&lt;/p&gt;

&lt;p&gt;However, on the other side, video-based only courses are by far not the best way to learn any skill as practical as programming or software development in general.&lt;/p&gt;

&lt;p&gt;As I often say, &lt;strong&gt;you don't learn how to drive a car or be a better driver only by watching others&lt;/strong&gt; unless you are an artificial intelligence. Software development is no different.&lt;/p&gt;

&lt;p&gt;Coding requires a significant amount of practice to really acquire the skill and being able to use it in different situations outside of the classroom.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/J9UXcyVW6OYN2fH0Sr/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/J9UXcyVW6OYN2fH0Sr/giphy.gif" alt="Let's practice!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Indeed, if you just stay passive in front of your screen, watching the instructor building an application with X and Y technologies, then there is a good chance that you won't remember anything. And even if you try to code along by pausing the video several times along the way and reproducing instruction-by-instruction what the instructor is typing, I bet you won't be able to apply what you've "&lt;em&gt;learned&lt;/em&gt;" in another context/project.&lt;/p&gt;

&lt;p&gt;Learning this way is not practical at all, let alone fun.&lt;/p&gt;

&lt;p&gt;In summary, &lt;strong&gt;in video-based only (or coding-along) courses, the skill taught do not stick for long or at all, and worst than that, you rarely can use it elsewhere&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Moreover, for an instructor, producing high-quality video content can be challenging and sometimes requires expensive gear (such as a good microphone, a decent camera if you plan to film yourself, etc...). I don't even mention the time needed to film and edit all those videos. Plus, if you need to update some content of your course because the web framework you are teaching about has released a new version, you'll have to re-record entire videos.&lt;/p&gt;

&lt;p&gt;Nevertheless, videos are an excellent medium as part of a multi-media content course to emphasize or show something specific such as before asking your students to complete an exercise or to give them your solution of a coding assignment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-use-interactive-and-multimedia-content"&gt;
  &lt;/a&gt;
  Why should you use interactive and multi-media content?
&lt;/h2&gt;

&lt;p&gt;From now on, you should be convinced (I hope so) that videos only is not great to teach and learn technical skills.&lt;/p&gt;

&lt;p&gt;Students need high-quality content which is interactive, practical, and allows them to learn at their own pace by practicing over and over again until they get it.&lt;/p&gt;

&lt;p&gt;In case you are still not convinced about it, check out &lt;a href="https://www.failory.com/interview/css-for-js-developers"&gt;how Josh Comeau made $550k in revenue&lt;/a&gt; when he opened the pre-orders for his CSS for JS Developers online course that combines videos, articles, interactive widgets, and mini-games.&lt;/p&gt;

&lt;p&gt;Impressive, isn't it?&lt;/p&gt;

&lt;p&gt;So, why using several media types and building an interactive online course is so important?&lt;/p&gt;

&lt;p&gt;One of the main reasons is that people are not looking to learn a new skill or stay up to date just for fun. No, people are looking to acquire real employable skills which could help them scale up their careers.&lt;/p&gt;

&lt;p&gt;When creating an online course, you have to think about the value you provide to your students, right from the &lt;a href="https://alterclass.io/blog/how-to-make-money-selling-courses-online-in-2021-as-a-developer#1-choose-the-right-topic"&gt;choice of the course topic&lt;/a&gt; to the &lt;a href="https://alterclass.io/blog/how-to-make-money-selling-courses-online-in-2021-as-a-developer#2-create-your-online-course"&gt;content creation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is essential you always think about what problem(s) you are solving with your online course for your students and how they could get the most out of it in their career.&lt;/p&gt;

&lt;p&gt;All this to say that you need way more than just passive learning. Indeed, no one will want to recruit someone that claims to know how to create web applications with React JS only after watching videos passively on YouTube or Udemy and reproducing every keystroke from the instructor without thinking by himself.&lt;/p&gt;

&lt;p&gt;You need to make your students think and really get a grasp of what you are teaching. The only way I know is by making your students practice by themself (with some guidance from you, of course), make mistakes, think and try again, and build something meaningful that they would be proud of. &lt;strong&gt;Large and real-world projects&lt;/strong&gt; are a great way to do that.&lt;/p&gt;

&lt;p&gt;Also, they need to learn gradually and be reassured that they completely understand everything from what they are learning. As the instructor, you could do that by providing them with &lt;strong&gt;practical exercises&lt;/strong&gt;, &lt;strong&gt;quizzes&lt;/strong&gt;, and &lt;strong&gt;mini-challenges&lt;/strong&gt; for example.&lt;/p&gt;

&lt;p&gt;So, instead of showing everything to your students through videos only, and giving them no time to think and assess their knowledge, &lt;strong&gt;use several types of media throughout your online course and make your course as interactive as possible&lt;/strong&gt;. Your students will thank you for that as their learning experience will be richer and more fun, and they will feel more engaged.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ejnmku9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.io/assets/blog/interactive-multi-media-content.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ejnmku9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.io/assets/blog/interactive-multi-media-content.jpeg" alt="Interactive and multi-media content"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started 🚀
&lt;/h2&gt;

&lt;p&gt;Alright! Now that you know how important it is to create online courses based on interactive multi-media content, you can start building your own online course.&lt;/p&gt;

&lt;p&gt;The easiest way to get started is to &lt;a href="https://alterclass.io/teaching"&gt;sign up&lt;/a&gt; for a &lt;strong&gt;free&lt;/strong&gt; account on &lt;a href="https://alterclass.io/teaching"&gt;AlterClass&lt;/a&gt; and start creating your online courses right away!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Learn git concepts, not commands</title>
      <author>John Doe</author>
      <pubDate>Sat, 02 Oct 2021 06:30:51 +0000</pubDate>
      <link>https://dev.to/johndoee/learn-git-concepts-not-commands-2426</link>
      <guid>https://dev.to/johndoee/learn-git-concepts-not-commands-2426</guid>
      <description>&lt;p&gt;&lt;span&gt;An interactive git tutorial meant to teach you how git works, not just which commands to execute.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;So, you want to use git right?&lt;/p&gt;
&lt;p&gt;But you don't just want to learn commands, you want to understand what you're using?&lt;/p&gt;
&lt;p&gt;Then this is meant for you!&lt;/p&gt;
&lt;p&gt;Let's get started! &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/14-vs-code-shortcuts-to-supercharge-your-productivity/&amp;amp;ved=2ahUKEwj5kfvtjKvzAhVF7HMBHVPzDHEQFnoECCgQAQ&amp;amp;usg=AOvVaw0Ia8FkMuCv3FIfqOJAPEK5"&gt;Learn git concepts, not commands&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>What is a difference between git pull and git fetch?</title>
      <author>Dhruv Rajkotia</author>
      <pubDate>Sat, 02 Oct 2021 06:18:57 +0000</pubDate>
      <link>https://dev.to/dhruv_rajkotia/what-is-a-difference-between-git-pull-and-git-fetch-4iop</link>
      <guid>https://dev.to/dhruv_rajkotia/what-is-a-difference-between-git-pull-and-git-fetch-4iop</guid>
      <description>&lt;p&gt;As we all know that git commands become mandatory if you are software developer. So here today I wanted to share basic understanding of the git two commands. &lt;strong&gt;Git pull vs fetch.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#situation"&gt;
  &lt;/a&gt;
  Situation:
&lt;/h3&gt;

&lt;p&gt;If there were some changes recently made to your remote repository and you want to incorporate them into your local copy. then you have basically a 2 options one is git pull and another one is git fetch. &lt;/p&gt;

&lt;p&gt;So, Now question arise what’s the difference between Git pull vs fetch.&lt;/p&gt;

&lt;p&gt;Now let’s understand with some diagram so probably you will never forgot the difference :) &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NNoAIsvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5uwwl60idrpjm4zruse4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NNoAIsvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5uwwl60idrpjm4zruse4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As per the above diagram The &lt;code&gt;git fetch&lt;/code&gt; command downloads commits, files, and refs from a remote repository into your local repo but not update your local repo's working state. Fetching is what you do when you want to see what everybody else has been working on.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git pull&lt;/code&gt; is the more aggressive alternative; it will download the remote content for the active local branch and immediately execute &lt;code&gt;git merge&lt;/code&gt; to create a merge commit for the new remote content. If you have pending changes in progress this will cause conflicts and kick-off the merge conflict resolution flow.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-we-should-use-git-fetch"&gt;
  &lt;/a&gt;
  When we should use git fetch?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If you only want to see all of the current branches and changes in your remote repository without affecting your current local copy then Git fetch can get you all of the information you need.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#when-we-should-use-git-pull"&gt;
  &lt;/a&gt;
  When we should use git pull?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;when you are ready to get latest updates from your remote repository and adding to your local copy. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's all folks, Hope you got the idea regarding Git pull vs fetch. Please like the post if you loved it and please let me know if you have any question in comments. &lt;/p&gt;

</description>
      <category>git</category>
    </item>
    <item>
      <title>Increase PageSpeed In   Blogger Website (My Tips)</title>
      <author>Bhavyashah</author>
      <pubDate>Sat, 02 Oct 2021 06:17:55 +0000</pubDate>
      <link>https://dev.to/bhavyashah/increase-pagespeed-in-blogger-website-my-tips-42f</link>
      <guid>https://dev.to/bhavyashah/increase-pagespeed-in-blogger-website-my-tips-42f</guid>
      <description>&lt;p&gt;Are you a website owner, looking forward to &lt;a href="https://www.blogtriggers.com/2021/06/boost-your-pagespeed-in-blogger.html"&gt;improve your page speed in your website&lt;/a&gt; If yes, then this article is for you. After reading this one article, you will be able to significantly improve the page speed in your website that will increase the user satisfaction and will also lead to increased search engine rankings.&lt;/p&gt;

&lt;p&gt;1) Use Fast Loading Template like Fletro pro Template, Median UI template, Freebify etc...&lt;/p&gt;

&lt;p&gt;2) Make a habit of Using a WebP Image Instead of PNG,JPG.&lt;/p&gt;

&lt;p&gt;3) Use CloudFlare CDN to increase PageSpeed &amp;amp; Protect your website from Malware &amp;amp; Randsomware attack etc...&lt;/p&gt;

&lt;p&gt;4) Reduced Unused JavaScript script code &amp;amp; Unused JavaScript Library.&lt;/p&gt;

&lt;p&gt;5) Avoid Image First In Starting of Posts Paste your Image in Between of Posts.&lt;/p&gt;

&lt;p&gt;6) Avoid Too many Ads in Website this will increase your bounce rate &amp;amp; also decrease your User experience.&lt;/p&gt;

&lt;p&gt;7) Show Less No of Posts in Homepage to help users to know our more posts of website.&lt;/p&gt;

&lt;p&gt;8) Use maximum HTML &amp;amp; CSS Languages because HTML &amp;amp; CSS Language Doesn't decrease your PageSpeed.&lt;/p&gt;

&lt;p&gt;9) Don't Use Popup In your Website it decrease your Pagespeed Drastically.&lt;/p&gt;

&lt;p&gt;10) Don't Use Stylish Custom Fonts in Blogger template. Use Instead of CSS font-family attribute.&lt;/p&gt;

&lt;p&gt;This is the 10 Tips to Increase PageSpeed in Blogger Website. &lt;/p&gt;

&lt;p&gt;I hope you like this article If you like then Please Share with your Friends.&lt;/p&gt;

</description>
      <category>pagespeed</category>
      <category>website</category>
      <category>seo</category>
      <category>tips</category>
    </item>
    <item>
      <title>9 Projects you can do to become a Frontend Master</title>
      <author>John Doe</author>
      <pubDate>Sat, 02 Oct 2021 06:01:11 +0000</pubDate>
      <link>https://dev.to/johndoee/9-projects-you-can-do-to-become-a-frontend-master-32cd</link>
      <guid>https://dev.to/johndoee/9-projects-you-can-do-to-become-a-frontend-master-32cd</guid>
      <description>&lt;p&gt; &lt;/p&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Whatever you do, it's always beneficial to have the right tools at your disposal. I love working remotely and am a big advocate of doing remote software development. Therefore, I always strive to have the best equipment available to be as productive as possible. Writing posts like this constantly takes a lot of time. Luckily iVanky helped me out and sponsored this post so that I can concentrate on writing. I recently had the chance to test out one of their hottest products, a dual USB-C Docking Station that allows me to connect both my wide-screen monitors to my MacBook with Dual 4K@60Hz display connectivity. It also supports up to 96W laptop charging, which is awesome. If you are in a situation like me and want to upgrade your equipment, check out this and their other products! And now comes the article: &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/9-projects-you-can-do-to-become-a-front-end-master/&amp;amp;ved=2ahUKEwjE9MOlhqvzAhVsxzgGHTKCBYIQFnoECAQQAQ&amp;amp;usg=AOvVaw2t7-_QAPDVzRhEVlb4h7WW"&gt;9 Projects you can do to become a Frontend Master &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;





</description>
    </item>
    <item>
      <title>Glass Morphism Simple Interest Calculator Using Pure HTML, CSS &amp; JS.</title>
      <author>Technical Vandar</author>
      <pubDate>Sat, 02 Oct 2021 05:50:57 +0000</pubDate>
      <link>https://dev.to/technicalvandar885/glass-morphism-simple-interest-calculator-using-pure-html-css-js-414m</link>
      <guid>https://dev.to/technicalvandar885/glass-morphism-simple-interest-calculator-using-pure-html-css-js-414m</guid>
      <description>&lt;p&gt;Simple Interest Calculator Using Pure HTML, CSS &amp;amp; JS.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  SOURCE CODE:
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML:
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Simple Interest Calculator&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Simple Interest Calculator&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"inpSection"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"amt"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"amount"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Enter Total Amount:   &lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"amount"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"amount"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter Total Amount"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"time"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"time"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Enter Time:   &lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"time"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"time"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter Time"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"rate"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"rate"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Rate: &lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"rate"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"rate"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter Rate"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"Calculate()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Calculate&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"result"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"si"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css-code"&gt;
  &lt;/a&gt;
  CSS CODE:
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;user-select&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;90deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;179&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;52&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;178&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;182&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;49&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;28%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;106&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;159&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;56%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;137&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;190&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;78%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;212&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.container&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;214&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;62vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;28vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;radial-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;214&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;224&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;217&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;217&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="nt"&gt;h1&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.inpSection&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;51&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;650&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;214&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;202&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;35px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.button&lt;/span&gt; &lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;110px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;650&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;224&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;217&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;217&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.result&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;h3&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Calculate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amount&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;time&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;let&lt;/span&gt;  &lt;span class="nx"&gt;SI&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;si&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The Total Simple Intrest Is: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;SI&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#youtube-tutorial"&gt;
  &lt;/a&gt;
  Youtube Tutorial
&lt;/h1&gt;


&lt;h2&gt;&lt;a href="https://www.youtube.com/watch?v=kv55b8OG0T4"&gt;Watch Here&lt;/a&gt;&lt;/h2&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;h2&gt;
  &lt;a href="#find-me-on"&gt;
  &lt;/a&gt;
  Find Me On:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.facebook.com/technicalvandar"&gt;Facebook&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/technicalvandar"&gt;Youtube&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/Technical-Vandar-885/"&gt;Github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>A Beginner's Guide To Solidity - Blockchain Development</title>
      <author>Suhail Kakar</author>
      <pubDate>Sat, 02 Oct 2021 05:47:06 +0000</pubDate>
      <link>https://dev.to/suhailkakar/a-beginner-s-guide-to-solidity-blockchain-development-439b</link>
      <guid>https://dev.to/suhailkakar/a-beginner-s-guide-to-solidity-blockchain-development-439b</guid>
      <description>&lt;p&gt;Solidity is an object-oriented, high-level programming language for creating smart contracts on the blockchain that automate transactions. The language was created by participants to the Ethereum project when it was proposed in 2014. This language is mostly used to make smart contracts on the Ethereum blockchain.&lt;/p&gt;

&lt;p&gt;According to its documentation, "Solidity is a curly-bracket language. It is influenced by C++, Python, and JavaScript, and is designed to target the Ethereum Virtual Machine (EVM)."&lt;/p&gt;

&lt;p&gt;Solidity is also considered a dialect of JavaScript. This implies that if you know JavaScript, learning Solidity should be simple. Before learning more about solidity let's understand some basic terms of blockchain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#ethereum-virtual-machine"&gt;Ethereum Virtual Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#smart-contract"&gt;Smart Contract&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#environment-setup"&gt;Environment Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reserved-keywords"&gt;Reserved Keywords&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#importing-other-files-in-solidity"&gt;Importing other files in Solidity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#comments-in-solidity"&gt;Comments in Solidity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#variables-in-solidity"&gt;Variables in Solidity&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#state-variable"&gt;State variable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#local-variable"&gt;Local Variable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#operators-in-solidity"&gt;Operators in Solidity&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#arithmetic-operators"&gt;Arithmetic Operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#relational-operators"&gt;Relational Operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#logical-operators"&gt;Logical Operators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#ethereum-virtual-machine"&gt;
  &lt;/a&gt;
  Ethereum Virtual Machine
&lt;/h2&gt;

&lt;p&gt;The Ethereum Virtual Machine (EVM) is the Ethereum smart contract runtime environment. The Ethereum Virtual Machine is focused on providing security and allowing machines all around the world to execute programs.&lt;/p&gt;

&lt;p&gt;Virtual machines effectively create a layer of abstraction between the code and the machine that executes it. It is required to promote software portability and to ensure that programs are isolated from one another and from their host.&lt;/p&gt;

&lt;p&gt;The Ethereum Virtual Machine was created to serve as a runtime environment for Ethereum-based smart contracts.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IihNMXPD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633147481115/4fOoXr7hf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IihNMXPD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633147481115/4fOoXr7hf.png" alt="Solidity (2).png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#smart-contract"&gt;
  &lt;/a&gt;
  Smart Contract
&lt;/h2&gt;

&lt;p&gt;A smart contract is a decentralized program that responds to events by executing business logic. The exchange of money, delivery of services, unlocking of information controlled by digital rights management, and other forms of data manipulation, such as altering the name on a property title, are all possible outcomes of smart contract execution. Smart contracts are often written in Solidity.&lt;/p&gt;

&lt;p&gt;Smart contract languages like Solidity cannot be directly executed by the Ethereum Virtual Machine. They are instead converted to low-level machine instructions called opcodes.&lt;/p&gt;

&lt;p&gt;Now that you have an idea about EVM and Smart Contract, we can continue learning about the Solidity&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#environment-setup"&gt;
  &lt;/a&gt;
  Environment Setup
&lt;/h2&gt;

&lt;p&gt;Before installing Solidity, you need to make sure that you have Node.js and NPM installed on your computer. To install node.js in your Linux (Ubuntu) you can follow this   &lt;a href="https://blog.suhailkakar.com/how-to-install-nodejs-and-npm-on-ubuntu"&gt;article&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Once you have successfully installed Node.js and NPM in your machine, you can proceed to install Solidity compiler as below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo npm install -g solc 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The command above will install the Solcjs and make it available globally throughout the system. Now you can run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;solcjs --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything goes fine, you see something similar to below in your terminal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;0.8.9+commit.e5eed63a.Emscripten.clang
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You can also use an online editor called Remix IDE to Compile and Run your Solidity code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#reserved-keywords"&gt;
  &lt;/a&gt;
  Reserved Keywords
&lt;/h2&gt;

&lt;p&gt;Following are the reserved keywords in Solidity:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;abstract&lt;/td&gt;
&lt;td&gt;after&lt;/td&gt;
&lt;td&gt;alias&lt;/td&gt;
&lt;td&gt;apply&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auto&lt;/td&gt;
&lt;td&gt;case&lt;/td&gt;
&lt;td&gt;catch&lt;/td&gt;
&lt;td&gt;copyof&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;default&lt;/td&gt;
&lt;td&gt;define&lt;/td&gt;
&lt;td&gt;final&lt;/td&gt;
&lt;td&gt;immutable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;implements&lt;/td&gt;
&lt;td&gt;in&lt;/td&gt;
&lt;td&gt;inline&lt;/td&gt;
&lt;td&gt;let&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;macro&lt;/td&gt;
&lt;td&gt;match&lt;/td&gt;
&lt;td&gt;mutable&lt;/td&gt;
&lt;td&gt;null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;of&lt;/td&gt;
&lt;td&gt;override&lt;/td&gt;
&lt;td&gt;partial&lt;/td&gt;
&lt;td&gt;promise&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;reference&lt;/td&gt;
&lt;td&gt;relocatable&lt;/td&gt;
&lt;td&gt;sealed&lt;/td&gt;
&lt;td&gt;sizeof&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;static&lt;/td&gt;
&lt;td&gt;supports&lt;/td&gt;
&lt;td&gt;switch&lt;/td&gt;
&lt;td&gt;try&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;typedef&lt;/td&gt;
&lt;td&gt;typeof&lt;/td&gt;
&lt;td&gt;unchecked&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#importing-other-files-in-solidity"&gt;
  &lt;/a&gt;
  Importing other files in Solidity
&lt;/h2&gt;

&lt;p&gt;Importing a file in Solidity is similar to JavaScript, to import a file you can simply write&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;file&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All global symbols from the "file" are imported into the current global scope by the above statement. But if you want to create a new global symbol someName with all the global symbols from "file" as members, you can write&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;someName&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;file&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#comments-in-solidity"&gt;
  &lt;/a&gt;
  Comments in Solidity
&lt;/h2&gt;

&lt;p&gt;Just like other programming languages, Solidity support both single-line and multi-line comments. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start the line with &lt;code&gt;//&lt;/code&gt; to include a single-line comment.&lt;/li&gt;
&lt;li&gt;Start with &lt;code&gt;/*&lt;/code&gt; and end with &lt;code&gt;*/&lt;/code&gt; to include a multi-line comment.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="c1"&gt;// This is a single-line comment&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="cm"&gt;/*
   but this is a multi-line comment in solidity
   It is easy, right?
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#variables-in-solidity"&gt;
  &lt;/a&gt;
  Variables in Solidity
&lt;/h2&gt;

&lt;p&gt;There are mainly two types of variables available in Solidity.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Local Variables&lt;/strong&gt;: Variables with values that will &lt;strong&gt;persist&lt;/strong&gt; till the function is completed&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;State Variables&lt;/strong&gt;: Variables whose values are kept in a contract storage system permanently&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#state-variable"&gt;
  &lt;/a&gt;
  State variable
&lt;/h3&gt;

&lt;p&gt;State variables store the value permanently in the contract storage. Each method should have its own scope, and state variables should be declared outside of any defined functions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RBizBwTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633149710337/iEqkLKqc4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RBizBwTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633149710337/iEqkLKqc4.png" alt="State variable.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#local-variable"&gt;
  &lt;/a&gt;
  Local Variable
&lt;/h3&gt;

&lt;p&gt;A local variable's context is contained within the function, and it cannot be retrieved from outside of it. These variables are typically used to store temporary values.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GjlVoHkQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633149968342/Cp9CXU1Bv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GjlVoHkQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633149968342/Cp9CXU1Bv.png" alt="Local variable.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#operators-in-solidity"&gt;
  &lt;/a&gt;
  Operators in Solidity
&lt;/h2&gt;

&lt;p&gt;Operators are important in every programming language because they establish the groundwork for the programming. Similarly, the functionality of Solidity is also incomplete without the use of operators.&lt;/p&gt;

&lt;p&gt;Solidity supports the following types of operators:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Arithmetic Operators&lt;/li&gt;
&lt;li&gt;Relational Operators&lt;/li&gt;
&lt;li&gt;Logical Operators&lt;/li&gt;
&lt;li&gt;Bitwise Operators&lt;/li&gt;
&lt;li&gt;Assignment operators&lt;/li&gt;
&lt;li&gt;Conditional Operators&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However in this article we are going to study only 3 of them but in future article I will try to explain all of them :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arithmetic-operators"&gt;
  &lt;/a&gt;
  Arithmetic Operators
&lt;/h3&gt;

&lt;p&gt;These operators are used to perform mathematical operations. &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Denotation&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Addition&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;Used to add two operands&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Subtraction&lt;/td&gt;
&lt;td&gt;–&lt;/td&gt;
&lt;td&gt;Used to subtract the second operand from first&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Multiplication&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;Used to multiply both operands&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Division&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;Used to divide numerator by denominator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Modulus&lt;/td&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;Gives the remainder after integer division&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Increment&lt;/td&gt;
&lt;td&gt;++&lt;/td&gt;
&lt;td&gt;Increases the integer value by one&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Decrement&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;td&gt;Decreases the integer value by one&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#relational-operators"&gt;
  &lt;/a&gt;
  Relational Operators
&lt;/h3&gt;

&lt;p&gt;These operators are used to compare two values&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Denotation&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Equal&lt;/td&gt;
&lt;td&gt;==&lt;/td&gt;
&lt;td&gt;Checks if two values are equal or not, returns true if equals, and vice-versa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Not Equal&lt;/td&gt;
&lt;td&gt;!=&lt;/td&gt;
&lt;td&gt;Checks if two values are equal or not, returns true if not equals, and vice-versa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Greater than&lt;/td&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;Checks if left value is greater than right or not, returns true if greater, and vice-versa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Less than&lt;/td&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;Checks if left value is less than right or not, returns true if less, and vice-versa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Greater than or Equal to&lt;/td&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;Checks if left value is greater and equal than right or not, returns true if greater and equal, and vice-versa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Less than or Equal to&lt;/td&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;td&gt;Checks if left value is less than right or not, returns true if less and equals, and vice-versa&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#logical-operators"&gt;
  &lt;/a&gt;
  Logical Operators
&lt;/h3&gt;

&lt;p&gt;These operators are used to combine two or more conditions&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Denotation&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Logical AND&lt;/td&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;Returns true if both conditions are true and false if one or both conditions are false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Logical OR&lt;/td&gt;
&lt;td&gt;||&lt;/td&gt;
&lt;td&gt;Returns true if one or both conditions are true and false when both are false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Logical NOT&lt;/td&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;Returns true if the condition is not satisfied else false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This is just part 2 of Web 3.0 however in the future we will discuss more about the solidity. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That is it for this article. I hope you found this article useful, if you need any help please let me know in the comment section. &lt;/p&gt;

&lt;p&gt;Would you like to buy me a coffee, You can do it &lt;a href="https://www.buymeacoffee.com/suhailkakar"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;👋 Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>blockchain</category>
    </item>
  </channel>
</rss>
