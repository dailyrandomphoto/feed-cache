<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>10 Reasons to Choose Ionic for Mobile Development</title>
      <author>Max Lynch</author>
      <pubDate>Thu, 22 Jul 2021 18:47:57 +0000</pubDate>
      <link>https://dev.to/ionic/10-reasons-to-choose-ionic-for-mobile-development-213a</link>
      <guid>https://dev.to/ionic/10-reasons-to-choose-ionic-for-mobile-development-213a</guid>
      <description>&lt;p&gt;The &lt;a href="https://ionicframework.com/"&gt;Ionic&lt;/a&gt; stack makes it easy to build iOS, Android, Desktop, and Progressive Web Apps using standard web technology. There are a lot of options for cross-platform mobile and web app development, so when should you or your team consider using Ionic?&lt;/p&gt;

&lt;p&gt;Here are 10 reasons you might want to choose Ionic:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-youre-a-web-developer"&gt;
  &lt;/a&gt;
  1. You’re a web developer
&lt;/h2&gt;

&lt;p&gt;One of the best reasons to choose Ionic is if you’re a web developer and want to stay in the web development world. The Ionic stack is built on standard web development technologies meaning you can build the majority of your app directly in a browser and use standard browser development tools and technologies, while still deploying and building a traditional native app.&lt;/p&gt;

&lt;p&gt;Other cross-platform toolkits don’t use the web development stack so aren’t the best fit for web developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-you-are-building-a-new-app-dev-engineering-team"&gt;
  &lt;/a&gt;
  2. You are building a new app dev engineering team
&lt;/h2&gt;

&lt;p&gt;Because the Ionic stack is focused on web developers, it’s the easiest cross-platform technology to hire for because there are considerably more web developers in the world than any other mobile technology. Any web developer can easily learn to build apps using the Ionic stack and it will be the most familiar to them, and have the best compatibility with popular web frameworks like React, Angular, and Vue.&lt;/p&gt;

&lt;p&gt;And hiring web developers means they can then develop for mobile, desktop, and web without the need to hire specialist teams for each platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-youre-an-enterprise-or-work-at-one"&gt;
  &lt;/a&gt;
  3. You’re an enterprise (or work at one)
&lt;/h2&gt;

&lt;p&gt;Ionic is the only cross-platform development stack that has &lt;a href="https://ionic.io/"&gt;Enterprise support and integrations&lt;/a&gt; for teams building employee and customer-facing apps. Ionic offers dedicated support, security features like &lt;a href="https://ionic.io/products/identity-vault"&gt;Biometrics&lt;/a&gt; and &lt;a href="https://ionic.io/products/auth-connect"&gt;Single Sign-on&lt;/a&gt;, and cloud services for &lt;a href="https://ionic.io/appflow"&gt;remote app updates, app builds, and app store distribution&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ionic is the industry leader in enterprise app development with hundreds of Fortune 1000 customers, and &lt;a href="https://www.g2.com/products/ionic/reviews"&gt;customers love it&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-you-have-existing-web-experiences-and-investments"&gt;
  &lt;/a&gt;
  4. You have existing web experiences and investments
&lt;/h2&gt;

&lt;p&gt;Because the Ionic stack is based around standard web development, it’s the only cross-platform solution that supports bringing existing web experiences, libraries, and other web code into an app.&lt;/p&gt;

&lt;p&gt;This is particularly important for enterprises or teams with a heavy web presence that want to bring those experiences into existing apps, such as traditional native apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-you-want-to-join-a-massive-community-of-developers"&gt;
  &lt;/a&gt;
  5. You want to join a massive community of developers
&lt;/h2&gt;

&lt;p&gt;Building apps with popular technologies makes it easier to hire for, easier to find partners, and easier to find resources on the web as you build your app.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://ionicframework.com/community"&gt;Ionic developer community&lt;/a&gt; is massive, with millions of developers around the world having built apps on the stack. Passionate community members build and share tutorials, add-ons, templates, and more, and developers can find help on the &lt;a href="https://forum.ionicframework.com/"&gt;Ionic forum&lt;/a&gt; and Stack Overflow.&lt;/p&gt;

&lt;p&gt;But Ionic is unique in that the community isn’t just limited to Ionic’s bubble. Because Ionic is based on standard web technologies, the addressable community goes beyond Ionic and overlaps with the broader web development community, such as the React, Angular, and Vue communities. This is critical when considering building out app dev teams because an Ionic team can be built with web developers, but other technologies require hiring specialists on languages and technologies that are not widely used.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-youre-on-a-tight-deadline"&gt;
  &lt;/a&gt;
  6. You’re on a tight deadline
&lt;/h2&gt;

&lt;p&gt;We often hear from teams who spent months building their app using a different technology, failed to hit deadlines, and then switched to Ionic and had the new app working and surpassing the old one within weeks.&lt;/p&gt;

&lt;p&gt;Ionic is highly productive because the web is highly productive. And one app can run on multiple platforms so development time can be upwards of 3-4x faster than traditional native development!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-you-want-your-apps-to-be-on-ios-android-web-and-even-desktop-on-day-one"&gt;
  &lt;/a&gt;
  7. You want your apps to be on iOS, Android, Web, and even desktop on day one
&lt;/h2&gt;

&lt;p&gt;Ionic apps run anywhere the web runs, and with the same code! And Ionic has official support for iOS, Android, Desktop, and Web, so teams can hit the ground running — targeting all these platforms and their respective user bases at launch.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-you-want-to-be-able-to-benefit-from-both-app-store-and-web-traffic"&gt;
  &lt;/a&gt;
  8. You want to be able to benefit from both app store &lt;em&gt;and&lt;/em&gt; web traffic
&lt;/h2&gt;

&lt;p&gt;Because the Ionic stack is based on web technology, teams can target the web and build a high-performance Progressive Web App (PWA).&lt;/p&gt;

&lt;p&gt;This means teams can reach users both in traditional app stores but also on the web and through Google search to maximize reach and have the best chance for a successful app project. We’ve &lt;a href="https://dev.to/ionic/app-store-or-web-why-not-both-3fa2"&gt;talked at length&lt;/a&gt; about how the Ionic stack gives you the best distribution optionality of any cross-platform technology in the market.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-you-already-have-web-developers-on-your-team"&gt;
  &lt;/a&gt;
  9. You already have web developers on your team
&lt;/h2&gt;

&lt;p&gt;If you already have web developers on your team or at your company, using the Ionic stack is a no-brainer! Web developers can easily become mobile developers by learning to use the Ionic stack, including Ionic’s &lt;a href="https://ionicframework.com/docs/components"&gt;100+ mobile-optimized UI components&lt;/a&gt; and &lt;a href="https://capacitorjs.com/"&gt;the native runtime&lt;/a&gt; that provides hooks into functionality on each platform. Ionic also supplies the means to build and deploy those apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-youre-a-student-or-new-to-app-development"&gt;
  &lt;/a&gt;
  10. You’re a student or new to app development
&lt;/h2&gt;

&lt;p&gt;Ionic is the most accessible platform for cross-platform app development. If you’re familiar with basic web development you can build real mobile apps (and desktop + web apps) today! &lt;/p&gt;

&lt;p&gt;Learning Ionic requires learning a few new HTML tags, some new JavaScript APIs for native functionality, and then just building your app using your framework of choice (React/Angular/Vue/etc).&lt;/p&gt;

&lt;p&gt;And the best thing is you continue to build your web development skills at the same time and don't have to change your technical career focus.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-started-today"&gt;
  &lt;/a&gt;
  Get started today
&lt;/h2&gt;

&lt;p&gt;There you have it, ten good reasons you and your team might want to adopt Ionic.&lt;/p&gt;

&lt;p&gt;If you're interested in building cross-platform apps using Ionic and modern web technologies, &lt;a href="https://ionicframework.com/"&gt;Get started&lt;/a&gt; with Ionic today.&lt;/p&gt;

</description>
      <category>ionic</category>
      <category>mobile</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>3 Lessons from React that can make you a better Svelte Developer</title>
      <author>Ryan Carniato</author>
      <pubDate>Thu, 22 Jul 2021 18:01:14 +0000</pubDate>
      <link>https://dev.to/this-is-learning/3-lessons-from-react-that-can-make-you-a-better-svelte-developer-23c4</link>
      <guid>https://dev.to/this-is-learning/3-lessons-from-react-that-can-make-you-a-better-svelte-developer-23c4</guid>
      <description>&lt;p&gt;Svelte is an amazing JavaScript framework that has been getting a lot of attention the last year. While it has been around since late 2016 it has finally passed the tipping point where there are a critical mass of developers enthusiastic about incorporating Svelte in their projects.&lt;/p&gt;

&lt;p&gt;What this means is we are seeing a lot of new developers trying Svelte for the first time as their first framework, and even more coming from having used other frameworks in the past.&lt;/p&gt;

&lt;p&gt;At a time like this there is a lot to be excited about. Svelte offers a shiny coat of paint on the tried and true patterns of frontend. However, we shouldn't be looking at this as an opportunity to throw out the baby with the bath water. There are learnt best practices and patterns from other frameworks that are incredibly important that may have not reached into Svelte vernacular but are every bit as relevant.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-keys-on-each"&gt;
  &lt;/a&gt;
  1. Keys on {#each}
&lt;/h2&gt;

&lt;p&gt;I've seen some talk about how keys are suddenly not needed on loops when moving to Svelte. This is of course completely unfounded. Svelte might not nag on you like React but not including them has exactly the same impact as it does in React. Svelte's implementation is equivalent to just muting those warnings.&lt;/p&gt;

&lt;p&gt;Why is React so insistent?&lt;br&gt;
&lt;a href="https://www.stefankrause.net/wp/?p=342"&gt;Keyed vs Non-Keyed&lt;/a&gt;&lt;br&gt;
&lt;a href="https://robinpokorny.medium.com/index-as-a-key-is-an-anti-pattern-e0349aece318#.qgzvk154k"&gt;Index as a Key is an Anti-Pattern&lt;/a&gt;&lt;br&gt;
&lt;a href="https://vuejs.org/v2/guide/list.html#Maintaining-State"&gt;Maintaining State&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Honestly, the list goes on. The problem boils down to any scenario where the DOM can hold nested state like forms, animations, 3rd party widgets, webcomponents, etc.. there is potential for inconsistent state and state corruption. Luckily adding a key to Svelte is so easy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{#each things as thing (thing.id)}
  &amp;lt;Thing name={thing.name}/&amp;gt;
{/each}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, keys aren't needed in every scenario but if you are writing general purpose libraries and components you should definitely as least support keyed iteration. The reason is that once you opt out of keying you've opted out all descendants. Any future changes or potential hiccups might be related to something further up in the hierarchy that you aren't even accounting for.&lt;/p&gt;

&lt;p&gt;Every framework author knows this but it is sometimes underplayed in docs for ease of onboarding. But this is an important idea that is omni-present in React and understanding it will help you be a better Svelte developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-single-value-stores-dont-scale"&gt;
  &lt;/a&gt;
  2. Single Value Stores don't Scale
&lt;/h2&gt;

&lt;p&gt;That is probably pretty obvious and Svelte's Store mechanism is very simple and powerful. In fact you can do pretty much anything with it. You can store a single value, jam a reducer in it, or even a state machine.&lt;/p&gt;

&lt;p&gt;But a single store is based off a single set of subscriptions. Every component that listens to that store triggers an update on any and every change to that store. This does not scale. There is also considerations around synchronization costs when distributed stores need to keep in sync with each other. Not all state needs to go in a single store but there is definitely a balance.&lt;/p&gt;

&lt;p&gt;It is the motivation for things like Selectors and Normalized forms in Redux, and complicated boilerplate around the Connect Higher Order Component. Or why Vue and MobX use proxies to track individual updates. Svelte Stores do not solve this problem alone and re-introducing this when the time is right will bring along a lot of the familiar boilerplate.&lt;/p&gt;

&lt;p&gt;It is really convenient that there is such a simple out of the box solution already present. Most Reactive frameworks actually do come with a reactive atom solution built in, like Vue's &lt;code&gt;ref&lt;/code&gt;, but interestingly enough it is not usually their recommended path for stores, based on how quickly it is outscaled.&lt;/p&gt;

&lt;p&gt;So this is a good thing to keep in mind as you grow your Svelte apps and are looking for data architecture wins on performance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-immutable-interfaces"&gt;
  &lt;/a&gt;
  3. Immutable Interfaces
&lt;/h2&gt;

&lt;p&gt;But Svelte just lets you assign values. Yes. I don't mean making everything immutable. The challenge of mutable data structures is once they leave the scope in which they are defined it is hard to know what to expect. The classic:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;someData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;someFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// do we know this is even true&lt;/span&gt;
&lt;span class="nx"&gt;someData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For all we know &lt;code&gt;value&lt;/code&gt; isn't even defined object anymore. You see this time and time again in system architecture the importance of providing read only interface with explicit setters. Using things like events or commands with a dispatch function. Even mutable reactive data stores like MobX recommend using Actions and have a strict mode to prevent writes except for where they are intended. In a reactive system this is doubly important as a change to some value can have cascading effects elsewhere in your app.&lt;/p&gt;

&lt;p&gt;Luckily Svelte compiler has some built-in protection. Other than using an explicit bind syntax it is actually difficult to pass writable reactive values out of your template. Svelte's &lt;code&gt;let&lt;/code&gt; variables are basically keyed to the component and can't escape the template, and Svelte's Stores are built using explicit syntax.&lt;/p&gt;

&lt;p&gt;So most of this comes down to understanding the repercussions of when to bind and not and how to design your stores as your application grows. Often explicit setters or using events increases code clarity at an application level and improves modularity. But it even is good model for explaining the need to assign arrays to update them. Immutable changes on &lt;code&gt;let&lt;/code&gt; variables work without any inconsistency.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Svelte has done an amazing job of making learning a new Framework fun and easy. It also has all the tools needed to implement the best practices to create applications that scale. Just remember similar to moving to live in a new country, while the culture and traditions might be a bit different, the same physical laws of nature apply.&lt;/p&gt;

&lt;p&gt;The same tools and patterns you learned in other frameworks are just as important now as ever. And while we might sometimes not like the boilerplate these things exist for good reason. Accepting this is the first step in becoming a next-level Svelte developer.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>svelte</category>
      <category>react</category>
    </item>
    <item>
      <title>Best Web Development IDE's</title>
      <author>Excalizan</author>
      <pubDate>Thu, 22 Jul 2021 17:43:52 +0000</pubDate>
      <link>https://dev.to/excalizan/best-web-development-ide-s-g67</link>
      <guid>https://dev.to/excalizan/best-web-development-ide-s-g67</guid>
      <description>&lt;p&gt;Hello! I am Excalizan and its my first post. I need help with some web development IDE's. I was originally using VS Code but its broken now. It doesn't auto-close brackets and doesn't highlight my code properly for any language. Currently I am using PyCharm and WebStorm but you know WebStorm is not free. I am using the 30 days trial now but it won't be enough in the future. That's why I need your help. If you can comment down your prefered free web development IDE's, I will apprichate it. Thanks!&lt;/p&gt;

</description>
      <category>help</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Send E-mail using Spring Boot</title>
      <author>Arjun Codes</author>
      <pubDate>Thu, 22 Jul 2021 17:33:07 +0000</pubDate>
      <link>https://dev.to/arjuncodes/send-e-mail-using-spring-boot-dmp</link>
      <guid>https://dev.to/arjuncodes/send-e-mail-using-spring-boot-dmp</guid>
      <description>&lt;p&gt;&lt;strong&gt;For more detailed explanation go through this video&lt;/strong&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ugIUObNHZdo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>springboot</category>
      <category>java</category>
      <category>programming</category>
      <category>arjuncodes</category>
    </item>
    <item>
      <title>Discussing Bloom Filters</title>
      <author>Akarshan Gandotra</author>
      <pubDate>Thu, 22 Jul 2021 17:26:52 +0000</pubDate>
      <link>https://dev.to/akarshan96/discussing-bloom-filters-3ee3</link>
      <guid>https://dev.to/akarshan96/discussing-bloom-filters-3ee3</guid>
      <description>&lt;p&gt;Let's start this blog by discussing a few scenarios and analyzing the search algorithms.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scenario-1"&gt;
  &lt;/a&gt;
  Scenario 1
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HOAqsSQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/s34gzsyxtnyfth1jd7vb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HOAqsSQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/s34gzsyxtnyfth1jd7vb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
This is the classic case of the use of Bloom Filter. For instance, you are creating a new username for Instagram and suddenly it flashes 'this username is already being taken up'. This happens in a fraction of a second. But give it a thought, how it can read millions of record in the database to search for the name in such a short time. The first thought pops up is using search algorithms. But the &lt;strong&gt;linear search&lt;/strong&gt; is not efficient enough to pull the results from the database that fast. On the other hand, &lt;strong&gt;Binary search&lt;/strong&gt; comes with a restriction that all the user records are stored alphabetically and also not accurate when dealing with words. So, Instagram must be using Bloom Filter to achieve this.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scenario-2"&gt;
  &lt;/a&gt;
  Scenario 2
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KqJoyC06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/wcnjvr17w1mqsycscrgv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KqJoyC06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/wcnjvr17w1mqsycscrgv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Social media sites generate so much content each second and one of it's most awesome feature is of it is that we generally don't see the same content (posts, stories, etc.) again and again. This means these sites maintain a record of the content that is already viewed by the user. &lt;br&gt;
Now let's wonder the ways they can achieve this. One is to store the content accessed by the user in the database and continuously query it to check if the content is visited by the user before. This is not both time and space-efficient since the application needs to maintain a huge amount of data per user and also iterate through it. To make the process more efficient, Bloom Filter is maintained for each user. Both &lt;strong&gt;Medium&lt;/strong&gt; and &lt;strong&gt;Quora&lt;/strong&gt; use this to solve the above problem.&lt;/p&gt;

&lt;p&gt;We discussed the scenarios where we can overcome space and time complexities with the help Bloom Filters. Now let's understand what is Bloom Filter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#explaining-bloom-filter"&gt;
  &lt;/a&gt;
  Explaining Bloom Filter
&lt;/h3&gt;

&lt;p&gt;Bloom Filter is a &lt;strong&gt;probabilistic&lt;/strong&gt; data structure. By probabilistic it means this data structure can the likelihood of an element in a set. &lt;br&gt;
Bloom Filter generates &lt;strong&gt;False Positive&lt;/strong&gt; results which mean it tells if an element is not in a set but isn't sure about if it in the set.  It tells either "possibly in the set" or "definitely not in set". Let's demystify it a little bit.&lt;br&gt;
Bloom Filter is a bit array of fixed length. The value of a bit either can be 1 or 0. This bit array is initialized with all bits set to 0. When an element needs to be added, it is passed through a no. of hash functions and the result of each hash function becomes indices of bit array which are then set to 1.&lt;/p&gt;

&lt;p&gt;Let's say we have a bit array of length 10.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vs0WUmSo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzneanbep7fkox29fb1i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vs0WUmSo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzneanbep7fkox29fb1i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's say we are using 2 hash functions h1 and h2. We receive 2 strings "apple" and "orange".&lt;/p&gt;

&lt;p&gt;Suppose, &lt;br&gt;
h1("apple") % 10 = 3&lt;br&gt;
h2("apple") % 10 = 7&lt;/p&gt;

&lt;p&gt;So we will set 3rd and 7th index in array as 1.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m2BZ3lFR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/scodr5x2bissjhgfaynq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m2BZ3lFR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/scodr5x2bissjhgfaynq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For string "orange", suppose&lt;br&gt;
h1("orange") % 10 = 2&lt;br&gt;
h2("orange") % 10 = 9&lt;/p&gt;

&lt;p&gt;Looking at the current array we can see 2nd and 9th are 0 means no orange string never received otherwise the bit at those index would be 1.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--goomg-B4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kqmc11sxehvgm6u8rdkp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goomg-B4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kqmc11sxehvgm6u8rdkp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's take another example,&lt;br&gt;
We receive "pear" string and suppose &lt;br&gt;
h1("pear") % 10 = 2&lt;br&gt;
h2("pear") % 10 = 5&lt;/p&gt;

&lt;p&gt;So, hash function h1 for "orange" already set bit at index 2 as 1. But still since we also get index 5 which currently 0, it means we didn't ever receive or stored "pear" before.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xAwU1Ehn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5zxudzi2mftc6769v8j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xAwU1Ehn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5zxudzi2mftc6769v8j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now if we get "apple" again,&lt;br&gt;
h1("apple") % 10 = 2 and h2("apple") % 10 = 9, Since both of these index already set as 1, we do know it already exists in the set.&lt;/p&gt;

&lt;p&gt;There might be a chance where we get a string even doesn't exist in the set or the storage have indexes received from hash functions as 1 in the bit array. We can certainly reduce the probability of the collisions by &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;increasing no. of hash function&lt;/li&gt;
&lt;li&gt;increasing length of bit array&lt;/li&gt;
&lt;li&gt;both 1. and 2.
This totally depends the frequency of data we receive for which we have to implement bloom filter.
If we need to calculate the size of bit array or the size of bit array based on data we receive, we can do using following formulas&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;m = - (n lnP)/(ln2)^2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;k = (m/n) * ln2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;where m is size of bit array,&lt;br&gt;
n is expected number of elements,&lt;br&gt;
P is desired false positive probability,&lt;br&gt;
k is no. of hash functions.&lt;/p&gt;

</description>
      <category>bloom</category>
      <category>filter</category>
      <category>datastructure</category>
    </item>
    <item>
      <title>API vs. Microservices: A Beginners Guide to Understand Them</title>
      <author>Jaden Baptista</author>
      <pubDate>Thu, 22 Jul 2021 17:24:56 +0000</pubDate>
      <link>https://dev.to/jadenguitarman/api-vs-microservices-a-beginners-guide-to-understand-them-49fn</link>
      <guid>https://dev.to/jadenguitarman/api-vs-microservices-a-beginners-guide-to-understand-them-49fn</guid>
      <description>&lt;p&gt;Not so long ago, the technology used to build a website was quite simple.&lt;/p&gt;

&lt;p&gt;HTML, CSS, and JavaScript were all you needed in the good old days. And most of the time, you didn’t even need the last one!&lt;/p&gt;

&lt;p&gt;But now, things are getting a bit more complex. You have all these new techniques and technology you need to keep track of. While they might be confusing at first, learning about them can help make us more productive developers.&lt;/p&gt;

&lt;p&gt;One of these concepts we hear a lot about nowadays is the microservice architecture. It caused quite a stir, especially recently, because it's not usually explained well...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hKHOS28p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://snipcart.com/media/205920/confused.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hKHOS28p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://snipcart.com/media/205920/confused.gif" alt="Confused"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even experienced developers have no idea what microservices are, and that's alright. Usually, when asked about what they think microservices are, most web developers are going to say something like:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Doesn't that have something to do with APIs?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The answer is &lt;em&gt;kind of&lt;/em&gt;. In the Jamstack world, we often talk about them as the same thing, but really they're complementary concepts. Learning about each idea's details can help us, especially when we only need one between APIs vs. microservices. &lt;/p&gt;

&lt;p&gt;Let's explore these two concepts. We'll start with the dictionary definitions, but don't worry. I'll move past the janky jargon and get to the meat of it in a bit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-api-and-microservice"&gt;
  &lt;/a&gt;
  What are API and microservice?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;API&lt;/strong&gt; stands for &lt;strong&gt;A&lt;/strong&gt;pplication &lt;strong&gt;P&lt;/strong&gt;rogramming &lt;strong&gt;I&lt;/strong&gt;nterface. According to &lt;a href="https://en.wikipedia.org/wiki/API"&gt;Wikipedia&lt;/a&gt;, an API "defines interactions between multiple software applications. It defines the kinds of calls or requests that can be made, how to make them, the data formats that should be used, the conventions to follow, etc." In the web development world, we most often use APIs that can be accessed through the Internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Microservices&lt;/strong&gt; are, according to &lt;a href="https://microservices.io/"&gt;microservices.io&lt;/a&gt;, pieces of "an architectural style that structures an application as a collection of services that are highly maintainable and testable, loosely coupled, independently deployable, organized around business capabilities, [and] owned by a small team."&lt;/p&gt;

&lt;p&gt;These definitions might seem a bit obtuse, so here's how I would define them:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://snipcart.com/blog/integrating-apis-introduction"&gt;&lt;strong&gt;API&lt;/strong&gt;&lt;/a&gt; stands for &lt;strong&gt;A&lt;/strong&gt;pplication &lt;strong&gt;P&lt;/strong&gt;rogramming &lt;strong&gt;I&lt;/strong&gt;nterface. APIs define how two pieces of software can connect and talk to each other. If your application were a big company, your API's job would be to keep in touch with external parties (customers or company partners, for example). Most APIs are organized around some standard, like &lt;a href="https://restfulapi.net/"&gt;REST&lt;/a&gt; or &lt;a href="https://graphql.org/"&gt;GraphQL&lt;/a&gt;, so that everybody knows how to use them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Microservices&lt;/strong&gt; are pieces of software (often just isolated functions) that do a single, tiny, independent part of a bigger application. If your application were a big company, each employee would be a microservice, each playing their own specific and small role, working alongside but independently from their coworkers. This lets you make changes to individual microservices without affecting the rest of the application. In a big company replacing or retasking one employee in a large team would probably not affect the rest of the company all that much.&lt;/p&gt;

&lt;p&gt;It's the evolution of the monolith architecture. Instead of having one block composing the whole application, every component is divided into smaller building blocks.&lt;/p&gt;

&lt;p&gt;Put like that, does it make a bit more sense how they're different and how they can work together?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-apis-and-microservices-actually-means-irl"&gt;
  &lt;/a&gt;
  What APIs and microservices actually means IRL
&lt;/h2&gt;

&lt;p&gt;Let's dive into a more practical use case to help you understand furthermore.&lt;/p&gt;

&lt;p&gt;Say I've got this completely original payment processor service that I'm calling Tripe (you know, because it's &lt;a href="https://dictionary.cambridge.org/us/dictionary/english/tripe#cald4-us-1-2"&gt;a silly idea&lt;/a&gt;, not because I got inspired by any existing company in particular 😉). &lt;/p&gt;

&lt;p&gt;There's a ton of little bits of functionality that this application is going to need. Here are some off the top of my head:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reading from the database&lt;/li&gt;
&lt;li&gt;Inserting into or updating the database&lt;/li&gt;
&lt;li&gt;Creating invoice PDFs&lt;/li&gt;
&lt;li&gt;Contacting the banks&lt;/li&gt;
&lt;li&gt;Scheduling a recurring task for subscriptions&lt;/li&gt;
&lt;li&gt;Running an actual transaction&lt;/li&gt;
&lt;li&gt;Sending emails&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All these little pieces of functionality are given their own functions and are all maintained separately. Boom—that's the microservice architecture in a nutshell. All of those individual tasks are microservices. That makes debugging way easier, too, since you can narrow down the problem to a single function almost immediately. And that's awesome if you're like me and hate debugging: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8JyMSQA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205922/debugging.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8JyMSQA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205922/debugging.png" alt="Debugging"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's go further with this. Tripe will probably let their users trigger some of these functions, right? Creating invoices, customers profile, subscriptions, charges, and returns are five actions the user can start, and all of them would use some of the microservices mentioned above. So the solution here would be to create five new microservices, one for each of the new actions we're exposing to the outside world.&lt;/p&gt;

&lt;p&gt;For example, the new invoicing microservice would call the microservice reading the database, then the one that makes the PDFs, and then the one sending emails. You could think of it in terms of that analogy I gave earlier about the big company; you could have some employees whose whole job is to collect work done by their coworkers to present to people outside the company. Essentially we're creating a set of microservices that collect work done by other microservices and deliver it to users across the Internet. They only exist to &lt;strong&gt;i&lt;/strong&gt;nterface between your &lt;strong&gt;a&lt;/strong&gt;pplication and the outside world via &lt;strong&gt;p&lt;/strong&gt;rogrammed HTTP requests. &lt;/p&gt;

&lt;p&gt;Sound familiar? Well, it's because that's an &lt;strong&gt;API&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Quick sidenote: An API is technically how any two programs (including microservices themselves) communicate, but in web development, we usually mean an HTTP-facing API. An API follows a protocol like REST or GraphQL to expose data and functionality to the wider Internet. When I talk about an API in this article, that's what I'm referring to, though it's useful to know that the definition is pretty wide.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Those five microservices let users directly access Tripe's API. Not every microservice has to be part of an API, just like how not every employee needs to be part of the team communicating with customers. Many employees just do internal tasks and help out the customer-facing workers, just like how many microservices only do internal tasks or help out the API functions. There are also many ways to make an API without using microservices, so these technologies are more complementary than competing.&lt;/p&gt;

&lt;p&gt;Let's make this more visual with the helping hand of a diagram! &lt;/p&gt;

&lt;p&gt;Tripe's architecture would look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d1kUpa4F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205919/tripe_architecture.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d1kUpa4F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205919/tripe_architecture.jpeg" alt="APIs vs Microservices Tripe_Architecture.jpeg"&gt;&lt;/a&gt;&lt;/p&gt; &lt;em&gt;Our totally fictional payment processor Tripe's totally fictional architecture.&lt;br&gt;
Note that the microservices are squares, and the third parties (customers, banks, etc.) are circular.&lt;/em&gt; 

&lt;p&gt;This looks a little complex on the surface, but it's a payment processor, after all. I wouldn't really be comfortable giving my credit card information to anything simpler than this...&lt;/p&gt;

&lt;p&gt;Let's go through the columns one by one. On the far left, we have Tripe's users. They only have access to the microservices in the External API column. Combined, the endpoints in the second column (External API) make up the API. They're the only microservices with a defined way to talk to the users (through specific JSON objects set by the API docs, for example). They individually accomplish tasks independently and use some other microservices (in the Business Logic column) to do tasks users aren't allowed to trigger directly. Most business logic functions also call each other, demonstrating that the whole Tripe application is broken down into its tiniest, reusable, isolated, independent pieces.&lt;/p&gt;

&lt;p&gt;Building your application with microservices reduces complexity and makes maintenance a lot easier because you can edit these little pieces individually. It's like building a site out of Legos: if you don't like one of them, you can just replace it and leave the rest of the site intact. That means your technical debt goes down to almost nothing, and if you keep with this approach, you'll never run into one of those lose-lose architecture dilemmas that we all hate.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PYwpAgYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205923/techdept.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PYwpAgYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205923/techdept.png" alt="Technical dept"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#microservices-and-apis-realworld-applications"&gt;
  &lt;/a&gt;
  Microservices and APIs real-world applications
&lt;/h2&gt;

&lt;p&gt;Our Tripe graph might look pretty complex because of all the lines, but it was relatively simple when matched up against the same graph for bigger companies like Amazon or Netflix:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MiLlSeBA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205916/amazonnetflix.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MiLlSeBA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205916/amazonnetflix.png" alt="Amazon &amp;amp; Netflix Architecture Graph"&gt;&lt;/a&gt;&lt;/p&gt; &lt;em&gt;Microservice node graphs for Amazon and Netflix. Source: &lt;a href="https://www.divante.com/blog/10-companies-that-implemented-the-microservice-architecture-and-paved-the-way-for-others"&gt;Divante&lt;/a&gt;&lt;/em&gt; 

&lt;p&gt;The structure starts to get a bit unwieldy to look at, but it's far easier to work with. The article where the image is taking from jokes that the Amazon microservice node graph "looks almost like a Death Star, but is way more powerful." &lt;/p&gt;

&lt;p&gt;When you think about it, this architecture makes perfect sense for big companies like Amazon and Netflix. Their developers don't have to edit the entire codebase or redeploy the entire site when they want to make an update. Netflix's engineers, for example, are improving their product 24/7. Imagine if they had to take down the site for just a moment whenever they wanted an internal feature added. Netflix would be down constantly; bye-bye binge-watching! 😧&lt;/p&gt;

&lt;p&gt;Instead, they only have to work with one manageable chunk of code at a time, just one of the dots on that graph.&lt;/p&gt;

&lt;p&gt;In contrast, think about how few of the nodes on Netflix’s graph of microservices are actually meant to communicate with the outside world. &lt;a href="https://netflixtechblog.com/engineering-trade-offs-and-the-netflix-api-re-architecture-64f122b277dd"&gt;Netflix has been revising their API lately&lt;/a&gt; so I couldn’t figure out exactly how many of the nodes are facing outward. However, it’s still quite a small amount compared to the number of microservices they actually use internally. Take this image, for example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z97P31DJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205917/api_microservices.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z97P31DJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205917/api_microservices.png" alt="APIs and Microservices"&gt;&lt;/a&gt;&lt;/p&gt; &lt;em&gt;&lt;a href="https://netflixtechblog.com/engineering-trade-offs-and-the-netflix-api-re-architecture-64f122b277dd"&gt;Source&lt;/a&gt;&lt;/em&gt; 

&lt;p&gt;Here's the accompanying explanation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Suppose a user clicks the "play" button for Stranger Things Episode 1 on their mobile phone. For playback to begin, the mobile phone sends a "play" request to the API. The API, in turn, calls several microservices under the hood. Some of these calls can be made in parallel because they don’t depend on each other. Others have to be sequenced in a specific order. The API contains all the logic to sequence and parallelize the calls as necessary. The device, in turn, doesn’t need to know anything about the orchestration that goes on under the hood when the customer clicks "play".&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Interesting, right? I want to highlight one phrase in particular: "The API contains all the logic to sequence and parallelize the calls as necessary." This means that the client (person watching Netflix)&amp;lt;!-- Is it the client you're referring to here? --&amp;gt; called the API endpoint when they pressed the "play" button, which is, in itself, a microservice.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Side note: as I understand it, the API Netflix refers to here isn't available to the public. Remember, an API is just a defined way for "two pieces of software to connect and talk to each other". Those "two pieces of software" are, in this case, Netflix's backend and Netflix's frontend. It's still an API even if you and I can't use it over the Internet because that interaction between the frontend and the backend is given a structure and rules to follow. This is an important note to remember because it means that you've probably created more APIs than you realize in your career. Anytime we internally connect two services and give them a way to talk to one another, we're making one. We should be cognizant of that because it gives us a chance to think through our architecture before it gets out of hand.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr-theyre-complimentary"&gt;
  &lt;/a&gt;
  TLDR; They're complimentary.
&lt;/h2&gt;

&lt;p&gt;What's the conclusion? APIs can be made up, wholly or partially, out of microservices. Microservices can be used for a lot more, though. The original definition (the really wordy, nerdy one) called microservices pieces of "an architectural style". The whole application, business logic and all, can be broken down into tiny, reusable, single-purpose chunks of code, and that's the microservice architecture.&lt;/p&gt;

&lt;p&gt;Here's a Venn diagram if you'd like another way to visualize it. As you can see, microservices can be an API (the overlapping of the circles), but APIs aren't necessarily a microservice.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V_pKoCrQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205918/blank_diagram.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V_pKoCrQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205918/blank_diagram.png" alt="APIs vs. Microservices Diagram.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember how I said earlier that some APIs are made up of microservices (like our fictional Tripe API), but they don't always have to work together? Some microservices aren't part of APIs (the right section on the Venn diagram), such as the business logic in our Tripe example, because they don't have to be accessible to the outside world. On the other hand, there are a &lt;em&gt;ton&lt;/em&gt; of ways to make an API, and most of them don't involve microservices. Most of the web backends made with the traditional backend languages (PHP, Ruby, Java, etc.) are &lt;em&gt;monolithic&lt;/em&gt;, a.k.a. not made of microservices. Even backends made with JavaScript can be monolithic if you don't separate all the functionality into their smallest pieces.&lt;/p&gt;

&lt;p&gt;APIs and microservices are now massive parts of the modern web development process. We can't move forward without them. So if you're making your way past the traditional monolithic web architecture and/or want to learn more about how these newer technologies work together, here are some more links for additional education:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.divante.com/blog/10-companies-that-implemented-the-microservice-architecture-and-paved-the-way-for-others"&gt;10 companies that implemented the microservice architecture and paved the way for others&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://netflixtechblog.com/engineering-trade-offs-and-the-netflix-api-re-architecture-64f122b277dd"&gt;Engineering Trade-Offs and The Netflix API Re-Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sitepoint.com/jamstack-tools-services-apis/"&gt;100 Jamstack Tools, APIs &amp;amp; Services to Power Your Sites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://snipcart.com/blog/jamstack"&gt;New to Jamstack? Everything You Need to Know to Get Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://snipcart.com/blog/integrating-apis-introduction"&gt;A Beginner's Guide to APIs: How to Integrate and Use Them&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you've got any other questions, feel free to reach out to me on &lt;a href="http://twitter.com/jadenguitarman"&gt;Twitter&lt;/a&gt; or in the comments below. I'd love to hear from you!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Engineering Productivity &amp; Culture at Netflix w/ Kathryn Koehler</title>
      <author>Conor Bronsdon</author>
      <pubDate>Thu, 22 Jul 2021 16:49:51 +0000</pubDate>
      <link>https://dev.to/linearb/engineering-productivity-culture-at-netflix-w-kathryn-koehler-o9b</link>
      <guid>https://dev.to/linearb/engineering-productivity-culture-at-netflix-w-kathryn-koehler-o9b</guid>
      <description>&lt;p&gt;What is it like to work at Netflix as a developer? How do they think about culture, their customers and engineering productivity? &lt;/p&gt;

&lt;p&gt;In this incredible episode of &lt;a href="https://devinterrupted.com/podcast/engineering-productivity-culture-at-netflix/"&gt;Dev Interrupted&lt;/a&gt;, we bring in Kathryn Koehler, the Director of Productivity Engineering at Netflix, to chat about what makes Netflix so unique and why they are standardizing data-driven engineering today.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/0cQVpceM7vvzdzxeN31JMB"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How Netflix measures productivity&lt;/li&gt;
&lt;li&gt;Netflix's approach to company culture&lt;/li&gt;
&lt;li&gt;The "restaurant" approach to &lt;a href="https://linearb.io/blog/engineering-productivity/"&gt;engineering productivity&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Standardizing data-driven metrics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9t9cmftftbs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>engineering</category>
      <category>culture</category>
      <category>data</category>
    </item>
    <item>
      <title>How to start your open source journey with UNICEF?</title>
      <author>Rachita Saha</author>
      <pubDate>Thu, 22 Jul 2021 16:31:58 +0000</pubDate>
      <link>https://dev.to/rachita_saha/how-to-start-your-open-source-journey-with-unicef-2hd</link>
      <guid>https://dev.to/rachita_saha/how-to-start-your-open-source-journey-with-unicef-2hd</guid>
      <description>&lt;p&gt;If you are looking for ways to start your open source journey and would like to use your technical skills to contribute towards achieving sustainable development, here’s an article you might find useful.&lt;/p&gt;

&lt;p&gt;All you need to contribute to UNICEF’s open source projects are working knowledge of Git, GitHub, web development, and enough determination to make that first pull request! The feeling of fulfillment you will receive when the first PR gets merged will keep you motivated to continue learning and contributing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-digital-public-goods"&gt;
  &lt;/a&gt;
  💻 What are Digital Public Goods?
&lt;/h2&gt;

&lt;p&gt;In alignment with the UN Secretary-General’s 2020 &lt;a href="https://www.un.org/en/content/digital-cooperation-roadmap/"&gt;Roadmap for Digital Cooperation&lt;/a&gt;, Digital Public Goods (DPGs) are defined as &lt;em&gt;“open source software, open data, open AI models, open standards, and open content that adhere to privacy and other applicable best practices, do no harm and are of high relevance for attaining the UN’s 2030 Sustainable Development Goals (SDGs)”.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Many types of digital technologies, data, and content – from open data to apps, visualization tools to educational curricula – could accelerate the achievement of the SDGs. However, it is only if they are &lt;strong&gt;freely and openly available, with minimal restrictions on how they can be distributed, adapted, and reused&lt;/strong&gt; that we can think of them as “digital public goods”.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-digital-public-goods-alliance"&gt;
  &lt;/a&gt;
  🏢 What is the Digital Public Goods Alliance?
&lt;/h2&gt;

&lt;p&gt;UNICEF along with the Governments of Norway and Sierra Leone, and the India-based think tank iSPIRT have jointly established the &lt;a href="https://digitalpublicgoods.net/who-we-are/"&gt;Digital Public Goods Alliance (DPGA)&lt;/a&gt;, a multi-stakeholder initiative to accelerate the attainment of the SDGs in low- and middle-income countries by facilitating the discovery, development, use of, and investment in digital public goods. The DPGA is an effort to convene a network of partners from different sectors that will contribute to the identification, support, scale-up, and use of software, data, and algorithms that can advance humanity. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-you-contribute"&gt;
  &lt;/a&gt;
  👩‍💻 How can you contribute?
&lt;/h2&gt;

&lt;p&gt;There are a few projects of the DPGA that you can contribute to, but instead of jumping straight into the code base, I would recommend the following approach to best understand the goals of the DPGA and make meaningful contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nominate-a-dpg"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/unicef/publicgoods-candidates/issues/66"&gt;Nominate a DPG&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This process involves identifying open source solutions that &lt;br&gt;
contribute to an equitable world and adhere to the &lt;a href="https://github.com/DPGAlliance/DPGStandard/blob/master/standard.md"&gt;DPG Standard&lt;/a&gt;. The &lt;a href="https://github.com/unicef/publicgoods-candidates"&gt;unicef/publicgoods-candidates&lt;/a&gt; repository is used to manage the process of adding nominees for consideration as Digital Global Public Goods. &lt;/p&gt;

&lt;p&gt;While you can easily make a contribution through the &lt;a href="https://digitalpublicgoods.net/public-goods/"&gt;submission form&lt;/a&gt;, I would strongly suggest opening a pull request, making sure it passes the CI build, and getting it merged. The instructions for nominating DPGs through both methods are mentioned very clearly in the &lt;a href="https://github.com/unicef/publicgoods-candidates/blob/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Go ahead and make that first contribution!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#validate-dpg-submissions"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/unicef/publicgoods-candidates/issues/178"&gt;Validate DPG submissions&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;You can participate by reviewing open source projects against the &lt;a href="https://digitalpublicgoods.net/standard/"&gt;Digital Public Goods Standard&lt;/a&gt; with the ultimate goal of determining if a project qualifies as a DPG. &lt;/p&gt;

&lt;p&gt;This community sourcing exercise will give you the opportunity to delve into some of the largest up-and-coming open source projects, understand their licenses and documentation, and how they’re designing for best practices, standards, privacy, and more. &lt;/p&gt;

&lt;p&gt;By participating, you’ll get a better understanding of open &lt;br&gt;
projects that are making a difference in the world, particularly those that are advancing practical solutions to help achieve the SDGs. You will also join a growing number of innovators working on Technology for Development (T4D). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solve-issues-in-the-various-repositories"&gt;
  &lt;/a&gt;
  Solve issues in the various repositories
&lt;/h3&gt;

&lt;p&gt;The next step is to take a look at the various issues listed on UNICEF’s GitHub repositories. When you find an issue that interests you, drop a comment asking to be assigned to it. If you don’t understand the issue entirely, ask for help through comments. Below is a list of the various UNICEF repositories &lt;br&gt;
you can contribute to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unicef/publicgoods-candidates"&gt;https://github.com/unicef/publicgoods-candidates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unicef/publicgoods-scripts"&gt;https://github.com/unicef/publicgoods-scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unicef/publicgoods-wordpress"&gt;https://github.com/unicef/publicgoods-wordpress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lacabra/submission-digitalpublicgoods"&gt;https://github.com/lacabra/submission-digitalpublicgoods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lacabra/validate-digitalpublicgoods"&gt;https://github.com/lacabra/validate-digitalpublicgoods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before diving into the solutions, I would strongly recommend you to go through the documentation thoroughly and set up the project on your local machine. Then, move to the &lt;code&gt;Issues&lt;/code&gt; tab on any repository, find an issue with the tag &lt;code&gt;good first issue&lt;/code&gt; and try solving it. If you don’t find any issues that interest you, you can create a new one! You just need to take a look at the code and try to identify bugs or make suggestions to improve the content, design, documentation, etc. &lt;/p&gt;

&lt;p&gt;The large codebase might appear intimidating at first, but it is not as hard as it appears. I was a beginner too when I started contributing, and I understand that it takes some effort to navigate through it all, but the satisfaction of seeing your changes merged into the repository, ultimately contributing towards the good of the public, is absolutely worth the effort.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  📝 Conclusion
&lt;/h2&gt;

&lt;p&gt;Open source represents an opportunity to fundamentally alter power balances in international development. UNICEF aims to harness that power through the cooperation of its many contributors, and this is your chance to be one! Being an open source contributor was one of the best learning experiences for me, and I encourage everyone to give it a try. &lt;/p&gt;

&lt;p&gt;I hope this blog helped you in some way. If you have any other questions related to the process, feel free to drop a comment below. &lt;/p&gt;

&lt;p&gt;Best of luck and happy coding! 😃&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Cloud cost reporting alone isn’t going to cut your AWS bill</title>
      <author>CAST AI</author>
      <pubDate>Thu, 22 Jul 2021 16:12:27 +0000</pubDate>
      <link>https://dev.to/castai/cloud-cost-reporting-alone-isn-t-going-to-cut-your-aws-bill-2ipa</link>
      <guid>https://dev.to/castai/cloud-cost-reporting-alone-isn-t-going-to-cut-your-aws-bill-2ipa</guid>
      <description>&lt;p&gt;As containerization rises in popularity, traditional cost optimization methods like monitoring and reporting are put to the test. &lt;/p&gt;

&lt;p&gt;Getting a detailed report of your cloud spend is just &lt;strong&gt;one side of the coin&lt;/strong&gt;. The other - and arguably more important one - is &lt;strong&gt;doing something about these findings&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Keep on reading to find out why adding automated optimization techniques to the mix makes all the difference (and generates some serious savings).&lt;/p&gt;

&lt;h2&gt;Cloud cost reporting is a must-have, there’s no doubt about it&lt;/h2&gt;

&lt;p&gt;Teams usually use Kubernetes in dynamic and multi-tenant environments. Since increasing resources is so easy, losing control over cloud spend is even easier. If left unchecked, a missed bug or architecture oversight might easily snowball into a massive expense.&lt;/p&gt;

&lt;p&gt;Consider this story:&lt;/p&gt;

&lt;p&gt;One of &lt;strong&gt;Adobe’s&lt;/strong&gt; development teams once &lt;strong&gt;burned $80,000 per day&lt;/strong&gt; because of a computing job left running on Azure. Before someone discovered it and pulled the plug, &lt;strong&gt;the bill snowballed to more than &lt;a href="https://www.teampay.co/insights/manage-cloud-costs/"&gt;half a million dollars&lt;/a&gt;&lt;/strong&gt;. One simple alert would be enough to prevent this.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;That’s why users need a solid cost reporting tool that brings them cost visibility in detailed reports and sends alerts when certain parts of the infrastructure go beyond the set thresholds. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Cost reporting is incredibly important, but like I said - it’s just one side of the cost optimization coin.&lt;/p&gt;

&lt;h2&gt;But cost reporting alone doesn’t cut the chase&lt;/h2&gt;

&lt;p&gt;You need more than cost reports to make a real difference in your setup. After all, what cost monitoring and reporting tools give you are static recommendations that require a human to implement them.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If you have a small environment, a human engineer can make it work. But think about the scale of a mid-sized company or enterprise. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Applying all the recommendations manually and on a regular basis translates into time, which translates into cost (not to mention all the lost optimization opportunities for sudden traffic spikes and such).&lt;/p&gt;

&lt;p&gt;What you need is to add &lt;strong&gt;automated cost optimization&lt;/strong&gt; to the mix.&lt;/p&gt;

&lt;p&gt;If you’re wondering how the combination of Kubernetes cost reporting and optimization works in practice, here’s a case study that shows it step by step.&lt;/p&gt;

&lt;h2&gt;How automated cost optimization helped reduce Amazon EKS costs in 15 minutes&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Wyc-kQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/WL4gQe96MxZzUmjME-U_DtSnAO5hvq9KpTU2utUhZvXWy0qqL8nTQcffz5Ff6GfQ3z_8uT-qKtlx4UDBbvivWW6k2bjnx3w09C74QYeCILFvyQHovesDw-Musp3T2BGbnuIltvh1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Wyc-kQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/WL4gQe96MxZzUmjME-U_DtSnAO5hvq9KpTU2utUhZvXWy0qqL8nTQcffz5Ff6GfQ3z_8uT-qKtlx4UDBbvivWW6k2bjnx3w09C74QYeCILFvyQHovesDw-Musp3T2BGbnuIltvh1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I provisioned an e-commerce app (&lt;a href="https://github.com/castai/examples"&gt;see it here&lt;/a&gt;) on an EKS cluster with 6 m5 nodes (2 vCPU, 8 GiB) on the Amazon EKS platform. Then, I deployed &lt;a href="https://cast.ai/eks-optimizer/"&gt;an AI engine&lt;/a&gt; to go through my application and suggest some optimizations. I got some pretty interesting recommendations in the Savings Report, so I activated the automated optimization feature.&lt;/p&gt;

&lt;p&gt;Here are the results:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Initial cluster cost: $414 / month.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Within &lt;strong&gt;15 minutes&lt;/strong&gt; after turning the automation on, the cluster cost got down to &lt;strong&gt;$207 (a 50% reduction) &lt;/strong&gt;by eliminating 3 nodes.&lt;/li&gt;
&lt;li&gt;And &lt;strong&gt;5 minutes&lt;/strong&gt; later, the solution added Spot Instances which made the cluster costs go down to &lt;strong&gt;$138 per month (a 66% reduction!)&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Here’s a more detailed take on this case study&lt;/h3&gt;

&lt;h3&gt;Step 1: Generating the Savings Report&lt;/h3&gt;

&lt;p&gt;After creating and deploying my EKS cluster, I connected it to CAST AI by creating a free account and selecting &lt;em&gt;Connect your cluster&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cFwwuQQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/fc3rkSJxugy-Q1AyBnB3a27HN4PAVYJOJNCtNTLYF14CuWFjF2_-cMeapNRR494-dW6_O1vyjOtn8-NVJTinEUc6Z3MmVJT2iC7fEMuewQIyI5UmvTGW31j9rR8jesrPrvjRBvKK" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cFwwuQQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/fc3rkSJxugy-Q1AyBnB3a27HN4PAVYJOJNCtNTLYF14CuWFjF2_-cMeapNRR494-dW6_O1vyjOtn8-NVJTinEUc6Z3MmVJT2iC7fEMuewQIyI5UmvTGW31j9rR8jesrPrvjRBvKK" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fRzh44KR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/oSRjPaBQifDoRwW_v1t3-9IyuI6KiFEqKv92dQWBaeG22G7JfcahK2dgmh1w6cZKLB-Aj6AT8-5F2_KBVM_bnGUWxnCj3_4z9fvh5b594uumkvPaakQvfbQkHs8OrRfNhKutVMOL" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fRzh44KR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/oSRjPaBQifDoRwW_v1t3-9IyuI6KiFEqKv92dQWBaeG22G7JfcahK2dgmh1w6cZKLB-Aj6AT8-5F2_KBVM_bnGUWxnCj3_4z9fvh5b594uumkvPaakQvfbQkHs8OrRfNhKutVMOL" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I then copied and ran the script successfully in my terminal.&lt;/p&gt;

&lt;p&gt;The CAST AI agent analyzed my EKS cluster in read-only mode and generated this Savings Report:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oOIWFeK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/ibksdy3608iGxRkN9wEJ-KvTr4ClJWi3xuV44AJK3b28yCV8FQw9oQuKYOK70LbCOq_ro5tSNSGjWPZa89nKT5_xLDbbIx8rRK6LbZkPPXp_Rn_LqmRoVU1LSCpfaW7Oi6sm2NCB" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oOIWFeK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/ibksdy3608iGxRkN9wEJ-KvTr4ClJWi3xuV44AJK3b28yCV8FQw9oQuKYOK70LbCOq_ro5tSNSGjWPZa89nKT5_xLDbbIx8rRK6LbZkPPXp_Rn_LqmRoVU1LSCpfaW7Oi6sm2NCB" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As it turns out, if I switched my 6 m5.large to 3 c5a.large, I could slash my bill by almost 60%. &lt;/p&gt;

&lt;p&gt;And I could get even higher savings (66.5%!) if I decided to use Spot Instances:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D_bwqt-l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/Dur8N8u7MUgcwIzcpinxLiihk2BCv36sShMGSVolYw68ZRJLlnwTZMxFo4a5TI2ThD6e0Lxg5teSTgTll0gERUwujFt4jfHmFDntaLk55AUibDIwRO46dISvaFMH8roM2oApMqeR" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D_bwqt-l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/Dur8N8u7MUgcwIzcpinxLiihk2BCv36sShMGSVolYw68ZRJLlnwTZMxFo4a5TI2ThD6e0Lxg5teSTgTll0gERUwujFt4jfHmFDntaLk55AUibDIwRO46dISvaFMH8roM2oApMqeR" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 2: Activating the cost optimization&lt;/h3&gt;

&lt;p&gt;Turning automated optimization on made a lot of sense, so I had to grab my AWS access key ID and Secret access key, and add both to the platform. &lt;/p&gt;

&lt;p&gt;To get the access keys, I had to run this script:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---c7lc2oB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/gyvjtYMafi6cMNAb-G9wJZH1MztwY-pQxrJgCmCuLTYkNpiLJRD_znqs_6BDGEWMw0QpbWnouBKcWLvumJwUBqYQcAgat4F-R4evh97YdywQvaFmCWmECQH_brmmVdYz_NXiYCLm" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---c7lc2oB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/gyvjtYMafi6cMNAb-G9wJZH1MztwY-pQxrJgCmCuLTYkNpiLJRD_znqs_6BDGEWMw0QpbWnouBKcWLvumJwUBqYQcAgat4F-R4evh97YdywQvaFmCWmECQH_brmmVdYz_NXiYCLm" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Step 3: Enabling cost policies&lt;/h3&gt;

&lt;p&gt;To achieve maximum cost savings, I turned on all the policies available in CAST AI:&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;CPU Policy: I used this policy to set the maximum budget of 200 CPUs.&lt;/li&gt;&lt;/ul&gt;

&lt;ul&gt;&lt;li&gt;Node autoscaler: Whenever I get unscheduled pods, CAST AI will start looking for a place to run them - starting with Spot Instances (if they’re Spot Instance-friendly) or On-Demand instances.&lt;/li&gt;&lt;/ul&gt;

&lt;ul&gt;&lt;li&gt;Node Deletion + Evictor: Evictor is a background process that continuously reduces the cluster to the minimum number of nodes by bin-packing pods. Once a node becomes empty, it’s instantly deleted. &lt;/li&gt;&lt;/ul&gt;

&lt;h3&gt;Step 4: Running Evictor&lt;/h3&gt;

&lt;p&gt;This is what the last policy and Evictor tool look like in action:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;One node (marked in red) is identified as a good candidate for eviction.&lt;/li&gt;
&lt;li&gt;Evictor automatically moves pods to other nodes for “bin-packing.”&lt;/li&gt;
&lt;li&gt;Once the node becomes empty, it’s deleted from the cluster.&lt;/li&gt;
&lt;li&gt;Evictor returns to step 1 and keeps on looking for other nodes that could be deleted to cut costs.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After about 10 minutes, Evictor deleted 3 nodes and left just 3 nodes running. CPUs were at a much healthier 80% rate.&lt;/p&gt;

&lt;p&gt;The cost of my cluster is now $207.36 per month - so, 50% of the initial cost ($414 per month_.&lt;/p&gt;

&lt;h3&gt;Step 5: Moving workloads to new optimized nodes&lt;/h3&gt;

&lt;p&gt;This is a more advanced and optional step where CAST AI actively replaced my current nodes with more optimized ones - for example, Spot Instances. To do that, CAST AI cordons the cluster, drains nodes, and then replaces them with more optimized nodes.&lt;/p&gt;

&lt;p&gt;So, my nodes were cordoned:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cyHD3Zwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/rkJiSSY6WiznSOo2EHu7XY5C-TMNpP53qZyQOX2UFayBkySWO3TF1ndw4Qfh8d1O0FRUlepUsrrt00xNmHuYfoBrR-IqNeYNlBZA3-F1ioCoCcDg9aFGvuHlecxzdtBQjUz3dP15" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cyHD3Zwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/rkJiSSY6WiznSOo2EHu7XY5C-TMNpP53qZyQOX2UFayBkySWO3TF1ndw4Qfh8d1O0FRUlepUsrrt00xNmHuYfoBrR-IqNeYNlBZA3-F1ioCoCcDg9aFGvuHlecxzdtBQjUz3dP15" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first two nodes were drained, and the AI engine selected the best instance type for these nodes. Here’s what I saw in my CAST AI dashboard:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S1UrJvpB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/HIUzBn-QnMHndSrzb2qATRve_a6t0YF2gN2wHVRsvq1fVfwxWEXuapwEMjn4cZdlLjko4pQ1FWaPhC_E_HxH9m8-y6FZAB1zdd_i6jY4MObMN7yi96sByIp_DGotY2pw2lhdpT99" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1UrJvpB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/HIUzBn-QnMHndSrzb2qATRve_a6t0YF2gN2wHVRsvq1fVfwxWEXuapwEMjn4cZdlLjko4pQ1FWaPhC_E_HxH9m8-y6FZAB1zdd_i6jY4MObMN7yi96sByIp_DGotY2pw2lhdpT99" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, my cluster is now running on 2 nodes that cost me $138 per month. It’s hard to believe that I initially got a monthly EKS bill of $414.72!&lt;/p&gt;

&lt;h2&gt;Running clusters on Amazon EKS? Give automated optimization a try&lt;/h2&gt;

&lt;p&gt;Run the free &lt;a href="https://cast.ai/eks-optimizer/"&gt;CAST AI Savings Report&lt;/a&gt; to check how much you could potentially save. It also gives you actionable steps to reduce the bill that other tools ask you to pay for. And when you’re ready, turn automated cost optimization on to see how your cloud bill shrinks with every minute. &lt;/p&gt;

</description>
      <category>aws</category>
      <category>kubernetes</category>
      <category>devops</category>
      <category>startup</category>
    </item>
    <item>
      <title>How to Get Project Ideas to Practice JavaScript</title>
      <author>Nico Zerpa (he/him)</author>
      <pubDate>Thu, 22 Jul 2021 15:58:45 +0000</pubDate>
      <link>https://dev.to/nicozerpa/how-to-get-project-ideas-to-practice-javascript-3ip3</link>
      <guid>https://dev.to/nicozerpa/how-to-get-project-ideas-to-practice-javascript-3ip3</guid>
      <description>&lt;p&gt;&lt;strong&gt;Practising is, by far, the best way to learn JavaScript.&lt;/strong&gt; No matter if you read hundreds of articles or watch dozens of courses, you need to practice coding to really learn. However, for many beginners, it's hard to come up with ideas. Which ideas or projects should I create to practise?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create simple clones of your favourite websites or web applications&lt;/strong&gt;. That's what I've always done to practice coding when I was younger. &lt;strong&gt;If you're at the very early stages of your learning journey, copy only the basic functionality.&lt;/strong&gt; For example, if you want to build a Reddit clone, just make it display the posts of a single subreddit.&lt;/p&gt;

&lt;p&gt;A good source of projects ideas is VanillaJSProjects.com. This site was created by developer &lt;a href="https://gomakethings.com/"&gt;Chris Ferdinandi&lt;/a&gt;, and has 21 project ideas that you can try. Even though they are intended for Vanilla JavaScript, you can make the projects using any UI framework or library. &lt;a href="https://vanillajsprojects.com"&gt;You can access the project list here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-if-a-project-becomes-too-hard"&gt;
  &lt;/a&gt;
  What If a Project Becomes Too Hard?
&lt;/h2&gt;

&lt;p&gt;That could be discouraging, but &lt;strong&gt;don't worry. Just make the project simpler!&lt;/strong&gt; You can go back to it later.&lt;/p&gt;

&lt;p&gt;In this case, practising programming is like working out. If you go to the gym for the first time, you start lifting small weights. Little by little, you'll become stronger and you can increase the weights.&lt;/p&gt;

&lt;p&gt;If you're starting out, start doing small things. If you are consistent, &lt;strong&gt;these simple projects will become easier over time&lt;/strong&gt;, and that's the time to increase the difficulty a bit.&lt;/p&gt;




&lt;p&gt;Become a Better JavaScript Developer! My newsletter has easy, actionable steps to level up your JavaScript skills, right to your inbox. &lt;a href="https://nicozerpa.com/newsletter"&gt;Click here to subscribe&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Publishing your Android library - the local way</title>
      <author>Nadia Castelli</author>
      <pubDate>Thu, 22 Jul 2021 15:43:37 +0000</pubDate>
      <link>https://dev.to/cloudx/publishing-your-android-library-the-local-way-2059</link>
      <guid>https://dev.to/cloudx/publishing-your-android-library-the-local-way-2059</guid>
      <description>&lt;p&gt;If you ever built an Android library, meant to be used in one or more projects, you have for sure faced the need to publish it in order to test its integration into your target app. You probably publish your libraries in some repository, such as JitPack, Nexus, JFrog, or other. But, what if you need to continue introducing changes or working on fixes in your library? Maybe publishing it to a remote repository each time is not the most time-saving option, especially if your library is a bit overweight. Or maybe your Internet access was cut off; how are you supposed to continue working like this? Well, there is actually a convenient, effective way to quickly get your library published and available to be integrated into your other projects: the Maven local repository.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maven-local"&gt;
  &lt;/a&gt;
  Maven local
&lt;/h2&gt;

&lt;p&gt;Maven local is actually a repository, but it is located in your own computer. As simple as that. So you can use this directory to store your project dependencies.&lt;/p&gt;

&lt;p&gt;Depending on your computer's operating system, the default location for Maven local repository may vary.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mac: &lt;code&gt;/Users/[username]/.m2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Linux: &lt;code&gt;/home/[username]/.m2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Windows: &lt;code&gt;C:\Users\[username]\.m2&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B7_LwoV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8jtaur3fkwp7x6xtvd2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B7_LwoV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8jtaur3fkwp7x6xtvd2.png" alt=".m2 folder contents"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#publishing-your-library"&gt;
  &lt;/a&gt;
  Publishing your library
&lt;/h2&gt;

&lt;p&gt;First, we are going to navigate to our library's module, and there we are going to create a Gradle file, which will contain all the necessary code to publish the library locally. We are going to name it &lt;code&gt;publishLocal.gradle&lt;/code&gt;. Its content will be the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="n"&gt;apply&lt;/span&gt; &lt;span class="nl"&gt;plugin:&lt;/span&gt; &lt;span class="s1"&gt;'maven-publish'&lt;/span&gt; 

&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="nf"&gt;sourceJar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;type:&lt;/span&gt; &lt;span class="n"&gt;Jar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sourceSets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;srcDirs&lt;/span&gt; 
    &lt;span class="n"&gt;classifier&lt;/span&gt; &lt;span class="s2"&gt;"sources"&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt; 

&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;afterEvaluate&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;publishToMavenLocal&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LIBRARY_GROUP&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LIBRARY_ARTIFACT_ID&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LIBRARY_VERSION_NAME&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;"-local"&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;debugSuffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"-debug"&lt;/span&gt; 
        &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;releaseSuffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"-release"&lt;/span&gt; 
        &lt;span class="k"&gt;publishing&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
            &lt;span class="n"&gt;publications&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                &lt;span class="n"&gt;LibraryRelease&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;MavenPublication&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;release&lt;/span&gt; 
                    &lt;span class="nf"&gt;artifact&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceJar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
                    &lt;span class="n"&gt;setGroupId&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; 
                    &lt;span class="n"&gt;setArtifactId&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; 
                    &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;releaseSuffix&lt;/span&gt; 
                &lt;span class="o"&gt;}&lt;/span&gt; 
                &lt;span class="n"&gt;LibraryDebug&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;MavenPublication&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;debug&lt;/span&gt; 
                    &lt;span class="nf"&gt;artifact&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceJar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
                    &lt;span class="n"&gt;setGroupId&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; 
                    &lt;span class="n"&gt;setArtifactId&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; 
                    &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;debugSuffix&lt;/span&gt; 
                &lt;span class="o"&gt;}&lt;/span&gt; 
            &lt;span class="o"&gt;}&lt;/span&gt; 
            &lt;span class="n"&gt;publications&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                &lt;span class="n"&gt;pom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withXml&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                    &lt;span class="n"&gt;asNode&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;dependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'*'&lt;/span&gt;
                    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findAll&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                        &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'runtime'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                        &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;configurations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;implementation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;allDependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                            &lt;span class="n"&gt;dep&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;artifactId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
                        &lt;span class="o"&gt;}&lt;/span&gt;
                    &lt;span class="o"&gt;}.&lt;/span&gt;&lt;span class="na"&gt;each&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;*.&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'compile'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; 
                &lt;span class="o"&gt;}&lt;/span&gt; 
            &lt;span class="o"&gt;}&lt;/span&gt; 
        &lt;span class="o"&gt;}&lt;/span&gt; 

        &lt;span class="n"&gt;doLast&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
            &lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;prettyPrint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
                &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;upto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;"="&lt;/span&gt; &lt;span class="o"&gt;})&lt;/span&gt; 
                &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt; 
            &lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
            &lt;span class="n"&gt;prettyPrint&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;println&lt;/span&gt; &lt;span class="s2"&gt;"PUBLICATION FINISHED"&lt;/span&gt; 
            &lt;span class="n"&gt;println&lt;/span&gt; &lt;span class="s2"&gt;"Artifact RELEASE: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;":"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="s2"&gt;":"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;releaseSuffix&lt;/span&gt; 
            &lt;span class="n"&gt;println&lt;/span&gt; &lt;span class="s2"&gt;"Artifact DEBUG: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;":"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="s2"&gt;":"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;debugSuffix&lt;/span&gt;
            &lt;span class="n"&gt;prettyPrint&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
        &lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can include this script in our module-level &lt;code&gt;build.gradle&lt;/code&gt; file. And that's it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt; 
&lt;span class="n"&gt;apply&lt;/span&gt; &lt;span class="nl"&gt;from:&lt;/span&gt; &lt;span class="s1"&gt;'publishLocal.gradle'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-code-in-depth"&gt;
  &lt;/a&gt;
  The code in depth
&lt;/h3&gt;

&lt;p&gt;If you take a look at our first line of code, you can see that we are including the &lt;a href="https://docs.gradle.org/current/userguide/publishing_maven.html"&gt;Maven Publish&lt;/a&gt; plugin, which lets us publish artifacts to an Apache Maven repository.&lt;/p&gt;

&lt;p&gt;Below that line, we configure a task called &lt;code&gt;sourceJar&lt;/code&gt;, which will generate the &lt;code&gt;.jar&lt;/code&gt; file with our library's source files.&lt;/p&gt;

&lt;p&gt;Now we are getting to the meaty part. We configure &lt;code&gt;publishToMavenLocal&lt;/code&gt; task, indicating the publications it should perform. In this case, there are two: &lt;code&gt;LibraryRelease&lt;/code&gt; and &lt;code&gt;LibraryDebug&lt;/code&gt;; each of them uses a different build variant.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;LIBRARY_GROUP, LIBRARY_ARTIFACT_ID, and LIBRARY_VERSION_NAME are constants defined in gradle.properties file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's see each &lt;code&gt;MavenPublication&lt;/code&gt; in detail:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="n"&gt;LibraryRelease&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;MavenPublication&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;release&lt;/span&gt; 
    &lt;span class="nf"&gt;artifact&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceJar&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
    &lt;span class="n"&gt;setGroupId&lt;/span&gt; &lt;span class="n"&gt;groupId&lt;/span&gt; 
    &lt;span class="n"&gt;setArtifactId&lt;/span&gt; &lt;span class="n"&gt;artifactId&lt;/span&gt; 
    &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;releaseSuffix&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are taking &lt;code&gt;LibraryRelease&lt;/code&gt; as an example. First, we apply the component with the release build variant. After that, we indicate that besides the &lt;code&gt;.aar&lt;/code&gt; file that is going to be generated, we also want to compile a &lt;code&gt;.jar&lt;/code&gt; file with the source files (this step is optional). Finally, we set a group ID, an artifact ID, and a version name for our library (in this case we are using different suffixes for debug and release variants).&lt;/p&gt;

&lt;p&gt;It is now time to generate a &lt;code&gt;.pom&lt;/code&gt; file for each of the publications. The &lt;code&gt;.pom&lt;/code&gt; file contains all the necessary configuration details that Maven uses to compile our project. Here we can find, among other things, the dependencies our library includes in detail.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="n"&gt;publications&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;pom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withXml&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="n"&gt;asNode&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;dependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'*'&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findAll&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
            &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'runtime'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
            &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;configurations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;implementation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;allDependencies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;dep&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;artifactId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}.&lt;/span&gt;&lt;span class="na"&gt;each&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;*.&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'compile'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;In my particular case, I had to write a special rule to correct the Maven scope of some of the dependencies I use in my library. This may not be necessary for you. More information on Maven scopes &lt;a href="https://reflectoring.io/maven-scopes-gradle-configurations/"&gt;here&lt;/a&gt; and &lt;a href="https://andresalmiray.com/maven-scopes-vs-gradle-configurations/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We end our script by printing a log with information about the published artifacts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#publishing-to-maven-local"&gt;
  &lt;/a&gt;
  Publishing to Maven local
&lt;/h3&gt;

&lt;p&gt;If you head to Gradle's task tree, inside the publishing section you will see we have these tasks available, which we can run depending on our needs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;publish[MODULE_NAME]DebugPublicationToMavenLocal&lt;/code&gt; compiles the project in debug mode.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;publish[MODULE_NAME]ReleasePublicationToMavenLocal&lt;/code&gt; compiles the project in release mode.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;publishToMavenLocal&lt;/code&gt; generates both debug and release versions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZrURJ_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72djerhkfu34y3lb9j8m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZrURJ_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72djerhkfu34y3lb9j8m.png" alt="Gradle task tree"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the following screenshot we can observe the output of a successful execution of &lt;code&gt;publishToMavenLocal&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JEVs-h-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxmxsklx4q66jtkgbyme.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JEVs-h-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxmxsklx4q66jtkgbyme.png" alt="Published library log"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gradle tasks can also be run from the command line, for example:&lt;br&gt;
&lt;code&gt;./gradlew publishToMavenLocal&lt;/code&gt;&lt;br&gt;
&lt;code&gt;./gradlew publishLibraryDebugPublicationToMavenLocal&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Awesome! We already have our library, with its two variants and their artifacts, published in Maven local. But now, how can we integrate it into another project?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integrating-your-library-in-a-project"&gt;
  &lt;/a&gt;
  Integrating your library in a project
&lt;/h2&gt;

&lt;p&gt;To import our library into another library or into an Android app, first we need to open our project-level &lt;code&gt;build.gradle&lt;/code&gt; file, and instruct it to use &lt;code&gt;mavenLocal()&lt;/code&gt; as repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="k"&gt;buildscript&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;repositories&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="n"&gt;mavenLocal&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
        &lt;span class="o"&gt;...&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;...&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt; 

&lt;span class="k"&gt;allprojects&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;repositories&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="n"&gt;mavenLocal&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; 
        &lt;span class="o"&gt;...&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once this is done, we must include our library as a dependence in our app-level (or module-level) &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="k"&gt;dependencies&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="s2"&gt;"com.me:my-awesome-lib:1.0.0"&lt;/span&gt; 
    &lt;span class="o"&gt;...&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Our library's identifier, in this case &lt;code&gt;com.me:my-awesome-lib:1.0.0&lt;/code&gt;, has the format &lt;code&gt;groupId:artifactId:versionName&lt;/code&gt;, as we instructed to Gradle earlier. This information can also be seen in the .pom file generated with the publication.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So we arrived at the final step! Now it's time to compile our project and check that our library is imported correctly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Today we tried an alternative to publishing an Android library, which hopefully will help you speed up your development process. We configured a Gradle file to publish debug and release versions of an Android library to Maven local repository, and then we learnt how to integrate it into our main project. I hope this article serves as one more tool for your daily work as an Android library developer.&lt;/p&gt;

</description>
      <category>android</category>
      <category>maven</category>
      <category>mavenlocal</category>
      <category>library</category>
    </item>
    <item>
      <title>Game Development Roadmap For Beginners</title>
      <author>Rocky</author>
      <pubDate>Thu, 22 Jul 2021 15:39:49 +0000</pubDate>
      <link>https://dev.to/codelivly/game-development-roadmap-for-beginners-4a53</link>
      <guid>https://dev.to/codelivly/game-development-roadmap-for-beginners-4a53</guid>
      <description>&lt;p&gt; By &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/&amp;amp;ved=2ahUKEwier_PQ1fbxAhXa4jgGHVYsAvoQFjAAegQIBxAC&amp;amp;usg=AOvVaw1PUPii-XosNgl1ZTInOseb"&gt;&lt;span&gt;Codelivly&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;:&lt;/p&gt;
&lt;p&gt;Game development is the art of creating games. Game developement is very exciting and intresting. It is a great carrer to pursue as there are many gamers around the world who play games in their daily life. But there are not a lot of game developers so there is a high demand for game developers.&lt;/p&gt;
&lt;p&gt;Average salary of a game developer is between $65k to $80k per month. You can also become a indie game developer who creates games individually and publish it to the playstore or appstore.&lt;/p&gt;
&lt;p&gt;So you have decided that you want to become a game developer but don’t know where to begin your journey don’t worry because today this is artcle is about game development roadmap and at end of this article you will be able to :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have clear way of your journey&lt;/li&gt;
&lt;li&gt;And Start making games&lt;/li&gt;
&lt;/ul&gt;
&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;Read More&lt;/b&gt;: &lt;/span&gt;&lt;span&gt;&lt;a href="https://bit.ly/3hXvBBO"&gt;Game Development Roadmap &lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;

</description>
    </item>
  </channel>
</rss>
