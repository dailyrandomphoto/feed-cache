<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Those ‚ÄúPesky‚Äù Pull Requests are Totally Worth It </title>
      <author>Nick Hodges</author>
      <pubDate>Fri, 20 Aug 2021 16:01:45 +0000</pubDate>
      <link>https://dev.to/linearb/those-pesky-pull-requests-are-totally-worth-it-578b</link>
      <guid>https://dev.to/linearb/those-pesky-pull-requests-are-totally-worth-it-578b</guid>
      <description>&lt;p&gt;Pretty much everyone does code reviews. They‚Äôve been around a long time. I remember back in my Borland days when the Chief Scientist would come in every morning and review all the code that had been checked into the Subversion(!) repository the previous day and send emails out to folks whose code wasn‚Äôt up to snuff. That‚Äôs old school.&lt;/p&gt;

&lt;p&gt;Slightly less old school? Saving all the check-ins up until Friday for the Dev Leads and/or Dev Managers to review and approve. Both of these techniques leave a lot to be desired ‚Äî the main thing being a complete lack of interaction between the developer, the code, and the reviewer.&lt;/p&gt;

&lt;p&gt;Code Reviews have a number of purposes. Probably the most important one is preserving the quality and integrity of the code in the repository. Even the two old-school ways above do that.&lt;/p&gt;

&lt;p&gt;But almost as important is the learning opportunity that code reviews can provide. If the only feedback a developer gets from a code review is mistakes in formatting or other trivial things like that, then nobody learns and gets better. The old school ways above provide for few opportunities for a developer to increase their skills. To provide learning opportunities, code reviews evolved into meetings where everyone looked at the code written that week and commented on it, criticized it, or otherwise ran it through the gauntlet. This did provide a learning opportunity for developers, but it took more time, as it was 100% synchronous and required all code to wait for the next scheduled meeting to be reviewed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KEWxG9sW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AlkPeY9sJ_As_KZfE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KEWxG9sW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AlkPeY9sJ_As_KZfE.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, almost no one is doing these old-school code reviews anymore. All the cool kids are doing pull requests. (Some folks call them ‚Äúmerge requests.‚Äù) Pull requests have a number of advantages over the previously mentioned methods, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Being done completely asynchronously, but in public for all to see.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No one needs to wait to review the code ‚Äî it can happen almost immediately after a pull request is issued.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A history of all the comments stays with the code in a repository. This allows a developer to come back to the code a year later and see all the thought that went into writing it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pull Requests can be tracked, monitored, and measured. &lt;a href="https://linearb.io/blog/three-git-pull-request-review-strategies/"&gt;A whole lot of good things can come out of that &lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#should-you-do-code-reviews-at-all"&gt;
  &lt;/a&gt;
  Should you do code reviews at all?
&lt;/h2&gt;

&lt;p&gt;Interestingly, some say no, you shouldn‚Äôt.&lt;/p&gt;

&lt;p&gt;Not only is Jessica Kerr a great speaker and a good Twitter follow, but she also has some interesting ideas about code reviews in her article of March 27 entitled ‚ÄúThose pesky pull request reviews .‚Äù In fact, she doesn‚Äôt like pull requests, and argues that you should sidestep them by just working on a given task as a team, so that everyone sees everything as the work gets done.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--99NnCfk7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AEBaePGd857-v63hu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--99NnCfk7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AEBaePGd857-v63hu.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;She believes that pull requests work great for open source projects where a ‚Äúteam‚Äù is really a set of individuals coordinating work together. For true development teams, she believes that if a team all works together on a single task, everyone learns and understands the code, and thus there is no task switching between coding and doing pull requests because the pull requests are unnecessary.&lt;/p&gt;

&lt;p&gt;Jessica‚Äôs idea is radical ‚Äî basically going beyond Pair Programming and moving into mob programming. Mob programming is the idea of having whole teams work together on projects in serial rather than individually in parallel. Mob programming can eliminate the need for pull requests by causing all of the communication and learning to take place during the coding phase, without any review.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#not-a-fan"&gt;
  &lt;/a&gt;
  Not a Fan
&lt;/h2&gt;

&lt;p&gt;I‚Äôm having a hard time agreeing with her idea for a couple of reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The transaction costs are too high. It seems to me that having four people work on a project together makes for many communication channels, increases the likelihood of interruptions, and reduces the amount of code that will actually get written. It‚Äôs sort of a ‚ÄúToo many cooks spoil the broth‚Äù notion.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It doesn‚Äôt capture the discussions and history that will remain long after the code is committed. One of the most important and powerful benefits of pull requests is the learning that can take place during and even long after code has been reviewed and deployed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally ‚Äî not all projects are conducive to multiple team members working together. Some are small and multiple people working together would be overkill. Some are esoteric and require the focus of one person. Some will match the team and can be worked on together. There‚Äôs no one size fits all solution for all projects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, not doing pull requests pretty much eliminates all the benefits of metrics systems like &lt;a href="https://linearb.io/"&gt;LinearB &lt;/a&gt;. Tracking the progress of pull requests and code reviews through the pipeline is a critical process for knowing how your team is performing. Without that, you can't measure things and if you can‚Äôt measure things, you can‚Äôt improve.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As part of a discussion about code reviews, Rob Kraft, one of the Development Leaders in our vibrant Dev Interrupted Discord Server (&lt;a href="https://discord.gg/wHvgytX9P7"&gt;you should join&lt;/a&gt;!) made the following comment that I agree with:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1rTPmF3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AKLA7-yvVpEIAmygh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1rTPmF3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AKLA7-yvVpEIAmygh.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think that what Jessica needs is a good look at LinearB. üôÇ&lt;/p&gt;

&lt;p&gt;Let me address some of her more specific objections:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;‚Äú&lt;strong&gt;Let‚Äôs face it: nobody wants to review pull requests.&lt;/strong&gt;‚Äù Well, I don‚Äôt think that is true. We here at LinearB see customers every day that are doing pull requests efficiently and effectively. Sure, pull requests can be hard and nobody wants to do them if you aren‚Äôt correctly incenting the team to create pull requests that are easy to review. No one likes a huge pull request. But through monitoring metrics like Pull Request Size, you can encourage your team to create small, easy-to-review pull requests. And voila! People don‚Äôt hate pull requests anymore.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‚Äú&lt;strong&gt;They‚Äôre a social interaction minefield!&lt;/strong&gt;‚Äù People complain that code reviews can cause strife on a team. Well, so can conversations during Mob Programming. I‚Äôm not sure that I see a distinction. And if doing a code review causes strife, then you have a cultural problem that no development methodology is going to solve.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‚Äú&lt;strong&gt;We could blame the people. We could nag them more. We could even automate the nagging!&lt;/strong&gt;‚Äù Well, if code reviews are small, concise, and easy to do, ‚Äúautomating the nagging‚Äù via our &lt;a href="https://linearb.io/blog/workerb-developer-automation/"&gt;WorkerB product&lt;/a&gt; is usually more than enough to get the ball rolling and keep it rolling. Notifications and tracking of any reviews that do happen to languish keep things moving as well. LinearB customers have seen drastic improvements in code pipeline productivity as a result of this so-called ‚Äúnagging‚Äù.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;‚Äú&lt;strong&gt;Maybe instead of trying to work a bit more together, we could work together.‚Äù&lt;/strong&gt; Well sure, but if you do that, checking in code without a process of pull requests and code reviews, well, then you aren‚Äôt getting all the benefits listed above, nor those of a metrics tool that can show you what your &lt;a href="https://linearb.io/blog/cycle-time-measuring-and-improving-team-process/"&gt;Cycle Time&lt;/a&gt; is doing. And I don‚Äôt believe that mob programming will prevent the cultural problems that can arise from code reviews. People will be people whether in a mob programming environment or in an asynchronous code review process.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#bottom-line"&gt;
  &lt;/a&gt;
  Bottom Line
&lt;/h2&gt;

&lt;p&gt;Okay ‚Äî so what rubber is hitting the road here?&lt;/p&gt;

&lt;p&gt;If pull requests and code reviews are hard and people don‚Äôt want to do them, then you are doing them wrong. So the trick is to make them easy to do.&lt;/p&gt;

&lt;p&gt;We here at LinearB see many, many customers improve their Cycle Time and their overall software development process by using and tracking pull requests. By combining metrics tracking around pull requests with tools like &lt;a href="https://linearb.io/developer-automation/"&gt;WorkerB&lt;/a&gt;, many, many development organizations have seen smaller pull requests, better reviews, shorter Cycle Times, and an overall sense that things are really humming.&lt;/p&gt;

&lt;p&gt;Monitoring things like the size of pull requests, when pull requests are assigned, picked up, and commented on, as well as monitoring the depth of reviews that take place all create an environment of small, discrete, easy to review pull requests.&lt;/p&gt;

&lt;p&gt;And of course, if you want to find out more about what our customers already know, you can &lt;a href="https://linearb.io/demo/"&gt;book a free demo of LinearB &lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the end, while her ideas are intriguing and thought-provoking, I can‚Äôt say I agree with Jessica‚Äôs argument. There doesn‚Äôt seem to be any good reason not to do pull requests with code reviews.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Jessica‚Äôs blog post &lt;a href="https://jessitron.com/2021/03/27/those-pesky-pull-request-reviews/"&gt;can be read on her Jessitron blog&lt;/a&gt;&lt;/em&gt; and you can follow her on Twitter at &lt;a href="https://twitter.com/jessitron"&gt;@jessitron&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you haven't already heard, Dev Interrupted is hosting &lt;strong&gt;INTERACT&lt;/strong&gt;: The interactive, community-driven, digital conference that takes place September 30th. Designed by engineering leaders, for engineering leaders, INTERACT will feature 10 speakers, 100s of engineers and engineering leaders, and is totally free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;Register Now&lt;/a&gt;
&lt;/h1&gt;




&lt;p&gt;If you haven‚Äôt already joined the best developer discord out there, WYD?&lt;/p&gt;

&lt;p&gt;Look, I know we talk about it a lot but we love our developer discord community. With over 1500 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No salespeople allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gBWLfe0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AxR_ViPMd2T8ljTzt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gBWLfe0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AxR_ViPMd2T8ljTzt.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://devinterrupted.com/pesky-pull-request-totally-worth-it/"&gt;https://devinterrupted.com&lt;/a&gt; on June 30, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>codereview</category>
      <category>programming</category>
      <category>discuss</category>
    </item>
    <item>
      <title>AWS Certified Developer Associate DVA-C01 Exam Questions Part 4</title>
      <author>awslagi.com</author>
      <pubDate>Fri, 20 Aug 2021 15:40:35 +0000</pubDate>
      <link>https://dev.to/iam_awslagi/aws-certified-developer-associate-dva-c01-exam-questions-part-4-6j3</link>
      <guid>https://dev.to/iam_awslagi/aws-certified-developer-associate-dva-c01-exam-questions-part-4-6j3</guid>
      <description>&lt;p&gt;Source:&lt;/p&gt;

&lt;p&gt;For AWS: &lt;a href="https://www.awslagi.com"&gt;https://www.awslagi.com&lt;/a&gt; \&lt;br&gt;
For GCP: &lt;a href="https://www.gcp-examquestions.com"&gt;https://www.gcp-examquestions.com&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A legacy service has an XML-based SOAP interface. The Developer wants to expose the functionality of the service to external clients with the Amazon API Gateway. Which technique will accomplish this?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Create a RESTful API with the API Gateway; transform the incoming JSON into a valid XML message for the SOAP interface using mapping templates.
        B. Create a RESTful API with the API Gateway; pass the incoming JSON to the SOAP interface through an Application Load Balancer.
        C. Create a RESTful API with the API Gateway; pass the incoming XML to the SOAP interface through an Application Load Balancer.
        D. Create a RESTful API with the API Gateway; transform the incoming XML into a valid message for the SOAP interface using mapping templates.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A supplier is writing a new RESTful API for customers to query the status of orders. The customers requested the following API endpoint. &lt;a href="http://www.supplierdomain.com/status/customerID"&gt;http://www.supplierdomain.com/status/customerID&lt;/a&gt; Which of the following application designs meet the requirements? (Select two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Amazon SQS; Amazon SNS
        B. Elastic Load Balancing; Amazon EC2
        C. Amazon ElastiCache; Amazon Elacticsearch Service
        D. Amazon API Gateway; AWS Lambda
        E. Amazon S3; Amazon CloudFront
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A company developed a set of APIs that are being served through the Amazon API Gateway. The API calls need to be authenticated based on OpenID identity providers such as Amazon or Facebook. The APIs should allow access based on a custom authorization model. Which is the simplest and MOST secure design to use to build an authentication and authorization model for the APIs?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Use Amazon Cognito user pools and a custom authorizer to authenticate and authorize users based on JSON Web Tokens.
        B. Build a OpenID token broker with Amazon and Facebook. Users will authenticate with these identity providers and pass the JSON Web Token to the API to authenticate each API call.
        C. Store user credentials in Amazon DynamoDB and have the application retrieve temporary credentials from AWS STS. Make API calls by passing user credentials to the APIs for authentication and authorization.
        D. Use Amazon RDS to store user credentials and pass them to the APIs for authentication and authorization.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A game stores user game data in an Amazon DynamoDB table. Individual users should not have access to other users‚Äô game data. How can this be accomplished?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Encrypt the game data with individual user keys.
        B. Restrict access to specific items based on certain primary key values.
        C. Stage data in SQS queues to inject metadata before accessing DynamoDB.
        D. Read records from DynamoDB and discard irrelevant data client-side.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is developing an application that manages financial transactions. To improve security, multi-factor authentication (MFA) will be required as part of the login protocol. What services can the Developer use to meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Amazon DynamoDB to store MFA session data, and Amazon SNS to send MFA codes
        B. Amazon Cognito with MFA
        C. AWS Directory Service
        D. AWS IAM with MFA enabled
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a deployment using AWS CodeDeploy, what is the run order of the hooks for in-place deployments?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Before Install -&amp;gt; Application Stop -&amp;gt; Application Start -&amp;gt; After Install
        B. Application Stop -&amp;gt; Before Install -&amp;gt; After Install -&amp;gt; Application Start
        C. Before Install -&amp;gt; Application Stop -&amp;gt; Validate Service -&amp;gt; Application Start
        D. Application Stop -&amp;gt; Before Install -&amp;gt; Validate Service -&amp;gt; Application Start
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amazon S3 has the following structure: S3://BUCKET/FOLDERNAME/FILENAME.zip Which S3 best practice would optimize performance with thousands of PUT request each second to a single bucket?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Prefix folder names with user id; for example, s3://BUCKET/2013-FOLDERNAME/FILENAME.zip
        B. Prefix file names with timestamps; for example, s3://BUCKET/FOLDERNAME/2013-26-05-15-00- 00-FILENAME.zip
        C. Prefix file names with random hex hashes; for example, s3://BUCKET/FOLDERNAME/23a6- FILENAME.zip
        D. Prefix folder names with random hex hashes; for example, s3://BUCKET/23a6-FOLDERNAME/FILENAME.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A static website is hosted in an Amazon S3 bucket. Several HTML pages on the site use JavaScript to download images from another Amazon S3 bucket. These images are not displayed when users browse the site. What is the possible cause for the issue?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. The referenced Amazon S3 bucket is in another region.
        B. The images must be stored in the same Amazon S3 bucket.
        C. Port 80 must be opened on the security group in which the Amazon S3 bucket is located.
        D. Cross Origin Resource Sharing must be enabled on the Amazon S3 bucket.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer has set up an Amazon Kinesis Stream with 4 shards to ingest a maximum of 2500 records per second. A Lambda function has been configured to process these records. In which order will these records be processed?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Lambda will receive each record in the reverse order it was placed into the stream following a LIFO (last-in, first-out) method
        B. Lambda will receive each record in the exact order it was placed into the stream following a FIFO (first-in, first-out) method.
        C. Lambda will receive each record in the exact order it was placed into the shard following a FIFO (first-in, first-out) method. There is no guarantee of order across shards.                 D. The Developer can select FIFO, (first-in, first-out), LIFO (last-in, last-out), random, or request specific records using the getRecords API.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is creating an application that needs to locate the public IPv4 address of the Amazon EC2 instance on which it runs. How can the application locate this information?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Get the instance metadata by retrieving http://169.254.169.254/latest/metadata/.
        B. Get the instance user data by retrieving http://169.254.169.254/latest/userdata/.
        C. Get the application to run IFCONFIG to get the public IP address.
        D. Get the application to run IPCONFIG to get the public IP address
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An application under development is required to store hundreds of video files. The data must be encrypted within the application prior to storage, with a unique key for each video file. How should the Developer code the application?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Use the KMS Encrypt API to encrypt the data. Store the encrypted data key and data.
        B. Use a cryptography library to generate an encryption key for the application. Use the encryption key to encrypt the data. Store the encrypted data.
        C. Use the KMS GenerateDataKey API to get a data key. Encrypt the data with the data key. Store the encrypted data key and data.
        D. Upload the data to an S3 bucket using server side-encryption with an AWS KMS key.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is writing a Linux-based application to run on AWS Elastic Beanstalk. Application requirements state that the application must maintain full capacity during updates while minimizing cost. Which type of Elastic Beanstalk deployment policy should the Developer specify for the environment?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Immutable
        B. Rolling
        C. All at Once
        D. Rolling with additional batch
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is creating a Lambda function and will be using external libraries that are not included in the standard Lambda libraries. What action would minimize the Lambda compute time consumed?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Install the dependencies and external libraries at the beginning of the Lambda function.
        B. Create a Lambda deployment package that includes the external libraries.
        C. Copy the external libraries to Amazon S3, and reference the external libraries to the S3 location.
        D. Install the external libraries in Lambda to be available to all Lambda functions.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;During non-peak hours, a Developer wants to minimize the execution time of a full Amazon DynamoDB table scan without affecting normal workloads. The workloads average half of the strongly consistent read capacity units during non-peak hours. How would the Developer optimize this scan?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Use parallel scans while limiting the rate
        B. Use sequential scans
        C. Increase read capacity units during the scan operation
        D. Change consistency to eventually consistent during the scan operation
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is writing transactions into a DynamoDB table called ‚ÄúSystemUpdates‚Äù that has 5 write capacity units. Which option has the highest read throughput?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Eventually consistent reads of 5 read capacity units reading items that are 4 KB in size
        B. Strongly consistent reads of 5 read capacity units reading items that are 4 KB in size
        C. Eventually consistent reads of 15 read capacity units reading items that are 1 KB in size
        D. Strongly consistent reads of 15 read capacity units reading items that are 1 KB in size
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A deployment package uses the AWS CLI to copy files into any S3 bucket in the account, using access keys stored in environment variables. The package is running on EC2 instances, and the instances have been modified to run with an assumed IAM role and a more restrictive policy that allows access to only one bucket. After the change, the Developer logs into the host and still has the ability to write into all of the S3 buckets in that account. What is the MOST likely cause of this situation?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. An IAM inline policy is being used on the IAM role
        B. An IAM managed policy is being used on the IAM role
        C. The AWS CLI is corrupt and needs to be reinstalled
        D. The AWS credential provider looks for instance profile credentials last
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An application is designed to use Amazon SQS to manage messages from many independent senders. Each sender‚Äôs messages must be processed in the order they are received. Which SQS feature should be implemented by the Developer?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Configure each sender with a unique MessageGroupId
        B. Enable MessageDeduplicationIds on the SQS queue
        C. Configure each message with unique MessageGroupIds.
        D. Enable ContentBasedDeduplication on the SQS queue
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An application has hundreds of users. Each user may use multiple devices to access the application. The Developer wants to assign unique identifiers to these users regardless of the device they use. Which of the following methods should be used to obtain unique identifiers?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Create a user table in Amazon DynamoDB as key-value pairs of users and their devices. Use these keys as unique identifiers.
        B. Use IAM-generated access key IDs for the users as the unique identifier, but do not store secret keys.
        C. Implement developer-authenticated identities by using Amazon Cognito, and get credentials for these identities.
        D. Assign IAM users and roles to the users. Use the unique IAM resource ID as the unique identifier.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer created a Lambda function for a web application backend. When testing the Lambda function from the AWS Lambda console, the Developer can see that the function is being executed, but there is no log data being generated in Amazon CloudWatch Logs, even after several minutes. What could cause this situation?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. The Lambda function does not have any explicit log statements for the log data to send it to CloudWatch Logs.
        B. The Lambda function is missing CloudWatch Logs as a source trigger to send log data.
        C. The execution role for the Lambda function is missing permissions to write log data to the CloudWatch Logs.
        D. The Lambda function is missing a target CloudWatch Log group.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An Amazon RDS database instance is used by many applications to look up historical data. The query rate is relatively constant. When the historical data is updated each day, the resulting write traffic slows the read query performance and affects all application users. What can be done to eliminate the performance impact on application users?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Make sure Amazon RDS is Multi-AZ so it can better absorb increased traffic.
        B. Create an RDS Read Replica and direct all read traffic to the replica.
        C. Implement Amazon ElastiCache in front of Amazon RDS to buffer the write traffic.
        D. Use Amazon DynamoDB instead of Amazon RDS to buffer the read traffic.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is trying to make API calls using SDK. The IAM user credentials used by the application require multi-factor authentication for all API calls. Which method the Developer use to access the multi-factor authentication protected API?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. GetFederationToken
        B. GetCallerIdentity
        C. GetSessionToken
        D. DecodeAutherizationMessage
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is testing a Docker-based application that uses the AWS SDK to interact with Amazon DynamoDB. In the local development environment, the application has used IAM access keys. The application is now ready for deployment onto an ECS cluster. How should the application authenticate with AWS services in production?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Configure an ECS task IAM role for the application to use
        B. Refactor the application to call AWS STS AssumeRole based on an instance role
        C. Configure AWS access key/secret access key environment variables with new credentials
        D. Configure the credentials file with a new access key/secret access key
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An application is running on a cluster of Amazon EC2 instances. While trying to read objects stored within a single Amazon S3 bucket that are encrypted with server-side encryption with AWS KMS managed keys (SSE-KMS), the application receives the following error:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Service: AWSKMS; Status Code: 400; Error Code: ThrottlingException&lt;/p&gt;

&lt;p&gt;Which combination of steps should be taken to prevent this failure? (Choose two.)&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;            A. Contact AWS Support to request an AWS KMS rate limit increase.
            B. Perform error retries with exponential backoff in the application code.
            C. Contact AWS Support to request a S3 rate limit increase.
            D. Import a customer master key (CMK) with a larger key size.
            E. Use more than one customer master key (CMK) to encrypt S3 data.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Hint Answers: C,D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A Developer has an e-commerce API hosted on Amazon ECS. Variable and spiking demand on the application is causing order processing to take too long. The application processes Amazon SQS queues. The ApproximateNumberOfMessagesVisible metric spikes at very high values throughout the day, which cause Amazon CloudWatch alarm breaches. Other ECS metrics for the API containers are well within limits. What can the Developer implement to improve performance while keeping costs low?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Target tracking scaling policy
        B. Docker Swarm
        C. Service scheduler
        D. Step scaling policy
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A Developer wants to build an application that will allow new users to register and create new user accounts. The application must also allow users with social media accounts to log in using their social media credentials. Which AWS service or feature can be used to meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. AWS IAM
        B. Amazon Cognito identity pools
        C. Amazon Cognito user pools
        D. AWS Directory Service
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company is developing a web application that allows its employees to upload a profile picture to a private Amazon S3 bucket. There is no size limit for the profile pictures, which should be displayed every time an employee logs in. For security reasons, the pictures cannot be publicly accessible. What is a viable long-term solution for this scenario?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Generate a pre-signed URL when a picture is uploaded. Save the URL in an Amazon DynamoDB table. Return the URL to the browser when the employee logs in.
        B. Save the picture‚Äôs S3 key in an Amazon DynamoDB table. Create an Amazon S3 VPC endpoint to allow the employees to download pictures once they log in.
        C. Encode a picture using base64. Save the base64 string in an Amazon DB table. Allow the browser to retrieve the string and convert it to a picture.
        D. Save the picture‚Äôs S3 key in an Amazon DynamoDB table. Use a function to generate a presigned URL every time an employee logs in. Return the URL to the browser.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A Developer is going to deploy an AWS Lambda function that requires significant CPU utilization. Which approach will MINIMIZE the average runtime of the function?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Deploy the function into multiple AWS Regions.
        B. Deploy the function into multiple Availability Zones.
        C. Deploy the function using Lambda layers.
        D. Deploy the function with its memory allocation set to the maximum amount.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company has a legacy application that was migrated to a fleet of Amazon EC2 instances. The application stores data in a MySQL database that is currently installed on a single EC2 instance. The company has decided to migrate the database from the EC2 instance to MySQL on Amazon EDS. What should the Developer do to update the application to support data storage in Amazon RDS?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Update the database connection parameters in the application to point to the new RDS instance.
        B. Add a script to the EC2 instance that implements an AWS SDK for requesting database credentials.
        C. Create a new EC2 instance with an IAM role that allows access to the new RDS database.
        D. Create an AWS Lambda function that will route traffic, from the EC2 instance to the RDS database.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A Developer is working on an AWS Lambda function that accesses Amazon DynamoDB. The Lambda function must retrieve an item and update some of its attributes, or create the item if it does not exist. The Lambda function has access to the primary key. Which IAM permissions should the Developer request for the Lambda function to achieve this functionality?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. dynamodb:DeleteItem
        dynamodb:GetItem
        dynamodb:PutItem
        B. dynamodb:UpdateItem
        dynamodb:GetItem
        dynamodb:DescribeTable
        C. dynamodb:GetRecords
        dynamodb:PutItem
        dynamodb:UpdateTable
        D. dynamodb:UpdateItem
        dynamodb:GetItem
        dynamodb:PutItem
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A Developer is storing sensitive data generated by an application in Amazon S3. The Developer wants to encrypt the data at rest. A company policy requires an audit trail of when the master key was used and by whom. Which encryption option will meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Server-side encryption with Amazon S3 managed keys (SSE-S3)
        B. Server-side encryption with AWS KMS managed keys (SSE-KMS)
        C. Server-side encryption with customer-provided keys (SSE-C)
        D. Server-side encryption with self-managed keys
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: B&lt;/p&gt;

</description>
      <category>awslagi</category>
      <category>aws</category>
      <category>googlecloud</category>
    </item>
    <item>
      <title>Simple work with Git Fork</title>
      <author>Dawid</author>
      <pubDate>Fri, 20 Aug 2021 15:26:19 +0000</pubDate>
      <link>https://dev.to/daw888/simple-work-with-git-fork-3cdj</link>
      <guid>https://dev.to/daw888/simple-work-with-git-fork-3cdj</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;"A fork is a copy of a repository that you manage. Forks let you make changes to a project without affecting the original repository."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://docs.github.com/en/github/collaborating-with-pull-requests/working-with-forks/about-forks"&gt;Link for github docs&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#on-the-start"&gt;
  &lt;/a&gt;
  On the start
&lt;/h1&gt;

&lt;p&gt;We have 2 repos&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;original&lt;/strong&gt; &lt;code&gt;github/OWNER/original&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;forked&lt;/strong&gt; &lt;code&gt;github/YOU/forked&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In forked repo we can check our settings&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git remote &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git &lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git &lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the next we need to add original repo as &lt;strong&gt;upstream&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we should see&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git remote &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git &lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git &lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git &lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git &lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#get-changes-from-original-to-forked"&gt;
  &lt;/a&gt;
  Get changes from original to forked
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git fetch upstream
git checkout main
git merge upstream/main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#creating-pull-request-from-forked-to-original"&gt;
  &lt;/a&gt;
  Creating Pull Request from forked to original
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# FORKED repo&lt;/span&gt;

&lt;span class="c"&gt;# make changes&lt;/span&gt;

git add &lt;span class="nb"&gt;.&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"message"&lt;/span&gt;
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then go to github and create Pull Request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qooWUGPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dit11pxe9tf2j5oq9mr6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qooWUGPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dit11pxe9tf2j5oq9mr6.png" alt="PR on github"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#workflow"&gt;
  &lt;/a&gt;
  Workflow
&lt;/h1&gt;

&lt;p&gt;To keep workflow clean: &lt;/p&gt;

&lt;p&gt;‚úÖ original ‚Üí forked&lt;/p&gt;

&lt;p&gt;‚õî forked ‚Üí original (do it only when you are sure what are you doing!)&lt;/p&gt;

</description>
      <category>git</category>
      <category>fork</category>
      <category>github</category>
      <category>bitbucket</category>
    </item>
    <item>
      <title>How to monitor the progress of a Javascript fetch - request and cancel it on demand.</title>
      <author>tq-bit</author>
      <pubDate>Fri, 20 Aug 2021 14:07:41 +0000</pubDate>
      <link>https://dev.to/tqbit/how-to-monitor-the-progress-of-a-javascript-fetch-request-and-cancel-it-on-demand-107f</link>
      <guid>https://dev.to/tqbit/how-to-monitor-the-progress-of-a-javascript-fetch-request-and-cancel-it-on-demand-107f</guid>
      <description>&lt;p&gt;TL: DR -&amp;gt; Take me to the code: &lt;a href="https://github.com/tq-bit/fetch-progress"&gt;https://github.com/tq-bit/fetch-progress&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.q-bit.me/make-api-requests-with-javascript/"&gt;In an earlier post,&lt;/a&gt; I've already given an overview of how to interact with an API using fetch. In this article, I'd like to dig deeper into two more detailed use-cases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Monitor the download progress while making an HTTP request.&lt;/li&gt;
&lt;li&gt;  Gracefully cancel a request by a user's input.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you would like to follow along, you can use this Github branch to get started. It includes no Javascript, just some styles and HTML: &lt;a href="https://github.com/tq-bit/fetch-progress/tree/get-started"&gt;https://github.com/tq-bit/fetch-progress/tree/get-started&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wyA59r6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.q-bit.me/content/images/2021/08/Screenshot-from-2021-08-15-18-29-17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wyA59r6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.q-bit.me/content/images/2021/08/Screenshot-from-2021-08-15-18-29-17.png" alt="an image that shows a download progressbar, a button to start a fetch request and a button to cancel it"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the UI we will start off with. The progress indicator will visualize the fetch - progress¬†&lt;/p&gt;

&lt;p&gt;So spin up your favorite code editor and let's dive in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-the-basic-fetch-request"&gt;
  &lt;/a&gt;
  Create the basic fetch request
&lt;/h2&gt;

&lt;p&gt;Before starting with the advanced stuff, let's build up a simple function. The task is to develop a piece of utility code that allows you to search for universities. Fortunately, &lt;a href="https://github.com/Hipo"&gt;Hipo&lt;/a&gt; has just the tool to build up upon.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  I'm using &lt;a href="https://github.com/Hipo/university-domains-list"&gt;this repository&lt;/a&gt;'s hosted API as a starting place.&lt;/li&gt;
&lt;li&gt;  Its root URL is &lt;a href="http://universities.hipolabs.com/"&gt;http://universities.hipolabs.com/&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;  I'd like to restrict my search to all universities in the USA with a query.&lt;/li&gt;
&lt;li&gt;  On the technical side, I'd like to keep my fetch logic inside a wrapper function.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That being said, let's start by adding the following code to the &lt;code&gt;client.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rootUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;chunks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


  &lt;span class="c1"&gt;// let controller = null; // We will get to this variable in a second&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rootUrl&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusText&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;
      &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;finally&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, let's import this function into the &lt;code&gt;main.js&lt;/code&gt; file and initialize it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Import the fetch client and initalize it&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./client.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://universities.hipolabs.com/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Grab the DOM elements&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;progressbutton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fetch-button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Bind the fetch function to the button's click event&lt;/span&gt;
&lt;span class="nx"&gt;progressbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;universities&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;search?country=United+States&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;universities&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Clicking on the &lt;strong&gt;Fetch&lt;/strong&gt; - button will now print us the requested universities to our console:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--13dS19rb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.q-bit.me/content/images/2021/08/Screenshot-from-2021-08-15-19-01-36.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--13dS19rb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.q-bit.me/content/images/2021/08/Screenshot-from-2021-08-15-19-01-36.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rebuild-the-json-method"&gt;
  &lt;/a&gt;
  Rebuild the .json() - method
&lt;/h2&gt;

&lt;p&gt;To monitor progress, we need to rebuild a good part of the standard &lt;code&gt;.json()&lt;/code&gt; method. It also implicates that we will also have to take care of assembling the response body, chunk by chunk.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I've written an article about &lt;a href="https://blog.q-bit.me/use-node-streams-to-upload-files/"&gt;handling Node.js streams&lt;/a&gt; earlier. The approach shown here is quite similar.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So let's add the following to the &lt;code&gt;client.js&lt;/code&gt; file, right below the &lt;code&gt;json&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rootUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 

  &lt;span class="c1"&gt;// ... previous functions&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;_readBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getReader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// Declare received as 0 initially&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;received&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Loop through the response stream and extract data chunks&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Finish loading &lt;/span&gt;
        &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Push values to the chunk array&lt;/span&gt;
        &lt;span class="nx"&gt;chunks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Concat the chinks into a single array&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Uint8Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;received&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Order the chunks by their respective position&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;chunk&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;chunks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Decode the response and return it&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TextDecoder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;utf-8&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, let's replace &lt;code&gt;response.json()&lt;/code&gt; as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="c1"&gt;// results = response.json();&lt;/span&gt;
  &lt;span class="c1"&gt;// return results;&lt;/span&gt;
  &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;_readBody&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The response in the browser is still the same as previously - a decoded JSON object. As the response's body itself is a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/getReader"&gt;readable stream&lt;/a&gt;, we can now monitor whenever a new piece of data is being read or whether the stream is closed yet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-the-maximum-and-current-data-length"&gt;
  &lt;/a&gt;
  Get the maximum and current data length
&lt;/h2&gt;

&lt;p&gt;The two core numbers for progress monitoring are found here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  The &lt;code&gt;content-length&lt;/code&gt; header from the response, the variable &lt;code&gt;length&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  The cumulated &lt;code&gt;length&lt;/code&gt; of the received data chunks, variable &lt;code&gt;received&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that this function does not work if the &lt;code&gt;content-length&lt;/code&gt; header is not configured on the serverside.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As we already have the variable &lt;code&gt;received&lt;/code&gt; available, ¬†let's add &lt;code&gt;content-length&lt;/code&gt; to our &lt;code&gt;_readBody&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;_readBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getReader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// This header must be configured serverside&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content-length&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

    &lt;span class="c1"&gt;// Declare received as 0 initially&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;received&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Finish loading&lt;/span&gt;
      &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Push values to the chunk array&lt;/span&gt;
      &lt;span class="nx"&gt;chunks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="c1"&gt;// Add on to the received length&lt;/span&gt;
      &lt;span class="nx"&gt;received&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that, we have all relevant indicator values available. What is missing is a way to emit them to the calling function. That can easily be done by using a Javascript framework's reactive features, like React Hooks or Vue's composition API. In this case, however, we'll stick with a builtin browser feature called &lt;code&gt;CustomEvent&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#make-fetch-progress-available-with-events"&gt;
  &lt;/a&gt;
  Make fetch progress available with events
&lt;/h2&gt;

&lt;p&gt;To wrap the monitoring feature up, let's create two custom events:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  One for whenever a data chunk is read, event &lt;code&gt;fetch-progress&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  One for when the fetch request is finished, event &lt;code&gt;fetch-finished&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both events will be bound to the window object. Like this, they'll be available outside of the &lt;code&gt;http&lt;/code&gt; - function's scope.&lt;/p&gt;

&lt;p&gt;Inside the &lt;code&gt;_readBody()&lt;/code&gt;, adjust the while... loop as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;_readBody&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="c1"&gt;// Loop through the response stream and extract data chunks&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;received&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onProgress&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CustomEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fetch-progress&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onFinished&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CustomEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fetch-finished&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Finish loading&lt;/span&gt;
        &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// Fired when reading the response body finishes&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatchEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onFinished&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Push values to the chunk array&lt;/span&gt;
        &lt;span class="nx"&gt;chunks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;received&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// Fired on each .read() - progress tick&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatchEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onProgress&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// ... &lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#display-progress-in-the-ui"&gt;
  &lt;/a&gt;
  Display progress in the UI
&lt;/h2&gt;

&lt;p&gt;The final step to take is catching both custom events and change the progress bar's value accordingly. Let's jump over to the &lt;code&gt;main.js&lt;/code&gt; file and adjust it as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Grab some relevant DOM elements&lt;/li&gt;
&lt;li&gt;  Add the event listener for &lt;code&gt;fetch-progress&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  Add the event listener for &lt;code&gt;fetch-finished&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  We can then access the progress values by destructuring from the &lt;code&gt;e.detail&lt;/code&gt; property and adjust the progress bar value.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Import the fetch client and initalize it&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./client.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Grab the DOM elements&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;progressbar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;progress-bar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;progressbutton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fetch-button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;progresslabel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;progress-label&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://universities.hipolabs.com/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setProgressbarValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;received&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;received&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;progresslabel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Download progress: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;progressbar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Bind the fetch function to the button's click event&lt;/span&gt;
&lt;span class="nx"&gt;progressbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;universities&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;search?country=United+States&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;universities&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fetch-progress&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setProgressbarValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fetch-finished&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setProgressbarValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And there we have it - you can now monitor your fetch request's progress.&lt;/p&gt;

&lt;p&gt;Still, there are some adjustments to be made:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Reset the scoped variables&lt;/li&gt;
&lt;li&gt;  Allow the user to cancel the request&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you've come this far with reading, stay with me for a few more lines.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reset-the-scoped-variables"&gt;
  &lt;/a&gt;
  Reset the scoped variables
&lt;/h2&gt;

&lt;p&gt;This is as straightforward as it sounds and gives us a nice, reusable function.&lt;/p&gt;

&lt;p&gt;Add the following right under the &lt;code&gt;_readBody()&lt;/code&gt; - function in your &lt;code&gt;client.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;_resetLocals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;chunks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;controller&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AbortController&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Remeber that you must call &lt;code&gt;resetLocals()&lt;/code&gt; in the &lt;code&gt;json()&lt;/code&gt; function first.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rootUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;chunks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;controller&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Make sure to uncomment this variable&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;_resetLocals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="c1"&gt;// ... rest of the json function&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// ... rest of the http function&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the above function, we also brought in a new object called &lt;code&gt;AbortController&lt;/code&gt;. As the name suggests, we can use it to cut an active request.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cancel-an-ongoing-request"&gt;
  &lt;/a&gt;
  Cancel an ongoing request
&lt;/h2&gt;

&lt;p&gt;Using the created AbortController, we can now create a signal. It serves as a communication interface between the controller itself and the outgoing HTTP request. Imagine it like a built-in kill switch.&lt;/p&gt;

&lt;p&gt;To set it up, modify your &lt;code&gt;client.js&lt;/code&gt; file like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Create the signal &amp;amp; pass it into the fetch request options.&lt;/li&gt;
&lt;li&gt;  Create a new function that calls the controller's abort function.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;_resetLocals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;signal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rootUrl&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="c1"&gt;// ... rest of the trycatch function&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// ... rest of the json function&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Cancel an ongoing fetch request&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cancel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;_resetLocals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abort&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Make sure to export cancel&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cancel&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, let's jump over to &lt;code&gt;main.js&lt;/code&gt; and bind the event to our second button&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ... other variable declarations&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;abortbutton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abort-button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cancel&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://universities.hipolabs.com/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// ... other functions and event listeners&lt;/span&gt;
&lt;span class="nx"&gt;abortbutton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;cancel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Request has been cancelled&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you now hit &lt;strong&gt;Fetch&lt;/strong&gt; and &lt;strong&gt;Cancel&lt;/strong&gt; &lt;strong&gt;Request&lt;/strong&gt; right after, you will see an alert indicating that the request, even if it returns an HTTP status of 200, returns no data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S4JExAEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.q-bit.me/content/images/2021/08/Screenshot-from-2021-08-16-17-22-52.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S4JExAEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.q-bit.me/content/images/2021/08/Screenshot-from-2021-08-16-17-22-52.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-next"&gt;
  &lt;/a&gt;
  What next?
&lt;/h2&gt;

&lt;p&gt;Unfortunately, by the time I researched for this article, I could not find a common way to monitor upload progress. The official whatwg Github repository has an &lt;a href="https://github.com/whatwg/fetch/issues/607"&gt;open issue&lt;/a&gt; on a feature named &lt;code&gt;FetchObserver&lt;/code&gt;. However, it seems we'll have to be patient for it to be implemented. Perhaps, it will make the features described in this article easier as well. The future will tell.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/whatwg/fetch/issues/607"&gt;https://github.com/whatwg/fetch/issues/607&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This post was originally published at &lt;a href="https://blog.q-bit.me/monitoring-and-canceling-a-javascript-fetch-request/"&gt;https://blog.q-bit.me/monitoring-and-canceling-a-javascript-fetch-request/&lt;/a&gt;&lt;br&gt;
Thank you for reading. If you enjoyed this article, let's stay in touch on Twitter üê§ &lt;a href="https://twitter.com/qbitme"&gt;@qbitme&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>http</category>
    </item>
    <item>
      <title>Differences between Object.freeze( ) and Object.seal( ) in Javascript</title>
      <author>Maria Antonella ü¶ã</author>
      <pubDate>Fri, 20 Aug 2021 14:03:37 +0000</pubDate>
      <link>https://dev.to/antoomartini/differences-between-object-freeze-and-object-seal-in-javascript-n11</link>
      <guid>https://dev.to/antoomartini/differences-between-object-freeze-and-object-seal-in-javascript-n11</guid>
      <description>&lt;p&gt;They are functions that may appear to do the same action but have significant differences. And it was difficult for me to learn it. I don't know why but they always confused me.&lt;/p&gt;

&lt;p&gt;üëâ &lt;em&gt;Object.freeze()&lt;/em&gt;: It prevents you from adding new properties, removing existing properties and modifying them. &lt;/p&gt;

&lt;p&gt;üëâ &lt;em&gt;Object.seal()&lt;/em&gt;: You can modify existing properties but you can't delete or add new ones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#crud-operations"&gt;
  &lt;/a&gt;
  CRUD Operations
&lt;/h2&gt;

&lt;p&gt;If we differentiate them through the CRUD operations: Create - Read - Update - Delete, we obtain the following comparison.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;                  Create     Read    Update     Delete
Object.freeze()    ‚ùå        ‚òëÔ∏è      ‚ùå         ‚ùå
Object.seal()      ‚ùå        ‚òëÔ∏è      ‚òëÔ∏è         ‚ùå

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The wonderful world of Javascript. That's all for today :)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>begginers</category>
    </item>
    <item>
      <title>üöÄ10 Trending projects on GitHub for web developers - 20th August 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 20 Aug 2021 14:00:12 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-20th-august-2021-2jal</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-20th-august-2021-2jal</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-shiki"&gt;
  &lt;/a&gt;
  1. Shiki
&lt;/h3&gt;

&lt;p&gt;A beautiful Syntax Highlighter.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/shikijs"&gt;
        shikijs
      &lt;/a&gt; / &lt;a href="https://github.com/shikijs/shiki"&gt;
        shiki
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A beautiful Syntax Highlighter.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
Shiki&lt;/h2&gt;
&lt;p&gt;
  Shiki is a beautiful Syntax Highlighter. &lt;a href="http://shiki.matsu.io" rel="nofollow"&gt;Demo&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Usage&lt;/h2&gt;

&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm i shiki
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; yarn add shiki&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;shiki&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'shiki'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;

&lt;span class="pl-s1"&gt;shiki&lt;/span&gt;
  &lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;getHighlighter&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;theme&lt;/span&gt;: &lt;span class="pl-s"&gt;'nord'&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
  &lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;then&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;highlighter&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;highlighter&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;codeToHtml&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;`console.log('shiki');`&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;'js'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;

&lt;span class="pl-c"&gt;// &amp;lt;pre class="shiki" style="background-color: #2e3440"&amp;gt;&amp;lt;code&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;//   &amp;lt;!-- Highlighted Code --&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;// &amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;='&lt;span class="pl-s"&gt;https://unpkg.com/shiki&lt;/span&gt;'&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-s1"&gt;shiki&lt;/span&gt;
  &lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;getHighlighter&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;theme&lt;/span&gt;: &lt;span class="pl-s"&gt;'nord'&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
  &lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;then&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;highlighter&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;code&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;highlighter&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;codeToHtml&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;`console.log('shiki');`&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;'js'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
    &lt;span class="pl-smi"&gt;document&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;getElementById&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'output'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;innerHTML&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;code&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shikijs/shiki./docs/themes.md"&gt;Themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shikijs/shiki./docs/languages.md"&gt;Languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shikijs/shiki./packages/renderer-svg/README.md"&gt;SVG Renderer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shikijs/shiki./packages/vuepress-plugin/README.md"&gt;vuepress-plugin-shiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Clone &lt;a href="https://github.com/shikijs/shiki-starter"&gt;shikijs/shiki-starter&lt;/a&gt; to play with Shiki, or try it out on &lt;a href="https://repl.it/@octref/shiki-starter" rel="nofollow"&gt;Repl.it&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Seen&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Shiki Docs: &lt;a href="https://shiki.matsu.io" rel="nofollow"&gt;https://shiki.matsu.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Interactive Demo on CodeSandbox (with Next.js)‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/shikijs/shiki"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#2-awesome-guidelines"&gt;
  &lt;/a&gt;
  2. Awesome Guidelines
&lt;/h3&gt;

&lt;p&gt;A curated list of high quality coding style conventions and standards.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Kristories"&gt;
        Kristories
      &lt;/a&gt; / &lt;a href="https://github.com/Kristories/awesome-guidelines"&gt;
        awesome-guidelines
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A curated list of high quality coding style conventions and standards.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/Kristories/awesome-guidelinesassets/header.png"&gt;&lt;img alt="Awesome Guidelines" src="https://res.cloudinary.com/practicaldev/image/fetch/s--6jM1KEcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Kristories/awesome-guidelinesassets/header.png"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
Awesome Guidelines &lt;a href="https://awesome.re" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d0405ddcbeac98b5806832e6254a0a102e09b47637c2ddec9a8094cb2257b31/68747470733a2f2f617765736f6d652e72652f62616467652d666c6174322e737667" alt="Awesome"&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;A set of guidelines for a specific programming language that recommend programming style, practices, and methods for each aspect of a program written in that language.&lt;/p&gt;

&lt;p&gt;Contributions welcome. Please read the &lt;a href="https://github.com/Kristories/awesome-guidelines#contribute"&gt;contribution guidelines&lt;/a&gt; before contributing. Add links through pull requests or create an issue to start a discussion.&lt;/p&gt;

&lt;h2&gt;
Contents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Kristories/awesome-guidelines#programming-languages"&gt;Programming Languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kristories/awesome-guidelines#development-environment"&gt;Development Environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kristories/awesome-guidelines#platforms"&gt;Platforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kristories/awesome-guidelines#frameworks"&gt;Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kristories/awesome-guidelines#content-management-system"&gt;Content Management System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kristories/awesome-guidelines#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kristories/awesome-guidelines#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Programming Languages&lt;/h2&gt;

&lt;h3&gt;
Brainfuck&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codepen.io/renmans/full/JjdJPpW" rel="nofollow"&gt;BF Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
C&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20080039927.pdf" rel="nofollow"&gt;NASA C++ Coding Standards and Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://users.ece.cmu.edu/~eno/coding/CCodingStandard.html" rel="nofollow"&gt;C Coding Standard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikibooks.org/wiki/C_Programming/Structure_and_style" rel="nofollow"&gt;C Programming/Structure and style&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
C#&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/inside-a-program/coding-conventions" rel="nofollow"&gt;C# Coding Conventions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raywenderlich/c-sharp-style-guide"&gt;C# Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dofactory.com/reference/csharp-coding-standards" rel="nofollow"&gt;C# Coding Standards and Naming Conventions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
C++&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://google.github.io/styleguide/cppguide.html" rel="nofollow"&gt;Google C++ Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines" rel="nofollow"&gt;C++ Core Guidelines&lt;/a&gt; - A set of tried-and-true guidelines, rules, and best practices about coding in C++.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Clojure&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/bbatsov/clojure-style-guide"&gt;The Clojure Style Guide&lt;/a&gt; - A community coding style guide for the Clojure programming language.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Common Lisp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lisp-lang.org/style-guide/" rel="nofollow"&gt;Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://google.github.io/styleguide/lispguide.xml" rel="nofollow"&gt;Google Common Lisp Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://labs.ariel-networks.com/cl-style-guide.html" rel="nofollow"&gt;Common Lisp Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
D&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dlang.org/dstyle.html" rel="nofollow"&gt;The D&lt;/a&gt;‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Kristories/awesome-guidelines"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-absurdsql"&gt;
  &lt;/a&gt;
  3. absurd-sql
&lt;/h3&gt;

&lt;p&gt;Implements a backend for sql.js (sqlite3 compiled for the web) that treats IndexedDB like a disk and stores data in blocks there. That means your sqlite3 database is persisted. And not in the terrible way of reading and writing the whole image at once -- it reads and writes your db in small chunks.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jlongster"&gt;
        jlongster
      &lt;/a&gt; / &lt;a href="https://github.com/jlongster/absurd-sql"&gt;
        absurd-sql
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      sqlite3 in ur indexeddb (hopefully a better backend soon)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;This is an absurd project.&lt;/p&gt;
&lt;p&gt;It implements a backend for &lt;a href="https://github.com/sql-js/sql.js/"&gt;sql.js&lt;/a&gt; (sqlite3 compiled for the web) that treats IndexedDB like a disk and stores data in blocks there. That means your sqlite3 database is persisted. And not in the terrible way of reading and writing the whole image at once -- it reads and writes your db in small chunks.&lt;/p&gt;
&lt;p&gt;It basically stores a whole database into another database. Which is absurd.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://priceless-keller-d097e5.netlify.app/" rel="nofollow"&gt;See the demo&lt;/a&gt;. You can also view an entire app using this &lt;a href="https://app-next.actualbudget.com/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You should also read &lt;a href="https://jlongster.com/future-sql-web" rel="nofollow"&gt;this blog post&lt;/a&gt; which explains the project in great detail.&lt;/p&gt;
&lt;p&gt;If you like my work, feel free to &lt;a href="https://www.buymeacoffee.com/jlongster" rel="nofollow"&gt;buy me a coffee!&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
How do I use it?&lt;/h2&gt;
&lt;p&gt;You can check out the &lt;a href="https://github.com/jlongster/absurd-example-project"&gt;example project&lt;/a&gt; to get started. Or follow the steps below:&lt;/p&gt;
&lt;p&gt;First you install the packages:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;yarn add @jlongster/sql.js absurd-sql.js-backend
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Right now you need to use my fork‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jlongster/absurd-sql"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-hyperformula"&gt;
  &lt;/a&gt;
  4. HyperFormula
&lt;/h3&gt;

&lt;p&gt;A complete, open-source Excel-like calculation engine written in TypeScript. Includes 380+ built-in functions. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/handsontable"&gt;
        handsontable
      &lt;/a&gt; / &lt;a href="https://github.com/handsontable/hyperformula"&gt;
        hyperformula
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A complete, open-source Excel-like calculation engine written in TypeScript. Includes 380+ built-in functions. Maintained by the Handsontable team‚ö°
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;a href="https://handsontable.github.io/hyperformula/" rel="nofollow"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lSl2mDgb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/handsontable/hyperformula./github-hf-logo-blue.svg" width="250" height="51" alt="HyperFormula"&gt;
&lt;/a&gt;
&lt;h3&gt;
HyperFormula is an open source, spreadsheet-like calculation engine ‚ö°
&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/handsontable/hyperformula/actions?query=workflow%3ATest+branch%3Amaster"&gt;&lt;img src="https://camo.githubusercontent.com/80aecd4d3c0a82908484a9ab450d2d44124474559f682a004104b089ff9addcd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f68616e64736f6e7461626c652f6879706572666f726d756c612f54657374" alt="GitHub Workflow Status"&gt;&lt;/a&gt;
&lt;a href="https://app.fossa.io/projects/git%2Bgithub.com%2Fhandsontable%2Fhyperformula?ref=badge_shield" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ce06ace9e22234405b1eb46f21bf97ea38658a45b26cce92475696af36d156b/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f6769742532426769746875622e636f6d25324668616e64736f6e7461626c652532466879706572666f726d756c612e7376673f747970653d736869656c64" alt="FOSSA Status"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/handsontable/hyperformula" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc15c15bce59ed38453438ff6de4d0f04dcb3641c26db77c3c5158c7f689933b/68747470733a2f2f636f6465636f762e696f2f67682f68616e64736f6e7461626c652f6879706572666f726d756c612f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d356b395a517638617a4f" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/handsontable/hyperformula/context:javascript" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b65e677e136a80531de60efe8e437c5c793a84ee8ac3111d161ac0c96ea68732/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6a6176617363726970742f672f68616e64736f6e7461626c652f6879706572666f726d756c612e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Language grade: JavaScript"&gt;&lt;/a&gt;
&lt;a href="https://snyk.io/test/github/handsontable/hyperformula?targetFile=package.json" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3aedba0254ffb6bf1f9c87b4637a768faf23b38cd7ccd798e7f62ab3400c049/68747470733a2f2f736e796b2e696f2f746573742f6769746875622f68616e64736f6e7461626c652f6879706572666f726d756c612f62616467652e7376673f74617267657446696c653d7061636b6167652e6a736f6e" alt="Known Vulnerabilities"&gt;&lt;/a&gt;
&lt;a href="https://github.com/handsontable/hyperformula/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/12948c003dcb2e1534ef21cc8d9a9263f13b53462217fd5d74280176df24541d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f68616e64736f6e7461626c652f6879706572666f726d756c61" alt="GitHub contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Description&lt;/h2&gt;
&lt;p&gt;HyperFormula allows you to perform spreadsheet-like calculations in your
web applications. It is written in TypeScript and supports all major
JavaScript frameworks. You can use it in a browser or as a service with
Node.js as your back-end technology.&lt;/p&gt;
&lt;p&gt;The engine comes with a built-in, localized
&lt;a href="https://handsontable.github.io/hyperformula/guide/built-in-functions.html" rel="nofollow"&gt;library of functions&lt;/a&gt;
grouped into different categories, and covers most user-triggered actions
such as &lt;a href="https://handsontable.github.io/hyperformula/guide/basic-operations.html" rel="nofollow"&gt;CRUD operations&lt;/a&gt;
&lt;a href="https://handsontable.github.io/hyperformula/guide/undo-redo.html" rel="nofollow"&gt;undo/redo&lt;/a&gt;
and &lt;a href="https://handsontable.github.io/hyperformula/guide/clipboard-operations.html" rel="nofollow"&gt;clipboard operations&lt;/a&gt;
It also supports the use of cross-sheet references,
&lt;a href="https://handsontable.github.io/hyperformula/guide/named-ranges.html" rel="nofollow"&gt;named expressions&lt;/a&gt;,
different &lt;a href="https://handsontable.github.io/hyperformula/guide/types-of-values.html" rel="nofollow"&gt;data types&lt;/a&gt;,
and &lt;a href="https://handsontable.github.io/hyperformula/guide/custom-functions.html" rel="nofollow"&gt;custom functions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=JJXUmACTDdk" rel="nofollow"&gt;Explainer video&lt;/a&gt; /
&lt;a href="https://handsontable.com/blog/articles/2020/6/introducing-hyperformula-fast-javascript-calculation-engine" rel="nofollow"&gt;Blog post&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Demos
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://handsontable.github.io/hyperformula/guide/demo.html" rel="nofollow"&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://handsontable.github.io/hyperformula/guide/integration-with-react.html" rel="nofollow"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://handsontable.github.io/hyperformula/guide/integration-with-vue.html" rel="nofollow"&gt;Vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://handsontable.github.io/hyperformula/guide/integration-with-angular.html" rel="nofollow"&gt;Angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://handsontable.github.io/hyperformula/guide/client-side-installation.html" rel="nofollow"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://handsontable.github.io/hyperformula/guide/basic-usage.html" rel="nofollow"&gt;Basic usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://handsontable.github.io/hyperformula/api/" rel="nofollow"&gt;API Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://handsontable.github.io/hyperformula/guide/configuration-options.html" rel="nofollow"&gt;Configuration options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://handsontable.github.io/hyperformula/guide/built-in-functions.html" rel="nofollow"&gt;List of built-in functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://handsontable.github.io/hyperformula/guide/key-concepts.html" rel="nofollow"&gt;Key concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://handsontable.github.io/hyperformula/guide/contact.html" rel="nofollow"&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Getting started&lt;/h2&gt;
&lt;p&gt;Install the library from &lt;a href="https://www.npmjs.com/package/hyperformula" rel="nofollow"&gt;npm&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-s1"&gt;npm&lt;/span&gt; &lt;span class="pl-s1"&gt;install&lt;/span&gt; &lt;span class="pl-s1"&gt;hyperformula&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Once properly installed, you can use it like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;HyperFormula&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'hyperformula'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/handsontable/hyperformula"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-react-desktop"&gt;
  &lt;/a&gt;
  5. React Desktop
&lt;/h3&gt;

&lt;p&gt;React UI Components for macOS High Sierra and Windows 10&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/gabrielbull"&gt;
        gabrielbull
      &lt;/a&gt; / &lt;a href="https://github.com/gabrielbull/react-desktop"&gt;
        react-desktop
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      React UI Components for macOS High Sierra and Windows 10
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="http://reactdesktop.js.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2a9e83579fd1e9515976422e15a054a029096dc5241eb2e0d6683aa319db3b43/68747470733a2f2f7261776769742e636f6d2f6761627269656c62756c6c2f72656163742d6465736b746f702f6d61737465722f646f63732f7265736f75726365732f72656163742d6465736b746f702e737667" alt="React Desktop" title="React Desktop"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/gabrielbull/react-desktop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2943074ada2bb92828a794445554bb4ff242c2e85acf133623fc5bf984edb181/68747470733a2f2f7472617669732d63692e6f72672f6761627269656c62756c6c2f72656163742d6465736b746f702e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/gabrielbull/react-desktop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6afeea150b445d5b69886e8a53552c4715e6b46461a3d7e8f54871996bb656bd/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f6761627269656c62756c6c2f72656163742d6465736b746f702f6261646765732f6770612e737667" alt="Code Climate"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/gabrielbull/react-desktop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b006f881874fdfc720310134acea7b4a4316dca49eaa2d13e4a47fcff738aa5a/68747470733a2f2f64617669642d646d2e6f72672f6761627269656c62756c6c2f72656163742d6465736b746f702e737667" alt="Dependency Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/gabrielbull/react-desktop#info=peerDependencies" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9db7f2782b2c3733c29ef824308ff911c3297cbd5c84fdf5bfccec4787e5479c/68747470733a2f2f64617669642d646d2e6f72672f6761627269656c62756c6c2f72656163742d6465736b746f702f706565722d7374617475732e737667" alt="peerDependency Status"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/gabrielbull/react-desktop#info=devDependencies" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e22d39abf38f8f81b6c3be9f4e2a566b5c8026dd43d341fc0d86b006d669a72/68747470733a2f2f64617669642d646d2e6f72672f6761627269656c62756c6c2f72656163742d6465736b746f702f6465762d7374617475732e737667" alt="devDependency Status"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.org/package/react-desktop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ce7b558e5a16a15b7a613444b2864c7c947e444add5fe84d00e51dff734b7c1/687474703a2f2f696d672e736869656c64732e696f2f6e706d2f64742f72656163742d6465736b746f702e737667" alt="npm downloads"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.org/package/react-desktop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/633d6e9ff2f4566bd232a01c254689cd62957c35eb64fcdbae080e90761da18b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d6465736b746f702e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/gabrielbull/react-desktop?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React UI Components for macOS High Sierra and Windows 10.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;npm install react-desktop --save&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://reactdesktop.js.org/demo/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9c766fb632fca7b8f42d163826fb8713d0507d34b7ad86f458cc8434c6d641c2/68747470733a2f2f7261776769742e636f6d2f6761627269656c62756c6c2f72656163742d6465736b746f702f6d61737465722f646f63732f7265736f75726365732f64656d6f2e737667" alt="Demo" title="Demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Help wanted!&lt;/h2&gt;
&lt;p&gt;I am looking for developers to help me develop this project. Please submit some ideas in the issues section or some PRs to get this project going. If you are interested, you can become a collaborator on the project. Thanks.&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;This library has been created to bring a native desktop experience to the web. It works extremely well with tools such as &lt;a href="http://nwjs.io" rel="nofollow"&gt;node-webkit&lt;/a&gt; or &lt;a href="http://electron.atom.io" rel="nofollow"&gt;Electron.js&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Everyone is welcome to contribute and add more components/documentation whilst following the &lt;a href="https://github.com/gabrielbull/react-desktop/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Guides on installation, components and advanced usage are found in the &lt;a href="http://reactdesktop.js.org" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/gabrielbull/react-desktop"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#6-release-changelog-builder-action"&gt;
  &lt;/a&gt;
  6. Release Changelog Builder Action
&lt;/h3&gt;

&lt;p&gt;A GitHub action that builds your release notes / changelog fast, easy and exactly the way you want.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mikepenz"&gt;
        mikepenz
      &lt;/a&gt; / &lt;a href="https://github.com/mikepenz/release-changelog-builder-action"&gt;
        release-changelog-builder-action
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A GitHub action that builds your release notes / changelog fast, easy and exactly the way you want.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;img class="emoji" title=":octocat:" alt=":octocat:" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ABKpJP58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.githubassets.com/images/icons/emoji/octocat.png" height="20" width="20"&gt;üìÑüîñüì¶
&lt;/div&gt;
&lt;h1&gt;
  release-changelog-builder-action
&lt;/h1&gt;
&lt;p&gt;
    ... a GitHub action that builds your release notes / changelog fast, easy and exactly the way you want
&lt;/p&gt;

&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/mikepenz/release-changelog-builder-action.github/images/release_changelog_builder_collapsed.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O-IXsygX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mikepenz/release-changelog-builder-action.github/images/release_changelog_builder_collapsed.png"&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;a href="https://github.com/mikepenz/release-changelog-builder-action/actions"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CiWwVIWB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mikepenz/release-changelog-builder-action/workflows/CI/badge.svg"&gt;
    &lt;/a&gt;
&lt;/div&gt;




&lt;p&gt;
    &lt;a href="https://github.com/mikepenz/release-changelog-builder-action#whats-included-"&gt;What's included üöÄ&lt;/a&gt; ‚Ä¢
    &lt;a href="https://github.com/mikepenz/release-changelog-builder-action#setup"&gt;Setup üõ†Ô∏è&lt;/a&gt; ‚Ä¢
    &lt;a href="https://github.com/mikepenz/release-changelog-builder-action#full-sample-%EF%B8%8F"&gt;Sample üñ•Ô∏è&lt;/a&gt; ‚Ä¢
    &lt;a href="https://github.com/mikepenz/release-changelog-builder-action#customization-%EF%B8%8F"&gt;Customization üñçÔ∏è&lt;/a&gt; ‚Ä¢
    &lt;a href="https://github.com/mikepenz/release-changelog-builder-action#contribute-"&gt;Contribute üß¨&lt;/a&gt; ‚Ä¢
    &lt;a href="https://github.com/mikepenz/release-changelog-builder-action#license"&gt;License üìì&lt;/a&gt;
&lt;/p&gt;




&lt;h3&gt;
What's included üöÄ
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Super simple integration
&lt;ul&gt;
&lt;li&gt;...even on huge repositories with hundreds of tags&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Parallel releases support&lt;/li&gt;
&lt;li&gt;Rich changelogs based on PRs

&lt;ul&gt;
&lt;li&gt;Alternative commit based mode&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Blazingly fast execution&lt;/li&gt;
&lt;li&gt;Supports any git project&lt;/li&gt;
&lt;li&gt;Highly flexible configuration&lt;/li&gt;
&lt;li&gt;Lightweight&lt;/li&gt;
&lt;li&gt;Supports any branch&lt;/li&gt;
&lt;li&gt;Rich build log output&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;


&lt;h2&gt;
Setup&lt;/h2&gt;

&lt;h3&gt;
Configure the workflow&lt;/h3&gt;
&lt;p&gt;Specify the action as part of your GitHub actions workflow:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml position-relative js-code-highlight"&gt;
&lt;pre&gt;- &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Build Changelog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-ent"&gt;id&lt;/span&gt;: &lt;span class="pl-s"&gt;build_changelog&lt;/span&gt;
  &lt;span class="pl-ent"&gt;uses&lt;/span&gt;: &lt;span class="pl-s"&gt;mikepenz/release-changelog-builder-action@{latest-release}&lt;/span&gt;
  &lt;span class="pl-ent"&gt;env&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;GITHUB_TOKEN&lt;/span&gt;: &lt;span class="pl-s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Action outputs&lt;/h3&gt;
&lt;p&gt;After action execution it will return the &lt;code&gt;changelog&lt;/code&gt; and additional information as step output. You can use it in any follow-up step by referencing the output by referencing it‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mikepenz/release-changelog-builder-action"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-peeky"&gt;
  &lt;/a&gt;
  7. Peeky
&lt;/h3&gt;

&lt;p&gt;A testing framework for curious minds&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Akryum"&gt;
        Akryum
      &lt;/a&gt; / &lt;a href="https://github.com/Akryum/peeky"&gt;
        peeky
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A testing framework for curious minds üêàÔ∏è
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-web-components-examples"&gt;
  &lt;/a&gt;
  8. Web Components Examples
&lt;/h3&gt;

&lt;p&gt;A series of web components examples, related to the MDN web components documentation&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mdn"&gt;
        mdn
      &lt;/a&gt; / &lt;a href="https://github.com/mdn/web-components-examples"&gt;
        web-components-examples
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A series of web components examples, related to the MDN web components documentation at https://developer.mozilla.org/en-US/docs/Web/Web_Components.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
web-components-examples&lt;/h1&gt;
&lt;p&gt;A series of web components examples, related to the MDN web components documentation at &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components" rel="nofollow"&gt;https://developer.mozilla.org/en-US/docs/Web/Web_Components&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following examples are available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/mdn/web-components-examplescomposed-composed-path"&gt;composed-composed-path&lt;/a&gt;. A very simple example that shows the behavior of the &lt;code&gt;Event&lt;/code&gt; object &lt;code&gt;composed&lt;/code&gt; and &lt;code&gt;composedPath&lt;/code&gt; properties. &lt;a href="https://mdn.github.io/web-components-examples/composed-composed-path/" rel="nofollow"&gt;See composed-composed-path live&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mdn/web-components-examplesdefined-pseudo-class"&gt;defined-pseudo-class&lt;/a&gt;. A very simple example that shows how the &lt;code&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:defined" rel="nofollow"&gt;:defined pseudo-class&lt;/a&gt;&lt;/code&gt; works. &lt;a href="https://mdn.github.io/web-components-examples/defined-pseudo-class/" rel="nofollow"&gt;See defined-pseudo-class live&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mdn/web-components-exampleseditable-list"&gt;editable-list&lt;/a&gt; ‚Äì¬†&lt;code&gt;&amp;lt;editable-list&amp;gt;&lt;/code&gt;.  A simple example showing how elements can be consolidated to create a list with addable/removable items.  Items are added by using a &lt;code&gt;list-item&lt;/code&gt; attribute or by entering text and clicking the plus sign. &lt;a href="https://mdn.github.io/web-components-examples/editable-list/" rel="nofollow"&gt;See editable-list live&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mdn/web-components-examplesedit-word"&gt;edit-word&lt;/a&gt; ‚Äî &lt;code&gt;&amp;lt;edit-word&amp;gt;&lt;/code&gt;. Wrapping one or more words in this element means that you can then click/focus the element to reveal a text input that can then be used to edit the word(s). &lt;a href="https://mdn.github.io/web-components-examples/edit-word/" rel="nofollow"&gt;See edit-word live&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mdn/web-components-exampleselement-details"&gt;element-details&lt;/a&gt; ‚Äî &lt;code&gt;&amp;lt;element-details&amp;gt;&lt;/code&gt;. Displays a box containing an HTML‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mdn/web-components-examples"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-hackathon-starter"&gt;
  &lt;/a&gt;
  9. Hackathon Starter
&lt;/h3&gt;

&lt;p&gt;A boilerplate for Node.js web applications&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sahat"&gt;
        sahat
      &lt;/a&gt; / &lt;a href="https://github.com/sahat/hackathon-starter"&gt;
        hackathon-starter
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A boilerplate for Node.js web applications
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/949ff8d7e24c03fd853970ad4552c28d9cfadbd0e1d962c3e30344751e0ab5fa/68747470733a2f2f6c68342e676f6f676c6575736572636f6e74656e742e636f6d2f2d5056772d5a554d397656382f557557654835316f7330492f414141414141414144364d2f30496b673776694a6674512f77313238362d683536362d6e6f2f6861636b6174686f6e2d737461727465722d6c6f676f2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/949ff8d7e24c03fd853970ad4552c28d9cfadbd0e1d962c3e30344751e0ab5fa/68747470733a2f2f6c68342e676f6f676c6575736572636f6e74656e742e636f6d2f2d5056772d5a554d397656382f557557654835316f7330492f414141414141414144364d2f30496b673776694a6674512f77313238362d683536362d6e6f2f6861636b6174686f6e2d737461727465722d6c6f676f2e6a7067" alt=""&gt;&lt;/a&gt;
Hackathon Starter&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://david-dm.org/sahat/hackathon-starter" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7631ce6bc2a67159cfe75109cb243a9bd4d71c399e27d6833531083de98063a/68747470733a2f2f64617669642d646d2e6f72672f73616861742f6861636b6174686f6e2d737461727465722f7374617475732e7376673f7374796c653d666c6174" alt="Dependency Status"&gt;&lt;/a&gt; &lt;a href="https://david-dm.org/sahat/hackathon-starter?type=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/abd1f96acc2ef218a93a247a79e4c2574b1d2bd663d2006611236c053806b2ba/68747470733a2f2f64617669642d646d2e6f72672f73616861742f6861636b6174686f6e2d737461727465722f6465762d7374617475732e737667" alt="devDependencies Status"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/sahat/hackathon-starter" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aa666f6794da3db0038f60146655423d23f317b71330087089f10928906e8b93/68747470733a2f2f7472617669732d63692e6f72672f73616861742f6861636b6174686f6e2d737461727465722e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/sahat/hackathon-starter?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/sahat/hackathon-starter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Live Demo&lt;/strong&gt;: &lt;a href="https://hackathon-starter.walcony.com" rel="nofollow"&gt;https://hackathon-starter.walcony.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Jump to &lt;a href="https://github.com/sahat/hackathon-starter/blob/master/CHANGELOG.md"&gt;What's new?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A boilerplate for &lt;strong&gt;Node.js&lt;/strong&gt; web applications.&lt;/p&gt;
&lt;p&gt;If you have attended any hackathons in the past, then you know how much time it takes to
get a project started: decide on what to build, pick a programming language, pick a web framework
pick a CSS framework. A while later, you might have an initial project up on GitHub and only then
can other team members start contributing. Or how about doing something as simple as &lt;em&gt;Sign in with Facebook&lt;/em&gt;
authentication? You can spend hours on it if you are not familiar with how OAuth 2.0 works.&lt;/p&gt;
&lt;p&gt;When I started this project, my primary focus was on &lt;strong&gt;simplicity&lt;/strong&gt; and &lt;strong&gt;ease of use&lt;/strong&gt;
I also tried to make it as &lt;strong&gt;generic&lt;/strong&gt; and &lt;strong&gt;reusable&lt;/strong&gt; as possible to cover most use cases of hackathon web apps
without being too specific. In the worst case,‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sahat/hackathon-starter"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-mathjs"&gt;
  &lt;/a&gt;
  10. Math.js
&lt;/h3&gt;

&lt;p&gt;An extensive math library for JavaScript and Node.js&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/josdejong"&gt;
        josdejong
      &lt;/a&gt; / &lt;a href="https://github.com/josdejong/mathjs"&gt;
        mathjs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An extensive math library for JavaScript and Node.js
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4b3d6cbabd32c985a0be85769804f5536e5ac6fae066338c35cbe01667b3e0d3/68747470733a2f2f7261772e6769746875622e636f6d2f6a6f7364656a6f6e672f6d6174686a732f6d61737465722f6d6973632f696d672f6d6174686a732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4b3d6cbabd32c985a0be85769804f5536e5ac6fae066338c35cbe01667b3e0d3/68747470733a2f2f7261772e6769746875622e636f6d2f6a6f7364656a6f6e672f6d6174686a732f6d61737465722f6d6973632f696d672f6d6174686a732e706e67" alt="math.js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mathjs.org" rel="nofollow"&gt;https://mathjs.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Math.js is an extensive math library for JavaScript and Node.js. It features a flexible expression parser with support for symbolic computation, comes with a large set of built-in functions and constants, and offers an integrated solution to work with different data types like numbers, big numbers, complex numbers, fractions, units, and matrices. Powerful and easy to use.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/mathjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52734c6d86773614c7806eacd9ca578336e38b3dbfd1aaa4c00e5edd6388daa6/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6d6174686a732e737667" alt="Version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/mathjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2001380c05632048b04f3f7ac1addd12e0a305e08b33f3e88706c45c66ff1c23/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f6d6174686a732e737667" alt="Downloads"&gt;&lt;/a&gt;
&lt;a href="https://github.com/josdejong/mathjs/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XLlIuyvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/josdejong/mathjs/workflows/Node.js%2520CI/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://github.com/josdejong/mathjs/graphs/commit-activity"&gt;&lt;img src="https://camo.githubusercontent.com/d8dfb6a495d89aa0647157f5fbe5fd6fe9a901335db5867a6df74b36e484063b/68747470733a2f2f696d672e736869656c64732e696f2f6d61696e74656e616e63652f7965732f323032312e737667" alt="Maintenance"&gt;&lt;/a&gt;
&lt;a href="https://github.com/josdejong/mathjs/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/a653370e0da6826d21da118d1aad4bc6dfacfeec3d68d91a914249f762a6d0d6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6a6f7364656a6f6e672f6d6174686a732e737667" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://app.fossa.io/projects/git%2Bgithub.com%2Fjosdejong%2Fmathjs?ref=badge_shield" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/44faf3f901c60b886035ee21558885879f863a73578fe279328f1413099a6d39/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f6769742532426769746875622e636f6d2532466a6f7364656a6f6e672532466d6174686a732e7376673f747970653d736869656c64" alt="FOSSA Status"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/josdejong/mathjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11354cbda80e08cb0fa3461b290306b733e50c88f5c27e860b25b259ba62a8aa/68747470733a2f2f636f6465636f762e696f2f67682f6a6f7364656a6f6e672f6d6174686a732f6272616e63682f646576656c6f702f67726170682f62616467652e737667" alt="Codecov"&gt;&lt;/a&gt;
&lt;a href="https://github.com/sponsors/josdejong"&gt;&lt;img src="https://camo.githubusercontent.com/7d9333b097b2f54a8957d126ab82937811489c9b75c3850f609985cf94cd29fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302d53706f6e736f722532306d652532306f6e2532304769744875622d6f72616e6765" alt="Github Sponsor"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Supports numbers, big numbers, complex numbers, fractions, units, strings, arrays, and matrices.&lt;/li&gt;
&lt;li&gt;Is compatible with JavaScript's built-in Math library.&lt;/li&gt;
&lt;li&gt;Contains a flexible expression parser.&lt;/li&gt;
&lt;li&gt;Does symbolic computation.&lt;/li&gt;
&lt;li&gt;Comes with a large set of built-in functions and constants.&lt;/li&gt;
&lt;li&gt;Can be used as a command line application as well.&lt;/li&gt;
&lt;li&gt;Runs on any JavaScript engine.&lt;/li&gt;
&lt;li&gt;Is easily extensible.&lt;/li&gt;
&lt;li&gt;Open source.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;Math.js can be used in both node.js and in the browser.&lt;/p&gt;
&lt;p&gt;Install math.js using &lt;a href="https://www.npmjs.com/package/mathjs" rel="nofollow"&gt;npm&lt;/a&gt;:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install mathjs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or download mathjs via one of the CDN's listed on the downloads page:&lt;/p&gt;
&lt;p&gt;¬†¬†¬†¬†&lt;a href="https://mathjs.org/download.html#download" rel="nofollow"&gt;https://mathjs.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/josdejong/mathjs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing üìà
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;üîó
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +2,635 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tauri-apps/tauri"&gt;Tauri&lt;/a&gt; +1,518 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/danistefanovic/build-your-own-x"&gt;Build your own X&lt;/a&gt; +1,203 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alan2207/bulletproof-react"&gt;Bulletproof React&lt;/a&gt; +984 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +892 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;üîó
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/laymonage/giscus"&gt;giscus&lt;/a&gt; +54%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alan2207/bulletproof-react"&gt;Bulletproof React&lt;/a&gt; +31%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/growthbook/growthbook"&gt;Growth Book&lt;/a&gt; +22%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/07akioni/xicons"&gt;xicons&lt;/a&gt; +18%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Saul-Mirone/milkdown"&gt;Milkdown&lt;/a&gt; +17%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;üîó
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +9,058 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +5,249 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;Machine Learning for Beginners&lt;/a&gt; +3,733 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alan2207/bulletproof-react"&gt;Bulletproof React&lt;/a&gt; +3,305 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nocodb/nocodb"&gt;NocoDB&lt;/a&gt; +2,904 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;üîó
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/alan2207/bulletproof-react"&gt;Bulletproof React&lt;/a&gt; +408%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bubkoo/html-to-image"&gt;html-to-image&lt;/a&gt; +95%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bring-shrubbery/use-cookie-consent"&gt;useCookieConsent&lt;/a&gt; +89%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/saadeghi/daisyui"&gt;DaisyUI&lt;/a&gt; +75%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/BuilderIO/mitosis"&gt;Mitosis&lt;/a&gt; +66%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to write a high quality post on DEV</title>
      <author>Ella Ang (she/her/elle)</author>
      <pubDate>Fri, 20 Aug 2021 13:56:54 +0000</pubDate>
      <link>https://dev.to/devteam/how-to-write-a-high-quality-post-on-dev-3me0</link>
      <guid>https://dev.to/devteam/how-to-write-a-high-quality-post-on-dev-3me0</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@dtbosse"&gt;Daniel Thomas&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://dev.to/chrisachard/how-to-write-your-first-post-on-dev-c3k"&gt;Writing your first post on DEV&lt;/a&gt; can be as unfussy as clicking on the &lt;strong&gt;Create Post&lt;/strong&gt; button at the top of the screen (which takes you to &lt;a href="https://dev.to/new"&gt;https://dev.to/new&lt;/a&gt;) and jotting down some thoughts before hitting the juicy &lt;strong&gt;Publish&lt;/strong&gt; button at the bottom of the screen.&lt;/p&gt;

&lt;p&gt;That will get you started and on your way to publishing regularly, which is the key to creating connections with readers who engage with your work.&lt;/p&gt;

&lt;p&gt;If you want to build your readership and engagement further, here are a few more tips and tricks to posting on DEV that you might want to know about:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-the-editor-works"&gt;
  &lt;/a&gt;
  How the editor works
&lt;/h2&gt;

&lt;p&gt;This heading is a little misleading, because there are 2 editors to choose from right now. They're both markdown-based, but look and function a little different from each other:&lt;/p&gt;

&lt;p&gt;There's &lt;strong&gt;Rich + Markdown&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a1UfxNh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2mmrzm96msx96fd64yx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a1UfxNh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2mmrzm96msx96fd64yx.png" alt="Rich plus Markdown editor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And &lt;strong&gt;Basic&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3vWHNKlr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5irv2g3z1i3njh879lda.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3vWHNKlr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5irv2g3z1i3njh879lda.png" alt="Basic editor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can switch between these in your &lt;strong&gt;User Settings&lt;/strong&gt; under &lt;a href="https://dev.to/settings/customization"&gt;Customization&lt;/a&gt; (where you can also try out the different colour schemes featured in those screenshots - but I digress...), just bear in mind that posts previously published in one editor will continue to use that editor for any edits in the future. &lt;/p&gt;

&lt;p&gt;While the Basic editor carries the post's meta-data in its header, the Rich version tucks it in around the edges. So, if you want a cover image in the Basic editor, you'll have to link to it in the header. Similarly, if you want to create a series or link to a canonical URL you'll need to add those in yourself.&lt;/p&gt;

&lt;p&gt;We recommend reviewing &lt;a href="https://dev.to/ziizium"&gt;Habdul&lt;/a&gt;'s excellent, &lt;a href="https://dev.to/ziizium/a-beginners-guide-to-the-dev-editor-202p"&gt;comprehensive guide to posting on DEV&lt;/a&gt;. Habdul builds on the &lt;a href="https://dev.to/p/editor_guide"&gt;Editor Guide&lt;/a&gt; in enough detail that you'll be a competent markdown writer and editor by the end of the post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-tag-and-why-you-should"&gt;
  &lt;/a&gt;
  How to tag (and why you should)
&lt;/h2&gt;

&lt;p&gt;Did you know that top posts under certain tags are eligible for &lt;a href="https://dev.to/badges"&gt;badges&lt;/a&gt; each week? Additionally, having your post tagged correctly helps your audience find you, and avoids getting your post reported for suspicious behaviour. &lt;/p&gt;

&lt;p&gt;Be sure to check out the tag descriptions for any tags you're planning to use and be sure you're following any posting guidelines. See &lt;a href="https://dev.to/t/mentalhealth"&gt;#mentalhealth&lt;/a&gt; or &lt;a href="https://dev.to/t/opensource"&gt;#opensource&lt;/a&gt; for examples of tags that have descriptions and guidelines.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#considering-accessibility"&gt;
  &lt;/a&gt;
  Considering accessibility
&lt;/h2&gt;

&lt;p&gt;For clarity on what we mean when we talk about accessibility (or a11y for keyboard-short), &lt;a href="https://dev.to/eevajonnapanula"&gt;Eevis&lt;/a&gt;'s &lt;a href="https://dev.to/eevajonnapanula/let-s-talk-about-accessibility-c80"&gt;post on a11y is a good starting point for some general concepts&lt;/a&gt;, such as inclusive language. If you'd like to know a little more about why a11y is important, &lt;a href="https://www.upyoura11y.com/why-accessibility/"&gt;Up Your A11y has a great intro&lt;/a&gt; that we'd recommend you check out.&lt;/p&gt;

&lt;p&gt;For the endlessly-curious, &lt;a href="https://dev.to/moopet"&gt;Ben&lt;/a&gt; explains a bit more about &lt;a href="https://dev.to/moopet/embedding-code-in-posts-40i5"&gt;why some ways of sharing code in your post are more accessible than others&lt;/a&gt;, while &lt;a href="https://dev.to/alfiedarko"&gt;Alfie&lt;/a&gt; &lt;a href="https://dev.to/alfiedarko/frontendsessions-web-accessibility-4eed"&gt;shares some best practices that might help with writing more accessible posts&lt;/a&gt;, and &lt;a href="https://dev.to/finallynero"&gt;Nero&lt;/a&gt; starts an important conversation &lt;a href="https://dev.to/finallynero/accessible-emojis--1pjh"&gt;about how accessible emojis are&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-talk-about-images"&gt;
  &lt;/a&gt;
  Let's talk about images
&lt;/h2&gt;

&lt;p&gt;A picture speaks a thousand words, or something, right? Well, that depends on your alt text...&lt;/p&gt;

&lt;p&gt;Not only do pictures help break up the wall-of-text effect of an in-depth tutorial, but they can also help influence the energy of your post and impact on your audience. Just remember to include alt text, so that anyone unable to view the image still knows what it is. For example, the alt text for this image is &lt;code&gt;An audience in an atmospheric auditorium&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---8E8D91e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9izxenjddgw55i0n1df7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---8E8D91e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9izxenjddgw55i0n1df7.jpg" alt="An audience in an atmospheric auditorium"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href="https://www.pexels.com/@jibarofoto"&gt;Luis Quintero&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While a fix is on the way, cover images currently don't have alt text, so while they're handy for positioning your post at or near the top of the feed, don't rely on the cover image itself to convey any information that's important to the message of your post. That means, even if you have a pretty graphic title for a cover image you still need to write that title out in full.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#speaking-of-titles"&gt;
  &lt;/a&gt;
  Speaking of titles
&lt;/h2&gt;

&lt;p&gt;We at DEV always recommend taking some extra time to choose a title that sets your post apart from the rest. There are only so many "The best 10 JavaScript tools" posts any dev has time for, so what about "How this one JS tool changed my workflow and freed up time to grow a herb garden"? The key here is to actually deliver on your title, rather than use it as click-bait to draw in views. Photos of your herb garden (with appropriate alt text) help:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PORtSdkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wwzyk8jc71v52fiwdyw2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PORtSdkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wwzyk8jc71v52fiwdyw2.jpg" alt="Not quite herbs but genuinely my garden"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#and-finally"&gt;
  &lt;/a&gt;
  And finally
&lt;/h2&gt;

&lt;p&gt;We are here to learn from each other. If you have any other hints, tips, or best practices for post authors please feel free to share them below! We'd love to learn about the things you've discovered here on DEV and how you connect with your readers.&lt;/p&gt;

&lt;p&gt;Remember that all posts should abide by the &lt;a href="https://dev.to/terms"&gt;Terms of Use&lt;/a&gt; and &lt;a href="https://dev.to/code-of-conduct"&gt;Code of Conduct&lt;/a&gt;. This includes inclusive language, original work that you have the right to share (with credit to anyone else whose original work you're citing or referencing), and not posting for the purpose of producing backlinks or driving traffic to an external site. &lt;/p&gt;

</description>
      <category>writing</category>
      <category>howtodevto</category>
    </item>
    <item>
      <title>The Most Efficient Ways to Clone objects in JavaScript</title>
      <author>Shadid Haque</author>
      <pubDate>Fri, 20 Aug 2021 13:55:26 +0000</pubDate>
      <link>https://dev.to/shadid12/the-most-efficient-ways-to-clone-objects-in-javascript-1phe</link>
      <guid>https://dev.to/shadid12/the-most-efficient-ways-to-clone-objects-in-javascript-1phe</guid>
      <description>&lt;p&gt;Cloning objects is one of the most commonly used operations in the JavaScript universe. In this article, we will dive into different types of cloning that exist in JavaScript (Node.js and Browser environment). We will also discuss the most efficient ways to shallow and deep clone objects in JavaScript.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üìù There are many blog posts, articles, and stack overflow threads that exist on this topic already. This article is my attempt to put the collective knowledge of the internet into one composed summary that is easy to follow and reference.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let‚Äôs dive in üèÑ‚Äç‚ôÄÔ∏è&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#native-deep-cloning"&gt;
  &lt;/a&gt;
  Native deep cloning
&lt;/h2&gt;

&lt;p&gt;Native deep cloning is known as ‚Äústructured cloning‚Äù in Node.js. This feature is not available in the browser. Structured cloning supports an additional set of data types along with the ones that are supported by JSON. Here‚Äôs a list of additional data types it supports. Here‚Äôs an example of native deep cloning below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;v8&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;v8&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;structuredClone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;v8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deserialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;serialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sampleObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;worlds&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;nested&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;first&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;first object value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;cloned&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;structuredClone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sampleObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#jsonparsestringify-cloning-with-data-loss"&gt;
  &lt;/a&gt;
  JSON.parse/stringify ‚Äî cloning with data loss
&lt;/h2&gt;

&lt;p&gt;Good ol‚Äô JOSN.stringify() is the most used method for cloning an object when you don‚Äôt care about data loss or shallow clone is sufficient for your use case. Here‚Äôs a simple example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;some_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Shadid Haque&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;health portion&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;arrow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;copy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;some_obj&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Applying JSON.strigify() causes data loss when the object to be copied has complex data or functions nested. Here‚Äôs an example where data loss happens on JSON.strigify().&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;objA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Super Man&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;attack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;damage++&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;copy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;objA&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#spread-operations-shallow-clone"&gt;
  &lt;/a&gt;
  Spread Operations ‚Äî shallow clone
&lt;/h2&gt;

&lt;p&gt;Spread operation is the easiest way to clone a object in ES6. Data loss happens on this method as well. However, since this is native to ES6 it is more performant than JSON.strigify().&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Checkout the benchmark &lt;a href="https://jsben.ch/bWfk9"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here‚Äôs an example of cloning with spread operator&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;A1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;A3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;A1&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;  &lt;span class="c1"&gt;// Spread Syntax&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#objectassign"&gt;
  &lt;/a&gt;
  Object.assign()
&lt;/h2&gt;

&lt;p&gt;Object.assign() is an ES6 method that allows shallow cloning simmilar to spread operation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;objCopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deep-cloning-with-lodash-library"&gt;
  &lt;/a&gt;
  Deep Cloning with lodash library
&lt;/h2&gt;

&lt;p&gt;If you are looking for a reliable deep cloning method and don‚Äôt mind using a third party library then lodash might just be the solution you are looking for.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cloneDeep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lodash.clonedeep&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hensen&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;}];&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;deep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cloneDeep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;deep&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="c1"&gt;// =&amp;gt; false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deep-cloning-with-custom-function"&gt;
  &lt;/a&gt;
  Deep cloning with custom function
&lt;/h2&gt;

&lt;p&gt;Finally, we can roll out our own function for deep copying an object. I found the following code snippet from stack overflow and I have been using it in my projects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;isActiveClone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;isActiveClone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;isActiveClone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are concerned about performance of various cloning functions I highly suggest you take a look at this following thread. I hope this article was helpul. That‚Äôs all for today üôÇ, until next time&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm#supported_types"&gt;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm#supported_types&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript/5344074#5344074"&gt;https://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript/5344074#5344074&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/lodash.clonedeep"&gt;https://www.npmjs.com/package/lodash.clonedeep&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Common Terms in Web3</title>
      <author>Waylon Jepsen</author>
      <pubDate>Fri, 20 Aug 2021 13:53:25 +0000</pubDate>
      <link>https://dev.to/0xjepsen/common-terms-in-web3-5g9h</link>
      <guid>https://dev.to/0xjepsen/common-terms-in-web3-5g9h</guid>
      <description>&lt;p&gt;If you are breaking into web3 software development, all the new vocabulary can be a little intimidating, just like it can be when getting into web2 software development. In this post, we will go over some common terminology used in the web3 community.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dlt-distributed-ledger-technology"&gt;
  &lt;/a&gt;
  DLT: Distributed Ledger Technology
&lt;/h2&gt;

&lt;p&gt;Distributed Ledger Technology(DLT) is the overarching category of web3. DLTs encompass any distributed network that works to achieve consensus on the information. Blockchains are distributed ledgers, but notably not the only kind. Other distributed ledgers don't use a chain-coded architecture. For example, some DLTs utilize Directed Acyclic Graph(DAG) architectures for their consensus mechanisms. Examples of distributed ledgers that utilize DAG architectures are &lt;a href="//www.hedera.com"&gt;Hedera Hashgraph&lt;/a&gt; and &lt;a href="https://filecoin.io/"&gt;Filecoin&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#custodial-and-non-custodial-wallets"&gt;
  &lt;/a&gt;
  Custodial and non Custodial Wallets
&lt;/h2&gt;

&lt;p&gt;At the core of every crypto wallet is a public and private key pair. Asymmetric cryptography is at the backbone of all distributed ledgers and web3 technologies; without it, no distributed ledgers would exist. If you want to learn more about it, I wrote about it &lt;a href="https://dev.to/0xjepsen/an-introduction-to-cryptography-in-distributed-ledger-technology-268l"&gt;here&lt;/a&gt;. Your private key is used to authorize your transactions and receive information. Whoever has the private key of a wallet can access funds and authorize transactions. The private key is critical. The public key is hashed and then used as your wallet address.&lt;/p&gt;

&lt;p&gt;The distinction between a custodial and non-custodial wallet is who manages your private keys. If you manage your private keys, the wallet is referred to as a non-custodial wallet because no one has custody of your wallet except you. If a third party controls your private keys, then the wallet is a custodial wallet. If you are looking for some good Wallets, you can check some supported wallets &lt;a href="https://hedera.com/buying-guide"&gt;Here&lt;/a&gt; and some great Ethereum wallets &lt;a href="https://coinsutra.com/best-etherum-wallets/"&gt;Here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#smart-contracts"&gt;
  &lt;/a&gt;
  Smart Contracts
&lt;/h2&gt;

&lt;p&gt;Smart contracts are programs deployed to distributed ledgers. They are viewable by anyone and commonly written in a language called solidity with file extension .sol. One advantage that smart contracts have is that they are composable. This means that they can interact with other smart contracts and create an ecosystem of decentralized protocols that make up a big part of web3. There are alternative decentralized services that can be utilized that have some advantages over smart contracts like the &lt;a href="https://hedera.com/consensus-service"&gt;Hedera Consensus Service&lt;/a&gt; and the &lt;a href="https://hedera.com/token-service"&gt;Hedera Token Services&lt;/a&gt;. Both of which have advantages in speed, finality, and security. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dapp-decentralized-application"&gt;
  &lt;/a&gt;
  Dapp: Decentralized Application
&lt;/h2&gt;

&lt;p&gt;A decentralized application is a non-custodial application that allows a user to authorize preprogrammed functionality. Decentralized applications run on a distributed ledger with varying degrees of programmability. Decentralized applications are built with distributed protocols and a user interface, a combination of web2 and web3. These are the applications that support many of the use cases of distributed ledger technologies. Some examples are Decentralized Identity, Supply chain integrity, and Decentralized Finance (DeFi). If you want to understand more use cases, check out this &lt;a href="https://hedera.com/users"&gt;resource&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cex-centralized-exchange"&gt;
  &lt;/a&gt;
  CEX: Centralized Exchange
&lt;/h2&gt;

&lt;p&gt;A centralized exchange is a centralized entity that allows users to buy, sell, and trade various crypto assets. Users assume some risk when using a centralized exchange because the exchange manages the private keys of its user's crypto wallets. While there may be a good reason to trust an insured exchange, no exchange is immune to a cyber attack that could compromise the user's private keys. Some examples of centralized exchanges are &lt;a href="https://www.coinbase.com/join/jepsen_1"&gt;Coinbase&lt;/a&gt;, &lt;a href="https://www.binance.com/en"&gt;Binnance&lt;/a&gt;, and &lt;a href="https://bittrex.com/Account/Register?referralCode=H0K-MZC-KMH"&gt;Bittrex&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dex-decentralized-exchange"&gt;
  &lt;/a&gt;
  DEX: Decentralized Exchange
&lt;/h2&gt;

&lt;p&gt;A decentralized exchange is a Dapp that allows users to trade different crypto assets with each other. Trades on decentralized exchanges are peer-to-peer, so you interact with a network directly rather than through a middle man like a centralized exchange. Some examples of notable decentralized exchanges are &lt;a href="https://uniswap.org/"&gt;Uniswap&lt;/a&gt;, &lt;a href="https://sushi.com/"&gt;sushiswap&lt;/a&gt;, and &lt;a href="https://pancakeswap.finance/swap"&gt;Pancakeswap&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dao-decentralized-autonomous-organization"&gt;
  &lt;/a&gt;
  DAO: Decentralized Autonomous Organization
&lt;/h2&gt;

&lt;p&gt;A DAO is a governance structure for web3 projects. DAOs usually have a governance token that allows holders to anonymously vote on which direction a project should go and what developments will be made. Since decentralization is the name of the game in web3, some projects have forgone the traditional business models for DAOs. DAOs allow projects to pay their developers, give community incentives, and make critical decisions in a decentralized and democratic process. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nft-non-fungible-token"&gt;
  &lt;/a&gt;
  NFT: Non Fungible Token
&lt;/h2&gt;

&lt;p&gt;NFT stands for Non-Fungible token. The word fungible essentially means replaceable or interchangeable. So NFT‚Äôs are not interchangeable, nor are they replaceable. An NFT has a unique cryptographic signature as proof of its authenticity. Additional information is retained in the NFT, like the account ID of its creator and metadata associated with it. This is so people can store all sorts of digital information in the metadata, and you would be able to verify that the account ID matched that of the creator of the work. &lt;/p&gt;

&lt;p&gt;As you can imagine, this creates a monumental amount of utility in the world of intellectual property. Artists have taken to this technology like a storm, leveraging it to produce irreplaceable unique digital artwork. Additionally, the digital aspect of the token‚Äôs metadata allows individuals to build a digital experience instead of a traditional static piece of art. Audio data with mp4 data will enable people to create multimedia artwork with a wide array of functionality. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fungible-tokens"&gt;
  &lt;/a&gt;
  Fungible tokens
&lt;/h2&gt;

&lt;p&gt;Contrasting NFTs are Fungible tokens, which are not unique. Tokens like Bitcoin, ETH, and Hbar are all fungible tokens. These tokens often serve as network fuel to pay for network services like transaction fees. In some cases, Fungible tokens also serve as governance tokens for DAOs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pow-proof-of-work"&gt;
  &lt;/a&gt;
  PoW: Proof of Work
&lt;/h2&gt;

&lt;p&gt;Proof of work was the first consensus mechanism utilized in Distributed Ledgers. Proof of work is the consensus mechanism behind &lt;a href="https://bitcoin.org/en/"&gt;Bitcoin&lt;/a&gt; and &lt;a href="https://ethereum.org/en/"&gt;Ethereum&lt;/a&gt; (although there is a discussion of Ethereum moving to Proof of Stake). The Mechanism requires validators referred to as miners, to expend computational effort to validate the network. This deters malicious actors from attacking the network in a game-theoretic model by requiring them to have enormous resources to attack the network.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Miners are entities who participate in the PoW consensus algorithm. Miners are rewarded network fees in exchange for validating and securing the network. Miners are often anonymous. Miners manage PoW mines which are special computers with many powerful Graphics Processing Units(GPUs). Because PoW mining is a computationally-intensive process, mining requires large amounts of electricity and raises discourse on its environmental impact. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#pos-proof-of-stake"&gt;
  &lt;/a&gt;
  PoS: Proof of stake
&lt;/h2&gt;

&lt;p&gt;Proof of Stake is a category of consensus that requires validators on the network to hold an amount of cryptocurrency corresponding to the network they are validating. The more you hold, the more weight your validation has on the consensus of the network. There are varying PoS consensus mechanisms, but they all ensure a base level of network security by requiring validators to be invested in the network. This way, if a bad actor were to try and create a bad state of the network, they would have to be heavily invested in the network's native token and thus in the network's success. Some example of proof of stake networks are &lt;a href="https://hedera.com/"&gt;Hedera Hashgraph&lt;/a&gt; &lt;a href="https://www.algorand.com/"&gt;Algorand&lt;/a&gt; and &lt;a href="https://cardano.org/"&gt;Cardano&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Validators contrast PoW miners by participating in the validation of a PoS network through the network mechanisms. Since in PoS, you do not need to expend large amounts of computational resources, Validators don't need a lot of electricity. &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope this brief overview of common terms makes navigating web3 technologies easier. If you have any questions feel free to leave them in the comments or @ me on &lt;a href="https://twitter.com/0xjepsen"&gt;twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
    </item>
    <item>
      <title>An inspiration for web design: Where you can go and a career based on maisyleigh</title>
      <author>Caio Gomes Braga</author>
      <pubDate>Fri, 20 Aug 2021 13:35:26 +0000</pubDate>
      <link>https://dev.to/caiobraga/an-inspiration-for-web-design-where-you-can-go-and-a-career-based-on-maisyleigh-1bl4</link>
      <guid>https://dev.to/caiobraga/an-inspiration-for-web-design-where-you-can-go-and-a-career-based-on-maisyleigh-1bl4</guid>
      <description>&lt;p&gt;We use you tube a lot in our day-to-day life, many of us can use it to rest or look for answers and tutorials of all kinds. During my time on you tube, I came across a very special channel called maisyleigh, which deserves the attention of all those programmers looking to get inspired.&lt;/p&gt;

&lt;p&gt;Introduction:&lt;/p&gt;

&lt;p&gt;In any career it's good to have goals set. Knowing where we want to go helps us make plans and gives us a better sense of what we should learn and how to do it. However, in programming it is not always so easy to find a model to be inspired by, as there are few programmers who actually demonstrate their development process.&lt;/p&gt;

&lt;p&gt;Although there are many tutorials, in the most diverse fremeworks, there is still a lack of in-depth content on creative and development processes that transcend technology. Fortunately for English speakers and web designers, today I bring someone who inspires me and can inspire you too.&lt;/p&gt;

&lt;p&gt;moreyleigh:&lt;/p&gt;

&lt;p&gt;channel: &lt;a href="https://www.youtube.com/channel/UC_h-Jl4Zxb7p-sSBTxprs4Q"&gt;https://www.youtube.com/channel/UC_h-Jl4Zxb7p-sSBTxprs4Q&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;maisyleigh talks about various subjects in her videos and shows her development process, but in general, she discusses how to find inspiration to make unique sites. However the most important is in the way she conveys her ideas, at the end of a video, even if you are not a web designer, you will feel inspired to program.&lt;/p&gt;

&lt;p&gt;However if you are really looking to be a web designer maisyleigh's content is a great example of their profession on a spectacular level. If your goal is to change people's lives with your work, expect to receive a class with some videos from this channel.&lt;/p&gt;

&lt;p&gt;Career:&lt;/p&gt;

&lt;p&gt;In my experience, web design is highly valued in the job market, many front-end developers manage to make a website, code, but it is the web designers who make a website unique.&lt;/p&gt;

&lt;p&gt;I don't mean that the two professionals should compete, many web-designers, including maisyleigh, also program and do the work of the front-end developer. What I mean is that they are technically different services.&lt;/p&gt;

&lt;p&gt;In theory, it's as if the web-designer is an architect and the front-end developer is the engineer. Large companies understand that both are necessary for the effective and rapid development of a given technology.&lt;/p&gt;

&lt;p&gt;But the fact is that the market misses web-designers, especially those who also know about the technical part of development.&lt;/p&gt;

&lt;p&gt;see video reviews here (portuguese): &lt;a href="https://www.programador-de-quintal.com.br/l/uma-inspiracao-para-web-design-a-onde-voce-pode-chegar-e-carreira-com-base-na-maisyleigh/"&gt;https://www.programador-de-quintal.com.br/l/uma-inspiracao-para-web-design-a-onde-voce-pode-chegar-e-carreira-com-base-na-maisyleigh/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;see video reviews here (english): &lt;a href="https://www.programador-de-quintal.com.br/l/an-inspiration-for-web-design-where-you-can-go-and-a-career-based-on-maisyleigh/"&gt;https://www.programador-de-quintal.com.br/l/an-inspiration-for-web-design-where-you-can-go-and-a-career-based-on-maisyleigh/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>design</category>
      <category>career</category>
      <category>inspiration</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What is a Hackathon? (And How We Run Them at Fellow)</title>
      <author>Alexander Polev</author>
      <pubDate>Fri, 20 Aug 2021 13:29:05 +0000</pubDate>
      <link>https://dev.to/felloweng/what-is-a-hackathon-and-how-we-run-them-at-fellow-46b6</link>
      <guid>https://dev.to/felloweng/what-is-a-hackathon-and-how-we-run-them-at-fellow-46b6</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k4m9DQve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/1%2AWv-QdELgT7KTbWAOHXR0hw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k4m9DQve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/1%2AWv-QdELgT7KTbWAOHXR0hw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article describes what a hackathon is, how they usually work, and how running these events can benefit your company.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-hackathon"&gt;
  &lt;/a&gt;
  What is a hackathon?
&lt;/h3&gt;

&lt;p&gt;A hackathon is a friendly tech competition with a relatively short duration, usually 24 hours, with the main idea being ‚ÄúJust do something cool!‚Äù. It‚Äôs a perfect opportunity to step out of your comfort zone and try something new. Hackathons give you the chance to work together with people from other teams, use new technologies, perform interesting experiments, and showcase your creativity.&lt;/p&gt;

&lt;p&gt;The main goal is to implement a working prototype of a project which can be presented by the end of the event. It takes more than just programmers and designers to build an amazing company and in a similar vein, hackathons are made even more impactful when the entire company gets involved. Project managers can pitch their idea for the next big feature, marketing specialists can explore new and innovative promo campaigns, customer success teams can unearth valuable insights from users, etc. The possibilities are limitless!&lt;/p&gt;

&lt;p&gt;Hackathon projects don‚Äôt have to be something that will become the part of the product and be released soon. The spirit of the hackathon is to experiment and research, not just work on day-to-day tasks more intensely. To illustrate, I‚Äôll show some examples of my past hackathon projects in the next section.&lt;/p&gt;

&lt;p&gt;Last, but not least, an important part of any hackathon is lots of pizza and coffee üòÑ.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-people-do-at-a-hackathon"&gt;
  &lt;/a&gt;
  What do people do at a hackathon?
&lt;/h3&gt;

&lt;p&gt;At the beginning of the event, everybody is thinking, discussing, sharing ideas and forming teams. At Fellow, our hackathon teams can range from 1 to 4 people which feels like an ideal size for a 24 hour project.&lt;/p&gt;

&lt;p&gt;Teams are free to discuss ideas, brainstorm, and plan beforehand but the main rule is‚Ää‚Äî‚Ää &lt;strong&gt;‚Äúno coding, designing, or starting on the project until the day of‚Äù&lt;/strong&gt;. Everything should be implemented during the 24 hour hackathon time period.&lt;/p&gt;

&lt;p&gt;In general the ideas are limited only by your creativity, but for internal company hackathons, the ideas should add some value to the base product or help improve internal workflows at the company. So while training a machine learning model on pictures of your cat to highlight them on your webcam video is a fun project, it may not be the best idea for this type of event. Don‚Äôt worry, everyone will still know that your cat is cute and awesome üò∫.&lt;/p&gt;

&lt;p&gt;In my personal experience at Fellow, I don‚Äôt work with the note editor all that often so the hackathon gave me a chance to learn about and work on a new part of the product. I implemented a small typeahead plugin to insert emojis into a note and the project eventually ended up going live in production! Now, you can type the colon symbol, start typing an emoji name, and you will get a list of relevant emojis:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--npU5YsN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/0%2A3ctpJq6POxNQojam" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--npU5YsN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/0%2A3ctpJq6POxNQojam" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the project is complete, next comes the most important part: presentations and voting. To keep things brief, each team is only given 10 minutes to present. They need to describe their project, highlight advantages, demonstrate functionality (in the case of a prototype), and explain the value to the company. Of course that‚Äôs just a generic presentation structure. A hackathon is a highly creative environment, so nobody minds if you make your presentation full of memes and puppies üê∂.&lt;/p&gt;

&lt;p&gt;After all the presentations are complete, everybody casts their votes for the winning projects and prizes are awarded.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-benefits-of-participating-in-a-hackathon"&gt;
  &lt;/a&gt;
  The benefits of participating in a hackathon
&lt;/h3&gt;

&lt;p&gt;The most immediate benefit is the opportunity to have fun and choose what you want to work on. During hackathons, you aren‚Äôt solving business problems directly or working on routine tasks. You are working on something you find interesting and organizing your day and workflow based on how you want.&lt;/p&gt;

&lt;p&gt;Hackathons are also a great environment to work on your soft skills. Participants can obtain new management skills such as delegating tasks, planning presentations, and writing more clearly. Since participants are usually working in smaller and unfamiliar teams, it‚Äôs also a good opportunity to improve communication skills while getting to know the different parts of the company.&lt;/p&gt;

&lt;p&gt;The greatest benefit of all is the educational experience. You may try using new technologies, work on a new part of the product for the first time, or just challenge yourself to think really big. You might be wondering ‚ÄúCan I really do this in 24 hours? Should I narrow my idea?‚Äù but don‚Äôt be afraid to take a chance. Hackathons are a space for growth and experimentation so don‚Äôt let the fear of failure stop you from making the most of your experience.&lt;/p&gt;

&lt;p&gt;Last, but not least, hackathons are a great way to bolster team camaraderie. At Fellow, one of our main company values is Fellowship. Our recurring hackathons help us realize our values and increase team cohesion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-managers-and-leaders-should-organize-hackathons"&gt;
  &lt;/a&gt;
  Why managers and leaders should organize hackathons
&lt;/h3&gt;

&lt;p&gt;Okay, it seems like hackathons are good time for employees since they get to dedicate 24 hours to fun and education, but how can they help business owners?&lt;/p&gt;

&lt;p&gt;First of all, hackathons are a great source of new ideas and uncommon solutions. Usually, projects guided by senior management and new features are all planned by the same group of people. Hackathon projects are new ideas with basic implementations, and after some polishing, are ready to ship to production. Leaders often find themselves thinking, ‚ÄúThat‚Äôs actually a great idea I never thought about that. Let‚Äôs ship it!‚Äù. At Fellow, almost half of all hackathon projects find their way into the product some time soon after the event!&lt;/p&gt;

&lt;p&gt;Secondly, leaders should consider hackathons as a long term investment in their team. Dedicating two whole work days to a hackathon might sound like a poor use of time, but it will payback dividends in multiple ways. Hackathons help introduce new ideas and approaches, they increase collective knowledge of the codebase, and they foster a friendly team-building atmosphere within the company.&lt;/p&gt;

&lt;p&gt;Finally, the unique combination of education and team-building experienced during a hackathon help prevent employee burnout and keep people engaged and fulfilled by their work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;For us at Fellow, hackathons have become an important part of the development workflow. Of course, they require some planning and organization like choosing the right time for the event to make sure core business operations aren‚Äôt negatively impacted. At some companies, it‚Äôs not always possible for everyone to stop what they‚Äôre doing to devote time to a hackathon. One solution would be to split the company and organize two events at different times, whatever needs to happen to make the hackathon a reality. The benefits become clear when more and more ideas that started off as simple ‚Äúhacks‚Äù turn into business successes.&lt;/p&gt;

&lt;p&gt;I hope this article will motivate you to organize hackathons at your company and embrace a culture of research and experimentation, which will help make your team more productive and lead to greater success for the business as a whole.&lt;/p&gt;




</description>
      <category>hackathons</category>
      <category>engineering</category>
      <category>management</category>
      <category>hackathonorganizing</category>
    </item>
    <item>
      <title>Managing Browser Extension Versions with Gulp</title>
      <author>Rachel Harrison</author>
      <pubDate>Fri, 20 Aug 2021 13:27:43 +0000</pubDate>
      <link>https://dev.to/felloweng/managing-browser-extension-versions-with-gulp-58ng</link>
      <guid>https://dev.to/felloweng/managing-browser-extension-versions-with-gulp-58ng</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mvP28hHN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/1%2AsChEOpa1K7ajimUnbor0uQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mvP28hHN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/1%2AsChEOpa1K7ajimUnbor0uQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How did we get here?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While developing the second version of the &lt;a href="https://chrome.google.com/webstore/detail/fellow/nomeamlnnhgiickcddocjalmlhdfknpo?hl=en"&gt;Fellow browser extension&lt;/a&gt;, we realized that our current solution for managing the extension for our different environments‚Ää‚Äî‚Ääfinding and replacing all relevant variables in the code before uploading packages‚Ää‚Äî‚Ääwas getting to be too much overhead. In the first version of the extension, the only place where we needed a different value for each environment was for the source URL of an iframe, which was easy to switch out manually when needed for local development, our staging environment, and production, as we could do it right before uploading the extension to Chrome or Firefox.&lt;/p&gt;

&lt;p&gt;As we added more features to our extension, the list of places we needed to swap out URLs grew from one to three. Still, we managed this manually as we only had to do it a few times. There were a few developers working on the project, and we all changed the URLs back to match our staging environment when committing code. Then before uploading our extension for approval, we swapped them out for production. We knew this solution was far from ideal, but with only three places to swap out values and only a handful of developers who needed to remember where to swap them, it worked &lt;em&gt;fine&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Then things got more complicated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By the time the bulk of the development was done on the second large iteration of the extension, there were a dozen places that we‚Äôd need to swap out values. Additionally, it was no longer just the environment URL that we had to change‚Ää‚Äî‚Ääwe also had a value to get the correct cookies, and another that acted as a flag for functionality that we needed only in our local environments. On top of that, with our extension now being a more robust project that was really taking off, it wasn‚Äôt hard to imagine that soon even more developers would need to run the extension locally to contribute to its development. The overhead of documenting all the spots to swap values, and which values to swap them with, would have been hard to maintain and lengthy to execute.&lt;/p&gt;

&lt;p&gt;One half-measure would have been to pull all the values that needed to be swapped out of their files, and instead export them from a global config file. This solves the issue of having to document (or remember) all the places where values need to be swapped, but is still more overhead than we‚Äôd like. We‚Äôd still need to document somewhere what those values are for each environment, and generating the extension for a new environment would still involve editing a file.&lt;/p&gt;

&lt;p&gt;Then we found a solution that allowed us target a specific environment for the extension with one command. Using Gulp we can run a command like &lt;strong&gt;&lt;em&gt;gulp‚Ää‚Äî‚Ääconfig STAGING&lt;/em&gt;&lt;/strong&gt; and we‚Äôve generated a directory with a version of our extension targeting the staging environment, ready to upload.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How does it work?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the end, it‚Äôs really just a fancy version of the config file solution. All the values for an environment are placed together in a config file, one file for each environment. These are named with the name of the environment like &lt;strong&gt;&lt;em&gt;config.STAGING.json&lt;/em&gt;&lt;/strong&gt;. Then, when the gulp command is run and the environment is specified, a version of the extension with the correct values for that environment is generated and dumped into a specified folder.&lt;/p&gt;

&lt;p&gt;The bulk of this process in defined in a file called &lt;strong&gt;&lt;em&gt;gulpfile.js&lt;/em&gt;&lt;/strong&gt; at the top level of our extension directory. When gulp is run this file takes the appropriate config file and dumps those values into a file called &lt;strong&gt;&lt;em&gt;config.js&lt;/em&gt;&lt;/strong&gt;. This file is where the values are imported from elsewhere in the code. This config file and all the other extension files are copied to a separate folder, ready to be uploaded.&lt;/p&gt;

&lt;p&gt;So how does it do that? It defines four primary functions and executes them in order:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First it deletes any contents of the target directory, to make space for the newly compiled one.&lt;/li&gt;
&lt;li&gt;Then it makes copies of all extension files, excluding config files, and adds them to the target directory.&lt;/li&gt;
&lt;li&gt;Next, it selects the correct config file, based on the config flag passed when the command is run.&lt;/li&gt;
&lt;li&gt;Finally, it writes the contents of the selected json file to &lt;strong&gt;&lt;em&gt;config.js&lt;/em&gt;&lt;/strong&gt; in the target directory. Once these four steps are complete, all the extension source code and a config file with values for the target environment are in a single directory, ready to be uploaded!
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;What else can we do?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We‚Äôve already extended this basic concept in a few ways. In addition to creating &lt;strong&gt;&lt;em&gt;config..json&lt;/em&gt;&lt;/strong&gt; files for development, staging, and production, we can also create what I‚Äôve been calling ‚Äúon the fly configs‚Äù. These are config files to target rarely used environments, like sandboxes, or environments without consistent URLs, like the environments generated by our CI process. Unlike the other environments‚Äô config files, these ones are not tracked in Git. Instead, they are intended to be short-lived files that are created when necessary and then discarded.&lt;/p&gt;

&lt;p&gt;Another complication that arose surrounds the config file for local development. Every developer at Fellow has a different URL for local development. If I were to commit a config file with my URL in it, that wouldn‚Äôt be helpful for the next developer looking to run the extension to point at their local environment. Instead, the config file for local environments is not tracked in Git, but a file called &lt;strong&gt;&lt;em&gt;config.template&lt;/em&gt;&lt;/strong&gt; is. This template contains json to be copied to a local environment config file and populated with the correct values for that developer‚Äôs local setup.&lt;/p&gt;

&lt;p&gt;There are also other applications for this than just switching environments! For example, we could add a flag like &lt;strong&gt;&lt;em&gt;--browser&lt;/em&gt;&lt;/strong&gt; and define different config files for Chrome and Firefox. Currently in our extension, the browsers only differ in one way: the path to use to import images. We‚Äôre checking if we‚Äôre in Firefox before adding any image so that we can import it in the correct way. Instead, we could define the path to an image for Firefox in one config file and to an image for Chrome in another, then use Gulp to generate the correct version of the extension for upload.&lt;/p&gt;

&lt;p&gt;These are just a few ways we‚Äôve already expanded our use of Gulp, and there are many other possibilities! It‚Äôs helped us improve our development workflow and has reduced the amount of things we need to remember. I hope these tips will help you out too, and am excited to hear about any other interesting use cases for Gulp with browser extension management!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For a larger example (including extra features such as watching files for changes, and a sample extension),&lt;/em&gt; &lt;a href="https://diegogiacomelli.com.br/using-gulp-for-chrome-extension-dev-workflow/"&gt;&lt;em&gt;check out this great post&lt;/em&gt;&lt;/a&gt;&lt;em&gt;!&lt;/em&gt;&lt;/p&gt;




</description>
      <category>chromeextension</category>
      <category>browserextension</category>
      <category>chrome</category>
      <category>firefoxextensions</category>
    </item>
  </channel>
</rss>
