<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Flask Pandas Dataframe - How to code it</title>
      <author>Sm0ke</author>
      <pubDate>Sat, 10 Apr 2021 16:32:08 +0000</pubDate>
      <link>https://dev.to/sm0ke/flask-pandas-dataframe-how-to-code-it-4emd</link>
      <guid>https://dev.to/sm0ke/flask-pandas-dataframe-how-to-code-it-4emd</guid>
      <description>&lt;p&gt;Hello Coders, &lt;/p&gt;

&lt;p&gt;This article presents a simple Flask project that loads pandas dataframe into the database and shows the information on a page. &lt;strong&gt;Flask Pandas Dataframe&lt;/strong&gt; is a &lt;code&gt;one-file&lt;/code&gt; project that might help beginners to understand some basic Flask concepts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a simple Flask &lt;code&gt;app&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Download a &lt;code&gt;pandas dataframe&lt;/code&gt; from a remote URL&lt;/li&gt;
&lt;li&gt;Create an SQLite DB and a table to save the information&lt;/li&gt;
&lt;li&gt;Load pandas in DB using a new &lt;code&gt;custom command&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Visualize&lt;/code&gt; the data in the browser&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; TL;DR; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/flask-pandas-dataframe"&gt;Flask Pandas Dataframe&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;More &lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;free samples&lt;/a&gt; provided by AppSeed&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#build-amp-set-up"&gt;
  &lt;/a&gt;
  Build &amp;amp; Set up
&lt;/h3&gt;

&lt;p&gt;To build the project and see some action, please follow this simple setup presented below. Please note that Python3 is required to have a successful build. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clone the sources&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/flask-pandas-dataframe.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;flask-pandas-dataframe
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;: Flask, Pandas, SqlAlchemy and requests.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Virtualenv modules installation (Unix based systems)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv &lt;span class="nb"&gt;env&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source env&lt;/span&gt;/bin/activate
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Virtualenv modules installation (Windows based systems)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# virtualenv env&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# .\env\Scripts\activate&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Install dependencies&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Create the SQLite database&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Create database via Flask CLI&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;flask shell
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; from app import db  &lt;span class="c"&gt;# import SqlAlchemy interface &lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; db.create_all&lt;span class="o"&gt;()&lt;/span&gt;     &lt;span class="c"&gt;# create SQLite database and Data table &lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; quit&lt;span class="o"&gt;()&lt;/span&gt;              &lt;span class="c"&gt;# leave the Flask CLI  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Load the information&lt;/strong&gt; via a &lt;code&gt;custom command&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Load the data into the database&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;flask load-data titanic-min.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Start the app&lt;/strong&gt; and visualize the data&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Set the FLASK_APP environment variable&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Unix/Mac&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;run.py
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Windows&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;run.py
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Powershell&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$env&lt;/span&gt;:FLASK_APP &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;".&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s2"&gt;un.py"&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Set up the DEBUG environment&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# (Unix/Mac) export FLASK_ENV=development&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# (Windows) set FLASK_ENV=development&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# (Powershell) $env:FLASK_ENV = "development"&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;flask run 
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# access the app in the browser: http://localhost:5005 &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#dependencies"&gt;
  &lt;/a&gt;
  Dependencies
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://flask.palletsprojects.com/en/1.1.x/"&gt;Flask&lt;/a&gt; - the framework used
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pandas.pydata.org/"&gt;Pandas&lt;/a&gt; - an amazing &lt;code&gt;data analysis&lt;/code&gt; library&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.sqlalchemy.org/"&gt;SQLAlchemy&lt;/a&gt; - Python SQL Toolkit and ORM&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://flask-sqlalchemy.palletsprojects.com/en/2.x/"&gt;Flask-SqlAlchemy&lt;/a&gt; - Flask extension for SQLAlchemy&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pypi.org/project/requests/"&gt;Requests&lt;/a&gt; - simple HTTP library.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Virtualenv modules installation (Unix based systems)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv &lt;span class="nb"&gt;env&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source env&lt;/span&gt;/bin/activate
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Virtualenv modules installation (Windows based systems)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# virtualenv env&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# .\env\Scripts\activate&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Install modules - SQLite Database&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#download-the-data"&gt;
  &lt;/a&gt;
  Download the data
&lt;/h3&gt;

&lt;p&gt;The dataset is downloaded from a remote &lt;a href="https://static.appseed.us/data/titanic.txt"&gt;location&lt;/a&gt; and saved &lt;strong&gt;titanic.csv&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;# Define the remote CSV file
&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;csv_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'https://static.appseed.us/data/titanic.txt'&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;# Download the file (via request library)
&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;csv_file&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;# Save the content to a new LOCAL file
&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'titanic.csv'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;   
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#process-data"&gt;
  &lt;/a&gt;
  Process data
&lt;/h3&gt;

&lt;p&gt;The RAW dataset has ~900 rows and we can inspect it with ease using &lt;code&gt;pandas&lt;/code&gt; library&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;'titanic.csv'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;
     &lt;span class="n"&gt;PassengerId&lt;/span&gt;  &lt;span class="n"&gt;Survived&lt;/span&gt;  &lt;span class="n"&gt;Pclass&lt;/span&gt;                                               &lt;span class="n"&gt;Name&lt;/span&gt;     &lt;span class="n"&gt;Sex&lt;/span&gt;   &lt;span class="n"&gt;Age&lt;/span&gt;  &lt;span class="n"&gt;SibSp&lt;/span&gt;  &lt;span class="n"&gt;Parch&lt;/span&gt;            &lt;span class="n"&gt;Ticket&lt;/span&gt;     &lt;span class="n"&gt;Fare&lt;/span&gt; &lt;span class="n"&gt;Cabin&lt;/span&gt; &lt;span class="n"&gt;Embarked&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;              &lt;span class="mi"&gt;1&lt;/span&gt;         &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mi"&gt;3&lt;/span&gt;                            &lt;span class="n"&gt;Braund&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Mr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Owen&lt;/span&gt; &lt;span class="n"&gt;Harris&lt;/span&gt;    &lt;span class="n"&gt;male&lt;/span&gt;  &lt;span class="mf"&gt;22.0&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;         &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;21171&lt;/span&gt;   &lt;span class="mf"&gt;7.2500&lt;/span&gt;   &lt;span class="n"&gt;NaN&lt;/span&gt;        &lt;span class="n"&gt;S&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;              &lt;span class="mi"&gt;2&lt;/span&gt;         &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="n"&gt;Cumings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Mrs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;John&lt;/span&gt; &lt;span class="n"&gt;Bradley&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Florence&lt;/span&gt; &lt;span class="n"&gt;Briggs&lt;/span&gt; &lt;span class="n"&gt;Th&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;  &lt;span class="n"&gt;female&lt;/span&gt;  &lt;span class="mf"&gt;38.0&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;          &lt;span class="n"&gt;PC&lt;/span&gt; &lt;span class="mi"&gt;17599&lt;/span&gt;  &lt;span class="mf"&gt;71.2833&lt;/span&gt;   &lt;span class="n"&gt;C85&lt;/span&gt;        &lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;              &lt;span class="mi"&gt;3&lt;/span&gt;         &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mi"&gt;3&lt;/span&gt;                             &lt;span class="n"&gt;Heikkinen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Miss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Laina&lt;/span&gt;  &lt;span class="n"&gt;female&lt;/span&gt;  &lt;span class="mf"&gt;26.0&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="n"&gt;STON&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;O2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="mi"&gt;3101282&lt;/span&gt;   &lt;span class="mf"&gt;7.9250&lt;/span&gt;   &lt;span class="n"&gt;NaN&lt;/span&gt;        &lt;span class="n"&gt;S&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;              &lt;span class="mi"&gt;4&lt;/span&gt;         &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="n"&gt;Futrelle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Mrs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Jacques&lt;/span&gt; &lt;span class="n"&gt;Heath&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Lily&lt;/span&gt; &lt;span class="n"&gt;May&lt;/span&gt; &lt;span class="n"&gt;Peel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="n"&gt;female&lt;/span&gt;  &lt;span class="mf"&gt;35.0&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;            &lt;span class="mi"&gt;113803&lt;/span&gt;  &lt;span class="mf"&gt;53.1000&lt;/span&gt;  &lt;span class="n"&gt;C123&lt;/span&gt;        &lt;span class="n"&gt;S&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;              &lt;span class="mi"&gt;5&lt;/span&gt;         &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mi"&gt;3&lt;/span&gt;                           &lt;span class="n"&gt;Allen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Mr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;William&lt;/span&gt; &lt;span class="n"&gt;Henry&lt;/span&gt;    &lt;span class="n"&gt;male&lt;/span&gt;  &lt;span class="mf"&gt;35.0&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;            &lt;span class="mi"&gt;373450&lt;/span&gt;   &lt;span class="mf"&gt;8.0500&lt;/span&gt;   &lt;span class="n"&gt;NaN&lt;/span&gt;        &lt;span class="n"&gt;S&lt;/span&gt;
&lt;span class="p"&gt;..&lt;/span&gt;           &lt;span class="p"&gt;...&lt;/span&gt;       &lt;span class="p"&gt;...&lt;/span&gt;     &lt;span class="p"&gt;...&lt;/span&gt;                                                &lt;span class="p"&gt;...&lt;/span&gt;     &lt;span class="p"&gt;...&lt;/span&gt;   &lt;span class="p"&gt;...&lt;/span&gt;    &lt;span class="p"&gt;...&lt;/span&gt;    &lt;span class="p"&gt;...&lt;/span&gt;               &lt;span class="p"&gt;...&lt;/span&gt;      &lt;span class="p"&gt;...&lt;/span&gt;   &lt;span class="p"&gt;...&lt;/span&gt;      &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;886&lt;/span&gt;          &lt;span class="mi"&gt;887&lt;/span&gt;         &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mi"&gt;2&lt;/span&gt;                              &lt;span class="n"&gt;Montvila&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Rev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Juozas&lt;/span&gt;    &lt;span class="n"&gt;male&lt;/span&gt;  &lt;span class="mf"&gt;27.0&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;            &lt;span class="mi"&gt;211536&lt;/span&gt;  &lt;span class="mf"&gt;13.0000&lt;/span&gt;   &lt;span class="n"&gt;NaN&lt;/span&gt;        &lt;span class="n"&gt;S&lt;/span&gt;
&lt;span class="mi"&gt;887&lt;/span&gt;          &lt;span class="mi"&gt;888&lt;/span&gt;         &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;                       &lt;span class="n"&gt;Graham&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Miss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Margaret&lt;/span&gt; &lt;span class="n"&gt;Edith&lt;/span&gt;  &lt;span class="n"&gt;female&lt;/span&gt;  &lt;span class="mf"&gt;19.0&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;            &lt;span class="mi"&gt;112053&lt;/span&gt;  &lt;span class="mf"&gt;30.0000&lt;/span&gt;   &lt;span class="n"&gt;B42&lt;/span&gt;        &lt;span class="n"&gt;S&lt;/span&gt;
&lt;span class="mi"&gt;888&lt;/span&gt;          &lt;span class="mi"&gt;889&lt;/span&gt;         &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mi"&gt;3&lt;/span&gt;           &lt;span class="n"&gt;Johnston&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Miss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Catherine&lt;/span&gt; &lt;span class="n"&gt;Helen&lt;/span&gt; &lt;span class="s"&gt;"Carrie"&lt;/span&gt;  &lt;span class="n"&gt;female&lt;/span&gt;   &lt;span class="n"&gt;NaN&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;      &lt;span class="mi"&gt;2&lt;/span&gt;        &lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="mi"&gt;6607&lt;/span&gt;  &lt;span class="mf"&gt;23.4500&lt;/span&gt;   &lt;span class="n"&gt;NaN&lt;/span&gt;        &lt;span class="n"&gt;S&lt;/span&gt;
&lt;span class="mi"&gt;889&lt;/span&gt;          &lt;span class="mi"&gt;890&lt;/span&gt;         &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;                              &lt;span class="n"&gt;Behr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Mr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Karl&lt;/span&gt; &lt;span class="n"&gt;Howell&lt;/span&gt;    &lt;span class="n"&gt;male&lt;/span&gt;  &lt;span class="mf"&gt;26.0&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;            &lt;span class="mi"&gt;111369&lt;/span&gt;  &lt;span class="mf"&gt;30.0000&lt;/span&gt;  &lt;span class="n"&gt;C148&lt;/span&gt;        &lt;span class="n"&gt;C&lt;/span&gt;
&lt;span class="mi"&gt;890&lt;/span&gt;          &lt;span class="mi"&gt;891&lt;/span&gt;         &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mi"&gt;3&lt;/span&gt;                                &lt;span class="n"&gt;Dooley&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Mr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Patrick&lt;/span&gt;    &lt;span class="n"&gt;male&lt;/span&gt;  &lt;span class="mf"&gt;32.0&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;            &lt;span class="mi"&gt;370376&lt;/span&gt;   &lt;span class="mf"&gt;7.7500&lt;/span&gt;   &lt;span class="n"&gt;NaN&lt;/span&gt;        &lt;span class="n"&gt;Q&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Let's inspect columns data types in the DataFrame: &lt;code&gt;df.dtypes&lt;/code&gt;. This information is used to design the &lt;code&gt;table&lt;/code&gt; where is information is loaded.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dtypes&lt;/span&gt; 
&lt;span class="n"&gt;PassengerId&lt;/span&gt;      &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;Survived&lt;/span&gt;         &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;Pclass&lt;/span&gt;           &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;            &lt;span class="nb"&gt;object&lt;/span&gt;
&lt;span class="n"&gt;Sex&lt;/span&gt;             &lt;span class="nb"&gt;object&lt;/span&gt;
&lt;span class="n"&gt;Age&lt;/span&gt;            &lt;span class="n"&gt;float64&lt;/span&gt;
&lt;span class="n"&gt;SibSp&lt;/span&gt;            &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;Parch&lt;/span&gt;            &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;Ticket&lt;/span&gt;          &lt;span class="nb"&gt;object&lt;/span&gt;
&lt;span class="n"&gt;Fare&lt;/span&gt;           &lt;span class="n"&gt;float64&lt;/span&gt;
&lt;span class="n"&gt;Cabin&lt;/span&gt;           &lt;span class="nb"&gt;object&lt;/span&gt;
&lt;span class="n"&gt;Embarked&lt;/span&gt;        &lt;span class="nb"&gt;object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#prepare-the-sqlite-raw-storage-endraw-"&gt;
  &lt;/a&gt;
  Prepare the SQLite &lt;code&gt;storage&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;To manage the information with ease, SqlAchemy ORM will be used. The &lt;code&gt;Data&lt;/code&gt; table will store the loaded information - here is the definition:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Store the Titanic sad stats
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;passengerId&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;     &lt;span class="n"&gt;primary_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;survived&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;     &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sex&lt;/span&gt;          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;     &lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="n"&gt;age&lt;/span&gt;          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;     &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="n"&gt;fare&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# The string representation
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__repr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;passengerId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;' - '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Create the SQLite database and the new table via &lt;code&gt;Flask CLI&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;flask shell
App: app &lt;span class="o"&gt;[&lt;/span&gt;development]
Instance: D:&lt;span class="se"&gt;\w&lt;/span&gt;ork&lt;span class="se"&gt;\r&lt;/span&gt;epo-learn&lt;span class="se"&gt;\p&lt;/span&gt;ython&lt;span class="se"&gt;\h&lt;/span&gt;ow-to&lt;span class="se"&gt;\i&lt;/span&gt;nstance
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; from app import db
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; db.create_all&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, we can inspect the database using &lt;a href="https://sqlitebrowser.org/"&gt;SQLiteBrowser&lt;/a&gt;, an open-source and free editor for SQLite (the table is empty).&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#load-data"&gt;
  &lt;/a&gt;
  Load Data
&lt;/h3&gt;

&lt;p&gt;The information will be loaded into the database via a &lt;code&gt;custom command&lt;/code&gt; = &lt;strong&gt;load-data&lt;/strong&gt;. The command expects a &lt;code&gt;file name&lt;/code&gt; as input argument (CSV format).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# New import
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;click&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;# Custom command
&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cli&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"load-data"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"fname"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;load_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="s"&gt;''' Load data from a CSV file '''&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'*** Load from file: '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# The functional part goes here
&lt;/span&gt;    &lt;span class="p"&gt;...&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check the command is properly coded we can type &lt;code&gt;flask --help&lt;/code&gt; in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;flask &lt;span class="nt"&gt;--help&lt;/span&gt;

Options:
  &lt;span class="nt"&gt;--version&lt;/span&gt;  Show the flask version
  &lt;span class="nt"&gt;--help&lt;/span&gt;     Show this message and exit.

Commands:
  load-data  Load data from a CSV file          &amp;lt;&lt;span class="nt"&gt;--&lt;/span&gt; NEW Command
  routes     Show the routes &lt;span class="k"&gt;for &lt;/span&gt;the app.
  run        Run a development server.
  shell      Run a shell &lt;span class="k"&gt;in &lt;/span&gt;the app context.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;








&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Load the information&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;flask load-data titanic-min.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Once the information is loaded we can start the app and check the results in the browser: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Default route&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ex2i0KIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqre9xfk25nl7j6k6rev.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ex2i0KIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqre9xfk25nl7j6k6rev.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Data Route&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UDpqGjBm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/soqv5572z9ax7bbya2ic.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UDpqGjBm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/soqv5572z9ax7bbya2ic.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;**Thanks for reading! For more resources, please access:  &lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://flask.palletsprojects.com/en/1.1.x/"&gt;Flask&lt;/a&gt; - the framework used
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pandas.pydata.org/"&gt;Pandas&lt;/a&gt; - an amazing &lt;code&gt;data analysis&lt;/code&gt; library&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/"&gt;AppSeed&lt;/a&gt; - for support annd more samples&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>flask</category>
      <category>pandas</category>
    </item>
    <item>
      <title>I started to use DEV Community. Hello to Every one)</title>
      <author>Bekzod</author>
      <pubDate>Sat, 10 Apr 2021 15:53:41 +0000</pubDate>
      <link>https://dev.to/bekzoddeveloper/i-started-to-use-dev-community-hello-to-every-one-1d48</link>
      <guid>https://dev.to/bekzoddeveloper/i-started-to-use-dev-community-hello-to-every-one-1d48</guid>
      <description>&lt;p&gt;DEV COMMUNITY is Awesome!!!&lt;/p&gt;

</description>
      <category>programming</category>
    </item>
    <item>
      <title>JavaScript Baseball</title>
      <author>Tim Myers</author>
      <pubDate>Sat, 10 Apr 2021 15:40:05 +0000</pubDate>
      <link>https://dev.to/denvercoder/javascript-baseball-3pl4</link>
      <guid>https://dev.to/denvercoder/javascript-baseball-3pl4</guid>
      <description>&lt;h1&gt;
  &lt;a href="#do-it-because-its-fun"&gt;
  &lt;/a&gt;
  Do It Because It's Fun
&lt;/h1&gt;

&lt;p&gt;Some advice I give to people a lot is once you have a good grasp on your preferred language you should build something you're passionate about or something you enjoy.&lt;/p&gt;

&lt;p&gt;With new programmers a lot of the struggle is habit building. Getting into the groove of studying and learning takes time. And it's a lot easier if you're having fun while you're doing it.&lt;/p&gt;

&lt;p&gt;Now the key like I said before is to try and create a project that you find interesting. You may be thinking, "But I only like nuclear physics... how am I going to write a program about that?"&lt;/p&gt;

&lt;p&gt;The key here is not to build some elaborate project... at least not at first. You could create a project that asks you Nuclear Physics questions and you can keep track of correct answers and provide a scoreboard.&lt;/p&gt;

&lt;p&gt;Then you can build on that idea. You can add multiplayer support. A timer to answer the questions. Some fun animations, etc. Just add onto it piece by piece until you have something.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#play-ball"&gt;
  &lt;/a&gt;
  Play Ball
&lt;/h1&gt;

&lt;p&gt;I'm not particularly fond of Baseball. I played Little League as a kid, I umpired games for the &lt;strong&gt;really&lt;/strong&gt; small kids, and I played in High School. But I sort of lost interest in it after that.&lt;/p&gt;

&lt;p&gt;I decided to do this project because I had given this project to people that I had mentored in the past and I wanted to see how difficult it really was, (maybe I was asking too much of them). Now, I didn't build a Baseball game with full 3D graphics and controller support. It's basically just a bunch of HTML output in the browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oRq834rI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ro0xnc7dp9ycq3rxzn7q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oRq834rI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ro0xnc7dp9ycq3rxzn7q.png" alt="A baseball scoreboard with Away Team and Home team, outs, strikes, balls, who is at bat, and runners on base"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've abstracted away a lot of the complexity. You don't swing at a pitch or anything. You just pitch the ball. Then a random number generator will either make that pitch a "strike", or a "ball". Once you get to 4 balls the batter is "walked". If you get 3 "strikes" the batter is out. Basically I just use the fundamental rules of baseball to keep track of everything.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nbz3I8M8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilxlidn6mqnind98t4qd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nbz3I8M8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilxlidn6mqnind98t4qd.png" alt="A code file showing a switch statement"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I picked baseball because it's a relatively slow paced game but you can really do this with anything:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Horse Racing&lt;/li&gt;
&lt;li&gt;Tennis&lt;/li&gt;
&lt;li&gt;A simple solar system simulator&lt;/li&gt;
&lt;li&gt;Cricket&lt;/li&gt;
&lt;li&gt;A (Pet) Program where there is a creature of some sort that you have to take care of.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are tons of options. Pick something you enjoy and simulate it. Start small, and build the project up. Do you think that Twitter or Dev.to started out the way they are now? Nope. Twitter probably had the ability to login and send a message and that was it. You probably couldn't like, follow, retweet, block, mute, etc. They built an app with minimal functionality and build up from there.&lt;/p&gt;

&lt;p&gt;Here is the link to my &lt;a href="https://github.com/denvercoder/easy-baseball"&gt;easy-baseball&lt;/a&gt; repo if you'd like to take a look at the whole project. You can run it yourself and try and figure out how it works. It's actually not a lot of code so don't be intimidated. Just go have a look. &lt;/p&gt;

&lt;p&gt;If you want you have my full permission and encouragement to build on this project. There isn't a lot of functionality and there are a few bugs. See if you can find them and fix them.&lt;/p&gt;

&lt;p&gt;Thanks for reading and that's all y'all.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Things only bad developers do</title>
      <author>The Ninja Programmer</author>
      <pubDate>Sat, 10 Apr 2021 15:26:44 +0000</pubDate>
      <link>https://dev.to/theninjaprogrammer/things-only-bad-developers-do-efe</link>
      <guid>https://dev.to/theninjaprogrammer/things-only-bad-developers-do-efe</guid>
      <description>&lt;p&gt;As a developer, our job is not only limited to wring the code. There are a few more things that we must do apart from writing code.&lt;/p&gt;

&lt;p&gt;Today, we will tell you a few points that you &lt;strong&gt;should not&lt;/strong&gt; do as a developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-writing-over-optimized-code"&gt;
  &lt;/a&gt;
  1. Writing Over Optimized Code
&lt;/h2&gt;

&lt;p&gt;It's always good to write optimized code, but it's also important to make sure that we don't over-optimize it. Let's say, you are working in a team and you are assigned to write a function that does something. Suppose, you come up with a solution that does that job in 2 or 3 lines, but it's over-optimized and not very easily readable.&lt;/p&gt;

&lt;p&gt;If other team members are trying to understand this function, they will hardly understand what your code is doing and how is it working, because it's hardly readable due to being over-optimized. &lt;/p&gt;

&lt;p&gt;Always write optimized code, &lt;strong&gt;but not at the cost of readability and ease of understanding.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-pushing-untested-code-into-production"&gt;
  &lt;/a&gt;
  2. Pushing untested code into production
&lt;/h2&gt;

&lt;p&gt;No matter how much sure you are about your code and its working, pushing it directly to production without testing it, is a BAD decision.&lt;/p&gt;

&lt;p&gt;You might feel like doing this when you have made a really small change and not feel like testing it.&lt;/p&gt;

&lt;p&gt;But, there could be chances that that change might not be implemented as you wanted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-pushing-commented-code-in-production"&gt;
  &lt;/a&gt;
  3. Pushing commented code in production
&lt;/h2&gt;

&lt;p&gt;This is very dangerous. You might think what harm it might do? But, when code comes under maintenance or updations and some other dev starts working with the code, there are always chances that he might uncomment it and screw up the entire application. Also, it might create unnecessary confusion.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-not-considering-the-bad-scenarios"&gt;
  &lt;/a&gt;
  4. Not considering the bad scenarios
&lt;/h2&gt;

&lt;p&gt;Your code will not always run in an ideal scenario or your users will not always use the app as you want them to use. So, ignoring all the basic bad scenarios is the worst thing to do. If you do that, your code will horribly fail.&lt;/p&gt;

&lt;p&gt;As a developer, always consider, manage all the bad scenarios. Make sure your code is ready to face the worst of conditions.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;br&gt;
Let us know your thoughts in the comments below&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>API, FUNCTIONS, BUTTON NOT FIRING IN REACT</title>
      <author>ADEKOLA Abdwahab</author>
      <pubDate>Sat, 10 Apr 2021 14:53:36 +0000</pubDate>
      <link>https://dev.to/codarbind/api-functions-button-not-firing-in-react-2hcc</link>
      <guid>https://dev.to/codarbind/api-functions-button-not-firing-in-react-2hcc</guid>
      <description>&lt;p&gt;I am currently building a MERN application.&lt;/p&gt;

&lt;p&gt;It is working fine on localhost - desktop, then I thought of exploring it on mobile, so I created a local network. See below for how to create and connect to local network.&lt;/p&gt;

&lt;p&gt;Alas, some of my buttons were not responding.&lt;/p&gt;

&lt;p&gt;What could have happened?&lt;/p&gt;

&lt;p&gt;Upon troubleshooting, I realized that only 'SUBMIT' buttons were not working.&lt;/p&gt;

&lt;p&gt;... after hours of googling ...&lt;/p&gt;

&lt;p&gt;I threw &lt;em&gt;alert('i clicked')&lt;/em&gt; inside the onclick function, I got the alert whenever I clicked.&lt;/p&gt;

&lt;p&gt;It was then I realized that I was calling a wrong API url. &lt;/p&gt;

&lt;p&gt;How?&lt;/p&gt;

&lt;p&gt;The API URL i was calling is &lt;a href="http://localhost:4000"&gt;http://localhost:4000&lt;/a&gt;. Port 4000 was where my backend is connected to. This would work fine on my local machine. However, it wont work over the network, because localhost === 127.0.0.1, which is different from Local Area Network Address - 192.168.43.263 .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I change &lt;a href="http://localhost:4000"&gt;http://localhost:4000&lt;/a&gt; to &lt;a href="http://192.168.43.263:4000"&gt;http://192.168.43.263:4000&lt;/a&gt; for all instances.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOW TO CREATE A LOCAL NETWORK?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Simple and straight forward:&lt;/p&gt;

&lt;p&gt;A. Get your local ip:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;open command prompt or any command line interface:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ATlKaTrN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mupzw01wx2atcpvazq6u.png" alt="image"&gt;
&lt;/li&gt;
&lt;li&gt;Type in ipconfig:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1v7iSztD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tentpqkksi71jbdfn04i.png" alt="image"&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click enter:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cX74w4w5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqoupy3sctbr5x90vw5d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cX74w4w5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqoupy3sctbr5x90vw5d.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The marked is your IP.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;B. Connect your laptop (where your localhost is domiciled) to the same network with the other device (may be your phone) you want to use. This could be achieved by connecting them to the same wifi hubspot. &lt;/p&gt;

&lt;p&gt;My mobile device is connected to ColdVi wifi, same with my laptop, hence they are on the same network.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--35yxS5g1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lk42n9evmxxool1nh3a6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--35yxS5g1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lk42n9evmxxool1nh3a6.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C6sSL9qq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi02ezc78wfpgb01ehuc.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6sSL9qq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi02ezc78wfpgb01ehuc.jpeg" alt="WhatsApp Image 2021-04-10 at 3.26.42 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;C. On the other device, enter this combination in your browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://yourIP:port"&gt;http://yourIP:port&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Hjph4Ir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwvpbcvj201i75zct1l7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Hjph4Ir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwvpbcvj201i75zct1l7.jpeg" alt="WhatsApp Image 2021-04-10 at 3.46.29 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;do not miss out the colon in between&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Your site should load.&lt;/p&gt;

</description>
      <category>react</category>
      <category>api</category>
      <category>function</category>
      <category>button</category>
    </item>
    <item>
      <title>Upload images with React, ExpressJS and mySQL</title>
      <author>Maureen </author>
      <pubDate>Sat, 10 Apr 2021 14:53:25 +0000</pubDate>
      <link>https://dev.to/maureenoldyck/upload-images-with-react-expressjs-and-mysql-47jn</link>
      <guid>https://dev.to/maureenoldyck/upload-images-with-react-expressjs-and-mysql-47jn</guid>
      <description>&lt;p&gt;For a project I was working on, we wanted to upload images so users could change their profile picture. As a beginner in React and Node, it took me a little while to finally figure out how to upload an image. That’s why I thought it would be a great subject to write an article about.&lt;/p&gt;

&lt;p&gt;This tutorial will explain you how I upload images in the backend, store the path to that image in our database and finally show the image on the frontend.&lt;/p&gt;

&lt;p&gt;For this tutorial I used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ReactJS -  ^17.0.1 - Frontend library&lt;/li&gt;
&lt;li&gt;NodeJs - ^14.15.4 - Runtime environment for the server&lt;/li&gt;
&lt;li&gt;Multer - ^1.4.2 - Middleware for handling multipart/form-data&lt;/li&gt;
&lt;li&gt;CORS - ^2.8.5 - Package for Cross-origin resource sharing &lt;/li&gt;
&lt;li&gt;ExpressJS - ^4.17.1 - Framework to build our application&lt;/li&gt;
&lt;li&gt;mySQL - ^2.18.1 - Database&lt;/li&gt;
&lt;li&gt;npm - ^6.14.10 - Package manager &lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#1-setup"&gt;
  &lt;/a&gt;
  1. Setup
&lt;/h2&gt;

&lt;p&gt;First things first, create a map where you set-up a React app and ExpressJS. (Please note, NodeJS is already installed on my computer, if you don’t have Node and/or npm yet please follow these instructions: (&lt;a href="https://nodejs.org/en/"&gt;https://nodejs.org/en/&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  React
&lt;/h3&gt;

&lt;p&gt;To create the frontend or "client" map, type in your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app client
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#express-amp-multer-amp-cors"&gt;
  &lt;/a&gt;
  Express &amp;amp; Multer &amp;amp; CORS
&lt;/h3&gt;

&lt;p&gt;Create a server map in your root. Then in the terminal do:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd server
npm init // To create packageJSON
npm install --save express multer cors
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, create an index.js in the server map and require Express, cors and Multer like this ⬇️&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;multer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;multer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For Multer, also set up a storage variable, that leads to the map you want your images to be stored (destination) and a filename, I used the original name of the picture here for filename.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1IVUlLIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0xohhzcmvgaciujhx5fu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1IVUlLIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0xohhzcmvgaciujhx5fu.png" alt="Multer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For CORS, you also need to specify some CORS options, mine are like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yYjB5IDZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chi0eyc0xtp1brvitkez.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yYjB5IDZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chi0eyc0xtp1brvitkez.png" alt="CORS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We use CORS so that we can allow web browsers to access our APIs we are going to create.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mysql"&gt;
  &lt;/a&gt;
  mysql
&lt;/h3&gt;

&lt;p&gt;In your server map install mysql, a node module that will allow you to connect to the database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When that is installed, make a simple database connection like so ⬇️&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U6tUJCdN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hrgn6p5wdguiijqgbjal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U6tUJCdN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hrgn6p5wdguiijqgbjal.png" alt="Database Connection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For easier understanding, this is how my final map structure looks like: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fDglnA7N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9amkvubafpkee3mc2oyf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fDglnA7N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9amkvubafpkee3mc2oyf.png" alt="File Structure"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-code"&gt;
  &lt;/a&gt;
  2. Code
&lt;/h2&gt;

&lt;p&gt;Normally you would write this into a component, however for this tutorials sake I will write it straight into the App.js file.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#21-create-input"&gt;
  &lt;/a&gt;
  2.1 Create input
&lt;/h3&gt;

&lt;p&gt;Create an input that only allows images, one at a time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"file"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"image"&lt;/span&gt; &lt;span class="na"&gt;accept=&lt;/span&gt;&lt;span class="s"&gt;"image/*"&lt;/span&gt; &lt;span class="na"&gt;multiple=&lt;/span&gt;&lt;span class="s"&gt;{false}&lt;/span&gt; &lt;span class="na"&gt;onChange=&lt;/span&gt;&lt;span class="s"&gt;{imageHandler}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#22-access-file-with-handler"&gt;
  &lt;/a&gt;
  2.2 Access file with handler
&lt;/h3&gt;

&lt;p&gt;To access the file we attach a handle to it with the &lt;code&gt;onChange&lt;/code&gt; method. With this handle we can use the event object which gives access to file uploaded. &lt;br&gt;
Then, we put that file inside a &lt;code&gt;new FormData&lt;/code&gt; interface as it provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent to the server. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#23-send-to-backend-with-fetch-post"&gt;
  &lt;/a&gt;
  2.3 Send to backend with fetch post
&lt;/h3&gt;

&lt;p&gt;We are writing this fetch API to get data from an external API (that we will create later in the server side). We set the method to POST because we want to send data, the data we want to send is inside the body. Here it is the formData variable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xeQywsp_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uipyckv884ueh3yexhw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xeQywsp_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uipyckv884ueh3yexhw7.png" alt="POST fetch"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-database-query"&gt;
  &lt;/a&gt;
  3. Database query
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#31-api"&gt;
  &lt;/a&gt;
  3.1 API
&lt;/h3&gt;

&lt;p&gt;In the previous step we wrote a fetch POST from an API that we are now going to create. We need to make sure the fetch info needs to be the same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/api/image&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;upload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;single&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Single stands for what type of multipart formdata we are expecting (in this case one image), and 'image' should be the value of the name attribute of your input.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#32-check-for-valid-file-extension"&gt;
  &lt;/a&gt;
  3.2 Check for valid file extension
&lt;/h3&gt;

&lt;p&gt;After that, we first want to check if the image uploaded is from a valid extension. This goes easily with an if statement:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;originalname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.(&lt;/span&gt;&lt;span class="sr"&gt;jpg|JPG|jpeg|JPEG|png|PNG|gif|GIF&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Only image files (jpg, jpeg, png) are allowed!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#33-post-sql"&gt;
  &lt;/a&gt;
  3.3 POST SQL
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we get the image pathname, that we will store in our database. In the instance that we already have a database with data and we just want to change the image, we use the UPDATE statement in the connection query.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sqlInsert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;UPDATE&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt; &lt;span class="nx"&gt;SET&lt;/span&gt; &lt;span class="s2"&gt;`image`&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;WHERE&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;?;&lt;/span&gt;
&lt;span class="nx"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqlInsert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This query will either give an error or result. We use res.send to send the data given by the database, to the client side with the API.&lt;/p&gt;

&lt;p&gt;Here is what this whole query looks like in my code ⬇️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tHvKGv-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fp170pkl7out72413pyw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tHvKGv-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fp170pkl7out72413pyw.png" alt="POST Query"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#34-display-message"&gt;
  &lt;/a&gt;
  3.4 Display message
&lt;/h3&gt;

&lt;p&gt;As you saw in the query part, we send 'msg' to the client side but we also need to create a variable for that inside our code. For that we create a state variable that I called uploadStatus here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;uploadStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUploadStatus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&amp;amp;&amp;amp;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt; {uploadStatus} &lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-accessing-the-image"&gt;
  &lt;/a&gt;
  4. Accessing the image
&lt;/h2&gt;

&lt;p&gt;Now our image path is uploaded into our database, so now we can link that path to the image and finally display our image. &lt;/p&gt;

&lt;p&gt;First, because we are storing our images inside our server map, we need to be able to access this map from our frontend as well, we can do that by this line of code :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#41-get-sql-request"&gt;
  &lt;/a&gt;
  4.1 GET SQL request
&lt;/h3&gt;

&lt;p&gt;Next, we need to create a GET API and SQL query to get the data we need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R8ZZ2ZYg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48bb946eis0nzeh4dct1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R8ZZ2ZYg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48bb946eis0nzeh4dct1.png" alt="GET SQL"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#42-display-image"&gt;
  &lt;/a&gt;
  4.2 Display image
&lt;/h3&gt;

&lt;p&gt;Like as we did a POST fetch, to get the data we need to do a GET fetch. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jmLaXANS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wdmalemiccp4yag7spt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jmLaXANS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4wdmalemiccp4yag7spt.png" alt="GET Fetch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, to set state of the image we use the url to the backend server location.&lt;/p&gt;

&lt;p&gt;Now the only thing we have to do is add the image path into the src of the image element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;{image &lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;{image}&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"img"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, &lt;code&gt;npm start&lt;/code&gt; both your client and server folder. Here is the result: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q0ppnJ2p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/593bkbcn9sxcxnjdtarh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q0ppnJ2p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/593bkbcn9sxcxnjdtarh.png" alt="Final result"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;We made it to the end of the tutorial! &lt;/p&gt;

&lt;p&gt;Hopefully this tutorial was helpful for you. If there is anything you would do different or make my code better, please do let me know as I am still a beginner and eager to learn. &lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#icon-i-used-as-image-is-from-flaticoncom"&gt;
  &lt;/a&gt;
  Icon I used as image is from &lt;a href="https://www.flaticon.com/"&gt;flaticon.com&lt;/a&gt;
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#header-image-is-by-marcel-friedrich-on-unsplash"&gt;
  &lt;/a&gt;
  Header image is by &lt;a href="https://unsplash.com/@screenwork_ch?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Marcel Friedrich&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/computer-image-upload?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;
&lt;/h6&gt;

</description>
      <category>react</category>
      <category>mysql</category>
      <category>beginners</category>
      <category>node</category>
    </item>
    <item>
      <title>Choosing a Framework in Node.js</title>
      <author>Basile</author>
      <pubDate>Sat, 10 Apr 2021 14:44:26 +0000</pubDate>
      <link>https://dev.to/basileleroy/choosing-a-framework-in-node-js-3n0c</link>
      <guid>https://dev.to/basileleroy/choosing-a-framework-in-node-js-3n0c</guid>
      <description>&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Today, I will be writing about my findings on using frameworks in &lt;br&gt;
a Node.js project as a beginner.    &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I can only assume that every person that started coding, has been confronted with this situation...&lt;br&gt;
Where you want to achieve a certain feature or use a certain structure to ease the process when working on a project.    &lt;/p&gt;

&lt;p&gt;This post will be about my finding in this kind of situation.   &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#1-what-do-you-want-to-do"&gt;
  &lt;/a&gt;
  1. What do you want to do?
&lt;/h4&gt;

&lt;p&gt;First question to ask yourself would be what kind of features you want to have. In order to install the right framework, you will need to look for the feature you need, and the features the package will provide.&lt;br&gt;&lt;br&gt;
Some packages are specific to certain other frameworks or maybe even to certain database managers, etc ...&lt;/p&gt;

&lt;p&gt;Let's give an example:   &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://vuetifyjs.com/en/"&gt;Vuetify&lt;/a&gt;&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gC8Ue3gz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/joczpm8jij44bg27smgp.png" alt="image"&gt;
&lt;code&gt;Vuetify&lt;/code&gt; is a framework that helps making better ui components when using &lt;code&gt;Vue&lt;/code&gt; as framework. Which means that it would not be of much use when you would be working with another type of frameworks like &lt;code&gt;Reactjs&lt;/code&gt; or &lt;code&gt;Svelte&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#12-examples-of-popular-frameworks-to-use"&gt;
  &lt;/a&gt;
  1.2 examples of popular frameworks to use:
&lt;/h5&gt;

&lt;p&gt;When working on a Javascript project it is a popular thing to do to install both a front-end framework (which will be about the components of your website and the interface), and a back-end framework to support the server functionality of that project.     &lt;/p&gt;

&lt;p&gt;A example would be: &lt;em&gt;React.js and Express.js&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://reactjs.org/"&gt;React.js&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LidPsjLE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7phdr7sg3grvd49mugqj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LidPsjLE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7phdr7sg3grvd49mugqj.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
A React-app will provide you with a ready to use package. Which will save you a lot of time.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JzK6TS8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e33tr0kyk3aa68endk9l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JzK6TS8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e33tr0kyk3aa68endk9l.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://expressjs.com/"&gt;Express.js&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iD_VEG7Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qltyl7fvxhbhe59krrwb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iD_VEG7Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qltyl7fvxhbhe59krrwb.png" alt="image"&gt;&lt;/a&gt; &lt;br&gt;
On the other side, Express will be taking care of the server. like connecting an Api, Using a register/login system (can also be a framework on its own), etc...     &lt;/p&gt;

&lt;p&gt;In both parts of the project you can install specific dependencies to use. Those will be stored inside &lt;code&gt;package.json&lt;/code&gt; files. But we will come back to that later on!    &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Just remember that we can use a lot of different frameworks inside a project, and even have it separated between different parts of a project, like the "front-end" part and the "back-end" part!    &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But let's continue...&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#2-deprecated-or-not"&gt;
  &lt;/a&gt;
  2. Deprecated or not?
&lt;/h4&gt;

&lt;p&gt;Let's assume that we found a framework that fits our needs for our project... It is important to look for it's activity (for example: latest update date) and usability!&lt;br&gt;&lt;br&gt;
Factors to keep in mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Has it been recently updated or maintained?&lt;/li&gt;
&lt;li&gt;What are the webbrowsers that would support it?&lt;/li&gt;
&lt;li&gt;Frequently downloaded/installed?&lt;/li&gt;
&lt;li&gt;Decent and/or enough documentation?
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;As a beginner one of the biggest problems when working with a unknown framework will be figuring out how to use it.&lt;/code&gt;&lt;br&gt;&lt;br&gt;
So you might want to only use frameworks that are well documented.     &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#3-they-evolve"&gt;
  &lt;/a&gt;
  3. They evolve!
&lt;/h4&gt;

&lt;p&gt;Most frameworks are originally open source, which meant that it is a certainty that they will evolve regularly, unless it has been abandoned of course (but that's why we keep part 2 of this article in mind!)&lt;br&gt;&lt;br&gt;
That also means that it is my recommendation to frequently go look at the original repository for new updates/messages.    &lt;/p&gt;

&lt;p&gt;One of my favorite tips to give is to go check the "issues" page of that repository on &lt;code&gt;GitHub&lt;/code&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yJbpAEew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c8ynpqb2192akeepl0t7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yJbpAEew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c8ynpqb2192akeepl0t7.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
It can be a goldmine of information and sometimes you may even find answers to unanswered questions about a certain error!     &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#4-the-implementation"&gt;
  &lt;/a&gt;
  4. The implementation
&lt;/h4&gt;

&lt;p&gt;So... We found our framework, it has what we need, is recently updated, well documented and has been used by others a lot. PERFECT!&lt;br&gt;&lt;br&gt;
Now we need to install it.     &lt;/p&gt;

&lt;p&gt;To Install a framework, we will need to initialize our node project first.&lt;br&gt;&lt;br&gt;
You can use your terminal to move into your project folder where you can use this line of code into your terminal to initialize node:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will ask a few configuration questions to set up your project inside a &lt;code&gt;package.json&lt;/code&gt; file.&lt;br&gt;&lt;br&gt;
After installing your first dependency (including frameworks), you will be able to find those under &lt;code&gt;"dependencies":&lt;/code&gt;, just like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"bcryptjs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.4.3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cookie-parser"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.4.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cors"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.8.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"debug"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~2.6.9"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"express"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~4.16.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"express-session"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.17.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"http-errors"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~1.6.3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"morgan"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~1.9.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"multer"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.4.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"mysql"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.18.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"nodemon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.0.7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"passport"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.4.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"passport-local"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.0.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To add new frameworks it is acutally fairly easy, you just use your package manager, for example, &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt; and use the install syntax according to the package manager you use&lt;br&gt;&lt;br&gt;
npm:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;path&amp;gt;to&amp;gt;project&amp;gt; npm install package-name
or...
&amp;gt;path&amp;gt;to&amp;gt;project&amp;gt; npm -i package-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yarn:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;path&amp;gt;to&amp;gt;project&amp;gt; yarn add package-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will find out that most of the dependencies have this line of code already prepared for you to use on their website or on &lt;a href="https://www.npmjs.com/"&gt;npmjs.com&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>frameworks</category>
      <category>node</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>50 Python Projects with Source Code</title>
      <author>Kiran Sethumadhavan</author>
      <pubDate>Sat, 10 Apr 2021 14:31:59 +0000</pubDate>
      <link>https://dev.to/kiransethu46/50-python-projects-with-source-code-2n7g</link>
      <guid>https://dev.to/kiransethu46/50-python-projects-with-source-code-2n7g</guid>
      <description>&lt;p&gt;*&lt;em&gt;Do you want to Kickstart a career in CyberSecurity and want to know how hackers hack in real life  *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Join Now&lt;/p&gt;

&lt;p&gt;t.me/infosecbugbounty&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.me/joinchat/aYDOfr2Hhr4xNmRl"&gt;https://t.me/joinchat/aYDOfr2Hhr4xNmRl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python Projects For Beginners:&lt;br&gt;
If you’re a newbie to Python where you’ve just learned lists, tuples, dictionaries, and some basic Python modules like the random module, here are some Python projects with source code for beginners for you:&lt;/p&gt;

&lt;p&gt;1 Create Acronyms using Python (&lt;a href="https://thecleverprogrammer.com/2021/01/13/acronyms-using-python/"&gt;https://thecleverprogrammer.com/2021/01/13/acronyms-using-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;2 Alarm Clock with Python (&lt;a href="https://thecleverprogrammer.com/2021/01/13/alarm-clock-with-python/"&gt;https://thecleverprogrammer.com/2021/01/13/alarm-clock-with-python/&lt;/a&gt;)&lt;br&gt;
3 Email Slicer with Python(&lt;a href="https://thecleverprogrammer.com/2021/01/12/email-slicer-with-python/"&gt;https://thecleverprogrammer.com/2021/01/12/email-slicer-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;4 Story Generator with Python (&lt;a href="https://thecleverprogrammer.com/2021/01/11/story-generator-with-python/"&gt;https://thecleverprogrammer.com/2021/01/11/story-generator-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;5 Generate Password with Python(&lt;a href="https://thecleverprogrammer.com/2021/01/11/python-program-to-generate-password/"&gt;https://thecleverprogrammer.com/2021/01/11/python-program-to-generate-password/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;6 Play Rock, Paper, and Scissors with Python(&lt;a href="https://thecleverprogrammer.com/2021/01/10/rock-paper-and-scissors-game-with-python/"&gt;https://thecleverprogrammer.com/2021/01/10/rock-paper-and-scissors-game-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;7 Dice Roll Simulator (&lt;a href="https://thecleverprogrammer.com/2021/01/10/dice-roll-simulator-with-python/"&gt;https://thecleverprogrammer.com/2021/01/10/dice-roll-simulator-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;8 QR Code Generator(&lt;a href="https://thecleverprogrammer.com/2021/01/09/qr-codes-with-python/"&gt;https://thecleverprogrammer.com/2021/01/09/qr-codes-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;9 Animal Quiz Game(&lt;a href="https://thecleverprogrammer.com/2021/01/03/create-a-quiz-game-with-python/"&gt;https://thecleverprogrammer.com/2021/01/03/create-a-quiz-game-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;10 Print Coloured Text(&lt;a href="https://thecleverprogrammer.com/2020/12/23/print-colored-text-with-python/"&gt;https://thecleverprogrammer.com/2020/12/23/print-colored-text-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;11 BMI Calculator(&lt;a href="https://thecleverprogrammer.com/2020/12/21/bmi-calculator-with-python/"&gt;https://thecleverprogrammer.com/2020/12/21/bmi-calculator-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;12 Fahrenheit to Celcius Converter(&lt;a href="https://thecleverprogrammer.com/2020/11/30/convert-fahrenheit-to-celsius-with-python/"&gt;https://thecleverprogrammer.com/2020/11/30/convert-fahrenheit-to-celsius-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;13 Taking Multiple User Inputs(&lt;a href="https://thecleverprogrammer.com/2021/01/08/multiple-inputs-with-python-using-while-loop/"&gt;https://thecleverprogrammer.com/2021/01/08/multiple-inputs-with-python-using-while-loop/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;14 Convert Roman Numbers to Decimals(&lt;a href="https://thecleverprogrammer.com/2021/01/07/convert-roman-numbers-to-decimals-with-python/"&gt;https://thecleverprogrammer.com/2021/01/07/convert-roman-numbers-to-decimals-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Advance Python Projects:&lt;/p&gt;

&lt;p&gt;15 Digital Clock GUI &lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2021/01/09/digital-clock-with-python/"&gt;https://thecleverprogrammer.com/2021/01/09/digital-clock-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;16 Get Desktop Notifications with Python(&lt;a href="https://medium.com/coders-camp/60-python-projects-with-source-code-919cd8a6e512"&gt;https://medium.com/coders-camp/60-python-projects-with-source-code-919cd8a6e512&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;17 Use Your Phone Camera for Computer Vision(&lt;a href="https://thecleverprogrammer.com/2021/01/05/use-phone-camera-with-python/"&gt;https://thecleverprogrammer.com/2021/01/05/use-phone-camera-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;18 Music Player GUI (&lt;a href="https://thecleverprogrammer.com/2020/12/27/music-player-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/12/27/music-player-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;19 Game of Life with Python(&lt;a href="https://thecleverprogrammer.com/2020/12/25/game-of-life-with-python/"&gt;https://thecleverprogrammer.com/2020/12/25/game-of-life-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;20 Extract Text from videos(&lt;a href="https://thecleverprogrammer.com/2020/12/25/extract-text-from-videos-using-python/"&gt;https://thecleverprogrammer.com/2020/12/25/extract-text-from-videos-using-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;21 Fidget Spinner Game(&lt;a href="https://thecleverprogrammer.com/2020/12/23/create-a-game-with-python/"&gt;https://thecleverprogrammer.com/2020/12/23/create-a-game-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;22 Spelling Correction with Python(&lt;a href="https://thecleverprogrammer.com/2020/12/18/spelling-correction-with-python/"&gt;https://thecleverprogrammer.com/2020/12/18/spelling-correction-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;23 Create Amazing Graphics with Python(&lt;a href="https://thecleverprogrammer.com/2020/12/10/turtle-graphics-with-python/"&gt;https://thecleverprogrammer.com/2020/12/10/turtle-graphics-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;24 Monty Hall Simulator(&lt;a href="https://thecleverprogrammer.com/2020/12/09/monty-hall-problem-with-python/"&gt;https://thecleverprogrammer.com/2020/12/09/monty-hall-problem-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;25 Video to Audio Converter(&lt;a href="https://thecleverprogrammer.com/2020/12/08/video-to-audio-converter-with-python/"&gt;https://thecleverprogrammer.com/2020/12/08/video-to-audio-converter-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;26 Tic Tac Toe GUI(&lt;a href="https://thecleverprogrammer.com/2020/12/06/tic-tac-toe-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/12/06/tic-tac-toe-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;27 Calculator GUI (&lt;a href="https://thecleverprogrammer.com/2020/12/05/calculator-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/12/05/calculator-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;28 Number Guessing Game(&lt;a href="https://thecleverprogrammer.com/2020/12/04/number-guessing-game-with-python-and-c/"&gt;https://thecleverprogrammer.com/2020/12/04/number-guessing-game-with-python-and-c/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;29 Image Converter GUI(&lt;a href="https://thecleverprogrammer.com/2020/12/02/image-converter-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/12/02/image-converter-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;30 Weight Converter GUI(&lt;a href="https://thecleverprogrammer.com/2020/11/28/weight-converter-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/11/28/weight-converter-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;31 Visualize a Chess Board with Python(&lt;a href="https://thecleverprogrammer.com/2020/11/27/chessboard-with-python/"&gt;https://thecleverprogrammer.com/2020/11/27/chessboard-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;32 Age and Gender Detection (&lt;a href="https://thecleverprogrammer.com/2020/10/29/age-and-gender-detection-with-python/"&gt;https://thecleverprogrammer.com/2020/10/29/age-and-gender-detection-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;33 Bar Code and QR Code Reader(&lt;a href="https://thecleverprogrammer.com/2020/10/23/barcode-and-qr-code-reader-with-python/"&gt;https://thecleverprogrammer.com/2020/10/23/barcode-and-qr-code-reader-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;34 Create Audiobook with Python(&lt;a href="https://thecleverprogrammer.com/2020/10/22/create-an-audiobook-with-python/"&gt;https://thecleverprogrammer.com/2020/10/22/create-an-audiobook-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;35 FaceDetection&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/10/22/create-an-audiobook-with-python/"&gt;https://thecleverprogrammer.com/2020/10/22/create-an-audiobook-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;36 Extract Text from PDF(&lt;a href="https://thecleverprogrammer.com/2020/10/06/extract-text-from-pdf-using-python/"&gt;https://thecleverprogrammer.com/2020/10/06/extract-text-from-pdf-using-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;37 Card Game using DS and Algo(&lt;a href="https://thecleverprogrammer.com/2020/10/04/card-game-with-python/"&gt;https://thecleverprogrammer.com/2020/10/04/card-game-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;38 Web Scrapper with Python&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/10/01/web-scraper-with-python/"&gt;https://thecleverprogrammer.com/2020/10/01/web-scraper-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;39 Create a Pencil Sketch using Python(&lt;a href="https://thecleverprogrammer.com/2020/09/30/pencil-sketch-with-python/"&gt;https://thecleverprogrammer.com/2020/09/30/pencil-sketch-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;40 Text Editor GUI(&lt;a href="https://thecleverprogrammer.com/2020/09/25/text-editor-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/09/25/text-editor-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;41 Instagram Filters with Python&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/09/24/instagram-filters-with-python/"&gt;https://thecleverprogrammer.com/2020/09/24/instagram-filters-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;42 Count Number of Rainy days in a year(&lt;a href="https://thecleverprogrammer.com/2020/09/18/count-rainy-days-with-python/"&gt;https://thecleverprogrammer.com/2020/09/18/count-rainy-days-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;43 Send Emails with  Python&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/09/15/send-emails-with-python/"&gt;https://thecleverprogrammer.com/2020/09/15/send-emails-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;44 Image Segmentation&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/09/01/image-segmentation-with-python/"&gt;https://thecleverprogrammer.com/2020/09/01/image-segmentation-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;45 OTP Verification GUI&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/24/otp-verification-gui-with-python/"&gt;https://thecleverprogrammer.com/2020/08/24/otp-verification-gui-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;46 Deploy a Chatbot&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/21/deploy-a-chatbot-with-python/"&gt;https://thecleverprogrammer.com/2020/08/21/deploy-a-chatbot-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;47 Create a Telegram Bot&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/18/telegram-bot-with-python/"&gt;https://thecleverprogrammer.com/2020/08/18/telegram-bot-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;48 Scraping Twitter without API&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/17/scraping-twitter-with-python/"&gt;https://thecleverprogrammer.com/2020/08/17/scraping-twitter-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;49 Text to Speech Converter&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/16/text-to-speech-with-python/"&gt;https://thecleverprogrammer.com/2020/08/16/text-to-speech-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;50 Keyword Research with Python&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/14/keyword-research-with-python/"&gt;https://thecleverprogrammer.com/2020/08/14/keyword-research-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bonus&lt;/strong&gt; &lt;br&gt;
1 .Scrape Wikipedia&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/07/30/scraping-instagram-with-python/"&gt;https://thecleverprogrammer.com/2020/07/30/scraping-instagram-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;2.Web Scraping to create a CSV&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/08/08/web-scraping-to-create-csv/"&gt;https://thecleverprogrammer.com/2020/08/08/web-scraping-to-create-csv/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;3.Scrape Instagram&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/07/30/scraping-instagram-with-python/"&gt;https://thecleverprogrammer.com/2020/07/30/scraping-instagram-with-python/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;4.Image Filtering&lt;br&gt;
(&lt;a href="https://thecleverprogrammer.com/2020/07/25/image-filtering-with-machine-learning/"&gt;https://thecleverprogrammer.com/2020/07/25/image-filtering-with-machine-learning/&lt;/a&gt;)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;3D Graphs (&lt;a href="https://thecleverprogrammer.com/2020/05/02/3d-graphs-with-matplotlib/"&gt;https://thecleverprogrammer.com/2020/05/02/3d-graphs-with-matplotlib/&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;*&lt;em&gt;Do you want to Kickstart a career in CyberSecurity and want to know how hackers hack in real life . *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Join Now&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;t.me/infosecbugbounty&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.me/joinchat/aYDOfr2Hhr4xNmRl"&gt;https://t.me/joinchat/aYDOfr2Hhr4xNmRl&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>productivity</category>
      <category>devops</category>
    </item>
    <item>
      <title>Tailwind CSS has changed the way you think about css, and you should let everyone know that!</title>
      <author>Siddharth Chaudhary</author>
      <pubDate>Sat, 10 Apr 2021 14:02:00 +0000</pubDate>
      <link>https://dev.to/sidchaudhary04/tailwind-css-has-changed-the-way-you-think-about-css-and-you-should-let-everyone-know-that-1ff4</link>
      <guid>https://dev.to/sidchaudhary04/tailwind-css-has-changed-the-way-you-think-about-css-and-you-should-let-everyone-know-that-1ff4</guid>
      <description>&lt;p&gt;Face it, Tailwind CSS has probably changed the way you think about css. &lt;/p&gt;

&lt;p&gt;So make noise about it on twitter. I WANT TAILWIND CSS TO BE TRENDING ON TWITTER AND YOU PROBABLY WANT THAT AS WELL.&lt;/p&gt;

&lt;p&gt;So tweet as follows&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MQO0Ia_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1340323301806268418/3zautVjO_normal.jpg" alt="Siddharth Chaudhary profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Siddharth Chaudhary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/sidchaudhary04"&gt;@sidchaudhary04&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/hashtag/tailwindcss"&gt;#tailwindcss&lt;/a&gt; &lt;a href="https://twitter.com/tailwindcss"&gt;@tailwindcss&lt;/a&gt; has changed the way I think about &lt;a href="https://twitter.com/hashtag/css"&gt;#css&lt;/a&gt;!
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:59 PM - 10 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1380883245550743556" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1380883245550743556" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1380883245550743556" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I guarantee this will work 😂 &lt;br&gt;
-Sid&lt;/p&gt;

</description>
      <category>discuss</category>
    </item>
    <item>
      <title>How to implement dark mode in React</title>
      <author>collegewap</author>
      <pubDate>Sat, 10 Apr 2021 13:55:58 +0000</pubDate>
      <link>https://dev.to/collegewap/how-to-implement-dark-mode-in-react-4nek</link>
      <guid>https://dev.to/collegewap/how-to-implement-dark-mode-in-react-4nek</guid>
      <description>&lt;p&gt;You might have seen in recent times that people are shifting towards dark mode, be it mobile screens,&lt;br&gt;
the browser or you favorite social media app. You might be wondering how can you implement the same in react in your website.&lt;br&gt;
In this tutorial, we will see how we can have a toggle button and change the theme of the page when the user clicks on it.&lt;br&gt;
We will also see how we can read the browser theme (dark/light) and load the page based on that theme.&lt;br&gt;
Also, we would see how the user preference can be saved so that we can retain the theme settings for future visits.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#creating-the-app"&gt;
  &lt;/a&gt;
  Creating the app
&lt;/h1&gt;

&lt;p&gt;First of all, as usual, let's create a react app using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app dark-theme
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#basic-page-setup"&gt;
  &lt;/a&gt;
  Basic page setup
&lt;/h1&gt;

&lt;p&gt;Let's set up a sample HTML page for the demonstration.&lt;br&gt;
Update the &lt;code&gt;App.js&lt;/code&gt; file with the following code.&lt;br&gt;
You could see that we have created a navbar that has a toggle button,&lt;br&gt;
which will be used to switch the theme and a heading and a couple of paragraphs of lorem ipsum text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navigation"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"logo"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Dark Mode&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"toggle_btn"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Toggle&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Rem, placeat
        adipisci aut repudiandae molestias quis possimus dignissimos tenetur
        tempore numquam, eos, sed deleniti quae voluptas asperiores harum labore
        ab deserunt? Perspiciatis, quisquam totam sapiente dolore cum, officiis
        veritatis sed ut quidem corrupti animi! Officiis animi quaerat officia
        ducimus, eveniet magnam delectus cupiditate amet vero aspernatur
        perferendis dolorem dignissimos praesentium vitae. Architecto dolorem
        eius distinctio nostrum fugit! Quas molestias, unde possimus vitae
        totam, quam eum earum est inventore harum aperiam praesentium sapiente
        repellat minima dolor corrupti eligendi, tempore reprehenderit animi
        delectus. Perferendis, et maxime reprehenderit possimus numquam
        corrupti, libero sed veniam optio vel a voluptates? Vel deserunt a animi
        saepe, dolores consequatur obcaecati ratione odio, ducimus repellendus
        aperiam error, laborum sed. Aspernatur excepturi vitae sint doloremque
        unde ipsa veniam placeat debitis? Aspernatur reprehenderit quibusdam
        pariatur fuga numquam voluptate magni praesentium optio nisi repellat
        placeat maxime at similique, provident, consequuntur, corrupti adipisci!
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quis tempora
        maiores fugiat neque doloribus illum omnis expedita aliquam voluptatum
        possimus ad mollitia laudantium, non cumque quia, illo tempore odit
        veniam! Nisi enim, eligendi error quod dicta sunt fugit non et. Repellat
        corporis officiis odio repudiandae doloremque similique quisquam dicta
        enim, porro sed assumenda architecto iste accusantium quo quod, in
        incidunt? Eaque ipsum, id commodi reprehenderit quam exercitationem ad
        iure a cum necessitatibus corporis quas, odit, deserunt atque reiciendis
        deleniti fuga et laudantium officia adipisci. Voluptates, nesciunt!
        Repellendus consequuntur voluptate vero? Officia quaerat voluptates
        dolorem provident excepturi expedita nostrum, voluptas consequatur
        architecto. Vel recusandae officia quidem impedit magni cupiditate?
        Deserunt qui velit totam dolorem delectus necessitatibus possimus
        explicabo veritatis doloremque sequi. Optio, quod quaerat fugiat
        recusandae officia earum voluptatem aliquam unde obcaecati laborum
        necessitatibus porro omnis laboriosam esse, illum numquam quibusdam
        magnam. Voluptate et nesciunt quisquam sequi perferendis minus quaerat
        temporibus!
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add some basic styling in the &lt;code&gt;index.css&lt;/code&gt; file.&lt;br&gt;
You might notice that css variables are made use of, which will come handy in the upcoming sections.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;800px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--button-text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--button-bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.toggle_btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--button-bg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--button-text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.navigation&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.logo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run the app by using &lt;code&gt;yarn start&lt;/code&gt; command and opening &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;.&lt;br&gt;
You should be able to see a similar page given below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gPcM5Hpq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck2vtffya0xwt3f5ntg3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gPcM5Hpq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck2vtffya0xwt3f5ntg3.png" alt="Basic Setup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now clicking on toggle button will not do anything. Let's make it work!&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#the-usedarkmode-hook"&gt;
  &lt;/a&gt;
  The useDarkMode Hook
&lt;/h1&gt;

&lt;p&gt;We will be writing a custom hook in order to implement the dark mode functionality.&lt;br&gt;
So let's create a folder named &lt;code&gt;hooks&lt;/code&gt; inside the &lt;code&gt;src&lt;/code&gt; directory and create a file called &lt;code&gt;useDarkMode.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Update the file with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You could see that in the above code, we are initializing a local state variable using &lt;code&gt;useState&lt;/code&gt; hook and defaulting it to false.&lt;br&gt;
This state will determine if dark mode is enabled or not. Also, we are making use of &lt;code&gt;useEffect&lt;/code&gt; hook,&lt;br&gt;
where we are checking if the &lt;code&gt;isDark&lt;/code&gt; state is set true or false and adding/removing the class named &lt;code&gt;dark&lt;/code&gt; from the body of the document.&lt;br&gt;
You could also see that we have added &lt;code&gt;isDark&lt;/code&gt; as a dependency to the &lt;code&gt;useEffect&lt;/code&gt; hook,&lt;br&gt;
such that the effect runs only when the value of the &lt;code&gt;isDark&lt;/code&gt; state changes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#making-use-of-the-usedarkmode-hook"&gt;
  &lt;/a&gt;
  Making use of the useDarkMode hook
&lt;/h2&gt;

&lt;p&gt;Now let's make use of the hook we have created, in the &lt;code&gt;App.js&lt;/code&gt; and binding it with the button click:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useDarkMode&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./hooks/useDarkMode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDarkMode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setDarkMode&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDarkMode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navigation"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"logo"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Dark Mode&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"toggle_btn"&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setDarkMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isDarkMode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          Toggle
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      ...
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code you will see that each time the user clicks on the toggle button,&lt;br&gt;
we are calling &lt;code&gt;setDarkMode&lt;/code&gt; with a negated value of &lt;code&gt;isDarkMode&lt;/code&gt;, so that it will be set to &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; in successive clicks.&lt;/p&gt;

&lt;p&gt;Now, if you try to click on the toggle button, you may not see any changes happening.&lt;br&gt;
But, if you inspect the document and see, you will see the class &lt;code&gt;dark&lt;/code&gt; being added and removed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nIg8Y8N2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mq79ylngue6e4apt103r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nIg8Y8N2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mq79ylngue6e4apt103r.png" alt="Dark class added to body"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#adding-styles-to-dark-mode"&gt;
  &lt;/a&gt;
  Adding styles to dark mode
&lt;/h1&gt;

&lt;p&gt;Now that we have added &lt;code&gt;dark&lt;/code&gt; class to the body, we can use the css to change the background and font colors to establish the dark mode.&lt;br&gt;
Add the following rules to &lt;code&gt;index.css&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="nc"&gt;.dark&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--button-text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--button-bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above styles, we are setting the background color to black and text color to white whenever &lt;code&gt;body&lt;/code&gt; has the class &lt;code&gt;dark&lt;/code&gt;.&lt;br&gt;
Also, you will see that we are making use of css variables to control the styles of the button.&lt;/p&gt;

&lt;p&gt;If you click on the toggle button now, you should be able to see the theme getting toggled:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vt8rmFpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sxogqogidax7664mrkk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vt8rmFpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sxogqogidax7664mrkk.gif" alt="Animation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#storing-user-preference-in-local-storage"&gt;
  &lt;/a&gt;
  Storing user preference in Local Storage
&lt;/h1&gt;

&lt;p&gt;As a user, you might want your choice of theme to be remembered and retained in that mode whenever you revisit the page in the future.&lt;br&gt;
Currently, if you set to dark mode and reload the page, the page will load in light mode.&lt;br&gt;
To preserve the mode, we will store the user preference in Local Storage.&lt;/p&gt;

&lt;p&gt;Update &lt;code&gt;useDarkMode.js&lt;/code&gt; with the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;isDarkMode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Get from local storage by key&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="c1"&gt;// JSON.parse converts from Sting to Boolean&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// If error return false, i.e, light mode&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error in setting preference&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you see in the above code, we are using a callback for initializing the &lt;code&gt;isDark&lt;/code&gt; state and in the callback, we are accessing the local storage to fetch the preference of the user. When the user toggles the state, we save the preference to the local storage in the &lt;code&gt;useEffect&lt;/code&gt; callback.&lt;/p&gt;

&lt;p&gt;If you set the preference to dark mode and reload the page, you would see that the page loads in dark mode.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reading-browser-themesettings"&gt;
  &lt;/a&gt;
  Reading browser theme/settings
&lt;/h1&gt;

&lt;p&gt;Most of the modern browsers support media query called &lt;a href="https://caniuse.com/#search=prefers-color-scheme"&gt;prefers-color-scheme&lt;/a&gt;,&lt;br&gt;
using which we can determine if the user prefers dark mode or light mode.&lt;br&gt;
We can make use of the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia"&gt;Window.matchMedia()&lt;/a&gt;&lt;br&gt;
method to query the value of &lt;code&gt;prefers-color-scheme&lt;/code&gt;, as highlighted in the code below.&lt;br&gt;
Also, note that we have introduced a new variable &lt;code&gt;darkModeEnabled&lt;/code&gt;, which now stores the preference value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;isDarkMode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Get from local storage by key&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="c1"&gt;// JSON.parse converts from Sting to Boolean&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// If error return false, i.e, light mode&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="c1"&gt;// Check if user has any preference in the local storage.&lt;/span&gt;
  &lt;span class="c1"&gt;// If not then load the system preference&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;darkModeEnabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;isDark&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;isDark&lt;/span&gt;
      &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matchMedia&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;(prefers-color-scheme: dark)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;darkModeEnabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;darkModeEnabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error in setting preference&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;darkModeEnabled&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;darkModeEnabled&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if your system set into dark mode, then by default the page will open in dark mode.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#displaying-different-icons-for-each-mode"&gt;
  &lt;/a&gt;
  Displaying different Icons for each mode
&lt;/h1&gt;

&lt;p&gt;Now let's show a separate icon for both dark and light mode.&lt;br&gt;
We will make use of &lt;a href="https://react-icons.github.io/react-icons/"&gt;react-icons&lt;/a&gt; for this purpose.&lt;/p&gt;

&lt;p&gt;Install react-icons using the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add react-icons
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the installation completes, make use of the &lt;code&gt;BsSun&lt;/code&gt; and &lt;code&gt;BsMoon&lt;/code&gt; icons to represent the light and dark mode respectively:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useDarkMode&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./hooks/useDarkMode&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BsMoon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;BsSun&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-icons/bs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDarkMode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setDarkMode&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDarkMode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navigation"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"logo"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Dark Mode&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"toggle_btn"&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setDarkMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isDarkMode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isDarkMode&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BsSun&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#ff0"&lt;/span&gt; &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"24"&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Switch to light mode"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BsMoon&lt;/span&gt; &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"24"&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Switch to dark mode"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      ...
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, update the CSS file to remove the border from the button&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="nc"&gt;.toggle_btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--button-bg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--button-text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now load the page and you should be able to see the icons added!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M9Inj8QD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cz4n4tzdhv8xfnvgyjhj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M9Inj8QD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cz4n4tzdhv8xfnvgyjhj.gif" alt="Dark Mode with Icon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#source-code-and-demo"&gt;
  &lt;/a&gt;
  Source code and Demo
&lt;/h1&gt;

&lt;p&gt;You can view the complete &lt;a href="https://github.com/collegewap/react-dark-mode"&gt;source code here&lt;/a&gt; and a &lt;a href="https://react-dark-mode-mu.vercel.app/"&gt;demo here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>localstorage</category>
    </item>
    <item>
      <title>Tutorial Vue Router Indonesia</title>
      <author>Dimas Andhika</author>
      <pubDate>Sat, 10 Apr 2021 13:54:07 +0000</pubDate>
      <link>https://dev.to/dimasngoding/tutorial-vue-router-indonesia-3j64</link>
      <guid>https://dev.to/dimasngoding/tutorial-vue-router-indonesia-3j64</guid>
      <description>&lt;h2&gt;
  &lt;a href="#perkenalan"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Perkenalan&lt;/strong&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Vue sangat berguna untuk membuat Aplikasi Satu Halaman, halaman webnya juga sangat interaktif yang memungkinkan kita untuk tidak me-refresh halaman ketika kita mengubah dari halaman satu ke halaman yang lain.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Jika website kamu memiliki banyak halaman dan kamu menggunakan Vue&lt;/strong&gt;, itulah mengapa kamu membutuhkan Vue Router. &lt;strong&gt;Note: Pastikan kalian paham tentang Vue dan Javascript dasar&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#basic-dari-vue-router"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Basic Dari Vue Router&lt;/strong&gt;
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#mempersiapkan-vue-router-dari-awal"&gt;
  &lt;/a&gt;
  🚀 Mempersiapkan Vue Router dari awal
&lt;/h4&gt;

&lt;p&gt;1.Pertama Kita Install Vue Router di Command Line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i vue-router@next
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.Konfigurasi pada Direktori &lt;strong&gt;&lt;em&gt;/src/router/index.js&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createWebHistory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createRouter&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue-router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Import Component2 Kalian&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@/views/Home.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@/views/About.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; 
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Home&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/about&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;About&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;About&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createRouter&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;history&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;createWebHistory&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="nx"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Di direktori &lt;strong&gt;&lt;em&gt;/src/router/index.js&lt;/em&gt;&lt;/strong&gt; kita membuat routes di dalam sebuah array yang akan mengspesifikasikan beberapa hal:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Path - URL / Tempat dimana component akan di load&lt;/li&gt;
&lt;li&gt;Component - Komponen yang akan diload saat path dipanggil&lt;/li&gt;
&lt;li&gt;Name - (Opsional)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Dibawah array routes &lt;strong&gt;terdapat &lt;code&gt;createRouter&lt;/code&gt; yang pastinya diperlukan untuk membuat router itu sendiri&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;



&lt;blockquote&gt;
&lt;p&gt;Dan juga terdapat &lt;strong&gt;&lt;code&gt;createWebHistory&lt;/code&gt; yang digunakan untuk beralih dari mode hash ke mode history di dalam browser, menggunakan API history HTML5, Ini yang akan membuat history pada browser kita setiap kita meload router&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;3.Konfigurasi pada direktori &lt;strong&gt;&lt;em&gt;/src/main.js&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Pada direktori &lt;strong&gt;&lt;em&gt;/src/main.js&lt;/em&gt;&lt;/strong&gt; kita juga perlu menambahkan sesuatu&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./router&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;---&lt;/span&gt;

&lt;span class="nx"&gt;createApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;---&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ya, tentunya kita perlu mengimpornya ke file utama kita&lt;/p&gt;



&lt;h4&gt;
  &lt;a href="#menggunakan-router"&gt;
  &lt;/a&gt;
  🚀 Menggunakan Router
&lt;/h4&gt;

&lt;p&gt;Ada 2 component yang diberikan oleh Vue Router yaitu &lt;code&gt;&amp;lt;router-view /&amp;gt;&lt;/code&gt; dan &lt;code&gt;&amp;lt;router-link to="/" /&amp;gt;&lt;/code&gt;. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;router-view /&amp;gt;&lt;/code&gt; digunakan untuk membungkus component2 yang akan dirender , dan &lt;code&gt;&amp;lt;router-link to="/" /&amp;gt;&lt;/code&gt; ini mirip seperti tag anchor pada html, pada tag anchor biasanya kita menggunakan href tetapi pada router link kita menggunakan 'to'&lt;/p&gt;
&lt;/blockquote&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Biasanya &lt;code&gt;&amp;lt;router-view /&amp;gt;&lt;/code&gt; dideklarasikan di file App.vue karena file tersebut adalah halaman utama yang isinya akan kita ubah2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Contoh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// (/src/App.vue)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/about"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;About&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// (Home.vue)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Home&lt;/span&gt; &lt;span class="nc"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// (About.vue)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;About&lt;/span&gt; &lt;span class="nc"&gt;Page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🚀 Selesai.. ya mungkin seperti itu konsep dasar vue router, mohon maaf bila bahasa yang digunakan membingungkan&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What is Linux?</title>
      <author>Suchitra</author>
      <pubDate>Sat, 10 Apr 2021 13:46:49 +0000</pubDate>
      <link>https://dev.to/suchitr36309633/what-is-linux-3jnc</link>
      <guid>https://dev.to/suchitr36309633/what-is-linux-3jnc</guid>
      <description>&lt;p&gt;Before starting the topic of Linux I want to ask you something like...&lt;br&gt;
&lt;strong&gt;What you people think about Linux is it an operating System??&lt;br&gt;
If your answer is Yes!&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t6r5c3ZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdk31288brluia7nrv1g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t6r5c3ZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdk31288brluia7nrv1g.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then probably you are wrong❌&lt;br&gt;
So let us discuss ...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nh-KXz_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3azdx6ni5z9fqxruq0d9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nh-KXz_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3azdx6ni5z9fqxruq0d9.jpg" alt="what-is-Linux"&gt;&lt;/a&gt;&lt;br&gt;
Linux is not an operating system, it basically a &lt;strong&gt;kernel&lt;/strong&gt;.&lt;br&gt;
A kernel means it is a core component of the operating system which directly interacts with the hardware and communicates with the hardware and users. A kernel is a very crucial thing in any operating system.&lt;br&gt;
So, whatever operating system uses Linux kernel those operating system is known as Linux based operating system like Debian, Ubuntu, Linux mint, etc. These are some Linux-based operating systems that are very popular nowadays. These variations of Linux-based os are also known as Linux distributions or distros.👇&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--exFJr5jP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7g03xe4hlnfh7i8vfoom.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--exFJr5jP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7g03xe4hlnfh7i8vfoom.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-lets-know-about-its-history-"&gt;
  &lt;/a&gt;
  So, let's know about its History :
&lt;/h2&gt;

&lt;p&gt;Linux began in 1991 by &lt;strong&gt;Linus Torvald&lt;/strong&gt; who was a university student by his personal interest he created Linux as his final year project and after that, in 1992 he released Linux as an open-source operating system kernel.&lt;br&gt;
Here Open source means it is open for everyone, anyone can see the code, use the code, and if wanted to change or contribute also can contribute to the code and here all are free you don't need to pay for it because it is free for everyone unlike other operating systems Windows and macOS!&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hu2igtQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wa1lybg3yebvxw29i2h6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hu2igtQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wa1lybg3yebvxw29i2h6.png" alt="image"&gt;&lt;/a&gt;&lt;em&gt;Linus Torvald&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#history-of-linux-brand-character"&gt;
  &lt;/a&gt;
  History of Linux brand Character
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MFx-txes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1ocobr68el55bvsa6cc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MFx-txes--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1ocobr68el55bvsa6cc.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;This image is an inspiration of Linux brand character, also it is a favorite image of Linus Torvalds&lt;/em&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The concept of the Linux brand character being a penguin came from Linus Torvalds, the creator of Linux. Tux was created by Larry Ewing in 1996 after an initial suggestion made by Alan Cox[2] and further refined by Linus Torvalds on the Linux kernel mailing list.[3] Torvalds took his inspiration from an image he found on an FTP site,[4] showing a penguin figurine depicted in a similar style to the Creature Comforts characters created by Nick Park. The first person to call the penguin "Tux" was James Hughes, who said that it stood for "(T)orvalds (U)ni(X)".&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For more you can follow &lt;a href="https://en.wikipedia.org/wiki/Tux_(mascot)#:~:text=Tux%20is%20a%20penguin%20character,depict%20Tux%20in%20various%20styles"&gt;this&lt;/a&gt;. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#as-we-got-some-idea-about-what-is-linux-so-now-we-should-move-into-some-basic-features-of-linux-"&gt;
  &lt;/a&gt;
  As we got some idea about what is Linux so now we should move into some basic features of Linux :
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;It is an open-source&lt;/li&gt;
&lt;li&gt;Less vulnerable &lt;/li&gt;
&lt;li&gt;Stable&lt;/li&gt;
&lt;li&gt;More compatible with any type of hardware&lt;/li&gt;
&lt;li&gt;Multitasking&lt;/li&gt;
&lt;li&gt;Multiprogramming&lt;/li&gt;
&lt;li&gt;Secure&lt;/li&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now you are wondered that it has many features &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ESKwhm0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxadgyz02gh06hk9lqyr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ESKwhm0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxadgyz02gh06hk9lqyr.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;but still many people stick with Windows or macOS Why?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xjw0wGu2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97qtt1ybfwmp0r221xf2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xjw0wGu2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97qtt1ybfwmp0r221xf2.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Linux is free, Open source, and many more but still we pay lots of money to buy other operating systems such as Windows or macOS.&lt;br&gt;
It's just because of the complexity of the interface which used in Linux based operating system which is CLI(Command Line Interface). Whereas Windows and macOS use GUI interface( Graphical User Interface). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gui-vs-cli"&gt;
  &lt;/a&gt;
  GUI Vs CLI
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dG3zSbxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l5h0s15pk3i46bgom38o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dG3zSbxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l5h0s15pk3i46bgom38o.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
GUI is easy to use as compared to CLI, common users can use GUI but it's quite difficult to use CLI for them(because of commands). To use CLI we should know some commands programming language as well.&lt;br&gt;
So, the disadvantage of a Linux-like operating system is that you have to learn programs as well as commands so that you can use it. But if you are a programmer you good to go... It's really awesome!! 👩‍💻&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---qIQVmTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kcn2g5jz6r5k63m59ri.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---qIQVmTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kcn2g5jz6r5k63m59ri.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.kernel.org/doc/html/latest/"&gt;Curious to know more&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-its-time-to-know-about-linux-architecture"&gt;
  &lt;/a&gt;
  Now its time to know about Linux Architecture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tZphlDfC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzh1rm2hubg5czncjb31.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tZphlDfC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzh1rm2hubg5czncjb31.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 Here, by referring to the above picture you can see that it depicts how the internal structure of the operating system looks, in this system architecture Linux kernel is used that's why it is written &lt;em&gt;Linux System Architecture&lt;/em&gt;!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-discuss-one-by-one"&gt;
  &lt;/a&gt;
  Let's discuss one by one
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Hardware&lt;/em&gt;:
It consists of all physical devices attached to your system like hard disk, pen drive, motherboard, RAM, etc.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Kernel&lt;/em&gt;:
As I already discussed Kernal is a core component that is used for communication with hardware directly.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Shell&lt;/em&gt;:
Shell is the interface that takes input from Users and sends instructions to the Kernel, Also takes the output from Kernel and sends the result back to the output shell.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Application&lt;/em&gt;:
These are the utility programs that run on Shell. This can be any application like Your web browser, media player, text editor, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Suppose, the user request for play music from the system then, the request 1st go to the shell here shell take user's input as instructions and send that instruction to the kernel and here the main task is performed by the kernel which directly tells the hardware what to do??&lt;br&gt;
This means the kernel tells the speaker to get turns on or start functioning the hardware part.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-linux-is-used"&gt;
  &lt;/a&gt;
  Where Linux is used??
&lt;/h2&gt;

&lt;p&gt;Almost Everywhere&lt;br&gt;
👼🕵️‍♂️👩‍🏫👨‍💻&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aerospace-and-defense"&gt;
  &lt;/a&gt;
  Aerospace and defense
&lt;/h3&gt;

&lt;p&gt;NASA runs on Linux, The International Space Station switched from&lt;br&gt;
Windows to Linux a few years ago due to the operating.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#systems%C2%A0reliability"&gt;
  &lt;/a&gt;
  System's reliability
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#scientific-instrumentation"&gt;
  &lt;/a&gt;
  Scientific instrumentation;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#printing-and-imaging"&gt;
  &lt;/a&gt;
  Printing and imaging
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#storage-aws-cloud-azure-etc"&gt;
  &lt;/a&gt;
  Storage (AWS cloud, Azure, etc)
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#home-entertainment-and-multimedia-eg-settop-boxes-dvrs-and-hddtv"&gt;
  &lt;/a&gt;
  Home Entertainment and multimedia (e.g., set-top boxes, DVRs, and HD/DTV)
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#the-emerging-internet-of-things"&gt;
  &lt;/a&gt;
  The emerging Internet of Things
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#telecoms-and-networking-equipment"&gt;
  &lt;/a&gt;
  Telecoms and networking equipment
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#network-security"&gt;
  &lt;/a&gt;
  Network security
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#ehealth-and-medical-equipment"&gt;
  &lt;/a&gt;
  EHealth and medical equipment
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#even-our-smartphones-and-smartwatches-run-on-linux"&gt;
  &lt;/a&gt;
  Even our smartphones and smartwatches run on Linux🙌
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#gaming-run-on-linux"&gt;
  &lt;/a&gt;
  Gaming run on Linux
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mp9WZyv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0ptt3ygjla3rplxc81y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mp9WZyv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0ptt3ygjla3rplxc81y.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
If you are a gamer, then you might be using SteamOS, which is a Linux-based operating system. Also, if you use any of Google’s myriad of services, then you are running on Linux.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading, hope you found it useful and also one request from my side if you have any query, suggestions or anything else you want to tell please comment it here!!&lt;/em&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#i-will-be-waiting-for-your-response%E2%9D%A4"&gt;
  &lt;/a&gt;
  I will be waiting for your response❤
&lt;/h5&gt;

</description>
      <category>linux</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
