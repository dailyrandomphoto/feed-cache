<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Performance Testing in Kubernetes using Kangal</title>
      <author>NaveenKumar Namachivayam ⚡</author>
      <pubDate>Thu, 22 Apr 2021 15:00:54 +0000</pubDate>
      <link>https://dev.to/qainsights/performance-testing-in-kubernetes-using-kangal-3kn7</link>
      <guid>https://dev.to/qainsights/performance-testing-in-kubernetes-using-kangal-3kn7</guid>
      <description>&lt;p&gt;From past ten days, I have spent my time on the latest open source solution to run performance tests on Kubernetes cluster using Kangal. In this blog post, we are going to deep-dive into how you can spin up Kubernetes cluster and run Locusts and JMeter tests using Kangal. Let us get started.&lt;/p&gt;

&lt;h2&gt;What is Kangal?&lt;/h2&gt;

&lt;p&gt;The full form of Kangal is &lt;strong&gt;&lt;span&gt;K&lt;/span&gt;&lt;/strong&gt;ubernetes &lt;strong&gt;&lt;span&gt;an&lt;/span&gt;&lt;/strong&gt;d &lt;strong&gt;&lt;span&gt;G&lt;/span&gt;&lt;/strong&gt;o &lt;strong&gt;&lt;span&gt;A&lt;/span&gt;&lt;/strong&gt;utomatic &lt;strong&gt;&lt;span&gt;L&lt;/span&gt;&lt;/strong&gt;oader. But the actual meaning of &lt;a href="https://en.wikipedia.org/wiki/Kangal_Shepherd_Dog" rel="noreferrer noopener"&gt;Kangal is a breed of Shepherd dog&lt;/a&gt;. In Tamil language, Kangal means eyes.&lt;/p&gt;

&lt;p&gt;Kangal is an open source project from Hello Fresh to run performance tests on Kubernetes cluster using multiple load generators. &lt;/p&gt;

&lt;p&gt;It supports Apache JMeter and Locust at this time of writing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/hellofresh/kangal" rel="noreferrer noopener"&gt;Kangal GitHub Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- /wp:button --&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/QAInsights/Kangal-Demo" rel="noreferrer noopener"&gt;Kangal Demo GitHub Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- /wp:button --&amp;gt;&lt;/p&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;It is time to get our hands dirty. We need the following as prerequisites before you begin spinning up the pods.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;JMeter test plan or Locust Script and its dependencies&lt;/li&gt;
&lt;li&gt;Kubernetes cluster&lt;/li&gt;
&lt;li&gt;Helm installation&lt;/li&gt;
&lt;li&gt;S3 bucket to store the result (optional)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Kangal Setup&lt;/h2&gt;

&lt;p&gt;First, let us add the repository to Helm using the below command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;helm repo add kangal https://hellofresh.github.io/kangal&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will add the repo to your Helm. Next, we are going to install Kangal using the below command. Below command configures multiple environment variables such as S3 bucket, S3 URL, AWS Secrets and Kangal Proxy.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;helm install \
  --set environment=dev \
  --set secrets.AWS_ACCESS_KEY_ID="XXXXXXXXXXXXXXXXXX" \
  --set secrets.AWS_SECRET_ACCESS_KEY="XXXXXXXXXXXXXXXX" \
  --set controller.env.KANGAL_PROXY_URL="http://kangal-proxy-k8s.default.svc.cluster.local" \
  --set configMap.AWS_BUCKET_NAME="kangal-report" \
  --set configMap.AWS_ENDPOINT_URL="s3.us-east-2.amazonaws.com" \
  --set configMap.AWS_DEFAULT_REGION="us-east-2" \
  kangal kangal/kangal&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will have to replace the masked values with your secrets and hit enter. This will install relevant Kubernetes resources and below will be the output.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NAME: kangal
LAST DEPLOYED: Wed Apr 21 22:22:17 2021
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To view the helm releases, send &lt;code&gt;helm list&lt;/code&gt; command which will list the releases.&lt;/p&gt;

&lt;p&gt;To check the Kangal pods, issue the below command which will list the resources from the default namespace.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl get po&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/04/image.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---KINFqhW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/04/image-1024x205.png" alt="Performance Testing in Kubernetes using Kangal - Get Pods"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To view the service list, issue &lt;code&gt;kubectl get svc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/04/image-1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Ksk02FW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/04/image-1-1024x174.png" alt="Get Service"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kangal uses Custom Resources which extends the Kubernetes API. To view the custom resource  definitions, issue &lt;code&gt;kubectl get crd&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/04/image-2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3s0Eiqx9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/04/image-2.png" alt="Get CRD"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before starting the load test, you have to make sure that the ingress controller are working fine.&lt;/p&gt;

&lt;p&gt;In my case, I do not have proper Ingress Controller set up. I am going to port forward the deployment using the below command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl port-forward deployment/kangal-proxy 8081:8080&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we are good to start our first load test in Kangal.&lt;/p&gt;

&lt;h2&gt;Locust Load Test&lt;/h2&gt;

&lt;p&gt;Open a new terminal session and issue the curl command to make sure the localhost is working fine.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl localhost:8081&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;a href="https://kangal-openapi-ui.local"&amp;gt;Found&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can use the below Locust file for your testing purpose. Save below Python code as &lt;code&gt;hello.py&lt;/code&gt; in the current directory. Replace https://example.com with your application under test URL.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import glob
import os
import requests
import tarfile
from locust import HttpUser, task, between
from locust import events
from locust.runners import MasterRunner


class QuickstartUser(HttpUser):
    wait_time = between(1, 2.5)
    host = "https://example.com"

    @task
    def hello_world(self):
        self.client.get("/")

    @events.quitting.add_listener
    def hook_quit(environment):
        presigned_url = os.environ.get('REPORT_PRESIGNED_URL')
        if None == presigned_url:
            return
        if False == isinstance(environment.runner, MasterRunner):
            return
        report = '/home/locust/report.tar.gz'
        tar = tarfile.open(report, 'w:gz')

        for item in glob.glob('/tmp/*.csv'):
            print('Adding %s...' % item)
            tar.add(item, arcname=os.path.basename(item))
        tar.close()
        request_headers = {'content-type': 'application/gzip'}
        r = requests.put(presigned_url, data=open(report, 'rb'), headers=request_headers)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To begin the load test, we have to send the below POST request to the Kangal Proxy. Below test spins up two pods for Locust (one for master and one for worker) and run the test for 1 minute hitting example.com. After the test is done, results will be stored in S3.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -X POST http://localhost:8081/load-test \
  -H 'Content-Type: multipart/form-data' \
  -F distributedPods=1 \
  -F testFile=@hello.py \
  -F type=Locust \
  -F duration=1m \
  -F targetURL=http://example.com&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output of the above command will provide the unique load test name. This test name is &lt;code&gt;loadtest-guiding-mouse&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    "type": "Locust",
    "distributedPods": 1,
    "loadtestName": "loadtest-guiding-mouse",
    "phase": "creating",
    "tags": {},
    "hasEnvVars": false,
    "hasTestData": false
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To monitor the status, you can issue the below command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl localhost:8081/load-test/loadtest-guiding-mouse/logs&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For every test, Kangal creates a namespace. To view all the namespaces, issue the below command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl get namespaces&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/04/image-3.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ErGgyoQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/04/image-3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To change the context in Kubernetes, you can use the below command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl config set-context --current --namespace=loadtest-guiding-mouse&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then issue &lt;code&gt;kubectl get po&lt;/code&gt; to view the Locust pods. As you see, there are two pods, one is for master and another one is worker.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/04/image-5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--96zXUfzU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/04/image-5.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can view the logs of these pods by issuing the pod name.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl logs loadtest-guiding-mouse-master-v47gs&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;kubectl logs loadtest-guiding-mouse-worker-qkgs7&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;S3 Locust Report&lt;/h2&gt;

&lt;p&gt;If the S3 properly configured, all the reports will be stored in the S3 bucket. Below is the screenshot from my S3 bucket.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/04/image-7.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v1llQITX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/04/image-7-1024x326.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below is the output stored in S3.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/04/image-8.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0bDVTj-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/04/image-8.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;JMeter Test&lt;/h2&gt;

&lt;p&gt;To run JMeter test, you can issue the below command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -X POST http://localhost:8081/load-test \
  -F "distributedPods=1" \
  -F "testFile=@T00_Example.jmx" \
  -F "type=JMeter"&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;HTML report will be stored in S3.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/04/image-9.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v0tavc_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/04/image-9.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To view all the tests, you can issue the below command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl localhost:8081/load-test&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;{
  "limit": 50,
  "continue": "",
  "remain": null,
  "items": [
    {
      "type": "JMeter",
      "distributedPods": 1,
      "loadtestName": "loadtest-foppish-albatross",
      "phase": "finished",
      "tags": {},
      "hasEnvVars": false,
      "hasTestData": false
    },
    {
      "type": "Locust",
      "distributedPods": 1,
      "loadtestName": "loadtest-guiding-mouse",
      "phase": "finished",
      "tags": {},
      "hasEnvVars": false,
      "hasTestData": false
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Housekeeping&lt;/h2&gt;

&lt;p&gt;After the test is done, you can delete the namespaces by issuing &lt;code&gt;kubectl delete ns &amp;lt;namespace_name&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To delete Kangal, you can issue the below command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;helm delete kangal&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;kubectl delete crd loadtests.kangal.hellofresh.com&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Important Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;For the detailed configuration, please check this &lt;a href="https://github.com/hellofresh/kangal/tree/master/charts/kangal" rel="noreferrer noopener"&gt;page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://artifacthub.io/packages/helm/kangal/kangal" rel="noreferrer noopener"&gt;Artifact Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hellofresh/kangal/blob/master/docs/README.md" rel="noreferrer noopener"&gt;Kangal Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="h-kangal-features"&gt;Kangal Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Supports two major open source load testing tools (JMeter and Locust)&lt;/li&gt;
&lt;li&gt;Supports distributed load testing by default&lt;/li&gt;
&lt;li&gt;Persistent storage using AWS S3&lt;/li&gt;
&lt;li&gt;Grafana integration for live monitoring&lt;/li&gt;
&lt;li&gt;Easy housekeeping&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Kangal Architecture&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hQpPL1Ca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/hellofresh/kangal/blob/master/diagram.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hQpPL1Ca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/hellofresh/kangal/blob/master/diagram.png%3Fraw%3Dtrue" alt="Kangal Architecture"&gt;&lt;/a&gt;Kangal Architecture&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;If you are looking to run your load tests in Kubernetes Cluster, here is the free and reliable infrastructure setup. All you need is to know about Kubernetes and Helm to steer this. I have tested this from past 10 days and raised an issue which got fixed immediately. Thanks to &lt;a href="https://github.com/diegomarangoni"&gt;Diego Marangoni&lt;/a&gt;. Go for it. If you face any issues, please let me know.&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>performance</category>
      <category>testing</category>
      <category>webperf</category>
    </item>
    <item>
      <title>Upload files in your web app to an AWS S3 bucket</title>
      <author>Leonidas</author>
      <pubDate>Thu, 22 Apr 2021 14:54:09 +0000</pubDate>
      <link>https://dev.to/fastmodularproject/upload-files-to-amazon-s3-bucket-nf</link>
      <guid>https://dev.to/fastmodularproject/upload-files-to-amazon-s3-bucket-nf</guid>
      <description>&lt;p&gt;Hi Sparta!&lt;/p&gt;

&lt;p&gt;In this article I will share with you a file storage module that can help you store your user's files (profil's pictures, PDF documents...) in your app with a scalable architecture. &lt;/p&gt;

&lt;p&gt;We could have stored all those data to a custom server, but AWS S3 buckets are giving us the scalability and I'll show you here how to use them.&lt;/p&gt;

&lt;p&gt;On my side, I used this module on top of the React/Node/MySQL starter. This starter has already been presented to you in &lt;a href="https://dev.to/fastmodularproject/web-starter-react-nestjs-mysql-3o9i"&gt;this article&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-does-it-bring"&gt;
  &lt;/a&gt;
  What does it bring?
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Open source code&lt;/li&gt;
&lt;li&gt;Documentation and "Quick Start"&lt;/li&gt;
&lt;li&gt;Complete integration of the process in your React / NestJS (it can be easily adapted to a node backend)&lt;/li&gt;
&lt;li&gt;AWS S3 configurations&lt;/li&gt;
&lt;li&gt;5 hours of work saved :D&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h1&gt;

&lt;p&gt;By getting the web starter I was mentioning above, you'll be able to plug this file upload module directly on top of it and have a functional project with an authentication and a file storage in less than 20 minutes.&lt;/p&gt;

&lt;p&gt;Note that using the starter is not mandatory, you can also use the module as standalone. The integration won't be as easy as with the starter, but it should still be simple to integrate it in your already created project :)&lt;/p&gt;

&lt;p&gt;The starter is available &lt;a href="https://fast-modular-project.com/starters/starter-reacjs-nestjs-mysql"&gt;here&lt;/a&gt;.&lt;br&gt;
The module is available &lt;a href="https://fast-modular-project.com/modules/upload-to-S3-bucket"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-does-it-work"&gt;
  &lt;/a&gt;
  How does it work?
&lt;/h1&gt;

&lt;p&gt;The S3 buckets is a public cloud storage resource available in Amazon Web Services' (AWS). You can manually upload files into the bucket and you can, of course, do it programmatically. Here is the high picture workflow of the process:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Frontend asks the backend for an URL where it can saves a given file.&lt;/li&gt;
&lt;li&gt;Backend ask with it's credentials AWS to get signed URL that can be used to upload a file, and returns its to the frontend.&lt;/li&gt;
&lt;li&gt;Frontend uses the URL to save the file to the bucket.&lt;/li&gt;
&lt;li&gt;(optional) Your frontend can ask your backend to save in database the URL where your image/file has been uploaded in order to display it in your app :) &lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#setup-the-file-storage-process"&gt;
  &lt;/a&gt;
  Setup the file storage process
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Create your S3 bucket &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Get your credentials. Go to &lt;code&gt;IAM console&lt;/code&gt;, from the navigation menu click on &lt;code&gt;Users&lt;/code&gt;, select your user or create a new user, create an access key, get the &lt;code&gt;Key ID&lt;/code&gt; and the &lt;code&gt;Key secret&lt;/code&gt; and keep them in save place, we'll see them soon ;)&lt;/li&gt;
&lt;li&gt;Grant the permissions for your users to modify your bucket (grant right &lt;code&gt;AmazonS3FullAccess&lt;/code&gt;). &lt;code&gt;IAM&lt;/code&gt; &amp;gt; &lt;code&gt;Create autorisation&lt;/code&gt; &amp;gt; &lt;code&gt;S3&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Add the CORS policy in &lt;code&gt;S3&lt;/code&gt; &amp;gt; &lt;code&gt;autorisations&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[
    {
        "AllowedHeaders": [
            "*"
        ],
        "AllowedMethods": [
            "PUT"
        ],
        "AllowedOrigins": [
            "*"
        ],
        "ExposeHeaders": [],
        "MaxAgeSeconds": 3000
    }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Authorize public access to your S3 bucket&lt;/li&gt;
&lt;li&gt;Add your environment variables in the backend using the credentials your get during the second step:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;s3: {
        url: "https://[bucket].s3.eu-west-3.amazonaws.com/userUploads",
        bucket: "[bucket]",
        region: "[region]",
        host: "s3.eu-west-3.amazonaws.com",
        accessKeyId: "XXXXXXXXXXXXXXXXXX",
        secretAccessKey: "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Your backend can now ask AWS for a signed URL (and give it back to the frontend):
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install aws-sdk@2.799.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    async getS3Url(fileExtension: string): Promise&amp;lt;string&amp;gt; {
        let signedUrl = await this.s3.getSignedUrlPromise('putObject', {
            Bucket: this.configService.environment.s3.bucket,
            Key: `pictures/${uuid.v4()}.${fileExtension}`,
            ContentType: 'application/octet-stream',
            ACL: 'public-read',
            Expires: 604800
        });
        return signedUrl;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Finally, the frontend can use the signedUrl to store a file:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    ...

    const headersContent = {
        "Content-Type": file.type,
        Accept: "application/json"
    };
    const headers = new Headers(headersContent);
    const response = await fetch(
        new Request(signedUrl, {
            method: "PUT",
            body: file,
            headers
        })
    );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The entire tutorial and a step by step integration on the starter with an example screen is available &lt;a href="https://fast-modular-project.com/modules/upload-to-S3-bucket"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope this module will help you saving your some time while trying save user's files in your project.&lt;br&gt;
If you have any question, I'll be present as usual in the comment section !&lt;/p&gt;

&lt;p&gt;Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The platform sharing the starter and it's modules : &lt;a href="https://fast-modular-project.com"&gt;Fast Modular Project&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Module "File uploads to AWS S3" repository &lt;a href="https://fast-modular-project.com/modules/upload-to-S3-bucket"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>aws</category>
      <category>node</category>
    </item>
    <item>
      <title>What are different ways to implement a priority queue in Python?</title>
      <author>Kalyani Kamakolanu</author>
      <pubDate>Thu, 22 Apr 2021 14:53:16 +0000</pubDate>
      <link>https://dev.to/skalyani24/what-are-different-ways-to-implement-a-priority-queue-in-python-2n77</link>
      <guid>https://dev.to/skalyani24/what-are-different-ways-to-implement-a-priority-queue-in-python-2n77</guid>
      <description>&lt;p&gt;Before we get into implementing a priority queue in Python, let us first understand what a priority queue is. Priority queues are data structures where each element in the queue has a certain priority. A priority queue sorts and dequeues elements based on their priority.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rules-to-implement-a-priority-queue"&gt;
  &lt;/a&gt;
  Rules to implement a priority queue
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;High priority element is dequeued before low priority element.&lt;/li&gt;
&lt;li&gt;In the case of elements having the same priority, they are dequeued by their order.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#simple-implementation-of-a-priority-queue"&gt;
  &lt;/a&gt;
  Simple implementation of a priority queue
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;##implement using low priority elements to high priority elements
pq=[]
pq.append(100)
pq.append(90)
pq.append(80)
pq.append(70)
pq.append(60)
pq.append(50)
pq.append(40)
pq.append(30)
pq.append(20)
pq.append(10)
print(pq)

pq.sort()
print(pq)

pq.pop()
pq.pop()
pq.pop()
pq.pop()
print(pq)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-a-binary-heap"&gt;
  &lt;/a&gt;
  What is a binary heap?
&lt;/h2&gt;

&lt;p&gt;A data structure is in the form of a &lt;strong&gt;binary tree.&lt;/strong&gt; They are a common way of implementing a priority queue. The element at the root of the tree will always have the highest priority.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Trees are non-linear data structures that represent nodesconnected by edges. Each tree consists of a root node as the Parent node, and the left node and right node as Child nodes.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;A binary tree can be represented by using a &lt;strong&gt;list&lt;/strong&gt; where every node consists of three fields. The first field for storing value of root node, second for storing list that represents the left subtree, and third for storing list that represents the right subtree.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax: [root node, left subtree as list, right subtree as list]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;A binary heap is either maximum or minimum.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.Min-heap:&lt;/strong&gt; The value of a parent node is &lt;em&gt;less&lt;/em&gt; than or equal to its children nodes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.Max-Heap:&lt;/strong&gt; The value of a parent node is &lt;em&gt;greater&lt;/em&gt; than or equal to its children nodes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-heap-queue"&gt;
  &lt;/a&gt;
  What is a heap queue?
&lt;/h2&gt;

&lt;p&gt;Heap queue (heapq): It is an implementation of the priority queue algorithm in which the properties of the min-heap are preserved.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: Refer above for the definition of min-heap.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#operations-of-the-heapq-module"&gt;
  &lt;/a&gt;
  Operations of the heapq module
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1.heapify(iterable):&lt;/strong&gt; Conversion of the iterable into a heap data structure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.heappush(heap, element):&lt;/strong&gt; To insert the element argument into the heap.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.heappop(heap):&lt;/strong&gt; To remove the smallest element from the heap.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.heappushpop(heap, element):&lt;/strong&gt; To combine the function of both push (the element) and pop (the smallest element) in one line.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.heapreplace(heap, element):&lt;/strong&gt; The smallest element is first popped, then the element argument is pushed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation-of-heapq"&gt;
  &lt;/a&gt;
  Implementation of heapq
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Refer above text for more understanding of code
# importing "heapq" to implement heap queue 
import heapq 
# initializing list 
list1 = [1, 5, 10, 15, 20]
# to convert list into heap 
heapq.heapify(list1)
print ("Initial heap: ", list1)
# to push elements into heap 
heapq.heappush(list1, 3) 
# print changed heap
print ("Changed heap: ", list1) 
# to pop smallest element 
print ("The smallest element is popped:", heapq.heappop(list1)) 
# print the updated heap
print ("Updated heap: ",list1)
# to push and pop items simultaneously 
print ("The popped item using heappushpop() is : ",list1) 
print (heapq.heappushpop(list1, 3)) 
# to push and pop items simultaneously 
print ("The popped item using heapreplace() is : ",list1) 
print (heapq.heapreplace(list1, 2)) 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#why-use-heapq-to-implement-a-priority-queue"&gt;
  &lt;/a&gt;
  Why use heapq to implement a priority queue?
&lt;/h2&gt;

&lt;p&gt;Heap is generally favoured for implementing priority queues as they provide better performance than arrays or linked lists. They are used to execute the program because of the maximum and minimum elements at the root of the tree.&lt;/p&gt;

</description>
      <category>python</category>
      <category>datastructure</category>
    </item>
    <item>
      <title>Top 51 companies to find quality remote jobs, analysed over 38 parameters</title>
      <author>hrishikesh1990</author>
      <pubDate>Thu, 22 Apr 2021 14:50:19 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/top-51-companies-to-find-quality-remote-jobs-analysed-over-38-parameters-3lp5</link>
      <guid>https://dev.to/hrishikesh1990/top-51-companies-to-find-quality-remote-jobs-analysed-over-38-parameters-3lp5</guid>
      <description>&lt;p&gt;Hey everyone,&lt;/p&gt;

&lt;p&gt;I know how researching companies when you're job hunting is an absolute PAIN - both in time &amp;amp; energy. More so when you're looking for remote jobs.&lt;/p&gt;

&lt;p&gt;So I built a framework/paradigm to analyse companies so that you can compare them on a comprehensive Remote Index. I've analysed 51 companies over 38 parameters so far.&lt;/p&gt;

&lt;p&gt;Here's the list of top 51 companies to find quality remote jobs.&lt;/p&gt;

&lt;p&gt;I have also built a more &lt;a href="https://remoteclan.com/top-remote-companies"&gt;intuitive interface&lt;/a&gt; to showcase the data:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://remoteclan.com/top-remote-companies"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qy4_ysr4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5bb8235l2t2q1kav5fhj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-gitlab"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://remoteclan.com/top-remote-companies/gitlab"&gt;GitLab&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--78uEAofU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6fucairz9v1edwq8v1vt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--78uEAofU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6fucairz9v1edwq8v1vt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for&lt;/strong&gt;: 7 years&lt;br&gt;
&lt;strong&gt;Employees&lt;/strong&gt;: 1292&lt;br&gt;
&lt;strong&gt;Presence in Countries&lt;/strong&gt;: 67&lt;br&gt;
&lt;strong&gt;Diversity in Functions&lt;/strong&gt;: 6 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring&lt;/strong&gt;: Hires globally for all positions&lt;br&gt;
&lt;strong&gt;Pay&lt;/strong&gt;: Location-based pay&lt;/p&gt;

&lt;p&gt;GitLab is a global, multicultural organization and has been a pioneer in remote working. The company’s extensive guide on remote working provides the best practices to follow while working remotely.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-doist"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://remoteclan.com/top-remote-companies/doist"&gt;Doist&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LzsTY5Xd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wwl0a5v986b1wiln59c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LzsTY5Xd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wwl0a5v986b1wiln59c.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 14 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 100&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 31&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 7 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Doist is a multidisciplinary, fully-remote, team that’s passionate about creating products, like Todoist and Twist. Their mission is to inspire the workplace of the future by creating simple yet powerful productivity tools that promote a more fulfilling way to work and live.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-help-scout"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://remoteclan.com/top-remote-companies/help-scout"&gt;Help Scout&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2p-jIVIr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c938cgdv7n1dnes7zoy4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2p-jIVIr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c938cgdv7n1dnes7zoy4.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 10 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 117&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 6&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 11 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Global pay&lt;/p&gt;

&lt;p&gt;Help Scout is help desk software for teams who want the personal touch of email support at an enterprise scale. They have been remote-first for nearly a decade and have teammates in more than 80 cities worldwide. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-automattic"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://remoteclan.com/top-remote-companies/automattic"&gt;Automattic&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bBVP0Y3c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hv1kxtu9latgx8rxu4b5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bBVP0Y3c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hv1kxtu9latgx8rxu4b5.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 16 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 1085&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 76&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Global pay&lt;/p&gt;

&lt;p&gt;Automattic believes in making the web a better place. They are the creators of some of the internet's popular web products such as WordPress.com, WooCommerce, Jetpack, Longreads, VaultPress, Akismet, Gravatar, Tumblr, and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-invision"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://remoteclan.com/top-remote-companies/invision"&gt;InVision&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uddoMgZA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pguyo2nrtwoxevqyc0qo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uddoMgZA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pguyo2nrtwoxevqyc0qo.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 10 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 1099&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 31&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Global pay&lt;/p&gt;

&lt;p&gt;InVision is a prototyping, collaboration, and workflow platform used by over 1 million designers to design better experiences for web and mobile. The company employs a diverse team all over the world. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-articulate"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://remoteclan.com/top-remote-companies/articulate"&gt;Articulate&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LYOLOPiv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5k0a9bzh423gqs0du4f8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LYOLOPiv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5k0a9bzh423gqs0du4f8.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 19 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 296&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 5&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 10 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Articulate is a software company that helps users to create engaging online and mobile courses. Its e-learning tools are used by 78,000+ organizations across the globe. They empower employees to thrive by fostering a culture of autonomy, productivity, and respect.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-duck-duck-go"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://remoteclan.com/top-remote-companies/duck-duck-go"&gt;Duck Duck Go&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SVFz8JjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21bhzqmn4cclbo6otc74.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SVFz8JjW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21bhzqmn4cclbo6otc74.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 13 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 137&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 6&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 9 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Duck Duck Go is an internet privacy company that empowers you to seamlessly take control of your personal information online, without any tradeoffs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-ghost"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://remoteclan.com/top-remote-companies/ghost"&gt;Ghost&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BFpJ3GVf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrbvo1cnxua8qswet9b2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BFpJ3GVf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrbvo1cnxua8qswet9b2.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 8 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 36&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 8&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 11 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Ghost is an open-source blogging platform to simplify the process of online publishing for individual bloggers and online publications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-zapier"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://remoteclan.com/top-remote-companies/zapier"&gt;Zapier&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y8M7ukPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6ry4pyma3q6tdjnqfy5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y8M7ukPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6ry4pyma3q6tdjnqfy5.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 10 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 416&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 28&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 9 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Zapier gives people internet superpowers by letting them easily connect and automate the apps they use. Zapier is a fully distributed team helping people across the world automate the boring and tedious parts of their job. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-chili-piper"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://remoteclan.com/top-remote-companies/chili-piper"&gt;Chili Piper&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vLySrXPB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddgcn3smx42x8qinaofy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vLySrXPB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddgcn3smx42x8qinaofy.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 5 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 106&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 18&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 7 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Global pay&lt;/p&gt;

&lt;p&gt;Chili Piper helps clients turn inbound leads into qualified meetings instantly. They believe in a remote-first and diverse work culture where employees can grow their career.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-vmware"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://remoteclan.com/top-remote-companies/vmware"&gt;VMware&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XGFJBdv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlii2b8cvucp7nxwbogw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XGFJBdv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlii2b8cvucp7nxwbogw.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 1 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 30904&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 24&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;VMware is a cloud computing and virtualization technology company. VMware empowers its people to work from any location that accelerates their productivity, career growth, and well-being.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-balsamiq"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://remoteclan.com/top-remote-companies/balsamiq"&gt;Balsamiq&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JEHE0u0q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bd8u494iab9pgh521o07.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JEHE0u0q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bd8u494iab9pgh521o07.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 13 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 38&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 5&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 10 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Balsamiq is a rapid wireframing software that combines the simplicity of paper sketching with the power of a digital tool. Balsamiq is a small and personable company that competes on usability and customer service.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-aha"&gt;
  &lt;/a&gt;
  13. &lt;a href="https://remoteclan.com/top-remote-companies/aha!"&gt;Aha!&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Vv28Bay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jrpkedfawxyqbvly87k.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Vv28Bay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jrpkedfawxyqbvly87k.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 8 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 186&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 6&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 4 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;/p&gt;

&lt;p&gt;Aha! is a roadmap software that is used by 5,000 companies to build lovable products. Aha! is self-funded, profitable, and has been entirely remote since they started in 2013.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-github"&gt;
  &lt;/a&gt;
  14. &lt;a href="https://remoteclan.com/top-remote-companies/github"&gt;Github&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LysIYosz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nn36rmo8n0qrjpqa41w0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LysIYosz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nn36rmo8n0qrjpqa41w0.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 13 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 2688&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 7&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;GitHub is a suite of tools and workflows that is rapidly changing the way people build software. GitHub fosters a collaborative community that can come together—as individuals and in teams—to create the future of software and make a difference in the world.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#15-taxjar"&gt;
  &lt;/a&gt;
  15. &lt;a href="https://remoteclan.com/top-remote-companies/taxjar"&gt;Taxjar&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GCWR_e9Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1393q2vmyemworsktxl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GCWR_e9Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1393q2vmyemworsktxl.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 8 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 182&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 1&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 8 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;TaxJar is a leading sales tax compliance service for ecommerce. They are determined to ease the tax compliance burden with an exceptional customer experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#16-buffer"&gt;
  &lt;/a&gt;
  16. &lt;a href="https://remoteclan.com/top-remote-companies/buffer"&gt;Buffer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z6B2LIX5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7g0o08bzi7ptguoit56q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z6B2LIX5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7g0o08bzi7ptguoit56q.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 6 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 130&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 15&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 8 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Buffer provides tools to manage accounts in social networks, by providing the means for a user to schedule posts. Buffer is cultivating a unique and robust culture, and building a different type of company that’s focused on the happiness and personal growth of its customers and team.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#17-slite"&gt;
  &lt;/a&gt;
  17. &lt;a href="https://remoteclan.com/top-remote-companies/slite"&gt;Slite&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lW1GaEs_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otdpz7kehzirq8nwt8aa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lW1GaEs_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otdpz7kehzirq8nwt8aa.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 5 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 34&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 7&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 11 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Slite helps remote teams share ideas, save knowledge, and work together anytime, any place.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#18-autho"&gt;
  &lt;/a&gt;
  18. &lt;a href="https://remoteclan.com/top-remote-companies/auth0"&gt;AuthO&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---jGEXhrt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48a65aa2aqytdx7rog56.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---jGEXhrt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48a65aa2aqytdx7rog56.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 8 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 867&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 6&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Auth0 is an identity management platform for application builders Auth0 secures more than 100 million logins each day, giving enterprises the confidence to deliver trusted and elegant digital experiences to their customers around the world.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#19-digital-ocean"&gt;
  &lt;/a&gt;
  19. &lt;a href="https://remoteclan.com/top-remote-companies/digital-ocean"&gt;Digital Ocean&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mi0zXkO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30pczvh7jyhr2fn8cnzb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mi0zXkO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30pczvh7jyhr2fn8cnzb.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 6 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 634&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 5&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Digital Ocean is a cloud infrastructure provider that helps to deploy and scale applications. It helps millions of developers easily build, test, manage, and scale applications of any size – faster than ever before.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#20-hotjar"&gt;
  &lt;/a&gt;
  20. &lt;a href="https://remoteclan.com/top-remote-companies/hotjar"&gt;HotJar&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RGvopUOd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u271u4yf2nmfvwbk1rd0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGvopUOd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u271u4yf2nmfvwbk1rd0.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 7 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 149&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 15&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 8 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Hotjar is a powerful product that reveals the online behavior and voice of a website’s users. By combining both analysis and feedback tools, Hotjar gives the ‘big picture’ of how to improve a site's user experience and performance/conversion rates.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#21-bitovi"&gt;
  &lt;/a&gt;
  21. &lt;a href="https://remoteclan.com/top-remote-companies/bitovi"&gt;Bitovi&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ug9xi9ea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9pn266fg3orl5sdl9ypi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ug9xi9ea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9pn266fg3orl5sdl9ypi.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 16 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 41&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 5&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 6 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Bitovi teaches people how to create amazing web apps. They have been building applications for more than 10 years, from small startups to the biggest brands, and are recognized leaders in user experience design and JavaScript development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#22-apple"&gt;
  &lt;/a&gt;
  22. &lt;a href="https://remoteclan.com/top-remote-companies/apple"&gt;Apple&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kj1FNkHP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ftd6hls3aov05gtebv1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kj1FNkHP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ftd6hls3aov05gtebv1.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; Not remote yet&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 224252&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 25&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Apple is a technology company that designs, develops, and sells consumer electronics, computer software, and online services.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#23-twitter"&gt;
  &lt;/a&gt;
  23. &lt;a href="https://remoteclan.com/top-remote-companies/twitter"&gt;Twitter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--osRebkdA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ug346b6kim5c15fdurb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--osRebkdA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ug346b6kim5c15fdurb.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 1 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 5957&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 19&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Twitter is a microblogging and social networking service on which users post and interact with messages known as "tweets".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#24-bitnami"&gt;
  &lt;/a&gt;
  24. &lt;a href="https://remoteclan.com/top-remote-companies/bitnami"&gt;Bitnami&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3vz4Ng15--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwzq2qiwoacj9uaka44y.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3vz4Ng15--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fwzq2qiwoacj9uaka44y.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 10 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 24&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 7&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 2 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;/p&gt;

&lt;p&gt;Bitnami is a provider of packaged applications for any platform. The Bitnami application automation platform delivers and maintains a catalog of 130+ ready-to-run server applications and development environments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-stripe"&gt;
  &lt;/a&gt;
  25. &lt;a href="https://remoteclan.com/top-remote-companies/stripe"&gt;Stripe&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ndc7KtB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f90khh5wg058k1auq50p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ndc7KtB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f90khh5wg058k1auq50p.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 8 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 3335&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 11&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Stripe is a technology company that builds economic infrastructure for the internet. The company primarily offers payment processing software and application programming interfaces for e-commerce websites and mobile applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#26-shopify"&gt;
  &lt;/a&gt;
  26. &lt;a href="https://remoteclan.com/top-remote-companies/shopify"&gt;Shopify&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gvjgc1tL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5trnqdfmxmadpzjdxgn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gvjgc1tL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c5trnqdfmxmadpzjdxgn.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 1 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 8392&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 8&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Shopify is a commerce platform that allows anyone to set up an online store and sell their products. Shopify has grown from 5 people in a coffee shop to over 5,000 across the globe.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#27-canonical"&gt;
  &lt;/a&gt;
  27. &lt;a href="https://remoteclan.com/top-remote-companies/canonical"&gt;Canonical&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RLQ644qC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfjy198th8s6a36hi0dw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RLQ644qC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfjy198th8s6a36hi0dw.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 17 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 867&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 12&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;/p&gt;

&lt;p&gt;Canonical publishes Ubuntu, the world’s most popular enterprise Linux from cloud to edge, together with a passionate global community of 200,000 contributors. It also provides commercial services and solutions for Ubuntu.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#28-reddit"&gt;
  &lt;/a&gt;
  28. &lt;a href="https://remoteclan.com/top-remote-companies/reddit"&gt;Reddit&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q1gIj925--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmu6fmzz9yx6lqygrvm4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q1gIj925--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmu6fmzz9yx6lqygrvm4.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 1 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 1103&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 7&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Same country pay&lt;/p&gt;

&lt;p&gt;Reddit is a social news aggregation and discussion website. It is home to thousands of communities and forums where people can share content or comment on other's posts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#29-etsy"&gt;
  &lt;/a&gt;
  29. &lt;a href="https://remoteclan.com/top-remote-companies/etsy"&gt;Etsy&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ovVcSj7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wh336izapsa2uxaha2zz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ovVcSj7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wh336izapsa2uxaha2zz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 1 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 4985&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 4&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Etsy is a global marketplace for unique and creative goods. It's home to a universe of special, extraordinary, handmade, or vintage items and craft supplies. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#30-facebook"&gt;
  &lt;/a&gt;
  30. &lt;a href="https://remoteclan.com/top-remote-companies/facebook"&gt;Facebook&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RzACWy1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zy2yja3ieoxs134krp4q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RzACWy1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zy2yja3ieoxs134krp4q.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 1 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 80083&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 33&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Facebook is a tech company that builds technologies that give people the power to connect with friends and family, find communities and grow businesses.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#31-dropbox"&gt;
  &lt;/a&gt;
  31. &lt;a href="https://remoteclan.com/top-remote-companies/dropbox"&gt;Dropbox&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---P2N93VM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9w15685sktjz5um62zlv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---P2N93VM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9w15685sktjz5um62zlv.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 1 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 3930&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 10&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 8 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Dropbox is a file hosting service that helps people be organized, stay focused, and get in sync with their teams. It offers cloud storage, file synchronization, personal cloud, and client software.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#32-microsoft"&gt;
  &lt;/a&gt;
  32. &lt;a href="https://remoteclan.com/top-remote-companies/microsoft"&gt;Microsoft&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LyDQx4lX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a7669tss8g55u1zbad7d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LyDQx4lX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a7669tss8g55u1zbad7d.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; Not remote yet&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 191976&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 95&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires in the same city&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Microsoft is a leading global vendor of computer software; hardware for computer, mobile, and gaming systems; and cloud services.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#33-cloudpeeps"&gt;
  &lt;/a&gt;
  33. &lt;a href="https://remoteclan.com/top-remote-companies/cloudpeeps"&gt;Cloudpeeps&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A1ufPKr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j1fwtkdajgovhdp5ochy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A1ufPKr0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j1fwtkdajgovhdp5ochy.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 7 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 10&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 7&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 12 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;CloudPeeps is a community, marketplace, and platform that empowers freelancers and businesses to do their best work. Their mission is to empower every professional with the freedom to work the way they want.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#34-servicenow"&gt;
  &lt;/a&gt;
  34. &lt;a href="https://remoteclan.com/top-remote-companies/servicenow"&gt;ServiceNow&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d0ZXJOZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz5f16iq7hggo7u2nxk2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d0ZXJOZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz5f16iq7hggo7u2nxk2.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 1 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 14018&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 27&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;ServiceNow is a cloud-based workflow automation platform that enables enterprise organizations to improve operational efficiencies. It delivers digital workflows that create great experiences and unlock productivity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#35-envato"&gt;
  &lt;/a&gt;
  35. &lt;a href="https://remoteclan.com/top-remote-companies/envato"&gt;Envato&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LnOrpxeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cxcf9hvlxd9g1yzehkr9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LnOrpxeI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cxcf9hvlxd9g1yzehkr9.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 6 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 2010&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 12&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Envato is a leading marketplace for creative assets and creative people. People use Envato to buy and sell creative assets, use smart design templates, learn creative skills or even hire freelancers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#36-square"&gt;
  &lt;/a&gt;
  36. &lt;a href="https://remoteclan.com/top-remote-companies/square"&gt;Square&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pu9MIqzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8i2do5wuzdq8ih94ajk1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pu9MIqzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8i2do5wuzdq8ih94ajk1.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 1 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 5609&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 9&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Square is a merchant services aggregator and mobile payment company that aims to simplify commerce through technology. It specializes in payments, point of sale, e-commerce, as well as loyalty, payroll, marketing, team management, gift card, and other tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#37-harvest"&gt;
  &lt;/a&gt;
  37. &lt;a href="https://remoteclan.com/top-remote-companies/harvest"&gt;Harvest&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V2cZgPKt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1kb08qjx53jeb0ego30.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V2cZgPKt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1kb08qjx53jeb0ego30.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 15 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 116&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 11&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 4 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Harvest is cloud-based time tracking software. They provide timesheet and invoicing features for small businesses and freelancers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#38-britecore"&gt;
  &lt;/a&gt;
  38. &lt;a href="https://remoteclan.com/top-remote-companies/britecore"&gt;BriteCore&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cF1nqUkp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/py4fztlh9uf7rp4t9tgk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cF1nqUkp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/py4fztlh9uf7rp4t9tgk.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 12 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 171&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 8&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 6 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;/p&gt;

&lt;p&gt;BriteCore is a platform that offers a cloud-based core, digital, and data policy administration system for property &amp;amp; casualty insurers. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#39-clevertech"&gt;
  &lt;/a&gt;
  39. &lt;a href="https://remoteclan.com/top-remote-companies/clevertech"&gt;Clevertech&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zoPzIxuU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpa3a1q55qev2i5kxqx2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zoPzIxuU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpa3a1q55qev2i5kxqx2.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 15 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 226&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 11&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 4 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Clevertech is a custom software and app development company. They have built core operating technologies, mobile apps, and complex web applications that drive business growth.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#40-baremetrics"&gt;
  &lt;/a&gt;
  40. &lt;a href="https://remoteclan.com/top-remote-companies/baremetrics"&gt;Baremetrics&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qpHasSYK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hk54jg1tzlddi230w18a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qpHasSYK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hk54jg1tzlddi230w18a.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 8 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 8&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 3&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 6 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;/p&gt;

&lt;p&gt;Baremetrics provides SaaS analytics, metrics, insights, and engagement tools. It gives important business metrics like MRR, LTV, Churn, and much more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#41-coinbase"&gt;
  &lt;/a&gt;
  41. &lt;a href="https://remoteclan.com/top-remote-companies/coinbase"&gt;Coinbase&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lpZHrixu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kxov91ay85nfdxifvacm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lpZHrixu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kxov91ay85nfdxifvacm.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 1 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 1599&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 7&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Coinbase operates a cryptocurrency exchange platform that makes it easy to buy, sell, and store cryptocurrencies like Bitcoin, Ethereum, and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#42-google"&gt;
  &lt;/a&gt;
  42. &lt;a href="https://remoteclan.com/top-remote-companies/google"&gt;Google&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CwGZRYP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77w2t0u5kuwb1w40jf96.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CwGZRYP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77w2t0u5kuwb1w40jf96.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; Not remote yet&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 224977&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 60&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires in the same city&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Google is a technology company that specializes in Internet-related services and products, which include online advertising technologies, a search engine, cloud computing, software, and hardware.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#43-netflix"&gt;
  &lt;/a&gt;
  43. &lt;a href="https://remoteclan.com/top-remote-companies/netflix"&gt;Netflix&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FB-Je94a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ikucbxaifh8yazb510s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FB-Je94a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ikucbxaifh8yazb510s.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; Not remote yet&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 11691&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 9&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 15 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Netflix is a subscription-based streaming service that allows its members to watch TV shows and movies without commercials on an internet-connected device. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#44-flow"&gt;
  &lt;/a&gt;
  44. &lt;a href="https://remoteclan.com/top-remote-companies/flow"&gt;Flow&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tURg3ln---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0z192btj56j6ypd15160.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tURg3ln---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0z192btj56j6ypd15160.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 11 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 6&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 1&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 4 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Flow is modern task and project management software for teams. It brings together your tasks, projects, timelines, and conversations, and integrates with your favorite tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#45-chartmogul"&gt;
  &lt;/a&gt;
  45. &lt;a href="https://remoteclan.com/top-remote-companies/chartmogul"&gt;ChartMogul&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sMoIVECk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/da92j8mem2t0r0ehj2wv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sMoIVECk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/da92j8mem2t0r0ehj2wv.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 7 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 45&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 15&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 9 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;ChartMogul is an analytics platform that helps businesses run their subscription business. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#46-general-assembly"&gt;
  &lt;/a&gt;
  46. &lt;a href="https://remoteclan.com/top-remote-companies/general-assembly"&gt;General Assembly&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X2rHkwg---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfdmqr2p3didh0rbql0m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X2rHkwg---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfdmqr2p3didh0rbql0m.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 10 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 3525&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 6&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;General Assembly provides education and career transformation, specializing in today's most in-demand skills. It is a leading source for training, staffing, and career transitions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#47-hasura"&gt;
  &lt;/a&gt;
  47. &lt;a href="https://remoteclan.com/top-remote-companies/hasura"&gt;Hasura&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pihT5up9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fg1kr9z3rax3gg62ws0v.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pihT5up9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fg1kr9z3rax3gg62ws0v.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 4 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 84&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 4&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 7 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Hasura is a software technology company that provides developer-focused tooling products. Developers can easily build business logic that publishes and consumes events, that reacts to changes in data or gets scheduled based on time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#48-safetywing"&gt;
  &lt;/a&gt;
  48. &lt;a href="https://remoteclan.com/top-remote-companies/safetywing"&gt;SafetyWing&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rgMDGhPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfnkn0190q9mu08lczht.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rgMDGhPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfnkn0190q9mu08lczht.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 4 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 44&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 11&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 14 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;/p&gt;

&lt;p&gt;SafetyWing is a startup that provides travel medical insurance solutions to remote and gig economy workers. Its products are built and designed by a fully remote team of nomads distributed across three continents.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#49-docker"&gt;
  &lt;/a&gt;
  49. &lt;a href="https://remoteclan.com/top-remote-companies/docker"&gt;Docker&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4yxlmD5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gzzgargub407aaaihqx2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4yxlmD5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gzzgargub407aaaihqx2.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 1 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 279&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 9&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 8 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Docker is a technology company that develops Docker Hub and Docker Desktop, developer productivity tools built around Docker.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#50-gradle"&gt;
  &lt;/a&gt;
  50. &lt;a href="https://remoteclan.com/top-remote-companies/gradle"&gt;Gradle&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkwXpktr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxap10web8el2dparxfa.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkwXpktr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxap10web8el2dparxfa.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 12 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 60&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 9&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 7 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires remotely for some positions&lt;br&gt;
&lt;strong&gt;Pay:&lt;/strong&gt; Location-based pay&lt;/p&gt;

&lt;p&gt;Gradle is a build automation tool for multi-language software development. They are the company behind both the popular open-source Gradle Build Tool and their commercial product, Gradle Enterprise. Gradle Build Tool is an open-source build system used by millions of developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#51-hubstaff"&gt;
  &lt;/a&gt;
  51. &lt;a href="https://remoteclan.com/top-remote-companies/hubstaff"&gt;Hubstaff&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--viCZeB_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84x87emli9z8s82ernc7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--viCZeB_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84x87emli9z8s82ernc7.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote for:&lt;/strong&gt; 8 years&lt;br&gt;
&lt;strong&gt;Employees:&lt;/strong&gt; 151&lt;br&gt;
&lt;strong&gt;Presence in Countries:&lt;/strong&gt; 9&lt;br&gt;
&lt;strong&gt;Diversity in Functions:&lt;/strong&gt; 9 diverse functions&lt;br&gt;
&lt;strong&gt;Hiring:&lt;/strong&gt; Hires globally for all positions&lt;/p&gt;

&lt;p&gt;Hubstaff is a remote company that provides staff monitoring through time tracking software.&lt;/p&gt;

</description>
      <category>career</category>
      <category>showdev</category>
      <category>productivity</category>
      <category>startup</category>
    </item>
    <item>
      <title>I just made a stunningly amazing Tower Defense game</title>
      <author>𝐋𝐄𝑽𝐈𝑨𝐓𝐇𝐀𝐍 Programming</author>
      <pubDate>Thu, 22 Apr 2021 14:50:06 +0000</pubDate>
      <link>https://dev.to/leviathanprogramming/i-just-made-a-stunningly-amazing-tower-defense-game-3mnj</link>
      <guid>https://dev.to/leviathanprogramming/i-just-made-a-stunningly-amazing-tower-defense-game-3mnj</guid>
      <description>&lt;p&gt;I originally published this on Replit and I would like to share my latest work with you all.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://replit.com/talk/share/Orbitron-TD-III-A-Tower-defense-unlike-anything-youve-seen-before/136630"&gt;https://replit.com/talk/share/Orbitron-TD-III-A-Tower-defense-unlike-anything-youve-seen-before/136630&lt;/a&gt;&lt;br&gt;
If you like it, be sure to vote up the post over there!!&lt;/p&gt;

&lt;p&gt;Also, any feedback will be greatly appreciated.&lt;br&gt;
Thanks!&lt;br&gt;
Happy Coding!&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>testdev</category>
    </item>
    <item>
      <title>25 Udemy Courses Worth Your Money &amp; Time 🚀</title>
      <author>Garvit Motwani</author>
      <pubDate>Thu, 22 Apr 2021 14:35:00 +0000</pubDate>
      <link>https://dev.to/worldindev/25-udemy-courses-worth-your-money-time-2e5j</link>
      <guid>https://dev.to/worldindev/25-udemy-courses-worth-your-money-time-2e5j</guid>
      <description>&lt;p&gt;Hello Devs, We're back with another article, and in this one, we are giving you the best of the best Udemy courses online worth your time&lt;/p&gt;

&lt;p&gt;So let's start!&lt;/p&gt;




&lt;p&gt;⚡ Giveaway ⚡&lt;br&gt;
We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
Steps to enter the giveaway&lt;br&gt;
--&amp;gt; React to this post&lt;br&gt;
--&amp;gt; &lt;a href="https://worldindev.ck.page/"&gt;Subscribe to our Newsletter&lt;/a&gt; &amp;lt;-- Very important&lt;/p&gt;



&lt;p&gt;Note --&amp;gt; We will send a list of 25 additional Udemy courses in our &lt;a href="https://worldindev.ck.page/"&gt;Newsletter&lt;/a&gt; exclusively. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-modern-html-amp-css-from-the-beginning-including-sass"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.udemy.com/share/1013eABEMcdltaQX4=/"&gt;Modern HTML &amp;amp; CSS From The Beginning (Including Sass)&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LuVVX19b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/2153774_bef0_4.jpg%3FCePlKapuMoaUJxx2YpSOjGt-9z17KkNdjEDMHpTcRvwlxLKY_QNxp4D0e_gS1QYoPxvQeLYvosZmg1pmGRAJcFjApgD3VtG0YjljTUHGV2dtgKV7Oo_J-cD4edpc4Q" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LuVVX19b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/2153774_bef0_4.jpg%3FCePlKapuMoaUJxx2YpSOjGt-9z17KkNdjEDMHpTcRvwlxLKY_QNxp4D0e_gS1QYoPxvQeLYvosZmg1pmGRAJcFjApgD3VtG0YjljTUHGV2dtgKV7Oo_J-cD4edpc4Q" alt="Modern HTML &amp;amp; CSS From The Beginning (Including Sass) IMage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Build Multiple High-Quality Website &amp;amp; UI Projects&lt;/li&gt;
&lt;li&gt;HTML5 Semantic Layout &amp;amp; CSS Fundamentals&lt;/li&gt;
&lt;li&gt;Flexbox &amp;amp; CSS Grid Projects&lt;/li&gt;
&lt;li&gt;CSS Variables, Transitions, Dropdowns, Overlays &amp;amp; More&lt;/li&gt;
&lt;li&gt;Website Hosting &amp;amp; Deployment With FTP &amp;amp; Git&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;br&gt;
This course is for any developer, beginner to advanced&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 21h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/traversymedia"&gt;@traversymedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/1013eABEMcdltaQX4=/"&gt;https://www.udemy.com/share/1013eABEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-advanced-css-and-sass-flexbox-grid-animations-and-more"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.udemy.com/share/101WkwBEMcdltaQX4=/"&gt;Advanced CSS and Sass: Flexbox, Grid, Animations and More!&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aZUS9loH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/1026604_790b_2.jpg%3Fsecure%3Dm67U5Axi9gYAmGjzXv78pQ%253D%253D%252C1616742408" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aZUS9loH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/1026604_790b_2.jpg%3Fsecure%3Dm67U5Axi9gYAmGjzXv78pQ%253D%253D%252C1616742408" alt="Advanced CSS and Sass: Flexbox, Grid, Animations and More! Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Tons of modern CSS techniques to create stunning designs and effects&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Advanced CSS animations with @keyframes, animation and transition&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How CSS works behind the scenes: the cascade, specificity, inheritance, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CSS architecture: component-based design, BEM, writing reusable code, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Flexbox layouts: build a huge real-world project with flexbox&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CSS Grid layouts: build a huge real-world project with CSS Grid&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using Sass in real-world projects: global variables, architecting CSS, managing media queries, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Advanced responsive design: media queries, mobile-first vs desktop-first, em vs rem units, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Responsive images in HTML and CSS for faster pageloads&lt;br&gt;
SVG images and videos in HTML and CSS: build a background video effect&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The NPM ecosystem: development workflows and building processes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get friendly and fast support in the course Q&amp;amp;A&lt;br&gt;
Downloadable lectures, code and design assets for all projects&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;This not a beginner course — You should be confident in coding HTML and CSS before taking the course&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Any computer and OS will work — Windows, macOS or Linux&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There is no need for any paid software — The text editor you already have works just fine&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 28h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/jonasschmedtman"&gt;@jonasschmedtman&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101WkwBEMcdltaQX4=/"&gt;https://www.udemy.com/share/101WkwBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-bootstrap-4-from-scratch-with-5-projects"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.udemy.com/share/101Xd8BEMcdltaQX4=/"&gt;Bootstrap 4 From Scratch With 5 Projects&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LPTcKzv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1313502_b57f_2.jpg%3F2LrTuERddvdbJMN3C84PCPt9OdrIofoSRR8h5bTZfND9jQcwhL-IVKRhajM41hmU9L1tG-zd20TJeNv19G9gh5977Ou2nbXDt6thn6dkVK_nmonHUxUt3zkudf2V7w" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LPTcKzv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1313502_b57f_2.jpg%3F2LrTuERddvdbJMN3C84PCPt9OdrIofoSRR8h5bTZfND9jQcwhL-IVKRhajM41hmU9L1tG-zd20TJeNv19G9gh5977Ou2nbXDt6thn6dkVK_nmonHUxUt3zkudf2V7w" alt="Bootstrap 4 From Scratch With 5 Projects Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Learn and create amazing high-quality Bootstrap 4 themes and UIs from scratch&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn the Bootstrap 4 utilities, classes, components &amp;amp; JS widgets using a custom sandbox environment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn semantic HTML5 &amp;amp; modern CSS3 techniques&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn to compile Sass in the easiest way possible using a GUI&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All Levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You should have basic knowledge of HTML &amp;amp; CSS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You do NOT need to know any Bootstrap 3&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 11.3h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/traversymedia"&gt;@traversymedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101Xd8BEMcdltaQX4=/"&gt;https://www.udemy.com/share/101Xd8BEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-tailwind-css-with-practical-examples"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://www.udemy.com/share/103XTmBEMcdltaQX4=/"&gt;Tailwind CSS with practical examples&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3snxfUKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/3542736_21cf.jpg%3Fsecure%3DctjHCGaoXOZ6wSYmLUGcDg%253D%253D%252C1616745173" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3snxfUKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/3542736_21cf.jpg%3Fsecure%3DctjHCGaoXOZ6wSYmLUGcDg%253D%253D%252C1616745173" alt="Tailwind CSS with practical examples Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Style Web content with TailwindCSS, fast, efficient, unique and practical&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Having some experience with CSS are necessary. Experience with other CSS frameworks like Bootstrap will help but are not mandatory.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 6.5h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="http://www.firebrain.de/"&gt;Martin Eberth&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/103XTmBEMcdltaQX4=/"&gt;https://www.udemy.com/share/103XTmBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#5-materialize-css-from-scratch-with-5-projects"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.udemy.com/share/1023GEBEMcdltaQX4=/"&gt;Materialize CSS From Scratch With 5 Projects&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MyUYsW18--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/1554318_2ec4_2.jpg%3Fsecure%3Dy3UAuM_X_mfDI2DLtRZO2A%253D%253D%252C1616742614" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MyUYsW18--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/1554318_2ec4_2.jpg%3Fsecure%3Dy3UAuM_X_mfDI2DLtRZO2A%253D%253D%252C1616742614" alt="Materialize CSS From Scratch With 5 Projects Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Learn to correctly structure HTML 5 documents with semantic tags and attributes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn and create amazing high-quality Materialize themes and UIs from scratch&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn the Materialize utilities, classes, components &amp;amp; JS widgets using a custom sandbox environment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn some custom JavaScript/JQuery to make your themes more interactive&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Basic HTML &amp;amp; CSS&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 10.5h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/traversymedia"&gt;@traversymedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/1023GEBEMcdltaQX4=/"&gt;https://www.udemy.com/share/1023GEBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#6-user-experience-design-essentials-adobe-xd-ui-ux-design"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://www.udemy.com/share/1013fcBEMcdltaQX4=/"&gt;User Experience Design Essentials - Adobe XD UI UX Design&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uzredORK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1452908_8741_3.jpg%3Fk5UpETXDNRhWTJKKjqjsAFG7P7ZI-DVujnIRpmVeVoTc2QKv8sLlQ3_jW-2W8ZREbSQ2_7Ty3LNlfiPpMRy1U3izdB6v6ULLUGXUy4IPW3rOKY3e7x7DOG3FSzh_gw" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uzredORK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1452908_8741_3.jpg%3Fk5UpETXDNRhWTJKKjqjsAFG7P7ZI-DVujnIRpmVeVoTc2QKv8sLlQ3_jW-2W8ZREbSQ2_7Ty3LNlfiPpMRy1U3izdB6v6ULLUGXUy4IPW3rOKY3e7x7DOG3FSzh_gw" alt="User Experience Design Essentials - Adobe XD UI UX Design Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Become a UX designer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will be able to start earning money from your XD Skills.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will be able to add UX designer to your CV&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build a UX project from beginning to end.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Become a UI designer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build &amp;amp; test a full mobile app.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build &amp;amp; test a full website design.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will have a project of your own to add to your portfolio.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;93 lectures of well-structured, step-by-step content.&lt;br&gt;
Learn to design websites &amp;amp; mobile phone apps.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Work with fonts &amp;amp; colors.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prototype your designs with interactions.&lt;br&gt;
Test on mobile phones.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You'll create a realistic prototype complete with micro-interactions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Send your designs for feedback &amp;amp; commenting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Export production-ready assets.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create your first UX brief &amp;amp; persona.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create quick wireframes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to use premade UI kits.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn professional workflow tricks &amp;amp; shortcuts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will get the finished files so you never fall behind&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Downloadable exercise files&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Forum support from me and the rest of the BYOL crew&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All the techniques used by UX professionals&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build a mobile app prototype that responses to voice commands.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will be able to talk correctly with other UX design professionals.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You'll learn how to choose colors.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You'll learn how to pick the correct fonts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You'll be able to send your finished work to other professionals in the correct formats.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You will need a copy of Adobe XD 2019 or above. A free trial can be downloaded from Adobe.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No previous design experience is needed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No previous Adobe XD skills are needed.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 13h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/danlovesadobe"&gt;@danlovesadobe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/1013fcBEMcdltaQX4=/"&gt;https://www.udemy.com/share/1013fcBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#7-the-complete-javascript-course-2021-from-zero-to-expert"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://www.udemy.com/share/101WfeBEMcdltaQX4=/"&gt;The Complete JavaScript Course 2021: From Zero to Expert!&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J2NOCUEU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/851712_fc61_6.jpg%3FF3smfi1FYO7I1HSKsNFF317OkplPXRXrsH8_5FjaU-wxybt81TdBOckLjniCmIzPXBb5CRpPp8WP7MDluQS1bJxO5q89CjCzE-_azJDphuMxwVB3k8pso_Ael7hH" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J2NOCUEU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/851712_fc61_6.jpg%3FF3smfi1FYO7I1HSKsNFF317OkplPXRXrsH8_5FjaU-wxybt81TdBOckLjniCmIzPXBb5CRpPp8WP7MDluQS1bJxO5q89CjCzE-_azJDphuMxwVB3k8pso_Ael7hH" alt="The Complete JavaScript Course 2021: From Zero to Expert! Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Become an advanced, confident, and modern JavaScript developer from scratch&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build 6 beautiful real-world projects for your portfolio (not boring toy apps)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Become job-ready by understanding how JavaScript really works behind the scenes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to think and work like a developer: problem-solving, researching, workflows&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JavaScript fundamentals: variables, if/else, operators, boolean logic, functions, arrays, objects, loops, strings, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Modern ES6+ from the beginning: arrow functions, destructuring, spread operator, optional chaining (ES2020), etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Modern OOP: Classes, constructors, prototypal inheritance, encapsulation, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Complex concepts like the 'this' keyword, higher-order functions, closures, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Asynchronous JavaScript: Event loop, promises, async/await, AJAX calls and APIs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to architect your code using flowcharts and common patterns&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Modern tools for 2020 and beyond: NPM, Parcel, Babel and ES6 modules&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Practice your skills with 50+ challenges and assignments (solutions included)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get downloadable lectures and friendly support in the Q&amp;amp;A area&lt;br&gt;
Design your unique learning path according to your goals: course pathways&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;No coding experience is necessary to take this course! I take you from beginner to expert!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Any computer and OS will work — Windows, macOS or Linux. We will set up your text editor the course.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A basic understanding of HTML and CSS is a plus, but not a must! The course includes an HTML and CSS crash course.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 68.5h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/jonasschmedtman"&gt;@jonasschmedtman&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101WfeBEMcdltaQX4=/"&gt;https://www.udemy.com/share/101WfeBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#8-the-git-amp-github-bootcamp"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://www.udemy.com/share/104c52BEMcdltaQX4=/"&gt;The Git &amp;amp; Github Bootcamp&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qvEka3aA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/3792262_6b0c_2.jpg%3FMuRa30komJ6HCy71rXga01FVOUSbmvlY8pkZ_EgutNLe04g4-dYVzp46eE6dyyJDXRteO284CguuZsHxoE9ttmYE-E90TIUTsSk40pcqP_QV-ZTpKMtJAIkA9ZZEnw" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qvEka3aA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/3792262_6b0c_2.jpg%3FMuRa30komJ6HCy71rXga01FVOUSbmvlY8pkZ_EgutNLe04g4-dYVzp46eE6dyyJDXRteO284CguuZsHxoE9ttmYE-E90TIUTsSk40pcqP_QV-ZTpKMtJAIkA9ZZEnw" alt="The Git &amp;amp; Github Bootcamp Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Understand how Git works behind the scenes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Explain the difference Git objects: trees, blobs, commits, and annotated tags&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Master the essential Git workflow: adding &amp;amp; committing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Work with Git branches&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Perform Git merges and resolve merge conflicts&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use Git diff to reveal changes over time&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Master Git stashing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Undo changes using git restore, git revert, and git reset&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Work with local and remote repositories&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Master collaboration workflows: pull requests, "fork &amp;amp; clone", etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Squash, clean up and rewrite history using interactive rebase&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Retrieve "lost" work using git reflogs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Write custom and powerful Git aliases&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mark releases and versions using Git tags&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Host static websites using Github Pages&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create markdown READMEs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Share code and snippets using Github Gists&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;br&gt;
Basic computer skills&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 17h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UCrqAGUPPMOdo0jfQ6grikZw"&gt;Colt Steele&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/104c52BEMcdltaQX4=/"&gt;https://www.udemy.com/share/104c52BEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#9-react-the-complete-guide-incl-hooks-react-router-redux"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://www.udemy.com/share/101WbyBEMcdltaQX4=/"&gt;React - The Complete Guide (incl Hooks, React Router, Redux)&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7L3guXc9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1362070_b9a1_2.jpg%3FBUeg8Yxpm98p7T-6IXXFuAii0myr3jL6FELFoQ23ZoqqkULpKcZ37uDd9nPMhBQyAw76IdkATAcMDrYj3NN87NwCKRhQroouYiRtWFOCUaq-_VfJs6MnqHT1uZFFMw" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7L3guXc9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1362070_b9a1_2.jpg%3FBUeg8Yxpm98p7T-6IXXFuAii0myr3jL6FELFoQ23ZoqqkULpKcZ37uDd9nPMhBQyAw76IdkATAcMDrYj3NN87NwCKRhQroouYiRtWFOCUaq-_VfJs6MnqHT1uZFFMw" alt="React - The Complete Guide (incl Hooks, React Router, Redux) Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Build powerful, fast, user-friendly, and reactive web apps&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Provide amazing user experiences by leveraging the power of JavaScript with ease&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Apply for high-paid jobs or work as a freelancer in one of the most demanded sectors you can find in web dev right now&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn React Hooks &amp;amp; Class-based Components&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;JavaScript + HTML + CSS fundamentals are absolutely required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You DON'T need to be a JavaScript expert to succeed in this course!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ES6+ JavaScript knowledge is beneficial but not a must-have&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NO prior React or any other JS framework experience is required!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 40.5h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/maxedapps"&gt;@maxedapps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101WbyBEMcdltaQX4=/"&gt;https://www.udemy.com/share/101WbyBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#10-angular-the-complete-guide-2021-edition"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://www.udemy.com/share/101WgABEMcdltaQX4=/"&gt;Angular - The Complete Guide (2021 Edition)&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I_0HNJ1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/756150_c033_2.jpg%3Fsecure%3DGcMdAMlGpG7St0H7XnzG6Q%253D%253D%252C1616742359" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I_0HNJ1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/756150_c033_2.jpg%3Fsecure%3DGcMdAMlGpG7St0H7XnzG6Q%253D%253D%252C1616742359" alt="Angular - The Complete Guide (2021 Edition) Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Develop modern, complex, responsive, and scalable web applications with Angular 11&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fully understand the architecture behind an Angular application and how to use it&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the gained, deep understanding of the Angular fundamentals to quickly establish yourself as a frontend developer&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create single-page applications with one of the most modern JavaScript frameworks out there&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All Levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;NO Angular 1 or Angular 2 knowledge is required!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic HTML and CSS knowledge helps, but isn't a must-have&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prior TypeScript knowledge also helps but isn't necessary to benefit from this course&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic JavaScript knowledge is required&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 33.5h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/maxedapps"&gt;@maxedapps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101WgABEMcdltaQX4=/"&gt;https://www.udemy.com/share/101WgABEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#11-vue-the-complete-guide-w-router-vuex-composition-api"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://www.udemy.com/share/101WzMBEMcdltaQX4=/"&gt;Vue - The Complete Guide (w/ Router, Vuex, Composition API)&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--crEP_JfU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/995016_ebf4_3.jpg%3Fsecure%3DZJv08lqRrcA9Ve8NXtHBog%253D%253D%252C1616742440" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--crEP_JfU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/995016_ebf4_3.jpg%3Fsecure%3DZJv08lqRrcA9Ve8NXtHBog%253D%253D%252C1616742440" alt="Vue - The Complete Guide (w/ Router, Vuex, Composition API) Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Build amazing Vue.js Applications - all the Way from Small and Simple Ones up to Large Enterprise-level Ones&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand the Theory behind Vue.js and use it in Real Projects&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Leverage Vue.js in both Multi- and Single-Page-Applications (MPAs and SPAs)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn the latest version of Vue (Vue 3), including the brand-new Composition API&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Basic JavaScript Knowledge is Required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ES6 Knowledge is a Plus but not a Must&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic HTML and CSS Knowledge is assumed throughout the Course&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 48.5h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/maxedapps"&gt;@maxedapps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101WzMBEMcdltaQX4=/"&gt;https://www.udemy.com/share/101WzMBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#12-mern-stack-front-to-back-full-stack-react-redux-amp-nodejs"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://www.udemy.com/share/101WIoBEMcdltaQX4=/"&gt;MERN Stack Front To Back: Full Stack React, Redux &amp;amp; Node.js&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8avg1qFO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/1646980_23f7_2.jpg%3Fsecure%3DrkQb-nTVhIPBvR5SCi-53A%253D%253D%252C1616742688" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8avg1qFO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/1646980_23f7_2.jpg%3Fsecure%3DrkQb-nTVhIPBvR5SCi-53A%253D%253D%252C1616742688" alt="MERN Stack Front To Back: Full Stack React, Redux &amp;amp; Node.js Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Build a full stack social network app with React, Redux, Node, Express &amp;amp; MongoDB&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create an extensive backend API with Express&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use Stateless JWT authentication practices&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Integrate React with an Express backend in an elegant way&lt;br&gt;
React Hooks, Async/Await &amp;amp; modern practices&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use Redux for state management&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deploy to Heroku with a postbuild script&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A good understanding of JavaScript &amp;amp; ES6 Fundamentals&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React &amp;amp; Node Basics&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 12h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/traversymedia"&gt;@traversymedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101WIoBEMcdltaQX4=/"&gt;https://www.udemy.com/share/101WIoBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#13-angular-amp-nodejs-the-mean-stack-guide-2021-edition"&gt;
  &lt;/a&gt;
  13. &lt;a href="https://www.udemy.com/share/101WISBEMcdltaQX4=/"&gt;Angular &amp;amp; NodeJS - The MEAN Stack Guide [2021 Edition]&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3MppZ-o7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/833442_b26e_5.jpg%3Fsecure%3D78UtHh2DkC45ymX_ifstYg%253D%253D%252C1616742370" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3MppZ-o7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/833442_b26e_5.jpg%3Fsecure%3D78UtHh2DkC45ymX_ifstYg%253D%253D%252C1616742370" alt="Angular &amp;amp; NodeJS - The MEAN Stack Guide [2021 Edition] Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Build real Angular + NodeJS applications&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand how Angular works and how it interacts with Backends&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Connect any Angular Frontend with a NodeJS Backend&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use MongoDB with Mongoose to interact with Data on the Backend&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use ExpressJS as a NodeJS Framework&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Provide a great user experience by using Optimistic Updating on the Frontend&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Improve any Angular (+ NodeJS) application by adding Error Handling&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Concepts behind NodeJS, Express, and MongoDB (with Mongoose) will be refreshed in this course but as this course is focused on the connection of these technologies with Angular, basic knowledge about them is strongly recommended&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is recommended to have beginner-level Angular knowledge, though this course will provide a detailed refresher and will explain the core concepts used in detail&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTML, CSS, and basic JavaScript knowledge is assumed throughout this course&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NO advanced or expert knowledge about any of these topics is assumed or required&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 12.5h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/maxedapps"&gt;@maxedapps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101YaQBEMcdltaQX4=/"&gt;https://www.udemy.com/share/101YaQBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#14-sveltejs-the-complete-guide-incl-sapperjs"&gt;
  &lt;/a&gt;
  14. &lt;a href="https://www.udemy.com/share/101YaQBEMcdltaQX4=/"&gt;Svelte.js - The Complete Guide (incl. Sapper.js)&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WvQRrIz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/2360566_d008.jpg%3F7ETEJS34VFMQuPY9RpqIaAjV57U1NC-YbD9YjkGBdGs6wlBWkjkvLvZWcCX4SAMUQ4iAH-1QpbzATjOltTuRIMq2mxH_YStH_iKY39L5jNF_SkAVG9zHRJDG2L4" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WvQRrIz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/2360566_d008.jpg%3F7ETEJS34VFMQuPY9RpqIaAjV57U1NC-YbD9YjkGBdGs6wlBWkjkvLvZWcCX4SAMUQ4iAH-1QpbzATjOltTuRIMq2mxH_YStH_iKY39L5jNF_SkAVG9zHRJDG2L4" alt="Svelte.js - The Complete Guide (incl. Sapper.js) Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;SvelteJS from scratch, with zero knowledge, assumed&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All the theory and practical applications of Svelte&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Core concepts and advanced techniques to build Svelte applications&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Basic JavaScript knowledge is required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NO prior knowledge about SvelteJS or any other JavaScript framework or library is required&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 12.5h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/maxedapps"&gt;@maxedapps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101YaQBEMcdltaQX4=/"&gt;https://www.udemy.com/share/101YaQBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#15-understanding-typescript-2021-edition"&gt;
  &lt;/a&gt;
  15. &lt;a href="https://www.udemy.com/share/1013yQBEMcdltaQX4=/"&gt;Understanding TypeScript - 2021 Edition&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hl5RAww7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/947098_02ec_2.jpg%3Fsecure%3D-L3_krZZAAIgZhtnMLBMrA%253D%253D%252C1616828798" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hl5RAww7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/947098_02ec_2.jpg%3Fsecure%3D-L3_krZZAAIgZhtnMLBMrA%253D%253D%252C1616828798" alt="Understanding TypeScript - 2021 Edition Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use TypeScript and its Features like Types, ES6 Support, Classes, Modules, Interfaces, and much more in any of their Projects&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand what TypeScript really is about and how it works&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Why TypeScript offers a real advantage over vanilla JavaScript&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn TypeScript both in theory as well as applied to real use-cases and projects&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn how to combine TypeScript with ReactJS or NodeJS / Express&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All Levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;JavaScript knowledge is required, though you don't need to be an Expert&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NO prior TypeScript experience is required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ES6 Knowledge is a plus but not required&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 13h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/maxedapps"&gt;@maxedapps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101YaQBEMcdltaQX4=/"&gt;https://www.udemy.com/share/101YaQBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#16-nextjs-amp-react-the-complete-guide"&gt;
  &lt;/a&gt;
  16. &lt;a href="https://www.udemy.com/share/104coMBEMcdltaQX4=/"&gt;Next.js &amp;amp; React - The Complete Guide&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f7NXfXa3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/3873464_403c.jpg%3FPgYTx1WndoGhEvwPWXuQkGPnqUawL71fZd1gt83vXhhP1x5h6Ydv638ofHq-F0ePBN0yq8M5zsdcpp2CBGMZuPjjAeFVO_7vmQmsAid_QZXlMU1VU9WIxZ-bfIw" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f7NXfXa3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/3873464_403c.jpg%3FPgYTx1WndoGhEvwPWXuQkGPnqUawL71fZd1gt83vXhhP1x5h6Ydv638ofHq-F0ePBN0yq8M5zsdcpp2CBGMZuPjjAeFVO_7vmQmsAid_QZXlMU1VU9WIxZ-bfIw" alt="Next.js &amp;amp; React - The Complete Guide Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Learn all key NextJS features like pre-rendering, SSR, data fetching, file-based routing, and authentication&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn how to build client-side and full-stack ReactJS apps with NextJS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build real projects and apply what you learned with hands-on projects and examples&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Take the full course or the "NextJS Summary" module for a quick start if you have limited time&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ReactJS knowledge is strongly recommended, but the course also includes a complete React refresher module&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NO prior NextJS knowledge is required&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 25h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/maxedapps"&gt;@maxedapps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/104coMBEMcdltaQX4=/"&gt;https://www.udemy.com/share/104coMBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#18-gatsby-tutorial-and-projects-course"&gt;
  &lt;/a&gt;
  18. &lt;a href="https://www.udemy.com/share/101XUABEMcdltaQX4=/"&gt;Gatsby Tutorial and Projects Course&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JodR1tY3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/2176554_3198_6.jpg%3F8j4K3EUNkaKXEZeDpCTTwlBKka-uqLdvYJMzygBwioUonekBV33ByY3ximzh2tMVRa6soxV2-a0oRMTtazr3XaHQrSFHSOb-behRpFABd8d2Xb3fJwjAiO12RHBJQA" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JodR1tY3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/2176554_3198_6.jpg%3F8j4K3EUNkaKXEZeDpCTTwlBKka-uqLdvYJMzygBwioUonekBV33ByY3ximzh2tMVRa6soxV2-a0oRMTtazr3XaHQrSFHSOb-behRpFABd8d2Xb3fJwjAiO12RHBJQA" alt="Gatsby Tutorial and Projects Course Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt; &lt;br&gt;
Create Blazingly Fast Websites/Projects with Gatsby&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;br&gt;
Basic Knowledge of React&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 22h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/john_smilga"&gt;@john_smilga&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101XUABEMcdltaQX4=/"&gt;https://www.udemy.com/share/101XUABEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#19-react-native-the-practical-guide-2021-edition"&gt;
  &lt;/a&gt;
  19. &lt;a href="https://www.udemy.com/share/101WauBEMcdltaQX4=/"&gt;React Native - The Practical Guide [2021 Edition]&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JEsgv3ps--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1436092_2024_4.jpg%3FgbdafGDgSi5QuGPCEuDJg7pVSPvzMElHKv5vqMrNmz54zUMDW1_Ox6JHAiGc50DPsQB2xDsUpVJcJcPOIuQUGWEnf6Djn4ikUGZKrqXkOoFMtmajK_NVaO14aj7TIg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JEsgv3ps--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1436092_2024_4.jpg%3FgbdafGDgSi5QuGPCEuDJg7pVSPvzMElHKv5vqMrNmz54zUMDW1_Ox6JHAiGc50DPsQB2xDsUpVJcJcPOIuQUGWEnf6Djn4ikUGZKrqXkOoFMtmajK_NVaO14aj7TIg" alt="React Native - The Practical Guide [2021 Edition]"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Build native mobile apps with JavaScript and React&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dive deeper into React Native&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Develop cross-platform (iOS and Android) mobile apps without knowing Swift, Objective-C or Java/ Android&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt;: All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;React knowledge is a must (but you absolutely DON'T have to be an expert)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JavaScript knowledge is a must, next-gen JavaScript knowledge (i.e. ES6+) is recommended&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NO Android/ Java or iOS (Swift, Objective-C) development experience is required&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 32.5h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/maxedapps"&gt;@maxedapps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101WauBEMcdltaQX4=/"&gt;https://www.udemy.com/share/101WauBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#20-flutter-amp-dart-the-complete-guide-2021-edition"&gt;
  &lt;/a&gt;
  20. &lt;a href="https://www.udemy.com/share/1013o4BEMcdltaQX4=/"&gt;Flutter &amp;amp; Dart - The Complete Guide [2021 Edition]&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qGcg_3Sl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1708340_7108_5.jpg%3FmYifuGfq7DtIsD8FAc9BEO2FgO8XDLWMWfzZm0nNM9L0qXM3NK6BzpZe9G8m7kveQV6aXYH-fcdo-PflEZB3MvASKIjl9vv63O2rYVFq3qdLIMUct28GZ0XQjVuL8g" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qGcg_3Sl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1708340_7108_5.jpg%3FmYifuGfq7DtIsD8FAc9BEO2FgO8XDLWMWfzZm0nNM9L0qXM3NK6BzpZe9G8m7kveQV6aXYH-fcdo-PflEZB3MvASKIjl9vv63O2rYVFq3qdLIMUct28GZ0XQjVuL8g" alt="Flutter &amp;amp; Dart - The Complete Guide [2021 Edition] Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Learn Flutter and Dart from the ground up, step-by-step&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build engaging native mobile apps for both Android and iOS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use features like Google Maps, the device camera, authentication and much more!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn how to upload images and how to send manual and automated push notifications&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn all the basics without stopping after them: Dive deeply into Flutter &amp;amp; Dart and become an advanced developer&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The basic programming language will help but is not a must-have&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can use either Windows, macOS, or Linux for Android app development - iOS apps can only be built on macOS though&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NO prior iOS or Android development experience is required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NO prior Flutter or Dart experience is required - this course starts at zero!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 41.5h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/maxedapps"&gt;@maxedapps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/1013o4BEMcdltaQX4=/"&gt;https://www.udemy.com/share/1013o4BEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#21-mongodb-the-complete-developers-guide-2021"&gt;
  &lt;/a&gt;
  21. &lt;a href="https://www.udemy.com/share/101WjABEMcdltaQX4=/"&gt;MongoDB - The Complete Developer's Guide 2021&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ysd3Trzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1906852_93c6_2.jpg%3FzvyYt2kHl_VZs332nq_qH8LJCVpgNXoPPLxVTiImzKKqYHquDvPmpJX99WkVSWBl5pWiWZuRLdAP4bCe9AFPqBR707vpmYc4CUTKlmGRr0vCaC-Y6OIqST4JZcsuVEeI" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ysd3Trzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1906852_93c6_2.jpg%3FzvyYt2kHl_VZs332nq_qH8LJCVpgNXoPPLxVTiImzKKqYHquDvPmpJX99WkVSWBl5pWiWZuRLdAP4bCe9AFPqBR707vpmYc4CUTKlmGRr0vCaC-Y6OIqST4JZcsuVEeI" alt="MongoDB - The Complete Developer's Guide 2021 Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use MongoDB to its full potential in future projects&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Write efficient and well-performing queries to fetch data in the format you need it&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use all features MongoDB offers you to work with data efficiently&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;NO prior knowledge of databases (of any kind) is required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;General web development or mobile development knowledge will help you but is not a must-have&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can use any operating system - Windows, macOS, Linux, it'll all work!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 17h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/maxedapps"&gt;@maxedapps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101WjABEMcdltaQX4=/"&gt;https://www.udemy.com/share/101WjABEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#22-nodejs-the-complete-guide-mvc-rest-apis-graphql-deno"&gt;
  &lt;/a&gt;
  22. &lt;a href="https://www.udemy.com/share/1013hoBEMcdltaQX4=/"&gt;NodeJS - The Complete Guide (MVC, REST APIs, GraphQL, Deno)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0F_ATkm4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/1879018_95b6_3.jpg%3Fsecure%3DwiOqDhx8Z4zd-NRfQoqxag%253D%253D%252C1616832041" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0F_ATkm4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/1879018_95b6_3.jpg%3Fsecure%3DwiOqDhx8Z4zd-NRfQoqxag%253D%253D%252C1616832041" alt="NodeJS - The Complete Guide (MVC, REST APIs, GraphQL, Deno) Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Work with one of the most in-demand web development programming languages&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn the basics as well as advanced concepts of NodeJS in great detail&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build modern, fast, and scalable server-side web applications with NodeJS, databases like SQL or MongoDB, and more&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand the NodeJS ecosystem and build server-side rendered apps, REST APIs, and GraphQL APIs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get a thorough introduction to DenoJS&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;General knowledge of how the web works is recommended but not a must-have&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic JavaScript knowledge is strongly recommended but could be picked up whilst going through the course&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NO NodeJS knowledge is required!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 40.5h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/maxedapps"&gt;@maxedapps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/1013hoBEMcdltaQX4=/"&gt;https://www.udemy.com/share/1013hoBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#23-ios-amp-swift-the-complete-ios-app-development-bootcamp"&gt;
  &lt;/a&gt;
  23. &lt;a href="https://www.udemy.com/share/101WsWBEMcdltaQX4=/"&gt;iOS &amp;amp; Swift - The Complete iOS App Development Bootcamp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--20rYzwyH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/1778502_f4b9_12.jpg%3Fsecure%3Dz1bChUF3YJwtAE6rzPFvqA%253D%253D%252C1616831604" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--20rYzwyH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-b.udemycdn.com/course/480x270/1778502_f4b9_12.jpg%3Fsecure%3Dz1bChUF3YJwtAE6rzPFvqA%253D%253D%252C1616831604" alt="iOS &amp;amp; Swift - The Complete iOS App Development Bootcamp Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Be able to build any app you want&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start your own app-based business&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a portfolio of apps to apply for junior developer jobs at a technology company&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Become a digital nomad by working as a freelance iOS developer&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn to work with Apple's latest UI Framework - SwiftUI&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Master creating Augmented Reality apps using Apple’s new ARKit&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create apps that use Machine Learning using Apple’s new CoreML&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Master app design so you'll know how to wireframe, mockup and prototype your app idea&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Master app marketing so you can publish your apps and generate downloads&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;No programming experience needed - I'll teach you everything you need to know&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A Mac computer running macOS 10.15 (Catalina) or a PC running macOS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No paid software required - all apps will be created in Xcode 11 (which is free to download)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;She'll walk you through, step-by-step how to get Xcode installed and set up&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 59.5h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/yu_angela"&gt;@yu_angela&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101WsWBEMcdltaQX4=/"&gt;https://www.udemy.com/share/101WsWBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#24-ionic-build-ios-android-amp-web-apps-with-ionic-amp-angular"&gt;
  &lt;/a&gt;
  24. &lt;a href="https://www.udemy.com/share/101WUoBEMcdltaQX4=/"&gt;Ionic - Build iOS, Android &amp;amp; Web Apps with Ionic &amp;amp; Angular&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zu9v6YhK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1070124_3a0f_4.jpg%3FyU-AA_DfV_xaPtD-phQzHk1rm_PXs7UBc0hIh35-IUVLw97ybB445TsM_Sc_7iyrbPSp5brgCz6BwjC8pv-cGUFvzyihJkWVhT7hnevOuEJpaBHUmJQ2ceG-9_Z4vQ" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zu9v6YhK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/1070124_3a0f_4.jpg%3FyU-AA_DfV_xaPtD-phQzHk1rm_PXs7UBc0hIh35-IUVLw97ybB445TsM_Sc_7iyrbPSp5brgCz6BwjC8pv-cGUFvzyihJkWVhT7hnevOuEJpaBHUmJQ2ceG-9_Z4vQ" alt="Ionic - Build iOS, Android &amp;amp; Web Apps with Ionic &amp;amp; Angular Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Build native apps and progressive web apps from one and the same codebase&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build native apps for iOS and Android, using Angular and the powerful features Ionic offers&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dive deeper into Ionic to learn more about core and advanced features&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test iOS and Android apps on real devices and publish those apps to the app stores of the two platforms&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Angular fundamentals are required, though a brief refresher is also provided in the course&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic HTML, JS, and CSS knowledge is required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NO advanced Angular knowledge is required&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 20h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://twitter.com/maxedapps"&gt;@maxedapps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101WUoBEMcdltaQX4=/"&gt;https://www.udemy.com/share/101WUoBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#25-2021-complete-python-bootcamp-from-zero-to-hero-in-python"&gt;
  &lt;/a&gt;
  25. &lt;a href="https://www.udemy.com/share/101W8QBEMcdltaQX4=/"&gt;2021 Complete Python Bootcamp From Zero to Hero in Python&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dPexaV7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/567828_67d0.jpg%3Fp-8xavwjX_jZZj0kopo3TwJV8I4l21xWOzVqi6bGps7LJw5g9kdJEPaE3SGYYQcijZSo_W30pDGcd71Wl7CgcEv0fOgGbZ2nn3lBsL1138FiSC7o4y-EJTzvFdZj" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dPexaV7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-a.udemycdn.com/course/480x270/567828_67d0.jpg%3Fp-8xavwjX_jZZj0kopo3TwJV8I4l21xWOzVqi6bGps7LJw5g9kdJEPaE3SGYYQcijZSo_W30pDGcd71Wl7CgcEv0fOgGbZ2nn3lBsL1138FiSC7o4y-EJTzvFdZj" alt="2021 Complete Python Bootcamp From Zero to Hero in Python Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What this course provides:&lt;/strong&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Learn to use Python professionally, learning both Python 2 and Python 3!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create games with Python, like Tic Tac Toe and Blackjack!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn advanced Python features, like the collections module and how to work with timestamps!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn to use Object Oriented Programming with classes!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand complex topics, like decorators.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand how to use both the Jupyter Notebook and create .py files&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get an understanding of how to create GUIs in the Jupyter Notebook system!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build a complete understanding of Python from the ground up!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Skill-level:&lt;/strong&gt; All levels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;br&gt;
Access to a computer with an internet connection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Duration:&lt;/strong&gt; 22h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Instructors:&lt;/strong&gt; &lt;a href="https://www.pieriandata.com/"&gt;Jose Portilla&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Link:&lt;/strong&gt; &lt;a href="https://www.udemy.com/share/101W8QBEMcdltaQX4=/"&gt;https://www.udemy.com/share/101W8QBEMcdltaQX4=/&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;PLEASE FOLLOW, LIKE, SHARE, AND COMMENT ANY COURSE YOU WOULD LIKE TO RECOMMEND&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://dev.to/garvitmotwani"&gt;Dev&lt;/a&gt; and &lt;a href="https://twitter.com/GarvitMotwani"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;You should also check:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/garvitmotwani" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1xnkyVuI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--0F4scheH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/370225/60416eff-f1ff-4a29-a5c9-2a13df7845c8.jpeg" alt="garvitmotwani image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/garvitmotwani/8-javascript-tips-tricks-that-no-one-teaches-24g1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;8 JavaScript Tips &amp;amp; Tricks That No One Teaches 🚀 + Giveaway&lt;/h2&gt;
      &lt;h3&gt;Garvit Motwani ・ Apr  6 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#es6&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/devlorenzo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pCohWvfe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8B-BJEvg--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/571015/e3d4ff5f-e11d-4538-bb83-9d3ce3e9dfb9.gif" alt="devlorenzo image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/worldindev/200-js-resources-to-master-programming-3aj6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;200+ JS Resources to master programming 💥  Cheat Sheet&lt;/h2&gt;
      &lt;h3&gt;DevLorenzo ・ Apr 20 ・ 19 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  ⚡ Giveaway ⚡
&lt;/h2&gt;

&lt;p&gt;We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
Steps to enter the giveaway&lt;br&gt;
--&amp;gt; React to this post&lt;br&gt;
--&amp;gt; &lt;a href="https://worldindev.ck.page/"&gt;Subscribe to our Newsletter&lt;/a&gt; &lt;strong&gt;&amp;lt;--&lt;/strong&gt; Very important&lt;/p&gt;




&lt;p&gt;Happy Coding.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Figma for Developers: 2 Simple Tips to Level Up Your Figma Game</title>
      <author>Moemin Mamdouh 👨‍💻</author>
      <pubDate>Thu, 22 Apr 2021 14:26:24 +0000</pubDate>
      <link>https://dev.to/codewell/figma-for-developers-2-simple-tips-to-level-up-your-figma-game-2ej2</link>
      <guid>https://dev.to/codewell/figma-for-developers-2-simple-tips-to-level-up-your-figma-game-2ej2</guid>
      <description>&lt;p&gt;Figma is a great tool to help you design landing pages quickly, but it isn't often used to it's fullest potential. This article will go over 3 simple tips that you can use to create better components for your landing pages.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-a-dynamic-button"&gt;
  &lt;/a&gt;
  Creating a dynamic button
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jqjZZ6Bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619098046143/dOBrCKOmo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jqjZZ6Bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619098046143/dOBrCKOmo.gif" alt="ezgif.com-video-to-gif.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1/ Type in your text as you normally would.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Sq7-OTW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619098657814/5nWjyC5Z6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Sq7-OTW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619098657814/5nWjyC5Z6.gif" alt="ezgif.com-video-to-gif-2.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2/ Click Shift + A on the text layer, this will make it an auto-layout frame.&lt;/p&gt;

&lt;p&gt;3/ Adjust the padding and alignment in the 'Alignment and padding' window on the right. Also add in your button's color by adding a Fill.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g62PZ1Qc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619098889958/u21J369li.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g62PZ1Qc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619098889958/u21J369li.gif" alt="ezgif.com-video-to-gif-3.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it, you've created a button will retain alignment and padding even if you change the text inside.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-a-reusable-button"&gt;
  &lt;/a&gt;
  Creating a reusable button
&lt;/h1&gt;

&lt;p&gt;1/ Right click on the auto-layout frame you've just created and click 'Create component'&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6gWyIz1M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619099065895/hTkHdIk_Q.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6gWyIz1M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619099065895/hTkHdIk_Q.gif" alt="ezgif.com-video-to-gif-4.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2/ Copy paste the button anywhere in your design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CtafmhHw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619099183595/UYsHYk91r.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CtafmhHw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619099183595/UYsHYk91r.gif" alt="ezgif.com-video-to-gif-5.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3/ When you apply any changes to the original component, it affects all child components. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qVJgcnGy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619099362104/XVjmI2EXb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qVJgcnGy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619099362104/XVjmI2EXb.gif" alt="ezgif.com-video-to-gif-6.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These 2 simple tips will speed up your workflow &lt;strong&gt;a lot&lt;/strong&gt;, not to mention you can use this same technique for any component, not just buttons. Give it a shot next time you're designing something on Figma!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
    </item>
    <item>
      <title>Coding Advice I Wish I'd Trusted Earlier</title>
      <author>Sandra Spanik</author>
      <pubDate>Thu, 22 Apr 2021 14:03:37 +0000</pubDate>
      <link>https://dev.to/sanspanic/coding-advice-i-wish-i-d-trusted-earlier-f1f</link>
      <guid>https://dev.to/sanspanic/coding-advice-i-wish-i-d-trusted-earlier-f1f</guid>
      <description>&lt;p&gt;I've recently celebrated my 1 year anniversary of picking up coding. A lot has changed in the past year, and I've been fortunate enough to recently get hired by a tech company for my very first software engineering role.&lt;/p&gt;

&lt;p&gt;I know, I know... There's a plethora of advice articles like these out there, as was the case a year ago. &lt;strong&gt;Despite having read many myself when I was starting out, I remember being dismissive of some their advice, especially in cases where it was misaligned with my pre-existing intuitions.&lt;/strong&gt; &lt;em&gt;Umm, how about I ignore 24 different articles I've read that advise me to do a thing and instead proceed NOT to do it, thanksss.&lt;/em&gt; 💅 &lt;/p&gt;

&lt;p&gt;For example, having an online presence seemed a yucky and unnecessary waste of time. I'm now glad I re-examined my stance, because I was approached for my current position by a recruiter on LinkedIn. This wouldn't have happened, had I stubbornly clung to my notion that I can do this my own way without resorting to what I at the time considered to be nauseating concepts such as digital self-marketing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, in full acknowledgement that the body of literature is already vast, I'll add another voice "from the other side", in the hope that I might convince someone as stubborn as I was to give the below advice some consideration.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Without further ado, here's the advice I'd give my younger self as well as anyone else starting on their coding journey.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-consider-whether-a-bootcamp-is-right-for-you"&gt;
  &lt;/a&gt;
  1. Consider Whether a Bootcamp is Right for You 🗺️
&lt;/h2&gt;

&lt;p&gt;Do you need to attend a bootcamp in order to learn to code? Absolutely not. Are all the resources you need to learn to code available online for free? Absolutely yes. So, will you still benefit from completing a bootcamp? 🤔 Also yes! &lt;strong&gt;A curriculum designed by expert teachers will make it easier to learn things in the right order and avoid diving into topics that require pre-existing knowledge.&lt;/strong&gt; For example, you should really start by learning vanilla JavaScript and regular DOM manipulation before exploring React. Otherwise, your mental model of how the frontend works will be lacking. &lt;/p&gt;

&lt;p&gt;But bootcamps are a GIANT commitment. &lt;strong&gt;Before you dish out money and scale back other responsibilities to make time for what is a very intense experience - please make sure you actually like coding.&lt;/strong&gt; This might seem self-explanatory, but there is a surprising amount of students who invest money and time prior to making sure they have a long-term interest in the subject. &lt;/p&gt;

&lt;p&gt;Thankfully, a lot of cheap Udemy or free Youtube tutorials exist to help with this. &lt;strong&gt;Having a solid mental model of a programming language will set you up for success and make it easier to keep up with a bootcamp's fast pace.&lt;/strong&gt; I started with &lt;a href="https://www.udemy.com/course/the-modern-python3-bootcamp/"&gt;Colt Steele's Udemy Modern Python Bootcamp&lt;/a&gt;, then continued with his &lt;a href="https://www.udemy.com/course/the-web-developer-bootcamp/"&gt;Web Development Bootcamp&lt;/a&gt; before enrolling in an actual bootcamp. I could go on about what an excellent teacher with equally excellent pet-naming conventions Colt is (&lt;em&gt;his chicken is called Stevie Chicks, guys, need I say more&lt;/em&gt;), but I'd only sound like a silly fan-girl. Instead, I will leave you with the names of some equally great instructors who also offer high-quality free or cheap courses: &lt;a href="https://www.udemy.com/course/100-days-of-code/"&gt;Angela Yu&lt;/a&gt;, &lt;a href="https://www.udemy.com/course/the-complete-web-developer-zero-to-mastery/"&gt;Andrei Neagoie&lt;/a&gt;, &lt;a href="https://www.udemy.com/course/python-for-data-science-and-machine-learning-bootcamp/"&gt;Jose Portilla&lt;/a&gt;, but the list goes on. &lt;/p&gt;

&lt;p&gt;2020 might have brought a pandemic, Zoom meetings and Cyberpunk 2077, but it has also graced us with an ever-increasing amount of online content creators putting out accessible courses. Take your pick! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-choose-the-right-bootcamp"&gt;
  &lt;/a&gt;
  2. Choose the Right Bootcamp 💻
&lt;/h2&gt;

&lt;p&gt;If you are going down the bootcamp route (and your success doesn't by any means hinge on this, there are other ways), a word of warning: &lt;strong&gt;choose your bootcamp carefully&lt;/strong&gt;. I could write a whole article on solid criteria to judge a bootcamp by (&lt;em&gt;should I? Let me know in the comments&lt;/em&gt;), but ultimately, some of these will be subjective. Different teaching styles and curriculums suit different circumstances and learning styles. &lt;strong&gt;Personally, I was glad to have steered clear of bootcamps that either don't have an entry exam, or have an extremely easy one&lt;/strong&gt; (e.g. "write a function that returns the sum of 2 numbers", or "return the first item in this array"). Bootcamps typically last anywhere between 3 to 9 months, and I am mistrustful of curriculums that promise to teach you all you need to know in a junior role within this time period without requiring any pre-requisites on your part. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I'm also sceptical of bootcamps that teach more than 2 languages&lt;/strong&gt; - you might end up replacing depth of understanding with breadth and leave the bootcamp not feeling confident you can actually fully utilise the tools you now list on your CV. A good way to judge the quality of a bootcamp is to find graduates and look at their projects or portfolio sites - you might need to do some LinkedIn, Github or Twitter stalking to gather a large enough sample size to conclusively determine a bootcamp's quality. Connecting with and speaking with ex-students is also a great idea. &lt;/p&gt;

&lt;p&gt;Lastly, check out &lt;a href="https://www.switchup.org/"&gt;SwitchUp&lt;/a&gt; and &lt;a href="https://www.coursereport.com/"&gt;Coursereport&lt;/a&gt; for rankings and reviews. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-create-a-linkedin-profile-early"&gt;
  &lt;/a&gt;
  3. Create a LinkedIn Profile - Early 👔
&lt;/h2&gt;

&lt;p&gt;Whether you've chosen to do a bootcamp or are a brave self-learner, &lt;strong&gt;do not underestimate the power of networking&lt;/strong&gt;. This one was the toughest piece of advice for me to digest, and I kept putting off creating a LinkedIn profile until my bootcamp's career service basically forced me to. For many of us, networking feels icky, digital self-promotion is a nauseating concept, and creating a LinkedIn profile feels akin to selling our soul to the devil. I, too, felt this way, and to a certain degree still do - I don't like living in a world which incentivises us shouting about our achievements from the top of our lungs and essentially marketing ourselves as products. &lt;/p&gt;

&lt;p&gt;But LinkedIn also got me a job and connected me with many seriously impressive people. There's no two ways about it - &lt;strong&gt;if you're trying to break into tech via an unconventional route, you will benefit from having a LinkedIn account&lt;/strong&gt;. Make sure your bio is well-written, concise and that you list any previous experience you might have, regardless of whether or not it is tech-related. The idea is that by the time you are ready for a job, you will already have a network of contacts and a history of consistently demonstrating your tech capabilities online, be it via deployed applications, posts or articles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-write-about-your-learning-early"&gt;
  &lt;/a&gt;
  4. Write About Your Learning - Early 🖋️
&lt;/h2&gt;

&lt;p&gt;This was another oft-repeated piece of advice I was initially sceptical about. &lt;em&gt;What could I possibly contribute to the body of coding literature that hasn't already been said, by people a million times more qualified than me, a lowly degree-less peasant?&lt;/em&gt; I started writing articles about my learning relatively late, once I had already moved on from most backend topics. So from the outside, my online presence seems focused exclusively on frontend, and I had to convince my future full-stack role employer that I was equally, if not more, interested in backend. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If I could do it all again, I would definitely start writing way earlier.&lt;/strong&gt; If you're put off by the fact that you don't know much yet and might make mistakes - don't be. No matter what you write about, chances are, someone out there will read your content and find it informative. More importantly, by writing about topics you're not expert on, you (hopefully) end up researching them more in-depth than you would otherwise. &lt;/p&gt;

&lt;p&gt;Plus, if you make a mistake, people will let you know in the comments, and you'll have the opportunity to correct your mistake and learn. I cannot stress enough how helpful it is to write stuff out - I really wish I had started earlier, and my aim will be to continue writing, even as I transition into a full-time role, because &lt;strong&gt;I now know that it's an excellent way to solidify new knowledge.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-learn-version-control-earlyish"&gt;
  &lt;/a&gt;
  5. Learn Version Control - Early(ish) 📁
&lt;/h2&gt;

&lt;p&gt;Having a history of committing your code on Github is the easiest way to demonstrate your skills to recruiters. At some point, you will want to start uploading the exercises you complete to Github. Even though I started coding in April 2020, I didn't upload much to Github until November 2020, which is when my bootcamp started encouraging me to do so. What a waste, by then I had created at a fair few full-stack applications that the world will never get to see! (&lt;em&gt;They're terrible. The world lucked out.&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;I should have started earlier, perhaps 2 months in. &lt;strong&gt;Learning Git can be confusing at first, so I would wait until I have a basic understanding of a programming language in order not to overwhelm myself.&lt;/strong&gt; But a couple of months in, Git becomes a necessity. Once again, &lt;a href="https://www.youtube.com/results?search_query=learn+git"&gt;Youtube&lt;/a&gt; comes to the rescue. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-focus-your-energy-where-it-matters"&gt;
  &lt;/a&gt;
  6. Focus Your Energy Where It Matters ⏱️
&lt;/h2&gt;

&lt;p&gt;If you're not just coding for the fun of it, but also aim to transition into the industry professionally, &lt;strong&gt;consider scaling back as many other commitments as you are able to&lt;/strong&gt;. I'm aware this won't always be possible, for example, if you're a parent or relying on income from a full-time job (&lt;em&gt;in which case you're an absolute trooper and my admiration for you doing all that AND re-skilling has no bounds&lt;/em&gt;). In my experience, there will come a time when you will start feeling compelled to make some tough decision about whether or not to give up other areas in your life to focus more on coding. &lt;/p&gt;

&lt;p&gt;In my case, half-way through my (remote-first) bootcamp, I had to give up not one, but two part-time gigs that were keeping me afloat and rely on government assistance instead. It felt risky, and I also felt like I was letting people down by leaving my roles, but it has proved to be the right long-term move and I am proud of myself for having let go at the right time. It's a tough thing to do. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As with any skill, the more time and energy you spend on learning it, the better.&lt;/strong&gt; It's a bit of a no-brainer, really. The difficult part is recognising, in real time, what truly matters and what can be filtered out. I hope it helps to know that if you're struggling to meet all your commitments alongside learning to code - you're not alone, many of us have been in a similar situation. &lt;strong&gt;There's no shame in letting go of jobs, hobbies or relationships that eat up our time and energy without giving much in return.&lt;/strong&gt; In fact, it's a brave thing to do. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-taking-breaks-is-key"&gt;
  &lt;/a&gt;
  7. Taking Breaks is Key 💤
&lt;/h2&gt;

&lt;p&gt;Having said this, increasing coding time doesn't always proportionally translate into more success - there is a limit, in my experience, to how much brain power one should devote to coding per day. This might vary on a case-by-case basis, but for me, this meant disengaging in the evenings and taking weekends off. We all operate optimally at different times of the day, so by all means follow your own circadian rhythm, but bear in mind that an overworked brain rarely produces good code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iy009215--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhi6fyoa2chcv5ys3mob.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iy009215--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhi6fyoa2chcv5ys3mob.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, I take my breaks very seriously. I took Christmas off, and I barely ever code on weekends. &lt;strong&gt;This strategy will hopefully help me, in the long-run, prevent burnout and help me retain my child-like fascination for writing code.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;What I was initially terrible at is knowing when to stop. There were days when I kept staring into my screen, frantically fixing fearsome bugs at night-time, after already having worked since the morning. Reliably, I'd fix a bug I was stuck on for many evening hours the previous day within the first 30 minutes in the morning. Equally reliably, next time, I'd tell myself that &lt;em&gt;this time is different&lt;/em&gt; and &lt;em&gt;this time I'll fix the bug in the evening, if I only spend 10 more minutes on it&lt;/em&gt;. &lt;strong&gt;Giving up and calling it a day was a difficult skill to learn - one that I am still perfecting.&lt;/strong&gt;  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-mindset-matters-more-than-you-might-think"&gt;
  &lt;/a&gt;
  8. Mindset Matters More Than You Might Think 🧠
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;You can learn anything, if you only believe it.&lt;/strong&gt; This is not a vapid platitude, but our actual current scientific understanding of &lt;a href="https://www.verywellmind.com/what-is-brain-plasticity-2794886"&gt;neuroplasticity&lt;/a&gt;. Each time you learn, your brain forms, strengthens or rearranges neural pathways. This means you have the power to actively and purposefully shape the physical outline of your brain - &lt;em&gt;how cool is that&lt;/em&gt;. The belief that people can't change is not only archaic and wrong, it is also dangerous and leads individuals to accept malleable traits and skills as unchangeable constants. &lt;/p&gt;

&lt;p&gt;There is a slight snag though - in order to learn best, it is beneficial to adopt the belief that you &lt;strong&gt;CAN&lt;/strong&gt;, indeed, learn. Dismantle limiting beliefs such as "&lt;em&gt;coding is similar to Maths and I'm just not a Maths person&lt;/em&gt;" or "&lt;em&gt;I will never be expert at coding because I started too late in life&lt;/em&gt;", and you will have a better time learning. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Intelligence is not set at birth.&lt;/strong&gt; Trust me, I wrote a dissertation in Psychology. Or don't, because let's face it, writing a dissertation in something years ago doesn't make you an expert. But do trust current academics. While there is an ongoing debate about the extent to which our genes predetermine our cognitive ability, the fact that any individual can greatly shape their intelligence is no longer disputed - not even a little. Having the belief that intelligence is not fixed but can instead be developed through our own efforts is also referred to as the &lt;a href="https://www.psychologytoday.com/gb/blog/click-here-happiness/201904/15-ways-build-growth-mindset"&gt;&lt;strong&gt;growth-mindset&lt;/strong&gt;&lt;/a&gt;. That's the mindset you want to apply to coding as well. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-no-programming-is-not-easy-and-thats-great"&gt;
  &lt;/a&gt;
  9. No, Programming is Not Easy, And That's Great 🏃‍♀️
&lt;/h2&gt;

&lt;p&gt;Another beneficial expectation to keep in mind is that programming is hard. &lt;strong&gt;Don't expect it to be otherwise.&lt;/strong&gt; It's really not easy to pick up coding from scratch, especially for someone who has never done anything like it before. It's a completely new way of thinking, and the ability to reason effectively about abstract concepts takes a while to develop. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't get discouraged by this fact - it's completely normal to struggle and to need to revisit concepts you thought you already mastered over and over again.&lt;/strong&gt; With time, you will get better at asking the right questions and knowing exactly what it is you don't know, but don't ever expect yourself to know all the answers off the top of your head. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e34DmEiX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/37i6vbcu3t7fmrxz92h1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e34DmEiX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/37i6vbcu3t7fmrxz92h1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-lets-normalise-tears"&gt;
  &lt;/a&gt;
  10. Let's Normalise Tears 💧
&lt;/h2&gt;

&lt;p&gt;This final piece of advice is intended for me as much as it is intended for you. &lt;strong&gt;It's okay to feel things as you code&lt;/strong&gt;, especially as you encounter challenging situations - of which there will be many. It's okay to feel joyous at successfully deploying an app, and it's equally okay to feel sad when CORS strikes again and things don't work. &lt;/p&gt;

&lt;p&gt;Different people have different emotional spans. For cultural and, frankly, sexist reasons, the industry has typically attracted a certain type of person. You wouldn't normally associate this type of person with displaying a wide array of emotions. (&lt;em&gt;An oversimplified generalisation, but it will do for the purposes of this article&lt;/em&gt;). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nowadays, things are changing, and as a more diverse workforce enters the industry, I hope we gradually normalise feelings in a software engineering context.&lt;/strong&gt; I, for one, feel things intensely on either end of the emotional spectrum, and I want to rid myself of the notion that displaying either positive or negative feelings is in some way &lt;em&gt;shameful&lt;/em&gt;, or a sign of weakness. On the contrary, bringing feelings and empathy to a coding context is a bonus, because after all, the people using our software are just that - &lt;strong&gt;people&lt;/strong&gt;, and being able to put ourselves in their shoes can only enhance a product. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you will find the above advice useful. I recognise that we're all unique individuals, and as such our "best coding practices" might vary. What worked for me might not necessarily work for you. If, for example, you're the kind of person that doesn't mind working long hours and weekends, you might be able to get where I am now in half the time. But on average, I believe above advice to be general enough to apply to a large proportion of people reading this. &lt;/p&gt;

&lt;p&gt;Thanks for reading, and happy coding! &lt;em&gt;Or sad coding, for that matter. Your feelings are valid, whatever they might be.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#just-know-that-youve-got-this"&gt;
  &lt;/a&gt;
  Just know that you've got this! ✨💪
&lt;/h2&gt;

</description>
      <category>beginners</category>
      <category>career</category>
      <category>javascript</category>
      <category>python</category>
    </item>
    <item>
      <title>A new way to chat and unblock discord</title>
      <author>UnixByX</author>
      <pubDate>Thu, 22 Apr 2021 14:00:51 +0000</pubDate>
      <link>https://dev.to/unixbyx/a-new-way-to-chat-and-unblock-discord-5deb</link>
      <guid>https://dev.to/unixbyx/a-new-way-to-chat-and-unblock-discord-5deb</guid>
      <description>&lt;p&gt;This might be against TOS but here's an idea: You can create an html application in repl.it or vsc and attempt to make a chat client. But here's the catch, You can't login with your original email and password, (because of captcha and won't register using the chat client) so you need to enter your account token in order to log into discord which is very possible doing that through console if you are aware. This is just an idea that popped up in my head hopefully this gives you an idea. Btw I found a way to prevent content filtering. The reason I said to make an html file is because you can actually download it on your school chromebook and open it inside your browser and it will run. Hopefully this helps :) Btw I have this same problem and I depend on discord right now. One bypass is downloading BetterDiscordPanel but you need someone on the other side to invite your bot to chat with them. First you need to go to &lt;a href="https://github.com/SanjaySunil/BetterDiscordPanel"&gt;https://github.com/SanjaySunil/BetterDiscordPanel&lt;/a&gt; then download as zip. Go to my files and right click and make a new folder. Go to recent and open the zip file. do ctrl + a and click, hold and drag to the folder. You need your phone or something and email yourself your discord bot token which you can find tutorial on youtube about it. Also search how to create a discord bot invite and send the invite on your phone to your friends and tell them to invite it (you need a bot application at discord dev portal btw). Go back to your files and go to where you copy and pasted the files to the folder. Search through the folder until you found index.html. Double click it and it should open. Now it requires you to enter your bot token. Go back into your email and copy paste the bot token. Once you are in, now go click the server your bot is in and go to the channel where you chat at. These messages and bypasses are all being done on this chromebook I am using right now :) This works 100% and you won't be able to find a bypass like this on youtube or anywhere else I found this bypass myself :)))&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>easy</category>
    </item>
    <item>
      <title>Creating a simple game with PhaserJS</title>
      <author>Julien Gabriel</author>
      <pubDate>Thu, 22 Apr 2021 13:54:46 +0000</pubDate>
      <link>https://dev.to/buyzooka/creating-a-simple-game-with-phaserjs-95g</link>
      <guid>https://dev.to/buyzooka/creating-a-simple-game-with-phaserjs-95g</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yBWB53Xa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bb2umhm1us8yq741v99.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yBWB53Xa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bb2umhm1us8yq741v99.png" alt="Phaser header"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;We are about to talk about how we did create a simple game with &lt;strong&gt;PhaserJS&lt;/strong&gt; and also why we did it. &lt;/p&gt;

&lt;p&gt;We will talk only about front-end part (the game here) and  skip the backend.&lt;/p&gt;

&lt;p&gt;Back to the game, what we want to create is a 2D game where our player must avoid and/or catch falling items. We will use a Typescript version boilerplate for this tutorial.&lt;br&gt;
Side advice, keep this docs near you : &lt;a href="https://newdocs.phaser.io/docs/3.54.0"&gt;https://newdocs.phaser.io/docs/3.54.0&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Step 1 : Game settings and main scene 🎛&lt;/li&gt;
&lt;li&gt;Step 2 : Player and basic interactions 🤾‍♂️&lt;/li&gt;
&lt;li&gt;Step 3 : Enemies ans collectibles 👾&lt;/li&gt;
&lt;li&gt;Step 4 : Boss 😱&lt;/li&gt;
&lt;li&gt;Step 5 : Game difficulties 😌 -&amp;gt; 🤬&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Repository at the end&lt;/li&gt;
&lt;li&gt;Playable version at the end&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#step-1-game-settings-and-main-scene-%F0%9F%8E%9B"&gt;
  &lt;/a&gt;
  Step 1 : Game settings and main scene 🎛
&lt;/h2&gt;

&lt;p&gt;First things first, we need to setup our game based on PhaserIO docs. Use index.html (or whatever file you want as entry point for your project) &lt;br&gt;
Inside this file, you'll only need to import inside your &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; your game file (javascript):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"user-scalable=0"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"game.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Game config is quite simple as we are just putting basic settings, like the kind of physics, background color and gravity. Start scene is set to Main (it will be our main file for next steps).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;phaser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./scenes/Main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#f4f4f6&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;dom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;createContainer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gameContainer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;arcade&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;arcade&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;gravity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AUTO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Game&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;For this tutorial we want to create a game that will be designed to work on smartphone. The main purpose is to move our player (a spaceship) from left and right in order to avoid enemies and catch collectibles. We will set up : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;enemy 1 : spam (looks like virus)&lt;/li&gt;
&lt;li&gt;enemy 2 : boss like (looks like evil)&lt;/li&gt;
&lt;li&gt;collectible 1 : bike&lt;/li&gt;
&lt;li&gt;collectible 2 : computer&lt;/li&gt;
&lt;li&gt;collectible 3 : smartphone&lt;/li&gt;
&lt;li&gt;collectible 4 : shoes&lt;/li&gt;
&lt;li&gt;collectible 5 : camera&lt;/li&gt;
&lt;li&gt;collectible 6 : Shield (will protect our player from enemy 1)
Obviously all sprites are found on internet for free and/or created by ourself. Please be indulgent on graphics quality! &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#step-2-player-and-basic-interactions"&gt;
  &lt;/a&gt;
  Step 2 : Player and basic interactions 🤾‍♂️
&lt;/h2&gt;

&lt;p&gt;Here we will set our main scene on which we will insert a move our player but also our enemies and collectibles.&lt;br&gt;
As declared in step 1, we make our game start on Main scene.&lt;br&gt;
Our player is supposed to move from left to right but not able to move forward/backward. Game play will be quite easy as it's based on keyboard left/right arrows or on screen touch (if in left half, then move to the left).&lt;br&gt;
Player will start with 3 lives and a score of 0 point. We choose to display texts on bottom corners to summarize this data.&lt;/p&gt;

&lt;p&gt;We've also set a circle "hit box" around the player object equivalent to half its width as a radius. It means that every collision happening between player and other object will be done on a "circle".&lt;/p&gt;

&lt;p&gt;This is our Main scene start :&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;activePointer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;levelText&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;livesText&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;player&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;scaleRatio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;scoreText&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scaleRatio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;devicePixelRatio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;preload&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ship&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;assets/sprites/ship.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cameras&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setBackgroundColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#0d0d21&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cursors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyboard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createCursorKeys&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initPlayer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initText&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lives&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Game over.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handlePlayerUpdate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scoreText&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Score: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;score&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;livesText&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Lives: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lives&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;levelText&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Level: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;level&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Init scene data
     */&lt;/span&gt;
    &lt;span class="nx"&gt;initData&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;score&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lives&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;level&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Init player with hitbox and movable attributes
     */&lt;/span&gt;
    &lt;span class="nx"&gt;initPlayer&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ship&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCircle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setImmovable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCollideWorldBounds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Init all texts on screen that displays scene data
     */&lt;/span&gt;
    &lt;span class="nx"&gt;initText&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scoreText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`Score: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;score&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;livesText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`Lives: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lives&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;levelText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`Level: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;level&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Handle player mouvements
     */&lt;/span&gt;
    &lt;span class="nx"&gt;handlePlayerUpdate&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;activePointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;activePointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setVelocityX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cursors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isDown&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;activePointer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isDown&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;activePointer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setVelocityX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRotation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cursors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isDown&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;activePointer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isDown&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;activePointer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setVelocityX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRotation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRotation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Update loop is used to run update on scene on every game tick. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-3-enemies-and-collectibles"&gt;
  &lt;/a&gt;
  Step 3 : Enemies and collectibles 👾
&lt;/h2&gt;

&lt;p&gt;At the end of step 2, we are able to get our player spawned in our Main scene and able to move from left to right. But we do agree, it's quite useless if we don't add any goal, and also... enemies 😈&lt;/p&gt;

&lt;p&gt;In opposition to our player, we want to spawn collectibles and enemies every X seconds. Enemies will make player loose one life and collectibles make him win points.&lt;/p&gt;

&lt;p&gt;We will create several timer that will perform an action every defined time. One time to make an enemy spawn, one to make a collectible appear. We will play later on this timer to increase difficulty (step 5!)&lt;/p&gt;

&lt;p&gt;** &lt;strong&gt;THIS IS THE BIGGEST STEP&lt;/strong&gt; **&lt;br&gt;
We are only showing new code to append to Main scene (see repo at the end to full source code)&lt;/p&gt;

&lt;p&gt;Basically, we are adding 3 timers : &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Collectibles spawn (earn points)&lt;/li&gt;
&lt;li&gt;Enemies spawn (loose lives)&lt;/li&gt;
&lt;li&gt;Buyzooka item (earn Buyzooka's shield to be protected against spam)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you can see it's an allegory of online shopping... Buying one time = getting spammed life time. And our product protects you against that.&lt;/p&gt;

&lt;p&gt;In every timer, we call one creation method, one per kind of game object. We do a random choose about collectibles for appearance in order to make it more realistic.&lt;/p&gt;

&lt;p&gt;As as last step, in update loop we need to take care of every collision happening inside the scene. Like : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spam hitting player (loose 1 life)&lt;/li&gt;
&lt;li&gt;Collectible hitting player (win 50 points)&lt;/li&gt;
&lt;li&gt;Buyzooka item hitting player (set shied to true)&lt;/li&gt;
&lt;li&gt;Spam hitting protected player (win 5 points)
Collision are managed by colliders.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also destroy items since they are supposed to disappear visually from scene.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// See step 1 attribute and append those ones&lt;/span&gt;
    &lt;span class="nl"&gt;buyzookaObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Group&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;buyzookaItemTimedEvent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TimerEvent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;productKeys&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bike&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;camera&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;computer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;shoes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;smartphone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="nl"&gt;productObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Group&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;productTimedEvent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TimerEvent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;spamObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Group&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;spamTimedEvent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TimerEvent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;playerHasShield&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See Step 1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;preload&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 1 preload + those new onees&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productKeys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`assets/sprites/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.png`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;buyzooka&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;assets/sprites/buyzooka.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;spam&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;assets/sprites/spam.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See step 1 and add this method&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startLevel1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See step 1 update method and add this&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkIfSpamHitsBoundaries&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkIfBuyzookaItemHitsGround&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkIfProductHitsGround&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;initData&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See step 1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initPlayer&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initText&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Level 1 start
     */&lt;/span&gt;
    &lt;span class="nx"&gt;startLevel1&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initSpamSpawn&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initBuyzookaSpawn&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initProductSpawn&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Handle player mouvements
     */&lt;/span&gt;
     &lt;span class="nx"&gt;handlePlayerUpdate&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;activePointer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;activePointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setVelocityX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cursors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isDown&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;activePointer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isDown&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;activePointer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setVelocityX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRotation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cursors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isDown&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;activePointer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isDown&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;activePointer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setVelocityX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRotation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRotation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Init spam spawn 
     */&lt;/span&gt;
    &lt;span class="nx"&gt;initSpamSpawn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spamObjectsGroup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;defaultKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;spam&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;collideWorldBounds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spamTimedEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createSpam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spamObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spamHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Init buyzooka item spawn
     */&lt;/span&gt;
    &lt;span class="nx"&gt;initBuyzookaSpawn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buyzookaObjectsGroup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;defaultKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;buyzooka&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;collideWorldBounds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buyzookaObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scaleXY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scaleRatio&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scaleRatio&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buyzookaItemTimedEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createBuyzookaItem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buyzookaObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buyzookaItemHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Init product spawn
     */&lt;/span&gt;
    &lt;span class="nx"&gt;initProductSpawn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productObjectsGroup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;defaultKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;shoes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scaleXY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scaleRatio&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scaleRatio&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productTimedEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Create a spam in scene
     */&lt;/span&gt;
     &lt;span class="nx"&gt;createSpam&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;spam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spamObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getRandomX&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCircle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bounce&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Create buyzooka item in scene
     */&lt;/span&gt;
    &lt;span class="nx"&gt;createBuyzookaItem&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;playerHasShield&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buyzookaItemTimedEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buyzookaObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getRandomX&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCircle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Create product in scene
     */&lt;/span&gt;
    &lt;span class="nx"&gt;createProduct&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getRandomX&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getRandomProductKey&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCircle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Handle spam mouvement and destroy when hitting scene boudaries
     */&lt;/span&gt;
    &lt;span class="nx"&gt;checkIfSpamHitsBoundaries&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;spams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spamObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getChildren&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;spams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;spam&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;spamObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;spam&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;spamObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;spamObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;
                &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;spamObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;spamObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; 
                &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;spamObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;spamObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spamObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Remove buyzooka's item when hit the ground
     */&lt;/span&gt;
    &lt;span class="nx"&gt;checkIfBuyzookaItemHitsGround&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buyzookaObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getChildren&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;itemObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;itemObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;itemObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buyzookaObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Remove product when hit the ground
     */&lt;/span&gt;
    &lt;span class="nx"&gt;checkIfProductHitsGround&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getChildren&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;productObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;productObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;productObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;playerHasShield&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;decrementsLives&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Triggered when spam hits player
     * 
     * @param player 
     * @param spam 
     */&lt;/span&gt;
     &lt;span class="nx"&gt;spamHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;playerHasShield&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addScore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;decrementsLives&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spamObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Triggered when buyzooka's item hits player
     * 
     * @param player 
     * @param item 
     */&lt;/span&gt;
    &lt;span class="nx"&gt;buyzookaItemHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;playerHasShield&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;playerHasShield&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setTexture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;shielded_ship&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buyzookaObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Triggered when product hits player
     * 
     * @param player 
     * @param product 
     */&lt;/span&gt;
    &lt;span class="nx"&gt;productHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addScore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Add points to player's score
     * 
     * @param points 
     */&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;addScore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;score&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Decrement player's remaining lives
     */&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;decrementsLives&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lives&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#step-4-boss"&gt;
  &lt;/a&gt;
  Step 4 : Boss 😱
&lt;/h2&gt;

&lt;p&gt;The game is now running in a very basic way : catch items and avoid spams.&lt;br&gt;
We want now to add some difficulty by adding a boss (or several 😈). Again we are doing a parallel with real life.&lt;/p&gt;

&lt;p&gt;Our boss character is supposed to act like a big marketplace (that everyone knows). He will "eat" literally all collectibles (so you won't get points). But Buyzooka's shield can help you to make war to this and give back power to small/local retailers.&lt;/p&gt;

&lt;p&gt;Here we will add a loop, as for enemies and collectibles/item to make it appears and manage every new collision on Main scene :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;boss hits player&lt;/li&gt;
&lt;li&gt;boss hits collectible
Side info, we've called the boss "Amazin". He's not supposed to appear only one time, but in loop and probably several occurence at a time if you're not fast enough.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a summary at step 3 you must :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;catch collectible to win point&lt;/li&gt;
&lt;li&gt;avoid collectible to hit the ground (loose lives)&lt;/li&gt;
&lt;li&gt;kill boss to avoid collectible destruction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is what we've added in code for step 3. (We've skipped step 1 &amp;amp; 2 code to stay focus on new code)&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// See step 1 attributes and append those ones&lt;/span&gt;
    &lt;span class="c1"&gt;// See also step 2 attributes and append new ones&lt;/span&gt;
    &lt;span class="nl"&gt;amazinObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Group&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;amazinItemTimedEvent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TimerEvent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See Step 1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;preload&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 1 preload + those new onees&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2 preload + new ones &lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amazin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;assets/sprites/amazin.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initData&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See step 1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initPlayer&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initText&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 1 and append &lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initAmazinSpawn&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;startLevel1&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Init Amazin spawn
     */&lt;/span&gt;
     &lt;span class="nx"&gt;initAmazinSpawn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amazinObjectsGroup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;defaultKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;amazin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amazinItemTimedEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startLevel2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amazinObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amazinHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amazinObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amazinHitsProduct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;o2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Start level 2
     */&lt;/span&gt;
    &lt;span class="nx"&gt;startLevel2&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;level&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spamTimedEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buyzookaItemTimedEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createAmazin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amazinItemTimedEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createAmazin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productTimedEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spamTimedEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createSpam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;handlePlayerUpdate&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initSpamSpawn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initBuyzookaSpawn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2    &lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initProductSpawn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;createSpam&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;createBuyzookaItem&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;createProduct&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;checkIfSpamHitsBoundaries&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;checkIfBuyzookaItemHitsGround&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;checkIfProductHitsGround&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;spamHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;buyzookaItemHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;productHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Triggered when Amazin hits the player
     * 
     * @param player 
     * @param amazin 
     */&lt;/span&gt;
     &lt;span class="nx"&gt;amazinHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;amazin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;playerHasShield&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newLives&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amazin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lives&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;amazin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lives&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newLives&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newLives&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;amazin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bounce&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amazinObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amazin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addScore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;135&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;decrementsLives&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Triggered when Amazin hits a product 
     * 
     * @param product 
     * @param amazin 
     */&lt;/span&gt;
    &lt;span class="nx"&gt;amazinHitsProduct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amazin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productObjectsGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;addScore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;decrementsLives&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#step-5-game-difficulties-gt"&gt;
  &lt;/a&gt;
  Step 5 : Game difficulties 😌 -&amp;gt; 🤬
&lt;/h2&gt;

&lt;p&gt;On the last step we are only playing on a difficulty factor that will reduce time needed to make spawn appear. It will drive players crazy to make them loose :p&lt;/p&gt;

&lt;p&gt;This is the new code&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// See step 1 attributes and append those ones&lt;/span&gt;
    &lt;span class="c1"&gt;// See also step 2 attributes and append new ones&lt;/span&gt;
    &lt;span class="c1"&gt;// See step step 4 and add &lt;/span&gt;
    &lt;span class="nl"&gt;difficulty&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See Step 2 and add &lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;difficulty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;preload&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2 preload + those new onees&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3 preload + new ones &lt;/span&gt;
        &lt;span class="c1"&gt;// Step 4 peaload&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;initData&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See step 1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initPlayer&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initText&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 4&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;startLevel1&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initAmazinSpawn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 4 &lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Start level 2
     */&lt;/span&gt;
    &lt;span class="nx"&gt;startLevel2&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 4 and add : &lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nextLevel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Start next level
     */&lt;/span&gt;
    &lt;span class="nx"&gt;nextLevel&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;level&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;difficulty&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spamTimedEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productTimedEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amazinItemTimedEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createAmazin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amazinItemTimedEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;difficulty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createAmazin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productTimedEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;difficulty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spamTimedEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEvent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;difficulty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createSpam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;callbackScope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;handlePlayerUpdate&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initSpamSpawn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initBuyzookaSpawn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3    &lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;initProductSpawn&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;createSpam&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;createBuyzookaItem&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;createProduct&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;checkIfSpamHitsBoundaries&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;checkIfBuyzookaItemHitsGround&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;checkIfProductHitsGround&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;spamHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;spam&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;buyzookaItemHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;productHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="nx"&gt;amazinHitsPlayer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;player&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;amazin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 4&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;amazinHitsProduct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amazin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Phaser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Types&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Physics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Arcade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GameObjectWithBody&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 4&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;addScore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;decrementsLives&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Step 3&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#addendum"&gt;
  &lt;/a&gt;
  Addendum
&lt;/h2&gt;

&lt;p&gt;We are exposing on this article the big pictures of our game mechanisms. You'll find out that in the final repository, some things have changed, mostly because of design problem (assets size etc). But if you understand the whole article, then the source code will look crystal clear to you!&lt;/p&gt;

&lt;p&gt;In final repo you'll see that we've added several other scenes that are explanation about the game mechanism. No purpose here.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h3&gt;

&lt;p&gt;Here at Buyzooka we are looking for some ways to promote our product and get some users or leads with the less money possible.&lt;br&gt;
As every startup, we count every dollar spent 😅.&lt;br&gt;
Our idea was to create a game that will explain the features of our product in a simple, and very imaged way (a game). Doing some Growth Hacking was obviously our best choice, because classic marketing for acquisition is something we did by the past without any success (even if we found the best way to communicate with people). But as we are creating a web-extension, we think that it's quite complicated to make them instal, signup and use our product easily. Web-extensions are unfortunately not a common use.&lt;/p&gt;

&lt;p&gt;That's why the game will be released on mobile in order to get users in our database (like "leads"). We will be able to tell them to install the real application (under development), later that Spring. We will use Ionic to embed the game inside and iframe.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How?
&lt;/h3&gt;

&lt;p&gt;In order to get some viral effect we do provide to our game player, a promise of getting our next premium version. I'll not explain the content of that premium version here.&lt;br&gt;
In order to get that premium version we need our player to give us their e-mail address and do some referral&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Game is fully playable online here : &lt;a href="https://play.buyzooka.io?ref=devto"&gt;https://play.buyzooka.io&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#repository-and-credits"&gt;
  &lt;/a&gt;
  Repository and credits
&lt;/h2&gt;

&lt;p&gt;Every feedback is welcome!&lt;br&gt;
Give us some stars ⭐️ and spread the word! :p&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Buyzooka"&gt;
        Buyzooka
      &lt;/a&gt; / &lt;a href="https://github.com/Buyzooka/initiator-game"&gt;
        initiator-game
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;PhaserJS : &lt;a href="https://phaser.io/"&gt;https://phaser.io/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>gamedev</category>
      <category>phaserjs</category>
    </item>
    <item>
      <title>25 responsive Bootstrap Footers</title>
      <author>MD Bootstrap</author>
      <pubDate>Thu, 22 Apr 2021 13:46:29 +0000</pubDate>
      <link>https://dev.to/mdbootstrap/25-responsive-bootstrap-footers-1bbm</link>
      <guid>https://dev.to/mdbootstrap/25-responsive-bootstrap-footers-1bbm</guid>
      <description>&lt;p&gt;Footer is an important part of any website and serves as additional navigation. Footer is especially crucial in huge portals with complex navigation and hundreds of links and pages.&lt;/p&gt;

&lt;p&gt;Official bootstrap documentation does not contain a Footer component, so we have prepared an impressive collection of free beautiful footer templates with exceptional design. All of them are responsive and compatible with the newest Bootstrap 5.&lt;/p&gt;

&lt;p&gt;If you want to learn more about the construction of the Foter and get to know the basic and advanced usage of this component - read &lt;a href="https://mdbootstrap.com/docs/standard/navigation/footer/"&gt;📄 Footer documentation&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1"&gt;
  &lt;/a&gt;
  #1
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2884987?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h6yebm6v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/1.jpg" alt="#1"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2"&gt;
  &lt;/a&gt;
  #2
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885008?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2wJQV1TP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/2.jpg" alt="#2"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3"&gt;
  &lt;/a&gt;
  #3
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885016?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CQn7JCMy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/3.jpg" alt="#3"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#4"&gt;
  &lt;/a&gt;
  #4
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885027?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Sg7BBDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/4.jpg" alt="#4"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5"&gt;
  &lt;/a&gt;
  #5
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885047?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sCNp7tZH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/5.jpg" alt="#5"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6"&gt;
  &lt;/a&gt;
  #6
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885069?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aatheTTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/6.jpg" alt="#6"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#7"&gt;
  &lt;/a&gt;
  #7
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885091?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gsxh4qQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/7.jpg" alt="#7"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#8"&gt;
  &lt;/a&gt;
  #8
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885092?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--btuQHx2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/8.jpg" alt="#8"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#9"&gt;
  &lt;/a&gt;
  #9
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885096?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R0xvq4aO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/9.jpg" alt="#9"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#10"&gt;
  &lt;/a&gt;
  #10
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885097?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZcU3dfu---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/10.jpg" alt="#10"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#11"&gt;
  &lt;/a&gt;
  #11
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885102?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DZjzwYDD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/11.jpg" alt="#11"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#12"&gt;
  &lt;/a&gt;
  #12
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885103?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--42_j7Y5---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/12.jpg" alt="#12"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#13"&gt;
  &lt;/a&gt;
  #13
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885111?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kK929DIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/13.jpg" alt="#13"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#14"&gt;
  &lt;/a&gt;
  #14
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885113?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GZvQYpAT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/14.jpg" alt="#14"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#15"&gt;
  &lt;/a&gt;
  #15
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885115?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kmS-Y_RT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/15.jpg" alt="#15"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#16"&gt;
  &lt;/a&gt;
  #16
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885120?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AUA0w7ag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/16.jpg" alt="#16"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#17"&gt;
  &lt;/a&gt;
  #17
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885124?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GJlASMjz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/17.jpg" alt="#17"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#18"&gt;
  &lt;/a&gt;
  #18
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885126?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Y-9rGiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/18.jpg" alt="#18"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#19"&gt;
  &lt;/a&gt;
  #19
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885127?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OmNALeno--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/19.jpg" alt="#19"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#20"&gt;
  &lt;/a&gt;
  #20
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885129?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1b7cQlwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/20.jpg" alt="#20"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#21"&gt;
  &lt;/a&gt;
  #21
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885131?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CQaTiSIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/21.jpg" alt="#21"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#22"&gt;
  &lt;/a&gt;
  #22
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885134?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rgSHj2_G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/22.jpg" alt="#22"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#23"&gt;
  &lt;/a&gt;
  #23
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885137?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NrnacWGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/23.jpg" alt="#23"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#24"&gt;
  &lt;/a&gt;
  #24
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885140?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OTn-Re_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/24.jpg" alt="#24"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#25"&gt;
  &lt;/a&gt;
  #25
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2885141?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zM_HBHqh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/navigation/footer/examples/assets/25.jpg" alt="#25"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>bootstrap</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Natural language search for blog posts using TensorflowJS</title>
      <author>George Griffiths</author>
      <pubDate>Thu, 22 Apr 2021 13:37:55 +0000</pubDate>
      <link>https://dev.to/griffadev/natural-language-search-for-blog-posts-using-tensorflowjs-a58</link>
      <guid>https://dev.to/griffadev/natural-language-search-for-blog-posts-using-tensorflowjs-a58</guid>
      <description>&lt;p&gt;In this post i'll go into how you can get started using pre-trained Tensorflow models to do Machine learning in the browser, examine some of the potential gotchas, such as not blocking the main thread with custom logic and consider the impact of the size of models on UX.&lt;/p&gt;

&lt;p&gt;The demo that I developed as part of this article is a "search engine" using my blog posts as a data set, which I converted into an API, the idea being: can I find blog posts based on a search query by a user, by comparing the similarity of the query with a blog posts title and description?&lt;/p&gt;

&lt;p&gt;Search is a solved problem and there are better ways of achieving the same thing, but I created this to learn and to have a bit of fun!&lt;/p&gt;

&lt;p&gt;If you want to check out a live demo for what I built in this post, I've &lt;a href="https://griffa.dev/experiments/natural-language-search/"&gt;hosted it on my website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--40CZ4KQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o468fqlxir5b3j79g1bh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--40CZ4KQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o468fqlxir5b3j79g1bh.png" alt="Screen capture of Natural language search demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sentence-similarity-with-tensorflowjs"&gt;
  &lt;/a&gt;
  Sentence similarity with TensorflowJS
&lt;/h2&gt;

&lt;p&gt;I'm going to explain how this all works with a smaller example rather than the full demo that I linked earlier, but the source code for the example is available on &lt;a href="https://github.com/Georgegriff/griffadev/tree/main/src/experiments/natural-language-search"&gt;Github&lt;/a&gt;, it's the same code, just with things like UI simplified.&lt;/p&gt;

&lt;p&gt;First up, let's load in the library we are going to use. We're just going to load them from a CDN, when you're just experimenting, you don't want to be messing around with build processes.&lt;/p&gt;

&lt;p&gt;Create a HTML file called &lt;code&gt;index.html&lt;/code&gt;, with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Blog post search&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/@tensorflow-models/universal-sentence-encoder"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"index.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're loading in two libraries here, the first is TensorflowJS and the second is a the Universal Sentence Encoder model, which uses TensforflowJS, you can read about &lt;a href="https://github.com/tensorflow/tfjs-models/tree/master/universal-sentence-encoder"&gt;over here&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to code along, host your files on a local dev server. I personally recommend the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;Live Server VS Code extension&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, create &lt;code&gt;index.js&lt;/code&gt; add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="c1"&gt;// IIFE - because no top level await in all browsers at time of writing.&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// download the model&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blogPosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;How I got started with 11ty&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Building a responsive, progressively enhanced, masonry layout with only CSS and HTML&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Using the Web Share API and meta tags, for simple native sharing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tips for debugging in 11ty&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sharing to social media&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// embed the user input and the blog posts using the model -  explained next!&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blogPostsTensor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blogPosts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userInputTensor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;userQuery&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;In Chrome, and other browsers soon, you won't need to wrap the code in an IIFE because you could use &lt;a href="https://caniuse.com/?search=top%20level%20await"&gt;top level await instead&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This code is loading the model, and then passing our &lt;code&gt;userQuery&lt;/code&gt; of "Sharing to social media" and our array of &lt;code&gt;blogPosts&lt;/code&gt; into the model. &lt;br&gt;
Doing this converts the sentences into vectors (arrays) with 512 entries in the vector for each sentence, this is how the model sees the sentence.&lt;br&gt;
Universal sentence encoder has been trained on a large vocabulary and is encoding the provided data based on the data it saw during training.&lt;/p&gt;

&lt;p&gt;To help make this a bit clearer, &lt;code&gt;blogPostsTensor&lt;/code&gt; and &lt;code&gt;userInputTensor&lt;/code&gt; will be an instance of &lt;a href="https://js.tensorflow.org/api/latest/#tensor2d"&gt;tensor2d&lt;/a&gt;.&lt;br&gt;
These are 2D arrays (on the GPU) with 512 entries in each of the arrays, which represents a provided phase.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// The following are example embedding output of 512 dimensions per sentence&lt;/span&gt;
&lt;span class="c1"&gt;// Embedding for user input: "Sharing to social media"&lt;/span&gt;
&lt;span class="c1"&gt;// userInputTensor = tf.tensor2d([[0.01305108  0.02235125 -0.03263278, ...]])&lt;/span&gt;
&lt;span class="c1"&gt;// Embedding for: I am a sentence for which I would like to get its embedding.&lt;/span&gt;
&lt;span class="c1"&gt;// blogPostsTensor = tf.tensor2d([[0.05833394 -0.0818501   0.06890938, ...], [0.05833394 -0.0818501   0.06890938, ...]])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, in order to find potentially good results based our input sentence we need to check how similar our input vector is to the vectors of the blog post titles, we can achieve this by calculating Cosine Similarity between the vectors, which will give us a value between -1 and 1. 1 being most similar and -1 being not very similar at all.&lt;/p&gt;

&lt;p&gt;I'm not going to explain the mathematics of cosine similarity, but i've provided an implementation of it.&lt;br&gt;
If you want to know how it works, there are lots of great explanations on YouTube, &lt;a href="https://www.youtube.com/watch?v=5lvS8078ykA"&gt;such as this one.&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Define these at the top of your index.js file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// multiply with value with corresponding value in the other array at the same index, then sum.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dotProduct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vector2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;vector1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;vector2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// square each value in the array and add them all up, then square root.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;vectorMagnitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;  &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cosineSimilarity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vector2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;dotProduct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vector2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vectorMagnitude&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;vectorMagnitude&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I tried to implement this maths purely in TensorflowJS, so that I could take advantage of the GPU, but after much trial and error, I could not find a solution. If anyone knows how to do this I'd love to hear about it. Doing this calculation myself is performing a large tradeoff of having these calculations happen on the main thread, which can cause bad UX, i'll explain this in more detail towards the end of the post, including ways around this.&lt;/p&gt;

&lt;p&gt;Now lets use the functions in our code,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// download the model&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blogPosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;How I got started with 11ty&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Building a responsive, progressively enhanced, masonry layout with only CSS and HTML&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Using the Web Share API and meta tags, for simple native sharing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tips for debugging in 11ty&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sharing to social media&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// embed the user input and the blog posts using the model -  explained next!&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blogPostsTensor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blogPosts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// wrap the user input in an array so model can work with it&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userInputTensor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;userQuery&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="c1"&gt;// == New code starts here //&lt;/span&gt;
    &lt;span class="c1"&gt;// convert to JS arrays from the tensors&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputVector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;userInputTensor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dataVector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;blogPostsTensor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// this is an array of arrays, we only care about one piece of user input, one search query so&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userQueryVector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputVector&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;// how many results do i want to show&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MAX_RESULTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// loop through the blog  post data&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dataVector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;dataEntry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dataEntryIndex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// COSINE SIMILARITY - compare the user input tensor with each blog post.&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;similarity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cosineSimilarity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userQueryVector&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dataEntry&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;similarity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blogPosts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dataEntryIndex&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;// sort descending&lt;/span&gt;
      &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;similarity&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;similarity&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MAX_RESULTS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#initial-example-results&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the last line of the above example we're updating the text of an element with id "initial-example-results", to make this work, let's add the following to your html file, inside the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This will take a few moments for the model to load and run. Query: "Sharing to social media"&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;pre&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"initial-example-results"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's a link to the code we've built so far: &lt;a href="https://codesandbox.io/s/tensorflow-js-hardcoded-blog-search-0q5o9"&gt;https://codesandbox.io/s/tensorflow-js-hardcoded-blog-search-0q5o9&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#turning-posts-into-an-api"&gt;
  &lt;/a&gt;
  Turning posts into an API
&lt;/h2&gt;

&lt;p&gt;My blog is written using the static site generator tool Eleventy. If you haven't heard of &lt;a href="https://www.11ty.dev/"&gt;Eleventy&lt;/a&gt; and you're into building fast websites, seriously check it out, it's awesome. I'm not going to explain how Eleventy works, but I wrote a post about how &lt;a href="https://griffa.dev/posts/how-i-got-started-with-11ty/"&gt;I got started with Eleventy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To create an API out of my blog posts I generate a JSON file in the form of a &lt;a href="https://jsonfeed.org/"&gt;JSON Feed&lt;/a&gt;, which can be hosted on my server.&lt;/p&gt;

&lt;p&gt;Here's my template for my json feed, this template is based on the &lt;a href="https://github.com/11ty/eleventy-base-blog"&gt;11ty base blog&lt;/a&gt;. The  templating syntax being used is Nunjucks, and comes supported out of the box with Eleventy.&lt;/p&gt;

&lt;p&gt;If you are curious and want to check out the source code of my blog it's over here on &lt;a href="https://github.com/Georgegriff/griffadev"&gt;Github&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;--------
# Metadata comes from _data/metadata.json
permalink: "{{ metadata.jsonfeed.path | url }}"
eleventyExcludeFromCollections: true
--------
{
  "version": "https://jsonfeed.org/version/1",
  "title": "{{ metadata.title }}",
  "home_page_url": "{{ metadata.url }}",
  "feed_url": "{{ metadata.jsonfeed.url }}",
  "description": "{{ metadata.description }}",
  "author": {
    "name": "{{ metadata.author.name }}",
    "url": "{{ metadata.author.url }}"
  },
  "items": [
    {%- for post in collections.posts | reverse %}
    {%- set absolutePostUrl %}{{ post.url | url | absoluteUrl(metadata.url) }}{% endset -%}
    {
      "id": "{{ absolutePostUrl }}",
      "url": "{{ absolutePostUrl }}",
      "title": "{{ post.data.title }}",
      "tags": [
        {%- for tag in helpers.removeCollectionTags(post.data.tags) -%}
          "{{tag}}"
          {%- if not loop.last %}, {%- endif %}
        {%- endfor %}],
      "summary": "{{ post.data.description }}",
      "content_html": {% if post.templateContent %}{{ post.templateContent | dump | safe }}{% else %}""{% endif %},
      "date_published": "{{ post.date | rssDate }}"
    }
    {%- if not loop.last -%}
    ,
    {%- endif -%}
    {%- endfor %}
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This template is iterating through my blog posts and populating a JSON array with post data, as well as some other site metadata, ultimately the result is a JSON file which i can request on my server: &lt;a href="https://griffa.dev/feed/feed.json"&gt;https://griffa.dev/feed/feed.json&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now I have an API which I can use in my search, success!&lt;/p&gt;

&lt;p&gt;We can now update our code  sample to pull data from this api instead of hard-coding it.&lt;br&gt;
Add this function to the top of "index.js".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loadBlogPosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://griffa.dev/feed/feed.json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;feed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;feed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* search on title and summary */&lt;/span&gt;
        &lt;span class="na"&gt;searchData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;summary&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blogPosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;How I got started with 11ty&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Building a responsive, progressively enhanced, masonry layout with only CSS and HTML&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Using the Web Share API and meta tags, for simple native sharing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tips for debugging in 11ty&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;blogPosts&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="nx"&gt;loadBlogPosts&lt;/span&gt;&lt;span class="p"&gt;()]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also  replace&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blogPostsTensor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blogPosts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blogPostsTensor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blogPosts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt;&lt;span class="nx"&gt;searchData&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;searchData&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's a link to the code we've built so far: &lt;a href="https://codesandbox.io/s/tensorflow-js-blog-search-3k7x2"&gt;https://codesandbox.io/s/tensorflow-js-blog-search-3k7x2&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ml-in-the-browser-why"&gt;
  &lt;/a&gt;
  ML in the browser, why?
&lt;/h2&gt;

&lt;p&gt;Hopefully the examples so far have made sense, I thought i'd take a moment to talk about some of benefits and tradeoffs of doing Machine learning in the browser with TensorflowJS.&lt;/p&gt;

&lt;p&gt;One of the first things you might think of when you think Machine learning in JavaScript is it's slow, well that's where one of the great things about TensorflowJS comes in, it performs all of its expensive calculations on the GPU, under the hood it's utilising WebGL shader programs to achieve this.&lt;/p&gt;

&lt;p&gt;Running Machine learning in the browser opens up the possibilities of offering Machine learning in applications without needing to build complex server architectures, or learning another language. It also means that it's possible to provide on-device Machine learning to users, without their data ever hitting  a server.&lt;/p&gt;

&lt;p&gt;One of the other great things about the JavaScript ecosystem is its ability to not just run in the browser, but on the server too, with NodeJS. TensorflowJS is also available in Node JS, where it can be bound directly to the Tensorflow API, the same API that the python implementations of the library consume. I've considered the possibility of modifying my experiment in this blog post so that when I generate my static site at build time with Eleventy, I could run the model against my data and pre-generate the data for my blog posts, that might be cool.&lt;/p&gt;

&lt;p&gt;The final great thing is that it is possible to convert/re-use models created by the other Tensorflow ecosystems (Python etc) so that they run in the browser.&lt;/p&gt;

&lt;p&gt;Now for one of the big trade offs, Machine learning models can be large, there is a lot of work going to make these models smaller and smaller, but the model used in this demo for example is approximately 28 MB. To be fair, for a general purpose natural language model, this is quite impressively small. Many of these models, are split into chunks so that the model can be downloaded in parallel, which improves things a bit. This tradeoff might be acceptable if it unlocks the ability to provide a good enough UX, without the need to hit a server, which once the model is downloaded can be lightning fast. The model can only be as fast the end-user machine it's running on, which, especially on mobile, can vary dramatically.&lt;/p&gt;

&lt;p&gt;In applications you might be able to do some different things to make this tradeoff worth it, for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Enabling good caching headers&lt;/li&gt;
&lt;li&gt;Using service workers to background fetch and cache the model, and enable the feature&lt;/li&gt;
&lt;li&gt;Allowing users to opt in/out&lt;/li&gt;
&lt;li&gt;Offer the feature as a progressive enhancement that enables once downloaded&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oseNJO1N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lcts5rszpshsrrewimw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oseNJO1N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lcts5rszpshsrrewimw.png" alt="Chrome network panel showing model chunks downloading."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With the above tradeoffs in mind it might, or might not, make sense to do ML in the browser. Where you need to try and run your models immediately as the site/app loads, or end user device constraints are a problem, maybe server side is the better choice.&lt;/p&gt;

&lt;p&gt;When using JavaScript it's always important to not block the main thread, I mentioned above that Tensorflow utilises the GPU for its calculations, but as soon as you stop using its API you're back in the JS main thread, and if you perform expensive calculations there ,you are at risk of providing a bad UX to your users.&lt;/p&gt;

&lt;p&gt;The sample in this post is guilty of this, when performing the &lt;code&gt;cosineSimilarity&lt;/code&gt; calculations, let's fix it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unblocking-the-main-thread"&gt;
  &lt;/a&gt;
  Unblocking the main thread
&lt;/h2&gt;

&lt;p&gt;In the browser you can create additional threads called "Workers", these are isolated threads, that do not have access to any DOM APIs, or variables in the main thread.&lt;br&gt;
The only way to communicate between the main thread is via &lt;code&gt;postMessage&lt;/code&gt;, which can be cumbersome.&lt;/p&gt;

&lt;p&gt;There is an absolutely fantastic library &lt;a href="https://www.npmjs.com/package/comlink"&gt;Comlink&lt;/a&gt; that makes working with Worker threads basically invisible, it allows you to work with functions as if they were on the main thread, I believe it achieves this using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"&gt;Proxy&lt;/a&gt; objects, hiding the need to work with postMessage directly 🎉.&lt;/p&gt;

&lt;p&gt;Let's convert our example to use Comlink and move our maths off the main thread.&lt;/p&gt;

&lt;p&gt;We're going to import the Tensorflow libraries in our worker instead so your HTML should look like this.&lt;/p&gt;

&lt;p&gt;Let's also add in some user input, to make the demo a bit more spicy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Blog post search&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"index.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"query"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Search&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;pre&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"initial-example-results"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next up, delete all of the code in "index.js". Now in "index.js" lets add the code to work with our new "worker.js" file and update the UI.&lt;/p&gt;

&lt;p&gt;We're going to add all of the same code, except this time, expose a function called "search" which returns our predictions.&lt;br&gt;
There are few other changes too, such as using importScripts to import the libraries into the Worker.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;importScripts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://unpkg.com/comlink/dist/umd/comlink.min.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;importScripts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;importScripts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdn.jsdelivr.net/npm/@tensorflow-models/universal-sentence-encoder&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;blogPosts&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loadBlogPosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// fetch + cache comparison data&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://griffa.dev/feed/feed.json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;feed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;feed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;searchData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;summary&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loadModel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blogPosts&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
      &lt;span class="nx"&gt;loadModel&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="nx"&gt;loadBlogPosts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//// cosine similarity fns&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dotProduct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vector2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;vector1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;vector2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;vectorMagnitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;  &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cosineSimilarity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vector2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;dotProduct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vector2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vectorMagnitude&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;vectorMagnitude&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vector2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;////&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userQuery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blogPostsTensor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;blogPosts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt;&lt;span class="nx"&gt;searchData&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;searchData&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userInputTensor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;userQuery&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputVector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;userInputTensor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dataVector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;blogPostsTensor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="cm"&gt;/* this is an array of arrays, we only care about one piece of user input, one search query so */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userQueryVector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputVector&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

  &lt;span class="cm"&gt;/* how many results do i want to show */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MAX_RESULTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="cm"&gt;/* loop through the blog  post data */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dataVector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;dataEntry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dataEntryIndex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="cm"&gt;/* compare the user input tensor with tensor of a blog post. */&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;similarity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cosineSimilarity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userQueryVector&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dataEntry&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;similarity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blogPosts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dataEntryIndex&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="cm"&gt;/* sort descending */&lt;/span&gt;
    &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;similarity&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;similarity&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MAX_RESULTS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SearchService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;load&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/* expose the SearchService api to comlink */&lt;/span&gt;
&lt;span class="nx"&gt;Comlink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;SearchService&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's use our new &lt;code&gt;SearchService&lt;/code&gt; in "index.js".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Comlink&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://unpkg.com/comlink@4.3.0/dist/esm/comlink.min.mjs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;worker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;worker.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SearchService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Comlink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;worker&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#initial-example-results&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Loading model...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;SearchService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#search input[name="query"]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#search button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#initial-example-results&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Model loaded, try out some queries e.g. Building a blog with JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#search&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;FormData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;query&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#initial-example-results&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Searching...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;SearchService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#initial-example-results&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you load this demo code up in the browser you should get similar result to before, but with the heavy-work offloaded to a Worker thread.&lt;/p&gt;

&lt;p&gt;Here's a live demo project for reference: &lt;a href="https://codesandbox.io/s/tensorflow-js-with-web-workers-blog-searching-1shbq"&gt;https://codesandbox.io/s/tensorflow-js-with-web-workers-blog-searching-1shbq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hopefully you can see from the example how you can offload work into a worker using Comlink, you can also build for production using popular tools such as Rollup, but I won't cover that here.&lt;/p&gt;

&lt;p&gt;One of the neat things about using Worker threads is because they don't have access to the DOM you are forced to separate your application logic from your UI, making your code more modular and reusable in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#future-thoughts"&gt;
  &lt;/a&gt;
  Future thoughts
&lt;/h2&gt;

&lt;p&gt;In case you missed the links earlier:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Source code: &lt;a href="https://github.com/Georgegriff/griffadev/tree/main/src/experiments/natural-language-search"&gt;https://github.com/Georgegriff/griffadev/tree/main/src/experiments/natural-language-search&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Demo: &lt;a href="https://griffa.dev/experiments/natural-language-search/"&gt;https://griffa.dev/experiments/natural-language-search/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I was to continue this idea through i'd probably explore some of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Making the code more production ready using module imports and a build tool chain.&lt;/li&gt;
&lt;li&gt;Investigate ways to use TensorflowJS at build time of my blog to pre-calculate embeddings for posts.&lt;/li&gt;
&lt;li&gt;See if there is in-fact ways to doo cosine similarity directly in TensorflowJS, again, i'd love to know if anybody knows how!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope to continue my Machine learning journey, I have some other blog related ideas that I might try to explore in the future:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Recommending similar blog posts&lt;/li&gt;
&lt;li&gt;Text summary generation of blog posts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm fairly early on in my AI learning journey, but one of the initial resources that helped me out and inspired me was watching content from &lt;a href="https://twitter.com/jlengstorf"&gt;Jason Lengstorf&lt;/a&gt; from his &lt;a href="https://www.learnwithjason.dev/"&gt;Learn with Jason&lt;/a&gt; series, which I highly recommend. One of the truly awesome things about this series is closed captioning is provided, making this content more accessible to everybody 🎉.&lt;/p&gt;

&lt;p&gt;At the time of writing there are 3 sessions relating to Machine Learning and TensorflowJS, here is one of them:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WIHZ7kjJ35o"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope this was a good read, if you feel like reading more of my work, please follow me on Twitter &lt;a href="https://twitter.com/griffadev"&gt;@griffadev&lt;/a&gt;, or get me a &lt;a href="https://ko-fi.com/griffadev"&gt;coffee&lt;/a&gt; if you feel like it ☕.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>machinelearning</category>
      <category>tensorflowjs</category>
      <category>11ty</category>
    </item>
  </channel>
</rss>
