<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Reminder ‚Äî All CodeLand Talk Proposals Due by Tuesday, July 20th @ 11:59 PM UTC </title>
      <author>Ben Halpern</author>
      <pubDate>Fri, 16 Jul 2021 17:52:52 +0000</pubDate>
      <link>https://dev.to/devteam/reminder-all-codeland-talk-proposals-due-by-tuesday-july-20th-11-59-pm-utc-1jmp</link>
      <guid>https://dev.to/devteam/reminder-all-codeland-talk-proposals-due-by-tuesday-july-20th-11-59-pm-utc-1jmp</guid>
      <description>&lt;h3&gt;
  &lt;a href="#ill-keep-this-reminder-short-and-sweet-the-codeland-2021-callforproposals-cfp-closes-in-just-a-few-days"&gt;
  &lt;/a&gt;
  I‚Äôll keep this reminder short and sweet: the CodeLand 2021 Call-For-Proposals (CFP) closes in just a few days!

&lt;/h3&gt;

&lt;p&gt;Hosted by DEV and &lt;a href="https://community.codenewbie.org"&gt;CodeNewbie&lt;/a&gt;, &lt;a href="https://codelandconf.com"&gt;CodeLand&lt;/a&gt; is the most welcoming conference for early-career developers and their champions. &lt;/p&gt;

&lt;p&gt;This year, CodeLand will be taking place &lt;em&gt;virtually&lt;/em&gt; from September 23-24, 2021 ‚Äì we‚Äôre excited to welcome speakers and attendees from all over the globe. &lt;/p&gt;

&lt;p&gt;If you‚Äôve been considering submitting a talk, now is your chance ‚è∞&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#read-more-details-on-the-codeland-cfp-here-by-this-tuesday-1159-pm-utc"&gt;
  &lt;/a&gt;
  Read more details on the CodeLand CFP &lt;a href="https://community.codenewbie.org/codenewbie/reminder-submit-your-codeland-talk-proposals-by-tuesday-july-20th-163l"&gt;here&lt;/a&gt; by this Tuesday @ 11:59 PM UTC.
&lt;/h2&gt;




&lt;h2&gt;
  &lt;a href="#submit-your-talk-here"&gt;
  &lt;/a&gt;
  Submit your talk &lt;a href="https://cfp.codelandconf.com/events/codeland-2021"&gt;here&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;We hope to see a CodeLand 2021 talk proposal from you üåà &lt;/p&gt;

</description>
      <category>codeland</category>
      <category>codenewbie</category>
      <category>meta</category>
    </item>
    <item>
      <title>‚ùå Is your BUSINESS really safe from HACKERS? ‚ùå</title>
      <author>Dotnetsafer</author>
      <pubDate>Fri, 16 Jul 2021 17:46:56 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/is-your-business-really-safe-from-hackers-1i03</link>
      <guid>https://dev.to/dotnetsafer/is-your-business-really-safe-from-hackers-1i03</guid>
      <description>&lt;p&gt;Are you REALLY prepared for a CYBERSECURITY ATTACK? ü§î&lt;/p&gt;

&lt;p&gt;From Dotnetsafer we want to make you aware with this video of the importance of keeping all your data safe. ‚úÖ&lt;/p&gt;

&lt;p&gt;The size of your company is irrelevant to the attackers, they only have one mission: STEAL YOUR INTELLECTUAL PROPERTY, CONFIDENTIAL DATA OR DESTROY YOUR IMAGE.&lt;/p&gt;

&lt;p&gt;I hope you dare to see itü§ó&lt;br&gt;
It's ONLY 3 minutes...&lt;br&gt;
About DOUBLE the time it takes a HACKER to obtain any data they need from your company. &lt;/p&gt;

</description>
      <category>development</category>
      <category>programm</category>
      <category>csharp</category>
      <category>dotnet</category>
    </item>
    <item>
      <title>React Context Simplifier</title>
      <author>Harsh</author>
      <pubDate>Fri, 16 Jul 2021 17:28:12 +0000</pubDate>
      <link>https://dev.to/harshdand/react-context-simplifier-3f4n</link>
      <guid>https://dev.to/harshdand/react-context-simplifier-3f4n</guid>
      <description>&lt;p&gt;To simplify the react context api usage and reduce unnecessary renders I have created &lt;a href="https://www.npmjs.com/package/context-simplifier"&gt;context-simplifier&lt;/a&gt; library. Adding usage details and example below.  Feedback, feature requests, bugs can be raised here &lt;a href="https://github.com/Harshdand/context-simplifier"&gt;https://github.com/Harshdand/context-simplifier&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install"&gt;
  &lt;/a&gt;
  Install
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save&lt;/span&gt; context-simplifier
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add context-simplifier
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#to-create-new-context"&gt;
  &lt;/a&gt;
  To create new context
&lt;/h3&gt;

&lt;p&gt;Use &lt;code&gt;createContextProvider&lt;/code&gt; to create new context. It will return the provider for the created context&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createContextProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;context-simplifier&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CountProvider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createContextProvider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;count&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;CountProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Counter&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Layout&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;CountDisplay&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Layout&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;CountProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#to-use-the-context-value-use-raw-getcontextvalue-endraw-"&gt;
  &lt;/a&gt;
  To use the context value use &lt;code&gt;getContextValue&lt;/code&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getContextValue&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;context-simplifier&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CountDisplay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getContextValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;count&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;CountDisplay&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#to-get-the-setter-for-updating-the-context-value"&gt;
  &lt;/a&gt;
  To get the setter for updating the context value
&lt;/h3&gt;

&lt;p&gt;Use &lt;code&gt;getContextAction&lt;/code&gt; to get the setter function which can be used to update the context value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getContextAction&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;context-simplifier&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getContextAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;count&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;increment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;oldValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;oldValue&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;decrement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;oldValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;oldValue&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Increment&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Decrement&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#api"&gt;
  &lt;/a&gt;
  API
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#-raw-createcontextprovidercontextname-initialvalue-reducerfunction-endraw-%E2%87%92-raw-provider-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;createContextProvider(contextName, initialValue, reducerFunction)&lt;/code&gt; ‚áí &lt;code&gt;provider&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Creates a context and returns the provider.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Param&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;contextName&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string:required&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Context name must be string without any spaces or special characters. &lt;strong&gt;Examples&lt;/strong&gt;: &lt;code&gt;count, countContext&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;initialValue&lt;/td&gt;
&lt;td&gt;&lt;code&gt;any:optional&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Initial Value for the context&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;reducerFunction&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function:optional&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Reducer function to update context value. Reducer function will receive two params &lt;code&gt;state&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#-raw-getcontextvaluecontextname-endraw-%E2%87%92-raw-contextvalue-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;getContextValue(contextName)&lt;/code&gt; ‚áí &lt;code&gt;contextValue&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Creates a context and returns the provider.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Param&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;contextName&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string:required&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Provide the context name to fetch its value&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#-raw-getcontextactioncontextname-endraw-%E2%87%92-raw-contextsetterfunction-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;getContextAction(contextName)&lt;/code&gt; ‚áí &lt;code&gt;contextSetterFunction&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Creates a context and returns the provider.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Param&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;contextName&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string:required&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Provide the context name to get its setter function&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  License
&lt;/h2&gt;

&lt;p&gt;MIT ¬© &lt;a href="https://github.com/Harshdand"&gt;Harshdand&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/context-simplifier"&gt;https://www.npmjs.com/package/context-simplifier&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>C# Array Methods</title>
      <author>Ishaan Sheikh</author>
      <pubDate>Fri, 16 Jul 2021 16:47:41 +0000</pubDate>
      <link>https://dev.to/sheikh_ishaan/c-array-methods-54dj</link>
      <guid>https://dev.to/sheikh_ishaan/c-array-methods-54dj</guid>
      <description>&lt;p&gt;In C# there is an Array class which provides methods related to array operations. In this blog we'll look into some of the common methods used with arrays.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basics"&gt;
  &lt;/a&gt;
  Basics
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#declaring-an-array"&gt;
  &lt;/a&gt;
  Declaring an array
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Array of integers&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;myArray&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Array of strings&lt;/span&gt;
&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Smith"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Bill"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#getting-the-length-of-an-array"&gt;
  &lt;/a&gt;
  Getting the length of an array
&lt;/h3&gt;

&lt;p&gt;To get the length of an array we can use the &lt;code&gt;Length&lt;/code&gt; property of the Array class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#arrayfind"&gt;
  &lt;/a&gt;
  Array.Find()
&lt;/h2&gt;

&lt;p&gt;This method is used to search an element in an array. It will return the &lt;strong&gt;first&lt;/strong&gt; element found.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;elem&lt;/span&gt; &lt;span class="p"&gt;%&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#arrayfindall"&gt;
  &lt;/a&gt;
  Array.FindAll()
&lt;/h2&gt;

&lt;p&gt;This methods is used to find all the elements in the array that matches the given condition.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FindAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;elem&lt;/span&gt; &lt;span class="p"&gt;%&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result from above code snippet will contain the array of elements returned from the function that matches the condition. We can use the foreach loop to print the elements in the result array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;elem&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;span class="c1"&gt;// 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#arrayexist"&gt;
  &lt;/a&gt;
  Array.Exist()
&lt;/h2&gt;

&lt;p&gt;This method is used to check whether an element exists that match the specified condition in the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Steve"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Bob"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Shane"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Andrew"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;StartsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"S"&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt; &lt;span class="c1"&gt;// True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#arrayindexof"&gt;
  &lt;/a&gt;
  Array.IndexOf()
&lt;/h2&gt;

&lt;p&gt;This method is used to find the first occurrence of an element in an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;"Smith"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Clark"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Peter"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"John"&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;IndexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#arraysort"&gt;
  &lt;/a&gt;
  Array.Sort()
&lt;/h2&gt;

&lt;p&gt;This method is used to sort the given array. This method returns &lt;code&gt;void&lt;/code&gt;, that means it manipulates the same array and didn't return any result.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Zack"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Bob"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Shane"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Andrew"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// users = {"Andrew", "Bob", "Shane", "Zack"}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is basic method I have shown here, you can view all the overloads for this method &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.array.sort?view=net-5.0"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#arrayreverse"&gt;
  &lt;/a&gt;
  Array.Reverse()
&lt;/h2&gt;

&lt;p&gt;This method reverse the order of an array. For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Zack"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Bob"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Shane"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Andrew"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// users = {"Andrew", "Shane", "Bob", "Zack"}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#arraybinarysearch"&gt;
  &lt;/a&gt;
  Array.BinarySearch()
&lt;/h2&gt;

&lt;p&gt;Using this method we can perform a binary search on the array. The array must be sorted before passing it to this method. It returns the index of the element found in the array. If the array is not sorted before using this method you may see some unexpected results.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;32&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;BinarySearch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 2&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>csharp</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Create a GitHub Profile README.md with widgets</title>
      <author>Kritika</author>
      <pubDate>Fri, 16 Jul 2021 16:38:28 +0000</pubDate>
      <link>https://dev.to/kritikapattalam/create-a-github-profile-readme-md-with-widgets-47j7</link>
      <guid>https://dev.to/kritikapattalam/create-a-github-profile-readme-md-with-widgets-47j7</guid>
      <description>&lt;p&gt;Ever since GitHub released the feature that allows users to add a profile level Readme to showcase their interests, bio, contributions etc., I have been wanting to add one to my  &lt;a href="https://github.com/kritika-pattalam"&gt;GitHub profile&lt;/a&gt; . While I did that, I thought why not document this and what better way than a blog post.¬† &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-am-i-going-to-do-"&gt;
  &lt;/a&gt;
  What am I going to do ?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Create a new repository using the github web interface with a readme file.&lt;/li&gt;
&lt;li&gt;Add content into that readme file using markdown.&lt;/li&gt;
&lt;li&gt;Add some widgets to power the github profile . Eg &lt;strong&gt;GitHub stats&lt;/strong&gt;, &lt;strong&gt;GitHub streak&lt;/strong&gt;,  &lt;strong&gt;stackoverflow reputation&lt;/strong&gt; , &lt;strong&gt;top languages&lt;/strong&gt; etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#create-a-readme-github-profile"&gt;
  &lt;/a&gt;
  Create a Readme github profile
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;  Go to  &lt;a href="//Github.com"&gt;https://github.com/&lt;/a&gt;  and on the top far right corner, click the + icon and click on New Repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Enter the repository name. It should be same as your github username. In my case , my github username is &lt;strong&gt;kritika-pattalam&lt;/strong&gt; so I entered that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt;  Make sure you select the option public .(P.S Github profile will be available for others to view only if the repository is public.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Select Initialize this repository with a README.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Click¬† Create Repository &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r4ULo05z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nmxf3dt5m5yqkdyp16m1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r4ULo05z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nmxf3dt5m5yqkdyp16m1.jpeg" alt="Create a new Repository with username"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your github profile readme file has been created with a dummy content for you to get started.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MQk9cTYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z36cxzl8it9g5cikei5y.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MQk9cTYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z36cxzl8it9g5cikei5y.jpeg" alt="Dummy Markdown section after new repository creation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-markdown-to-the-readmemd-file"&gt;
  &lt;/a&gt;
  Adding Markdown to the Readme.md file
&lt;/h3&gt;

&lt;p&gt;Markdown is a lightweight markup language that you can use to add formatting elements to plaintext text documents. It can be used to add anything to a readme file. &lt;br&gt;
Even though its a markup language it does not accept css classes, hence the plain old HTML attributes such as width for an image , align="center" for a paragraph tag can be used to align the layout. Read more about markdown &lt;a href="https://www.markdownguide.org/cheat-sheet/"&gt;Markdown cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#widgets"&gt;
  &lt;/a&gt;
  Widgets
&lt;/h3&gt;

&lt;p&gt;You can add the below code to your markdown file , replacing {username} with your github profile username. There are more options such as choosing your own themes, &lt;br&gt;
whether you want to show the icons or not. To know more about the options, you can refer  &lt;a href="https://github.com/anuraghazra/github-readme-stats#github-stats-card"&gt;Github Widgets&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#### Github Stats
&amp;lt;img src="https://github-readme-stats.vercel.app/api?username={username}&amp;amp;show_icons=true&amp;amp;theme=gotham" alt="github stats" width="45%" align="right"/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;### Github Streaks
&amp;lt;img¬†src="https://github-readme-streak-stats.herokuapp.com/?user=kritika-pattalam&amp;amp;theme=dark" width="48%" &amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;### Top Languages
 ![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=kritika-pattalam&amp;amp;layout=compact)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#stackoverflow-reputation-using-flair"&gt;
  &lt;/a&gt;
  Stackoverflow reputation using Flair
&lt;/h3&gt;

&lt;p&gt;If you have a stackoverflow account, adding this to your github profile to reflect your SO reputation is straightforward.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: Go to your stackoverflow account, and click on edit profile and settings.&lt;br&gt;
&lt;strong&gt;Step 2&lt;/strong&gt;: Scroll down to &lt;strong&gt;Flair&lt;/strong&gt; found under site settings.&lt;br&gt;
&lt;strong&gt;Step 3&lt;/strong&gt;: Copy paste the code snippet to your readme file&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jz42wAo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtzh5l3wqaufo8x0khju.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jz42wAo0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtzh5l3wqaufo8x0khju.jpeg" alt="Stackoverflow profile - on how to get the flair"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally once you are done with all the changes, commit the readme.md file and you should be able to see your Readme.md github profile. You can see mine at &lt;a href="https://github.com/kritika-pattalam"&gt;Kritika's Github Profile&lt;/a&gt; . &lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comments below. Feedback and suggestions are Welcome.!!!!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.markdownguide.org/cheat-sheet/"&gt;Markdown cheatsheet&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://shields.io/category/size"&gt;Create your badges&lt;/a&gt;  eg: my Techstack was created using the shields.io&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/anuraghazra/github-readme-stats#github-stats-card"&gt;Github Widgets&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lets connect on  &lt;a href="https://twitter.com/KritikaPattalam"&gt;Twitter&lt;/a&gt;  | &lt;a href="https://www.linkedin.com/in/kritika-p-296739155/"&gt;LinkedIn&lt;/a&gt; for more web development related chats.&lt;/p&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Build a Crypto Alert App with Strapi and Next.js</title>
      <author>Shada </author>
      <pubDate>Fri, 16 Jul 2021 16:18:38 +0000</pubDate>
      <link>https://dev.to/strapi/how-to-build-a-crypto-alert-app-with-strapi-and-next-js-4b8l</link>
      <guid>https://dev.to/strapi/how-to-build-a-crypto-alert-app-with-strapi-and-next-js-4b8l</guid>
      <description>&lt;p&gt;Liquid syntax error: Variable '{{% raw %}' was not properly terminated with regexp: /\}\}/&lt;/p&gt;
</description>
      <category>nextjs</category>
      <category>crypto</category>
      <category>strapi</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Eliminating Software Development Process w/ Adam Carmi, CTO of Applitools</title>
      <author>Conor Bronsdon</author>
      <pubDate>Fri, 16 Jul 2021 16:17:03 +0000</pubDate>
      <link>https://dev.to/linearb/eliminating-software-development-process-w-adam-carmi-cto-of-applitools-3gcl</link>
      <guid>https://dev.to/linearb/eliminating-software-development-process-w-adam-carmi-cto-of-applitools-3gcl</guid>
      <description>&lt;p&gt;What would happen if you eliminated all of the processes that surround your software development teams today?&lt;/p&gt;

&lt;p&gt;Adam Carmi, CTO of Applitools, joins the &lt;a href="https://devinterrupted.com/podcast/eliminating-software-development-process/"&gt;Dev Interrupted podcast&lt;/a&gt; to discuss how his methodology works, and why you need to start eliminating processes too.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/0U8s16n8iU1yLKY88q9Lch"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;The ins-and-outs of a process-less software &lt;a href="https://linearb.io/blog/dev-methodology-doesnt-matter/"&gt;development method&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;How and why Adam recruits only ‚ÄúA Players‚Äù&lt;/li&gt;
&lt;li&gt;Why he let‚Äôs the product team dictate his engineering roadmap&lt;/li&gt;
&lt;li&gt;How he tackles large projects without time estimates or &lt;a href="https://linearb.io/blog/why-agile-velocity-is-the-most-dangerous-metric-for-software-development-teams/"&gt;sprints&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1300 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>productivity</category>
      <category>programming</category>
      <category>leadership</category>
    </item>
    <item>
      <title>Perfect Table Using HTML &amp; CSS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Fri, 16 Jul 2021 16:14:42 +0000</pubDate>
      <link>https://dev.to/nikhil27b/perfect-table-with-html-37g3</link>
      <guid>https://dev.to/nikhil27b/perfect-table-with-html-37g3</guid>
      <description>&lt;p&gt;Hello Guys,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yfPO80Ku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzjxj5vas5p4scgr4kd9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yfPO80Ku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzjxj5vas5p4scgr4kd9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today I created a Amazing Table Using HTML &amp;amp; CSS. this simple table with little touch of colors and border-radius so this is looks good also I added some padding in the table to its look clean. I hope you like this also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/jOmmVNW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why Astro matters</title>
      <author>Ben Read</author>
      <pubDate>Fri, 16 Jul 2021 16:12:15 +0000</pubDate>
      <link>https://dev.to/endymion1818/why-astro-matters-55nj</link>
      <guid>https://dev.to/endymion1818/why-astro-matters-55nj</guid>
      <description>&lt;p&gt;&lt;strong&gt;Next, Nuxt, Gatsby, SvelteKit ... there's been an explosion of frontend application frameworks lately. I've tried many (but not all) of them, and I've got to say, it's never been a more delightful experience to spin up a new project. So much so, that I've got hundreds of unfinished ones lying around everywhere.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Recently, &lt;a href="https://astro.build"&gt;Astro&lt;/a&gt;, another new frontend application framework, launched itself on the unsuspecting JavaScript public. &lt;/p&gt;

&lt;p&gt;Whilst many of us may have been tempted to say "oh no not another one", this framework really stood out to me.&lt;/p&gt;

&lt;p&gt;What's the point of difference with this one? Why does it "matter" so much? Well, consider this:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-frontend-can-be-one-happy-family-again"&gt;
  &lt;/a&gt;
  1. Frontend can be one happy family again
&lt;/h2&gt;

&lt;p&gt;Astro could be considered the first frontend "meta framework". &lt;/p&gt;

&lt;p&gt;What's one of those then? It's a "set of core interfaces for common services and highly extensible backbone for integrating components &lt;a href="https://www.igi-global.com/chapter/java-web-application-frameworks/16864"&gt;this is already Java thing by the way&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Astro is essentially a "bring your own frontend" approach to modern web frameworks. You can use whatever framework (oh, ok "library" then) you know and love, and still spin up a performant app that you can host almost anywhere.&lt;/p&gt;

&lt;p&gt;Think about the potential here. Astro could be the place the frontend finally comes together. It no longer matters (as much) what framework you use. Use them all if you like ü§∑‚Äç‚ôÇÔ∏è. &lt;/p&gt;

&lt;p&gt;Love Vue? You can love Astro. React? Same. Svelte? You'll find no argument from Astro, because Astro is the glue that underpins how we build websites and applications.&lt;/p&gt;

&lt;p&gt;Great, innit? It'll probably never happen but I can dream, can't I?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-astro-pushes-the-boundaries-for-every-javascript-framework"&gt;
  &lt;/a&gt;
  2. Astro pushes the boundaries for every javascript framework*
&lt;/h2&gt;

&lt;p&gt;(* oh, ok library then)&lt;/p&gt;

&lt;p&gt;Take a look at this tweet from Evan You, the creator of Vue:&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;I just tried this in a Vite SSRed app and this approach totally works... a plugin can simply remove the script tags for the actual bundle and let petite-vue "sprinkle" the parts.&lt;br&gt;&lt;br&gt;aka "Island Architecture" üèùÔ∏è &lt;a href="https://t.co/Oe9KRvFsrd"&gt;&lt;/a&gt;&lt;a href="https://t.co/Oe9KRvFsrd"&gt;https://t.co/Oe9KRvFsrd&lt;/a&gt; &lt;a href="https://t.co/KV7SvCwyn8"&gt;pic.twitter.com/KV7SvCwyn8&lt;/a&gt;&lt;/p&gt;‚Äî Evan You (@youyuxi) &lt;a href="https://twitter.com/youyuxi/status/1411405615369539590?ref_src=twsrc%5Etfw"&gt;July 3, 2021&lt;/a&gt;
&lt;/blockquote&gt;  

&lt;p&gt;Is it a coincidence that Vue now can do a similar thing to Astro? did Astro get Evan to start thinking more about this problem? Could the same be said for the other frameworks too?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://deliciousreverie.co.uk/post/towards-better-rehydration/"&gt;Better hydration is something I've been wanting ever since the present generation of frontend application frameworks came out&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I know the React team have been working on it for a long time. &lt;a href="https://github.com/gatsbyjs/gatsby/issues/17993"&gt;I even opened (very prematurely it turns out!) this issue on the GatsbyJS repo around 2 years ago&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;React 18's hydration prioritisation is a good step forward, however the whole DOM tree still need to be hydrated. Won't it be great when we need only attach JavaScript generated elements to the DOM when components really need them?!&lt;/p&gt;

&lt;p&gt;It would be wonderful to think that partial rehydration could be everywhere, it would certainly level the playing field and even things up a lot &lt;a href="https://gomakethings.com/progressive-enhancement-and-the-next-billion-web-users/"&gt;for the next 1 billion web users&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-out-astro"&gt;
  &lt;/a&gt;
  Check out Astro
&lt;/h2&gt;

&lt;p&gt;If you care about performance (you care right?) please check out this gamechanger. I'm so excited for the potential here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://astro.build"&gt;https://astro.build&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>vue</category>
      <category>svelte</category>
    </item>
    <item>
      <title>How to add audio and video calls to a TalkJS chat by using the Daily API</title>
      <author>Andrew</author>
      <pubDate>Fri, 16 Jul 2021 15:58:55 +0000</pubDate>
      <link>https://dev.to/talkjs/how-to-add-audio-and-video-calls-to-a-talkjs-chat-by-using-the-daily-api-5961</link>
      <guid>https://dev.to/talkjs/how-to-add-audio-and-video-calls-to-a-talkjs-chat-by-using-the-daily-api-5961</guid>
      <description>&lt;p&gt;In this post we‚Äôll explore how we can add video call functionality to a TalkJS chat. With remote work more popular than ever, video calling is in high demand and considered a must-have feature for many chat applications. We‚Äôll be making use of the &lt;a href="https://www.daily.co/"&gt;Daily video API&lt;/a&gt;, which will allow us to get up and running quickly!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-a-simple-talkjs-chat"&gt;
  &lt;/a&gt;
  Setting up a simple TalkJS chat
&lt;/h3&gt;

&lt;p&gt;First of all, we‚Äôll set up a simple conversation. Follow this &lt;a href="https://talkjs.com/docs/Getting_Started/index.html"&gt;Getting Started guide&lt;/a&gt;. You may also want to change the &lt;code&gt;photoUrl&lt;/code&gt; of each user to an actual image address. You can find free images &lt;a href="https://www.pexels.com/search/faces/?size=small"&gt;here&lt;/a&gt; to act as the profile pictures of your users. &lt;/p&gt;

&lt;p&gt;For this tutorial, we will use a chatbox (a single conversation) instead of an inbox that allows you to swap between conversations. You can learn more about a TalkJS chatbox &lt;a href="https://talkjs.com/docs/Features/Chat_UI_Modes/The_Chatbox.html"&gt;here&lt;/a&gt;. Make sure you change this code from the Getting Started guide from:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const inbox = session.createInbox({selected: conversation});
inbox.mount(document.getElementById("talkjs-container"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To the new code for a chatbox:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var chatbox = session.createChatbox(conversation);
chatbox.mount(document.getElementById("talkjs-container"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run your application, it should look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A3DzC73k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22xsr0ob31ci9c159x6c.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A3DzC73k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22xsr0ob31ci9c159x6c.PNG" alt="Screenshot of chat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perfect! Let‚Äôs move on to adding a button to the chat header that will allow us to make video calls.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-a-video-call-button-to-talkjs-chat"&gt;
  &lt;/a&gt;
  Adding a video call button to TalkJS chat
&lt;/h3&gt;

&lt;p&gt;We want to add a video call button to our chat header. We will use the button to toggle whether the video call dialog is shown. Unfortunately we cannot use the in-built ChatHeader component that comes with the chatbox out-of-the-box. TalkJS does not allow click handlers to be added to buttons there. To get around this we can use custom headers as described by this documentation &lt;a href="//talkjs.com/docs/Features/Customizations/Creating_Custom_Headers.html"&gt;here&lt;/a&gt;. This &lt;a href="https://talkjs.com/resources/customizing-the-chatbox-ui-adding-a-custom-header/"&gt;blog post&lt;/a&gt; also describes the process excellently. &lt;/p&gt;

&lt;p&gt;Let‚Äôs get started!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#using-a-custom-chat-header-in-talkjs"&gt;
  &lt;/a&gt;
  Using a custom chat header in TalkJS
&lt;/h4&gt;

&lt;p&gt;First, change our chatbox code to not use the default chat header.&lt;/p&gt;

&lt;p&gt;Change the code from:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var chatbox = session.createChatbox(conversation);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To the new version that won‚Äôt use the default header:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var chatbox = session.createChatbox(conversation, {showChatHeader: false});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Incorporate the &lt;code&gt;talkjs-container&lt;/code&gt; div into the structure shown below. As you can see we have a div for our entire chatbox, and a separate div for our header. We also have a div called &lt;code&gt;button-container&lt;/code&gt; where we‚Äôll add our video call button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!-- Container element for all TalkJS UI elements --&amp;gt;
   &amp;lt;div class="chatbox-container"&amp;gt;

    &amp;lt;!-- Custom TalkJS chat header --&amp;gt;
    &amp;lt;div id="chatbox-header"&amp;gt;

        &amp;lt;div id="header-bg"&amp;gt;&amp;lt;/div&amp;gt;
         &amp;lt;div id="user-avatar"&amp;gt;&amp;lt;/div&amp;gt;
         &amp;lt;p id="header-subject"&amp;gt;&amp;lt;span id="header-username"&amp;gt; Username&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;


        &amp;lt;div class="button-container"&amp;gt;
            &amp;lt;div class="call-button"&amp;gt;
                &amp;lt;!--input type="checkbox" name="notificationToggle" class="toggle-checkbox" id="toggle"--&amp;gt;
                &amp;lt;input type="image" name="videoCallButton" id="videocall" src="https://img.icons8.com/material-sharp/24/ffffff/video-call--v1.png"/&amp;gt; 
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;!-- container element in which TalkJS will display a chat UI --&amp;gt;
    &amp;lt;div id="talkjs-container" style="width: 100%;  height: 500px"&amp;gt;&amp;lt;i&amp;gt;Loading chat...&amp;lt;/i&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#adding-a-username-and-picture-to-a-talkjs-custom-chat-header"&gt;
  &lt;/a&gt;
  Adding a username and picture to a TalkJS custom chat header
&lt;/h4&gt;

&lt;p&gt;Add the following code to incorporate your user‚Äôs name and profile picture into the custom header:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Add the participant user's name and photo to the custom header
var headerUsername = document.getElementById('header-username');
headerUsername.textContent = other.name;      
document.getElementById('user-avatar').style.backgroundImage = "url(" + other.photoUrl + ")";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#styling-a-custom-chat-header-in-talkjs"&gt;
  &lt;/a&gt;
  Styling a custom chat header in TalkJS
&lt;/h4&gt;

&lt;p&gt;Finally, we‚Äôll add some basic CSS so that child elements in the &lt;code&gt;chatbox-container&lt;/code&gt; are centered horizontally and scale their width similar to how the default Chatbox.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;style&amp;gt;
/* Container for everything TalkJS*/
.chatbox-container {
    width: 420px;
    max-width: 100%; 
    margin: auto;
}

/* Custom header for the chatbox*/
#chatbox-header {
    height: 110px;
    position: relative;
    background-color: #000;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    /* Slightly curve the top of the header */
    border-radius: 10px 10px 0 0;
    margin-bottom: -3px;
    padding: 10px;
    position: relative;
}

#header-bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  border-radius: inherit;
  opacity: 0.6;
}

#user-avatar {
  position: absolute;
  height: 50px;
  width: 50px;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  border-radius: 50%;
  border: 2px solid #eee;
}

#chatbox-header p {
  font-family: "Helvetica", sans-serif;
  color: #eee;
  margin: 0;
}

#header-subject {
  position: absolute;
  font-size: 32px;
  left: 70px;
  top: 7px;
}

/* Notification toggle */
.button-container {
    text-align: right;
    position: absolute;
    bottom: 15px;
    right: 10px;
}

.button-container p {
    display: inline;
    font-size: 10px;
    padding-right: 10px;
    vertical-align: middle;
}
.call-button {
    vertical-align: middle;
    display: inline-block;
    position: relative;
    width: 51px;
    -webkit-user-select:none; 
    -moz-user-select:none; 
    -ms-user-select: none;
    user-select: none;
    height: 18px;
}
    &amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After these changes your chat should resemble the following screenshot:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--opAKbCEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1irtb9981ba35nf7e1en.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--opAKbCEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1irtb9981ba35nf7e1en.PNG" alt="Screenshot of chat with custom UI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wow, we‚Äôve made a lot of progress. You can see our new video button, but it currently does not have any functionality.&lt;/p&gt;

&lt;p&gt;Time to hook up the Daily API and have this button open the video call dialog.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-the-daily-api"&gt;
  &lt;/a&gt;
  Setting up the Daily API
&lt;/h3&gt;

&lt;p&gt;Sign up for the Daily API &lt;a href="https://www.daily.co/"&gt;here&lt;/a&gt;. Their free plan allows you to get building and prototyping straight away, without adding any form of payment!&lt;/p&gt;

&lt;p&gt;Creating a Daily room by following this &lt;a href="https://docs.daily.co/docs/experiment-in-the-dashboard#step-by-step-guide-create-a-daily-room-url-from-the-dashboard"&gt;guide&lt;/a&gt;. Each Daily room has an associated URL, we will need this to have our video call.&lt;/p&gt;

&lt;p&gt;To hook up our button to the Daily API we will have to make two additions to our current code:&lt;/p&gt;

&lt;p&gt;Simply add these script tags to your html page:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;script crossorigin src="&lt;a href="https://unpkg.com/@daily-co/daily-js"&gt;https://unpkg.com/@daily-co/daily-js&lt;/a&gt;"&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the following code, make sure to use your own Room URL we set up here&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;```
var callButton = document.getElementById('videocall');

    callButton.addEventListener('click', function() {
        callFrame = window.DailyIframe.createFrame({
            showLeaveButton: true,
            showFullscreenButton: true,
        });
        callFrame.join({ url: 'https://talkjstest.daily.co/{your-video-call-room-id}' })
    });

```
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see we passed in some additional properties like &lt;code&gt;showLeaveButton&lt;/code&gt; and &lt;code&gt;showFullscreenButton&lt;/code&gt;. Check out this &lt;a href="https://docs.daily.co/docs/embed-the-daily-prebuilt-ui#step-by-step-guide-embed-a-daily-room-url"&gt;guide&lt;/a&gt; for more information on what you can do with the premade Daily UI.&lt;/p&gt;

&lt;p&gt;Let‚Äôs run the application and check out our brand new video call functionality!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1TdYBZNS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32kecf9qrgva252khgpg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1TdYBZNS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32kecf9qrgva252khgpg.png" alt="Screenshot of video call"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perfect! Note, if you would like to change anything about how the video call dialog behaves, try changing your Room &lt;a href="https://dashboard.daily.co/settings"&gt;settings&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-regular-audio-calls-to-a-talkjs-chat"&gt;
  &lt;/a&gt;
  Adding regular audio calls to a TalkJS chat
&lt;/h3&gt;

&lt;p&gt;We‚Äôll also add another button, this time for regular audio calls. The main difference here is the user will be placed directly into the call without being shown an option to set up their microphone and camera.&lt;/p&gt;

&lt;p&gt;Go back to your Daily API &lt;a href="https://dashboard.daily.co/"&gt;dashboard&lt;/a&gt; and create a new room. Select settings that are typical of regular calls like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Turning off the Prejoin UI&lt;/li&gt;
&lt;li&gt;Turning off video by default&lt;/li&gt;
&lt;li&gt;Turning off screen share by default.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the settings I have selected:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXwVSnPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rph7o87fr93yp9oivqq5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZXwVSnPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rph7o87fr93yp9oivqq5.png" alt="Screenshot of settings for Daily room"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that our room is set up let‚Äôs add the actual call button icon. Update our &lt;code&gt;button-container&lt;/code&gt; div to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="button-container"&amp;gt;
            &amp;lt;div class="call-button"&amp;gt;
                &amp;lt;input type="image" name="videoCallButton" id="videocall" src="https://img.icons8.com/material-sharp/24/ffffff/video-call--v1.png"/&amp;gt; 
            &amp;lt;/div&amp;gt;
            &amp;lt;div class="call-button"&amp;gt;
                &amp;lt;input type="image" name="audioCallButton" id="audiocall" src="https://img.icons8.com/material-rounded/24/ffffff/phone-disconnected.png"/&amp;gt;
            &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That will add the call icon to our custom chat header panel, but the button will have no functionality. Let‚Äôs add functionality by following similar steps as before. Make sure your new code looks as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var callButton = document.getElementById('videocall');
    var audioCallButton = document.getElementById('audiocall');

    var callFrame; 

    callButton.addEventListener('click', function() {
        if(callFrame != null){
            callFrame.destroy();
        }
        callFrame = window.DailyIframe.createFrame({
            showLeaveButton: true,
            showFullscreenButton: true,
        });


        callFrame.join({ url: 'https://talkjstest.daily.co/{your-video-call-room-id}' })
    });

    //audio button listener
        audioCallButton.addEventListener('click', function() {


        if(callFrame != null)
        {
            callFrame.destroy();
        }

        callFrame = window.DailyIframe.createFrame({
            showLeaveButton: true,
            showFullscreenButton: true,

        });
        callFrame.join({ url: 'https://talkjstest.daily.co/{your-audio-call-room-id}' })
    });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see that we now destroy the &lt;code&gt;callFrame&lt;/code&gt; Chat frame each time the button is pressed, and proceed to load the new audio or video UI depending on what button was clicked. This will ensure only one frame is displayed at any one time.&lt;/p&gt;

&lt;p&gt;Try out your new audio call button. You should be placed directly into a call without having to set up your microphone or camera. It should be similar to having a call on Microsoft Teams, Slack, or Facebook Messenger.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BOP_Tark--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1udo3r6131rnbl2kw9bh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BOP_Tark--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1udo3r6131rnbl2kw9bh.png" alt="Audio call screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There you have it, both audio and video calls integrated with a TalkJS chatbox! Don‚Äôt be afraid to take this project further. This &lt;a href="https://jsfiddle.net/aboxshall/L43eka8w/14/"&gt;JSFiddle project&lt;/a&gt; from TalkJS, along with this &lt;a href="https://github.com/daily-demos/fullscreen-prebuilt-ui"&gt;sample project from Daily&lt;/a&gt;, are great resources that show you even more functionality. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
      <category>chat</category>
    </item>
    <item>
      <title>Django Debug Toolbar - How to configure</title>
      <author>Sm0ke</author>
      <pubDate>Fri, 16 Jul 2021 15:23:18 +0000</pubDate>
      <link>https://dev.to/sm0ke/django-debug-toolbar-how-to-configure-2ap9</link>
      <guid>https://dev.to/sm0ke/django-debug-toolbar-how-to-configure-2ap9</guid>
      <description>&lt;p&gt;Hello Coders,&lt;/p&gt;

&lt;p&gt;This article explains how to add the popular &lt;strong&gt;Debug Toolbar&lt;/strong&gt; to a Django project. For newcomers, the &lt;a href="https://docs.appseed.us/content/how-to/django-add-debug-toolbar"&gt;Django Debug Toolbar&lt;/a&gt; is a configurable set of panels that bumps various information about the current request/response when clicked. To make this article more useful, an open-source sample already configured is provided on Github (MIT License). &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/django-add-debug-toolbar"&gt;Django Add Debug Toolbar&lt;/a&gt; - Open-source sample&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/product/django-soft-ui-dashboard"&gt;Django Soft UI Dashboard&lt;/a&gt; - the initial product (also free)&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--trddKtxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3lp9kcqxs6l2icmgvmc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--trddKtxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3lp9kcqxs6l2icmgvmc.jpg" alt="Django Debug Toolbar - Open-source sample provided by AppSeed."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#django-toolbar-set-up"&gt;
  &lt;/a&gt;
  Django Toolbar Set Up
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Add django-debug-toolbar to project dependencies&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# File: requirements.txt
...
django-debug-toolbar
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or simply install via PIP&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;django-debug-toolbar
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Update project routes&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# File core/urls.py
&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;debug_toolbar&lt;/span&gt;   &lt;span class="c1"&gt;# &amp;lt;-- NEW                     
&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;  

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'__debug__/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug_toolbar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;   &lt;span class="p"&gt;...&lt;/span&gt; 
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Update Settings&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# File core/settings.py
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;decouple&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;unipath&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;dj_database_url&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mimetypes&lt;/span&gt;                      &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;

&lt;span class="n"&gt;BASE_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;

&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt; 
   &lt;span class="s"&gt;'django.contrib.staticfiles'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s"&gt;'debug_toolbar'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                   &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;   &lt;span class="p"&gt;...&lt;/span&gt;  
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;MIDDLEWARE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="s"&gt;'django.middleware.clickjacking.XFrameOptionsMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s"&gt;'debug_toolbar.middleware.DebugToolbarMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;          &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;INTERNAL_IPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;                                               &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;    &lt;span class="s"&gt;'127.0.0.1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                               &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;                                                              &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show_toolbar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;                                     &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;                                                &lt;span class="c1"&gt;# &amp;lt;-- NEW 
&lt;/span&gt;
&lt;span class="n"&gt;DEBUG_TOOLBAR_CONFIG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;                                       &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;    &lt;span class="s"&gt;"SHOW_TOOLBAR_CALLBACK"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;show_toolbar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;                                                              &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;                                                      &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mimetypes&lt;/span&gt;                                           &lt;span class="c1"&gt;# &amp;lt;-- NEW          
&lt;/span&gt;    &lt;span class="n"&gt;mimetypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"application/javascript"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;".js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #4&lt;/strong&gt; - Execute the migration&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py makemigrations
&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #5&lt;/strong&gt; - Start the Django Project&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, the &lt;strong&gt;Debug Toolbar&lt;/strong&gt; should be visible on the right side for all pages. &lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--trddKtxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3lp9kcqxs6l2icmgvmc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--trddKtxI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3lp9kcqxs6l2icmgvmc.jpg" alt="Django Debug Toolbar - Open-source sample provided by AppSeed."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://django-debug-toolbar.readthedocs.io/en/latest/installation.html"&gt;Django Debug Toolbar&lt;/a&gt; - official docs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pypi.org/project/django-debug-toolbar/"&gt;Django Debug Toolbar&lt;/a&gt; - PyPi page
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>django</category>
      <category>webdev</category>
      <category>debug</category>
    </item>
    <item>
      <title>Getting Started with AWS Config, CloudTrail, CloudWatch, S3, SNS</title>
      <author>Alanoud Alassaf</author>
      <pubDate>Fri, 16 Jul 2021 15:22:02 +0000</pubDate>
      <link>https://dev.to/aws-builders/setting-up-aws-config-cloudtrail-cloudwatch-s3-sns-1456</link>
      <guid>https://dev.to/aws-builders/setting-up-aws-config-cloudtrail-cloudwatch-s3-sns-1456</guid>
      <description>&lt;p&gt;Security is one of the major concerns in any environment, whether you are planning to run a start-up or having an enterprise, you should always consider security before anything and have a zero-trust model.&lt;/p&gt;

&lt;p&gt;It is better to be proactive and secure your resource than being a reactive and start implementing security after an incident, some of the reasons are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Save money.&lt;/li&gt;
&lt;li&gt;  Save efforts.&lt;/li&gt;
&lt;li&gt;  Availability of your services.&lt;/li&gt;
&lt;li&gt;  Business reputation.&lt;/li&gt;
&lt;li&gt;  And many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;What is AWS Config?&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;AWS Config is a service that enables you to assess, audit, and evaluate the configurations of your AWS resources. Config continuously monitors and records your AWS resource configurations and allows you to automate the evaluation of recorded configurations against desired configurations. With Config, you can review changes in configurations and relationships between AWS resources, dive into detailed resource configuration histories, and determine your overall compliance against the configurations specified in your internal guidelines. This enables you to simplify compliance auditing, security analysis, change management, and operational troubleshooting.&lt;br&gt;
&lt;a href="https://aws.amazon.com/config/?nc1=h_ls"&gt;Source: AWS Config&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this demo, we will set up AWS Config, assign a rule to it, set up AWS CloudTrail, enable CloudWatch to monitor CloudTrail, set up S3 bucket to store our log files, and set up Simple Notification Service to receive notifications through email.&lt;/p&gt;

&lt;p&gt;With all that being said, let‚Äôs open the console and start setting up AWS Config:&lt;/p&gt;

&lt;p&gt;Login to your AWS account&lt;/p&gt;

&lt;p&gt;Click on &lt;em&gt;all services&lt;/em&gt;, then you will find Config under &lt;em&gt;Management &amp;amp; Governance&lt;/em&gt; Section, click it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EcvYZXEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8spjru3rdpwx9n6zdxux.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EcvYZXEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8spjru3rdpwx9n6zdxux.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will take you to AWS Config‚Äôs dashboard. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L_A6FJL8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zhp1uv8fa05z1qjyfit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L_A6FJL8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zhp1uv8fa05z1qjyfit.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;em&gt;Get started&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now you can start setting up your Config, &lt;br&gt;
For the resource type; you can choose &lt;em&gt;Record all resources in this region&lt;/em&gt;, this will allow config to record all your resources in the region you‚Äôre currently using, and you can check the box below which says ‚Äú&lt;em&gt;include global resources&lt;/em&gt;‚Äù this will also get the resources that operates in a global basis such as IAM.&lt;/p&gt;

&lt;p&gt;Now you will need an &lt;em&gt;S3 bucket&lt;/em&gt; to store your config log files, &lt;br&gt;
you have the option to choose an existing one or create a new one directly from Config‚Äôs settings, and it will suggest a name for your S3 bucket as you can see in the screenshot below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a7eZtY7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/usj78nmqirijuxk75xns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a7eZtY7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/usj78nmqirijuxk75xns.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By checking the box for SNS topic you will set up a &lt;em&gt;Simple Notification Service (SNS)&lt;/em&gt; topic to provide you with notifications related to your Config. &lt;br&gt;
You have the option to create a new SNS topic or choose an existing one whether it‚Äôs from your account or another account.&lt;/p&gt;

&lt;p&gt;For this demo, I will create a new SNS topic and give the topic a name: config-topic.&lt;/p&gt;

&lt;p&gt;Then you can click &lt;em&gt;next&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---WxLve1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fb2cfhf7ykcvfcf76hiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---WxLve1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fb2cfhf7ykcvfcf76hiw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will take you to &lt;em&gt;step 2&lt;/em&gt;: to assign rules. &lt;br&gt;
As you can see below there are more than 150 rules ready to use, provided and managed by AWS,&lt;br&gt;
but of course, you have the option to create your own rules.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pobXEMnE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99rf4m6bn1py4cki4oew.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pobXEMnE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99rf4m6bn1py4cki4oew.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this demo, I will choose an AWS managed rule.&lt;br&gt;
Cloudtrail-enabled: this rule will periodically check whether AWS cloudtrail is enabled in your account or not.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cUWrjDWb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kb4brdmoff5ic3d0lj24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cUWrjDWb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kb4brdmoff5ic3d0lj24.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then click &lt;em&gt;next&lt;/em&gt; and review your configurations then click &lt;em&gt;confirm&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yw--dRk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71lzv7yr5o7w04erk1ag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yw--dRk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71lzv7yr5o7w04erk1ag.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your AWS Config Dashboard will open, this is where you can add/edit/delete rules, check compliances and basically manage everything.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwG1ZBjM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bsemcx91g50m4jrsxnf7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwG1ZBjM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bsemcx91g50m4jrsxnf7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let‚Äôs set up a CloudTrail, you can find it under &lt;em&gt;Management and Governance&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--72ofCeXA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adskg96y3mi93b7xo9ng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--72ofCeXA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adskg96y3mi93b7xo9ng.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you‚Äôre in the dashboard, click &lt;em&gt;create trail&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XFq-qhDm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/837es56qggqgb4kwgri3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XFq-qhDm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/837es56qggqgb4kwgri3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give it a name and select where do you want to store the logs;&lt;br&gt;
You can use one of your existing S3 buckets, or create a new one directly from here,&lt;br&gt;
I will create a new one and it will automatically provide a name for it (you can change it) you also have the option to encrypt log files using KMS, for this demo I will keep it as it is.&lt;/p&gt;

&lt;p&gt;You can also enable Simple Notification Service (SNS) and associate it with this Trail. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x_Q81Ai9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zu1jqqmexgb2y8lay0q7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x_Q81Ai9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zu1jqqmexgb2y8lay0q7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you have the option to enable CloudWatch logs; which will monitor your CloudTrail logs. &lt;br&gt;
I will enable it and choose a new log group then give it a name (It will provide it automatically, but you can change it).&lt;/p&gt;

&lt;p&gt;Then you will need to assign an IAM Role to enable communication between CloudTrail and CloudWatch, I will choose a new role and give it a name.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pYNhxaqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4w3ucc5m6lhjiah878z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pYNhxaqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m4w3ucc5m6lhjiah878z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will select the type of events that you want CloudTrail to log, I will select them all. &lt;br&gt;
It will ask you to specify the kind of API activities to log for the management events, I will choose the read and write activates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ZDRWQsk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtml8j32bsijjum6ofsh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ZDRWQsk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtml8j32bsijjum6ofsh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the data events, it will ask you to select the source of data, I will keep it S3; you can select a specific S3 bucket, or all current and future S3 buckets, I will keep it for &lt;em&gt;all S3 buckets&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In insights events, you can enable the API Call rate to measure any unusual activities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2kzAYftK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llcjezq2mu0tnosrfr2o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2kzAYftK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llcjezq2mu0tnosrfr2o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;em&gt;next&lt;/em&gt;, review your settings, and click &lt;em&gt;create trail&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now you can see our trail ‚ÄúCloudTrail-test‚Äù is &lt;em&gt;enabled&lt;/em&gt; and the status is &lt;em&gt;Logging&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kufsCrc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwg9kiun57g81to2oui5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kufsCrc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwg9kiun57g81to2oui5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs go to &lt;em&gt;S3&lt;/em&gt;, you can find it under &lt;em&gt;Storage&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uYBT0blh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijlm249lkd17bxg4kyh7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uYBT0blh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijlm249lkd17bxg4kyh7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see our S3 bucket has been created, and we can find all CloudTrail logs inside it&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qm9iqVbV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uw3lsx0wpr2w8cu0q2hi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qm9iqVbV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uw3lsx0wpr2w8cu0q2hi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you click on it you will find our folders that contains logs from CloudTrail.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MPZNrfok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix2w0t53b142ygb36g74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MPZNrfok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix2w0t53b142ygb36g74.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let‚Äôs go to &lt;em&gt;Simple Notification Service (SNS)&lt;/em&gt;, you can find it under &lt;em&gt;Application Integration&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5O4Z8y9q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf7z985qm1h6tg5og4hc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5O4Z8y9q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf7z985qm1h6tg5og4hc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will find the Topic that we created earlier (while setting up Config) here -you will need the ARN in the next step-. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vxjuONEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixjwg82ml62q8ot9iuw3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vxjuONEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixjwg82ml62q8ot9iuw3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs connect it to our email to receive notifications there.&lt;/p&gt;

&lt;p&gt;Click on &lt;em&gt;subscriptions&lt;/em&gt; (you can find it on your left-hand side of the screen) click &lt;em&gt;create subscription&lt;/em&gt; and fill the necessary details.&lt;/p&gt;

&lt;p&gt;Select the Topic that you want to connect to your email (your topic's ARN), and in the protocol section, select email.&lt;/p&gt;

&lt;p&gt;For the endpoint, add your email address then create the subscription.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6JPiDfmm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hsgnlkcm2cf41eqdui6y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6JPiDfmm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hsgnlkcm2cf41eqdui6y.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will receive an email to confirm the subscription, click on the link that says ‚Äú&lt;em&gt;Confirm Subscription&lt;/em&gt;‚Äù.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cuGe-n3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5tjoix6ian8byo8icivn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cuGe-n3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5tjoix6ian8byo8icivn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will open a new web page that confirms your subscription, with your subscription ID and an option to remove the subscription.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0wHssTgE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3kzvz7eda80f91orn68.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0wHssTgE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3kzvz7eda80f91orn68.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you go back to SNS Subscriptions, you will find your subscription ID, your email address and the status is &lt;em&gt;confirmed&lt;/em&gt;.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2vxk86J---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj1thjf2hogc2x1rqd0e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2vxk86J---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj1thjf2hogc2x1rqd0e.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you go back to AWS Config, you will find your cloudtrail-enabled rule compliant now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wr1Dc9jr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g18lrz1t7d1nwsz2vzo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wr1Dc9jr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g18lrz1t7d1nwsz2vzo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#voila"&gt;
  &lt;/a&gt;
  Voila!
&lt;/h3&gt;

&lt;p&gt;We now have a centralized configuration dashboard associated with chosen rules to evaluate our security, CloudTrail to audit API calls, S3 bucket to store all log files and receive notifications via email.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>security</category>
      <category>cloud</category>
    </item>
  </channel>
</rss>
