<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>
Gitaly at Scalingo: Explaining the complete redesign of how we host your application git repositories</title>
      <author>Étienne M.</author>
      <pubDate>Mon, 26 Apr 2021 09:46:28 +0000</pubDate>
      <link>https://dev.to/etiennem/gitaly-at-scalingo-explaining-the-complete-redesign-of-how-we-host-your-application-git-repositories-4550</link>
      <guid>https://dev.to/etiennem/gitaly-at-scalingo-explaining-the-complete-redesign-of-how-we-host-your-application-git-repositories-4550</guid>
      <description>&lt;p&gt;Do you want to learn about Gitaly, the open-source solution to host Git repositories created by GitLab?&lt;/p&gt;

&lt;p&gt;To give a bit of context, I work for the cloud hosting platform Scalingo. &lt;a href="http://scalingo.com/"&gt;Scalingo&lt;/a&gt; is a European Platform as a Service and we host git repositories from a lot of users.&lt;/p&gt;

&lt;p&gt;We thought that the process we used can help other developers and this is why we wrote this article.&lt;/p&gt;

&lt;p&gt;In this article I will share the reasons behind this redesign (bye bye NFS), the choice we made (good morning Gitaly), and how we implemented Gitaly.&lt;/p&gt;

&lt;p&gt;Let’s get our hands dirty!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-gitaly"&gt;
  &lt;/a&gt;
  What is Gitaly?
&lt;/h2&gt;

&lt;p&gt;Gitaly is an open-source solution developed by GitLab. It provides high-level RPC access to Git repositories. It is obviously used by GitLab to read and write Git data.&lt;/p&gt;

&lt;p&gt;You can learn more about it on &lt;a href="https://docs.gitlab.com/ee/administration/gitaly/"&gt;GitLab Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-gitaly-works"&gt;
  &lt;/a&gt;
  How Does Gitaly Works
&lt;/h2&gt;

&lt;p&gt;Gitaly offers a couple of components: Praefect and Gitaly.&lt;/p&gt;

&lt;p&gt;Gitaly is a daemon which runs on all nodes intended to store the Git repositories data (no more NFS!). It offers a high level Git API with gRPC. This high level API is also interesting so that our operators do not need to understand too much of Git internal working. They would be able to work with some high level API calls.&lt;/p&gt;

&lt;p&gt;Praefect is intended at distributing the incoming connections to the Gitaly nodes. It detects a Gitaly node failure to be able to dispatch the connections to healthy nodes. It also ensures a repository is replicated on all Gitaly nodes. This is the component responsible of the high availability. It is really important for Scalingo to ensure all components are highly available!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-did-we-proceed-to-choose-gitaly-and-how-can-this-help-you-to-choose-a-technology"&gt;
  &lt;/a&gt;
  How did we proceed to choose Gitaly and how can this help you to choose a technology?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#our-infrastructure-before-gitaly"&gt;
  &lt;/a&gt;
  Our infrastructure before Gitaly
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m8NOTP4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqsfffy0bobgxkynx64w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m8NOTP4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqsfffy0bobgxkynx64w.png" alt="Scalingo Architecture with NFS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The source code of all applications hosted on Scalingo is on a NFS shared folder. This folder is shared among all the builders.&lt;/p&gt;

&lt;p&gt;This architecture may lead to various problems. For example, a problem may arise if multiple deployments are triggered on an application in a short time interval. Under some race condition, we may unmount the NFS folder in the middle of the second deployment.&lt;/p&gt;

&lt;p&gt;But NFS was also known at Scalingo to imply other issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Performance issues&lt;/li&gt;
&lt;li&gt;Network latency for file access&lt;/li&gt;
&lt;li&gt;Process reading the files may end up in an uninterruptible sleep&lt;/li&gt;
&lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To make a long story short: NFS was used in various places in Scalingo infancy. We are slowly moving away from it everywhere possible. And Git repositories hosting is one of the last bastions using NFS at Scalingo.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-criteria-we-used-to-choose-and-how-this-can-help-you"&gt;
  &lt;/a&gt;
  The criteria we used to choose and how this can help you
&lt;/h3&gt;

&lt;p&gt;From what we read, we are not alone trying to find a good solution for repositories hosting. Especially, the most well known source code hosting company communicated about this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHub announced the creation of a home made solution named Spokes to get rid of NFS.&lt;/li&gt;
&lt;li&gt;GitLab released the open source software Gitaly to manage their repositories.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also explored other options such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Updating the current software to be more up-to-date and easier to maintain, and get rid of NFS by using an object storage for the storage.&lt;/li&gt;
&lt;li&gt;Using Git Ketch which used to be in use at Google.&lt;/li&gt;
&lt;li&gt;Using Stemma to manage the Git repositories and implement our own logic for automatic failover.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We further investigated, and compared various criteria that you can discover in the image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ECasdXgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xls3krjtooaubqnnqys.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ECasdXgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xls3krjtooaubqnnqys.png" alt="Criteria for Choosing the Best Solution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These criteria range from all the Git features we need (push, reupload and fetch) to more fuzzy criteria such as the perceived complexity of a solution or our perceived confidence in the solution.&lt;/p&gt;

&lt;p&gt;Out of those criteria we always give our best to understand the time that is necessary to implement the solution.&lt;/p&gt;

&lt;p&gt;We eventually settled on Gitaly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;They developed it to get rid of NFS, just like us \o/&lt;/li&gt;
&lt;li&gt;Horizontally scalable: one can easily add more storage capacity by adding new nodes to the cluster.&lt;/li&gt;
&lt;li&gt;Prevents write errors.&lt;/li&gt;
&lt;li&gt;Highly available: with NFS, a server outage leads to a downtime for all the deployments on the platform. In the Gitaly world, the server is more resilient to failure.&lt;/li&gt;
&lt;li&gt;The Gitaly project is open source with a license allowing us to use it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#our-infrastructure-with-gitaly"&gt;
  &lt;/a&gt;
  Our infrastructure with Gitaly
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--umlms15e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3e5iv7oooctbyl6wpqh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--umlms15e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3e5iv7oooctbyl6wpqh.png" alt="How does Gitaly work at Scalingo?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As seen on this figure, the new architecture uses Praefect and Gitaly for the Git repositories storage. It also includes a new software developed internally called Git Repository Core.&lt;/p&gt;

&lt;p&gt;This software acts as a router: it receives incoming SSH connection coming from the &lt;code&gt;git push scalingo master&lt;/code&gt; command issued by a customer, and direct it either to the NFS repository storage or to the Gitaly storage. &lt;/p&gt;

&lt;p&gt;This was a strong requisite for us so that we could release this feature using the canary release pattern: release Gitaly backend for a small share of our customers and increase the share of customers using it over time.&lt;/p&gt;

&lt;p&gt;It is also in charge of triggering the deployment of the code hosted on Gitaly.&lt;/p&gt;

&lt;p&gt;With it’s central place, Git Repository Core allows us to intercept the Git traffic, and potentially filter it. We plan to add more security features, but also convenient ones for people deploying their application using this Git integration. For instance, adding the ability to customize the main branch name (e.g. main rather than the default master branch).&lt;/p&gt;

&lt;p&gt;On a more internal perspective, Git Repository Core allows us to develop administrative endpoint to ease the work from the operator in their day-to-day work.&lt;/p&gt;

&lt;p&gt;All elements on the figure are duplicated to improve the resiliency to server failures.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Gitaly is an open-source solution that offers a new way to handle git repositories.&lt;/p&gt;

&lt;p&gt;For us it was a big change and this will help us to handle our current growth and avoid &lt;/p&gt;

&lt;p&gt;If you want to read the full article or discover &lt;a href="https://scalingo.com/"&gt;Scalingo&lt;/a&gt; we invite you to read it &lt;a href="https://scalingo.com/blog/gitaly-at-scalingo"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>devops</category>
      <category>hosting</category>
      <category>infrastructure</category>
    </item>
    <item>
      <title>A new CLI for DEV Community</title>
      <author>Gealber Morales</author>
      <pubDate>Mon, 26 Apr 2021 09:45:24 +0000</pubDate>
      <link>https://dev.to/gealber/a-new-cli-for-dev-community-e9k</link>
      <guid>https://dev.to/gealber/a-new-cli-for-dev-community-e9k</guid>
      <description>&lt;h2&gt;
  &lt;a href="#devto-a-golang-cli-for-dev"&gt;
  &lt;/a&gt;
  Devto a Golang CLI for &lt;a href="https://dev.to"&gt;DEV&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It's not ready yet, but on this weekend I started to develop a CLI using &lt;a href="https://docs.forem.com/api/"&gt;DEV API(beta)&lt;/a&gt;. It's written in Go with zero dependency, maybe not a wise decision but still is a lot of fun 😄. Learned a lot about reflect package in Go.&lt;/p&gt;

&lt;p&gt;Here's the link in case you want to check it out.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/Gealber/devto-cli"&gt;devto&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Share it if you like it, and/or let you comment below for any criticism or suggestion.&lt;/p&gt;

</description>
      <category>cli</category>
      <category>go</category>
      <category>devto</category>
      <category>linux</category>
    </item>
    <item>
      <title>How to Hire Ruby on Rails Developer: A Complete Guide
</title>
      <author>Rachael Grey</author>
      <pubDate>Mon, 26 Apr 2021 09:39:53 +0000</pubDate>
      <link>https://dev.to/rachaelgrey3/how-to-hire-ruby-on-rails-developer-a-complete-guide-164a</link>
      <guid>https://dev.to/rachaelgrey3/how-to-hire-ruby-on-rails-developer-a-complete-guide-164a</guid>
      <description>&lt;p&gt;Ruby on Rails, a fantastic framework for developing websites, has successfully attracted the majority of developers. Additionally, many well-known companies used it to construct a few famous applications like Airbnb, Twitch, Shopify, and Hulu... &lt;br&gt;
It’s been pretty time because this software development technology took to the throne, challenging others withinside the industry. While Node.js is extensively used to construct internet packages, Ruby on Rails is sensational, and catching up with the trend will assist you to continue to be at the leading edge of innovation.&lt;/p&gt;

&lt;p&gt;To &lt;strong&gt;hire Ruby on Rails developer&lt;/strong&gt; for your upcoming project, follow this step-by-step guide. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1: Research&lt;/strong&gt;&lt;br&gt;
If you are looking for a Ruby on Rails developer, there are numerous alternatives to choose from while considering Hire Ruby on Rails Developer. Like, Freelancers, Offshore Ruby on Rails Development Team, or getting the House team for Ruby on Rails Development. You can do the research primarily based totally on your project’s size or how complicated the requirement of your tasks is.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2: Creating a job description&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;While writing a job description, recruiters have to keep the following things in mind:&lt;/p&gt;

&lt;p&gt;First of all, you should write a short description that mentions your development project requirements and lists out the features and functions that you require in the developer. With Ruby on Rails’ robust capabilities, feel free to envision a high-functioning product. &lt;/p&gt;

&lt;p&gt;This job description should also state what the company will expect from the developers they hire so that the potential candidates will get the idea of whether they are perfect for this job.&lt;/p&gt;

&lt;p&gt;It would be best if you did not forget to consider the technical skills when you hire Ruby on Rails developer as it is one of the essential points to look for. All the projects done in the IT department are done based on a technicality. So developers must have the necessary technical skills to hire Ruby on Rails developers who are highly capable and have the proper knowledge and skills. &lt;/p&gt;

&lt;p&gt;These are the technical skills that every Ruby on Rails developer must have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MVC paradigm&lt;/li&gt;
&lt;li&gt;ActiveRecord&lt;/li&gt;
&lt;li&gt;Unit Testing&lt;/li&gt;
&lt;li&gt;ERB (Embedded Ruby)&lt;/li&gt;
&lt;li&gt;JSON (JavaScript Object Notation) based APIs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Step 3: In-house or Remote?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another essential factor you should consider the type of working arrangement you prefer with your future Ruby on Rails developer. Depending on the scale of your development project, an in-house could be more suited for you.&lt;/p&gt;

&lt;p&gt;Recruiting Ruby on Rails developers on a permanent or full-time basis is also an option. You should hire in-house ruby on rails developer or a team that will work specifically for you only. You can find and hire in-house developers in various job portals.&lt;br&gt;
If you choose to hire a remote offshore team, you will save office costs and time, and also, there will be no need to pay huge taxes, and you will also get to choose the project manager of a team. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4: Schedule the interviews with Ruby on Rails Developers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There is one important that you should keep in mind before you start the process of interviewing the potential candidates that the developer that you hire might not be perfect and sometimes will not be able to meet one or two criteria, but you keep in mind that communication is the key so make sure to communicate easily with the developer or a team &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5: Stay on the same page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before you make any final decisions, make sure that you and the development team you have hired for Ruby on Rails development are on the same page. You can confirm that by making sure that the work culture that you both follow if it is different from one another, does not affect your work, and make sure to communicate what you expect from this project and how you should do the work to the development team that you have hired so that the final output that the team will present can be perfect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6:Get started with your project!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After confirming that everything is in the proper format, arrange all the necessary resources to get started with your new project. Setting up the required goals will help you achieve your results as per the timeline set for your project.&lt;/p&gt;

&lt;p&gt;To conclude, this is the basic process that most of the top-rated development companies follow to hire ruby on rails developer or a team &lt;/p&gt;

&lt;p&gt;Once you set your mind, you will be able to find and &lt;a href="https://www.bacancytechnology.com/ruby-on-rails-development"&gt;hire ruby on Rails developer&lt;/a&gt; that is right for your project and will work according to the needs and requirements of your project&lt;br&gt;
So hurry and get started with a development project with your dedicated Ruby on Rails development team by your side.&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>developer</category>
      <category>rails</category>
      <category>company</category>
    </item>
    <item>
      <title>Parallax Scrolling Effect Using JavaScript | HTML &amp; CSS</title>
      <author>ali-dev-hash</author>
      <pubDate>Mon, 26 Apr 2021 09:37:52 +0000</pubDate>
      <link>https://dev.to/alidevhash/parallax-scrolling-effect-using-javascript-html-css-3kek</link>
      <guid>https://dev.to/alidevhash/parallax-scrolling-effect-using-javascript-html-css-3kek</guid>
      <description>&lt;p&gt;Parallax Scrolling Effect Using JavaScript | HTML &amp;amp; CSS&lt;/p&gt;

&lt;p&gt;Demo == &amp;gt; &lt;a href="https://codepen.io/Bilal1909/pen/zYNebga"&gt;https://codepen.io/Bilal1909/pen/zYNebga&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oShXkezB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/PxxPWHsY/screenshot-codepen-io-2021-04-26-14-29-55-336.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oShXkezB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/PxxPWHsY/screenshot-codepen-io-2021-04-26-14-29-55-336.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YOKnEWnr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/5NqQWn3H/screenshot-codepen-io-2021-04-26-14-30-29-300.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YOKnEWnr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/5NqQWn3H/screenshot-codepen-io-2021-04-26-14-30-29-300.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_hwJaKUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/0yjkXfH1/screenshot-codepen-io-2021-04-26-14-31-05-331.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_hwJaKUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/0yjkXfH1/screenshot-codepen-io-2021-04-26-14-31-05-331.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Parallax Scrolling CSS - Parallax Effect In HTML &amp;amp; CSS In Just 5 Minutes&lt;/p&gt;

&lt;h2&gt;What is Parallax Effect ?&lt;/h2&gt;

&lt;p&gt;Parallax scrolling is a web site trend where the background content (i.e. an image) is moved at a different speed than the foreground content while scrolling. Click on the links below to see the difference between a website with and without parallax scrolling.&lt;/p&gt;

&lt;p&gt;Note: Parallax scrolling does not always work on mobile devices/smart phones. However, you can use media queries to turn off the effect on mobile devices (see last example on this page).&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>programming</category>
      <category>ux</category>
    </item>
    <item>
      <title>Solution: Furthest Building You Can Reach</title>
      <author>seanpgallivan</author>
      <pubDate>Mon, 26 Apr 2021 09:33:43 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-furthest-building-you-can-reach-1m24</link>
      <guid>https://dev.to/seanpgallivan/solution-furthest-building-you-can-reach-1m24</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/furthest-building-you-can-reach/discuss/1177243"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-1642-medium-furthest-building-you-can-reach"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/furthest-building-you-can-reach/"&gt;Leetcode Problem #1642 (&lt;em&gt;Medium&lt;/em&gt;): Furthest Building You Can Reach&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You are given an integer array heights representing the heights of buildings, some bricks, and some ladders.&lt;/p&gt;

&lt;p&gt;You start your journey from building 0 and move to the next building by possibly using bricks or ladders.&lt;/p&gt;

&lt;p&gt;While moving from building i to building i+1 (0-indexed),&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; If the current building's height is greater than or equal to the next building's height, you do not need a ladder or bricks.&lt;/li&gt;
&lt;li&gt; If the current building's height is less than the next building's height, you can either use one ladder or (h[i+1] - h[i]) bricks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Return the furthest building index (0-indexed) you can reach if you use the given ladders and bricks optimally.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;heights = [4,2,7,6,9,14,12], bricks = 5, ladders = 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;Starting at building 0, you can follow these steps:&lt;br&gt;- Go to building 1 without using ladders nor bricks since 4 &amp;gt;= 2.&lt;br&gt;- Go to building 2 using 5 bricks. You must use either bricks or ladders because 2 &amp;lt; 7.&lt;br&gt;- Go to building 3 without using ladders nor bricks since 7 &amp;gt;= 6.&lt;br&gt;- Go to building 4 using your only ladder. You must use either bricks or ladders because 6 &amp;lt; 9.&lt;br&gt;It is impossible to go beyond building 4 because you do not have any more bricks or ladders.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nRyj8_rs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://assets.leetcode.com/uploads/2020/10/27/q4.gif" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;heights = [4,12,2,7,3,18,20,3,19], bricks = 10, ladders = 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;heights = [14,3,19,3], bricks = 17, ladders = 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= heights.length &amp;lt;= 10^5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= heights[i] &amp;lt;= 10^6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= bricks &amp;lt;= 10^9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= ladders &amp;lt;= heights.length&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The first realization should be that we always want to use our ladders to their best effect: where they would save us the most amount of bricks. Unfortunately, we can't just save the ladders for the largest gaps in the building heights, because we may not be able to reach them by using bricks.&lt;/p&gt;

&lt;p&gt;Since we can't find out how far we can go until we figure out where to place the ladders, and we can't figure out where to put the ladders until we see how far we can go, we'll have to move the ladders around as we go in order to maintain their maximum effect.&lt;/p&gt;

&lt;p&gt;To put this in terms of a coding solution, as we iterate through the building heights array (&lt;strong&gt;H&lt;/strong&gt;), we'll want to continuously make sure that the largest &lt;strong&gt;L&lt;/strong&gt; number of positive differences are occupied with ladders, allowing us the best use of our &lt;strong&gt;B&lt;/strong&gt; number of bricks.&lt;/p&gt;

&lt;p&gt;In general, this means that we should start iterating through &lt;strong&gt;H&lt;/strong&gt;, ignoring any difference (&lt;strong&gt;diff&lt;/strong&gt;) that is &lt;strong&gt;0&lt;/strong&gt; or less, and place a ladder whenever we have a positive difference. Once we've used up all the ladders, then we can start using bricks. If we come across a &lt;strong&gt;diff&lt;/strong&gt; that is larger than the smallest ladder that we're currently using, we should replace that ladder with bricks and move the ladder forwad to the current &lt;strong&gt;diff&lt;/strong&gt;. Otherwise we should use bricks for the current &lt;strong&gt;diff&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The second big realization at this point is that we need a &lt;strong&gt;min-heap&lt;/strong&gt; or &lt;strong&gt;min priority queue&lt;/strong&gt; in order to keep track of the heights of the ladders in use, so that we can always take the smallest one, thus keeping the ladders always on the largest diff values.&lt;/p&gt;

&lt;p&gt;If at any point we run out bricks, then we can't reach the next building and should &lt;strong&gt;return i&lt;/strong&gt;. If we're able to reach the end of &lt;strong&gt;H&lt;/strong&gt; without running out of bricks, we can &lt;strong&gt;return H.length - 1&lt;/strong&gt;, signifying that we reached the last building.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N)&lt;/strong&gt; where N is the length of H&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(L)&lt;/strong&gt; to keep track of L number of ladder lengths&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;The Javascript &lt;strong&gt;MinPriorityQueue()&lt;/strong&gt; npm package isn't as efficient as a &lt;strong&gt;min-heap&lt;/strong&gt;, but it is much more succinct, so I've included both versions of code for comparison.&lt;/p&gt;

&lt;p&gt;For C++, the &lt;strong&gt;priority_queue&lt;/strong&gt; defaults to a max order, so we can just invert the sign on the &lt;strong&gt;diff&lt;/strong&gt; values before insertion to effectively turn it into a min priority queue instead.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-minpriorityqueue"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ MinPriorityQueue():&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;furthestBuilding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;H&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;H&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;pq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MinPriorityQueue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;priority&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;H&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;H&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;front&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;front&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nx"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="nx"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dequeue&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="nx"&gt;diff&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-minheap"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Min-Heap:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;furthestBuilding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;H&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;H&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[,]&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;heapify&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;par&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt;
        &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;par&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;par&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;par&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt;
            &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;par&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;par&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;extract&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt;
            &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;top&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;    
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;H&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;H&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;heapify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="nx"&gt;heapify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="nx"&gt;extract&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="nx"&gt;diff&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;furthestBuilding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;heap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;heappush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;heap&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                    &lt;span class="n"&gt;heappush&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;heappop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;heap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;furthestBuilding&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;H&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="no"&gt;B&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="no"&gt;L&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;H&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nc"&gt;PriorityQueue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;PriorityQueue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;H&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="no"&gt;H&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;L&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                    &lt;span class="no"&gt;L&lt;/span&gt;&lt;span class="o"&gt;--;&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;peek&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                    &lt;span class="no"&gt;B&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;poll&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="no"&gt;B&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;B&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;furthestBuilding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;priority_queue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                    &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;pq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Animating the TikTok Record Button in React &amp; Framer Motion</title>
      <author>Sam Piggott</author>
      <pubDate>Mon, 26 Apr 2021 09:29:05 +0000</pubDate>
      <link>https://dev.to/sam_piggott/animating-the-tiktok-record-button-in-react-framer-motion-4he9</link>
      <guid>https://dev.to/sam_piggott/animating-the-tiktok-record-button-in-react-framer-motion-4he9</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UnTBtDDyN2M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;The TikTok record button is a deceivingly complicated UI element with some interesting moving parts, so I thought it would be perfect for a tutorial. In the guide above, we'll build a fully animated record button using nothing but React, Framer Motion (a fantastic animation library), and TypeScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-files"&gt;
  &lt;/a&gt;
  Project Files
&lt;/h2&gt;

&lt;p&gt;All the project files are available to download and use yourself over on my website, &lt;a href="https://codesnap.io/course/react-bites/tiktok-record-button"&gt;CodeSnap.io.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/agitated-shockley-cdzuy"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks"&gt;
  &lt;/a&gt;
  Thanks!
&lt;/h2&gt;

&lt;p&gt;Thanks for watching - any and all feedback is greatly appreciated, and please share it around if you think it'll be useful to anybody else. If you're interested in learning more, I've got loads more video and written content over on my website, &lt;a href="https://codesnap.io"&gt;CodeSnap.io.&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Recursive Http Calls. The RXJS way 😎</title>
      <author>Fateh Mohamed 🐢</author>
      <pubDate>Mon, 26 Apr 2021 09:09:53 +0000</pubDate>
      <link>https://dev.to/fatehmohamed14/recursive-http-calls-the-rxjs-way-d61</link>
      <guid>https://dev.to/fatehmohamed14/recursive-http-calls-the-rxjs-way-d61</guid>
      <description>&lt;p&gt;This article will show a quick example of achieving recursive http calls using &lt;a href="https://github.com/ReactiveX/rxjs"&gt;RXJS&lt;/a&gt; for those who suffer from Promises.&lt;/p&gt;

&lt;p&gt;Imagine that you want to collect all entries from an endpoint that only supports a paging API, means that you can't get all once. So the idea is to keep calling the Api by page till the last page which is our condition which our stop condition.&lt;/p&gt;

&lt;p&gt;I'll use an Endpoint to fetch Artists&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--elJW_ICJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zactkssksqn43ha190x0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--elJW_ICJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zactkssksqn43ha190x0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While &lt;strong&gt;next&lt;/strong&gt; is truthy we proceed to the next call with the new page.&lt;/p&gt;

&lt;p&gt;Let's move to the fun stuffs 😎, To achieve that we will have a magic rxjs operator &lt;a href="https://www.learnrxjs.io/learn-rxjs/operators/transformation/expand"&gt;EXPAND&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;EMPTY&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;switchMap&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs/operators&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firstUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.happi.dev/v1/artists?page=1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getArtists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;switchMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;getArtists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstUrl&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="nx"&gt;tap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="c1"&gt;// on success we concat with the new coming rows&lt;/span&gt;
 &lt;span class="nx"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;previousData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;previousData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; 
            &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;getArtists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;previousData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;EMPTY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rPrQOJpC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrjqxcoece2fv8bivxpy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rPrQOJpC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrjqxcoece2fv8bivxpy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all 🥱, Goodbye 🖐🏻&lt;/p&gt;

</description>
      <category>rxjs</category>
      <category>typescript</category>
      <category>axios</category>
      <category>recusivity</category>
    </item>
    <item>
      <title>Interview questions part 1 - CSS, HTML &amp; Accessibility</title>
      <author>Lukasz Pietraszek</author>
      <pubDate>Mon, 26 Apr 2021 08:52:06 +0000</pubDate>
      <link>https://dev.to/pietraszek/interview-questions-part-1-css-html-accessibility-ak9</link>
      <guid>https://dev.to/pietraszek/interview-questions-part-1-css-html-accessibility-ak9</guid>
      <description>&lt;p&gt;In this series of posts, I'll try to cover the most frequent questions I've been asked over past years or questions I ask when interviewing candidates. The level of question ranges from junior to mid-weight devs and is rather a framework agnostic.&lt;/p&gt;

&lt;p&gt;In this part, we will go through some general questions, some CSS related and Accessibility questions. In the next post, we will focus solely on JavaScript questions.&lt;/p&gt;

&lt;p&gt;Without further due let's start.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#general-questions"&gt;
  &lt;/a&gt;
  General Questions
&lt;/h2&gt;

&lt;p&gt;A way to start an interview would be to ask about the candidate's past/current role. For example:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tell-me-about-your-pastcurrent-role-what-do-you-do"&gt;
  &lt;/a&gt;
  Tell me about your past/current role - what do you do?
&lt;/h3&gt;

&lt;p&gt;At that point, the interviewer will take few notes and check if the candidate mentions keywords that you can ask more about later, ex: pre-processor, &lt;a href="https://webpack.js.org/"&gt;Webpack&lt;/a&gt; etc. Also, they will validate if what the candidate is saying is in fact listed in the CV.&lt;/p&gt;

&lt;p&gt;So make sure that you are upfront and honest with the person who interviews you. It may sound silly but before each interview read your own CV and make sure you know answers to all keywords and aspects mentioned there.&lt;/p&gt;

&lt;p&gt;Next, you might be asked:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-typical-workflow-from-the-point-you-get-a-task-to-its-completion"&gt;
  &lt;/a&gt;
  What is the typical workflow from the point you get a task to its completion?
&lt;/h3&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-tools-and-techniques-do-you-use"&gt;
  &lt;/a&gt;
  What tools and techniques do you use?
&lt;/h3&gt;

&lt;p&gt;Here you can refer to your day-to-day job. The more you have to say here the better. Use this time to talk about your own findings, experiences, and suggestions on how to improve them. You might want to use this time to talk a little bit about the side projects you are working on, the ideas for new apps, etc. It will show you are passionate about technology and in case you don't have much commercial experience in setup used in the role you are open-minded and always willing to learn new things. Use this time wisely to your advantage.&lt;/p&gt;

&lt;p&gt;Then interviewer might follow up with: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-can-see-you-wrote-you-have-been-working-with-vuejs-can-you-elaborate-a-bit-on-it"&gt;
  &lt;/a&gt;
  I can see you wrote you have been working with VueJS, can you elaborate a bit on it?
&lt;/h3&gt;

&lt;p&gt;and &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#have-you-used-any-other-libraries-or-just-this-one"&gt;
  &lt;/a&gt;
  Have you used any other libraries or just this one?
&lt;/h3&gt;

&lt;p&gt;Of course, it all depends on your level of confidence and experience. But again if you are a junior don't try to hide it from interviewers. If you are a senior don't brag. Talk with passion about each subject but try to be modest. Show you know technical aspects but don't dive into too many details. This is just a warm-up before more detailed questions and you can rest assured your time to shine will come at a later stage of the interview :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-you-stay-up-to-date-with-the-latest-technology-changes"&gt;
  &lt;/a&gt;
  How do you stay up to date with the latest technology changes?
&lt;/h3&gt;

&lt;p&gt;You are going to mention websites, books, Twitter, podcasts, etc&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-tools-do-you-use-for-crossbrowser-testing"&gt;
  &lt;/a&gt;
  What tools do you use for cross-browser testing?
&lt;/h3&gt;

&lt;p&gt;Your answer should include some of the following options: &lt;a href="https://www.browserstack.com/"&gt;BrowserStack&lt;/a&gt;, &lt;a href="https://crossbrowsertesting.com/"&gt;CrossBrowserTesting&lt;/a&gt;, Virtual Machines (eg: &lt;a href="https://www.virtualbox.org/"&gt;Virtual Box&lt;/a&gt;), different devices: phones, computers, laptops&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#htmlcss-questions"&gt;
  &lt;/a&gt;
  HTML/CSS questions
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-we-can-optimize-site-loading-time"&gt;
  &lt;/a&gt;
  How we can optimize site loading time?
&lt;/h3&gt;

&lt;p&gt;Your answers will be around&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;minify code: JS, CSS HTML&lt;/li&gt;
&lt;li&gt;load JS in the footer &lt;/li&gt;
&lt;li&gt;image optimization - etc do not load bigger images than needed - asynchronous loading&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-do-you-prevent-errors-in-js-and-css"&gt;
  &lt;/a&gt;
  How do you prevent errors in JS and CSS?
&lt;/h3&gt;

&lt;p&gt;Answer: &lt;a href="https://jslint.com/"&gt;JSLint&lt;/a&gt; / &lt;a href="https://jshint.com/"&gt;JSHint&lt;/a&gt;, &lt;a href="http://csslint.net/"&gt;CSSLint&lt;/a&gt;, &lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt;, &lt;a href="https://typicode.github.io/husky/"&gt;pre-commit hooks&lt;/a&gt;,  etc&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-units-do-you-use-px-em-or-rem"&gt;
  &lt;/a&gt;
  What units do you use px, em, or rem?
&lt;/h3&gt;

&lt;p&gt;You need to know the difference between those three and pros and cons of using one or another. But basically what you need to know is &lt;/p&gt;

&lt;p&gt;Pixel (&lt;code&gt;px&lt;/code&gt;) is a commonly used CSS unit on websites. &lt;code&gt;px&lt;/code&gt; is not scalable, it is an absolute unit. Change in the value of another element does not affect the value of absolute units. The value assigned is fixed irrespective of the user setting.&lt;/p&gt;

&lt;p&gt;Element (&lt;code&gt;em&lt;/code&gt;) and Root element (&lt;code&gt;rem&lt;/code&gt;) are responsive units interpreted into equivalent px unit by the browser. They are relative units. Change in the value of the parent or root element affects the value of relative units.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#name-some-of-the-commonly-used-preprocessor-and-what-are-the-advantagesdisadvantages-of-using-css-preprocessors"&gt;
  &lt;/a&gt;
  Name some of the commonly used pre-processor and what are the advantages/disadvantages of using CSS pre-processors?
&lt;/h3&gt;

&lt;p&gt;Suggested answers will around the following points&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://lesscss.org/"&gt;Less&lt;/a&gt;, &lt;a href="https://sass-lang.com/"&gt;Sass&lt;/a&gt;, &lt;a href="https://stylus-lang.com/"&gt;Stylus&lt;/a&gt;, &lt;a href="https://postcss.org/"&gt;PostCSS&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;In Less &lt;code&gt;@&lt;/code&gt; symbol is used to declare variables, however, &lt;code&gt;@&lt;/code&gt;symbol has already meaning in CSS for example &lt;code&gt;@media&lt;/code&gt; or &lt;code&gt;@keyframes&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;To compile &lt;code&gt;Sass&lt;/code&gt; you need either Ruby or &lt;a href="https://sass-lang.com/libsass"&gt;libSass&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;the biggest challenge in using pre-processors on projects is the initial time spend to set them up&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-box-model-in-css"&gt;
  &lt;/a&gt;
  What is the 'Box Model' in CSS?
&lt;/h3&gt;

&lt;p&gt;In CSS, the term "box model" is used when talking about design and layout. The CSS box model is essentially a box that wraps around every HTML element. It consists of: margins, borders, padding, and the actual content.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-the-difference-between-resetting-and-normalizing-css-which-would-you-choose-and-why"&gt;
  &lt;/a&gt;
  What's the difference between "resetting" and "normalizing" CSS? Which would you choose, and why?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Every browser has its own default 'user agent' stylesheet, that it uses to make unstyled websites appear more legible. A CSS Reset (or “Reset CSS”) is a short, often compressed (minified) set of CSS rules that reset the styling of all HTML elements to a consistent baseline. &lt;/li&gt;
&lt;li&gt;
&lt;a href="http://necolas.github.io/normalize.css/"&gt;Normalize&lt;/a&gt; you might call a CSS reset alternative. Instead of wiping out all styles, it delivers a set of reasonable defaults. It doesn't unset things that are already consistent across browsers and reasonable (e.g. bold headers). In that way, organize it does some less than a reset. It also does some more than a reset in that it handles quirks you may never consider, like HTML5 audio element inconsistencies or line-height inconsistencies when you use sub and sup elements.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-do-you-organise-your-css-namespace-patterns"&gt;
  &lt;/a&gt;
  How do you organise your CSS - Namespace patterns?
&lt;/h3&gt;

&lt;p&gt;Mentioning &lt;a href="https://yandex.com/dev/bem/"&gt;BEM&lt;/a&gt;, &lt;a href="http://smacss.com/"&gt;Smacss&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/OOCSS"&gt;OOCSS&lt;/a&gt;, &lt;a href="https://acss.io/"&gt;Atomic&lt;/a&gt; will do the trick. Make sure that you know not only what each abbreviation means but also syntax and give a real live example of a component/module that could benefit from following those patterns.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#accessibility"&gt;
  &lt;/a&gt;
  Accessibility
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-can-we-improve-form-accessibility"&gt;
  &lt;/a&gt;
  How can we improve form accessibility?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;surround a group of radio buttons in &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; and add &lt;code&gt;&amp;lt;legend&amp;gt;&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;select&lt;/code&gt; tag to have a label, in case many options we could group them using &lt;/li&gt;
&lt;li&gt;input field should have &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#list-some-of-the-aria-roles-and-explain-when-would-you-use-them"&gt;
  &lt;/a&gt;
  List some of the Aria roles and explain when would you use them
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;aria-labeledby&lt;/code&gt; - Example multiple inputs describe by the same label. For instance, in the table it can have multiple labels - &lt;code&gt;aria-describedby&lt;/code&gt; - used to add more info to inputs eg. used in tooltips&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;aria-label&lt;/code&gt; - contains text directly and will overwrite  use when text label is not available&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-else-would-you-improve-site-accessibility"&gt;
  &lt;/a&gt;
  How else would you improve site accessibility?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;by using correct HTML syntax&lt;/li&gt;
&lt;li&gt;correctly use headings h1, h2 .. h6&lt;/li&gt;
&lt;li&gt;use appropriate contrast to make the text on site visible&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#useful-resources"&gt;
  &lt;/a&gt;
  Useful resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.toptal.com/css/interview-questions"&gt;5 Essential CSS Interview Questions&lt;/a&gt; by TopTal&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://css-tricks.com/interview-questions-css/"&gt;Interview Questions and Exercises About CSS&lt;/a&gt; by CSS-tricks - old but valid in most cases38 &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.indeed.com/career-advice/interviewing/css-interview-questions-and-answers"&gt;CSS Interview Questions and Answers&lt;/a&gt; by Indeed&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility"&gt;Accessibility&lt;/a&gt; by MDN&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://clubmate.fi/oocss-acss-bem-smacss-what-are-they-what-should-i-use"&gt;OOCSS, ACSS, BEM, SMACSS: what are they? What should I use?&lt;/a&gt; by Clubmate&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;This is definitely not the full list of questions around HTML/CSS/Accessibility or performance but at least it should give you an idea of what to expect and how to prepare for the interview. &lt;br&gt;
Some questions might sound outdated but in my opinion those are absolute basics that every UI, frontend developer should know the answers too.&lt;/p&gt;

&lt;p&gt;In the next post, I'll cover framework free JavaScript-related questions. &lt;/p&gt;

&lt;p&gt;Take care.&lt;/p&gt;

</description>
      <category>css</category>
      <category>interview</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Basics of Kotlin - Part 4</title>
      <author>Chetan</author>
      <pubDate>Mon, 26 Apr 2021 08:44:53 +0000</pubDate>
      <link>https://dev.to/csj5483/basics-of-kotlin-part-4-2h81</link>
      <guid>https://dev.to/csj5483/basics-of-kotlin-part-4-2h81</guid>
      <description>&lt;p&gt;In the last article, we learnt about some basic concepts of Kotlin like conditional statements, loops and jump statements. Before reading this article make sure you had read the last article &lt;a href="https://dev.to/csj5483/basics-of-kotlin-part-3-1nia"&gt;Basics of Kotlin- Part 3&lt;/a&gt;. Let's learn more about Kotlin.&lt;/p&gt;

&lt;h3&gt;Functions:&lt;/h3&gt;

&lt;p&gt;Functions in any programming language is a group of an interrelated block of code that performs a specific task. Functions allow us to break a program into various small sub-module. Functions increase the readability of code, reusability of code, and makes a program easy to manage.&lt;/p&gt;

&lt;p&gt;In Kotlin &lt;b&gt;fun&lt;/b&gt; keyword is used to declare the function. There are two types of functions in Kotlin depending on whether it is available in the standard library or defined by the user.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;
&lt;h4&gt;Standard library function:&lt;/h4&gt; Standard library function is built-in library functions that can be defined implicitly and available for use.&lt;/li&gt;&lt;/ul&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fun main(args: Array&amp;lt;String&amp;gt;){  
var number = 16
var result = Math.sqrt(number.toDouble())  
print("$result")  
}
Output : 4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the above code snippet :&lt;br&gt;
&lt;strong&gt;sqrt()&lt;/strong&gt; is a function defined in the library which returns the square root of a number.&lt;br&gt;
&lt;strong&gt;print()&lt;/strong&gt; function prints message to a standard output stream.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;
&lt;h4&gt;User-Defined Functions:&lt;/h4&gt; User-defined functions are created by the user and can be used for advanced programming. Here functions are declared by using &lt;b&gt;fun&lt;/b&gt; keyword.&lt;/li&gt;&lt;/ul&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fun main(){
   functionName()
}
fun functionName(){
     //body of function
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here, we call the function into the main function to run codes inside the body functionName().&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Template for function in Kotlin:
fun functionName(argument name:argument type):return type{
      //body of function
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Below is an example of a user-defined function&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fun main() {
  val x=6
  val y=8
  println("Sum of $x and $y is "+add(x,y))
}
fun add(x:Int, y:Int):Int{
    return x+y
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here we create a function &lt;b&gt;add&lt;/b&gt; which is taking two arguments of int type and return type of this function is also int. We had called this function inside our main function.&lt;/p&gt;

&lt;h3&gt;Tail-recursion:&lt;/h3&gt;

&lt;p&gt;Kotlin supports a style of functional programming known as tail recursion. When we try to do a large number of recursive function call, we get an error &lt;b&gt;java.lang.StackOverflowError&lt;/b&gt;. To handle this Kotlin have tailrec function. When a function is marked with the &lt;b&gt;tailrec&lt;/b&gt; modifier and meets the required form, the compiler optimizes out the recursion, leaving behind a fast and efficient loop based version instead. Tail recursion follows one rule for implementation. This rule is as follow:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;The recursive call must be the last call of the method&lt;/b&gt;. To declare a recursion as tail recursion we need to use tailrec modifier before the recursive function.&lt;/p&gt;

&lt;p&gt;For example, to calculate the factorial of any number we can use the below method:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fun main(args: Array&amp;lt;String&amp;gt;) {  
    val number = 10  
    val result: Long  
    result = factorial(number)  
    println("Factorial of $number = $result")  
}  

tailrec fun factorial(n: Int, run: Int = 1): Long {  
    return if (n == 1){  
        run.toLong()  
    } else {  
        factorial(n-1, run*n)  
    }  
}
Output : 
Factorial of 10 = 3628800
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;h4&gt;Lambda Expressions:&lt;/h4&gt;

&lt;p&gt;Lambda is a function that has no name. Lambda is defined with curly braces {} which takes variable as a parameter (if any) and body of the function. The body of the function is written after the variable (if any) followed by the -&amp;gt; operator.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Syntax of lambda expression:
{ variable -&amp;gt; body_of_function}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;b&gt;Lambda expression syntax&lt;/b&gt;&lt;br&gt;
The full syntactic form of lambda expressions is as follows:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;val sum: (Int, Int) -&amp;gt; Int = { x: Int, y: Int -&amp;gt; x + y }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;A lambda expression is always surrounded by curly braces.&lt;/li&gt;
&lt;li&gt;Parameter declarations in the full syntactic form go inside curly braces and have optional type annotations.&lt;/li&gt;
&lt;li&gt;The body goes after an -&amp;gt; sign.&lt;/li&gt;
&lt;li&gt;If the inferred return type of the lambda is not Unit, the last (or possibly single) expression inside the lambda body is treated as the return value.&lt;/li&gt;
&lt;/ul&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Program for adding two numbers using lambda
fun main(args: Array&amp;lt;String&amp;gt;) {  
    println(sum(5,6))
}  
val sum = { x: Int, y: Int -&amp;gt; x + y }
Output : 11
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Exception Handling in Kotlin:&lt;/h3&gt;

&lt;p&gt;Exception in programming is defined as a run time problem that occurs in a program and leads to the termination of the program. Exceptions can occur due to less memory space, array out of bound, conditions like division by zero. To solve this type of error in the program exception handling is used.&lt;/p&gt;

&lt;p&gt;Exception handling is defined as a process which handles the runtime problems and also maintains the flow of the program during execution.&lt;/p&gt;

&lt;p&gt;In Kotlin all exception classes are descendants of class Throwable. Kotlin uses the 'throw' expression to throw an exception object.&lt;/p&gt;

&lt;p&gt;There are four types of keywords used in exception handling. These are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;try:&lt;/b&gt; try block contains a block of statements which might create the exception. It is always followed by either catch or finally or both.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;catch:&lt;/b&gt; It is used to catch an exception thrown from the try block.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;finally:&lt;/b&gt; It is used to checks whether the exception is handled or not.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;throw:&lt;/b&gt; It is used to throw an exception explicitly.&lt;/li&gt;
&lt;/ul&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example of try-catch
fun main (args: Array&amp;lt;String&amp;gt;){  
    try {   
        val res =  9/ 0  

    } catch (e: ArithmeticException) {  
        println(e)  
    }
}
Output :
java.lang.ArithmeticException: / by zero
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can throw an exception explicitly by using the throw keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Example of try-catch using throw keyword
fun main (args: Array&amp;lt;String&amp;gt;){  
    try {   
       println("Inside throw")
       throw Exception("Exception throwed")
} catch (e: Exception) {  
        println(e)  
    }
}
Output:
Inside throw 
java.lang.Exception: Exception throwed
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it for this article. We will continue in the next article.&lt;/p&gt;

&lt;p&gt;Happy Learning!&lt;/p&gt;

</description>
      <category>android</category>
      <category>kotlin</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>🧢 Stefan's Web Weekly #16</title>
      <author>Stefan Judis</author>
      <pubDate>Mon, 26 Apr 2021 08:25:56 +0000</pubDate>
      <link>https://dev.to/stefanjudis/stefan-s-web-weekly-16-4o4c</link>
      <guid>https://dev.to/stefanjudis/stefan-s-web-weekly-16-4o4c</guid>
      <description>&lt;h2&gt;
  &lt;a href="#welcome-to-web-weekly-16"&gt;
  &lt;/a&gt;
  Welcome to Web Weekly 16!
&lt;/h2&gt;

&lt;p&gt;Hello friends! I just came back from a 40km bike ride to visit a friend who lives at Müggelsee, Berlin. It's such a lovely area! There are places in Berlin that feel like vacation, and that's one of them. &lt;/p&gt;

&lt;p&gt;It was a perfect Sunday. I hope you had a great weekend yourself!&lt;/p&gt;

&lt;p&gt;This week's Web Weekly includes...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;challenges of programming language design&lt;/li&gt;
&lt;li&gt;tips to make your language more inclusive&lt;/li&gt;
&lt;li&gt;a CSS property to style checkboxes and radio buttons&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;... and, as always, GitHub repositories, a new Tiny Helper and some music.&lt;/p&gt;

&lt;p&gt;Ready? Steady. Go!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#should-there-be-another-http-method"&gt;
  &lt;/a&gt;
  Should there be another HTTP method?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bWDzp29D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/75TYreF8k51uqGI2VWjL8j/e02de03bca5cd217c30043e4d098d98e/Screenshot_2021-04-15_at_21.07.14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bWDzp29D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/75TYreF8k51uqGI2VWjL8j/e02de03bca5cd217c30043e4d098d98e/Screenshot_2021-04-15_at_21.07.14.png" alt="Enter HTTP search – A proposed new HTTP method that's intended to solve this problem."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Living in a RESTful world, I regularly use the HTTP methods &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt;. There are more methods (&lt;code&gt;OPTIONS&lt;/code&gt; anyone?), but should there be a new one – &lt;code&gt;SEARCH&lt;/code&gt;? Tim Perry goes into HTTP details and explains the &lt;code&gt;SEARCH&lt;/code&gt; method proposal.&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://httptoolkit.tech/blog/http-search-method/"&gt;Learn about SEARCH&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hidden-javascript-console-methods-in-chromefirefox"&gt;
  &lt;/a&gt;
  "Hidden" JavaScript console methods in Chrome/Firefox
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y196e2hX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/4AIxvE4nq9YTszTKPcBZ9t/d35ed7173caa4b03c61ddf4bdef2826b/Screenshot_2021-04-18_at_20.16.12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y196e2hX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/4AIxvE4nq9YTszTKPcBZ9t/d35ed7173caa4b03c61ddf4bdef2826b/Screenshot_2021-04-18_at_20.16.12.png" alt="Chrome JavaScript console showing the usage of monitorEvents"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Last week &lt;a href="https://twitter.com/stefanjudis/status/1382936339126050816?s=20"&gt;I learned about the &lt;code&gt;monitorEvents&lt;/code&gt; method&lt;/a&gt;. It's available in Chrome's DevTool JavaScript console and offers a handy way to get information on an element's triggered JavaScript events. This discovery encouraged me to look at what's available in Chrome's and Firefox' JavaScript console.&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://developer.chrome.com/docs/devtools/console/utilities/"&gt;Chrome's console methods&lt;/a&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Tools/Web_Console/Helpers"&gt;Firefox' console methods&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-an-accidental-imagemagick-discovery-led-to-speakerdeckcom"&gt;
  &lt;/a&gt;
  How an accidental imagemagick discovery led to speakerdeck.com
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OYsfOvuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/4q59DjQJXIwfRH1UqLBZwV/78e67d557f6386a044cf11d22a094ece/Screenshot_2021-04-25_at_21.55.55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OYsfOvuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/4q59DjQJXIwfRH1UqLBZwV/78e67d557f6386a044cf11d22a094ece/Screenshot_2021-04-25_at_21.55.55.png" alt="Speaker Deck started as a happy accident. I mucked up a command line call to imagemagick and passed in the path to a PDF instead of an image. To my surprise, an image was returned. "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;John Nunemaker shared his story of building and selling speakerdeck.com to GitHub to later buy it back and then sell it again. 🤯 It's a fascinating read on building products with many learnings and advice.&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://www.johnnunemaker.com/speakerdeck/"&gt;Read John' story&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-challenge-of-designing-a-programming-language"&gt;
  &lt;/a&gt;
  The challenge of designing a programming language
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IzINAWDY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/1xqqejX9yAPO2WxoKO4Q28/3a32610d2ba2cb358ce45d9fe9b3b5b3/Screenshot_2021-04-25_at_21.27.04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IzINAWDY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/1xqqejX9yAPO2WxoKO4Q28/3a32610d2ba2cb358ce45d9fe9b3b5b3/Screenshot_2021-04-25_at_21.27.04.png" alt="Incomplete list of mistakes in the design of CSS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Designing a programming language is hard! And it's particularly tough when the language is used on the web because then things are there to stay. Browsers and devices browsing the web are not following any versioning. If you ever thought "hmm, that's odd" when writing CSS, you will enjoy this list of "official" CSS design mistakes.&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://wiki.csswg.org/ideas/mistakes"&gt;Learn about CSS design mistakes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-language-we-use-matters"&gt;
  &lt;/a&gt;
  The language we use matters
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--htENkVPx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/52c0HW6yjoz6WEd4jYFO4x/9b249396d46be5cc29f84037c6edcedb/Screenshot_2021-04-21_at_07.38.55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--htENkVPx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/52c0HW6yjoz6WEd4jYFO4x/9b249396d46be5cc29f84037c6edcedb/Screenshot_2021-04-21_at_07.38.55.png" alt="Language is ever-changing, so eliminating ableism from your vocabulary will be an ongoing process rather than a static victory. You may stumble, but checking in with disabled people is an effective way to find your footing and continuing to build a more inclusive vocabulary."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The way we speak and the words we use do not only directly impact others but also how we think. The BBC published an eye-opening article on ableist language and its effects.&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://www.bbc.com/worklife/article/20210330-the-harmful-ableist-language-you-unknowingly-use"&gt;Discover ableist language&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nerdy-emoji-details"&gt;
  &lt;/a&gt;
  Nerdy emoji details
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9qpHSyjS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/3HNkrWJOmpSFtj1xROQPJK/e195cde2ae14b2d2d267408c99126107/Screenshot_2021-04-25_at_22.11.14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9qpHSyjS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/3HNkrWJOmpSFtj1xROQPJK/e195cde2ae14b2d2d267408c99126107/Screenshot_2021-04-25_at_22.11.14.png" alt="I thought it might be fun sharing a few nitty-gritty details of how this “biggest innovation in human communication since the invention of the letter 🅰️” works under the hood."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There's nothing better than a well-written article about Unicode. Nikita Prokopov explains nitty-gritty emoji details. Highly recommended!&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://tonsky.me/blog/emoji/"&gt;Learn how emojis work&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-newsletter-about-accessibility"&gt;
  &lt;/a&gt;
  A newsletter about accessibility
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fu4fTgex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/3x6zstoKGvoKVxKaY5dS6g/3dde56dc9e4e5f097803e652151a0f53/Screenshot_2021-04-25_at_23.06.40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fu4fTgex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/3x6zstoKGvoKVxKaY5dS6g/3dde56dc9e4e5f097803e652151a0f53/Screenshot_2021-04-25_at_23.06.40.png" alt="Add punctuation to you your alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I found about Chris Ashton's accessibility newsletter "frequent11y" and subscribed right away. I learned quite a lot from his last edition.&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://ashton.codes/week11y-issue-72/"&gt;Read the last weekly edition&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#colorful-checkboxesradios-are-on-their-way"&gt;
  &lt;/a&gt;
  Colorful checkboxes/radios are on their way
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HW1746N2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/7kpGXJXcZUwHyy3fSi4pm6/b330063a062f70e02d9e2ebe4c226bea/Screenshot_2021-04-22_at_20.27.09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HW1746N2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/7kpGXJXcZUwHyy3fSi4pm6/b330063a062f70e02d9e2ebe4c226bea/Screenshot_2021-04-22_at_20.27.09.png" alt="A purple radio and checkbox input"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;"On brand" form controls are important to many people. While I think it's not a big deal when checkboxes are not matching the website style guide, I implemented many custom controls for precisely that reason. Luckily, there's a new CSS property (&lt;code&gt;accent-color&lt;/code&gt;) on the horizon. It defines the highlight color of radios and checkboxes. 🎉&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://www.stefanjudis.com/snippets/how-to-style-and-define-the-color-of-radio-and-checkbox-inputs/"&gt;Learn more about accent-color&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-beauty-of-evergreen-resources"&gt;
  &lt;/a&gt;
  The beauty of evergreen resources
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PQDX1kfP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/4nCtYY9hm82sHY6SdHaL14/b2529aec524e1674d7a384fe74036d4a/Screenshot_2021-04-25_at_21.09.21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PQDX1kfP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/4nCtYY9hm82sHY6SdHaL14/b2529aec524e1674d7a384fe74036d4a/Screenshot_2021-04-25_at_21.09.21.png" alt="Timeless Web Dev Articles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many web development articles become irrelevant quickly, but occasionally there are some evergreen gems. It's a valuable habit to bookmark these articles (&lt;a href="https://www.stefanjudis.com/resources/"&gt;find my favorites online&lt;/a&gt;). I came across Chris Coyier's list of timeless articles, and it's worth a look (and bookmark).&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://css-tricks.com/timeless-web-dev-articles/"&gt;Discover timeless articles&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-difficulties-of-finding-the-right-job"&gt;
  &lt;/a&gt;
  The difficulties of finding the right job
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5O6rqWUh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/7vzubkV4orOH2PWYS4tpVs/a4dca62c1349a1d6456c2b1ed8495c40/Screenshot_2021-04-25_at_22.05.41.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5O6rqWUh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/7vzubkV4orOH2PWYS4tpVs/a4dca62c1349a1d6456c2b1ed8495c40/Screenshot_2021-04-25_at_22.05.41.png" alt="That's where our story starts. This post will include lessons I learned as a job seeker. As well as patterns I hope companies will address."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finding a job that fits is difficult. Interviews are stressful and not always fair. Laurie Barth describes her experience of looking for her next opportunity (she ended up at Netflix). Her article includes valuable insights for interviewees but also hiring managers like myself.&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://laurieontech.com/posts/job-search/"&gt;Read Laurie's lessons learned&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reader-shout-out"&gt;
  &lt;/a&gt;
  Reader shout out 💙
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CPy_wIxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/GZngAFhDWAhvZAyn0VGEF/f49c2008c63f0a9d167571641b40ec2a/Screenshot_2021-04-25_at_22.34.23.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CPy_wIxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/GZngAFhDWAhvZAyn0VGEF/f49c2008c63f0a9d167571641b40ec2a/Screenshot_2021-04-25_at_22.34.23.png" alt="Three avatars with the word Thank you below"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chris Ashton, Wojtek Jeremy Połowniak and @antodev89 not only shared my newsletter on social media, but they also agreed to be quoted on my site. Thank you so much, friends!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-new-tiny-helper"&gt;
  &lt;/a&gt;
  A new Tiny Helper
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3AibTRpb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/2v7BEAmXCtMM8EYX5SkQIQ/370fe4c6790a8232800ef1fae5d6823f/Screenshot_2021-04-25_at_22.37.15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3AibTRpb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/2v7BEAmXCtMM8EYX5SkQIQ/370fe4c6790a8232800ef1fae5d6823f/Screenshot_2021-04-25_at_22.37.15.png" alt="Cumulative Layout Shift Debugger"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cumulative Layout Shift (CLS) is one of Google Web Vitals metrics. The CLS debugger visualizes a website's layout shifts to make debugging easier.&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://webvitals.dev/cls?ref=tiny-helpers"&gt;Debug CLS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Find more single-purpose online tools on &lt;a href="https://tiny-helpers.dev/"&gt;tiny-helpers.dev&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#three-useful-projects-to-have-a-look-at"&gt;
  &lt;/a&gt;
  Three useful projects to have a look at
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/argyleink/transition.css"&gt;argyleink/transition.css&lt;/a&gt; – Drop-in CSS transitions.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/git-tips/tips"&gt;git-tips/tips&lt;/a&gt; – Most commonly used git tips and tricks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/RH12503/triangula"&gt;RH12503/triangula&lt;/a&gt; – Generate high-quality triangulated art from images.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#a-quote-to-think-about"&gt;
  &lt;/a&gt;
  A quote to think about
&lt;/h2&gt;

&lt;p&gt;This week's quote comes from Mattias Ott. &lt;a href="https://matthiasott.com/notes/no-wrong-notes"&gt;He shared his thoughts on personal websites&lt;/a&gt;. There's no right or wrong, good or bad... your website belongs to you, and you can do whatever you want with it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A personal website ain't got no wrong words.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#a-song-that-makes-you-stop-coding"&gt;
  &lt;/a&gt;
  A song that makes you stop coding
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z6KJlIXi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/2nXecFa4NzScmXy1QClBAj/3e11e319c0f591c1f182da74ac1582f6/Screenshot_2021-04-25_at_22.45.52.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z6KJlIXi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/f20lfrunubsq/2nXecFa4NzScmXy1QClBAj/3e11e319c0f591c1f182da74ac1582f6/Screenshot_2021-04-25_at_22.45.52.png" alt="Marbert Rocel - Catch a bird cover"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This week's song is another festival memory. 🙈&lt;/p&gt;

&lt;p&gt;Years ago, I was at the German Fusion festival. It was a bright and sunny morning. The dance floors were still full, and people tried to decide if they should continue dancing or instead get some rest after a magical sleepless night. &lt;/p&gt;

&lt;p&gt;Marbert Rocel entered the stage, and their funky and fun beats became my soundtrack of this festival. So good!&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://www.youtube.com/watch?v=D2PJ3Oi_VmM"&gt;Listen to "Mr. Beat"&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading!
&lt;/h2&gt;

&lt;p&gt;And that's a wrap for the sixteenth Web Weekly! If you enjoy my newsletter, I'd love you to tell others about it. ♥️&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/intent/tweet?text=I%20like%20@stefanjudis%20weekly%20newsletter&amp;amp;url=https://www.stefanjudis.com/blog/web-weekly-16/"&gt;Share it on Twitter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Forward it to someone who might like it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're not a subscriber, &lt;a href="https://www.stefanjudis.com/newsletter/"&gt;you can change that&lt;/a&gt;! 😉&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Stay safe, and I'll talk to you next week!&lt;/strong&gt; 🎉 👋&lt;/p&gt;

&lt;p&gt;PS. I heard the cool kids use RSS. You can find &lt;a href="https://www.stefanjudis.com/feeds/"&gt;multiple feeds on my site&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
    </item>
    <item>
      <title>Eye and Eye</title>
      <author>Yared Henriquez Blanquicett</author>
      <pubDate>Mon, 26 Apr 2021 08:10:25 +0000</pubDate>
      <link>https://dev.to/yared17/eye-and-eye-2396</link>
      <guid>https://dev.to/yared17/eye-and-eye-2396</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/yared17/embed/RwKdbMx?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Some small Css tips #016</title>
      <author>Stephan Nijman</author>
      <pubDate>Mon, 26 Apr 2021 07:59:26 +0000</pubDate>
      <link>https://dev.to/vanaf1979/some-small-css-tips-016-24f1</link>
      <guid>https://dev.to/vanaf1979/some-small-css-tips-016-24f1</guid>
      <description>&lt;p&gt;To continue on my &lt;a href="https://dev.to/vanaf1979/some-small-css-tips-015-384m"&gt;previous post&lt;/a&gt; here are some more tweets with little Css tips that might help you in your projects. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prevent-textarea-resize"&gt;
  &lt;/a&gt;
  Prevent textarea resize.
&lt;/h3&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5kIYuFFD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/ExVHOCzW8AI6D37.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--coVD6L7---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1085116439823085568/rzUn-2Rt_normal.jpg" alt="Stephan Nijman profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Stephan Nijman
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/vanaf1979"&gt;@vanaf1979&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Small &lt;a href="https://twitter.com/hashtag/css"&gt;#css&lt;/a&gt; tip: You can prevent a textarea from being resized (Or limit it to one axis) by setting the css resize property. &lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DEVCommunity"&gt;#DEVCommunity&lt;/a&gt;&lt;br&gt;&lt;br&gt;Check out the CodePen below 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:54 PM - 25 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1375083675709214722" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1375083675709214722" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1375083675709214722" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/Since1979/embed/rNWXExw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Css resize docs: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/resize"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/resize&lt;/a&gt;




&lt;h3&gt;
  &lt;a href="#textindent"&gt;
  &lt;/a&gt;
  Text-indent.
&lt;/h3&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tvJ4fQSZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EzpwG9IXMAILFs7.jpg" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--coVD6L7---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1085116439823085568/rzUn-2Rt_normal.jpg" alt="Stephan Nijman profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Stephan Nijman
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/vanaf1979"&gt;@vanaf1979&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Small &lt;a href="https://twitter.com/hashtag/css"&gt;#css&lt;/a&gt; tip: You can indent the first line of a paragraph by using the css text-indent property. &lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DEVCommunity"&gt;#DEVCommunity&lt;/a&gt;&lt;br&gt;&lt;br&gt;Check out the CodePen below 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:36 AM - 23 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1385543204859269121" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1385543204859269121" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1385543204859269121" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/Since1979/embed/qBRaGqR?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Css text-indent docs: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/text-indent"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/text-indent&lt;/a&gt;




&lt;h3&gt;
  &lt;a href="#where"&gt;
  &lt;/a&gt;
  :where.
&lt;/h3&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FkfJxuT5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Ezu51qmXoAI4Syw.png" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--coVD6L7---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1085116439823085568/rzUn-2Rt_normal.jpg" alt="Stephan Nijman profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Stephan Nijman
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/vanaf1979"&gt;@vanaf1979&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Small &lt;a href="https://twitter.com/hashtag/css"&gt;#css&lt;/a&gt; tip; If you want to select multiple elements inside a parent element, you can use :where() to do exactly that. 😀 &lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DEVCommunity"&gt;#DEVCommunity&lt;/a&gt;&lt;br&gt;&lt;br&gt;👇 Check out the CodePen below 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:38 AM - 24 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1385905943444168705" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1385905943444168705" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1385905943444168705" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/Since1979/embed/zYNyEaw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Css :where() docs: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:where"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/:where&lt;/a&gt;




&lt;h3&gt;
  &lt;a href="#onlychild"&gt;
  &lt;/a&gt;
  Only-child.
&lt;/h3&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GpkO0ByF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Ez0LrqbXoAM2h9X.png" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--coVD6L7---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1085116439823085568/rzUn-2Rt_normal.jpg" alt="Stephan Nijman profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Stephan Nijman
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/vanaf1979"&gt;@vanaf1979&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Small &lt;a href="https://twitter.com/hashtag/css"&gt;#css&lt;/a&gt; tip: If you need to select an element that is the only element inside of it’s parent you can use the css :only-child pseado-selector. &lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DEVCommunity"&gt;#DEVCommunity&lt;/a&gt;&lt;br&gt;&lt;br&gt;👇Check out the CodePen below. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      11:13 AM - 25 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1386277283820883971" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1386277283820883971" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1386277283820883971" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/Since1979/embed/dyNaKMN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Css only-child docs: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:only-child"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/:only-child&lt;/a&gt;




&lt;h3&gt;
  &lt;a href="#subscribe-and-follow"&gt;
  &lt;/a&gt;
  Subscribe and Follow
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/channel/UCeyqA3y26RlnfUSx3ufgFoA"&gt;Subscribe to my Youtube channel.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://twitter.com/Vanaf1979"&gt;Follow me on Twitter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for reading/watching and stay safe&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>html</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
