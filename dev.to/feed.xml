<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Making Decisions in Python</title>
      <author>Suleiman Ibrahim</author>
      <pubDate>Thu, 09 Dec 2021 12:44:01 +0000</pubDate>
      <link>https://dev.to/princeibs/making-decisions-in-python-5elj</link>
      <guid>https://dev.to/princeibs/making-decisions-in-python-5elj</guid>
      <description>&lt;p&gt;As humans and an intelligent species, we always make decisions before taking some actions. These decisions can either be based on knowledge or choice. It is true that every human has the ability to make decisions, but what about the computer? Is it yet intelligent enough to make decisions for itself? We will find out from this article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#making-decisions-in-python"&gt;Making decisions in Python&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-if-statement"&gt;The &lt;code&gt;if&lt;/code&gt; statement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-if-else-statement"&gt;The &lt;code&gt;if … else&lt;/code&gt; statement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-if-elif-else-statement"&gt;The &lt;code&gt;if … elif … else&lt;/code&gt; statement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h3&gt;

&lt;p&gt;Have the latest version of &lt;a href="https://python.org/downloads"&gt;Python&lt;/a&gt; installed on your computer&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-decisions-in-python"&gt;
  &lt;/a&gt;
  Making Decisions In Python
&lt;/h3&gt;

&lt;p&gt;Python allows us to write programs that are executed only if some conditions are true. This paradigm of programming are sometimes called control flows. They control the flow of execution from one part of the program to another. They decide which part of our programs should be executed and which part should not. This is the basis on which the computer makes decisions.&lt;/p&gt;

&lt;p&gt;Python provides for us mainly three constructs for making decisions, which are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;if&lt;/code&gt; statement&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;if … else&lt;/code&gt; statement&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;if … elif … else&lt;/code&gt; statement&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#the-if-statement"&gt;
  &lt;/a&gt;
  The "if" Statement
&lt;/h4&gt;

&lt;p&gt;The basic syntax for the &lt;code&gt;if&lt;/code&gt; statement is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;if &lt;code&gt;this is true&lt;/code&gt;:&lt;br&gt;
      &lt;code&gt;do this&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Two important things to note from this syntax are the colon &lt;code&gt;:&lt;/code&gt; and the indentation. Unlike other languages like Java and JavaScript that use curly braces to wrap a block of code, Python uses indentation instead. You will see the indentation syntax more often when you start dealing with functions and methods in python.&lt;/p&gt;

&lt;p&gt;For your code to run properly, the colon and the indentation must be properly written. The recommended way to indent in Python is to use 4 space indentation according to &lt;a href="https://pep8.org/#indentation"&gt;PEP8 style guide&lt;/a&gt;. If the statement to execute when an expression is true is not indented, it will still execute, but irrespective of whether the boolean expression is true or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Greet'&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'Greet'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hello, World!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;## output
# Hello, World!
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The program above checks for the value of &lt;code&gt;command == Greet&lt;/code&gt; and prints &lt;strong&gt;”Hello, World!”&lt;/strong&gt; to the console if it evaluates to true. This condition is known as a &lt;em&gt;Boolean expression&lt;/em&gt;. An expression that evaluates to either true or false. Also, note the &lt;code&gt;==&lt;/code&gt; operator that was used for the boolean expression. This is called the &lt;em&gt;comparison operator&lt;/em&gt; and it’s different from the assignment operator &lt;code&gt;=&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Below are the comparison operators Python uses to evaluate a boolean expression:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;==&lt;/td&gt;
&lt;td&gt;is equal to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!=&lt;/td&gt;
&lt;td&gt;is not equal to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;is strictly greater than&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;is strictly less than&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;is greater than or equal to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;td&gt;is less than or equal to&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;These operators return either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; when used and they all accept two arguments, to the left, and to the right.&lt;/p&gt;

&lt;p&gt;Let’s now modify the program above to see what will happen if the boolean expression is not true:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Greet'&lt;/span&gt;
&lt;span class="c1"&gt;# when the boolean expression is not true
&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'greet'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hello, World!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Bye'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;## output
# Bye
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code inside the &lt;code&gt;if&lt;/code&gt; block was not executed because &lt;code&gt;Greet&lt;/code&gt; is not equal to &lt;code&gt;greet&lt;/code&gt;. They both have different Unicode values. The &lt;code&gt;if&lt;/code&gt; statement is the basic way our programs can make decisions by themselves.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-if-else-statement"&gt;
  &lt;/a&gt;
  The "if … else" Statement
&lt;/h4&gt;

&lt;p&gt;The syntax for the &lt;code&gt;if … else&lt;/code&gt; statement is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;if &lt;code&gt;&amp;lt;this is true&amp;gt;&lt;/code&gt;:&lt;br&gt;
      &lt;code&gt;&amp;lt;do this&amp;gt;&lt;/code&gt;&lt;br&gt;
  else:&lt;br&gt;
      &lt;code&gt;&amp;lt;then do this&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This syntax is similar to the &lt;code&gt;if&lt;/code&gt; statement, but the code in the &lt;code&gt;else&lt;/code&gt; block is executed only when the conditions in the &lt;code&gt;if&lt;/code&gt; block evaluate to false. The &lt;code&gt;else&lt;/code&gt; block is never executed when the &lt;code&gt;if&lt;/code&gt; block evaluates to true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;greet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hello, World!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'The system is unable to greet you'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Bye'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;## output
# The system is unable to greet you
# Bye
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The variable &lt;code&gt;greet&lt;/code&gt; is used to hold a boolean value, which is what a boolean expression will return when executed. But &lt;code&gt;greet&lt;/code&gt; is false, which means the &lt;code&gt;if&lt;/code&gt; block won’t get executed, leaving the &lt;code&gt;else&lt;/code&gt; block to get executed. And the last line of the code that prints &lt;strong&gt;”Bye”&lt;/strong&gt; gets executed no matter what. &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#nested-if-statement"&gt;
  &lt;/a&gt;
  Nested "if" statement
&lt;/h5&gt;

&lt;p&gt;The nested &lt;code&gt;if&lt;/code&gt; statements allow you to nest an &lt;code&gt;if&lt;/code&gt; statement inside another &lt;code&gt;if&lt;/code&gt; statement. This is useful when you want to make decisions if a particular decision is true or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;i_am_human&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i_am_human&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'I am a tall human'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'I am an average height human'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'I am not a human'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;## output
# I am a tall human
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of the program is based on the fact that &lt;code&gt;i_am_human&lt;/code&gt; is true and &lt;code&gt;height&lt;/code&gt; is 6 or above. If &lt;code&gt;i_am_human&lt;/code&gt; was false, then the program won’t bother to check for the inner conditions, but rather jump to the &lt;code&gt;else&lt;/code&gt; block and output &lt;strong&gt;” I am not a human”&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-if-elif-else-statement"&gt;
  &lt;/a&gt;
  The "if … elif … else" Statement
&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;if … elif … else&lt;/code&gt; statements solve the problem when there exists more than one condition to be tested. In a more complex program, if a condition fails to be true, the system doesn’t quit immediately. Some other conditions need to be tested before quitting.&lt;br&gt;
The syntax for the &lt;code&gt;if … elif … else&lt;/code&gt; statements is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If &lt;code&gt;&amp;lt;this is true&amp;gt;&lt;/code&gt;:&lt;br&gt;
     &lt;code&gt;&amp;lt;do this&amp;gt;&lt;/code&gt;&lt;br&gt;
elif &lt;code&gt;&amp;lt;the above is not true&amp;gt;&lt;/code&gt;:&lt;br&gt;
    &lt;code&gt;&amp;lt;do this&amp;gt;&lt;/code&gt;&lt;br&gt;
else:&lt;br&gt;
    &lt;code&gt;&amp;lt;do this if none of the above is true&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;code&gt;elif&lt;/code&gt; is short for &lt;code&gt;else if&lt;/code&gt;. You can have as many &lt;code&gt;elif&lt;/code&gt; as desired in your programs. The last &lt;code&gt;else&lt;/code&gt; is optional. You can choose to add it or leave it out of your programs. Let's see how this works:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'I am 17 years old'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'I am 18 years old'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'I am 19 years old'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Age not found'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;## output
# I am 19 years old
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Suppose you change the value of age to 18 as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then the output is returned:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;I am 18 years old
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But what if the age is not among the ages to be compared. This is where the &lt;code&gt;else&lt;/code&gt; block is executed. When the age from the example above is set to 21, then none of the conditions are satisfied. Only then, the else block is executed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Age not found
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;The advent of control structures in programming that allows programmers to write programs that makes decision is big turn around as programmers don't have to programs that only run in sequence anymore. Python took advantage of this structure and implemented it in using selection statements like &lt;em&gt;"if"&lt;/em&gt;, &lt;em&gt;"if ... else"&lt;/em&gt;, and &lt;em&gt;"if ... elif ... else"&lt;/em&gt;.&lt;br&gt;
This article gives a brief overview of all you need to know about the basics of selection statements in Python and how to apply them if your everyday programs.&lt;br&gt;
To know more about selection statements and Python as a whole, I recommend you check out the &lt;a href="https://docs.python.org/3/tutorial/index.html"&gt;Python documentation tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to drop your thoughts and suggestions in the discussion box. I will be available to attend to them. And also, if you have any questions, you can as well drop them in the discussion box.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>python</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>SOME FORMATTING ELEMENT,Bold,Big,italic,small, strong, subscripted, superscripted, inserted and deleted tag.</title>
      <author>Irfan Khan</author>
      <pubDate>Thu, 09 Dec 2021 12:43:03 +0000</pubDate>
      <link>https://dev.to/irfankhan177/some-formatting-elementboldbigitalicsmall-strong-subscripted-superscripted-inserted-and-deleted-tag-1fp8</link>
      <guid>https://dev.to/irfankhan177/some-formatting-elementboldbigitalicsmall-strong-subscripted-superscripted-inserted-and-deleted-tag-1fp8</guid>
      <description>&lt;p&gt;&lt;strong&gt;1.PARAGRAPH TAG&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt;This is paragraph tag.It use to write paragraph.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt; This is paragraph&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2.BOLD TAG&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;&lt;/code&gt; This is bold tag.It is use to bold any text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;b&amp;gt; This is bold text&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3.BIG TAG&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;big&amp;gt;&amp;lt;/big&amp;gt;&lt;/code&gt; This is big tag.It is use for text size increase.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;big&amp;gt;This is big text.&amp;lt;/big&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4.ITALIC TAG&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt; This is italic tag.It make text to a italic text&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;i&amp;gt;This is italic text.&amp;lt;/i&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;5.SMALL TAG&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;small&amp;gt;&amp;lt;/small&amp;gt;&lt;/code&gt; This is small tag&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;small&amp;gt;This is small tag.&amp;lt;/small&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;6.STRONG TAG&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;strong&amp;gt;&amp;lt;/strong&amp;gt;&lt;/code&gt; This is strong tag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;This is strong text.&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;7.SUBSCRIPTED TAG&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;&amp;lt;sub&amp;gt;&amp;lt;/sub&amp;gt;&lt;/code&gt; This is subscripted tag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;sub&amp;gt;This is subscripted text.&amp;lt;/sub&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;8.SUPERSCRIPTED TAG&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;sup&amp;gt;&amp;lt;/sup&amp;gt;&lt;/code&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Inclusive range Python - What does this signify?</title>
      <author>hrishikesh1990</author>
      <pubDate>Thu, 09 Dec 2021 12:37:16 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/inclusive-range-python-what-does-this-signify-3168</link>
      <guid>https://dev.to/hrishikesh1990/inclusive-range-python-what-does-this-signify-3168</guid>
      <description>&lt;p&gt;In this short tutorial, we look at the inclusive range Python function. We explain what inclusive signifies with the help of examples.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-inclusive-range-python"&gt;
  &lt;/a&gt;
  Table of Contents - Inclusive range Python
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#inclusive-range-python"&gt;Inclusive range Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-and-explanation"&gt;Code and Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts-inclusive-range-python"&gt;Closing thoughts - Inclusive range Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#inclusive-range-python"&gt;
  &lt;/a&gt;
  Inclusive range Python
&lt;/h2&gt;

&lt;p&gt;The Python range function is commonly used to create a series of numbers. These numbers can be printed or used in loops.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;  &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Although the range in the code block says 0-4. The output is as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is because Python prints values from 0 until 4. This behavior is called off-by-one and is common in programming languages. Essentially the function does not include the end value. This behavior is favorable while looping through objects since the index starts at 0. However, in case you are looking to print values or if you are new to Python, this can take some time to get used to.&lt;/p&gt;

&lt;p&gt;While programming the best practice is to understand the language and use it to its strengths. Although I would recommend understanding and using the syntax as it is, there are a few methods to make range inclusive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h2&gt;

&lt;p&gt;Let us first take a look at the syntax of the range() function.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Increment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Start - Optional, used to specify where the range should start. The default start value is 0.&lt;/li&gt;
&lt;li&gt;Stop - Required, used to specify where the range should stop.&lt;/li&gt;
&lt;li&gt;Increment - Optional, used to specify the incrementation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The right way to print values from 0 to 10 would be as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;  &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This would print out values from 0 - 10.&lt;/p&gt;

&lt;p&gt;Another method is to create a function which increments the range. This makes the Python range function inclusive. The code is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;range_inclusive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;range_inclusive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the function is called, it adds 1 to the stop parameter. The output is as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#closing-thoughts-inclusive-range-python"&gt;
  &lt;/a&gt;
  Closing thoughts - Inclusive range Python
&lt;/h2&gt;

&lt;p&gt;Although the above method works properly it is not advisable to use it. I would only recommend using it for learning purposes. Product development would involve working with multiple developers and using such syntax would not be advisable.&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>A Summary of How to Build Amplify Geo and Amazon Location Service</title>
      <author>Yasunori Kirimoto</author>
      <pubDate>Thu, 09 Dec 2021 12:20:31 +0000</pubDate>
      <link>https://dev.to/aws-builders/a-summary-of-how-to-build-amplify-geo-and-amazon-location-service-5hal</link>
      <guid>https://dev.to/aws-builders/a-summary-of-how-to-build-amplify-geo-and-amazon-location-service-5hal</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IrnpkfVF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-072_01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IrnpkfVF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://day-journal.com/memo/images/try-072_01.png" alt="img" width="880" height="180"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-summarizes-how-amplify-geo-and-amazon-location-service-are-built-tada"&gt;
  &lt;/a&gt;
  This summarizes how Amplify Geo and Amazon Location Service are built 🎉
&lt;/h3&gt;

&lt;p&gt;At the "&lt;a href="https://jawspankration2021.jaws-ug.jp"&gt;JAWS PANKRATION 2021&lt;/a&gt;" held recently, I made a presentation titled "Comparison of Building Amazon Location Service and Amplify Geo". I summarized the information up to December 2021 about &lt;a href="https://docs.amplify.aws/lib/geo/getting-started/q/platform/js"&gt;Amplify Geo&lt;/a&gt; and &lt;a href="https://aws.amazon.com/jp/location"&gt;Amazon Location Service&lt;/a&gt;, which I have been researching a lot this year 💡 &lt;/p&gt;



&lt;p&gt;&lt;a href="https://docs.google.com/presentation/d/e/2PACX-1vToU8gAAYzFkXkYBWimdVT89JpMcBMMbaTyM3-Na6Tdo5KsrMpszNziLt0vDFlhjhTMrnbyKHVFxuRa/pub?start=false&amp;amp;loop=false&amp;amp;delayms=3000&amp;amp;slide=id.ge2d173d3ec_0_90"&gt;Comparison of Building Amazon Location Service and Amplify Geo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eEMMEtKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgbkkgmjc83yatilml9f.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eEMMEtKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgbkkgmjc83yatilml9f.jpeg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#amazon-location-service-and-amplify-geo"&gt;
  &lt;/a&gt;
  Amazon Location Service and Amplify Geo
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://aws.amazon.com/jp/location"&gt;Amazon Location Service&lt;/a&gt; is a service for building location-based applications used within AWS. Currently, five functions are available: map display, address search, route search, geofence, and tracking.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.amplify.aws/lib/geo/getting-started/q/platform/js"&gt;Amplify Geo&lt;/a&gt; is a feature of AWS Amplify that allows you to build Amazon Location Service easier, and is a wrapper that automatically configures Amazon Location Service.&lt;/p&gt;

&lt;p&gt;We built a web application in our internal hackathon to check out the actual function, and anyone can use it just by registering as a user, so please try it out. We are building our own Japanese style of background map, which is not currently supported by Amazon Location Service, and implementing each function in conjunction with the map library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alsmieruneio"&gt;
  &lt;/a&gt;
  &lt;a href="https://als.mierune.io"&gt;als.mierune.io&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IHdmzUZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://day-journal.com/memo/images/try-072_00.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IHdmzUZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://day-journal.com/memo/images/try-072_00.gif" alt="img" width="880" height="682"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#advance-preparation"&gt;
  &lt;/a&gt;
  Advance Preparation
&lt;/h2&gt;

&lt;p&gt;In advance, we will set up AWS Amplify and Vue.js up to the login function. We have chosen Vue.js as the framework, but it is possible to build with other frameworks such as React.&lt;/p&gt;

&lt;p&gt;↓ More info ↓&lt;br&gt;
&lt;a href="https://dev.to/aws-builders/building-a-login-function-with-aws-amplify-amplify-ui-vue-and-vue-3-4043"&gt;Building a Login Function with AWS Amplify, Amplify UI Vue, and Vue 3&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#view-the-map"&gt;
  &lt;/a&gt;
  View the map
&lt;/h2&gt;

&lt;p&gt;Map View is a feature that allows you to use a variety of background maps by selecting a map style.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#amazon-location-service"&gt;
  &lt;/a&gt;
  Amazon Location Service
&lt;/h4&gt;

&lt;p&gt;The Amazon Location Service allows you to define map styles and credentials, but does not provide the ability to define maps, so it uses a map library called &lt;a href="https://maplibre.org"&gt;MapLibre GL JS&lt;/a&gt;. You will also need to configure Amazon Location Maps in the AWS console and add policies to the Amplify role.&lt;/p&gt;

&lt;p&gt;↓ More info ↓&lt;br&gt;
&lt;a href="https://dev.to/aws-builders/building-a-map-application-with-amazon-location-service-maplibre-gl-js-aws-amplify-and-vuejs-2m48"&gt;Building a Map Application with Amazon Location Service, MapLibre GL JS, AWS Amplify, and Vue.js&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#amplify-geo"&gt;
  &lt;/a&gt;
  Amplify Geo
&lt;/h4&gt;

&lt;p&gt;When building with Amplify Geo, you will only need two commands to complete the process. Then use MapLibre and the wrapper library when building the frontend. By using the wrapper library, you can easily display the background map. Also, markers can be added easily.&lt;/p&gt;

&lt;p&gt;↓ More info ↓&lt;br&gt;
&lt;a href="https://dev.to/aws-builders/building-a-map-application-with-amplify-geo-and-vuejs-2226"&gt;Building a Map Application with Amplify Geo and Vue.js&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#leaflet"&gt;
  &lt;/a&gt;
  Leaflet
&lt;/h4&gt;

&lt;p&gt;Officially, "&lt;a href="https://maplibre.org"&gt;MapLibre GL JS&lt;/a&gt;" is recommended as a map library, but I also tried to see if I could build it with "&lt;a href="https://leafletjs.com"&gt;Leaflet&lt;/a&gt;", which is one of the most popular map libraries.&lt;/p&gt;

&lt;p&gt;↓ More info ↓&lt;br&gt;
&lt;a href="https://dev.to/aws-builders/building-a-map-application-with-amazon-location-service-leaflet-aws-amplify-and-vuejs-2l6e"&gt;Building a Map Application with Amazon Location Service, Leaflet, AWS Amplify, and Vue.js&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#geocoding"&gt;
  &lt;/a&gt;
  Geocoding
&lt;/h2&gt;

&lt;p&gt;Geocoding is a feature that allows you to retrieve the corresponding address data by specifying keywords.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#amazon-location-service"&gt;
  &lt;/a&gt;
  Amazon Location Service
&lt;/h4&gt;

&lt;p&gt;The Amazon Location Service requires the use of the AWS SDK when building the frontend. You will also need to configure Amazon Location Place indexes and add policies to the Amplify role in the AWS console.&lt;/p&gt;

&lt;p&gt;↓ More info ↓&lt;br&gt;
&lt;a href="https://dev.to/aws-builders/building-an-address-lookup-function-with-amazon-location-service-3fdm"&gt;Building an Address Search Function with Amazon Location Service&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#amplify-geo"&gt;
  &lt;/a&gt;
  Amplify Geo
&lt;/h4&gt;

&lt;p&gt;When building with Amplify Geo, as with the map display, you only need two commands to complete. And you can use the geocoding function from Amplify to get the address data when building the frontend.&lt;/p&gt;

&lt;p&gt;↓ More info ↓&lt;br&gt;
&lt;a href="https://dev.to/aws-builders/building-an-address-search-function-with-amplify-geo-bjf"&gt;Building an Address Search Function with Amplify Geo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/aws-builders/building-an-address-search-function-using-amplify-geo-and-maplibre-gl-geocoder-4lk2"&gt;Building an Address Search Function Using Amplify Geo and MapLibre GL Geocoder&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h2&gt;

&lt;p&gt;Routing is a function that allows you to obtain route data by specifying the starting point and destination.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#amazon-location-service"&gt;
  &lt;/a&gt;
  Amazon Location Service
&lt;/h4&gt;

&lt;p&gt;The Amazon Location Service requires the use of the AWS SDK when building the frontend. You will also need to configure Amazon Location Route calculators and add policies to the Amplify role in the AWS console.&lt;/p&gt;

&lt;p&gt;↓ More info ↓&lt;br&gt;
&lt;a href="https://dev.to/aws-builders/building-a-route-search-function-with-amazon-location-service-520"&gt;Building a Route Search Function with Amazon Location Service&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#amplify-geo"&gt;
  &lt;/a&gt;
  Amplify Geo
&lt;/h4&gt;

&lt;p&gt;As of December 2021, the routing function does not appear to be implemented yet.&lt;/p&gt;



&lt;h4&gt;
  &lt;a href="#here-is-a-summary-of-how-to-build-amplify-geo-and-amazon-location-service-thumbsup"&gt;
  &lt;/a&gt;
  Here is a summary of how to build Amplify Geo and Amazon Location Service 👍
&lt;/h4&gt;



&lt;p&gt;&lt;strong&gt;Wanna build it easily? - "&lt;a href="https://docs.amplify.aws/lib/geo/getting-started/q/platform/js"&gt;Amplify Geo&lt;/a&gt;"&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Easier to build than Amazon Location Service&lt;/li&gt;
&lt;li&gt;No need to configure AWS console and roles&lt;/li&gt;
&lt;li&gt;Some functions, such as routing, are still not available&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Want your own customization? - "&lt;a href="https://aws.amazon.com/jp/location"&gt;Amazon Location Service&lt;/a&gt;"&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;More challenging to build than Amplify Geo&lt;/li&gt;
&lt;li&gt;Need to set up AWS console and roles&lt;/li&gt;
&lt;li&gt;Available to customize directly using MapLibre GL JS&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'll continue to explore other features as well 👍&lt;/p&gt;

</description>
      <category>amazonlocationservice</category>
      <category>awsamplify</category>
      <category>maplibre</category>
      <category>leaflet</category>
    </item>
    <item>
      <title>JavaScript for Beginners - Chapter 5: Switch Statements</title>
      <author>Danish Saleem</author>
      <pubDate>Thu, 09 Dec 2021 12:16:26 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/javascript-for-beginners-chapter-5-switch-statements-5cp6</link>
      <guid>https://dev.to/mrdanishsaleem/javascript-for-beginners-chapter-5-switch-statements-5cp6</guid>
      <description>&lt;p&gt;The &lt;code&gt;switch&lt;/code&gt; statement is another form of &lt;code&gt;conditional logic&lt;/code&gt; in &lt;code&gt;JavaScript&lt;/code&gt;. In this chapter we will cover the syntax of the &lt;code&gt;switch&lt;/code&gt; statements as well as how it differs from the if statement and when to use which.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#switch-vs-if"&gt;
  &lt;/a&gt;
  Switch vs If
&lt;/h2&gt;

&lt;p&gt;A &lt;code&gt;switch&lt;/code&gt; statement is a good alternative to the &lt;code&gt;if&lt;/code&gt; statement when you are comparing a single value against multiple variants. For example, the following if statement can be written as a switch instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cherry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apples are on isle 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Banana&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bananas are on isle 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cherry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cherries are on isle 4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;We do not stock any of this fruit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-syntax"&gt;
  &lt;/a&gt;
  The Syntax
&lt;/h2&gt;

&lt;p&gt;In a &lt;code&gt;switch&lt;/code&gt; statement you start with the value you are checking and create a &lt;code&gt;case block&lt;/code&gt; for each variant you want to check against.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cherry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apples are on isle 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Banana&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bananas are on isle 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cherry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cherries are on isle 4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;We do not stock any of this fruit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Output: Cherries are on isle 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#break"&gt;
  &lt;/a&gt;
  Break
&lt;/h2&gt;

&lt;p&gt;Once there is a match the execution starts and will run until the next &lt;code&gt;break&lt;/code&gt;. If you don't include breaks it will continue through each case.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Banana&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apples are on isle 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Banana&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bananas are on isle 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cherry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cherries are on isle 4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;We do not stock any of this fruit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Output: Bananas are on isle 3&lt;/span&gt;
&lt;span class="c1"&gt;// Output: Cherries are on isle 4&lt;/span&gt;
&lt;span class="c1"&gt;// Output: We do not stock any of this fruit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#case-group"&gt;
  &lt;/a&gt;
  Case Group
&lt;/h2&gt;

&lt;p&gt;Several variants of &lt;code&gt;case&lt;/code&gt; which share the same code can be grouped together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cherry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apples are on isle 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Banana&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cherry&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bananas and Cherries are on isle 4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;We do not stock any of this fruit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Output: Bananas and Cherries are on isle 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#type-matters"&gt;
  &lt;/a&gt;
  Type Matters
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Switch&lt;/code&gt; statements use a strick equality check so type always matters. If there is a possibility of your value being a different type it's best to transform if first before the switch statement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;enteredValues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;enteredValues&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You picked number 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You picked number 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You picked number 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pick a number between 1 and 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Output: You picked number 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#within-function"&gt;
  &lt;/a&gt;
  Within Function
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Switch&lt;/code&gt; statements can also be used within function to return a value. If your switch has a &lt;code&gt;return&lt;/code&gt; then it doesn't need &lt;code&gt;break&lt;/code&gt; since a return will terminate the execution.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getGreeting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;language&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;language&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;English&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Spanish&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hola&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;French&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bonjour&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Italian&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ciao&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;getGreeting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Spanish&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Output: Hola&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;switch&lt;/code&gt; statement when comparing equality against multiple variants.&lt;/li&gt;
&lt;li&gt;Use a &lt;code&gt;case&lt;/code&gt; block per variant.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;break&lt;/code&gt; to stop subsequent executions.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Group&lt;/code&gt; case blocks that execute the same code.&lt;/li&gt;
&lt;li&gt;Type matters, transforms values that might be a different type before comparing.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Switch&lt;/code&gt; statements can return a value when used within a function.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect 💜
&lt;/h3&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.instagram.com/mrdanishsaleem/"&gt;Instagram&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" alt="Buy Me a Coffee" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The Analysis Paralysis of Learning to Code...</title>
      <author>Piyush Malhotra</author>
      <pubDate>Thu, 09 Dec 2021 12:12:45 +0000</pubDate>
      <link>https://dev.to/thepiyushmalhotra/the-analysis-paralysis-of-learning-to-code-9kh</link>
      <guid>https://dev.to/thepiyushmalhotra/the-analysis-paralysis-of-learning-to-code-9kh</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Tutorial Hell, am I right?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Gone are the days where “geek” or “nerd” was used as a derogatory term. Coding is a fun hobby and also a very worthy skill to have in this rapidly growing software industry. The insatiable want to build things in developers has created so many amazing things that we don’t even notice while using them daily. You are reading this blog post on your device because of some vision that some person had! Big tech giants like Google, Facebook, Twitter, Netflix, etc have completely revolutionized this world digitally. The Information Age is over, we are stepping into the Augmented Age now and the demand for developers is more than ever.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u37pHcYk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/66yp4d6o9wkbdi4ua5ue.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u37pHcYk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/66yp4d6o9wkbdi4ua5ue.jpg" alt="Code Stock Photo" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s say you have decided to learn to code, maybe for a job or just for the sake of it. Maybe you have a fun idea that has the potential to be the next big thing, or you just want to build things for fun and help the community that is helping you to learn to code, maybe you want a lucrative well-paying career working at one of the FAANG companies. Whatever it may be, the growth opportunities are endless, and peeking into your distant future self, imagining yourself as a Software Developer sends a high jolt through your mind. And guess what? You just finished your first programming course ever in JavaScript, Python, C++, or C and have the fundamentals down. You realize that the list of technologies to learn is endless. That’s okay, it seems scary but you buckle down and are ready to move on to the next thing! But uh-oh 😕, after deciding what you want to learn next, you’re gonna have to decide “where” to learn it from. That part almost always leads to decision fatigue and now you’re tired and demoralized before even showing up at the starting line.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I2BkhCT---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jitgfnm8cg6k9769c7vp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I2BkhCT---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jitgfnm8cg6k9769c7vp.jpg" alt="Chill" width="564" height="317"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have a cup of Java ☕ (Pun intended!) and meditate. This is a normal thing to happen to developers, especially those who are just starting to learn. It feels more difficult to get the ball rolling but once you have relevant experience, you start to understand how the learning process works and that you’re not alone in running into these hiccups.&lt;br&gt;
I used to spend most of my time trying to find a variety of things to learn rather than simply sticking to one of them and taking that first step. Even now sometimes I am usually riffling through &lt;a href="https://www.reddit.com/r/learnprogramming/"&gt;r/learnprogramming&lt;/a&gt; to find something new to learn, reading articles at &lt;a href="https://news.ycombinator.com/"&gt;Hacker News&lt;/a&gt;, or working on personal projects. It did not take me that long to find out what I wanted to learn, especially now with so many communities out there for programming and computer science, developers are always helping out each other. But the task of finding “where” to learn it from was hellish. A simple internet search — “How to learn to program” will hit you in the face with books, courses, boot camps, projects, and so much more stuff when you barely only need about 20–30% of that stuff to get going. So how should one navigate the ton of material that is available on the web to make the most out of it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-less-is-more"&gt;
  &lt;/a&gt;
  1. Less is More
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lhsFkVDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cb4qi1eqvqxnzrcdx4z6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lhsFkVDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cb4qi1eqvqxnzrcdx4z6.jpg" alt="Minimalism Developer" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“When given too many choices, people tend to worry that there’s something better out there than what they decided on.”&lt;br&gt;
― Fumio Sasaki&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Way before I started learning, I started accumulating stuff thinking that when I’ll begin, I’ll have a lot of stuff to study. But in doing so, I was only delaying the process, partly because I was intimidated by programming and also because I never really felt ready because of my scanty collection of programming assets. Yeah right, “scanty”, says me while downloading yet another e-book and buying yet another course on Udemy which I might never finish.&lt;/p&gt;

&lt;p&gt;So make sure to focus on only a couple of the best available assets out there and steer through them while learning. My go-to path for learning any particular thing usually consists of what I call a &lt;strong&gt;“Programmer’s Knapsack”&lt;/strong&gt; containing 1–2 books, 1–2 BootCamp courses ranging anywhere from 3 hours to 30 hours depending upon the subject, and a couple of youtube videos related to that for refreshers. Even this is more than enough than what you usually need (I always tend to learn a little “extra”). Books help the most in laying the foundational knowledge, BootCamps or courses help in making the person feel more confident through projects and exercises and giving a “classroom” feel and finally, youtube videos save a lot of time while still covering the roots or every time you want to revise your learnings.&lt;/p&gt;

&lt;p&gt;I have provided some online resources to learn coding at the end of this blog post which helped me a lot and still does.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-dont-juggle-as-a-beginner"&gt;
  &lt;/a&gt;
  2. Don't Juggle as a Beginner
&lt;/h2&gt;

&lt;p&gt;Now, this might sound contradictory to my statement above that we should study from various mediums like books, courses, and some YouTube videos. But by “Don’t Juggle” here, I mean that if you have just started to learn as an absolute beginner, then make sure to finish whatever material you started learning from first before moving on to another. This happened to me where got bored from a book after a while and I shifted on to a course on Udemy. But after completing 50% of that course I realized that I already knew these things from the book, the only thing I needed was the practice from the exercises and making projects so instead of watching the course videos, I could have used that time to solve problems and improve my proficiency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cdk_pNM8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl1q1m0avrxy1tghrnbt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cdk_pNM8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl1q1m0avrxy1tghrnbt.jpg" alt="Undecisive Meme" width="500" height="756"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;kernels&lt;/em&gt; (again, forgive me for being punny) of programming principles remain the same no matter where they are learned from. So that’s why it's important to finish one resource and make sure you understand everything in that before moving on to something else. You will learn in a much better way and have a great feeling of closure and confidence after you complete it.&lt;/p&gt;

&lt;p&gt;Note: If you’re already an intermediate learner then you already know enough to pave your path ahead for learning! 👍&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-finish-the-projects"&gt;
  &lt;/a&gt;
  3. Finish the Projects
&lt;/h2&gt;

&lt;p&gt;Almost every method of learning, be it YouTube, Udemy, Edx, etc or Books usually ends with an interesting project. It’s a good way to cement your foundations and give you confidence. Projects help you a ton in bringing everything together that you have learned. Plus, an impressive enough project can do wonders for your resume and make it stand out. BUT, these projects are usually guided by the authors so that you can code along with them and cross-check your mistakes which you will make for sure. I am not against this method of learning but a better way to follow this step would be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Try to create their given project from scratch using your knowledge and all that you have learned. See if you can do it without the author’s help. If you can, voila! You are a super talented genius.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you get stuck, do some googling and try to find and debug your mistakes. A big chunky part of a software developer’s time at his/her job is spent on stack overflow.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If it is still proving to be difficult only then check their solutions and code along with them. Because you don’t want to spend too much time sitting on a problem. No one knows the answers to all the problems, the fact that you are willing to learn makes you better than most people.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All these steps will give you a much better idea of how developers in the real world work and solve problems. That’s what we do, solve problems, ask for help, slack off, watch anime, and play games 🎮.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-dont-be-a-completionist"&gt;
  &lt;/a&gt;
  4. Don't be a Completionist
&lt;/h2&gt;

&lt;p&gt;This is kind of an extension to step 2. Once you have finished your first resource and have the basics understood, you’re going to realize all the “beginner” resources on the internet will always put their focus on those same basics, those loops, those if-else conditions, those functions, this is all that programming comes down to. So, you only need to study just one thing completely from start to finish to grab these concepts. Mastering them, however, depends on your self-practice. After this, If you have the time it’s your choice if you want to start from scratch again but make sure you do have the time.&lt;/p&gt;

&lt;p&gt;It’s bonkers the number of resources out there, so many that you can study all your life and still feel that you don’t know enough. Your goal is not to consume everything but to know enough so that you can excel at your job and keep building wonderful things. &lt;strong&gt;Bjarne Stroustrup, the legendary creator of C++ ranks himself a 7/10 at best in it!&lt;/strong&gt; If you don’t have the time to start again, a solution to this would be to kind of just do a quick go-through of the basics whenever you pick another resource and then pay attention to the more interesting exercises and projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rCLos79v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ka83yxm480wys3ueyqc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rCLos79v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ka83yxm480wys3ueyqc.jpg" alt="Code Repeat" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even if you have changed the language or subject, you will save a lot of time using this method because at the core of computer science, the concepts are the same. Except for some basic syntactical techniques, most of the time you won’t have to learn anything bulkier if you’re switching to another programming language.&lt;/p&gt;

&lt;p&gt;Learning to code is a demanding skill but keep in mind that you will also learn googling which helps all the developers in getting unstuck whenever there is a hurdle. So don’t beat yourself up for not remembering everything. We’re all humans here and we learn by making mistakes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-know-your-purpose"&gt;
  &lt;/a&gt;
  5. Know Your Purpose
&lt;/h2&gt;

&lt;p&gt;The last tip I can give to you guys is that never forget why you are learning to code. Knowing how to code itself is not an achievement, in the end, it is just a tool to help you either solve a problem, build a project or automate some task to make your life easier. With enough practice anyone can easily learn to code but what after that?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;For Students:&lt;/strong&gt; Coding is basically like training in the gym, the more you do it, the more you will get stronger in it. So, follow the tips above if you feel like you are getting lost and you'll avoid decision-making stress like a pro.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;For Career Makers:&lt;/strong&gt; Start approaching and researching job roles on LinkedIn, Glassdoor, and career websites for the companies. The right position will find you!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;For Hobbyists:&lt;/strong&gt; Keep expanding your skills and building mind-blowing stuff. I have seen people coming from construction, law, and finance backgrounds turn towards coding and make amazing things!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So this was my article that included some tips on how to avoid analysis paralysis when it comes to learning code. I hope it helps everyone, especially the beginners who find it hard to swim in the tsunami of materials available online.&lt;br&gt;
Every day, new websites and resources are popping up for beginners to learn to code. I have listed below some of the most popular places to learn to code that have helped me a lot in my journey and millions of others.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/"&gt;Coursera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/search"&gt;Edx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/"&gt;Udemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/"&gt;FreeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ossu/computer-science"&gt;Open Source Society University&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teachyourselfcs.com/"&gt;Teach Yourself CS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.theodinproject.com/"&gt;The Odin Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codecademy.com/"&gt;CodeAcademy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ocw.mit.edu/index.htm"&gt;MIT Open Courseware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/learnprogramming/"&gt;Reddit — r/learnprogramming&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it for this article folks! Make sure to check out my other article too — &lt;a href="https://dev.to/thepiyushmalhotra/the-beginner-friendly-way-to-learn-from-freecodecamp-on-youtube-37g7"&gt;“The Beginner-friendly way to learn from FreeCodeCamp on YouTube”&lt;/a&gt;. Let me know if I can make some additions or changes to this article or if I missed something important. My objective for writing these articles is always to give back to the community that has aided me tremendously to become a good programmer.&lt;br&gt;
Connect with me on &lt;a href="https://twitter.com/Ipiyushmalhotra"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/in/thepiyushmalhotra/"&gt;LinkedIn&lt;/a&gt;. And stay tuned for more stuff ahead! Ciao!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>learning</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Advent of Code 2021 - Day 9</title>
      <author>Daniel Persson</author>
      <pubDate>Thu, 09 Dec 2021 12:04:56 +0000</pubDate>
      <link>https://dev.to/kalaspuffar/advent-of-code-2021-day-9-2jfi</link>
      <guid>https://dev.to/kalaspuffar/advent-of-code-2021-day-9-2jfi</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WE5CIYNU2bg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this video series, I try to challenge myself with the Advent of Code trials. Each solution will be published to Github, and I hope you will learn something from my coding mistakes and perhaps send some code my way on how you have done these challenges. I know by reading code, so this is such an exciting thing for me.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Java Script typing</title>
      <author>Gurcharan Singh</author>
      <pubDate>Thu, 09 Dec 2021 11:56:58 +0000</pubDate>
      <link>https://dev.to/gurcharanathwal/java-script-typing-1hik</link>
      <guid>https://dev.to/gurcharanathwal/java-script-typing-1hik</guid>
      <description></description>
    </item>
    <item>
      <title>Java Stream filter() Example</title>
      <author>Ramesh Fadatare</author>
      <pubDate>Thu, 09 Dec 2021 11:12:15 +0000</pubDate>
      <link>https://dev.to/rameshfadatare/java-stream-filter-example-4hm0</link>
      <guid>https://dev.to/rameshfadatare/java-stream-filter-example-4hm0</guid>
      <description>&lt;p&gt;The Java Stream &lt;em&gt;filter()&lt;/em&gt; is an intermediate operation.&lt;/p&gt;

&lt;p&gt;The Java Stream &lt;em&gt;filter()&lt;/em&gt; can be used to filter out elements from a Java Stream. &lt;/p&gt;

&lt;p&gt;The filter() method takes a &lt;em&gt;Predicate&lt;/em&gt; that is called for each element in the stream. If the element is to be included in the resulting Stream, the Predicate should return &lt;em&gt;true&lt;/em&gt;. If the element should not be included, the Predicate should return &lt;em&gt;false&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#java-stream-filter-example-1"&gt;
  &lt;/a&gt;
  Java Stream filter() Example 1
&lt;/h2&gt;

&lt;p&gt;Here is an example of calling the Java Stream &lt;em&gt;filter()&lt;/em&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Arrays&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.List&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.stream.Collectors&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Tester&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"java"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"python"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;       &lt;span class="c1"&gt;// convert list to stream&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;filter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="s"&gt;"c"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// we dont like c&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;collect&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Collectors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toList&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;     &lt;span class="c1"&gt;// collect the output and convert streams to a List&lt;/span&gt;

        &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forEach&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java
python
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#java-stream-filter-example-2"&gt;
  &lt;/a&gt;
  Java Stream filter() Example 2
&lt;/h2&gt;

&lt;p&gt;In this example, we will create a list of products and we filter products whose price is greater than 25k. We display a list of products using the &lt;em&gt;forEach()&lt;/em&gt; method.&lt;/p&gt;

&lt;p&gt;Let's first create a Product class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
   &lt;span class="c1"&gt;// getters and setters &lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StreamFilterExample&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;// using stream API&lt;/span&gt;
        &lt;span class="nc"&gt;List&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;filteredProducts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getProducts&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
            &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;filter&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getPrice&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;25000&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;collect&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Collectors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toList&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;filteredProducts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forEach&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getProducts&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;List&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;productsList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;productsList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"HP Laptop"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25000&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;productsList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Dell Laptop"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30000&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;productsList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Lenevo Laptop"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28000&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;productsList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Sony Laptop"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28000&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;productsList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Apple Laptop"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90000&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;productsList&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;In&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;above&lt;/span&gt; &lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="nf"&gt;filter&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;filter&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="n"&gt;whose&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;greater&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="nl"&gt;k:&lt;/span&gt;
       &lt;span class="nc"&gt;List&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;filteredProducts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getProducts&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
            &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;filter&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getPrice&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;25000&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;collect&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Collectors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toList&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#related-java-stream-methodsapis-examples"&gt;
  &lt;/a&gt;
  Related Java Stream Methods/APIs Examples
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-filter-example.html"&gt;Java Stream filter() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-map-example.html"&gt;Java Stream map() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-flatmap-example.html"&gt;Java Stream flatMap() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-distinct-example.html"&gt;Java Stream distinct() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-limit-example.html"&gt;Java Stream limit() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-peek-example.html"&gt;Java Stream peek() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-anymatch-example.html"&gt;Java Stream anyMatch() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-allmatch-example.html"&gt;Java Stream allMatch() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-nonematch-example.html"&gt;Java Stream noneMatch() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-collect-example.html"&gt;Java Stream collect() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-count-example.html"&gt;Java Stream count() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-findany-example.html"&gt;Java Stream findAny() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-findfirst-example.html"&gt;Java Stream findFirst() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-foreach-example.html"&gt;Java Stream forEach() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-min-example.html"&gt;Java Stream min() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-max-example.html"&gt;Java Stream max() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-reduce-example.html"&gt;Java Stream reduce() Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sourcecodeexamples.net/2021/11/java-stream-toarray-example.html"&gt;Java Stream toArray() Example&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>java</category>
      <category>example</category>
    </item>
    <item>
      <title>JavaScript &amp; Web API</title>
      <author>Rakesh Patel</author>
      <pubDate>Thu, 09 Dec 2021 10:58:53 +0000</pubDate>
      <link>https://dev.to/rakesh_patel/javascript-web-api-4j92</link>
      <guid>https://dev.to/rakesh_patel/javascript-web-api-4j92</guid>
      <description>&lt;p&gt;As we all know, API stands for Application Programming Interface. API is actually some kind of interface which is having a set of functions. These set of functions will allow programmers to acquire some specific features or the data of an application.&lt;br&gt;
Our web browser ( Chrome, Mozilla, Safari, etc. ) also provide some API, which is used by JavaScript engine. &lt;/p&gt;

&lt;blockquote&gt;
&lt;h6&gt;
  &lt;a href="#note-that-these-apis-are-not-the-part-of-javascript-language"&gt;
  &lt;/a&gt;
  Note that these API's are not the part of JavaScript language.
&lt;/h6&gt;
&lt;/blockquote&gt;

&lt;p&gt;Below are the some most commonly used Web API's,&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-timer-api-settimeout-setinterval"&gt;
  &lt;/a&gt;
  1. Timer API ( setTimeout, setInterval)
&lt;/h4&gt;

&lt;h6&gt;
  &lt;a href="#these-api-are-used-for-executing-task-after-specific-time-duration"&gt;
  &lt;/a&gt;
  These API are used for executing task after specific time duration.
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/setTimeout"&gt;click here&lt;/a&gt; to read more...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-console-api"&gt;
  &lt;/a&gt;
  2. Console API
&lt;/h4&gt;

&lt;h6&gt;
  &lt;a href="#yes-console-is-not-the-part-of-javascript-language-but-its-browser-api-we-can-access-many-console-features-like-raw-consolelog-endraw-raw-consoleerror-endraw-raw-consoledir-endraw-etc-through-this-api"&gt;
  &lt;/a&gt;
  Yes, console is not the part of JavaScript language but it's browser API. We can access many console features like &lt;code&gt;console.log&lt;/code&gt;, &lt;code&gt;console.error&lt;/code&gt;, &lt;code&gt;console.dir&lt;/code&gt;, etc through this API.
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console"&gt;click here&lt;/a&gt; to read more...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-document-object-model-dom-api"&gt;
  &lt;/a&gt;
  3. Document Object Model (DOM) API
&lt;/h4&gt;

&lt;h6&gt;
  &lt;a href="#dom-api-are-used-to-access-modify-web-document-ie-html-pages-some-commonly-used-dom-properties-are-raw-documentgetelementbyid-endraw-raw-documentappend-endraw-etc"&gt;
  &lt;/a&gt;
  DOM API are used to access, modify web document i.e. HTML pages. some commonly used DOM  properties are &lt;code&gt;document.getElementById&lt;/code&gt;, &lt;code&gt;document.append&lt;/code&gt;, etc.
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model"&gt;click here&lt;/a&gt; to read more...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-storage-api-localstorage-sessionstorage"&gt;
  &lt;/a&gt;
  4. Storage API ( localStorage, sessionStorage)
&lt;/h4&gt;

&lt;h6&gt;
  &lt;a href="#storage-apis-are-used-for-storing-data-locally-in-client-side"&gt;
  &lt;/a&gt;
  Storage API's are used for storing data locally in client side.
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"&gt;click here&lt;/a&gt; to read more...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-geolocation-api-navigatior"&gt;
  &lt;/a&gt;
  5. Geolocation API ( Navigatior)
&lt;/h4&gt;

&lt;h6&gt;
  &lt;a href="#to-get-users-location-related-information-this-api-is-used"&gt;
  &lt;/a&gt;
  To get user's location related information , this API is used.
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API"&gt;click here&lt;/a&gt; to read more...&lt;/p&gt;

&lt;p&gt;There are many Web API's are available. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API"&gt;click here&lt;/a&gt; to read more about all of API's&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Syncing user data: Hasura &amp; Auth0 for authenticated database access</title>
      <author>Joel Gee Roy</author>
      <pubDate>Thu, 09 Dec 2021 10:37:44 +0000</pubDate>
      <link>https://dev.to/devgeetech/syncing-user-data-hasura-auth0-for-authenticated-database-access-5gf6</link>
      <guid>https://dev.to/devgeetech/syncing-user-data-hasura-auth0-for-authenticated-database-access-5gf6</guid>
      <description>&lt;p&gt;Adding authenticated database access to your project can be a cool but tedious task. In this blog post (and the next), I'll try and explain how to add an authenticated database to your project. The article assumes (dangerously) that you have no experience with hasura or auth0 or node.js. If you've worked with both Hasura and auth0, you can go straight to the &lt;a href="#securing-hasura-instance-with-auth0"&gt;integration&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this post, we'll focus on syncing user data across the identity provider (Auth0) and the GraphQL engine (Hasura). Whenever a user creates/ updates an account on Auth0, we'll make sure the necessary changes are reflected on a &lt;code&gt;users&lt;/code&gt; table in our database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-authenticate-users"&gt;
  &lt;/a&gt;
  Why authenticate users?
&lt;/h2&gt;

&lt;p&gt;Most of my projects involve a database and when it is at a sideproject level, I didn't really care about the authentication bit. For a Todo app, A database URL is used to talk to the DB directly and primary keys like &lt;code&gt;user_id&lt;/code&gt; is used to query from a unified table like &lt;code&gt;tasks&lt;/code&gt;. The problem with this approach is that when the project gets out there, hoarding all those github stars, malicious users could easily query the DB using it's URL and pretend to be other another user just using their &lt;code&gt;user_id&lt;/code&gt;. We could  prevent this by implementing a robust identity management system and some access control at the database level. Let's see how we can implement exactly that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-hasura-app"&gt;
  &lt;/a&gt;
  Create Hasura app
&lt;/h2&gt;

&lt;p&gt;Create a new Hasura cloud account &lt;a href="https://cloud.hasura.io/signup"&gt;here&lt;/a&gt; if you don't already have one. Once you have logged in to the Hasura dashboard, create a new project. Choose the free tier. Once the project is created, Click on &lt;code&gt;Launch Console&lt;/code&gt;. This will open up a new tab where you can interact with the Hasura console. &lt;/p&gt;

&lt;p&gt;We need a provider to host our PostgreSQL database. We will be using Heroku for this tutorial. While the Hasura console is booting up go to &lt;a href="https://heroku.com"&gt;Heroku&lt;/a&gt; and create an account. &lt;/p&gt;

&lt;p&gt;After the console opens up, click the &lt;code&gt;Data&lt;/code&gt; tab at the top&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oAfw-9xG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1b20l0e5gef8hap4oxfv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oAfw-9xG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1b20l0e5gef8hap4oxfv.png" alt="Hasura dashboard: Data" width="880" height="409"&gt;&lt;/a&gt; &lt;br&gt;
Click on &lt;code&gt;Create Heroku Database&lt;/code&gt;. You'll be shown some prompts regarding Hasura's connection to Heroku; approve the connections&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zPKzI-SF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4d09fc9ud22pvvwlp72f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zPKzI-SF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4d09fc9ud22pvvwlp72f.png" alt="Connecting hasura to heroku" width="573" height="319"&gt;&lt;/a&gt; &lt;br&gt;
Once the database is created, click on &lt;code&gt;public&lt;/code&gt; on the &lt;code&gt;Data Manager&lt;/code&gt; tab to the left. Create a table using the &lt;code&gt;Create table&lt;/code&gt; button and add the necessary attributes (click on &lt;code&gt;+ Frequently used columns&lt;/code&gt; to add common columns)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gZy0w82W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qw0u14s6j6b9e5zlzt5s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZy0w82W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qw0u14s6j6b9e5zlzt5s.png" alt="Adding a table" width="833" height="514"&gt;&lt;/a&gt; &lt;br&gt;
Here we create a &lt;code&gt;users&lt;/code&gt; table with attributes: id, name, federated_id. Make sure id and federated_id are set as unique.&lt;br&gt;&lt;br&gt;
Setting federated_id as unique will generate some necessary indexes that we'll require later. Finalize table creation by clicking &lt;code&gt;Add table&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XiW3CWoS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njexgr23d7r4rp6ob0nt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XiW3CWoS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njexgr23d7r4rp6ob0nt.png" alt="Table properties" width="450" height="363"&gt;&lt;/a&gt; &lt;br&gt;
Don't worry about adding data into this table just yet. We'll set up an automated flow so that the users table is automatically updated when a user signs up with Auth0. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-auth0-app"&gt;
  &lt;/a&gt;
  Create Auth0 app
&lt;/h2&gt;

&lt;p&gt;Create an account and then log in to &lt;a href="https://auth0.com"&gt;Auth0&lt;/a&gt;. On the dashboard, Click &lt;code&gt;Applications&lt;/code&gt; under &lt;code&gt;Applications&lt;/code&gt; in the left sidebar&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tv6-sUUW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyj103myf9xon3zd915q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tv6-sUUW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyj103myf9xon3zd915q.png" alt="Auth0 Applications" width="880" height="119"&gt;&lt;/a&gt;&lt;br&gt;
Click on the &lt;code&gt;Create Application&lt;/code&gt; button and enter the name of the application, let's call it &lt;code&gt;Mini twitter&lt;/code&gt;. If you're using a framework like Next.js on the frontend, select &lt;code&gt;Regular Web Applications&lt;/code&gt; as the application type. Select technology that you're using (this will let Auth0 recommend settings and instructions on how to set up the application); In our case, select Next.js&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#securing-hasura-instance-with-auth0"&gt;
  &lt;/a&gt;
  Securing Hasura instance with Auth0
&lt;/h2&gt;

&lt;p&gt;Now we'll connect our Auth0 application to the Hasura project. To get started, get your auth0 project domain from &lt;code&gt;Applications &amp;gt; Applications &amp;gt; Settings &amp;gt; Domain&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GlU7Z4N7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddv36rw7fv49xhd29eoa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GlU7Z4N7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddv36rw7fv49xhd29eoa.png" alt="Setting up application" width="880" height="322"&gt;&lt;/a&gt; &lt;br&gt;
By default, Hasura creates an admin secret to secure the project GraphQL endpoint. We now need to instruct Hasura to use Auth0 public keys. The config for the JWT can be easily created by using the tool &lt;a href="https://hasura.io/jwt-config/"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Je2m3kPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az8niqlp2bqjffip8mxt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Je2m3kPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az8niqlp2bqjffip8mxt.png" alt="Setting up JWT" width="561" height="502"&gt;&lt;/a&gt; &lt;br&gt;
Paste in the domain name you got from the Auth0 dashboard and generate the config. Copy the generated config, go to &lt;a href="https://cloud.hasura.io"&gt;hasura dashboard&lt;/a&gt;, click on the gear icon on the project. The project settings will now open up. Click on &lt;code&gt;Env vars&lt;/code&gt; on the left side and add a new env var &lt;code&gt;HASURA_GRAPHQL_JWT_SECRET&lt;/code&gt;. Paste in the config you copied into the field, click on &lt;code&gt;Add&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lng2l-e7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4rklam1gitvxof950u0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lng2l-e7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4rklam1gitvxof950u0.png" alt="Setting hasura secret" width="449" height="580"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#syncing-users"&gt;
  &lt;/a&gt;
  Syncing users
&lt;/h2&gt;

&lt;p&gt;Now we need to make sure that the users who log in through Auth0 are synced with the user data on the database managed by Hasura. When th user signs up with their email and password, we want to make sure that a new row is added to the &lt;code&gt;users&lt;/code&gt; table in Hasura DB. We'll implement the syncing using Auth0 actions. In the Auth0 dashboard, click &lt;code&gt;Actions&lt;/code&gt; on the left sidebar and click on &lt;code&gt;Library&lt;/code&gt;. This page will show all the actions that you've created. Click on the &lt;code&gt;Build Custom&lt;/code&gt; button. &lt;/p&gt;

&lt;p&gt;Enter a name for the action, like &lt;code&gt;login-ping&lt;/code&gt;. Select the trigger as &lt;code&gt;Login / Post Login&lt;/code&gt;. Choose the Node 16 runtime.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qr8GLunT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xt1cym9t7h5fjri04qqz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qr8GLunT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xt1cym9t7h5fjri04qqz.png" alt="Creating an Auth0 action" width="435" height="475"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Now click on the &lt;code&gt;Custom&lt;/code&gt; tab and then click on the newly created action. A code editor will open up. Paste the following code into the editor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * Handler that will be called during the execution of a PostUserRegistration flow.
 *
 * @param {Event} event - Details about the context and user that has registered.
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onExecutePostLogin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;federated_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nickname&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;admin_secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;secrets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HASURA_SECRET&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://YOUR_HASURA_ENDPOINT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`mutation ($federated_id: String!, $email: String, $username: String) {
        insert_users(objects: {federated_id: $federated_id, email: $email, username: $username}, on_conflict: {constraint: users_federated_id_key}) {
            affected_rows
        }
    }`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;federated_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;federated_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;content-type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;x-hasura-admin-secret&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;admin_secret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Edit the &lt;code&gt;url&lt;/code&gt; with the URL of the Hasura graphql endpoint. You can get this from the Hasura dashboard&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E9qoj70w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/097felce40s3ivch862y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E9qoj70w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/097felce40s3ivch862y.png" alt="Hasura GraphQL endpoint" width="511" height="223"&gt;&lt;/a&gt; &lt;br&gt;
Click on the key icon on the left side of the editor to add the &lt;code&gt;HASURA_SECRET&lt;/code&gt; environment variable. Copy the &lt;code&gt;x-hasura-admin-secret&lt;/code&gt; and set it as the &lt;code&gt;HASURA_SECRET&lt;/code&gt; variable. Click &lt;code&gt;Deploy&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#custom-jwt-claims"&gt;
  &lt;/a&gt;
  Custom JWT claims
&lt;/h2&gt;

&lt;p&gt;Earlier we secured the Hasura graphql endpoint. This means that we have to do some additional steps to make sure our requests get accepted by Hasura. Hasura evaluates the request sender's &lt;code&gt;role&lt;/code&gt; to determine the permissions allowed to the user. Furthermore, the &lt;code&gt;user-id&lt;/code&gt; is also evaluated to enable a more granular permission system. Thus we need to embed the &lt;code&gt;role&lt;/code&gt; and &lt;code&gt;user_id&lt;/code&gt; in the user token that we'll be using to gain access to Hasura.&lt;/p&gt;

&lt;p&gt;To embed the user details in the token, we are going to create another custom action &lt;code&gt;login-hasura-token&lt;/code&gt; with a &lt;code&gt;Login / Post Login&lt;/code&gt; trigger. Add the following code into the action editor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * Handler that will be called during the execution of a PostLogin flow.
 *
 * @param {Event} event - Details about the user and the context in which they are logging in.
 * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.
 */&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onExecutePostLogin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;idToken&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setCustomClaim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://hasura.io/jwt/claims&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;x-hasura-default-role&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;x-hasura-allowed-roles&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;x-hasura-user-id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#adding-actions-to-the-authentication-flow"&gt;
  &lt;/a&gt;
  Adding actions to the authentication flow
&lt;/h2&gt;

&lt;p&gt;To add the actions to the authentication flow, on the Auth0 dashboard, click on &lt;code&gt;Actions&lt;/code&gt; and then &lt;code&gt;Flows&lt;/code&gt; on the left sidebar. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1LlT7uLy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcr4o8v16m454ppgtohe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1LlT7uLy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcr4o8v16m454ppgtohe.png" alt="Auth0 action flow" width="880" height="379"&gt;&lt;/a&gt; &lt;br&gt;
The action that we've coded is designed to be executed after a user logs in. Click on the &lt;code&gt;Login&lt;/code&gt; option. A flow chart showing the login flow will be shown. Add the newly created actions by selecting them from the menu on the right. Drag the actions and place them into the flow chart. Make sure &lt;code&gt;login-ping&lt;/code&gt; is placed first. Click on apply.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NbaAN-zT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6ncunu7n653zi7qjcj0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NbaAN-zT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6ncunu7n653zi7qjcj0.png" alt="Setting up Auth0 action flow" width="859" height="482"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-authentication-flow"&gt;
  &lt;/a&gt;
  Testing authentication flow
&lt;/h2&gt;

&lt;p&gt;Let's test if a new user sign-up adds the user data into the DB. On the sidebar, click on &lt;code&gt;Getting Started&lt;/code&gt; then click &lt;code&gt;Try it out -&amp;gt;&lt;/code&gt; in the &lt;code&gt;Try your Login box&lt;/code&gt; dialog box.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j5QNW2h---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wgw623b56ubc3ct3x1xd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j5QNW2h---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wgw623b56ubc3ct3x1xd.png" alt="Auth0 getting started section" width="722" height="417"&gt;&lt;/a&gt; &lt;br&gt;
You'll be redirected to a login page, switch to sign up mode, and enter an email and a password. You should be redirected to a screen that tells you the sign-up has been successful. Now go to your Hasura console and see if the user details have been added to the table.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this post, we saw how we can sync the data in Auth0 with the data in our database. But we're not done. We still need to enable access controls to ensure that authenticated users won't  be allowed access to the data of other users. We'll implement this in the next post.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://hasura.io/learn/graphql/hasura/authentication/1-create-auth0-app/"&gt;Hasura Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hasura.io/docs/latest/graphql/core/guides/integrations/auth0-jwt.html"&gt;Hasura Docs: Auth0 JWT integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://auth0.com/blog/building-a-collaborative-todo-app-with-realtime-graphql-using-hasura/"&gt;Auth0 Docs: Integration with hasura&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>react</category>
      <category>auth0</category>
      <category>hasura</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Deploy Angular Project on an ubuntu server with pm2</title>
      <author>claudemotoba</author>
      <pubDate>Thu, 09 Dec 2021 10:25:48 +0000</pubDate>
      <link>https://dev.to/claudemotoba/deploy-angular-project-on-an-ubuntu-server-with-pm2-37le</link>
      <guid>https://dev.to/claudemotoba/deploy-angular-project-on-an-ubuntu-server-with-pm2-37le</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. Install NodeJs&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt install nodejs

node -v
// v16.13.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Install pm2&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo npm install pm2 -g

pm2 -v
// 5.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Install Git&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt install git

git --version
// git version 2.17.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Install Angular CLI&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo npm install -g @angular/cli 

ng version
// Angular CLI: 13.0.3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;5. Clone Project and Install package&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo git clone https://github.com/&amp;lt;username&amp;gt;/&amp;lt;repository&amp;gt;.git

cd &amp;lt;project-name&amp;gt;

sudo npm install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;6. Run Angular with pm2&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pm2 start "ng serve"

// you can specific host, port and name of your app
pm2 start "ng serve --host 0.0.0.0 --port 4205" --name "name"

// list app
pm2 list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>angular</category>
      <category>javascript</category>
      <category>node</category>
      <category>ubuntu</category>
    </item>
  </channel>
</rss>
