<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Let's light it 🔥 up!</title>
      <author>Dharmen Shah</author>
      <pubDate>Fri, 23 Apr 2021 17:23:04 +0000</pubDate>
      <link>https://dev.to/shhdharmen/let-s-light-it-up-h99</link>
      <guid>https://dev.to/shhdharmen/let-s-light-it-up-h99</guid>
      <description>&lt;p&gt;In previous post, we saw how amazing it is to use animation with wave 👋 emoji! In this post, we will try to achieve the same for flame 🔥 emoji!&lt;/p&gt;

&lt;p&gt;Below is the CSS code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--flame-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;flame-animation&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate3d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.75&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;25&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.35&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate3d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-10%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-3deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.05&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.35&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate3d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-4%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;75&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.35&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate3d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-20%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-3deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.05&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;99&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate3d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.fire&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.flame&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70%&lt;/span&gt; &lt;span class="m"&gt;70%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--flame-size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.flame.animate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation-iteration-count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation-name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flame-animation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate3d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.75&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation-timing-function&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ease-in&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.flame.animate&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.flame.animate&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here is the HTML:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    Light up
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fire"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flame base"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;🔥&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flame animate"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;🔥&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flame animate"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;🔥&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flame animate"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;🔥&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also look at the output of above code on below codepen:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/shhdharmen/embed/YzNdjBz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I know above doesn't exactly look like actual flame, but I think it's good to start with at-least!&lt;/p&gt;

&lt;p&gt;Let me know your thoughts and feedbacks in the comments section.&lt;/p&gt;

&lt;p&gt;Happy Coding!!!&lt;/p&gt;

&lt;p&gt;🌲 🌞 😊&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>animation</category>
      <category>emoji</category>
    </item>
    <item>
      <title>Calendar Management API for your next project </title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Fri, 23 Apr 2021 17:19:43 +0000</pubDate>
      <link>https://dev.to/surajondev/calendar-management-api-for-your-next-project-6l</link>
      <guid>https://dev.to/surajondev/calendar-management-api-for-your-next-project-6l</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;In this hectic world when we want to do a lot of things but we have only 24 hours a day, it becomes crucial to maximize productivity and manage time efficiently.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---VcgCs7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhq13lfl778inr0clx95.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---VcgCs7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhq13lfl778inr0clx95.gif" alt="giphy (4)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://giphy.com/gifs/animation-time-2d-3oz8xKaR836UJOYeOc"&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's hard to manage time on your own completely and it is not a trivial thing to do. But using a calendar manager makes a huge difference. Today we are going to look into Spruwing's time management API and review their API for building custom solutions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-spurwings-appointment-scheduler"&gt;
  &lt;/a&gt;
  What is &lt;a href="https://www.spurwing.io/"&gt;Spurwing's Appointment Scheduler&lt;/a&gt;?
&lt;/h2&gt;

&lt;p&gt;Spurwing is in the business of helping companies reduce their time, cost, and related resources when it comes to time management and scheduling efficiency. Their API is very flexible and allows us to design, develop and release production-ready tools and solutions for your business or project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zGjDx-Fd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukgtuibp4o7js1weyjoq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zGjDx-Fd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukgtuibp4o7js1weyjoq.png" alt="Spurwing's Appointment Scheduler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use Spurwing’s resources and API to build scheduling and time management solutions for any industry, from healthcare to construction, supply chain, transportation, aviation, and more. Building your own scheduling system from scratch is inefficient and error-prone, it’s not a good thing to reinvent the wheel, because these are already taken care of: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Identifying Overlapping Slots&lt;/li&gt;
&lt;li&gt;Availability management&lt;/li&gt;
&lt;li&gt;Time zones and daylight savings&lt;/li&gt;
&lt;li&gt;Organizational access levels&lt;/li&gt;
&lt;li&gt;Privacy, security, and HIPAA compliance&lt;/li&gt;
&lt;li&gt;Two-way calendar syncing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many exciting things about Spurwing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-i-like-spurwings-calendar-management-api"&gt;
  &lt;/a&gt;
  Why I like Spurwing's Calendar Management API?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you work in a team with people from different countries and timezone, it will consider timezone as a parameter to match all the members of the team.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It becomes hectic when you have multiple calendars, so Spurwing will integrate with multiple calendars such as Google, Outlook, and Apple to build a single calendar centralized calendar system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are other calendar management APIs but they don't have a lot of free resources and/or developer flexibility. Spurwing on the contrary is an advanced calendar management API with a lot of features and a free marketplace.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It sends notifications on my behalf to others about appointments, meetings, and booking confirmation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They have open source widgets that we can put into our website so users can book appointments.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are a lot of features, you can check more on &lt;a href="https://www.spurwing.io/"&gt;Spurwing&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h2&gt;

&lt;p&gt;Spurwing's REST API makes appointments scheduling child’s play.&lt;/p&gt;

&lt;p&gt;Below are several wrappers for Spurwint’s API in different programming languages:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-library"&gt;
  &lt;/a&gt;
  JavaScript Library
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Spurwing&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;your provider id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;allApps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get_appointment_types&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;GitHub: &lt;a href="https://github.com/Spurwing/Spurwing-API-Javascript-Library"&gt;Spurwing-API-Javascript-Library&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nodejs-library"&gt;
  &lt;/a&gt;
  NodeJS Library
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
const Spurwing = require('spurwing')

const PID = 'your_provider_id';
const KEY = 'your_api_key';

let sp = new Spurwing();

let allApps = await sp.list_appointments(KEY, 1000, 0, PID)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;GitHub: &lt;a href="https://github.com/Spurwing/Spurwing-API-NodeJS-Library"&gt;Spurwing-API-NodeJS-Library&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-widget"&gt;
  &lt;/a&gt;
  React Widget
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--60zsNOej--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggikb9g0juz9zu27ku54.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--60zsNOej--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggikb9g0juz9zu27ku54.png" alt="React Widget "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub: &lt;a href="https://dev.to/spurwing/powerful-calendar-management-api-for-your-web-projects-jba"&gt;Spurwing-ReactJS-widget&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#python-library"&gt;
  &lt;/a&gt;
  Python Library
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;spurwing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt;

&lt;span class="n"&gt;PID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'your_provider_id'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'your_api_key'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_appointments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;GitHub: &lt;a href="https://github.com/Spurwing/Spurwing-API-Python-Library/"&gt;Spurwing-API-Python-Library&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;

&lt;p&gt;There are many things to do with Spurwing. I hope you will try &lt;a href="https://www.spurwing.io/"&gt;Spurwing's API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank You for reading the blog post.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>watercooler</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Create a custom scrollbar with CSS - Easy CSS Scrollbar Tutorial</title>
      <author>Renaissance Engineer</author>
      <pubDate>Fri, 23 Apr 2021 17:06:06 +0000</pubDate>
      <link>https://dev.to/renaissanceengineer/create-a-custom-scrollbar-with-css-easy-css-scrollbar-tutorial-4ag2</link>
      <guid>https://dev.to/renaissanceengineer/create-a-custom-scrollbar-with-css-easy-css-scrollbar-tutorial-4ag2</guid>
      <description>&lt;p&gt;In this video tutorial you will learn how to use CSS to create a custom scrollbar for your website or app.&lt;/p&gt;

&lt;p&gt;I will be going over the basic CSS properties available and create the following scrollbar styles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dark Theme design&lt;/li&gt;
&lt;li&gt;Minimalist&lt;/li&gt;
&lt;li&gt;Patterned&lt;/li&gt;
&lt;li&gt;"Animated" Scrollbar effect&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Gp6c9lJgPUI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Funny Web Dev/Software Dev memes!!!</title>
      <author>ManuTheCoder</author>
      <pubDate>Fri, 23 Apr 2021 17:05:46 +0000</pubDate>
      <link>https://dev.to/manuthecoder/funny-web-dev-software-dev-memes-4hhf</link>
      <guid>https://dev.to/manuthecoder/funny-web-dev-software-dev-memes-4hhf</guid>
      <description>&lt;p&gt;LOL, each of these cracked me up. 🤣🤣🤣&lt;/p&gt;


&lt;p&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p3bQ0sup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/236x/a0/93/65/a09365f6def8d90139deeba12b4b6253.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p3bQ0sup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/236x/a0/93/65/a09365f6def8d90139deeba12b4b6253.jpg"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uQxpXbU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://inteng-storage.s3.amazonaws.com/img/iea/yrwQvLJbON/sizes/programmer-memes_md.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uQxpXbU5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://inteng-storage.s3.amazonaws.com/img/iea/yrwQvLJbON/sizes/programmer-memes_md.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sjz3Tp8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.testbytes.net/wp-content/uploads/2019/06/Untitled-55-300x269.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sjz3Tp8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.testbytes.net/wp-content/uploads/2019/06/Untitled-55-300x269.png" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pc-MOeK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images7.memedroid.com/images/UPLOADED366/5fad546bbabd3.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pc-MOeK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images7.memedroid.com/images/UPLOADED366/5fad546bbabd3.jpeg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4hobX7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/m41loixjno811.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4hobX7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/m41loixjno811.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B8ZjQZnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/736x/7d/01/3e/7d013ebff22587a085842154eff082e9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8ZjQZnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/736x/7d/01/3e/7d013ebff22587a085842154eff082e9.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GHfUnHhg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/originals/17/12/45/17124565fa09322c38c59d87a03cc2a0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GHfUnHhg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/originals/17/12/45/17124565fa09322c38c59d87a03cc2a0.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Pd5NPvn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/op96es9026wy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Pd5NPvn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/op96es9026wy.png" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
^ This one's one of my favorites&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fkcRNn3g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/s2n41qn1wuu11.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fkcRNn3g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.redd.it/s2n41qn1wuu11.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MjY-9R04--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://iq.opengenus.org/content/images/2020/03/quarantine_opengenus.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MjY-9R04--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://iq.opengenus.org/content/images/2020/03/quarantine_opengenus.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5gkWQcFz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EUhyfScWsAAIAYn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5gkWQcFz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EUhyfScWsAAIAYn.png" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--09WRGhq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qasg8puafqj66mgfr0hl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--09WRGhq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qasg8puafqj66mgfr0hl.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aod8UQ5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/236x/b4/3b/57/b43b57d6fc759e6b26f606858413c88c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aod8UQ5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/236x/b4/3b/57/b43b57d6fc759e6b26f606858413c88c.jpg"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sJG2_5tG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-9gag-fun.9cache.com/photo/abGPYNX_460s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sJG2_5tG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-9gag-fun.9cache.com/photo/abGPYNX_460s.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7doHZ2Pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.semicolonworld.com/uploads/memes/gmOAZ1nNYV.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7doHZ2Pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.semicolonworld.com/uploads/memes/gmOAZ1nNYV.jpg" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_BVYJTEU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/nac35ntlfg831.jpg%3Fauto%3Dwebp%26s%3Deb6f638c77dd43d58fa01244ef47ffc9c2cadf98" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_BVYJTEU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://preview.redd.it/nac35ntlfg831.jpg%3Fauto%3Dwebp%26s%3Deb6f638c77dd43d58fa01244ef47ffc9c2cadf98" width="500px"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NEl4TJFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.chzbgr.com/thumb800/13537797/h77FE3027/codebase-jurassic-park-huge-turd-wrong-database-selected-8388409-rows-affected-hide-the-pain-harold" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NEl4TJFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.chzbgr.com/thumb800/13537797/h77FE3027/codebase-jurassic-park-huge-turd-wrong-database-selected-8388409-rows-affected-hide-the-pain-harold" width="500px"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What's your favorite meme? Let me know in the comments below!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>1 year into coding 🎉. Here are the tips I would go back and give myself</title>
      <author>Kieran Roberts 👋</author>
      <pubDate>Fri, 23 Apr 2021 17:04:54 +0000</pubDate>
      <link>https://dev.to/kieran6roberts/1-year-into-coding-here-are-the-tips-i-would-go-back-and-give-myself-41d2</link>
      <guid>https://dev.to/kieran6roberts/1-year-into-coding-here-are-the-tips-i-would-go-back-and-give-myself-41d2</guid>
      <description>&lt;p&gt;In March 2020 I began my coding journey which means I have now been learning about web-development for 1 full year 🎈! I've learned a lot along the way but there are a few things I would tell myself if I could travel back in time.&lt;/p&gt;

&lt;p&gt;Let's not waste any more time 👏.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#content"&gt;
  &lt;/a&gt;
  Content
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Don't be afraid of joining developer communities&lt;/li&gt;
&lt;li&gt;You can't learn everything so don't try&lt;/li&gt;
&lt;li&gt;Take notes or better yet write a blog&lt;/li&gt;
&lt;li&gt;Become comfortable with Git and command line basics early&lt;/li&gt;
&lt;li&gt;You learn the most when building projects&lt;/li&gt;
&lt;li&gt;Consistency is key&lt;/li&gt;
&lt;li&gt;Have fun&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-dont-be-afraid-of-joining-developer-communities"&gt;
  &lt;/a&gt;
  1.) Don't be afraid of joining developer communities
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oFz_qGRq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925295648/frgDI6Q77.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oFz_qGRq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925295648/frgDI6Q77.png" alt="illustration of cuommunity"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is probably &lt;strong&gt;my number 1 tip&lt;/strong&gt;. It took me around 9 months before I had the confidence to branch out of my own bubble and connect with other developers. I was hesitant about putting myself out there. About putting my work into the open. Thinking I wasn't qualified to share ideas or that I didn't have enough knowledge to teach.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I was completely wrong&lt;/strong&gt;😅&lt;/p&gt;

&lt;p&gt;The developer community is extremely supportive and there are loads of aspiring developers openly sharing their progress with each other. Check out the &lt;a href="https://twitter.com/search?q=%23100DaysOfCode&amp;amp;src=typeahead_click"&gt;#100DaysOfCode&lt;/a&gt; on Twitter for some examples.&lt;/p&gt;

&lt;p&gt;Sharing and learning from other developers is a key part of your progression. It can also be a great source of inspiration for your future work or perhaps a source of networking for you. These are a few of the amazing benefits I can think of 👇.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can learn from other devs in similar positions&lt;/li&gt;
&lt;li&gt;You can learn from more experienced devs &lt;/li&gt;
&lt;li&gt;It can be a great confidence builder&lt;/li&gt;
&lt;li&gt;You can get feedback on your work&lt;/li&gt;
&lt;li&gt;You can network with other devs&lt;/li&gt;
&lt;li&gt;You could make some friends&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and so much more. Just make the jump and I promise it is the best thing you can do for yourself as an aspiring developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-you-cant-learn-everything-so-dont-try"&gt;
  &lt;/a&gt;
  2.) You can't learn everything so don't try
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NXBrKeUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925304481/rpQ3_4LgF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NXBrKeUc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925304481/rpQ3_4LgF.png" alt="illustration of person learning by reading"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a front-end developer I realized that there is always going to be some new shiny tech that becomes &lt;em&gt;the thing&lt;/em&gt;. It is impossible to become a master of everything so don't try.&lt;/p&gt;

&lt;p&gt;Do your best to focus on a few key technologies and try to master them. As a learning front-end developer I was jumping into different CSS frameworks, build tools and more. It really wasn't necessary for someone who is leaning front-end development early on. &lt;/p&gt;

&lt;p&gt;If you get good at regular CSS then applying it to different CSS frameworks becomes easy when there is a good use-case for them. Once your comfortable by all means try out a framework but don't expect to become good with all of them.&lt;/p&gt;

&lt;p&gt;Instead I would now tell myself to focus on the key tech and get good with them before moving on to the shiny stuff. For me as a front-end developer I would focus on the following 👇.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;CSS&lt;/li&gt;
&lt;li&gt;Vanilla JavaScript&lt;/li&gt;
&lt;li&gt;1 JavaScript Framework&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-take-notes-or-better-yet-write-a-blog"&gt;
  &lt;/a&gt;
  3.) Take notes or better yet write a blog
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D940d_T4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925316894/q6Lz4VGOm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D940d_T4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925316894/q6Lz4VGOm.png" alt="illustration of typewriter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I didn't really take many notes while I was learning over the past year. I wish I had now. Recently I found myself trying to explain simple topics out loud and found that I struggled to articulate answers.&lt;/p&gt;

&lt;p&gt;Having some of my own notes to quickly reference would have been extremely useful 🙄.&lt;/p&gt;

&lt;p&gt;Keeping notes as you learn has so many incredible benefits. Writing will help you reinforce the knowledge you gain and can give you a reference for the future. You could also take it a step further and turn your notes into a blog for others to read. &lt;/p&gt;

&lt;p&gt;If you would like to know more about the benefits of blogging while learning web-development then check out my article &lt;a href="https://blog.kieranroberts.dev/why-its-awesome-for-new-developers-to-blog-as-they-learn"&gt;Why it's awesome for new developers to blog as they learn&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-become-comfortable-with-git-amp-command-line-basics-early"&gt;
  &lt;/a&gt;
  4.) Become comfortable with Git &amp;amp; command line basics early
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0HdoHSSO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925326542/Lo0_nHQmT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0HdoHSSO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925326542/Lo0_nHQmT.png" alt="illustration of person working with Git"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even as a front-end developer the command line is something we use on a daily basis. It can be intimidating but even learning some basics can drastically improve your workflow. Things like folder navigation and running executables are valuable skills.&lt;/p&gt;

&lt;p&gt;As well as this I would tell myself to &lt;strong&gt;not be intimidated by version control specifically using Git&lt;/strong&gt;. As I prepare to start applying for my first web-development role I have been diving deeper into Git. It has made me realize how little I actually knew about it and what it can do.&lt;/p&gt;

&lt;p&gt;The reality is that it is a very important skill to know if you plan on working as a developer in the industry. When you become comfortable with the code itself and you start building projects I highly recommend you practice with Git. &lt;/p&gt;

&lt;p&gt;Treat it how you would CSS or JavaScript and you will definitely fell the benefits later on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-you-learn-the-most-when-building-projects"&gt;
  &lt;/a&gt;
  5.) You learn the most when building projects
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--thSg00BY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925335637/-uHAcHkzK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--thSg00BY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925335637/-uHAcHkzK.png" alt="Illustration of person building a brick wall"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Building projects is awesome. That feeling when you host a project you built on the web for others to see and use is hard to beat. I have found that is also the thing that will help you learn the most.&lt;/p&gt;

&lt;p&gt;It is easy to follow tutorials and early on it is a great way to become comfortable with the basics. But at some point it is important to break away and attempt to build your own projects. Start small and if you get stuck then of course use all of the amazing resources we have online to help you. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Google is every developers best friend&lt;/strong&gt; 😃.&lt;/p&gt;

&lt;p&gt;The process of running into problems, googling for solutions and implementing fixes is the iteration that will see you solving your own problems. This is key to becoming a confident developer. Even if the project doesn't turn out how you hoped, &lt;strong&gt;it is better than not trying at all&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The important thing is that you try it yourself first. Look up some simple projects and try to personalize it in some way based on your likes or interests. &lt;/p&gt;

&lt;p&gt;Get building!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-consistency-is-key"&gt;
  &lt;/a&gt;
  6.) Consistency is key
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K7mnej6n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925343419/Ab6tEGSo8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K7mnej6n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925343419/Ab6tEGSo8.png" alt="illustration of person working on computer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Consistency is the key to becoming proficient at most things. If you work at it everyday then you are sure to see some progress. The same is true for coding.&lt;/p&gt;

&lt;p&gt;Unfortunately not everyone can put all of their time into it. We all have commitments. But if you can dedicate a little time everyday then you are on the right track. &lt;/p&gt;

&lt;p&gt;Try to have a specific topic in mind for the session and put all of your focus into it. Could be 30 minutes or it might be a couple of hours. &lt;strong&gt;As long as your focus is on the work for that time the consistency will be key to your development&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-have-fun"&gt;
  &lt;/a&gt;
  7.) Have fun
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AO8ggfPZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925350793/WHYpvKoTP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AO8ggfPZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616925350793/WHYpvKoTP.png" alt="illustration of people celebrating"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sometimes coding can be frustrating. We've all been there. It's easy to get frustrated and feel downbeat when we run into problems. But try to remember why we became developers in the first place. For me at least it is because &lt;strong&gt;It's fun and I love it!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It's sometimes easy to lose sight of this. Now that I have a little more experience I'm getting better at controlling my code frustration and find that I can now walk away leaving it for later when I come up with a better solution. There was a time when I would stress over a problem for hours at a time.&lt;/p&gt;

&lt;p&gt;I now realize that I would become frustrated because I'm passionate about coding and wanting to be as good as I possibly can. I love what I do and I try to keep this in mind which is easy to do &lt;em&gt;most of the time&lt;/em&gt; 🙂.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Those were some of my the tips I would go back in time and tell myself and I think they are great tips for any developers learning their trade. I hope you are able to take something with you and if you did then please tell me about it.&lt;/p&gt;

&lt;p&gt;You can do so &lt;a href="https://twitter.com/Kieran6dev"&gt;@Kieran6dev&lt;/a&gt; where I'm always active or in the comments below.&lt;/p&gt;

&lt;p&gt;If you could go back a year(or to the beginning) and give yourself a piece of advice, what would it be?&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>motivation</category>
    </item>
    <item>
      <title>ReasonML &amp; Rescript in 5 minutes</title>
      <author>Alex Verein</author>
      <pubDate>Fri, 23 Apr 2021 16:46:57 +0000</pubDate>
      <link>https://dev.to/tpom6oh/reasonml-rescript-in-5-minutes-58l6</link>
      <guid>https://dev.to/tpom6oh/reasonml-rescript-in-5-minutes-58l6</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-this-language-about"&gt;
  &lt;/a&gt;
  What is this language about?
&lt;/h3&gt;

&lt;p&gt;It's a functional language that compiles to JavaScript (or to OCaml).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-ml-in-reasonml"&gt;
  &lt;/a&gt;
  What is ML in ReasonML?
&lt;/h3&gt;

&lt;p&gt;Nowadays ML usually stands for Machine Learning, but in the old days there was a programming language called "Meta Language" which is the ancestor of ReasonML, or Reason Meta Language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-rename"&gt;
  &lt;/a&gt;
  Why rename?
&lt;/h3&gt;

&lt;p&gt;ReasonML is compatible with both JS and OCaml, but lately it was mostly used in the JS ecosystem.&lt;br&gt;
Rescript takes JS-related things from Reason and stops being limited by OCaml support.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-are-the-good-things"&gt;
  &lt;/a&gt;
  What are the good things?
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#immutability"&gt;
  &lt;/a&gt;
  Immutability
&lt;/h4&gt;

&lt;p&gt;All references are actually constants. Shadowing is widely used. Standard library functions are non-mutative and produce new instances if any changes are made. There is a workaround to create a mutable reference if needed but deliberate enough to be discouraging.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#piping-and-currying"&gt;
  &lt;/a&gt;
  Piping and currying
&lt;/h4&gt;

&lt;p&gt;Rescript is a functional language with no methods on objects, but you can call and chain functions in a familiar way with piping and currying, like&lt;br&gt;
&lt;code&gt;myList-&amp;gt;List.length&lt;/code&gt; &lt;br&gt;
or &lt;br&gt;
&lt;code&gt;myArray-&amp;gt;Array.map(item =&amp;gt; item * 2)&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#sound-type-system-and-type-inference"&gt;
  &lt;/a&gt;
  Sound type system and type inference
&lt;/h4&gt;

&lt;p&gt;This is probably the main reason to choose rescript. It has strong type system and powerful type inference, so you are rarely required to explicitly define types, but the compiler always knows what the types are.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#no-folder-requirements-and-no-imports"&gt;
  &lt;/a&gt;
  No folder requirements and no imports
&lt;/h4&gt;

&lt;p&gt;This is a case in many languages, but coming from Java I really appreciate this feature. And Javascript developers love the no imports thing!&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#full-support-of-algebraic-data-types"&gt;
  &lt;/a&gt;
  Full support of algebraic data types
&lt;/h4&gt;

&lt;p&gt;It's very easy to describe any domain with the custom types&lt;br&gt;
You can create type aliases like &lt;code&gt;type eventId = string&lt;/code&gt; or complex types like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;type event = {
  id: eventId,
  name: string,
  uniqueName: option&amp;lt;string&amp;gt;,
  description: string,
  properties: list&amp;lt;property&amp;gt;,
  types: list&amp;lt;eventType&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#the-main-construction-in-the-language-is-the-exhaustive-switch-optimized-for-pattern-matching"&gt;
  &lt;/a&gt;
  The main construction in the language is the exhaustive switch optimized for pattern matching
&lt;/h4&gt;

&lt;p&gt;It's accompanied by an empowered kind of enum called variants. There are options of variants with and without duck typing. &lt;a href="https://tinyurl.com/yv4nfpkm"&gt;Better to see it in action&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#simple-syntax"&gt;
  &lt;/a&gt;
  Simple syntax
&lt;/h4&gt;

&lt;p&gt;It's possible to start writing code after just a few hours of learning if you already know another programming language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#relatively-safe-refactoring"&gt;
  &lt;/a&gt;
  Relatively safe refactoring
&lt;/h3&gt;

&lt;p&gt;The combination of a rigid type system and exhaustive switches make the compiler very efficient in finding bugs in the compile time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-not-so-good-things"&gt;
  &lt;/a&gt;
  What are the not so good things?
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#simple-syntax-means-its-verbose"&gt;
  &lt;/a&gt;
  Simple syntax means it's verbose
&lt;/h4&gt;

&lt;p&gt;There is not much syntax sugar, for example to unwrap an optional constant you'd have to write &lt;code&gt;maybeSomething-&amp;gt;Option.map(something -&amp;gt; something-&amp;gt;performOperation)&lt;/code&gt; instead of &lt;code&gt;maybeSomething?.performOperation()&lt;/code&gt; in some other languages.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#you-have-to-define-functions-before-using-them"&gt;
  &lt;/a&gt;
  You have to define functions before using them
&lt;/h4&gt;

&lt;p&gt;Yes, like in good old C.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#you-can-still-have-typerelated-bugs"&gt;
  &lt;/a&gt;
  You can still have type-related bugs
&lt;/h4&gt;

&lt;p&gt;Having a powerful compiler that catches 99% of the type bugs can be too relaxing and it becomes easier to miss that one occasional bug that slips through the compiler checks. 😉&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h3&gt;

&lt;p&gt;We are maintaining a public code style guide for &lt;a href="https://github.com/avohq/reasonml-code-style-guide"&gt;ReasonML&lt;/a&gt;, contributions are very welcome!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>web</category>
      <category>node</category>
    </item>
    <item>
      <title>💬 Chatwoot : Nice open-source customer support tool, chatbot  (Alternative to Intercom)</title>
      <author>Javid Mougamadou</author>
      <pubDate>Fri, 23 Apr 2021 16:46:31 +0000</pubDate>
      <link>https://dev.to/javidjms/chatwoot-nice-open-source-customer-support-tool-chatbot-alternative-to-intercom-4pon</link>
      <guid>https://dev.to/javidjms/chatwoot-nice-open-source-customer-support-tool-chatbot-alternative-to-intercom-4pon</guid>
      <description>&lt;h2&gt;
  &lt;a href="#concepts"&gt;
  &lt;/a&gt;
  Concepts
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/5b6ffa0b767ae3ca18eb4c910e7ffe4f6bd1d24b04207b423f7f28d9586604fc/68747470733a2f2f73332e75732d776573742d322e616d617a6f6e6177732e636f6d2f67682d6173736574732e63686174776f6f742e636f6d2f63686174776f6f742d64617368626f6172642d6173736574732e706e67" class="article-body-image-wrapper"&gt;&lt;img src="https://camo.githubusercontent.com/5b6ffa0b767ae3ca18eb4c910e7ffe4f6bd1d24b04207b423f7f28d9586604fc/68747470733a2f2f73332e75732d776573742d322e616d617a6f6e6177732e636f6d2f67682d6173736574732e63686174776f6f742e636f6d2f63686174776f6f742d64617368626f6172642d6173736574732e706e67" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chatwoot is an open-source customer communication platform that helps companies engage their customers on their website, Facebook page, Twitter, Whatsapp, SMS, email, etc. It is an open-source alternative to Intercom, Zendesk, Salesforce Service Cloud etc. Connect your customer conversation channels and converse with your customers from a single place.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P-A4vVu6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://marketplace.whmcs.com/product/5530/images/screenshots/16568-892-2aa54410738288d1a9d695f641291745.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-A4vVu6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://marketplace.whmcs.com/product/5530/images/screenshots/16568-892-2aa54410738288d1a9d695f641291745.png" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;p&gt;Chatwoot gives an integrated view of conversations happening in different communication channels.&lt;/p&gt;

&lt;p&gt;It supports the following conversation channels:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Website&lt;/strong&gt;: Talk to your customers using our live chat widget and make use of our SDK to identify a user and provide contextual support.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Facebook&lt;/strong&gt;: Connect your Facebook pages and start replying to the direct messages to your page.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Twitter&lt;/strong&gt;: Connect your Twitter profiles and reply to direct messages or the tweets where you are mentioned.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Whatsapp&lt;/strong&gt;: Connect your Whatsapp business account and manage the conversation in Chatwoot&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SMS&lt;/strong&gt;: Connect your Twilio SMS account and reply to the SMS queries in Chatwoot&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;API Channel&lt;/strong&gt;: Build custom communication channels using our API channel.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Email (beta)&lt;/strong&gt;: Forward all your email queries to Chatwoot and view it in our integrated dashboard.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other features include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Multi-brand inboxes&lt;/strong&gt;: Manage multiple brands or pages using a single dashboard.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Private notes&lt;/strong&gt;: Inter team communication is possible using private notes in a conversation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Canned responses (Saved replies)&lt;/strong&gt;: Improve the response rate by adding saved replies for frequently asked questions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Conversation Labels&lt;/strong&gt;: Use conversation labelling to create custom workflows.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Auto assignment&lt;/strong&gt;: Chatwoot intelligently assigns a ticket to the agents who have access to the inbox depending on their availability and load.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Conversation continuity&lt;/strong&gt;: If the user has provided an email address through the chat widget, Chatwoot would send an email to the customer under the agent name so that the user can continue the conversation over the email.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multi-lingual support&lt;/strong&gt;: Chatwoot supports 10+ languages.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Powerful API &amp;amp; Webhooks&lt;/strong&gt;: Extend the capability of the software using Chatwoot’s webhooks and APIs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Integrations&lt;/strong&gt;: Chatwoot natively integrates with Slack right now. Manage your conversations in Slack without logging into the dashboard.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h2&gt;

&lt;p&gt;Detailed documentation is available at &lt;a href="https://www.chatwoot.com/help-center"&gt;www.chatwoot.com/help-center&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation-with-dockercompose"&gt;
  &lt;/a&gt;
  Installation with docker-compose
&lt;/h2&gt;

&lt;p&gt;Here is the guide : &lt;a href="https://www.chatwoot.com/docs/deployment/deploy-chatwoot-with-docker/"&gt;Installation with Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can install it with docker-compose and change the environment variables.&lt;/p&gt;

&lt;p&gt;Here is the docker-compose.yml and the .env .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# docker-compose.yml&lt;/span&gt;
&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3'&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;&amp;amp;base&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;chatwoot/chatwoot:develop&lt;/span&gt;
    &lt;span class="na"&gt;env_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.env&lt;/span&gt; &lt;span class="c1"&gt;## Change this file for customized env variables&lt;/span&gt;
    &lt;span class="na"&gt;stdin_open&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt; &lt;span class="c1"&gt;# docker run -i&lt;/span&gt;
    &lt;span class="na"&gt;tty&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;        &lt;span class="c1"&gt;# docker run -t&lt;/span&gt;

  &lt;span class="na"&gt;rails&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;postgres&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;redis&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;3000:3000&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;NODE_ENV=production&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;RAILS_ENV=production&lt;/span&gt;
    &lt;span class="na"&gt;entrypoint&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;docker/entrypoints/rails.sh&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;bundle'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;exec'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;rails'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;s'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;-p'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3000'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;-b'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;0.0.0.0'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

  &lt;span class="na"&gt;sidekiq&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;postgres&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;redis&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;NODE_ENV=production&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;RAILS_ENV=production&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;bundle'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;exec'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;sidekiq'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;-C'&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;config/sidekiq.yml'&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

  &lt;span class="na"&gt;postgres&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgres:12&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;5432:5432'&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/data/postgres:/var/lib/postgresql/data&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_DB=chatwoot&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_USER=postgres&lt;/span&gt;
      &lt;span class="c1"&gt;# Please provide your own password.&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;POSTGRES_PASSWORD=chatwoot&lt;/span&gt;

  &lt;span class="na"&gt;redis&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;redis:alpine&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;sh"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;-c"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;redis-server&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;--requirepass&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s"&gt;$REDIS_PASSWORD&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;env_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.env&lt;/span&gt; &lt;span class="c1"&gt;## Change this file for customized env variables&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/data/redis:/data&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;6379:6379'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# .env&lt;/span&gt;
&lt;span class="c1"&gt;# Used to verify the integrity of signed cookies. so ensure a secure value is set&lt;/span&gt;
&lt;span class="s"&gt;SECRET_KEY_BASE=replace_with_lengthy_secure_hex&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with the URL you are planning to use for your app&lt;/span&gt;
&lt;span class="s"&gt;FRONTEND_URL=http://0.0.0.0:3000&lt;/span&gt;

&lt;span class="c1"&gt;# If the variable is set, all non-authenticated pages would fallback to the default locale.&lt;/span&gt;
&lt;span class="c1"&gt;# Whenever a new account is created, the default language will be DEFAULT_LOCALE instead of en&lt;/span&gt;
&lt;span class="c1"&gt;# DEFAULT_LOCALE=en&lt;/span&gt;

&lt;span class="c1"&gt;# If you plan to use CDN for your assets, set Asset CDN Host&lt;/span&gt;
&lt;span class="s"&gt;ASSET_CDN_HOST=&lt;/span&gt;

&lt;span class="c1"&gt;# Force all access to the app over SSL, default is set to false&lt;/span&gt;
&lt;span class="s"&gt;FORCE_SSL=false&lt;/span&gt;

&lt;span class="c1"&gt;# This lets you control new sign ups on your chatwoot installation&lt;/span&gt;
&lt;span class="c1"&gt;# true : default option, allows sign ups&lt;/span&gt;
&lt;span class="c1"&gt;# false : disables all the end points related to sign ups&lt;/span&gt;
&lt;span class="c1"&gt;# api_only: disables the UI for signup, but you can create sign ups via the account apis&lt;/span&gt;
&lt;span class="s"&gt;ENABLE_ACCOUNT_SIGNUP=false&lt;/span&gt;

&lt;span class="c1"&gt;# Redis config&lt;/span&gt;
&lt;span class="s"&gt;REDIS_URL=redis://redis:6379&lt;/span&gt;
&lt;span class="c1"&gt;# If you are using docker-compose, set this variable's value to be any string,&lt;/span&gt;
&lt;span class="c1"&gt;# which will be the password for the redis service running inside the docker-compose&lt;/span&gt;
&lt;span class="c1"&gt;# to make it secure&lt;/span&gt;
&lt;span class="s"&gt;REDIS_PASSWORD=chatwoot&lt;/span&gt;
&lt;span class="c1"&gt;# Redis Sentinel can be used by passing list of sentinel host and ports e,g. sentinel_host1:port1,sentinel_host2:port2&lt;/span&gt;
&lt;span class="s"&gt;REDIS_SENTINELS=&lt;/span&gt;
&lt;span class="c1"&gt;# Redis sentinel master name is required when using sentinel, default value is "mymaster".&lt;/span&gt;
&lt;span class="c1"&gt;# You can find list of master using "SENTINEL masters" command&lt;/span&gt;
&lt;span class="s"&gt;REDIS_SENTINEL_MASTER_NAME=&lt;/span&gt;

&lt;span class="c1"&gt;# Postgres Database config variables&lt;/span&gt;
&lt;span class="s"&gt;POSTGRES_HOST=postgres&lt;/span&gt;
&lt;span class="s"&gt;POSTGRES_USERNAME=postgres&lt;/span&gt;
&lt;span class="s"&gt;POSTGRES_PASSWORD=chatwoot&lt;/span&gt;
&lt;span class="s"&gt;RAILS_ENV=development&lt;/span&gt;
&lt;span class="s"&gt;RAILS_MAX_THREADS=5&lt;/span&gt;

&lt;span class="c1"&gt;# The email from which all outgoing emails are sent&lt;/span&gt;
&lt;span class="c1"&gt;# could user either  `email@yourdomain.com` or `BrandName &amp;lt;email@yourdomain.com&amp;gt;`&lt;/span&gt;
&lt;span class="s"&gt;MAILER_SENDER_EMAIL=Chatwoot &amp;lt;accounts@chatwoot.com&amp;gt;&lt;/span&gt;


&lt;span class="c1"&gt;#SMTP domain key is set up for HELO checking&lt;/span&gt;
&lt;span class="s"&gt;SMTP_DOMAIN=chatwoot.com&lt;/span&gt;
&lt;span class="c1"&gt;# the default value is set "mailhog" and is used by docker-compose for development environments,&lt;/span&gt;
&lt;span class="c1"&gt;# Set the value as "localhost" or your SMTP address in other environments&lt;/span&gt;
&lt;span class="s"&gt;SMTP_ADDRESS=mailhog&lt;/span&gt;
&lt;span class="s"&gt;SMTP_PORT=1025&lt;/span&gt;
&lt;span class="s"&gt;SMTP_USERNAME=&lt;/span&gt;
&lt;span class="s"&gt;SMTP_PASSWORD=&lt;/span&gt;
&lt;span class="c1"&gt;# plain,login,cram_md5&lt;/span&gt;
&lt;span class="s"&gt;SMTP_AUTHENTICATION=&lt;/span&gt;
&lt;span class="s"&gt;SMTP_ENABLE_STARTTLS_AUTO=true&lt;/span&gt;
&lt;span class="c1"&gt;# Can be: 'none', 'peer', 'client_once', 'fail_if_no_peer_cert', see http://api.rubyonrails.org/classes/ActionMailer/Base.html&lt;/span&gt;
&lt;span class="s"&gt;SMTP_OPENSSL_VERIFY_MODE=peer&lt;/span&gt;

&lt;span class="c1"&gt;# Mail Incoming&lt;/span&gt;
&lt;span class="c1"&gt;# This is the domain set for the reply emails when conversation continuity is enabled&lt;/span&gt;
&lt;span class="s"&gt;MAILER_INBOUND_EMAIL_DOMAIN=&lt;/span&gt;
&lt;span class="c1"&gt;# Set this to appropriate ingress channel with regards to incoming emails&lt;/span&gt;
&lt;span class="c1"&gt;# Possible values are :&lt;/span&gt;
&lt;span class="c1"&gt;# relay for Exim, Postfix, Qmail&lt;/span&gt;
&lt;span class="c1"&gt;# mailgun for Mailgun&lt;/span&gt;
&lt;span class="c1"&gt;# mandrill for Mandrill&lt;/span&gt;
&lt;span class="c1"&gt;# postmark for Postmark&lt;/span&gt;
&lt;span class="c1"&gt;# sendgrid for Sendgrid&lt;/span&gt;
&lt;span class="s"&gt;RAILS_INBOUND_EMAIL_SERVICE=&lt;/span&gt;
&lt;span class="c1"&gt;# Use one of the following based on the email ingress service&lt;/span&gt;
&lt;span class="c1"&gt;# Ref: https://edgeguides.rubyonrails.org/action_mailbox_basics.html&lt;/span&gt;
&lt;span class="s"&gt;RAILS_INBOUND_EMAIL_PASSWORD=&lt;/span&gt;
&lt;span class="s"&gt;MAILGUN_INGRESS_SIGNING_KEY=&lt;/span&gt;
&lt;span class="s"&gt;MANDRILL_INGRESS_API_KEY=&lt;/span&gt;

&lt;span class="c1"&gt;# Storage&lt;/span&gt;
&lt;span class="s"&gt;ACTIVE_STORAGE_SERVICE=local&lt;/span&gt;

&lt;span class="c1"&gt;# Amazon S3&lt;/span&gt;
&lt;span class="c1"&gt;# documentation: https://www.chatwoot.com/docs/configuring-s3-bucket-as-cloud-storage&lt;/span&gt;
&lt;span class="s"&gt;S3_BUCKET_NAME=&lt;/span&gt;
&lt;span class="s"&gt;AWS_ACCESS_KEY_ID=&lt;/span&gt;
&lt;span class="s"&gt;AWS_SECRET_ACCESS_KEY=&lt;/span&gt;
&lt;span class="s"&gt;AWS_REGION=&lt;/span&gt;

&lt;span class="c1"&gt;# Sentry&lt;/span&gt;
&lt;span class="s"&gt;SENTRY_DSN=&lt;/span&gt;

&lt;span class="c1"&gt;# Log settings&lt;/span&gt;
&lt;span class="c1"&gt;# Disable if you want to write logs to a file&lt;/span&gt;
&lt;span class="s"&gt;RAILS_LOG_TO_STDOUT=true&lt;/span&gt;
&lt;span class="s"&gt;LOG_LEVEL=info&lt;/span&gt;
&lt;span class="s"&gt;LOG_SIZE=500&lt;/span&gt;

&lt;span class="c1"&gt;### This environment variables are only required if you are setting up social media channels&lt;/span&gt;

&lt;span class="c1"&gt;# Facebook&lt;/span&gt;
&lt;span class="c1"&gt;# documentation: https://www.chatwoot.com/docs/facebook-setup&lt;/span&gt;
&lt;span class="s"&gt;FB_VERIFY_TOKEN=&lt;/span&gt;
&lt;span class="s"&gt;FB_APP_SECRET=&lt;/span&gt;
&lt;span class="s"&gt;FB_APP_ID=&lt;/span&gt;

&lt;span class="c1"&gt;# Twitter&lt;/span&gt;
&lt;span class="c1"&gt;# documentation: https://www.chatwoot.com/docs/twitter-app-setup&lt;/span&gt;
&lt;span class="s"&gt;TWITTER_APP_ID=&lt;/span&gt;
&lt;span class="s"&gt;TWITTER_CONSUMER_KEY=&lt;/span&gt;
&lt;span class="s"&gt;TWITTER_CONSUMER_SECRET=&lt;/span&gt;
&lt;span class="s"&gt;TWITTER_ENVIRONMENT=&lt;/span&gt;

&lt;span class="c1"&gt;#slack integration&lt;/span&gt;
&lt;span class="s"&gt;SLACK_CLIENT_ID=&lt;/span&gt;
&lt;span class="s"&gt;SLACK_CLIENT_SECRET=&lt;/span&gt;

&lt;span class="c1"&gt;### Change this env variable only if you are using a custom build mobile app&lt;/span&gt;
&lt;span class="c1"&gt;## Mobile app env variables&lt;/span&gt;
&lt;span class="s"&gt;IOS_APP_ID=6C953F3RX2.com.chatwoot.app&lt;/span&gt;


&lt;span class="c1"&gt;### Smart App Banner&lt;/span&gt;
&lt;span class="c1"&gt;# https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/PromotingAppswithAppBanners/PromotingAppswithAppBanners.html&lt;/span&gt;
&lt;span class="c1"&gt;# You can find your app-id in https://itunesconnect.apple.com&lt;/span&gt;
&lt;span class="c1"&gt;#IOS_APP_IDENTIFIER=1495796682&lt;/span&gt;

&lt;span class="c1"&gt;## Push Notification&lt;/span&gt;
&lt;span class="c1"&gt;## generate a new key value here : https://d3v.one/vapid-key-generator/&lt;/span&gt;
&lt;span class="c1"&gt;# VAPID_PUBLIC_KEY=&lt;/span&gt;
&lt;span class="c1"&gt;# VAPID_PRIVATE_KEY=&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# for mobile apps&lt;/span&gt;
&lt;span class="c1"&gt;# FCM_SERVER_KEY=&lt;/span&gt;

&lt;span class="c1"&gt;## Bot Customizations&lt;/span&gt;
&lt;span class="s"&gt;USE_INBOX_AVATAR_FOR_BOT=true&lt;/span&gt;



&lt;span class="c1"&gt;## IP look up configuration&lt;/span&gt;
&lt;span class="c1"&gt;## ref https://github.com/alexreisner/geocoder/blob/master/README_API_GUIDE.md&lt;/span&gt;
&lt;span class="c1"&gt;## works only on accounts with ip look up feature enabled&lt;/span&gt;
&lt;span class="c1"&gt;# IP_LOOKUP_SERVICE=geoip2&lt;/span&gt;
&lt;span class="c1"&gt;# maxmindb api key to use geoip2 service&lt;/span&gt;
&lt;span class="c1"&gt;# IP_LOOKUP_API_KEY=&lt;/span&gt;

&lt;span class="c1"&gt;## Development Only Config&lt;/span&gt;
&lt;span class="c1"&gt;# if you want to use letter_opener for local emails&lt;/span&gt;
&lt;span class="c1"&gt;# LETTER_OPENER=true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Prepare the database by running the migrations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose run &lt;span class="nt"&gt;--rm&lt;/span&gt; rails bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rails db:chatwoot_prepare
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Get the service up and running.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose up &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your Chatwoot installation should be accessible with &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.chatwoot.com/"&gt;https://www.chatwoot.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/chatwoot/chatwoot"&gt;https://github.com/chatwoot/chatwoot&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gDTTisq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/73185/107608463-129ff600-6c62-11eb-84f4-1dc1ebdbf1de.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gDTTisq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/73185/107608463-129ff600-6c62-11eb-84f4-1dc1ebdbf1de.gif" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>opensource</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Popular string functions in MySQL - CONCAT and SUBSTRING</title>
      <author>Jo</author>
      <pubDate>Fri, 23 Apr 2021 16:37:06 +0000</pubDate>
      <link>https://dev.to/jo_josephs/popular-string-functions-in-mysql-concat-and-substring-h1o</link>
      <guid>https://dev.to/jo_josephs/popular-string-functions-in-mysql-concat-and-substring-h1o</guid>
      <description>&lt;p&gt;There are some very helpful and fun string functions in MySQl and I've decided to review them here as I go through Colt Steele's MySQL Udemy course. This article will serve as my notes for that section of the course. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#concat"&gt;
  &lt;/a&gt;
  CONCAT
&lt;/h3&gt;

&lt;p&gt;The CONCAT function concatenates two or more value together. This is helpful for formatting data that is useful to the person reading the output.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select concat(author_fname, " ", author_lname, " - ", title) AS Author
from books;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tAUQA4T_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03l729h9jiflx3ehxmjp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tAUQA4T_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03l729h9jiflx3ehxmjp.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A variation of the CONCAT function is the CONCAT_WS function, which stands for CONCAT &lt;strong&gt;with separator&lt;/strong&gt;. This is useful if you're separating multiple pieces of data with the same symbol between them. The first argument in the CONCAT_WS function is the operator used to separate all the the other individual arguments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select concat_ws(' - ', author_fname, author_lname, title) 
AS Author
from books;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KDdglpd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilodx0xxcrfnlv6zje79.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KDdglpd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilodx0xxcrfnlv6zje79.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see from the example above, there is now a dash between the author's first name, last name, and book title.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#substring"&gt;
  &lt;/a&gt;
  SUBSTRING
&lt;/h3&gt;

&lt;p&gt;Another helpful function is substring. This function is useful for extrapolating data when you only need a part of the string. This function is also useful in combination with other functions to make even more powerful queries. The basic makeup of a simple substring query includes the string that data needs to be extrapolated from, and the location of the data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select substring('Jowayne', 1,2)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result of the example above would give me "Jo", as the Jowayne is the string to be analyzed, the 1 is location where I need the extrapolation to begin, and 2 is where I need it to end. &lt;br&gt;
You can also choose to just use one number(the starting index) and the function will automatically start at that number and go till the end, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select substring('Jowayne',3)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result of this would be &lt;strong&gt;"wayne"&lt;/strong&gt; since I started at 3.&lt;br&gt;
The substring function also accommodates negative numbers. The substring would begin at the end of the string so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select substring('Jowayne',3)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result would be &lt;strong&gt;'yne'&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;And as I referenced before, you can use substring with other string functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select concat(substring(title, 1, 10),'...') from books;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zq1wIq2g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3i3s94sbk1qt5uyisr9n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zq1wIq2g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3i3s94sbk1qt5uyisr9n.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it for this post! Thanks for reading :)&lt;/p&gt;

</description>
      <category>sql</category>
      <category>mysql</category>
    </item>
    <item>
      <title>Functional Programming : Functions</title>
      <author>Pratik sharma</author>
      <pubDate>Fri, 23 Apr 2021 16:23:21 +0000</pubDate>
      <link>https://dev.to/pratiksharm/functional-programming-functions-4m9c</link>
      <guid>https://dev.to/pratiksharm/functional-programming-functions-4m9c</guid>
      <description>&lt;h3&gt;
  &lt;a href="#main-ideas-of-functional-programming"&gt;
  &lt;/a&gt;
  Main Ideas of Functional Programming.
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Function - &lt;code&gt;This article&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Compositions with Functions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Currying&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Catamorphism  &lt;code&gt;Collapsable&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Applicative      &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Monad         &lt;code&gt;Chainable&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Monoid          &lt;code&gt;Aggregatable&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note:- In the following article, only function concept of functional Programming is introduced. I will be writing a whole series on functional programming from concept to application. Personally i think functional programming is highly useful on the frontend side of the web-development. &lt;/p&gt;

&lt;p&gt;With TypeScript, React introducing hooks (which are highly loved by me), Graphql which has a typed Schema for requesting APIs, Testing libraries like Jest. &lt;/p&gt;

&lt;p&gt;All of this, which are  functional Programming based like declarative (&lt;strong&gt;react&lt;/strong&gt;) , &lt;br&gt;
algebraic data typed (&lt;strong&gt;graphql schema&lt;/strong&gt;). I think i should have learnt functional Programming before React. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-we-dont-do-in-fp"&gt;
  &lt;/a&gt;
  What we don't do in FP?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qzP8aPse--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619180009872/Kd_7W-n5x.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qzP8aPse--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619180009872/Kd_7W-n5x.jpeg" alt="We don't do that here.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;No Impure Functions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No shared State&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No Mutable data&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No Side Effects&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#in-the-practical-setting"&gt;
  &lt;/a&gt;
  In the Practical setting
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Loops =&amp;gt; do...while  for   for...of   for...in&lt;/li&gt;
&lt;li&gt;Variable declarations with var or let&lt;/li&gt;
&lt;li&gt;Void functions&lt;/li&gt;
&lt;li&gt;Object mutation (for example: o.x = 5;)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Array mutator methods =&amp;gt; copyWithin, fill, pop, push, reverse, shift, sort, splice, unshift&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Map mutator methods  =&amp;gt; clear, delete, set, Set mutator methods, add, clear, delete&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#an-analogy-to-explain-fp"&gt;
  &lt;/a&gt;
  An Analogy to explain FP
&lt;/h3&gt;

&lt;p&gt;In childhood, We all have played with legos or building-block of some kind. We can make a lot of things with  combining these lego pieces, depending upon what we are making. May be you want to make star war ship or iron man mask. The building block i.e. lego are used in some combinations to make a desired model. If a lego piece gets broken you can replace it with a new piece. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Functions are the legos of Functional Programming. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Functional Programming Paradigm has a lot of mathematical terms like monad, function of function or higher order function. Whereas, OOP has a lot of biological terms like polymorphism, inheritance. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#give-me-a-definition"&gt;
  &lt;/a&gt;
  Give me a definition.
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Functional programming (often abbreviated FP) is the process of building software by composing pure functions, avoiding shared state, mutable data, and side-effects. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Functional programming is declarative rather than &lt;code&gt;imperative&lt;/code&gt;, and application state flows through pure functions. Contrast with object oriented programming, where application state is usually shared and colocated with methods in objects.&lt;/p&gt;

&lt;p&gt;Functional code tends to be &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; concise&lt;/li&gt;
&lt;li&gt; predictable&lt;/li&gt;
&lt;li&gt; easier to test &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;than imperative or object oriented code — but if you’re unfamiliar with it and the common patterns associated with it, functional code can also seem a lot more dense, and the related literature can be impenetrable to newcomers. Not mutating the data. Immutability is a core of functional programming.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-a-pure-function"&gt;
  &lt;/a&gt;
  What is a Pure Function?
&lt;/h4&gt;

&lt;p&gt;A pure function is a function which:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Given the same input, will always return the same output.&lt;/li&gt;
&lt;li&gt;Produces no side effects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hello-world-of-fp"&gt;
  &lt;/a&gt;
  Hello World Of FP.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const hi = name =&amp;gt; `Hi ${name}`

const greeting = hi; 

greeting("Stranger")   //       'Hi Stranger'

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#a-simple-composition-example"&gt;
  &lt;/a&gt;
  A simple composition example
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const square = x =&amp;gt; x*x;

const addition = x, y =&amp;gt; x + y;

const SquareRoot = x =&amp;gt; Math.sqrt(x);


const EuclideanDistance = x, y =&amp;gt; SquareRoot(addition(square(x), square(y)));


console.log(EuclideanDistance(3,4));

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#uppercase-the-first-letter-of-a-string"&gt;
  &lt;/a&gt;
  UpperCase the first letter of a String
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function UpperCase([first, ...rest]){
    return first.toUpperCase() + rest.join('')
}

console.log(UpperCase('dan'))


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;** if you have any suggestions, please do tell me... ** &lt;/p&gt;

</description>
      <category>functional</category>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>5 Templating Languages To Use Instead of HTML</title>
      <author>Nihar dev</author>
      <pubDate>Fri, 23 Apr 2021 16:21:28 +0000</pubDate>
      <link>https://dev.to/nihardev3/5-templating-languages-to-use-instead-of-html-14f7</link>
      <guid>https://dev.to/nihardev3/5-templating-languages-to-use-instead-of-html-14f7</guid>
      <description>&lt;p&gt;Pure HTML files are slowly getting a tad outdated and are not the best choice for creating brand new websites. If you’re working with a framework such as Express.js, you get the option to use a templating language. This templating language makes sure you can split your code into reusable components for a better developer experience.&lt;/p&gt;

&lt;p&gt;There are quite a few templating languages. Some are very similar to HTML, while others are completely unique.&lt;/p&gt;

&lt;p&gt;Using templating languages is a great way of connecting the server side to the frontend of your site. Certain frameworks make it extremely easy to use and handle all the parsing for you.&lt;/p&gt;

&lt;p&gt;Here are some templating languages that you can use, with little code snippets to show you how they work and what makes them unique.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#ejs"&gt;
  &lt;/a&gt;
  EJS
&lt;/h1&gt;

&lt;p&gt;Embedded JavaScript, or, EJS, is a templating language that lets you generate HTML with plain JavaScript in between. It is a very simple language and is a good choice for students if they ever need to choose a templating language.&lt;/p&gt;

&lt;p&gt;It uses &amp;lt;% %&amp;gt; with JavaScript in between to create dynamic websites and webpages. This isn’t the best choice for complex applications but will work for most projects.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#handlebars"&gt;
  &lt;/a&gt;
  Handlebars
&lt;/h1&gt;

&lt;p&gt;Handlebars is another very simple templating language without a lot of unique features. It is, however, a great way to create small projects, and I’ve actually used this one in a project once.&lt;/p&gt;

&lt;p&gt;The syntax is easy to read and use. The language features what they call helpers, which are functions you can use with the syntax with the hashtags. These can be a loop, conditionals, or something you can create yourself. So&lt;br&gt;
this language does offer customization if you need it.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/5-templating-languages-to-use-instead.html"&gt;https://cmsinstallation.blogspot.com/2021/04/5-templating-languages-to-use-instead.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>programming</category>
      <category>design</category>
      <category>webdev</category>
    </item>
    <item>
      <title>3 Smart Things Worth Spending Your Money on as a Developer</title>
      <author>Nihar dev</author>
      <pubDate>Fri, 23 Apr 2021 16:16:45 +0000</pubDate>
      <link>https://dev.to/nihardev3/3-smart-things-worth-spending-your-money-on-as-a-developer-2anh</link>
      <guid>https://dev.to/nihardev3/3-smart-things-worth-spending-your-money-on-as-a-developer-2anh</guid>
      <description>&lt;p&gt;Have you ever thought about how much money you wasted on useless stuff trying to learn to code?&lt;/p&gt;

&lt;p&gt;We live in a society where people want us to buy their products. They show up in our socials’ homes screaming: “buy it!”. It’s so easy, for beginners, in particular, to get caught up in a spending loop buying resources they don’t really need.&lt;/p&gt;

&lt;p&gt;I’ve found myself in this position so many times. My Udemy account is full of courses I never even opened. I’ve bought so many coding books I’ve never even read.&lt;/p&gt;

&lt;p&gt;It just feels there is always more to know, and unless I buy 100 JavaScript courses, I won’t fill this gap.&lt;/p&gt;

&lt;p&gt;So is there a solution to all of this?&lt;/p&gt;

&lt;p&gt;My answer is: yes. You just need to set your priorities straight for your money and ask yourself a couple of questions before buying anything.&lt;/p&gt;

&lt;p&gt;Let me show you how you can deal with this.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#invest-in-your-health"&gt;
  &lt;/a&gt;
  Invest in Your Health
&lt;/h1&gt;

&lt;p&gt;This is the first thing to prioritize every day of your life. You have only one body, and it deserves to be treated with respect. A couple of years ago, I was the total opposite of who I am now in dealing with my health.&lt;/p&gt;

&lt;p&gt;I would eat junk food every day, not work out, have a disordered sleep schedule. And guess what? The results of that behavior quickly came back and slapped me in the face.&lt;/p&gt;

&lt;p&gt;I started to accuse many back pains due to my work as a developer and general inactivity, I gained weight, and I always felt tired.&lt;/p&gt;

&lt;p&gt;Prioritize your health every day, and always do acts of kindness toward your body. So if you think that investing some money into your health is not a good investment, please think twice.&lt;/p&gt;

&lt;p&gt;Invest in a gym subscription or some tools to work out. Invest in a treatment to feel better. Gift yourself a massage once in a while. Buy an excellent chair for your coding times, drop a few bucks in a blue-lights pair of glasses.&lt;/p&gt;

&lt;p&gt;And remember, mental health is even more important, so buy books that you enjoy, spend time with your loved ones, or with a professional counselor if you have issues to address.&lt;br&gt;
Invest in a Few Learning Resources&lt;br&gt;
Of course, as a developer, you want to learn and grow technically. So it’s pretty evident that you should invest in proper learning resources.&lt;/p&gt;

&lt;p&gt;But please, be extra careful on this point because new coding courses, resources, and ebooks are popping up every day in this field. You can’t possibly buy every single thing. You would end up consuming none of the stuff you bought, plus you would have a terrible headache.&lt;/p&gt;

&lt;p&gt;You don’t need 1000 courses on learning JavaScript, 100 books to master React, and a full library of “ace the coding interview” resources.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/3-smart-things-worth-spending-your.html"&gt;https://cmsinstallation.blogspot.com/2021/04/3-smart-things-worth-spending-your.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>php</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>Free APIs That Nobody Is Talking About
</title>
      <author>Nihar dev</author>
      <pubDate>Fri, 23 Apr 2021 16:14:19 +0000</pubDate>
      <link>https://dev.to/nihardev3/free-apis-that-nobody-is-talking-about-3me1</link>
      <guid>https://dev.to/nihardev3/free-apis-that-nobody-is-talking-about-3me1</guid>
      <description>&lt;p&gt;Nothing excites me more than finding an out of the ordinary API.Many times we just want to focus on the frontend but also need interesting, dynamic data to display.This is where public APIs come into play. API is an acronym for Application Programming Interface.The core benefit of using it is that it allows one program to interact with other programs.Using public APIs allows you to focus on the frontend and things that matter without worrying so much about the database and the backend.Below are 7 less-talked about public and free APIs.&lt;/p&gt;

&lt;p&gt;Evil Insult Generator&lt;br&gt;
How many times have you tried to insult your best friend? Now you have got a helping hand!&lt;/p&gt;

&lt;p&gt;As the API name suggests, the goal is to offer some of the evilest insults.&lt;/p&gt;

&lt;p&gt;You can create an app centered around this API or combine this API with other excellent APIs provided below like implementing the generated insults in meme templates.&lt;/p&gt;

&lt;p&gt;The API is extremely simple to use. You just need to visit a URL and you get the desired JSON output without even signing up for a key.&lt;/p&gt;

&lt;p&gt;Movies and TV API&lt;br&gt;
TMDb is a famous API, but do you know there are other API that provides insights from specific shows and movies?&lt;/p&gt;

&lt;p&gt;Below are some of the APIs you can use to develop apps featuring your favorite show:&lt;br&gt;
Breaking Bad API&lt;br&gt;
API of Ice And Fire&lt;br&gt;
Harry Potter API&lt;br&gt;
YouTube API (for embedding YouTube functionalities)&lt;br&gt;
The Lord of the Rings API&lt;/p&gt;

&lt;p&gt;Like the API above, you can get started with some of the APIs without even signing up for a key.&lt;/p&gt;

&lt;p&gt;Not only this, using non-copyright images, you can truly create a great fan app for your beloved shows.&lt;/p&gt;

&lt;p&gt;Below is a sample output from the Breaking Bad API which you can get here.&lt;/p&gt;

&lt;p&gt;It doesn’t require a key however has a rate limit of 10,000 requests per day.&lt;/p&gt;

&lt;p&gt;{&lt;br&gt;
[&lt;br&gt;
{&lt;br&gt;
"quote_id":1,&lt;br&gt;
"quote":"I am not in danger, Skyler. I am the danger!",&lt;br&gt;
"author":"Walter White",&lt;br&gt;
"series":"Breaking Bad"&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
"quote_id":2,&lt;br&gt;
"quote":"Stay out of my territory.",&lt;br&gt;
"author":"Walter White",&lt;br&gt;
"series":"Breaking Bad"&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
"quote_id":3,&lt;br&gt;
"quote":"IFT",&lt;br&gt;
"author":"Skyler White",&lt;br&gt;
"series":"Breaking Bad"&lt;br&gt;
}&lt;br&gt;
.....&lt;br&gt;
]&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;It returns a JSON containing an array of objects with quotes, the author of the quotes, and an ID.&lt;/p&gt;

&lt;p&gt;You can mix these dedicated APIs with YouTube API to create an ultimate app for the fans of these shows.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/7-free-apis-that-nobody-is-talking-about.html"&gt;https://cmsinstallation.blogspot.com/2021/04/7-free-apis-that-nobody-is-talking-about.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>php</category>
      <category>programming</category>
      <category>design</category>
    </item>
  </channel>
</rss>
