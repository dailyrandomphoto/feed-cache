<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Chat inside of Terminal with NodeJS</title>
      <author>Arsenii Gorushkin</author>
      <pubDate>Tue, 06 Jul 2021 06:14:58 +0000</pubDate>
      <link>https://dev.to/agorushkin/chat-inside-of-terminal-with-nodejs-2dbk</link>
      <guid>https://dev.to/agorushkin/chat-inside-of-terminal-with-nodejs-2dbk</guid>
      <description>&lt;p&gt;Hello Everyone! It's my first ever tutorial, so please don't be too harsh.&lt;/p&gt;

&lt;p&gt;Today I will show you how to make a small chat in terminal using Web Sockets with Nodejs. If you think you can do it better, then feel free to leave a suggestion, but otherwise let's get to the tutorial :D. After every step there will be a description explaining what the code shown above does.&lt;/p&gt;

&lt;p&gt;This is what chat would look like by the end of the project&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q5h7Sd6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lq180anuz3an52xrkgvp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q5h7Sd6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lq180anuz3an52xrkgvp.png" alt="Chat in working condition"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;P.S. (If you are stuck, feel free to go to the &lt;strong&gt;&lt;a href="https://github.com/agorushkin/Terminal-Chat"&gt;Github&lt;/a&gt;&lt;/strong&gt; repo and copy code from there)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prep-phase"&gt;
  &lt;/a&gt;
  Prep Phase
&lt;/h1&gt;

&lt;p&gt;Let's first do few things -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create &lt;code&gt;package.json&lt;/code&gt;, and write &lt;code&gt;{"type":"module"}&lt;/code&gt; for ES6 imporsts&lt;/li&gt;
&lt;li&gt;Install &lt;strong&gt;ws&lt;/strong&gt; using &lt;code&gt;npm i ws&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h2&gt;

&lt;p&gt;Now, let's create &lt;code&gt;server.js&lt;/code&gt;, for our websocket server and paste this code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ws&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;serverSocket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clientSockets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="nx"&gt;serverSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;connection&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;clientSockets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;serverSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;listening&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Server is online!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: &lt;em&gt;This enables our server to be hosted on port 8080, as well as stores a client socket in an array when it is connected&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h2&gt;

&lt;p&gt;Let's now go and write some code for our client inside &lt;code&gt;client.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ws&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clientSocket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ws://localhost:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Connected to the server!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: &lt;em&gt;This is some basic code for our client which connects to localhost on port 8080. We will add more interactivity in coming steps.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#part-1-of-step-3"&gt;
  &lt;/a&gt;
  Part 1 of Step 3
&lt;/h3&gt;

&lt;p&gt;We need to somehow identify out client, don't we? So let's allow them to pick their own name. Before that make a folder path like that shown &lt;code&gt;./src/client/&lt;/code&gt;, inside there we will be putting all the modules for our client in future. For now make a file called &lt;code&gt;readline.js&lt;/code&gt; inside &lt;code&gt;./src/client/&lt;/code&gt; and put following code inside.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Readline&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;readline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Readline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createInterface&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: &lt;em&gt;This export is to make our life a little bit easier by being able to import readline with just one line of code in many different files. Readline will be used to fetch user's messages and user's responses&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-2-of-step-3"&gt;
  &lt;/a&gt;
  Part 2 of Step 3
&lt;/h3&gt;

&lt;p&gt;Now let's make a script that will ask user for their name, so we can later store it. Make a &lt;code&gt;getName.js&lt;/code&gt; file inside our client scripts folder, and paste following code into it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readline&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./readline.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;What would you like to be called?&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You can now start messaging!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: &lt;em&gt;At first this code returns a promise, this is made because the client doesn't respond straight away and takes some time before writing out their name. This will allow us to async await client's name&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-3-of-step-3"&gt;
  &lt;/a&gt;
  Part 3 of Step 3
&lt;/h3&gt;

&lt;p&gt;Now, let's think of a scenario where to different users have the same name, thought about that? In that case we would need a unique identifier for each user. That means we will write a small function that will generate a token for a user. Create a &lt;code&gt;createToken.js&lt;/code&gt; in client scripts, and paste in this code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;x&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/x/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: &lt;em&gt;This code generates a 20 letter long token consisting of hexadecimals. There is a slight possible chance that 2 users will have same token, but they are so small that I don't even know what this number 1.2089258e+24 (Other then it having e in it), so we can consider this a fool proof plan.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-4-of-step-3"&gt;
  &lt;/a&gt;
  Part 4 of Step 3
&lt;/h3&gt;

&lt;p&gt;Let's think of how will we send messages. It seems like getting user input and sending it to the server will be the best idea, so we'll do it that way. Make a script called &lt;code&gt;getMessage.js&lt;/code&gt; in client scripts (Who would've thought lol), and paste following code in there.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readline&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./readline.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;getMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: &lt;em&gt;What this code does, is it takes a client socket, name, and token as parameters of the function and calls a readline question, which waits for user input and then puts all the data inside a stringified object, and then sending it to the server for being parsed there. This function calls upon itself, so that we can get infinite message input&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After we've done that, let's import and paste the code inside our &lt;code&gt;client.js&lt;/code&gt; file like shown below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ws&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getName&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/client/getName.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getMessage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/client/getMessage.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createToken&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/client/createToken.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clientSocket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ws://localhost:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Connected to the server!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createToken&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;getMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step 4
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#part-1-of-step-4"&gt;
  &lt;/a&gt;
  Part 1 of Step 4
&lt;/h3&gt;

&lt;p&gt;Now that we have done message sending, we need to make a script that will parse in on server, and send it to all the clients. This is where &lt;code&gt;clientSockets&lt;/code&gt; array comes in handy. Let's first make a function that sends messages to all clients, but before that let's make a folder for our server inside &lt;code&gt;./src/server/&lt;/code&gt; and put a file named &lt;code&gt;sendAll.js&lt;/code&gt; in there. From now on this will be our server scripts folder. Inside &lt;code&gt;sendAll.js&lt;/code&gt; we'll put code below in&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;clientSockets&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../server.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sendAll&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;clientSockets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: &lt;em&gt;This function send message passed as a parameter to all clients by cycling through the array that we made earlier&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-2-of-step-4"&gt;
  &lt;/a&gt;
  Part 2 of Step 4
&lt;/h3&gt;

&lt;p&gt;Let's now put this function inside the code of our &lt;code&gt;server.js&lt;/code&gt; file. Whilst we add the function, we also need to add an event handler for message, so we can pass the message that we receive from the client into the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ws&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;sendAll&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/server/sendAll.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;serverSocket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8080&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clientSockets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="nx"&gt;serverSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;connection&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;clientSockets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;sendAll&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;serverSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;listening&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Server is online!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: &lt;em&gt;Now that we added this function, it will run whenever server receives a message from one of it's clients&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5"&gt;
  &lt;/a&gt;
  Step 5
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#part-1-of-step-5"&gt;
  &lt;/a&gt;
  Part 1 of Step 5
&lt;/h3&gt;

&lt;p&gt;Now that we have finally finished our code for the server (which we did), it's time to add a message fetcher for our client, so it can display the message in the console. Make a &lt;code&gt;fetchMessage.js&lt;/code&gt; file inside our client scripts and paste next code inside.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;messageObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;messageObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stdout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clearLine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;messageObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;messageObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;: &lt;em&gt;That function will do the displaying part of the chat, it will clear our current output line, put message in, and then add &lt;code&gt;&amp;gt;&lt;/code&gt; to the next line, so that we continue typing there.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-2-of-step-5"&gt;
  &lt;/a&gt;
  Part 2 of Step 5
&lt;/h3&gt;

&lt;p&gt;Now all is left to add, is import of the fetchMessage function to the &lt;code&gt;client.js&lt;/code&gt;, which will result into the code below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ws&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getName&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/client/getName.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getMessage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/client/getMessage.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createToken&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/client/createToken.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;fetchMessage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/client/fetchMessage.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clientSocket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WebSocket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ws://localhost:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Connected to the server!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createToken&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;getMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;clientSocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fetchMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-6-enjoy"&gt;
  &lt;/a&gt;
  Step 6 - Enjoy
&lt;/h2&gt;

&lt;p&gt;Run &lt;code&gt;node server.js&lt;/code&gt; in one terminal, open two others and run &lt;code&gt;node client.js&lt;/code&gt; on both of them and enjoy your own small chat inside a terminal! Feel free to modify it if you want, and tell me the things I could have done better.&lt;/p&gt;

&lt;p&gt;If you liked this, then please leave a reaction and or a comment with the feedback on whether you like this post or not, it would mean a lot to me. I hope you have a great day, and cya later!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Windows file Server (Amazon FSx)</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 06 Jul 2021 05:13:21 +0000</pubDate>
      <link>https://dev.to/this-is-learning/windows-file-server-amazon-fsx-21ek</link>
      <guid>https://dev.to/this-is-learning/windows-file-server-amazon-fsx-21ek</guid>
      <description>&lt;p&gt;We studied AWS EFS which provides file storage for our Linux instances but for windows or MacOS there is AWS FSx. It is a windows native shared file system  which is built on Windows File server. It provides NTFS and SMB protocols for filesystems which are needed for windows. You can access Amazon FSx from Windows, Linux, or MacOS compute instances and devices running on AWS or on premises. Its also available across AZ and is cost effective too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fsx-for-lustre"&gt;
  &lt;/a&gt;
  FSx for lustre
&lt;/h2&gt;

&lt;p&gt;Amazon FSx for lustre is used when we need a very high performance. It easily scales upto millions of IOPS and sub ms latencies.&lt;/p&gt;

&lt;p&gt;Its mainly used in financial modelling, machine learning, analytics etc.&lt;/p&gt;

&lt;p&gt;With this we have studied the various types of storage available on EC2. Next we will study how to use S3.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>beginners</category>
      <category>devops</category>
    </item>
    <item>
      <title>Elastic File System (EFS)</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 06 Jul 2021 05:09:57 +0000</pubDate>
      <link>https://dev.to/this-is-learning/elastic-file-system-efs-1idf</link>
      <guid>https://dev.to/this-is-learning/elastic-file-system-efs-1idf</guid>
      <description>&lt;p&gt;Let us learn about a third type storage EFS. This is kind of storage that is a network file system. The main advantage of this service is that it can mount over 100's of EC2 instances across multiple availability zones. All these EC2 instances will see the same files as in our EFS volume.&lt;/p&gt;

&lt;p&gt;Lets see all the advantages of EFS system:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Can be mounted our 100's of Ec2 instances&lt;/li&gt;
&lt;li&gt;Is automatically scalable, you only pay for what you are using like if you use 2GB of storage you only pay for that&lt;/li&gt;
&lt;li&gt;Its available across multiple AZ, regions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Disadvantages of using EFS: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Its very costly&lt;/li&gt;
&lt;li&gt;It only works with Linux instances&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To get around the cost aspect AWS has provisioned another type EFS which provides up to 92% saving over our EFS volumes and its called EFS -IA by IA they mean infrequent access. To use this you just have to setup a policy to when to move files from EFS standard to EFS-IA. In this files are moved to a different storage class when they are accessed very rarely and can be accessed in the same way as normal files. If the file is accessed again then its again moved to standard class of storage. This provides a lot of flexibility in using EFS. &lt;/p&gt;

&lt;p&gt;Next we will study about  a windows file system called Amazon FSx.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>beginners</category>
      <category>cloud</category>
      <category>devops</category>
    </item>
    <item>
      <title>EC2 instance store(Physical high IOPS hard drive for AWS)</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 06 Jul 2021 05:06:06 +0000</pubDate>
      <link>https://dev.to/this-is-learning/ec2-instance-store-physical-high-iops-hard-drive-for-aws-27m</link>
      <guid>https://dev.to/this-is-learning/ec2-instance-store-physical-high-iops-hard-drive-for-aws-27m</guid>
      <description>&lt;p&gt;We studied about network drives in the last two parts of the series (EBS). What if we need an actual physical drive connected to our EC2 instance. For that we use EC2 instance store. Some drives are connected to EC2 they are called Ec2 instance store. These are used when we need very high performance on our disk, these disks may provide up to millions of IOPS for our EC2 instance.&lt;/p&gt;

&lt;p&gt;The first question that comes to mind is why are they not the default storage that are connected to our EC2 store. They have some drawbacks as listed below:-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;These lose there storage once the EC2 instance is turned off&lt;/li&gt;
&lt;li&gt;You have to maintain your own backups &lt;/li&gt;
&lt;li&gt;The data is also lost on hardware failures.&lt;/li&gt;
&lt;li&gt;All these things make them good only for cache, temporary content&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All in all EC2 instance store is very fast but is not very reliable. So, use it carefully.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>beginners</category>
      <category>devops</category>
    </item>
    <item>
      <title>What is a DevOps Architect? The DevOps Roles explained (ft Mickey Gousset)</title>
      <author>Davide 'CoderDave' Benvegnù</author>
      <pubDate>Tue, 06 Jul 2021 03:41:56 +0000</pubDate>
      <link>https://dev.to/n3wt0n/what-is-a-devops-architect-the-devops-roles-explained-ft-mickey-gousset-39f1</link>
      <guid>https://dev.to/n3wt0n/what-is-a-devops-architect-the-devops-roles-explained-ft-mickey-gousset-39f1</guid>
      <description>&lt;p&gt;There is a fair amount of confusion when people talk about &lt;strong&gt;&lt;em&gt;DevOps Roles and Responsibilities&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In this live stream we will discuss with &lt;a href="https://twitter.com/mickey_gousset"&gt;Mickey Gousset&lt;/a&gt; (&lt;em&gt;DevOps Architect at GitHub&lt;/em&gt;) about &lt;strong&gt;what is a DevOps architect&lt;/strong&gt; role and what are the DevOps Architect roles and responsibilities. We will also &lt;strong&gt;compare DevOps Architect vs DevOps Engineer&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Bring your questions for us and we will answer them live!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TF9EIS9vxnM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.toTF9EIS9vxnM"&gt;Link to the video: https://youtu.be/TF9EIS9vxnM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;📘 This is the rough outline:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Address the confusion about DevOps Roles&lt;/li&gt;
&lt;li&gt;Companies are getting the roles wrong&lt;/li&gt;
&lt;li&gt;What is a DevOps Architect&lt;/li&gt;
&lt;li&gt;DevOps Architect vs DevOps Engineer&lt;/li&gt;
&lt;li&gt;Live Q&amp;amp;A&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope to see y'all live!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#time-for-the-live-streaming"&gt;
  &lt;/a&gt;
  ⌚ TIME FOR THE LIVE STREAMING
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Tuesday, July 6th, 7 am PDT&lt;/li&gt;
&lt;li&gt;Tuesday, July 6th, 10 am EDT&lt;/li&gt;
&lt;li&gt;Tuesday, July 6th, 2 pm UTC&lt;/li&gt;
&lt;li&gt;Tuesday, July 6th, 7.30 pm IST&lt;/li&gt;
&lt;li&gt;Tuesday, July 6th, 10 pm GMT+8&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check &lt;strong&gt;Mickey Gousset&lt;/strong&gt; out:&lt;br&gt;
► YouTube: &lt;a href="https://www.youtube.com/c/MickeyGousset"&gt;https://www.youtube.com/c/MickeyGousset&lt;/a&gt;&lt;br&gt;
► Twitter: &lt;a href="https://twitter.com/mickey_gousset"&gt;https://twitter.com/mickey_gousset&lt;/a&gt;&lt;br&gt;
► GitHub: &lt;a href="https://github.com/mickeygousset"&gt;https://github.com/mickeygousset&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 🚀 for more content:&lt;/p&gt;

&lt;p&gt;📽 &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
☕ &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
💖 &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
🌐 &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
👕 &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
👦🏻 &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
🐱‍💻 &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
👲🏻 &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👴🏻 &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🔉 &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TF9EIS9vxnM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>devops</category>
      <category>architecture</category>
      <category>culture</category>
      <category>live</category>
    </item>
    <item>
      <title>The Temporal Date API</title>
      <author>Siddharth</author>
      <pubDate>Tue, 06 Jul 2021 03:25:29 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/the-temporal-date-api-3emi</link>
      <guid>https://dev.to/siddharthshyniben/the-temporal-date-api-3emi</guid>
      <description>&lt;p&gt;Have you heard of &lt;a href="https://github.com/tc39/proposal-temporal"&gt;Temporal&lt;/a&gt;? It's an ECMAScript proposal currently at stage 3. It &lt;strong&gt;'brings a modern date/time API to the ECMAScript language'&lt;/strong&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Date&lt;/code&gt; has been a long-standing pain point in &lt;code&gt;ECMAScript&lt;/code&gt;. This proposes &lt;code&gt;Temporal&lt;/code&gt;, a global &lt;code&gt;Object&lt;/code&gt; that acts as a top-level namespace (like &lt;code&gt;Math&lt;/code&gt;), that brings a modern date/time API to the &lt;code&gt;ECMAScript&lt;/code&gt; language. For a detailed breakdown of motivations, see: &lt;a href="https://maggiepint.com/2017/04/09/fixing-javascript-date-getting-started/"&gt;Fixing JavaScript Date&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Temporal fixes these problems by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Providing easy-to-use APIs for date and time computations&lt;/li&gt;
&lt;li&gt;First-class support for all time zones, including DST-safe arithmetic&lt;/li&gt;
&lt;li&gt;Dealing only with objects representing fixed dates and times&lt;/li&gt;
&lt;li&gt;Parsing a strictly specified string format&lt;/li&gt;
&lt;li&gt;Supporting non-Gregorian calendars&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;The whole documentation is &lt;a href="https://tc39.es/proposal-temporal/docs/"&gt;here&lt;/a&gt;. It seems like a very interesting proposal and this might make libraries like Moment irrelevant.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>news</category>
    </item>
    <item>
      <title>Automate creation, validation of AWS AMI - EC2 Image Builder</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 06 Jul 2021 03:00:43 +0000</pubDate>
      <link>https://dev.to/this-is-learning/automate-creation-validation-of-aws-ami-ec2-image-builder-f0i</link>
      <guid>https://dev.to/this-is-learning/automate-creation-validation-of-aws-ami-ec2-image-builder-f0i</guid>
      <description>&lt;p&gt;In the last article we studied AWS AMI how to create them so that we can easily get preconfigured EC2 instances. Lets now look at a new AWS service which allows us check if the AMI is created correctly and automate the whole process.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-ec2-image-builder"&gt;
  &lt;/a&gt;
  What is EC2 image builder?
&lt;/h1&gt;

&lt;p&gt;EC2 image builder is an AWS service which allows us to build, maintain validate and test our AWS AMI. It is a free service and we only have to pay for the underlying storage and EC2 instances that this service uses.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-does-ec2-image-builder-work"&gt;
  &lt;/a&gt;
  How does EC2 image builder work?
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We setup our EC2 image builder.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It creates an EC2 instance which builds everything we have defined like installing a firewall, adding python, adding java, nodejs etc&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It then creates an AMI from it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then image builder create a test EC2 instance from this AMI and runs a bunch of tests that are defined by us.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This leads to the final EC2 AMI image that we can use&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can also schedule it of you keep on changing our software or update dependencies. It can be run weekly, daily as and when you want&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As we can see that this service can help us a lot in building our AMI and make them secure by updating and testing them on dependency or software updates.&lt;/p&gt;

&lt;p&gt;In the next article we will do a Hands on on EC2 image builder.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>beginners</category>
      <category>devops</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Animation Write</title>
      <author>Pierre Oliveira</author>
      <pubDate>Tue, 06 Jul 2021 02:53:00 +0000</pubDate>
      <link>https://dev.to/pierreoliveira1/animation-write-1p61</link>
      <guid>https://dev.to/pierreoliveira1/animation-write-1p61</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pierreoliveira1/embed/XWNLJMr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>The Benefits Of Linked Lists And How I Implemented A Queue In React</title>
      <author>Nathan Rymarz</author>
      <pubDate>Tue, 06 Jul 2021 01:41:39 +0000</pubDate>
      <link>https://dev.to/nrymarz/the-benefits-of-linked-lists-and-how-i-implemented-a-queue-in-react-4gcm</link>
      <guid>https://dev.to/nrymarz/the-benefits-of-linked-lists-and-how-i-implemented-a-queue-in-react-4gcm</guid>
      <description>&lt;p&gt;While developing my latest project, I came across a situation in which I wanted to use a Queue. Having recently learned about Linked Lists, I decided to implement the Queue using my own Linked List Class. In this post I will explain the pros and cons of using Linked Lists and how I implemented a Linked List in my project.&lt;/p&gt;

&lt;p&gt;A Linked List is a data structure that is similar to an Array. The main difference is that Linked Lists have no random access, meaning that we can not immediately grab elements from the list using an index. Instead we have to traverse the list starting from the head to get to the element at the specified index. For this reason, it is not usually a good idea to use Linked Lists as a replacement for a standard Array.&lt;/p&gt;

&lt;p&gt;However, the benefit we get from using Linked Lists is saving time when we add or remove items at the beginning or middle of the list. This is because Linked Lists don't use indexes like Arrays. When we shift an element onto an Array, the Array must update the index for every element after the shifted element. With a Linked List we don't have to worry about that. This makes using Linked Lists advantageous when we want to use them as a Queue.&lt;/p&gt;

&lt;p&gt;To elaborate, a queue is an idea of a list that abides by the First in, First out principle. Therefore, if we are implementing a Queue for an application, we need to add or remove elements from the start of the list and do the opposite at the end of the list. For instance, if we are adding elements to the start of our Queue, when we want to remove elements, we remove them from the end of the Queue, and vice versa. Because we are always either adding or removing from the start of the list, an Array would not be the most efficient data structure to use for a Queue. (Provided we don't care about random access.)&lt;/p&gt;

&lt;p&gt;To implement a Queue for my React Project, I made a basic Queue Class. The code is below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Queue&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;last&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;last&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;last&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;dequeue&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
        &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;last&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;My project is an app that scrapes the FoodNetwork Website to find random recipes. Users can swipe left or right to discard or save recipes as they appear. I use the queue to load extra recipes so after a user swipes another one will be loaded and ready to go. &lt;/p&gt;

&lt;p&gt;To start with, I initialize the queue when the component mounts and enqueue 5 recipes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;recipes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Queue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;findRecipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;setNext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;findRecipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;setRecipe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="nx"&gt;findRecipe&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;recipes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},[])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The findRecipe function is a call to my Scraper that takes a callback function and passes a new Recipe object to that callback.&lt;/p&gt;

&lt;p&gt;I use another useEffect hook to set the the nextRecipe to the recipe that is returned from dequeuing and also enqueue a new recipe. This happens each time a user swipes to find a new recipe. Thus, the queue maintains 5 recipes at most.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setNext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;recipes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dequeue&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="nx"&gt;findRecipe&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;recipes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;},[&lt;/span&gt;&lt;span class="nx"&gt;recipe&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I found that using a Linked List worked best for this because I don't need to access elements from the middle of the list and the small time I save with dequeueing from the Linked List rather than unshifting from an array helps make my app a little smoother. I hope you liked reading my post and have a good day. :)&lt;/p&gt;

</description>
      <category>linkedlists</category>
      <category>react</category>
      <category>javascript</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>Heap sort algorithm</title>
      <author>Aya Bouchiha</author>
      <pubDate>Mon, 05 Jul 2021 23:16:54 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/heap-sort-algorithm-247h</link>
      <guid>https://dev.to/ayabouchiha/heap-sort-algorithm-247h</guid>
      <description>&lt;p&gt;Hi, today we'll discuss the Heapsort algorithm, for better understanding this algorithm, you need to be familiar with Heap data structure if you're not, check this &lt;a href="https://dev.to/ayabouchiha/your-complete-guide-to-heap-data-structure-20nl"&gt;the complete guide to heap data structure&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#definition-of-heapsort"&gt;
  &lt;/a&gt;
  Definition of Heapsort
&lt;/h2&gt;

&lt;p&gt;Heapsort: is one of the most efficient sorting algorithms which is based on &lt;a href="https://dev.to/ayabouchiha/your-complete-guide-to-heap-data-structure-20nl"&gt;&lt;strong&gt;heap&lt;/strong&gt;&lt;/a&gt; data structure&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#space-and-time-complexity-of-heapsort"&gt;
  &lt;/a&gt;
  Space and Time complexity of Heapsort
&lt;/h2&gt;

&lt;p&gt;The space complexity of the heap sort algorithm is &lt;strong&gt;O(1)&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Best case&lt;/th&gt;
&lt;th&gt;Average case&lt;/th&gt;
&lt;th&gt;Worst case&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;O(n log n)&lt;/td&gt;
&lt;td&gt;O(n log n)&lt;/td&gt;
&lt;td&gt;O(n log n)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#heap-sort-approach"&gt;
  &lt;/a&gt;
  Heap sort approach
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Covert the giving array to a max-heap&lt;/li&gt;
&lt;li&gt;While the size of the heap is greater than 1: 

&lt;ol&gt;
&lt;li&gt;After converting it, The root is the maximum value of the max-heap. &lt;/li&gt;
&lt;li&gt;Replace the root with the last item of the max-heap.&lt;/li&gt;
&lt;li&gt;Decrease the size of the heap.&lt;/li&gt;
&lt;li&gt;Bubble down (heapify) the root.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#implementation-of-heap-sort-algorithm-in-python"&gt;
  &lt;/a&gt;
  Implementation of Heap sort algorithm in python
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This code is contributed by &lt;a href="https://www.geeksforgeeks.org/heap-sort/"&gt;Mohit Kumra&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#heapify-function"&gt;
  &lt;/a&gt;
  heapify function
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;heapify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;largest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="c1"&gt;# Initialize largest as root
&lt;/span&gt;    &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="c1"&gt;# left = 2*i + 1
&lt;/span&gt;    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="c1"&gt;# right = 2*i + 2
&lt;/span&gt;
    &lt;span class="c1"&gt;# See if left child of root exists and is
&lt;/span&gt;    &lt;span class="c1"&gt;# greater than root
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;largest&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;largest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;

    &lt;span class="c1"&gt;# See if right child of root exists and is
&lt;/span&gt;    &lt;span class="c1"&gt;# greater than root
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;largest&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;largest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;

    &lt;span class="c1"&gt;# Change root, if needed
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;largest&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;largest&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;largest&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# swap
&lt;/span&gt;
        &lt;span class="c1"&gt;# Heapify the root.
&lt;/span&gt;        &lt;span class="n"&gt;heapify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;largest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#heap-sort-function"&gt;
  &lt;/a&gt;
  Heap sort function
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;heapSort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Build a maxheap.
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;heapify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# One by one extract elements
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# swap
&lt;/span&gt;        &lt;span class="n"&gt;heapify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#references-and-useful-resources"&gt;
  &lt;/a&gt;
  References and useful resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/heap-sort/"&gt;https://www.geeksforgeeks.org/heap-sort/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Q_eia3jC9Ts"&gt;https://www.youtube.com/watch?v=Q_eia3jC9Ts&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=2DmK_H7IdTo"&gt;https://www.youtube.com/watch?v=2DmK_H7IdTo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>algorithms</category>
      <category>python</category>
      <category>codenewbie</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>The Dev Academy for Developers🎉🔥🔥</title>
      <author>Fortune the Dev 🚀❤️</author>
      <pubDate>Mon, 05 Jul 2021 22:15:02 +0000</pubDate>
      <link>https://dev.to/codewithfortune/the-dev-academy-for-developers-175j</link>
      <guid>https://dev.to/codewithfortune/the-dev-academy-for-developers-175j</guid>
      <description>&lt;p&gt;My YouTube channel achieved 7,500 views on July 05, 2021! Track and celebrate your own success today for free with @vidIQ &lt;a href="https://t.co/NIhWu2xQ53"&gt;https://t.co/NIhWu2xQ53&lt;/a&gt; &lt;br&gt;
This isnt an achievement for other devs with successful channels and 7 figure salaries but it is for me🎉&lt;br&gt;
The channel is still small but there's definitely something for every type of developer no matter the level of experience or type of developer.&lt;br&gt;
Anyway if you would like to check out the channel, here's the link, kindly Subscribe ❤️❤️ and comment on things I can improve on💪💪&lt;br&gt;
The link👇👇&lt;br&gt;
&lt;a href="https://youtube.com/c/FortuneDevAcademy"&gt;https://youtube.com/c/FortuneDevAcademy&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>java</category>
      <category>react</category>
      <category>php</category>
    </item>
    <item>
      <title>My 2021 New Mac Setup</title>
      <author>swyx</author>
      <pubDate>Mon, 05 Jul 2021 21:57:11 +0000</pubDate>
      <link>https://dev.to/swyx/my-2021-new-mac-setup-1b1</link>
      <guid>https://dev.to/swyx/my-2021-new-mac-setup-1b1</guid>
      <description>&lt;p&gt;I set up a new Mac for work today. Here's everything I use on a Mac for fullstack web development.&lt;/p&gt;

&lt;p&gt;Unlike &lt;a href="https://github.com/minamarkham/formation"&gt;Mina Markham&lt;/a&gt;, I choose not to automate my setup because I only do it about once a year and I want the ability to make conscious changes each time.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I previously tracked my new mac setup in &lt;a href="https://dev.to/swyx/my-new-mac-setup-4ibi"&gt;an old version of this page from 2018-2020&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#1hr-video-walkthrough"&gt;
  &lt;/a&gt;
  1hr Video Walkthrough
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/qwflfsgU0eg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#osbrowser-settings"&gt;
  &lt;/a&gt;
  OS/Browser Settings
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Browser&lt;/strong&gt;: Download Chrome, set to default.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Log in to&lt;/strong&gt;: (this helps with logins for the other services below)

&lt;ul&gt;
&lt;li&gt;Twitter&lt;/li&gt;
&lt;li&gt;Github (more setup instructions below)&lt;/li&gt;
&lt;li&gt;Gmail&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;System Settings&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;Disable Spotlight search for all miscellaneous crap except apps and system preferences

&lt;ul&gt;
&lt;li&gt;including &lt;a href="https://www.howtogeek.com/231829/how-to-disable-developer-search-results-in-spotlight-on-a-mac/"&gt;stupid Developer option&lt;/a&gt; (in Big Sur you may need to &lt;a href="https://apple.stackexchange.com/a/383358"&gt;modify plist&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Disable Ask Siri&lt;/li&gt;
&lt;li&gt;Set to &lt;a href="https://www.lifewire.com/make-mac-mouse-pointer-bigger-2260808"&gt;Big cursor&lt;/a&gt; for accessibility during presentation&lt;/li&gt;
&lt;li&gt;Fix trackpad direction: Trackpad -&amp;gt; Scroll &amp;amp; Zoom - Natural off&lt;/li&gt;
&lt;li&gt;Disable dictionary lookup: Trackpad -&amp;gt; Point &amp;amp; Click -&amp;gt; Look up &amp;amp; data detectors off&lt;/li&gt;
&lt;li&gt;(if using windows keyboard) &lt;a href="https://superuser.com/questions/158561/how-can-i-remap-windows-and-alt-keys-in-os-x"&gt;remap alt and cmd keys&lt;/a&gt; for ergonomics&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Finder settings&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;Preferences → show filename extensions&lt;/li&gt;
&lt;li&gt;Enable showing dotfiles (just hold Cmd + Shift + . (dot) in a Finder window)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.tekrevue.com/tip/show-path-finder-title-bar/"&gt;Show path bar&lt;/a&gt; in footer for easier navigation&lt;/li&gt;
&lt;li&gt;Prune the excessive sidebar bookmarks

&lt;ul&gt;
&lt;li&gt;create "Work" folder and pin it&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Keyboard&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://apple.stackexchange.com/questions/78948/how-to-disable-command-q-for-quit"&gt;remap command+Q to literally anything else&lt;/a&gt; - to prevent accidental close-all&lt;/li&gt;
&lt;li&gt;Shortcuts: copy picture of selected area to clipboard -&amp;gt; Cmd+E&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;MacOS Dock:&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Remove everything from the Dock except: Finder, System Preferences and Trash&lt;/li&gt;
&lt;li&gt;Turn Dock Auto Hiding on

&lt;ul&gt;
&lt;li&gt;turn this on for MacOS Menu bar as well&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Chrome extensions&lt;/strong&gt;: (tied to Chrome account)

&lt;ul&gt;
&lt;li&gt;Paywall blocker &lt;a href="https://github.com/iamadamdev/bypass-paywalls-chrome/"&gt;https://github.com/iamadamdev/bypass-paywalls-chrome/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/round/Twitter-Links-beta"&gt;https://github.com/round/Twitter-Links-beta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Morpheus Dark theme&lt;/li&gt;
&lt;li&gt;1password&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/display-anchors/poahndpaaanbpbeafbkploiobpiiieko/related?hl=en"&gt;Display Anchors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en"&gt;React Devtools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/refined-github"&gt;Refined Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/codecopy/fkbfebkcoelajmhanocgppanfoojcdmg?hl=en"&gt;Code Copy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://chrome.google.com/webstore/detail/video-speed-controller/nffaoalbilbmmfgbnbgppjihopabppdk?hl=en"&gt;Video Speed Controller&lt;/a&gt; ← VERY HIGHLY RECOMMENDED&lt;/li&gt;
&lt;li&gt;&lt;a href="https://palettab.com/"&gt;Palettab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/privacy-badger/pkehgijcmpdhfbdbbnkijodmdjhbjlgp?hl=en-US"&gt;Privacy Badger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/privacy-badger/pkehgijcmpdhfbdbbnkijodmdjhbjlgp?hl=en-US"&gt;RescueTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm?hl=en"&gt;uBlock Origin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/octolinker/jlmafbaeoofdegohdhinkhilhclaklkp?hl=en"&gt;Octolinker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sw-yx/async-render-toolbox"&gt;async render toolbox&lt;/a&gt; (i made this)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#setup-terminal"&gt;
  &lt;/a&gt;
  Setup Terminal
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Copy my dotfiles (vimrc, zshrc, .gitignore_global): &lt;a href="https://www.notion.so/7fa1009e460ecb818d5e6d9ca4616a05"&gt;https://gist.github.com/sw-yx/7fa1009e460ecb818d5e6d9ca4616a05&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href="https://ohmyz.sh/"&gt;ZSH&lt;/a&gt; (first usage of &lt;code&gt;git&lt;/code&gt; will prompt you to install git - takes 15 minutes)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git config --global user.name "swyx"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git config --global user.email shawnthe1@gmail.com&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Font - &lt;a href="https://github.com/powerline/fonts/blob/master/Inconsolata/Inconsolata%20for%20Powerline.otf"&gt;Inconsolata for Powerline&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zsh-users/zsh-autosuggestions"&gt;autosuggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zsh-users/zsh-syntax-highlighting"&gt;syntax highlighting&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;may need to &lt;a href="https://stackoverflow.com/questions/13762280/zsh-compinit-insecure-directories"&gt;chmod stuff&lt;/a&gt; or warnings show at start of every session
&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo chmod -R 755 /usr/local/share/zsh
$ sudo chown -R root:staff /usr/local/share/zsh

&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;a href="https://hyper.is/"&gt;Hyper Terminal&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;settings: &lt;a href="https://www.notion.so/276d7cf66e9b0eea48c117fff1762a17"&gt;shell: '/bin/zsh'&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;settings: &lt;code&gt;fontFamily: '"Inconsolata for Powerline", Menlo, "DejaVu Sans Mono", Consolas, "Lucida Console", monospace',&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://fig.io/"&gt;Fig&lt;/a&gt; - context-aware autocomplete for terminal. Waitlisted now, but my version is &lt;a href="https://www.notion.so/691b465bafb94776b179cc4d78e21345"&gt;here&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;More CLI tools recommended by Brendan Faik (founder of Fig) - &lt;code&gt;bat&lt;/code&gt;, &lt;code&gt;exa&lt;/code&gt;, &lt;code&gt;ripgrep&lt;/code&gt;, and other &lt;a href="https://zaiste.net/posts/shell-commands-rust/"&gt;Rust CLI alternatives&lt;/a&gt;. Also &lt;a href="https://github.com/momo-lab/zsh-abbrev-alias"&gt;zsh abbreviations&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#set-up-appsenvironments"&gt;
  &lt;/a&gt;
  Set up apps/environments
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; - &lt;code&gt;/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;i have a bunch more stuff in &lt;code&gt;brew list&lt;/code&gt; but i'm not sure what i use actively. You can mass install these: &lt;code&gt;brew install $(cat packages.txt)&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bat             gdbm            libuv           python@3.9
brotli          gh              libyaml         readline
c-ares          go              mpdecimal       ruby
deno            gradle          nghttp2         sqlite
diff-so-fancy   icu4c           node            xz
fnm             jemalloc        openjdk         yarn
fzf             libev           openssl@1.1     z
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;brew install bat&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/cli/cli"&gt;Github CLI&lt;/a&gt;: &lt;code&gt;brew install github/gh/gh&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you need to login to git - if you have 2fa enabled, you cant use your normal github password. try pushing to a repo and enter in a &lt;a href="https://stackoverflow.com/a/34919582"&gt;Personal Access Token&lt;/a&gt; for password.&lt;/li&gt;
&lt;li&gt;then run &lt;code&gt;gh auth login&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"&gt;add GitHub SSH key&lt;/a&gt; (not optional)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;brew install fzf&lt;/code&gt; - fuzzy finder - usage example is &lt;a href="https://twitter.com/swyx/status/1048009961723318272"&gt;here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;code&gt;brew install node&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js/NPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm login&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo npm install netlify-cli -g&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm i -g sign-bunny fortune-node parrotsay&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;npm install -g undollar&lt;/code&gt; for removing $&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo npm install -g @aws-amplify/cli&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;amplify configure&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo npm install -g trash-cli&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;brew install yarn --ignore-dependencies&lt;/code&gt;  - &lt;a href="https://yarnpkg.com/en/docs/install#mac-stable"&gt;yarn&lt;/a&gt; note&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;you may need to &lt;a href="https://stackoverflow.com/questions/43780207/installing-node-with-brew-fails-on-mac-os-sierra"&gt;work around Mac OS Sierra&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;brew install z&lt;/code&gt; - &lt;a href="https://brewinstall.org/install-z-on-mac-with-brew/"&gt;REALLY GOOD TRY IT&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Misc&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip3 install --user powerline-status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;go to a neutral folder and &lt;code&gt;git clone &amp;lt;https://github.com/powerline/fonts&amp;gt; &amp;amp;&amp;amp; cd fonts &amp;amp;&amp;amp; ./install.sh&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Schniz/fnm"&gt;fnm&lt;/a&gt; faster alternative to &lt;a href="https://github.com/creationix/nvm"&gt;nvm&lt;/a&gt;: &lt;code&gt;curl -fsSL &amp;lt;https://fnm.vercel.app/install&amp;gt; | bash&lt;/code&gt; or &lt;code&gt;brew install fnm&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://www.anaconda.com/download/#macos"&gt;Anaconda&lt;/a&gt; Python distro&lt;/strong&gt; - be careful they tend to [modify your bash prompt without asking](&lt;a href="https://askubuntu.com/questions/1026383/why-does-base-appear-in-front-of-my-terminal-prompt%5C"&gt;https://askubuntu.com/questions/1026383/why-does-base-appear-in-front-of-my-terminal-prompt\&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/editions/community/docker-ce-desktop-mac/"&gt;Docker Desktop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;brew install java&lt;/code&gt; - you could download &lt;a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html"&gt;Java Development Kit&lt;/a&gt; from Oracle but fuck them for putting it behind signup wall&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;brew install go&lt;/code&gt; you may need to &lt;code&gt;export PATH=$PATH:/usr/local/go/bin&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;brew install diff-so-fancy&lt;/code&gt; - then set &lt;code&gt;git config --global core.pager "diff-so-fancy | less --tabs=4 -RFX"&lt;/code&gt; - makes for much nicer git diff

&lt;ul&gt;
&lt;li&gt;You can also diff with this bash function &lt;code&gt;dif() { git diff --color --no-index "$1" "$2" | diff-so-fancy; }&lt;/code&gt; or with VSCode &lt;code&gt;code --diff file1.js file2.js&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You can also try &lt;a href="https://github.com/dandavison/delta"&gt;https://github.com/dandavison/delta&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#setup-apps"&gt;
  &lt;/a&gt;
  Setup Apps
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Emojis: &lt;a href="https://matthewpalmer.net/rocket/"&gt;https://matthewpalmer.net/rocket/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Password Manager: I use 1password for company and lastpass for personal&lt;/li&gt;
&lt;li&gt;Window Manager: &lt;a href="https://www.spectacleapp.com/"&gt;https://www.spectacleapp.com/&lt;/a&gt; launch at login&lt;/li&gt;
&lt;li&gt;Clipboard Manager: &lt;a href="https://clipy-app.com/"&gt;https://clipy-app.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Loom: &lt;a href="https://www.loom.com/desktop"&gt;https://www.loom.com/desktop&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Screenshots: &lt;a href="https://cleanshot.com/"&gt;https://cleanshot.com/&lt;/a&gt; (previously used &lt;a href="https://zapier.com/zappy"&gt;https://zapier.com/zappy&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Caffeine (Keep Mac awake for talks): &lt;a href="https://intelliscapesolutions.com/apps/caffeine"&gt;https://intelliscapesolutions.com/apps/caffeine&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;used to be &lt;a href="http://lightheadsw.com/caffeine/"&gt;http://lightheadsw.com/caffeine/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Video capture: &lt;a href="https://getkap.co/"&gt;&lt;/a&gt;&lt;a href="https://getkap.co/"&gt;https://getkap.co/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Dual Screen: &lt;a href="https://www.duetdisplay.com/"&gt;&lt;/a&gt;&lt;a href="https://www.duetdisplay.com/"&gt;https://www.duetdisplay.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Gifs: &lt;a href="https://www.cockos.com/licecap/"&gt;Licecap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://slack.com/downloads/osx"&gt;Slack&lt;/a&gt; or &lt;a href="https://discord.com/"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;OBS: &lt;a href="https://obsproject.com/"&gt;&lt;/a&gt;&lt;a href="https://obsproject.com/"&gt;https://obsproject.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;SkyFonts: &lt;a href="https://www.fonts.com/web-fonts/google"&gt;&lt;/a&gt;&lt;a href="https://www.fonts.com/web-fonts/google"&gt;https://www.fonts.com/web-fonts/google&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Microsoft Todo: &lt;a href="https://apps.apple.com/app/apple-store/id1274495053?mt=8"&gt;&lt;/a&gt;&lt;a href="https://apps.apple.com/app/apple-store/id1274495053?mt=8"&gt;https://apps.apple.com/app/apple-store/id1274495053?mt=8&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Stretchly: &lt;a href="https://hovancik.net/stretchly/"&gt;&lt;/a&gt;&lt;a href="https://hovancik.net/stretchly/"&gt;https://hovancik.net/stretchly/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;SimpleNote: &lt;a href="https://apps.apple.com/us/app/simplenote/id692867256?ls=1&amp;amp;mt=12"&gt;&lt;/a&gt;&lt;a href="https://apps.apple.com/us/app/simplenote/id692867256?ls=1&amp;amp;mt=12"&gt;https://apps.apple.com/us/app/simplenote/id692867256?ls=1&amp;amp;amp;mt=12&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://superhuman.com/mac"&gt;Superhuman for Mac&lt;/a&gt; and &lt;a href="https://mail.superhuman.com/"&gt;&lt;/a&gt;&lt;a href="https://mail.superhuman.com"&gt;https://mail.superhuman.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Notion: &lt;a href="https://www.notion.so/desktop"&gt;&lt;/a&gt;&lt;a href="https://www.notion.so/desktop"&gt;https://www.notion.so/desktop&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/notion-web-clipper/knheggckgoiihginacbkhaalnibhilkk?hl=en"&gt;https://chrome.google.com/webstore/detail/notion-web-clipper/knheggckgoiihginacbkhaalnibhilkk?hl=en&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;App Search/Utils: &lt;a href="https://www.alfredapp.com/"&gt;&lt;/a&gt;&lt;a href="https://www.alfredapp.com/"&gt;https://www.alfredapp.com/&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;set to Alfred Dark&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swmoon203/CrossShare/blob/master/Alfred%20Workflow/Cross%20Share%20Airdrop.alfredworkflow"&gt;airdrop to iphone/ipad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.packal.org/workflow/cupcake-ipsum"&gt;Cupcake Ipsum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Editor: Download &lt;a href="https://code.visualstudio.com/download"&gt;VS Code&lt;/a&gt; (I used to use Insiders but the popups are super annoying). use Settings Sync to sync across machines&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;have to set up powerline fonts "Meslo LG M for Powerline" (&lt;a href="https://github.com/powerline/fonts/blob/master/Meslo%20Slashed/Meslo%20LG%20M%20Regular%20for%20Powerline.ttf"&gt;download&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;auto-close-tag v0.5.6&lt;/li&gt;
&lt;li&gt;auto-rename-tag v0.0.15&lt;/li&gt;
&lt;li&gt;Bookmarks v9.1.0&lt;/li&gt;
&lt;li&gt;code-settings-sync v3.1.2&lt;/li&gt;
&lt;li&gt;debugger-for-chrome v4.10.2&lt;/li&gt;
&lt;li&gt;es7-react-js-snippets v1.8.7&lt;/li&gt;
&lt;li&gt;graphql-for-vscode v1.12.1&lt;/li&gt;
&lt;li&gt;mdx v0.1.0&lt;/li&gt;
&lt;li&gt;prettier-vscode v1.6.1&lt;/li&gt;
&lt;li&gt;python v2018.9.2&lt;/li&gt;
&lt;li&gt;python v0.2.3&lt;/li&gt;
&lt;li&gt;rainbow-brackets v0.0.6&lt;/li&gt;
&lt;li&gt;shades-of-purple v3.17.0&lt;/li&gt;
&lt;li&gt;vscode-graphql v0.1.5&lt;/li&gt;
&lt;li&gt;vscode-import-cost v2.9.0&lt;/li&gt;
&lt;li&gt;vscode-styled-components v0.0.23&lt;/li&gt;
&lt;li&gt;vscode-wakatime v1.2.3&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.tabnine.com/"&gt;TabNine&lt;/a&gt; AI completions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.copilot"&gt;GitHub Copilot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Here's the full list you can run from command line
&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;gua&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rainbow&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;brackets&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;ahmadawais&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shades&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;purple&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;austenc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tailwind&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;docs&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;bradlc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tailwindcss&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;cpylua&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;language&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;postcss&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;dbaeumer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;eslint&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;dsznajder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;es7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;snippets&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;esbenp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prettier&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;formulahendry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;formulahendry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;rename&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;GabrielNordeborn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;graphiql&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;explorer&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;GitHub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;copilot&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;golang&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;go&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;heybourn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headwind&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;jpoissonnier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;components&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;kgscott&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;retreon&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;kumar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;harsh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;luyizhi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;graphql&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;ms&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;python&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;python&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;ms&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;python&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;pylance&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;ms&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;toolsai&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jupyter&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;msjsdiag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;debugger&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;chrome&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;NickScialli&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;svelte&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dark&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;octref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vetur&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;oderwat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indent&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;rainbow&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;sdras&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;night&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;owl&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;silvenon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mdx&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;svelte&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;svelte&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;TabNine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tabnine&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;ThreadHeap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;serverless&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;ide&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;tht13&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;python&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;WakaTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;wakatime&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;Wattenberger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;footsteps&lt;/span&gt;
&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;extension&lt;/span&gt; &lt;span class="nx"&gt;wix&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vscode&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;cost&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#other-good-new-laptop-setup-lists"&gt;
  &lt;/a&gt;
  Other good "new laptop setup" lists:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.taniarascia.com/setting-up-a-brand-new-mac-for-development/?ck_subscriber_id=591519942"&gt;Tania Rascia's setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicknisi/dotfiles"&gt;Nick Nisi's dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mathiasbynens/dotfiles/blob/master/.macos"&gt;Mathias Bynens macos defaults&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;please send me yours!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>mac</category>
      <category>tech</category>
    </item>
  </channel>
</rss>
