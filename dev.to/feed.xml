<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What I learned from building REST APIs in 3 different languages</title>
      <author>Lucia Cerchie</author>
      <pubDate>Tue, 09 Nov 2021 19:00:38 +0000</pubDate>
      <link>https://dev.to/cerchie/what-i-learned-from-building-rest-apis-in-3-different-languages-5cn1</link>
      <guid>https://dev.to/cerchie/what-i-learned-from-building-rest-apis-in-3-different-languages-5cn1</guid>
      <description>&lt;p&gt;While I was in bootcamp in 2020, I built REST APIs using JavaScript and Python.&lt;/p&gt;

&lt;p&gt;Recently, using &lt;a class="mentioned-user" href="https://dev.to/karanpratapsingh"&gt;@karanpratapsingh&lt;/a&gt;
's helpful &lt;a href="https://dev.to/karanpratapsingh/build-a-rest-api-with-go-for-beginners-3gp"&gt;tutorial&lt;/a&gt;, I got started on building a &lt;a href="https://github.com/Cerchie/go-rest-api"&gt;REST API in Golang&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was during the process of following the Golang tutorial that certain things really clicked for me. I'm writing to share them with you! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-basics-of-rest-apis-are-the-same-in-all-three-of-these-languages"&gt;
  &lt;/a&gt;
  1. The basics of REST APIs are the same in all three of these languages
&lt;/h2&gt;

&lt;p&gt;Building a REST API enabled me to establish a &lt;a href="https://en.wikipedia.org/wiki/Create,_read,_update_and_delete"&gt;CRUD pattern&lt;/a&gt;, whether I was doing it in JavaScript, Python, or Golang. &lt;/p&gt;

&lt;p&gt;In each of those languages, I had many of the same considerations. Which CRUD operations did I really need for my end project? How was I going to handle errors? Security? Testing? I am now understanding by my own experience that API design can be language-agnostic! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-its-ok-to-build-something-without-having-memorized-every-last-bit-of-the-syntax"&gt;
  &lt;/a&gt;
  2. It's ok to build something without having memorized every last bit of the syntax
&lt;/h2&gt;

&lt;p&gt;Since I wrote my Python and JavaScript APIs in a fast-paced bootcamp, I was 'forced' to dive in headfirst after a quick review of language syntax. My Golang API is a side-project so there was none of that external pressure, and for that reason I put it off for a long time.&lt;/p&gt;

&lt;p&gt;But after about the twelfth video on the ins and outs of pointers, I realized it was time to get started actually building something-- because getting to know language syntaxes is like getting to know people: learning the names is the beginning, but you have to start interacting with them to understand their behavior. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-python-javascript-and-golang-are-all-different-languages"&gt;
  &lt;/a&gt;
  3. Python, JavaScript, and Golang are all different languages
&lt;/h2&gt;

&lt;p&gt;I know, shocker. ;) &lt;/p&gt;

&lt;p&gt;But after working with them all I understand the differences better. When I only knew Python and JS, I thought maybe Golang was more like Python than I realize it is now, and that Python and JS were less alike than I think they are now.&lt;/p&gt;

&lt;p&gt;I got hung up on the syntax differences -- &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; in JS vs &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; in Python -- without realizing that these languages had some similarities as well. For example, JS and Python are both dynamically typed. You can declare a variable and the runtime gods will determine its type. Just try that with Golang! It won't let you, because you, as a Go developer, must declare a variable's type, it's not the runtime's concern. &lt;/p&gt;

&lt;p&gt;As far as similarities go, all three languages also participate in object-orientation to varying degrees/in varying ways -- as always, this depends on how you define object-orientation! That could be a whole separate blog post so I'm stopping here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you normally build something in one language, try it in a new one! The perspective you gain may surprise you. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>python</category>
      <category>go</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Establishing connections less than 1GB with Direct Connect, Transit Gateway, VPN and Sophos XG on AWS</title>
      <author>Víctor Pérez Pereira</author>
      <pubDate>Tue, 09 Nov 2021 18:54:31 +0000</pubDate>
      <link>https://dev.to/aws-builders/establishing-connections-less-than-1gb-with-direct-connect-transit-gateway-vpn-and-sophos-xg-on-aws-4kkc</link>
      <guid>https://dev.to/aws-builders/establishing-connections-less-than-1gb-with-direct-connect-transit-gateway-vpn-and-sophos-xg-on-aws-4kkc</guid>
      <description>&lt;p&gt;When we have many environments (development, quality and production) on AWS and we separate in different VPCs or AWS accounts, we can have a &lt;strong&gt;Transit Gateway&lt;/strong&gt;; however, when we require an on-premise scenario using &lt;strong&gt;Direct Connect&lt;/strong&gt; with less than 1GB to Transit Gateway native is not supported but, in the following description we’ll see an option of how we can solve it applying the mentioned services with &lt;strong&gt;AWS Direct Connect of 100Mbps&lt;/strong&gt;.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#important"&gt;
  &lt;/a&gt;
  Important
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;In the next scenario we are using a telecommunications provider that offers connections lower than 1GB on AWS Direct Connect.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#definition"&gt;
  &lt;/a&gt;
  Definition
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;AWS Direct Connect&lt;/strong&gt; &lt;em&gt;“AWS Direct Connect links your internal network to an AWS Direct Connect location over a standard Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an AWS Direct Connect router. With this connection, you can create virtual interfaces directly to public AWS services (for example, to Amazon S3) or to Amazon VPC, bypassing internet service providers in your network path. An AWS Direct Connect location provides access to AWS in the Region with which it is associated. You can use a single connection in a public Region or AWS GovCloud (US) to access public AWS services in all other public Regions.”&lt;/em&gt; &lt;a href="https://docs.aws.amazon.com/directconnect/latest/UserGuide/Welcome.html"&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Transit Gateway&lt;/strong&gt; &lt;em&gt;“A transit gateway is a network transit hub that you can use to interconnect your virtual private clouds (VPCs) and on-premises networks. As your cloud infrastructure expands globally, inter-Region peering connects transit gateways together using the AWS Global Infrastructure. Your data is automatically encrypted and never travels over the public internet.”&lt;/em&gt; &lt;a href="https://aws.amazon.com/transit-gateway/?whats-new-cards.sort-by=item.additionalFields.postDateTime&amp;amp;whats-new-cards.sort-order=desc"&gt;2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS VPN&lt;/strong&gt; &lt;em&gt;“AWS Virtual Private Network solutions establish secure connections between your on-premises networks, remote offices, client devices, and the AWS global network. AWS VPN is comprised of two services: AWS Site-to-Site VPN and AWS Client VPN. Each service provides a highly-available, managed, and elastic cloud VPN solution to protect your network traffic. AWS Site-to-Site VPN creates encrypted tunnels between your network and your Amazon Virtual Private Clouds or AWS Transit Gateways. For managing remote access, AWS Client VPN connects your users to AWS or on-premises resources using a VPN software client.”&lt;/em&gt; &lt;a href="https://aws.amazon.com/vpn/"&gt;3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOPHOS&lt;/strong&gt; &lt;em&gt;“Sophos XG Firewall is the only network security solution that is able to fully identify the user and source of an infection on your network and automatically limit access to other network resources in response. ... Using Security Heartbeat, we can do much more than just see the health status of an endpoint.”&lt;/em&gt; &lt;a href="https://www.sophos.com/en-us/medialibrary/PDFs/factsheets/sophos-xg-series-appliances-brna.pdf"&gt;4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P-Yf62VF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70n79l4o03n7w85aidnf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-Yf62VF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70n79l4o03n7w85aidnf.png" alt="Image description" width="647" height="357"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#diagram-description"&gt;
  &lt;/a&gt;
  Diagram description
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;First, we are using &lt;strong&gt;AWS Control Tower&lt;/strong&gt; to segment accounts; we have three AWS accounts in the diagram, an account with the name: Networking; it will be used for interconnection with on-premise and AWS. We also associate the transit gateway attached to the other AWS accounts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There is a connection from on-premise to AWS using Direct Connect 100Mbps with BGP and VIF (Virtual Interfaces) private.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We create and configure a floating VPC (Virtual Private Gateway), and this point is very important since it’s floating is not associated with any VPC . &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We create a transit VPC, it will have four subnets, two private and two public subnets.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deploy and configure two Sophos XG EC2 instances to our communication routers between Direct Connect and Transit Gateway. You can obtain Sophos XG from AWS Marketplace. We use two Sophos XG with HA (high availability) in two different availability zones.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As previously presented, when the template is deployed it assigns an Elastic IP reserved to each Sophos XG, which we will use for creating VPC connection. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We Configure Transit Gateway on the AWS account of name: “Networking” and we associate the VPC’s AWS accounts QA/DEV and PROD, also the “transit” VPC which have the Sophos XG.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We Create and configure a VPN connection with AWS on each Sophos XG using Elastic IP reserved on the EC2 instances. It’s important that at the moment of configuring, we do not use the option of Transit Gateway given, we use floating VPG (Virtual Private Gateway)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#in-sophos-xg"&gt;
  &lt;/a&gt;
  In Sophos XG
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We create and configure a VPN connection with AWS and associate the routes for the BGP that we obtained from the configuration file on AWS-VPN console. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We configure firewall policy and routes.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#in-the-route-table-of-vpc-and-aws"&gt;
  &lt;/a&gt;
  In the route table of VPC and AWS
&lt;/h3&gt;

&lt;p&gt;Previously, the VPCs that we will use from the three AWS accounts were associated with the Transit Gateway, so now, we only must modify the routing tables to go through Transit Gateway.&lt;/p&gt;

&lt;p&gt;At this point, we have a solution created and configured using AWS Direct Connect of 100Mbps with AWS Transit Gateway.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comments-and-recommendations"&gt;
  &lt;/a&gt;
  Comments and recommendations
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Understand the use of Transit Gateway, VPN and Direct Connect.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Take Transit Gateway Workshops, this is an important service to execute AWS configurations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can use any router brand (for example: Forti, Checkpoint, etc.).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Activate VPC Flow Logs and review blocked and accepted traffic on VPCs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In my case I created a Sandbox VPC in the same region as the AWS account “Networking” to do tests and simulations with other VPC.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/blogs/networking-and-content-delivery/integrating-sub-1-gbps-hosted-connections-with-aws-transit-gateway/"&gt;https://aws.amazon.com/blogs/networking-and-content-delivery/integrating-sub-1-gbps-hosted-connections-with-aws-transit-gateway/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://aws.amazon.com/marketplace/pp/prodview-ga4qvij427bvw?sr=0-5&amp;amp;ref_=beagle&amp;amp;applicationId=AWSMPContessa"&gt;https://aws.amazon.com/marketplace/pp/prodview-ga4qvij427bvw?sr=0-5&amp;amp;ref_=beagle&amp;amp;applicationId=AWSMPContessa&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>vpn</category>
    </item>
    <item>
      <title>The Common Misconceptions About Machine Learning</title>
      <author>Abid</author>
      <pubDate>Tue, 09 Nov 2021 18:51:58 +0000</pubDate>
      <link>https://dev.to/kingabzpro/the-common-misconceptions-about-machine-learning-2keb</link>
      <guid>https://dev.to/kingabzpro/the-common-misconceptions-about-machine-learning-2keb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-common-misconceptions-about-machine-learning"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.kdnuggets.com/2021/11/common-misconception-about-machine-learning.html#.YYrCjMrY2HO.link"&gt;The Common Misconceptions About Machine Learning&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;There is a hype train going on about ML (Machine Learning), and many beginners are getting to be the victims of this hype train as they are getting in for the wrong reasons. Your professor will explain how getting a Ph.D. is necessary if you want to get better or your peers are telling you how to get a better GPU and IDE (Integrated Development Environment). When you started to learn from the online courses, you realized you needed a bigger dataset and proficiency in Python. After learning the required skills when you applied for a job, you realized that you need more than a few courses or certifications to make it. In the end, after getting the job, you realized that it is demanding work, and sometimes these jobs don’t pay well at the initial stages.&lt;/p&gt;

&lt;p&gt;This article will help you get through these disappointments and prepare you to face these problems. We will be learning a lot about the real-life problem faced by a beginner getting into the machine learning field.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is clear empirical evidence that you don’t need lots of &lt;strong&gt;math&lt;/strong&gt;, you don’t need lots of &lt;strong&gt;data&lt;/strong&gt;, and you don’t need lots of &lt;strong&gt;expensive computers&lt;/strong&gt;. — &lt;a href="https://www.linkedin.com/in/howardjeremy/"&gt;Jeremy Howard&lt;/a&gt; (&lt;a href="https://course.fast.ai/"&gt;Practical Deep Learning for Coders&lt;/a&gt;)*&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>machinelearning</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Flask Bootstrap Templates - Open-source and Free</title>
      <author>Sm0ke</author>
      <pubDate>Tue, 09 Nov 2021 18:51:32 +0000</pubDate>
      <link>https://dev.to/sm0ke/flask-bootstrap-templates-open-source-and-free-m2b</link>
      <guid>https://dev.to/sm0ke/flask-bootstrap-templates-open-source-and-free-m2b</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents a curated list with &lt;strong&gt;open-source templates&lt;/strong&gt; and starters crafted on top of &lt;strong&gt;Bootstrap and Flask&lt;/strong&gt;. For newcomers, &lt;strong&gt;Bootstrap&lt;/strong&gt; is the most popular CSS/JS framework for coding user interfaces and &lt;strong&gt;Flask&lt;/strong&gt; is a leading web framework written in Python. All &lt;strong&gt;Flask Templates&lt;/strong&gt; mentioned in this article can be downloaded directly from Github and used for unlimited hobby &amp;amp; commercial products.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://flask-material-dashboard.appseed-srv1.com/"&gt;Flask Template Bootstrap&lt;/a&gt; - &lt;strong&gt;Material Bootstrap 5&lt;/strong&gt; (demo)&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://adminlte-flask.appseed-srv1.com/"&gt;Flask Template Bootstrap&lt;/a&gt; - &lt;strong&gt;AdminLTE&lt;/strong&gt; (demo)&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://flask-material-kit.appseed-srv1.com/"&gt;Flask Template Bootstrap&lt;/a&gt; - &lt;strong&gt;Material Kit&lt;/strong&gt; (demo)&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://flask-soft-ui-dashboard.appseed-srv1.com/"&gt;Flask Template Bootstrap&lt;/a&gt; - &lt;strong&gt;Soft UI Dashboard&lt;/strong&gt; (demo)&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://flask-sb-admin.appseed-srv1.com/"&gt;Flask Template Bootstrap&lt;/a&gt; - &lt;strong&gt;SB Admin&lt;/strong&gt; (demo)&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://flask-datta-able.appseed-srv1.com/"&gt;Flask Template Bootstrap&lt;/a&gt; - &lt;strong&gt;Datta Able&lt;/strong&gt; (demo)&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://flask-coreui.appseed-srv1.com/"&gt;Flask Template Bootstrap&lt;/a&gt; - &lt;strong&gt;CoreUI&lt;/strong&gt; (demo)&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#whats-in-the-box"&gt;
  &lt;/a&gt;
  ✨ What's in the Box
&lt;/h2&gt;

&lt;p&gt;All starters being generated by AppSeed, share a common set of features and characteristics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Up-to-date dependencies&lt;/code&gt;: &lt;strong&gt;Flask 2.0.1&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;SCSS compilation&lt;/code&gt; via &lt;strong&gt;Gulp&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DBMS&lt;/code&gt;: SQLite, PostgreSQL (production)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DB Tools&lt;/code&gt;: SQLAlchemy ORM, Flask-Migrate (schema migrations)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Blueprints&lt;/strong&gt;, &lt;code&gt;Session-Based authentication&lt;/code&gt; (via flask_login)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Deployment scripts&lt;/code&gt;: &lt;strong&gt;Docker&lt;/strong&gt;, Gunicorn / Nginx, Heroku&lt;/li&gt;
&lt;li&gt;Support via Github (issues tracker) and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#what-is-bootstrap"&gt;
  &lt;/a&gt;
  ✨ What is Bootstrap
&lt;/h2&gt;

&lt;p&gt;In a single sentence, Bootstrap helps us to code faster and easier user interfaces by providing a set of HTML, and CSS templates for creating UI components like buttons, dropdowns, forms, alerts, modals, tabs, accordions, etc. Reusing the assets provided by the Bootstrap framework we might win time and also improve the quality of our end-product. Why using Bootstrap:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Easy to use&lt;/code&gt; - any developer with basic programming knowledge can use and combine Bootstrap components to prototype fast a web page.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Responsiveness&lt;/code&gt; - Bootstrap components are built to adapt and display properly on desktop and mobile devices with a wide range of resolutions.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Alive Community&lt;/code&gt; - this amazing framework is actively supported and versioned by a huge open-source community&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Cross-Browser Compatibility&lt;/code&gt; - Bootstrap keeps up the codebase with the latest standards for a smooth deployment on all well-known browsers: Chrome, Safari, IE, or Firefox.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#what-is-flask"&gt;
  &lt;/a&gt;
  ✨ What is Flask
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Flask&lt;/strong&gt; is an open-source web framework coded in Python using a lightweight codebase and flexible by design. By default, Flask is not coming with a database or any other hard dependency empowering the developers with total freedom in terms of used modules and how to structure the project. To use Flask and code a test application, Python3 should be properly installed in the workstation and accessible in the terminal window.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;flask
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command install &lt;code&gt;Flask&lt;/code&gt; using &lt;code&gt;PIP&lt;/code&gt;, the official package manager for Python. Once &lt;code&gt;Flask&lt;/code&gt; is installed, we can code a simple app and run it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt; 
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'Flask &amp;amp; Boostrap works great!'&lt;/span&gt; 

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we execute the above snippet and open &lt;code&gt;http://localhost:5000&lt;/code&gt; in the browser we should see the message &lt;strong&gt;Flask &amp;amp; Boostrap works great&lt;/strong&gt;. Even if not too much, we've just coded a usable Flask application that we can improve with more features and modules.&lt;/p&gt;

&lt;p&gt;For more than a simple Hello World let's get back to our list.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-template-material-2"&gt;
  &lt;/a&gt;
  ✨ Flask Template Material 2
&lt;/h2&gt;

&lt;p&gt;Designed for those who like bold elements and beautiful websites, Material Dashboard 2 is ready to help you create stunning websites and web apps. Material Dashboard 2 is built with over 60 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/flask-material-dashboard"&gt;Flask Dashboard Material&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-material-dashboard.appseed-srv1.com/"&gt;Flask Dashboard Material&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wdeLQfGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68rt4nri4odkql7lssdr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wdeLQfGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68rt4nri4odkql7lssdr.gif" alt="Flask Template Bootstrap - Material 2 Design." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-template-adminlte"&gt;
  &lt;/a&gt;
  ✨ Flask Template AdminLTE
&lt;/h2&gt;

&lt;p&gt;AdminLTE is one of the best open-source admin dashboard &amp;amp; control panel themes. Built on top of Bootstrap, AdminLTE provides a range of responsive, reusable, and commonly used components. Flask provides a lightweight codebase that can be easily extended to become an API, a simple web app, or a complex eCommerce platform.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/flask-dashboard-adminlte"&gt;AdminLTE Flask&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://adminlte-flask.appseed-srv1.com/"&gt;AdminLTE Flask&lt;/a&gt; - LIVE Deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OVUF4nfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/24vg1n9kwr6hlbdkf6rf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OVUF4nfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/24vg1n9kwr6hlbdkf6rf.png" alt="Flask Template Bootstrap - AdminLTE." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-template-material-kit"&gt;
  &lt;/a&gt;
  ✨ Flask Template Material Kit
&lt;/h2&gt;

&lt;p&gt;Material Kit is a Free Bootstrap 4 UI Kit with a fresh, new design inspired by Google's material design. This simple Flask project can be used to code beautiful websites with a modern design.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/flask-material-kit"&gt;Flask Material Kit&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-material-kit.appseed-srv1.com/"&gt;Flask Material Kit&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hocn9CWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxr0ko9chjoikwdxgjdf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hocn9CWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxr0ko9chjoikwdxgjdf.png" alt="Flask Template Bootstrap - Material Kit 2." width="880" height="440"&gt;&lt;/a&gt;  &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-template-soft-dashboard"&gt;
  &lt;/a&gt;
  ✨ Flask Template Soft Dashboard
&lt;/h2&gt;

&lt;p&gt;Designed for those who like bold elements and beautiful websites, Soft UI Dashboard is ready to help you create stunning websites and web apps. Soft UI Dashboard is built with over 70 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/flask-soft-ui-dashboard"&gt;Flask Soft UI Dashboard&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-soft-ui-dashboard.appseed-srv1.com/"&gt;Flask Soft UI Dashboard&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jTG6Ac7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2eja0bk6ls1wo138z21c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jTG6Ac7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2eja0bk6ls1wo138z21c.png" alt="Flask Template Bootstrap - Soft UI Dashboard." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-template-sb-admin"&gt;
  &lt;/a&gt;
  ✨ Flask Template SB Admin
&lt;/h2&gt;

&lt;p&gt;SB Admin is a free, open-source, Bootstrap 4 based admin theme perfect for quickly creating dashboards and web applications. Its modern design style with subtle shadows and a card-based layout could be described as flat material and is inspired by the principles of material design along with a simple, attractive color system. - Design provided by StartBootstrap.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/flask-dashboard-sb-admin"&gt;Flask SB Admin&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-sb-admin.appseed-srv1.com/"&gt;Flask SB Admin&lt;/a&gt; - LIVE Deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PoHWsrSE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13ptbgj979rreq1otpdz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PoHWsrSE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13ptbgj979rreq1otpdz.png" alt="Flask Template Bootstrap - SB Admin." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-template-datta-able"&gt;
  &lt;/a&gt;
  ✨ Flask Template Datta Able
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Datta Able&lt;/strong&gt; Bootstrap Lite is the most stylized Bootstrap 4 Lite Admin Template, around all other Lite/Free admin templates in the market. It comes with high feature-rich pages and components with fully developer-centric code.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/flask-datta-able"&gt;Datta Able Flask&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-datta-able.appseed-srv1.com/"&gt;Datta Able Flask&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ypRNMZde--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ak105o9wtnmzh2ey1fgb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ypRNMZde--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ak105o9wtnmzh2ey1fgb.png" alt="Flask Template Bootstrap - Datta Able Design." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-template-coreui"&gt;
  &lt;/a&gt;
  ✨ Flask Template CoreUI
&lt;/h2&gt;

&lt;p&gt;CoreUI is an Open Source Bootstrap Admin Template. But CoreUI is not just another Admin Template. It goes way beyond hitherto admin templates thanks to transparent code and file structure. And if that's not enough, let’s just add that CoreUI consists bunch of unique features and over 1000 high-quality icons.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/flask-dashboard-coreui"&gt;CoreUI Flask&lt;/a&gt; - source code&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-coreui.appseed-srv1.com/"&gt;CoreUI Flask&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_HvEQ3B_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fisommi34mi2p4u1hs9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_HvEQ3B_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fisommi34mi2p4u1hs9.png" alt="Flask Template Bootstrap - CoreUI Design." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, feel free to access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;✨ AppSeed for &lt;a href="https://appseed.us/support"&gt;Support&lt;/a&gt; and more &lt;a href="https://appseed.us/admin-dashboards/flask"&gt;Flask&lt;/a&gt; Starters&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Free Dashboards&lt;/a&gt; - crafted in Flask, Django, and &lt;a href="https://appseed.us/apps/react"&gt;React&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>flask</category>
      <category>bootstrap</category>
      <category>opensource</category>
    </item>
    <item>
      <title>GitHub Actions Hackathon 2021 - Automate Password Rotation using Github Actions</title>
      <author>Marcel.L</author>
      <pubDate>Tue, 09 Nov 2021 18:44:54 +0000</pubDate>
      <link>https://dev.to/pwd9000/github-actions-hackathon-2021-automate-password-rotation-using-github-actions-1kbb</link>
      <guid>https://dev.to/pwd9000/github-actions-hackathon-2021-automate-password-rotation-using-github-actions-1kbb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#bulb-how-to-rotate-vm-passwords-using-github-actions-and-azure-key-vault"&gt;
  &lt;/a&gt;
  💡 How to rotate VM passwords using Github Actions and Azure Key Vault
&lt;/h2&gt;

&lt;p&gt;I decided to submit one of my github Actions hacks I did earlier this year as part of this years &lt;strong&gt;ActionsHackathon21&lt;/strong&gt; contest.&lt;br&gt;&lt;br&gt;
In my original post I demonstrate how we can implement a zero-touch fully automated solution under 15 minutes to rotate all our virtual machines local administrator passwords on a schedule by using a Github Actions workflow and a centrally managed Azure key vault. (The technique/concept used in the tutorial is not limited to only Virtual machines. The same concept can be used and applied to almost anything that requires secret rotation).&lt;/p&gt;

&lt;p&gt;Here is the link to the original post, enjoy!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pwd9000" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Amb4rEJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--L_SDLOmq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620034/93be2c72-3a13-478e-8af1-a4bedc1b2331.jpeg" alt="pwd9000"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pwd9000/automate-password-rotation-with-github-and-azure-412a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Automate password rotation with Github and Azure&lt;/h2&gt;
      &lt;h3&gt;Marcel.L ・ May 17 ・ 10 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#azure&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#submission-category-wacky-wildcards"&gt;
  &lt;/a&gt;
  Submission Category: Wacky Wildcards
&lt;/h2&gt;

&lt;p&gt;😳💥🔥 I know.... ITSec Ops workflows are totally WACKY! 🔥💥😳&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Pwd9000-ML"&gt;
        Pwd9000-ML
      &lt;/a&gt; / &lt;a href="https://github.com/Pwd9000-ML/Azure-VM-Password-Management"&gt;
        Azure-VM-Password-Management
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This repository is used to maintain Azure VM local admin passwords using an Azure Key vault
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Azure-VM-Password-Management&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/Pwd9000-ML/Azure-VM-Password-Management/actions/workflows/rotate-vm-passwords.yaml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ruczhozb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Pwd9000-ML/Azure-VM-Password-Management/actions/workflows/rotate-vm-passwords.yaml/badge.svg" alt="Update Azure VM passwords"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository hosts a github workflow which is used to maintain Azure VM local admin passwords using an Azure Key vault.
See my &lt;a href="https://dev.to/pwd9000/automate-password-rotation-with-github-and-azure-412a" rel="nofollow"&gt;blog post&lt;/a&gt; for full details 😄&lt;/p&gt;
&lt;p&gt;Zero-touch fully automated password rotation using Github workflows and Azure key vault&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Pwd9000-ML/Azure-VM-Password-Management"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Pwd9000-ML/Azure-VM-Password-Management/blob/master/README.md"&gt;README&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pwd9000-ML/Azure-VM-Password-Management/blob/master/.github/workflows/rotate-vm-passwords.yaml"&gt;WORKFLOW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pwd9000-ML/Azure-VM-Password-Management/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#author"&gt;
  &lt;/a&gt;
  &lt;em&gt;Author&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Like, share, follow me on: 🐙 &lt;a href="https://github.com/Pwd9000-ML"&gt;GitHub&lt;/a&gt; | 🐧 &lt;a href="https://twitter.com/pwd9000"&gt;Twitter&lt;/a&gt; | 👾 &lt;a href="https://www.linkedin.com/in/marcel-l-61b0a96b/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__620034"&gt;
  
    .ltag__user__id__620034 .follow-action-button {
      background-color: #0cbb58 !important;
      color: #000000 !important;
      border-color: #0cbb58 !important;
    }
  
    &lt;a href="/pwd9000" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Amb4rEJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--L_SDLOmq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620034/93be2c72-3a13-478e-8af1-a4bedc1b2331.jpeg" alt="pwd9000 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/pwd9000"&gt;Marcel.L&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/pwd9000"&gt;Cloud Solutions &amp;amp; DevOps Architect.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>actionshackathon21</category>
      <category>actions</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>The ephemeral miniconf - It is coming</title>
      <author>Tib</author>
      <pubDate>Tue, 09 Nov 2021 18:14:56 +0000</pubDate>
      <link>https://dev.to/thibaultduponchelle/the-ephemeral-miniconf-it-is-coming-3b32</link>
      <guid>https://dev.to/thibaultduponchelle/the-ephemeral-miniconf-it-is-coming-3b32</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b3q3bwvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6m0yy6hfkjsp0k45qht6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b3q3bwvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6m0yy6hfkjsp0k45qht6.jpg" alt="It is coming" width="880" height="586"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I stayed a bit quiet these past days about &lt;strong&gt;The ephemeral miniconf&lt;/strong&gt; but you can't imagine how much seriously I'm preparing the event. &lt;/p&gt;

&lt;p&gt;For those who are not aware, &lt;strong&gt;The ephemeral miniconf&lt;/strong&gt; is a Perl and Raku free and online miniconf!&lt;/p&gt;

&lt;p&gt;I'm taking it cool but I'm not this kind of guy to take it cool 😀&lt;/p&gt;

&lt;p&gt;I'm this kind of guy to &lt;em&gt;meticulously&lt;/em&gt; repeat and try so I get no surprise (at least I try to reduce the chances it happens to the maximum).&lt;/p&gt;

&lt;p&gt;I will not give too much details now, since I could do a nice "making of" blog post, maybe after the event (?!) who knows 😀&lt;/p&gt;

&lt;p&gt;Everything is going well, you should really book your calendar for Thursday 18th of November (next week).&lt;/p&gt;

&lt;p&gt;Check &lt;a href="https://everytimezone.com/s/ec3d1b5c"&gt;the timezone planner&lt;/a&gt; or see this picture:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sjjKODO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09k7g36n46sheyj0crlw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sjjKODO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09k7g36n46sheyj0crlw.png" alt="Timezone planner The ephemeral miniconf" width="880" height="410"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's in the morning if you're in US, in the afternoon if you're in Europe and very late if you're in Asia (sorry).&lt;/p&gt;

&lt;p&gt;The planning is still the same except that some talks have changed their title:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ct3rAACw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ai4k0wk1swcgobuq27uj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ct3rAACw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ai4k0wk1swcgobuq27uj.png" alt="The ephemeral miniconf" width="880" height="588"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(it could change a bit inside the range, like shifting talks, but at the moment here it is)&lt;/p&gt;

&lt;p&gt;I'm also preparing some surprises that I don't want to reveal for now.&lt;/p&gt;

&lt;p&gt;So my message is basically, it's coming, book you calendar and I'm looking forward to see you at &lt;strong&gt;The ephemeral miniconf&lt;/strong&gt;! 👍&lt;/p&gt;

</description>
      <category>perl</category>
      <category>raku</category>
      <category>miniconf</category>
    </item>
    <item>
      <title>Tips for beginner programmers from a professional</title>
      <author>Vadim Kolobanov</author>
      <pubDate>Tue, 09 Nov 2021 18:09:20 +0000</pubDate>
      <link>https://dev.to/abstract/tips-for-beginner-programmers-from-a-professional-g11</link>
      <guid>https://dev.to/abstract/tips-for-beginner-programmers-from-a-professional-g11</guid>
      <description>&lt;p&gt;Hello everyone, I have accumulated in my observations a lot of useful tips on how to start learning programming, how to move on. I will tell you from my experience what you can do and what you can't do. How and where to go next if you get bored or you just get lost. I am sure that each of them will help both beginners and confident programmers. You will still get this experience, I'm just giving you a chance to do it earlier and not on your mistakes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Don't learn programming on other people's projects by video. This is a very bad approach. A person who shows his own development may not know the right solution and teach it to others, and you will not even know about it, because you will remember the wrong approach.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not try to create your own project that you came up with during the training. You will learn only what is useful to you for it, but you will know programming very narrowly. I advise you to learn the language using simple mathematical examples or problems. You can find good practice and elegant solutions on sites like Hackerrank or CodeWars. Their people arrange puzzles according to difficulty levels, and if you have solved them (or not), you can see what the most optimal solution will be. It helps to learn how to act effectively and solve other people's problems, and in the comments, you will see a lot of ingenious solutions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Try to learn consistently. Even if you are not interested in some topic in the language - force yourself to understand it. not to learn by heart, but to understand what its idea is, what is the meaning of this functionality&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pay more attention to books, not articles or videos. In the books, all explanations are structured and go sequentially. Otherwise, you will just learn pieces of the same pie, after a week you will not be able to reproduce it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Try to reproduce any new function or information in the code yourself. Do it yourself, what have you learned. You've learned the list - make it up, play with it. Come up with a simple idea of where to use it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not burn out. If you get bored, just switch to another idea, but be sure to come back in a few days. It helps.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Communicate with the community. Look for people with common interests. Alone you may never find out what other people know&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don't close in one language guys! Try to look around your tongue. Often people find themselves not in what they started to learn. They find their interest in what they stumbled upon in the process of the main study. A good programmer knows several languages or technologies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not follow someone's training on the heels. When learning something new, try to use this information yourself and not rewrite the example from the video.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don't learn to program for the money. Programming is your hobby, it's your entertainment, your favorite activity in the evening after work. Money should be a reward for effort, not the result of work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don't be afraid to offer yourself in other people's ideas and projects. If you already know the basics of programming well but are in doubt, remember - on the other hand, the same as you. He is strong in one thing, but maybe he is weak to your strong side. You will never know how strong you are if you are not appreciated by others.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Look for a way to motivate yourself! If you feel that you have lost interest - start a new project, come up with an interesting idea, write an article about your skills. Try yourself in Freelancing. Don't be afraid to screw up. You won't get anything if you don't do anything. Close your eyes and break into this world of programming with a run if you're scared)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#put-on-heart-if-you-liked-it-and-you-learned-something-new"&gt;
  &lt;/a&gt;
  Put on Heart if you liked it and you learned something new!
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#you-can-also-follow-me-to-receive-notifications-about-new-interesting-articles"&gt;
  &lt;/a&gt;
  You can also follow &lt;a href="https://dev.to/vadimkolobanov"&gt;ME&lt;/a&gt; to receive notifications about new interesting articles.
&lt;/h3&gt;




&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#faq"&gt;
  &lt;/a&gt;
  FAQ
&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Python?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Look into the following series:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/vadimkolobanov/series/15329"&gt;Learning Python&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/vadimkolobanov/series/15349"&gt;Step by Step to Junior&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/vadimkolobanov/series/15331"&gt;Ideas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Of course I am ready to participate in the training. The big difficulty is that English is not my native language and it will be possible to communicate through a translator&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Would you like to collaborate on our organization?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have interesting ideas, we will be happy to invite your writing from our organization. Write in private messages or in social networks below&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect to me on&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.facebook.com/neo.skarynsky"&gt;Write me on Face....oh...Meta&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/decodesperato"&gt;My Twitter&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Discord: Donovan_Adams(Вадим)#5875&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-responsive-mark-your-interest-in-others-and-others-will-mark-you"&gt;
  &lt;/a&gt;
  Be responsive! Mark your interest in others and others will mark you!
&lt;/h2&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Keyboard shortcuts which will make sure you don't have to touch your mouse while writing code</title>
      <author>Shubhra Agarwal</author>
      <pubDate>Tue, 09 Nov 2021 17:24:22 +0000</pubDate>
      <link>https://dev.to/shubhracodes/keyboard-shortcuts-which-will-make-sure-you-dont-have-to-touch-your-mouse-while-writing-code-1i58</link>
      <guid>https://dev.to/shubhracodes/keyboard-shortcuts-which-will-make-sure-you-dont-have-to-touch-your-mouse-while-writing-code-1i58</guid>
      <description>&lt;p&gt;There are times when you might feel like reaching for the mouse to execute a certain task. But we all know that shifting our hand to and fro from the mouse reduces our productivity. So, &lt;/p&gt;

&lt;p&gt;Here are 10 keyboard shortcuts that will help you to speed up your coding process 🧵 &lt;/p&gt;

&lt;p&gt;These shortcuts work with a majority of code editors and IDEs like VS Code, Atom, Sublime etc. If these doesn't work for you, make sure to check the settings of you editor.&lt;/p&gt;

&lt;p&gt;Let's Begin 👇 &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#copycutpaste-entire-line"&gt;
  &lt;/a&gt;
  1️⃣ Copy/Cut/Paste Entire Line
&lt;/h2&gt;

&lt;p&gt;You might be aware about Ctrl+C/X/V but there's a trick to it, if you don't select any portion in the line, your editor will copy/cut/paste the whole line including the line break.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comment-and-uncomment-lines"&gt;
  &lt;/a&gt;
  2️⃣ Comment and Uncomment Lines
&lt;/h2&gt;

&lt;p&gt;Comments are extremely handy for us, but instead of going to each and every line individually and commenting it, just highlight whatever lines you want commented and then hit&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + /&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command will comment and uncomment the entire line&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#search-for-a-file-in-your-file"&gt;
  &lt;/a&gt;
  3️⃣ Search for a file in your file
&lt;/h2&gt;

&lt;p&gt;Navigating through a project can get hard, especially when the project is pretty big. You can just use&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + P&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;to search for any file in your whole project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#search-for-a-keyword-in-a-file-and-in-the-whole-project"&gt;
  &lt;/a&gt;
  4️⃣ Search for a keyword in a file and in the whole project
&lt;/h2&gt;

&lt;p&gt;Searching for a keyword inside a file can be done using &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + F&lt;/code&gt; and then pressing Enter will let you navigate through the keywords&lt;/p&gt;

&lt;p&gt;To search in the whole project,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + Shift + F&lt;/code&gt; is used. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#indent-and-unindent-code"&gt;
  &lt;/a&gt;
  5️⃣ Indent and Un-indent code
&lt;/h2&gt;

&lt;p&gt;Select the code block that you need to indent and then press the Tab key to indent the whole code block. &lt;/p&gt;

&lt;p&gt;Similarly, to un-indent the code block, select it and press Shift + Tab&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-file"&gt;
  &lt;/a&gt;
  6️⃣ Create a new file
&lt;/h2&gt;

&lt;p&gt;This might not be the most useful shortcut in bigger projects but you can create new files using &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + N&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-line"&gt;
  &lt;/a&gt;
  7️⃣ Create a new line
&lt;/h2&gt;

&lt;p&gt;Usually, when we have to create a new line, we place our cursor at the end of the line and press Enter, but pressing &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + Enter&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;will create a new line just below the line where your cursor is present.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#navigate-across-the-whole-world-rather-than-a-character-at-a-time"&gt;
  &lt;/a&gt;
  8️⃣ Navigate across the whole world rather than a character at a time
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Ctrl + Arrow Key&lt;/code&gt; will allow you to navigate across a whole word at a time as compared to just a character&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + Backspace&lt;/code&gt; will allow you to delete a whole word at a time&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#highlighting-characters-and-words"&gt;
  &lt;/a&gt;
  9️⃣ Highlighting characters and words
&lt;/h2&gt;

&lt;p&gt;Holding down Shift key and pressing allow keys will allow you to highlight characters.&lt;/p&gt;

&lt;p&gt;Similarly,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Shift + Ctrl + Arrow keys&lt;/code&gt; will allow you to highlight a whole word at a time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-og-shortcuts"&gt;
  &lt;/a&gt;
  1️⃣ 0️⃣ The OG Shortcuts
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Ctrl + S&lt;/code&gt; -&amp;gt; Save the file&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + A&lt;/code&gt; -&amp;gt; Select All&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + Z&lt;/code&gt; -&amp;gt; Undo&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + Y&lt;/code&gt; -&amp;gt; Redo&lt;/p&gt;

&lt;p&gt;These are all the shortcuts you'll need to speed up your coding. Initially, it might be a little bit difficult to use them regularly.&lt;/p&gt;

&lt;p&gt;You need to use these shortcuts consciously and in no time they'll get into your habit without you even knowing.&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Peculiaridades do JS. Que não são erros! Nem esquisitice! </title>
      <author>Uriel dos Santos Souza</author>
      <pubDate>Tue, 09 Nov 2021 17:20:22 +0000</pubDate>
      <link>https://dev.to/urielsouza29/peculiaridades-do-js-que-nao-sao-erros-nem-esquisitice-3c40</link>
      <guid>https://dev.to/urielsouza29/peculiaridades-do-js-que-nao-sao-erros-nem-esquisitice-3c40</guid>
      <description>&lt;p&gt;JS é uma linguagem interessante! &lt;/p&gt;

&lt;p&gt;Além das coisas já bem conhecidas(espero)!&lt;br&gt;
Que funções são valores! &lt;br&gt;
O fato de funções serem tratadas como valores!&lt;br&gt;
Funções serem cidadãos de primeira classe! Entre outras coisas da parte funcional do JS!&lt;/p&gt;

&lt;p&gt;Mas hoje quero mostrar algo sobre que tudo no JS é objeto!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;teste&lt;/span&gt;&lt;span class="p"&gt;(){}&lt;/span&gt;

&lt;span class="nx"&gt;teste&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;testeinterno&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;oi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;teste&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;testeinterno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 'oi'&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chave&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;teste&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chave&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//"testeinterno"&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Colocamos uma propriedade na função? &lt;br&gt;
Como assim? &lt;br&gt;
Isso acontece pq tudo no JS é objeto. &lt;br&gt;
Inclusive uma função! &lt;br&gt;
E como um bom objeto no JS você pode colocar propriedades nele! &lt;br&gt;
Não é um erro! Nem uma esquisitice. &lt;/p&gt;

&lt;p&gt;Vamos ver um array! Que é um objeto :P&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;testar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;09&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;//array normal! &lt;/span&gt;

&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;oi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;neh&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bah&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// como ele é objeto! Podemos por propriedades //e valores!&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chave&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;chave&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//"0" "1" "oi" "1.5" "-1"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// ["testar", "09"]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 'oi'&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;// 'bah'&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;//"bahhello"&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Isso e outras coisas podem aparecer pra você em algum momento! &lt;br&gt;
Por enquanto é isso! &lt;br&gt;
Em breve quero escrever mais textos sobre isso e complementar este! &lt;br&gt;
Brinque no JSBIN &lt;/p&gt;

&lt;p&gt;&lt;a href="https://jsbin.com/fuxazuniqo/1/edit?js,console"&gt;https://jsbin.com/fuxazuniqo/1/edit?js,console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=n5uiJr-v0KQ"&gt;https://www.youtube.com/watch?v=n5uiJr-v0KQ&lt;/a&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Working_with_Objects"&gt;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Working_with_Objects&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>braziliandevs</category>
    </item>
    <item>
      <title>Build your own component library with Svelte</title>
      <author>Matt Angelosanto</author>
      <pubDate>Tue, 09 Nov 2021 17:15:46 +0000</pubDate>
      <link>https://dev.to/logrocket/build-your-own-component-library-with-svelte-510l</link>
      <guid>https://dev.to/logrocket/build-your-own-component-library-with-svelte-510l</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/madushikaperera/"&gt;Madushika Perera&lt;/a&gt;&lt;/strong&gt; ✏️&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Svelte is an open source JavaScript component framework for building web applications. Svelte takes a different approach than all the existing web frameworks like React, Angular, and Vue, which follow declarative, state-driven code.&lt;/p&gt;

&lt;p&gt;The Svelte bundle size is significantly smaller than most frameworks because it doesn’t have any dependencies (only dev dependencies are available in the &lt;code&gt;package.js&lt;/code&gt; file). Due to these features, Svelte has become &lt;a href="https://insights.stackoverflow.com/survey/2021#section-most-loved-dreaded-and-wanted-web-frameworks"&gt;the most loved, dreaded, and wanted web framework in 2021&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Due to this popularity, devs have introduced several awesome UI component frameworks/libraries like &lt;a href="https://sveltematerialui.com/"&gt;Svelte Material UI&lt;/a&gt;, &lt;a href="https://smeltejs.com/"&gt;Smelt&lt;/a&gt;, &lt;a href="https://svelte-materialify.vercel.app/"&gt;Svelte Materialify&lt;/a&gt; and &lt;a href="https://sveltestrap.js.org/"&gt;Sveltestrap&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But what would it be like to build your own Svelte component library? Fortunately, there are several templates that you could start with, like the official &lt;a href="https://github.com/sveltejs/component-template"&gt;template provided by Svelte&lt;/a&gt; and &lt;a href="https://github.com/YogliB/svelte-component-template"&gt;Svelte 3 Component Template&lt;/a&gt;, which are considered the go-to for building your own component library.&lt;/p&gt;

&lt;p&gt;However, these templates are highly opinionated, and you may not be able to see the underlying tools and techniques required to build the component library itself. In this article, we are going to learn how to build a component library on our own using Svelte’s new SvelteKit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-sveltekit"&gt;
  &lt;/a&gt;
  What is SvelteKit?
&lt;/h2&gt;

&lt;p&gt;SvelteKit can be considered the successor to &lt;a href="https://sapper.svelte.dev/"&gt;Sapper&lt;/a&gt; or NextJS for Svelte. It is packed with tons of cool features, like server side rendering, routing, and code splitting.&lt;/p&gt;

&lt;p&gt;SvelteKit uses &lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt; under the hood, which is quite surprising, as Sapper and most tools are developed using &lt;a href="https://www.snowpack.dev/"&gt;Snowpack&lt;/a&gt;. Vite 2 is framework-agnostic and designed with SSR at its core.&lt;/p&gt;

&lt;p&gt;SvelteKit is still in beta, but it’s very stable, and there are many projects in production using this framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-sveltekit"&gt;
  &lt;/a&gt;
  Getting started with SvelteKit
&lt;/h2&gt;

&lt;p&gt;For this project, we will use a skeleton project as the base for our library.&lt;/p&gt;

&lt;p&gt;Let’s initialize the project using SvelteKit. You will need to execute the following command and select the options given by the Svelte:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FWVSQHrf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Initializing-sveltekit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FWVSQHrf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Initializing-sveltekit.png" alt="Initializing sveltekit" width="730" height="221"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integrate-storybook"&gt;
  &lt;/a&gt;
  Integrate Storybook
&lt;/h2&gt;

&lt;p&gt;It’s time to integrate Storybook, an open source tool for building UI components and pages in isolation. It streamlines UI development and testing, which is ideal for our component library development. It allows us to build components without worrying about the configurations or development server in SvelteKit.&lt;/p&gt;

&lt;p&gt;In your SvelteKit project root, execute the following command. This will identify and generate the necessary configurations for Svelte:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx sb init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may face some issues when setting up Storybook with a SvelteKit project. Storybook will throw an error when you start the server, like so:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A_N_6oJd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/storybook-error.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A_N_6oJd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/storybook-error.png" alt="storybook error" width="730" height="121"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This issue is thrown due to the property of the &lt;code&gt;“type”:”module”&lt;/code&gt; under the &lt;code&gt;package.json&lt;/code&gt; file, which means we cannot use ESM-required syntax.&lt;/p&gt;

&lt;p&gt;To overcome this, you can make a small tweak in the Storybook configuration files. Simply change the extension of your Svelte Storybook configuration files from &lt;code&gt;.js&lt;/code&gt; to &lt;code&gt;.jcs&lt;/code&gt; and inside the &lt;code&gt;main.cjs&lt;/code&gt; file, make sure you comment out the &lt;code&gt;svelteOptions&lt;/code&gt; property, which consists of a &lt;code&gt;require&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SYHP3rr8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/storybook-configuration-files.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SYHP3rr8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/storybook-configuration-files.png" alt="Storybook configuration files" width="378" height="694"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After making the above tweaks, you can run the command below to start the Storybook server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run storybook
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will open up a new tab in the browser that loads the Storybook app for our SvelteKit project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CBPw0I2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Storybook-welcome-page.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CBPw0I2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Storybook-welcome-page.png" alt="Storybook welcome page" width="730" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#factors-to-consider-before-building-components"&gt;
  &lt;/a&gt;
  Factors to consider before building components
&lt;/h2&gt;

&lt;p&gt;Consider the factors below before building components, as they will help us follow the proper guidelines.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#props-usage"&gt;
  &lt;/a&gt;
  Props usage
&lt;/h3&gt;

&lt;p&gt;The word “props'' is common to all major frameworks and libraries like Vue and React. Props pass data to child components or enable component communication.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#slots-and-raw-slots-endraw-usage"&gt;
  &lt;/a&gt;
  Slots and &lt;code&gt;$$slots&lt;/code&gt; usage
&lt;/h3&gt;

&lt;p&gt;Even though props allow you to reuse components by passing data, it will bring a strict parent-child relationship. This means its HTML content will always control the child, and the parent is only capable of passing different values, so components can’t be composed together with props.&lt;/p&gt;

&lt;p&gt;This is where slots come in handy. Slots maintain reusability while allowing the parent component to control the content of the child, including the HTML elements inside it. By adding &lt;code&gt;&amp;lt;slots/&amp;gt;&lt;/code&gt; tags, you can pass down HTML or markdown from the parents, not just the values.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#avoiding-nested-and-global-css"&gt;
  &lt;/a&gt;
  Avoiding nested and global CSS
&lt;/h3&gt;

&lt;p&gt;When building components, avoid nested and global CSS because they will not be scoped, which means they will leak through to all child components.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#handling-events"&gt;
  &lt;/a&gt;
  Handling events
&lt;/h3&gt;

&lt;p&gt;When building components, make sure you add or handle the proper events. You will have to use a Svelte API called &lt;code&gt;createEventDispatcher&lt;/code&gt;, which can be useful when dispatching events.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-components"&gt;
  &lt;/a&gt;
  Creating components
&lt;/h2&gt;

&lt;p&gt;Let’s create some components for our library. First, remove the default &lt;code&gt;story&lt;/code&gt; folder generated by Storybook, and create a &lt;code&gt;stories&lt;/code&gt; file under the &lt;code&gt;src&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Next, we will focus on the project structure. Create a directory called &lt;code&gt;lib&lt;/code&gt; under the &lt;code&gt;src&lt;/code&gt; directory. This &lt;code&gt;lib&lt;/code&gt; directory is a special directory for SvelteKit because it will allow us to use a special notation called &lt;a href="https://kit.svelte.dev/docs#modules-%24lib"&gt;&lt;code&gt;$lib&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;$lib&lt;/code&gt; can be used to alias the &lt;code&gt;src&lt;/code&gt;/&lt;code&gt;lib&lt;/code&gt; directory and helps us to access components and utility modules without using relative paths like &lt;code&gt;../../../../ .&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#button-component"&gt;
  &lt;/a&gt;
  Button component
&lt;/h3&gt;

&lt;p&gt;Now let’s create our button component under the &lt;code&gt;lib&lt;/code&gt; directory called &lt;code&gt;Button.svelte&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
  import { createEventDispatcher } from 'svelte';

  export let primary = false;
  export let size = 'medium';
  export let label = '';

  const dispatch = createEventDispatcher();
   /**
   * Button click handler
   */
   function onClick(event) {
    dispatch('click', event);
  }
&amp;lt;/script&amp;gt;

&amp;lt;button
  type="button"
  class={['sveltio-button', `sveltio-button--${size}`,
   `sveltio-button--${primary?'primary':'secondary'}`].join(' ')
   }
  on:click={onClick}&amp;gt;
  {label}
&amp;lt;/button&amp;gt;

&amp;lt;style&amp;gt;
.sveltio-button {
    font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-weight: 700;
    border: 0;
    border-radius: 3px;
    cursor: pointer;
    display: inline-block;
    line-height: 1;
}
.sveltio-button--primary {
    color: #1b116e;
    background-color: #6bedb5;
}
.sveltio-button--secondary {
    color: #ffffff;
    background-color: #1b116e;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;
}
.sveltio-button--small {
    font-size: 12px;
    padding: 10px 16px;
}
.sveltio-button--medium {
    font-size: 14px;
    padding: 11px 20px;
}
.sveltio-button--large {
    font-size: 16px;
    padding: 12px 24px;
}

.sveltio-button--primary :hover {
    color: #1b116e;
    background-color: #55bd90;
}

.sveltio-button--primary :active {
    color: #1b116e;
    background-color: #55bd90;
    border: solid 2px #1b116e;
}

.sveltio-button--primary :disabled {
    color: #1b116e;
    opacity: 0.5;
    background-color: #6bedb5;
}

.sveltio-button--secondary :hover {
    color: #1b116e;
    background-color: #55bd90;
}

.sveltio-button--secondary :active {
    color: #1b116e;
    background-color: #6bedb5;
    border: solid 2px #1b116e;
}

.sveltio-button--secondary :disabled {
    color: #ffffff;
    opacity: 0.5;
    background-color: #1b116e;
}

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we have added styles in the same file under the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;

&lt;p&gt;Now let’s create a stories file for our Button component called &lt;code&gt;Button.stories.svelte&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;script&amp;gt;
    import { Meta, Template, Story } from "@storybook/addon-svelte-csf";
    import Button from "./Button.svelte";
  &amp;lt;/script&amp;gt;

  &amp;lt;Meta
    title="Sveltio/Button"
    component={Button}
    argTypes={{
      label: { control: "text" },
      primary: { control: "boolean" },
      backgroundColor: { control: "color" },
      size: {
        control: { type: "select", options: ["small", "medium", "large"] },
      },
      onClick: { action: "onClick" },
    }}
  /&amp;gt;

  &amp;lt;Template let:args&amp;gt;
    &amp;lt;Button {...args} on:click={args.onClick} /&amp;gt;
  &amp;lt;/Template&amp;gt;

  &amp;lt;Story
    name="Primary"
    args={{
      primary: true,
      label: "Button",
    }}
  /&amp;gt;

  &amp;lt;Story
    name="Secondary"
    args={{
      label: "Button",
    }}
  /&amp;gt;
  &amp;lt;Story
    name="Large"
    args={{
      size: "large",
      label: "Button",
    }}
  /&amp;gt;

  &amp;lt;Story
    name="Small"
    args={{
      size: "small",
      label: "Button",
    }}
  /&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we have created several templates for our button component by passing several arguments to the templates.&lt;/p&gt;

&lt;p&gt;Now in the Storybook window, you will be able to see a button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4SF1IKdP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Storybook-button.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4SF1IKdP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Storybook-button.png" alt="Storybook button" width="730" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can switch from the &lt;strong&gt;primary&lt;/strong&gt; button to the &lt;strong&gt;secondary&lt;/strong&gt; button from the controllers provided below. You can also clearly view the types of events that are available for this custom component from the &lt;strong&gt;Actions&lt;/strong&gt; logs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#toggle-component"&gt;
  &lt;/a&gt;
  Toggle component
&lt;/h3&gt;

&lt;p&gt;Now let’s create a toggle component. Start by creating the &lt;code&gt;Toggle.svelte&lt;/code&gt; and &lt;code&gt;Toggle.stories.svelte&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Toggle.svelte&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    export let label = '';
    export let isToggled = false;
    export let style = '';
&amp;lt;/script&amp;gt;

&amp;lt;label {style} class="sveltio-toggle-label"&amp;gt;
    &amp;lt;input type="checkbox" class="sveltio-input" bind:checked={isToggled} /&amp;gt;
    &amp;lt;div class="sveltio-toggle" /&amp;gt;
    {label}
&amp;lt;/label&amp;gt;

&amp;lt;style&amp;gt;
    .sveltio-toggle-label {
    --width: 40px;
    --height: calc(var(--width) / 2);
    --radius: calc(var(--height) / 2);
    display: flex;
}

.sveltio-toggle {
    position: relative;
    width: var(--width);
    height: var(--height);
    border-radius: var(--radius);
    border: solid 1px #c2c2c3;
    transition: background-color 0.3s ease;
    margin-right: 5px;
    background-color: var(--toggleBackgroundColor, #c2c2c3);
}

.sveltio-toggle::after {
    content: '';
    position: absolute;
    top: -1px;
    left: -1px;
    height: var(--height);
    width: var(--height);
    border-radius: var(--radius);
    background-color: var(--toggleButtonColor, #ffffff);
    box-shadow: 2px 4px 6px rgba(0, 0, 0, 0.3);
    transition: transform 0.3s ease;
}
.sveltio-input {
    display: none;
}

.sveltio-input:checked + .toggle {
    background-color: var(--toggleCheckedBackgroundColor, #1b116e);
}

.sveltio-input:checked + .toggle::after {
    transform: translate3d(100%, 0, 0);
}

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Toggle.stories.svelte&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    import { Meta, Template, Story } from "@storybook/addon-svelte-csf";
    import Toggle from "./Toggle.svelte";
  &amp;lt;/script&amp;gt;

  &amp;lt;Meta
    title="Sveltio/Toggle"
    component={Toggle}
    argTypes={{
      label: { control: "text" },
      primary: { control: "boolean" },
      backgroundColor: { control: "color" },
      size: {
        control: { type: "select", options: ["small", "medium", "large"] },
      },
      onClick: { action: "onClick" },
    }}
  /&amp;gt;

  &amp;lt;Template let:args&amp;gt;
    &amp;lt;Toggle {...args} on:click={args.onClick} /&amp;gt;
  &amp;lt;/Template&amp;gt;

  &amp;lt;Story
    name="Labeled"
    args={{
      primary: true,
      label: "Check me",
    }}
  /&amp;gt;

  &amp;lt;Story
    name="Blank"
    args={{
      label: "",
    }}
  /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's see how this component will be rendered in Storybook. This story consists of Two templates called &lt;strong&gt;Labeled&lt;/strong&gt; and &lt;strong&gt;Blank&lt;/strong&gt;, and will render two instances of the same component with different props or arguments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aK3q1A6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Storybook-toggle-component.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aK3q1A6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Storybook-toggle-component.png" alt="Storybook toggle component" width="730" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input-field-component"&gt;
  &lt;/a&gt;
  Input field component
&lt;/h3&gt;

&lt;p&gt;Finally, we will create an input field component with styling that shows pleasing colors for each state for the input.&lt;/p&gt;

&lt;p&gt;Write the following in your &lt;code&gt;Input.svelte&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    import { createEventDispatcher } from 'svelte';

    export let placeholder = '';
    export let label = '';
    export let disabled = false;

    export let state = "active";

    const dispatch = createEventDispatcher();

     /**
     * input change handler
     */
     function onChange(event) {
      dispatch('click', event);
    }
&amp;lt;/script&amp;gt;

&amp;lt;label &amp;gt;

    {#if label}
        &amp;lt;span class="sveltio-input-label"&amp;gt;{label}&amp;lt;/span&amp;gt;
    {/if}

    &amp;lt;input
    disabled={disabled}
    type="text"
    class={['sveltio-input',`sveltio-input--${state}`].join(' ')}
    placeholder={placeholder}
    &amp;gt;
&amp;lt;/label&amp;gt;

&amp;lt;style&amp;gt;
    .sveltio-input {
    font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-weight: 700;
    min-height: 25px;
    margin: 2px;
    border-radius: 3px;
    border: solid 2px #353637;
    background-color: #ffffff;
}

.sveltio-input ::focus {
    border: solid 2px #1b116e;
}

.sveltio-input--success {
    border: solid 2px #067d68;
}

.sveltio-input--error {
    border: solid 2px #a9150b;
}

.sveltio-input--disabled {
    color: #e4e3ea;
    border: solid 2px #e4e3ea;
}

.sveltio-input ::-webkit-input-placeholder {
    color: red;
}

.sveltio-input-label {
    font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-weight: 700;
}

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, because we have created the &lt;code&gt;input&lt;/code&gt; component with its styling, let’s see how we can write stories for these components and how it renders. Here, we will pass in some arguments like &lt;code&gt;backgroundColor&lt;/code&gt; and &lt;code&gt;state&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Input.stories.svelte:&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    import { Meta, Template, Story } from "@storybook/addon-svelte-csf";
    import Input from "./Input.svelte";
  &amp;lt;/script&amp;gt;

  &amp;lt;Meta
    title="Sveltio/Input"
    component={Input}
    argTypes={{
      backgroundColor: { control: "color" },
      state: {
        control: { type: "select", options: ["active","success", "error"] },
      },
      onChange: { action: "onChange" },
      disabled:{ control: "boolean" }
    }}
  /&amp;gt;

  &amp;lt;Template let:args&amp;gt;
    &amp;lt;Input {...args} on:change={args.onChange} /&amp;gt;
  &amp;lt;/Template&amp;gt;

  &amp;lt;Story
    name="Active"
    args={{
      placeholder: "Text Input Active",
      state:"active"
    }}
  /&amp;gt;

  &amp;lt;Story
    name="Success"
    args={{
      placeholder: "Text Input Success",
      state: "success",
    }}
  /&amp;gt;
  &amp;lt;Story
    name="Error"
    args={{
      placeholder: "Text Input Error",
      state: "error"
    }}
  /&amp;gt;

  &amp;lt;Story
    name="Disabled"
    args={{
      state: "disabled",
      disabled:true
    }}
  /&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In a similar manner, you can create other web components and create stories for other components to continue building your component library. You can find the whole code for the components we built through this &lt;a href="https://github.com/LMPerera/sveltio"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-with-sveltetestinglibrary-and-jest"&gt;
  &lt;/a&gt;
  Testing with svelte-testing-library and Jest
&lt;/h2&gt;

&lt;p&gt;One of the most critical aspects of developing web applications is running and maintaining tests for our components. With Svelte, the process of running tests is similar to what we get with React, Vue, or Angular.&lt;/p&gt;

&lt;p&gt;There are several tools to write and run tests like Mocha, Karma, Jasmine, and &lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt;. For this project, we will be using Jest as our test runner. However, even Jest falls slightly short, because we need to render our component and check how it's behaving after executing actions on them.&lt;/p&gt;

&lt;p&gt;For this purpose, we will be using a tool called &lt;a href="https://testing-library.com/"&gt;Testing Library&lt;/a&gt;. This tool helps us write tests as if a real user is working on the elements, and also supports all the major frontend frameworks and libraries.&lt;/p&gt;

&lt;p&gt;We will also use an additional plugin with Testing Library called &lt;a href="https://testing-library.com/docs/ecosystem-user-event/"&gt;user-event&lt;/a&gt;, which allows us to mimic user events, like typing inside an input or clicking on a button. We will also use a plugin called &lt;a href="https://testing-library.com/docs/ecosystem-jest-dom/"&gt;jest-dom&lt;/a&gt;, which extends the DOM-related matching capabilities of Jest, which we require because we are dealing with web components.&lt;/p&gt;

&lt;p&gt;Now let's install these libraries as dev dependencies in our project like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; jest babel-jest svelte-jester  @testing-library/svelte @testing-library/user-event @testing-library/jest-dom @testing-library/dom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let’s add some configuration files to the root of our project. Starting with the &lt;code&gt;Jest.config.cjs&lt;/code&gt; file which holds the configurations for Jest and a &lt;code&gt;.babelrc&lt;/code&gt; with some presets for converting the files to ES2015 JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Jest.config.cjs&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
    transform: {
        "^.+\\.js$": "babel-jest",
        "^.+\\.svelte$": "svelte-jester"
    },
    moduleFileExtensions: ['js', 'svelte'],
    moduleNameMapper: {
        '^\\$lib(.*)/pre&amp;gt;: '&amp;lt;rootDir&amp;gt;/src/lib$1',
        '^\\$app(.*)/pre&amp;gt;: [
            '&amp;lt;rootDir&amp;gt;/.svelte-kit/dev/runtime/app$1',
            '&amp;lt;rootDir&amp;gt;/.svelte-kit/build/runtime/app$1'
        ]
    },
    setupFilesAfterEnv: ["@testing-library/jest-dom/extend-expect"],
    testEnvironment: "jsdom"
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;.babelrc&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;presets&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@babel/preset-env&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;targets&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;current&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}}]]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above test will check if the text is available in the button and do some assertions.&lt;/p&gt;

&lt;p&gt;Let’s add another test for the &lt;code&gt;Input&lt;/code&gt; file we have created. Let’s call this &lt;code&gt;Input.test.js&lt;/code&gt; under the &lt;code&gt;test&lt;/code&gt; directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@testing-library/jest-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Input&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$lib/Input/Input.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@testing-library/svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Input component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Input Has Placeholder&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getByPlaceholderText&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello Sveltio&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getByPlaceholderText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello Sveltio&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeInTheDocument&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above test will check if the input field consists of the placeholder we pass as a prop.&lt;/p&gt;

&lt;p&gt;Before we run these tests, we will add a small attribute called &lt;code&gt;“test”:”jest”&lt;/code&gt; under &lt;code&gt;scripts&lt;/code&gt; to the &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Now all you have to do is run the following command in the project root:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pllXdqCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Jest-button-test-pass.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pllXdqCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Jest-button-test-pass.png" alt="Jest button test" width="730" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With this, you can maintain unit tests that will improve the quality of your components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#packaging-and-publishing-to-npm"&gt;
  &lt;/a&gt;
  Packaging and publishing to npm
&lt;/h2&gt;

&lt;p&gt;Now it’s time to publish your project to the world! There are several tools that can be used to export your components as a package, but we will be using a cool feature that comes built in to SvelteKit. First, add this attribute to the &lt;code&gt;package.json&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"package"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"svelte-kit package"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now all you have to do is run the following from the root of the project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run package
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If you didn’t initialize a TypeScript SvelteKit project, you will need to install a dependency called &lt;code&gt;svelte2tsx&lt;/code&gt;, which converts the Svelte component source into TSX.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This command will take all the files that are under the &lt;code&gt;src/lib&lt;/code&gt; folder and make them available as a package. This command generates a new directory called &lt;code&gt;package&lt;/code&gt; at the root of your project, and inside this, you will notice that there is a new &lt;code&gt;package.json&lt;/code&gt; file. This file consists of an attribute called &lt;code&gt;exports&lt;/code&gt;, which consists of all the paths or entry points to the individual components that we have developed.&lt;/p&gt;

&lt;p&gt;Enter the following code into the &lt;code&gt;package.json&lt;/code&gt; file under the &lt;code&gt;package&lt;/code&gt; directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sveltio"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="err"&gt;//some&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;dependencies&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"module"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"exports"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"./package.json"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./package.json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"./Button.svelte"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./Button/Button.svelte"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"./Input.svelte"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./Input/Input.svelte"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"./Modal.svelte"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./Modal/Modal.svelte"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"./Toggle.svelte"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./Toggle/Toggle.svelte"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your library consists of files like &lt;code&gt;src&lt;/code&gt;/&lt;code&gt;lib&lt;/code&gt;/&lt;code&gt;index.js&lt;/code&gt; or &lt;code&gt;src&lt;/code&gt;/&lt;code&gt;lib&lt;/code&gt;/&lt;code&gt;index.svelte&lt;/code&gt;, it will be treated as the package root. This makes it much easier to use the components of our library as ES module imports.&lt;/p&gt;

&lt;p&gt;For example, if you had an &lt;code&gt;src&lt;/code&gt;/&lt;code&gt;lib&lt;/code&gt;/&lt;code&gt;Button.svelte&lt;/code&gt; component and an &lt;code&gt;src&lt;/code&gt;/&lt;code&gt;lib&lt;/code&gt;/&lt;code&gt;index.js&lt;/code&gt; module that re-exported it, a consumer of your library could do either of the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;import &lt;span class="o"&gt;{&lt;/span&gt; Button &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;'your-library'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;import Button from &lt;span class="s1"&gt;'your-library/Button.svelte'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have created a package using SvelteKit, it’s time to publish it as an npm module. All you need to do is to execute the following command from the root of the project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm publish ./package
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will publish the package we have created using SvelteKit. Make sure that the package name and package version combination don’t exist already; if so, the package will not be published on npm.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You can see why SvelteKit deserves more attention in the developer community. SvelteKit has fantastic features packed in, and creating packages is quite easy. With tools like Storybook and Jest, creating a component in isolation and maintaining tests for components is simple and efficient. For more information, please go through the SvelteKit &lt;a href="https://kit.svelte.dev/docs"&gt;documentation&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#logrocket-full-visibility-into-your-web-apps"&gt;
  &lt;/a&gt;
  &lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt;: Full visibility into your web apps
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FGBNR-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2017/03/1d0cd-1s_rmyo6nbrasp-xtvbaxfg.png" alt="LogRocket Dashboard Free Trial Banner" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; is a frontend application monitoring solution that lets you replay problems as if they happened in your own browser. Instead of guessing why errors happen, or asking users for screenshots and log dumps, LogRocket lets you replay the session to quickly understand what went wrong. It works perfectly with any app, regardless of framework, and has plugins to log additional context from Redux, Vuex, and &lt;a class="mentioned-user" href="https://dev.to/ngrx"&gt;@ngrx&lt;/a&gt;
/store.&lt;/p&gt;

&lt;p&gt;In addition to logging Redux actions and state, LogRocket records console logs, JavaScript errors, stacktraces, network requests/responses with headers + bodies, browser metadata, and custom logs. It also instruments the DOM to record the HTML and CSS on the page, recreating pixel-perfect videos of even the most complex single-page apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;Try it for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>It works </title>
      <author>Tom Smykowski</author>
      <pubDate>Tue, 09 Nov 2021 17:11:36 +0000</pubDate>
      <link>https://dev.to/tomaszs2/it-works-5dd1</link>
      <guid>https://dev.to/tomaszs2/it-works-5dd1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WN7Nvi4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anmasjn5uw0c2u2g29bd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WN7Nvi4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anmasjn5uw0c2u2g29bd.jpg" alt="Image description" width="700" height="449"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>The 6 November Frontend tips about a11y and UX</title>
      <author>Stas Melnikov</author>
      <pubDate>Tue, 09 Nov 2021 17:10:41 +0000</pubDate>
      <link>https://dev.to/melnik909/the-6-november-frontend-tips-about-a11y-and-ux-1i9l</link>
      <guid>https://dev.to/melnik909/the-6-november-frontend-tips-about-a11y-and-ux-1i9l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#focus-moving-is-underestimated"&gt;
  &lt;/a&gt;
  Focus moving is underestimated
&lt;/h2&gt;

&lt;p&gt;We don't think about what to do with focus when we design elements that appear after user actions. Or, more specifically, we just do nothing. Therefore there are 2 problems.&lt;/p&gt;

&lt;p&gt;Firstly, we cut off the possibility of more quick interaction. For example, when we log in on Groupon we have to focus on the input field to start filling in the form.&lt;/p&gt;

&lt;p&gt;Instead, when we go through the same case on Pinterest focus moves to the first input field automatically. So we can start filling in the form without additional actions. &lt;/p&gt;

&lt;p&gt;Secondly, if users have vestibular disabilities login becomes an impossible task because in this case, they lost the possibility of using a keyboard. For example, when we push on the sign in button on Groupon focus doesn't move inside of the form. It's lost just.&lt;/p&gt;

&lt;p&gt;For these reasons, we have to design our interfaces with the thought of how focus should move. In this case, our interfaces will be accessible for more users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gxh5LzBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58254310/b9df71dad9504ae9aa978215dd7d44c3/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3DMuX-fP5TefycieyyKFrbv7RThcQijj-Qdt1vtcpS1gU%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gxh5LzBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58254310/b9df71dad9504ae9aa978215dd7d44c3/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3DMuX-fP5TefycieyyKFrbv7RThcQijj-Qdt1vtcpS1gU%253D" alt="Focus doesn't move inside modal on Groupon website when we push the sign in button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6PgK-5Yf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58254310/1874e90a676c41f482de193ef7e1cae4/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3D2yC7bx6K0r5rE-pP6aTvxCIcDUEsP4oMJEx7Krf0QoA%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6PgK-5Yf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58254310/1874e90a676c41f482de193ef7e1cae4/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3D2yC7bx6K0r5rE-pP6aTvxCIcDUEsP4oMJEx7Krf0QoA%253D" alt="Focus moves on the first input box on Pinterest website when we push the log in button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thinking-about-a-main-and-additional-goal-when-we-work-with-focus"&gt;
  &lt;/a&gt;
  Thinking about a main and additional goal when we work with focus
&lt;/h2&gt;

&lt;p&gt;Did you think sometimes about how better to move focus when users open elements such as modals or dialogs? &lt;/p&gt;

&lt;p&gt;I think there is a main and additional goal when we work with focus. The main goal is what users want to do after moving focus for reaching their goals using a minimal number of actions. An additional is what they can do something else.&lt;/p&gt;

&lt;p&gt;Let's consider what I mean using the case of selecting a language on Booking. If we push the button of selecting a language we'll see modal with languages. &lt;/p&gt;

&lt;p&gt;Focus will move on the close button. Nice what we can close modal by pushing the enter key. But is that why we open the modal? No, we wanted to select a language. That's the main goal. And closing a modal is an additional goal.&lt;/p&gt;

&lt;p&gt;Now let's look at what Booking suggests for selecting a language. If we use only a keyboard we have to use the tab, ↑ or ↓ keys to start moving between languages. &lt;/p&gt;

&lt;p&gt;Then we push the same keys again until we find the necessary option.  If we push the enter key we'll select a language. Well, that's a nice solution but I want to suggest another. &lt;/p&gt;

&lt;p&gt;We have already identified that users open the modal because they want to select a language. It's the main goal. So we should give that to them. I think we can do that if we move focus on the current language. &lt;/p&gt;

&lt;p&gt;Then we should make the possibility of moving between languages using tab, ↑, →,  ↓ or ← keys immediately. The selection of a language we'll make using the enter key.  Also, we'll save the possibility of closing the modal using the Esc key like Booking made.&lt;/p&gt;

&lt;p&gt;I hope I was able to pass on the importance of defining a main and additional goal when you work with focus. Please, think about it and your interfaces will be user-friendly. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NLR_z_8u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58465126/29d37053a3714b5b82fdfa9f59a1f71c/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3Dy99ufbBUtwd8BUpGWRGF1zidhd2HQB9t4VMZJnv8bZc%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NLR_z_8u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58465126/29d37053a3714b5b82fdfa9f59a1f71c/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3Dy99ufbBUtwd8BUpGWRGF1zidhd2HQB9t4VMZJnv8bZc%253D" alt="Focus moves on the close button on Booking website when we push the selection of a language button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T53dPD_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58465126/d1869110e74e47caad750f372fd18b17/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3DB4b8DQrBWxBSqWdPYWMI-vIUd6K9XQGXY8hYM0UZUso%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T53dPD_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58465126/d1869110e74e47caad750f372fd18b17/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3DB4b8DQrBWxBSqWdPYWMI-vIUd6K9XQGXY8hYM0UZUso%253D" alt="Focus moves on the current language on Booking website when we push the selection of a language button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-button-role-isnt-enough-for-an-accessible-interface"&gt;
  &lt;/a&gt;
  The button role isn't enough for an accessible interface
&lt;/h2&gt;

&lt;p&gt;There is a practice of overriding the button's default role. It's a bad practice already because authors of the ARIA in HTML standard prohibit overriding of default roles in section 2.1.&lt;/p&gt;

&lt;p&gt;But in addition, people think if they define role="button" this element becomes accessible. Yes, it's true for screen readers. But that's only one case!&lt;/p&gt;

&lt;p&gt;This "button" isn't accessible for a keyboard. Users can't focus on this element using the tab key. Also, this "button" isn't accessible for interaction using the enter or space keys.&lt;/p&gt;

&lt;p&gt;So if you want to define role="button" don't do that. Just use the button element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- or --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;you can use it instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-bigger-clickable-area-the-better-userfriendly-interactive-elements"&gt;
  &lt;/a&gt;
  The bigger clickable area the better user-friendly interactive elements
&lt;/h2&gt;

&lt;p&gt;When we design interactive elements we have to think about how users will interact with them, in particular, a clickable area. &lt;/p&gt;

&lt;p&gt;That is important because users use different kinds of interactions. I often see designers and developers make a clickable area that is equal sizes of the element. &lt;/p&gt;

&lt;p&gt;It's nice for users who use a mouse. But that's a big problem for other users. If users have  a motor disability click on such an element is a nearly impossible task,&lt;/p&gt;

&lt;p&gt;Sometimes I can't hit on such elements when I tap on them using a finger. Also outline around elements has not enough contrast, if I focused on them using a keyboard,&lt;/p&gt;

&lt;p&gt;But we can solve these problems easily. Just we should design more largest clickable area that will not conflict with other elements around.   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7rDml1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/56937666/67caae32ca1a41859f94e25be24d8579/1.jpg%3Ftoken-time%3D1635292800%26token-hash%3DpVEa_BCCuXgCfixBPmjEiBrn72YcJP6BxUvZQ2j2Hg0%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7rDml1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/56937666/67caae32ca1a41859f94e25be24d8579/1.jpg%3Ftoken-time%3D1635292800%26token-hash%3DpVEa_BCCuXgCfixBPmjEiBrn72YcJP6BxUvZQ2j2Hg0%253D" alt="" width="620" height="620"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-arialabelledby-simplify-navigation-for-users-of-screen-readers"&gt;
  &lt;/a&gt;
  The aria-labelledby simplify navigation for users of screen readers
&lt;/h2&gt;

&lt;p&gt;Any web interface has a lot of sections that help users without vision disabilities orient at the page. We just see headings and understand that is a section and also its sense.&lt;/p&gt;

&lt;p&gt;But some users can't see. They use the special quick navigation mode known as "Regions list" in screen readers. In this mode screen readers display all regions on the page. So users can go to any by some taps.&lt;/p&gt;

&lt;p&gt;Unfortunately, there is a problem that is section elements aren't displayed in this mode until we associate section heading with a section using the aria-labelledby attribute.&lt;/p&gt;

&lt;p&gt;So we have to add the id to the heading and add this as a value to the aria-labelledby attribute that is defined for the section element.  As a result, this section will be added to the regions list and users will know about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;you can use it instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#where-are-the-buttons-here"&gt;
  &lt;/a&gt;
  Where are the buttons here?
&lt;/h2&gt;

&lt;p&gt;Unfortunately, designers and developers don't know the importance of using the button element for any elements for which users can click. So why is that important?&lt;/p&gt;

&lt;p&gt;Yes, by default click applies on any elements. But not all users use a mouse for interaction with UI. For example, some users want to use tab, enter and space keys for interaction with UI. &lt;/p&gt;

&lt;p&gt;If we think about users of screen readers they can't interact with UI if button elements aren't on the page. &lt;/p&gt;

&lt;p&gt;So if you want to create an element by which users will click, please, make it is a button. &lt;/p&gt;

&lt;p&gt;For inspiration, I collected a few examples where the button element will be helpful. As a result, users will get a more user-friendly web interface.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cFP-1RfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/57394376/e15dcab999b0459cb6341f370c73c32a/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DafeXIOr2WFoLscg-HWErfvhNb44hMyoBY5jDfhu0aFI%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cFP-1RfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/57394376/e15dcab999b0459cb6341f370c73c32a/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DafeXIOr2WFoLscg-HWErfvhNb44hMyoBY5jDfhu0aFI%253D" alt="All dates inside a calendar are buttons" width="620" height="620"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G52erXTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/81e352bb434747368259abb64bb60192/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DwKox3i0AZcg9AidPHEBlfco88LVTX5B37b3rP9w_FvQ%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G52erXTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/81e352bb434747368259abb64bb60192/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DwKox3i0AZcg9AidPHEBlfco88LVTX5B37b3rP9w_FvQ%253D" alt="The button for clearing selected dates inside a calendar is a button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XE7VsoCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/975142f987d249fea31cf6bfaecf112f/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DJtTF9f4zus9ce3HiMel5vXGXukm-1OdiLCYN1yVjVP0%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XE7VsoCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/975142f987d249fea31cf6bfaecf112f/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DJtTF9f4zus9ce3HiMel5vXGXukm-1OdiLCYN1yVjVP0%253D" alt="The toggle on a previous month inside a calendar is a button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aznxhJmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/ce0d494c321d4415b8cfad42d350e339/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DLsiNIl0tnfUBiDViu10y8TqvnSSSiQZPVts1rNy1XvY%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aznxhJmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/ce0d494c321d4415b8cfad42d350e339/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DLsiNIl0tnfUBiDViu10y8TqvnSSSiQZPVts1rNy1XvY%253D" alt="The toggle on a next month inside a calendar is a button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SBRPEhZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/e6ac857309b94b6297d8f8ffa52c4438/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DNI9XILGhD9eLhUzvGCbezoZPP6TOG_f-mzZ-1qgGXKA%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SBRPEhZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/e6ac857309b94b6297d8f8ffa52c4438/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DNI9XILGhD9eLhUzvGCbezoZPP6TOG_f-mzZ-1qgGXKA%253D" alt="All points that mark apartaments on a map are buttons" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;&lt;br&gt;
Folks, I love to share my tips with you. I do that with the help of donations from my sponsors since content creating is my full-time job.&lt;/p&gt;

&lt;p&gt;For this reason I ask you to join my sponsors if you like what I do &lt;br&gt;
&lt;a href="https://www.patreon.com/melnik909"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S0zkeHmS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3IjoxOTIwLCJ3ZSI6MX0%253D/patreon-media/p/campaign/2871133/09751df69a6d4a3990d4f6a2fb77340f/19.jpg%3Ftoken-time%3D1633305600%26token-hash%3DF2s9h-8VI8cZLJiiUalO1rewbCh6FPD_Qyepp1C7Aiw%253D" alt="" width="880" height="220"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/melnik909"&gt;Go to Patreon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;❤ Thank you so much, my sponsors: Ben Rinehart, Sergio Kagiema, Jesse Willard, Tanya Ten, Spiridon Konofaos.&lt;/p&gt;

&lt;p&gt;👀 Also I tell stories from my career on Substack. Join &lt;a href="https://stasmelnikov.substack.com"&gt;my free newsletter&lt;/a&gt;, if you're interested in my background&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>html</category>
      <category>ux</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
