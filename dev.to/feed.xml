<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Missing Azure REST APIs. Need not Worry</title>
      <author>Ilyas F</author>
      <pubDate>Fri, 14 May 2021 17:10:52 +0000</pubDate>
      <link>https://dev.to/ilyasit83/missing-azure-rest-apis-need-not-worry-36nb</link>
      <guid>https://dev.to/ilyasit83/missing-azure-rest-apis-need-not-worry-36nb</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_IROmIIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k7z5c3xj5yvrhavy9kj2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_IROmIIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k7z5c3xj5yvrhavy9kj2.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today I came across a situation where I had to automate the process of creating and setting up an Azure IoT Central solution entirely using Azure REST APIs and found they are not available or not documented as of May 14th, 2021. However, you would definitely find &lt;code&gt;AZ CLI&lt;/code&gt; commands available, finding the REST APIs for the specific action is very simple. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/cli/azure/iot/central?view=azure-cli-latest"&gt;Azure IoT Central - AZ CLI commands&lt;/a&gt;&lt;br&gt;
&lt;a href="https://docs.microsoft.com/en-us/rest/api/iotcentral/"&gt;Azure IoT Central - REST API reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This gap might be fixed when you read this article in the future, so I highly recommend to refer the &lt;a href="https://docs.microsoft.com/en-us/rest/api/iotcentral/"&gt;Azure IoT Central - REST API reference&lt;/a&gt; to check if the APIs are documented. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-solution-az-cli-to-the-rescue"&gt;
  &lt;/a&gt;
  The Solution - AZ CLI to the rescue
&lt;/h2&gt;

&lt;p&gt;Login to your &lt;code&gt;AZ CLI&lt;/code&gt; and set the default subscription.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;az login
&lt;/span&gt;&lt;span class="gp"&gt;az account set -s &amp;lt;&amp;lt;subscription name or id&amp;gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next fire the respective AZ CLI command that you didn't find the REST API, in my case creating a new Azure IoT Central App with the &lt;strong&gt;--debug&lt;/strong&gt; argument.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;az iot central app create --name myiotcentral001
                          --resource-group rg_iotcentral
                          --subdomain myiotcentral001
                          --debug
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will generate a lot of debugging statements, but give your attention to the lines where it makes a call to the REST API. Refer to the below screenshot. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kIBxtz30--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9lpuk51wq81bxtqplqep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kIBxtz30--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9lpuk51wq81bxtqplqep.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So you know, how to find the REST APIs of Azure!&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Happy Azure!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>azure</category>
      <category>azcli</category>
      <category>azurerestapi</category>
      <category>restfulapi</category>
    </item>
    <item>
      <title>üî• Next JS TypeScript Template Free using Tailwind 2.0, ESLint, Prettier and Husky</title>
      <author>Remi W.</author>
      <pubDate>Fri, 14 May 2021 16:24:24 +0000</pubDate>
      <link>https://dev.to/ixartz/next-js-typescript-template-free-using-tailwind-2-0-eslint-prettier-and-husky-301k</link>
      <guid>https://dev.to/ixartz/next-js-typescript-template-free-using-tailwind-2-0-eslint-prettier-and-husky-301k</guid>
      <description>&lt;p&gt;A Next JS TypeScript template free and open source made with great tooling for developers: Tailwind 2.0, Webpack 5, ESLint, Prettier, Husky and Bundle Analyzer.&lt;/p&gt;

&lt;p&gt;The GitHub repo have already reached 100+ stars üåü.&lt;/p&gt;

&lt;p&gt;Built for production with high-quality:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;üéâ Type checking, TypeScript&lt;/li&gt;
&lt;li&gt;‚úèÔ∏è Linter, ESLint&lt;/li&gt;
&lt;li&gt;üõ† Code Formatter, Prettier&lt;/li&gt;
&lt;li&gt;ü¶ä SEO friendly&lt;/li&gt;
&lt;li&gt;üöÄ Production-ready&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find a &lt;a href="https://creativedesignsguru.com/demo/Nextjs-Boilerplate/"&gt;NextJS TypeScript Template live demo&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ixartz"&gt;
        ixartz
      &lt;/a&gt; / &lt;a href="https://github.com/ixartz/Next-js-Boilerplate"&gt;
        Next-js-Boilerplate
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üöÄ Boilerplate and Starter for Next.js 10+, Tailwind CSS 2.0 and TypeScript ‚ö°Ô∏è Made with developer experience first: Next.js, TypeScript, ESLint, Prettier, PostCSS, Tailwind CSS.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Boilerplate and Starter for Next JS 10+, Tailwind CSS 2.0 and TypeScript&lt;/h1&gt;
&lt;p&gt;
  &lt;a href="https://creativedesignsguru.com/demo/Nextjs-Boilerplate/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fst2T_oi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/master/public/assets/images/nextjs-starter-banner.png%3Fraw%3Dtrue" alt="Next js starter banner"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;üöÄ Boilerplate and Starter for Next.js, Tailwind CSS and TypeScript ‚ö°Ô∏è Made with developer experience first: &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt;, &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt;, &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt;, &lt;a href="https://prettier.io" rel="nofollow"&gt;Prettier&lt;/a&gt;, &lt;a href="https://postcss.org" rel="nofollow"&gt;PostCSS&lt;/a&gt;, &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Clone this project and use it to create your own &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; project. You can check a &lt;a href="https://creativedesignsguru.com/demo/Nextjs-Boilerplate/" rel="nofollow"&gt;Next js templates demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
Features&lt;/h3&gt;

&lt;p&gt;Developer experience first:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
üî• &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; for Static Site Generator&lt;/li&gt;
&lt;li&gt;
üé® Integrate with &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
üíÖ &lt;a href="https://postcss.org" rel="nofollow"&gt;PostCSS&lt;/a&gt; for processing &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
üéâ Type checking &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
‚úèÔ∏è Linter with &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
üõ† Code Formatter with &lt;a href="https://prettier.io" rel="nofollow"&gt;Prettier&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
ü¶ä SEO metadata, &lt;a href="https://developers.google.com/search/docs/guides/intro-structured-data" rel="nofollow"&gt;JSON-LD&lt;/a&gt; and &lt;a href="https://ogp.me/" rel="nofollow"&gt;Open Graph&lt;/a&gt; tags with &lt;a href="https://github.com/garmeeh/next-seo"&gt;Next SEO&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
‚öôÔ∏è &lt;a href="https://www.npmjs.com/package/@next/bundle-analyzer" rel="nofollow"&gt;Bundler Analyzer&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
üåà Include a FREE minimalist theme&lt;/li&gt;
&lt;li&gt;
üíØ Maximize lighthouse score&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Built-in feature from Next.js:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
‚òï Minify HTML &amp;amp; CSS&lt;/li&gt;
&lt;li&gt;
üí® Live reload&lt;/li&gt;
&lt;li&gt;
‚úÖ Cache busting&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Philosophy&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Minimal code&lt;/li&gt;
&lt;li&gt;SEO-friendly&lt;/li&gt;
&lt;li&gt;
üöÄ Production-ready&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Premium Themes (&lt;a href="https://creativedesignsguru.com/category/nextjs/" rel="nofollow"&gt;Nextjs Themes&lt;/a&gt;)&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/landing-green-modern-nextjs-theme/" rel="nofollow"&gt;Green Nextjs Landing&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;&lt;/div&gt;‚Ä¶&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ixartz/Next-js-Boilerplate"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#other-next-js-templates-and-themes"&gt;
  &lt;/a&gt;
  Other Next JS Templates and Themes
&lt;/h2&gt;

&lt;p&gt;I've also built others components and UI blocks in React. You can find them on my &lt;a href="https://creativedesignsguru.com/category/nextjs/"&gt;Next JS templates&lt;/a&gt; to quickly start your project:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/landing-green-modern-nextjs-theme/"&gt;Green Nextjs Tailwind Template&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/landing-indigo-modern-react-theme/"&gt;Indigo Nextjs Landing Page Theme&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/landing-green-modern-nextjs-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4CbDAFVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-green-modern-nextjs-theme-xs.png" alt="Green Nextjs Tailwind Template"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/landing-indigo-modern-react-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FvlCiWRl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-indigo-modern-nextjs-theme-xs.png" alt="Indigo Nextjs Landing Page Theme"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/landing-purple-modern-react-theme/"&gt;Purple Responsive Nextjs Theme&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/landing-blue-modern-react-theme/"&gt;Blue SaaS Nextjs Theme&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/landing-purple-modern-react-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fsLIO5h8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-purple-modern-nextjs-theme-xs.png" alt="Purple Responsive Nextjs Theme"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/landing-blue-modern-react-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--az4i2Gg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-blue-modern-nextjs-theme-xs.png" alt="Blue SaaS Nextjs Theme"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;You can easily customize the themes based on your needs by saving you development and design time.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Privacy focused search engine DuckDuckGo.</title>
      <author>Sumit kumar singh</author>
      <pubDate>Fri, 14 May 2021 16:21:22 +0000</pubDate>
      <link>https://dev.to/thecorrupttech/privacy-focused-search-engine-duckduckgo-3pm</link>
      <guid>https://dev.to/thecorrupttech/privacy-focused-search-engine-duckduckgo-3pm</guid>
      <description>&lt;p&gt;Every move you make, every click you take, someone's watching you online. According to &lt;a href="https://gs.statcounter.com/"&gt;Statcounter&lt;/a&gt; (search engine market share of April-May 2021) 92.21% of internet users use the Google search engine. Popular search engines like Google, Yahoo, Bing are tracking and collecting your search behavior and analyzing your searches with their algorithms.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H-BKEFjg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa7uyfzwlgc71c3lecsa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H-BKEFjg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa7uyfzwlgc71c3lecsa.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-can-we-avoid-or-fight-with-this-issue"&gt;
  &lt;/a&gt;
  How can we avoid or fight with this issue?
&lt;/h3&gt;

&lt;p&gt;Using, DuckDuckGo that is a privacy-focused search engine and the top choice for those who care about protecting their data. DuckDuckGo is a web search engine that doesn't collect your data or track your searches. It doesn't store cookies, search history, nor your IP.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Em2QIpD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzaj3naq6hf8hijg67hp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Em2QIpD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzaj3naq6hf8hijg67hp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Since it doesn't associate your search queries with your IP address, personalized ads won't follow you around. DuckDuckGo also doesn't offer any personalized results according to your search patterns. Everyone gets the same results for the same search. Using the DuckDuckGo is free at all.&lt;/p&gt;

&lt;p&gt;If you want know more please visit &lt;a href="https://the-corrupt-tech.com/"&gt;The Corrupt Tech&lt;/a&gt; or refer on dev community &lt;a class="mentioned-user" href="https://dev.to/thecorrupttech"&gt;@thecorrupttech&lt;/a&gt;
.&lt;/p&gt;

</description>
      <category>privacy</category>
      <category>cybersecurity</category>
      <category>cybertips</category>
    </item>
    <item>
      <title>How to define Open Graph / Twitter image alt text (and why it might not matter...)</title>
      <author>Stefan Judis</author>
      <pubDate>Fri, 14 May 2021 16:06:25 +0000</pubDate>
      <link>https://dev.to/stefanjudis/how-to-define-open-graph-twitter-image-alt-text-and-why-it-might-not-matter-12f7</link>
      <guid>https://dev.to/stefanjudis/how-to-define-open-graph-twitter-image-alt-text-and-why-it-might-not-matter-12f7</guid>
      <description>&lt;p&gt;You know all these fancy link previews that you see on social media when people share articles and resources, right? These previews are based on various meta elements defined in your website's &lt;code&gt;head&lt;/code&gt;. You can define the Twitter card layout using &lt;code&gt;&amp;lt;meta property="twitter:card" content="summary_large_image"&amp;gt;&lt;/code&gt;, specify the Facebook preview image with &lt;code&gt;&amp;lt;meta property="og:image" content="https://.../your-image.jpg"/&amp;gt;&lt;/code&gt; and many more configuration options. &lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/f20lfrunubsq/59yNEa6BuvIHW6OVgYPuM6/68a43de0febd017c8462404745403d1e/Screenshot_2021-05-14_at_17.41.21.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/f20lfrunubsq/59yNEa6BuvIHW6OVgYPuM6/68a43de0febd017c8462404745403d1e/Screenshot_2021-05-14_at_17.41.21.png" alt="Example of a Twitter card preview."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read more about the details in the documentation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ogp.me/"&gt;the Open Graph Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/markup"&gt;Twitter cards&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Recently I learned that the two standards (Open Graph and Twitter cards) support alternative text for preview images. I want to be a good web citizen and implemented it right away.&lt;/p&gt;

&lt;p&gt;Unfortunately, I discovered that the alternative text definition might not matter much for Facebook or Twitter. That's a bummer; read on to learn more. üòâ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-graph-and-twitter-cards-support-image-alternative-text"&gt;
  &lt;/a&gt;
  Open Graph and Twitter cards support image alternative text
&lt;/h2&gt;

&lt;p&gt;Thanks to my friend Feli (and Lea Rosema and Manuel Matuzoviƒá) I discovered Open Graph's &lt;code&gt;&amp;lt;meta property="og:image:alt " content="Your image alt text"/&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/kotzendekrabbe/status/1389142654395555841"&gt;She tweeted the following&lt;/a&gt;. üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/f20lfrunubsq/3Uy58qYA5gaaLlhOZUOqtl/34afe922dfbba152bf1d68a7cdd61729/Screenshot_2021-05-14_at_15.33.52.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/f20lfrunubsq/3Uy58qYA5gaaLlhOZUOqtl/34afe922dfbba152bf1d68a7cdd61729/Screenshot_2021-05-14_at_15.33.52.png" alt="Feli's Tweet: &amp;quot;TIL Open Graph Tags provide alt for images og:image:alt. Thank you @terabaud for letting me know ‚ô•Ô∏è&amp;quot;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It turns out that not only Open Graph but also Twitter allows alternative text using &lt;code&gt;&amp;lt;meta property="twitter:image:alt" content="Your image alt text"&amp;gt;&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;That's very exciting! Ideally, these meta elements would allow us to define the alternative text for the images displayed on Twitter and Facebook to make them more accessible for assistive technology.&lt;/p&gt;

&lt;p&gt;Let's look at how Facebook and Twitter render my site's URL previews!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-image-alt-text-might-not-make-a-big-difference-for-assistive-technology"&gt;
  &lt;/a&gt;
  The image alt text might not make a big difference for assistive technology
&lt;/h2&gt;

&lt;p&gt;Let's have a look at how Facebook and Twitter render image alternative text in their previews.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#twitters-preview-cards"&gt;
  &lt;/a&gt;
  Twitter's preview cards
&lt;/h3&gt;

&lt;p&gt;I went to &lt;a href="https://cards-dev.twitter.com/validator"&gt;the Twitter Card validator&lt;/a&gt; to check my site, and it looked great!&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/f20lfrunubsq/7rKMZIpScuRku3qBT1nz9h/9c327165ebb197eab80520b0dad13eff/Screenshot_2021-05-14_at_16.29.52.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/f20lfrunubsq/7rKMZIpScuRku3qBT1nz9h/9c327165ebb197eab80520b0dad13eff/Screenshot_2021-05-14_at_16.29.52.png" alt="Twitter Card Validator showing the correctly displayed alt text define in meta elements."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The alternative text was set correctly in the validator preview. The next step was to check how Twitter renders the previews inside of their UI.&lt;/p&gt;

&lt;p&gt;Twitter caches all their previews for a while, and because I just deployed the &lt;code&gt;twitter:image:alt&lt;/code&gt; I couldn't check if it's rendered the same way the validator did. &lt;/p&gt;

&lt;p&gt;Nevertheless, I still had a look at the rendered HTML and found out that Twitter renders the preview image in many many divs and one of them includes the &lt;code&gt;aria-hidden="true"&lt;/code&gt; attribute. üò≤&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/f20lfrunubsq/2jhHTZcJT8EQp6I4Zhn5ju/999ae22c868bd9141de2c552af1c5270/Screenshot_2021-05-14_at_16.43.16.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/f20lfrunubsq/2jhHTZcJT8EQp6I4Zhn5ju/999ae22c868bd9141de2c552af1c5270/Screenshot_2021-05-14_at_16.43.16.png" alt='Twitter markup showing the surrounding div including an aria-hidden="true"'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-hidden_attribute"&gt;&lt;code&gt;aria-hidden&lt;/code&gt; removes the element and all its children from the accessibility tree&lt;/a&gt;. That means that the new alternative text (if it shows up) won't improve the screen reader experience because screen readers won't discover the image after all. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Edit: Twitter uses &lt;code&gt;twitter:image:alt&lt;/code&gt; to define the preview image alt text. üéâ&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This discovery was disappointing, but I moved on to Facebook to find some improvements over there.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#facebooks-link-preview"&gt;
  &lt;/a&gt;
  Facebook's link preview
&lt;/h3&gt;

&lt;p&gt;Similar to Twitter, Facebook also provides a preview tool ‚Äì &lt;a href="https://developers.facebook.com/tools/debug/"&gt;the sharing debugger&lt;/a&gt;. I checked one of the URLs that now include &lt;code&gt;og:image:alt&lt;/code&gt;. Everything showed up correctly in the debugger's info section. üéâ&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/f20lfrunubsq/1ks6Hip3LaZJG2HY5xaPRc/b1222700db8cff64a5e4e1d1956ffe87/Screenshot_2021-05-14_at_16.57.26.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/f20lfrunubsq/1ks6Hip3LaZJG2HY5xaPRc/b1222700db8cff64a5e4e1d1956ffe87/Screenshot_2021-05-14_at_16.57.26.png" alt="Facebook debugger preview showing the correct content for og:image:alt"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, the alternative text was not showing up in the debugger's preview. I shared a URL on Facebook to see my new alternative text in production. Luckily the image doesn't seem to be hidden from the accessibility tree, but(!) it appears that Facebook uses &lt;code&gt;og:title&lt;/code&gt; instead of &lt;code&gt;og:image:alt&lt;/code&gt; for the image alternative text. üò¢&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/f20lfrunubsq/42aeQPbqcglNLjOOt9LjEh/b17bcd95bf7a88ace40d5e9d1dc6b609/Screenshot_2021-05-14_at_17.04.50.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/f20lfrunubsq/42aeQPbqcglNLjOOt9LjEh/b17bcd95bf7a88ace40d5e9d1dc6b609/Screenshot_2021-05-14_at_17.04.50.png" alt="Facebook UI preview showing that og:title is used for the image alt text."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I guess too few people are using &lt;code&gt;og:image:alt&lt;/code&gt; so that Facebook goes with the title to be on the safe side. &lt;/p&gt;

&lt;p&gt;These two discoveries bring up the question: &lt;strong&gt;should we bother implementing social media preview alternative texts if it doesn't improve the previews' accessibility&lt;/strong&gt;?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I will keep the &lt;code&gt;og:image:alt&lt;/code&gt; and &lt;code&gt;twitter:image:alt&lt;/code&gt; meta elements on my site. The elements are not harming the overall experience (I'm ignoring the few bytes of additional HTML), but unfortunately, they're not making social media previews more accessible either. &lt;/p&gt;

&lt;p&gt;If Facebook and Twitter change their implementation in the future, I'll be ready with correct alternative texts at least.&lt;/p&gt;




&lt;p&gt;Side note: &lt;a href="https://twitter.com/jkc_codes/status/1393234667206320132"&gt;John Kemp Cruz also pointed out that Twitter falls back to Open Graph for particular properties&lt;/a&gt;. Good to know!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>a11y</category>
    </item>
    <item>
      <title>üò´ Tired Of Relative Imports? Time To Get Rid Of Them!</title>
      <author>Ludal üöÄ</author>
      <pubDate>Fri, 14 May 2021 15:50:17 +0000</pubDate>
      <link>https://dev.to/iamludal/tired-of-relative-imports-time-to-get-rid-of-them-1n48</link>
      <guid>https://dev.to/iamludal/tired-of-relative-imports-time-to-get-rid-of-them-1n48</guid>
      <description>&lt;p&gt;At some point in your Javascript developer journey, you've certainly encountered these types of imports:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../../vehicles/car&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;House&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../../buildings/house&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you were probably bothered by the ugliness of them...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o8doVY3jacRLyrSmI/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o8doVY3jacRLyrSmI/giphy.gif" alt="https://media.giphy.com/media/3o8doVY3jacRLyrSmI/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But guess what? I'm here as a savior to show you how to get rid of them! (really) üòé&lt;/p&gt;

&lt;p&gt;Ready? Let's go! üèÅ&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#baseurl"&gt;
  &lt;/a&gt;
  baseUrl
&lt;/h1&gt;

&lt;p&gt;The simplest way to get rid of these awful imports is by simply editing your &lt;code&gt;jsconfig.json&lt;/code&gt; file. If you don't already have one, you can just create it at the root of your project.&lt;/p&gt;

&lt;p&gt;Let's complete it with the following keys:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"compilerOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"baseUrl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"."&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, the most studious ones of you might think: "Compiler options? But JavaScript is not a compiled language!". And you're right! If you want to know why does this key exist, I recommend you to follow &lt;a href="https://code.visualstudio.com/docs/languages/jsconfig#_what-is-jsconfigjson"&gt;this link&lt;/a&gt; from the official website of Visual Studio Code.&lt;/p&gt;

&lt;p&gt;Now, imagine having the following directory structure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
‚îú‚îÄ‚îÄ components
‚îÇ   ‚îî‚îÄ‚îÄ layouts
‚îÇ       ‚îî‚îÄ‚îÄ header.js
‚îú‚îÄ‚îÄ styles
‚îÇ   ‚îî‚îÄ‚îÄ header.css
‚îî‚îÄ‚îÄ jsconfig.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to include your &lt;code&gt;header.css&lt;/code&gt; style file in your &lt;code&gt;header.js&lt;/code&gt; file, you can now do it this way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// header.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;styles/header.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Without this configuration, here's how you would have done it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// header.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../../styles/header.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, no matter how deep you are in your project's architecture, you'll be able to import your files as if you were at the root of your project. üò≤&lt;/p&gt;

&lt;p&gt;And obviously, you'll still able to import them relatively from the current directory you are in!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
‚îú‚îÄ‚îÄ src
‚îÇ   ‚îú‚îÄ‚îÄ vehicles
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ car.js
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ truck.js
‚îÇ   ‚îî‚îÄ‚îÄ index.js
‚îî‚îÄ‚îÄ jsconfig.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// index.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;truck&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./vehicles/truck.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://i.giphy.com/media/oYtVHSxngR3lC/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/oYtVHSxngR3lC/giphy.gif" alt="https://media.giphy.com/media/oYtVHSxngR3lC/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#paths"&gt;
  &lt;/a&gt;
  Paths
&lt;/h1&gt;

&lt;p&gt;Back to our &lt;code&gt;jsconfig.json&lt;/code&gt;. You can also add the &lt;code&gt;paths&lt;/code&gt; key in order to map an import to a specific folder. This is useful for giving aliases to some folders in your imports.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"compilerOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"baseUrl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"paths"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"css/*"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"styles/*"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Considering the same folder structure we've seen in the previous part, you could now import your styles like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// header.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;css/header.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But I wouldn't recommend doing this at all, as this would create inconsistencies between the real folders' names and the aliases ‚Äî instead, why not simply renaming the actual folder? ü§®&lt;/p&gt;

&lt;p&gt;Nevertheless, this option can be useful for folders you often use and that are not at the root of your project. Let's consider the following structure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
‚îú‚îÄ‚îÄ assets
‚îÇ   ‚îú‚îÄ‚îÄ styles
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ index.css
|‚îÄ‚îÄ src
‚îÇ   ‚îî‚îÄ‚îÄ index.js
‚îî‚îÄ‚îÄ jsconfig.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will often use the &lt;code&gt;styles&lt;/code&gt; directory to import our styles, and that could be very handy if we could remove the &lt;code&gt;assets&lt;/code&gt; prefix, in order to not have to always write this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;assets/styles/index.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In that case, you could add the following to your &lt;code&gt;jsconfig.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;compilerOptions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;baseUrl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;paths&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@styles/*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;assets/styles/*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, here's how you would import your styles:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@styles/index.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;@&lt;/code&gt; is a conventional way to reference a folder-mapping import, in order to differentiate it from a classic import.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#typescript"&gt;
  &lt;/a&gt;
  TypeScript
&lt;/h1&gt;

&lt;p&gt;Oh, you are using TypeScript? Awesome! Of course you can also use this trick: the only difference is that you won't write those settings inside the &lt;code&gt;jsconfig.json&lt;/code&gt; file, but instead, inside...?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o7TKTDn976rzVgky4/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o7TKTDn976rzVgky4/giphy.gif" alt="https://media.giphy.com/media/3o7TKTDn976rzVgky4/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Exactly! Inside the &lt;code&gt;tsconfig.json&lt;/code&gt; file. Smart, isn't it? üòè&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;That's it! You've now got rid of those awful imports, congratulations! üéâ&lt;/p&gt;

&lt;p&gt;To go further, I would recommend you following &lt;a href="https://code.visualstudio.com/docs/languages/jsconfig"&gt;this link&lt;/a&gt; from the official Visual Studio Code website, in particular to exclude some directories that are not part of the source code.&lt;/p&gt;

&lt;p&gt;With that being said, I thank you for reading me all the way through, and I hope you've learned something with this article. üòé&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o6Zt6KHxJTbXCnSvu/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o6Zt6KHxJTbXCnSvu/giphy.gif" alt="https://media.giphy.com/media/3o6Zt6KHxJTbXCnSvu/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The truth about Open Source Developers. (WDS #2)</title>
      <author>Blake Campbell</author>
      <pubDate>Fri, 14 May 2021 15:49:52 +0000</pubDate>
      <link>https://dev.to/blaketweeted/the-truth-about-open-source-developers-wds-2-2bb9</link>
      <guid>https://dev.to/blaketweeted/the-truth-about-open-source-developers-wds-2-2bb9</guid>
      <description>&lt;p&gt;Disclaimer this is 100% satire. For fun on a Friday (Web Dev Satire #2)&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ICyjQL4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1j1aw6e99t2b4g0xacx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ICyjQL4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1j1aw6e99t2b4g0xacx.png" alt="Screen Shot 2021-05-14 at 11.07.55 AM"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#open-source-developers-make-a-lot"&gt;
  &lt;/a&gt;
  Open Source developers make a lot
&lt;/h1&gt;

&lt;p&gt;As you can see from this chart, I didn't exaggerate that open-source developers make way more than FAANG Developers. This might be the single driving factor in deciding to make a project open-source.&lt;/p&gt;

&lt;p&gt;It's the fastest and most secure way to grab the bag and start buying houses like it's Monopoly. Anyone who tells you Open-source developers don't make this much, well, those are paid actors. &lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#os-developers-love-vague-issues"&gt;
  &lt;/a&gt;
  OS developers love vague issues
&lt;/h1&gt;

&lt;p&gt;One of the best ways to support OS is making vague issues that don't relate to the project. Got to keep those developers on their toes. Sometimes they get lonely. Remind them that you care, just not enough to duplicate the issue or provide any practical information. If you include a version number, you've gone too far. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--65RqViYu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4jc5yponpgxtenr3znr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--65RqViYu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4jc5yponpgxtenr3znr.png" alt="Screen Shot 2021-05-14 at 11.19.24 AM"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#complain-and-add-nothing-on-an-open-issue"&gt;
  &lt;/a&gt;
  Complain and add nothing on an open issue
&lt;/h1&gt;

&lt;p&gt;If you do find a valid issue on Github, complain. Dog-pile on it as much as you can. &lt;/p&gt;

&lt;p&gt;Here are some phrases the OS developers love:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"This is stupid, why does it work this way?"&lt;/li&gt;
&lt;li&gt;"Same"&lt;/li&gt;
&lt;li&gt;"The docs are useless"&lt;/li&gt;
&lt;li&gt;"Can you fix this today?"&lt;/li&gt;
&lt;li&gt;"Help." (That's the entire comment)&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#rant-about-github-activity"&gt;
  &lt;/a&gt;
  Rant about GitHub activity
&lt;/h1&gt;

&lt;p&gt;Why are you making a billion dollars a year when you only commit a few times? Who cares about raising money so you can keep the project alive, I want my free project now! &lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#star-the-project-and-keep-moving-even-if-you-work-at-a-fortune-500-company"&gt;
  &lt;/a&gt;
  Star the project and keep moving, even if you work at a Fortune 500 company
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZN6qOdTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5dl0qsgq23bhfpkp2otz.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZN6qOdTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5dl0qsgq23bhfpkp2otz.jpeg" alt="EPXUU1RXUAEdbjj"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Source: &lt;a href="https://twitter.com/DavidKPiano"&gt;David K Piano&lt;/a&gt; go give him a follow on Twitter. This picture is too good not to include.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Bonus points if you can get your company to send a box of chocolates or a few stickers to that project the company depends on. The margins are so razor-thin for F500 companies that a box of chocolates might be a stretch. &lt;/p&gt;







&lt;p&gt;In case it isn't clear by now, this is satire! Web Dev has gotten so full of uninformed opinions, I thought I'd poke some fun. To all Open-source developers, you're great. The community wouldn't be the same without you! Happy Friday!&lt;/p&gt;

&lt;p&gt;Some of my favorite OS Developers. Thank you!&lt;br&gt;
&lt;a href="https://twitter.com/left_pad"&gt;Henry at BabelJS&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/youyuxi"&gt;Evan You of VueJS&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Akryum"&gt;Guillaume Chau of VueJS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bSdSr1i5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1m71xz5fzmhype617i0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bSdSr1i5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1m71xz5fzmhype617i0.png" alt="c7b8113247fecd83bd9b5ed5bd3f34d5"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Real of open source developers&lt;/em&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>From Amateur to Professional: The One KEY Tip I Give All Aspiring Devs</title>
      <author>Bradston Henry</author>
      <pubDate>Fri, 14 May 2021 15:36:49 +0000</pubDate>
      <link>https://dev.to/bradstondev/from-amateur-to-professional-the-one-key-tip-i-give-all-aspiring-devs-233a</link>
      <guid>https://dev.to/bradstondev/from-amateur-to-professional-the-one-key-tip-i-give-all-aspiring-devs-233a</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MR6h5-S2guE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Throughout the years of being a developer, I have had lots of mentors and those who have shared wisdom and insight that has helped me to get to this point in my career. As I reflect on my time as a developer, if there is one piece of advice I almost always share with all aspiring developers who are hoping to take their career to the next level, it's this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#build-a-thing-deploy-a-thing"&gt;
  &lt;/a&gt;
  Build a Thing, Deploy a Thing!
&lt;/h1&gt;

&lt;p&gt;or &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#build-a-thing-publish-a-thing"&gt;
  &lt;/a&gt;
  Build a Thing, Publish a Thing!
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I know that probably sounds a bit simple but this piece of advice and wisdom can be a huge game-changer in your development career pursuit. &lt;/p&gt;

&lt;p&gt;What I'm trying to say, is to not only write code and try out new techniques and technology, but to take the next step and write code with the intent of releasing that code (or application) to the public. What I mean is that you should put your code in some space where people you know and don't know can use it. I specifically encourage you to package your application in a way that users can use, experiment and (even) break your code.&lt;/p&gt;

&lt;p&gt;At first thought, you may feel that you may not be ready to do this but that is absolutely okay. Even as a seasoned developer, I sometimes feel a bit hesitant about sharing my own code with others who I do not know. But I do believe the experience you gain from going through the process is huge and that the benefits outweigh any possible "negatives".&lt;/p&gt;

&lt;p&gt;So let me briefly breakdown why I think this simple tip can have a huge impact on you as an aspiring developer (and even those who are already professionals):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-you-gain-experience-on-the-development-to-deployment-process"&gt;
  &lt;/a&gt;
  1. You Gain Experience on the Development to Deployment Process
&lt;/h2&gt;

&lt;p&gt;The experience you gain from going through the entire "development lifecycle" of creating an idea, developing and idea, and publishing that idea is invaluable. In the development to deployment process, there are lessons about code quality, code efficiency, environment feasibility, cost constraints, etc. that you could never learn just by working on personal pet projects. Going through the process of preparing application code for "real world" deployment puts in perspective your current coding and development practices and if they actually align with what it takes to actually make a production ready product. &lt;/p&gt;

&lt;p&gt;There is soooo much more I can say on this point and how important that experience becomes in the long-run when you are working in a professional setting but for now I'll leave it at that.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-it-helps-solidify-your-technical-knowledge-on-a-topic"&gt;
  &lt;/a&gt;
  2. It Helps Solidify Your Technical Knowledge on a Topic
&lt;/h2&gt;

&lt;p&gt;One consequence of writing code with the intent to release it, is that in most cases it strengthens your technical knowledge. Throughout the years of programming, I have learned over and over again, that code that I implemented for some type of "Proof of Concept" personal project rarely works in the real world. As you go through the process of preparing your code for deployment, you tend to learn the ins-and-outs of the technology you are working with because "rarely" does code work the same way in a development environment (e.g. your local machine) as it does out in wild (e.g. in the Cloud). When you encounter these discrepancies, it forces you to dig deeper and to understand more. Sometimes, the process of trying to deploy an application alone, can teach you more about the limitations and the strengths of a technology than hours and hours of reading through documentation on that topic.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-it-teaches-you-to-be-more-customer-oriented-and-outwardfocused"&gt;
  &lt;/a&gt;
  3. It Teaches You to be More Customer Oriented and Outward-Focused
&lt;/h2&gt;

&lt;p&gt;I remember shortly after I published my first game to the Android app store that I shared my game with a friend to check out. I simply told him to check out this new game and I gave him no context on how to play the game or its objective. I stood silently next to him as I watched him download, boot up and play the game. In the 5-10 minutes of watching him play the game, I learned one of the most crucial lessons that has helped me in my professional development career: &lt;/p&gt;

&lt;p&gt;"Just because something makes sense to me, does NOT mean it makes sense to other people" &lt;/p&gt;

&lt;p&gt;Watching my friend play, I realized that I had developed the game with only myself in mind as the user or customer. The UI or user interface only made sense to me. The game rules only made sense to me. And the list went on. &lt;/p&gt;

&lt;p&gt;It taught me a valuable lesson: "When creating an application you are almost NEVER the target audience." In most cases when developing code for applications in a professional setting, you are not the only person who will use your application. And building applications that you plan to publish, will really solidify that concept. You will begin thinking of how you code will make sense to someone else whom you will never see and never be able to explain your decisions to. It forces you to think more outwardly and consider how a "prospective customer" would use your application. It helps you to have a much more mature and well-rounded point of view when developing applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-published-applications-speak-volumes-in-interviews"&gt;
  &lt;/a&gt;
  4. Published Applications Speak Volumes in Interviews
&lt;/h2&gt;

&lt;p&gt;It's simple: &lt;strong&gt;Why not show an employer what you are capable of instead of telling them.&lt;/strong&gt; One of the core reasons I got my first position at IBM was that I was able to show the hiring manager that I was already able to do the tasks that would be required of me in my new position. Instead of talking about how I had worked with multiple mobile technologies and how I knew about Android development, I simply shared my Android app store link and they were able to see my skills in action. That alone didn't get me the job but after that, the interview was not about if I was able to do the job but if the job would be a good fit for me. Once again, it  most likely won't get you the job all on its own but it speaks volumes about your skills.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-it-teaches-discipline"&gt;
  &lt;/a&gt;
  5. It Teaches Discipline
&lt;/h2&gt;

&lt;p&gt;There is a TON I could say on this specific point but in short, taking an application from development to deployment teaches you what it takes to get it done. It teaches you the steps, the pitfalls, the difficulties and most importantly it teaches you that you can do it. It teaches you the discipline of actually finishing a development project and what it takes. As you work in your professional career, it is inevitable that you will encounter some difficulties; Difficult projects, un-cooperative technology and unreasonable deadlines to name a few. But if you have the experience of deploying applications, If you know what it takes, if you have built that discipline; then &lt;strong&gt;those difficulties with not define you, they will just refine you&lt;/strong&gt;. You will know what it takes to get across the finish line, you will know that you can do it, and you will have the skills and experience to do so.&lt;/p&gt;




&lt;p&gt;In my personal opinion, building and deploying apps as an aspiring dev is key. It has personally helped me to get to where I am professionally and I have seen the positive impact it has had on colleagues and friends attempting to pursue and advance their career in development.&lt;/p&gt;

&lt;p&gt;So I've had an opportunity to share my personal opinion but I'd love to hear yours.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#so-what-is-your-key-tip-for-aspiring-developers-attempting-to-go-from-amateur-to-professional"&gt;
  &lt;/a&gt;
  So what is YOUR key tip for aspiring developers attempting to go from amateur to professional?
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xN8cGMqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3pwabyxv7p1h5mr1zae.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;LOOKING TO LEARN A THING? Check out some of my previous blogs and tutorials:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ibm.biz/how-to-containerize-react-app-031821-bradstondev"&gt;Dockers and Dad Jokes: How to Containerize a ReactJS Application&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ibm.biz/deploying-react-app-in-cloud-devto-bradstondev"&gt;Deploying your first ReactJS application into the Cloud&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Creating Your Own Chat Room with React, Node, and Socket.io in the Cloud &lt;a href="https://ibm.biz/create-chat-room-in-cloud-blog-part1"&gt;Part 1&lt;/a&gt; &lt;a href="https://ibm.biz/create-chat-room-in-cloud-blog-part2"&gt;Part 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;==== FOLLOW ME ON SOCIAL MEDIA ====&lt;/p&gt;

&lt;p&gt;Twitter: &lt;a href="https://twitter.com/BradstonDev"&gt;Bradston Dev&lt;/a&gt;&lt;br&gt;
Dev.to: &lt;a class="mentioned-user" href="https://dev.to/bradstondev"&gt;@bradstondev&lt;/a&gt;
 &lt;br&gt;
Youtube: &lt;a href="https://www.youtube.com/channel/UC6Ky8s71RP65akLb_XV1_OA"&gt;Bradston YT&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>career</category>
      <category>programming</category>
    </item>
    <item>
      <title>What if Stripe was the next Google?</title>
      <author>swyx</author>
      <pubDate>Fri, 14 May 2021 14:54:25 +0000</pubDate>
      <link>https://dev.to/swyx/what-if-stripe-was-the-next-google-g9d</link>
      <guid>https://dev.to/swyx/what-if-stripe-was-the-next-google-g9d</guid>
      <description>&lt;p&gt;A while ago, Paul Graham &lt;a href="https://twitter.com/paulg/status/1314948607662010374"&gt;made&lt;/a&gt; a big call:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"I'm going to risk calling it. The feeling of deja vu is too strong. Stripe is the next Google."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At the time, Stripe had last raised at a &lt;a href="https://www.cnbc.com/2020/04/16/stripe-raises-600-million-funding-round-at-36-billion-valuation.html"&gt;$36 billion valuation&lt;/a&gt; - a year later, it's now valued at &lt;a href="https://www.cnbc.com/2021/03/14/stripe-valued-at-95-billion-in-600-million-funding-round.html"&gt;$95 billion&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;This would be a lifetime peak valuation for most exited startups (Uber changed transportation and Airbnb changed hotels, and both are currently worth $80b), so what Paul was really doing here is making an active prediction that the ceiling for Stripe is &lt;em&gt;much higher&lt;/em&gt;. Google is valued at $1500 billion at time of writing ‚Äî and Paul thinks they will "probably" be bigger ("&lt;a href="https://twitter.com/paulg/status/1314951673203359756?s=20"&gt;There is more money in money than search&lt;/a&gt;").&lt;/p&gt;

&lt;p&gt;It isn't a given by any means (though Paul has had a &lt;a href="https://twitter.com/paulg/status/1391865950769659907"&gt;decent streak in calls&lt;/a&gt; lately). Stripe does face competition in established payment processors, as well as Adyen, though momentum &lt;a href="https://twitter.com/GergelyOrosz/status/1352188920025522177"&gt;appears weak&lt;/a&gt;. You could handicap its odds of being "the next Google" at, say, a fairly conservative 50%.&lt;/p&gt;

&lt;p&gt;That means &lt;strong&gt;the expected return of betting on Stripe for the next decade is ~10x&lt;/strong&gt; (it's more like 8x, but who's counting). You don't get this fat a pitch in this league.&lt;/p&gt;

&lt;p&gt;So given that you have a &lt;a href="https://www.anthonyjcampbell.com/blog/optimism"&gt;definite optimist&lt;/a&gt; approach to the future, what do you do with this information?&lt;/p&gt;

&lt;p&gt;I think about this question a lot. The simple first order answer, of course, is to join Stripe. Most engineers will be millionaires 10x-ing on option grants.&lt;/p&gt;

&lt;p&gt;But that may not even be the best use of time for you. Stripe aims to be a &lt;a href="https://stratechery.com/2020/stripe-platform-of-platforms/"&gt;platform of platforms&lt;/a&gt;. The &lt;a href="https://twitter.com/swyx/status/1360729115372920832"&gt;Mullenweg-Gates Line&lt;/a&gt; notes that effective platforms capture only about 5% of the total value they create. There's approximately $14 trillion ((EV of 800b - Current Valuation 100b)/5%) in value of platform to be built atop Stripe.&lt;/p&gt;

&lt;p&gt;Stripe currently lists 10 products on its home page, from the classic Payments and Billing to the newer Atlas and Climate. The vast majority of developers have only a narrow view of Stripe's world. I would explore ways to explore and exploit the capabilities opened up by Stripe's newer products ‚Äî in particular the recently launched &lt;a href="https://stripe.com/capital"&gt;Capital&lt;/a&gt; and &lt;a href="https://stripe.com/treasury"&gt;Treasury&lt;/a&gt; services.&lt;/p&gt;

&lt;p&gt;You could also become a domain expert in &lt;em&gt;optimizing for Stripe&lt;/em&gt;. Platforms tend to reward this behavior greatly. There is no Stripe podcast. No Stripe newsletter. No "Stripe Enterprise Optimization" cottage industry. The room for the "&lt;a href="https://en.wikipedia.org/wiki/Danny_Sullivan_(technologist)"&gt;Danny Sullivan&lt;/a&gt; of Stripe" exists.&lt;/p&gt;

&lt;p&gt;There's also the challenger status - figure out what Stripe is philosophically prevented from doing, and &lt;a href="https://jppandith.substack.com/p/33-counter-positioning-3rd-of-the"&gt;counter-position&lt;/a&gt; in that exact thing. &lt;a href="https://duckduckgo.com/traffic"&gt;DuckDuckGo is growing &amp;gt;50% a year&lt;/a&gt; being the credible anti-Google. The obvious angle here is that Stripe is very traditional-economy oriented (with &lt;a href="https://news.ycombinator.com/item?id=24291790"&gt;attendant frustrations&lt;/a&gt;): what is the decentralized, permissionless, equivalent of Stripe? The reason I don't love this as much is it feels like too much of a "bank shot", but surely there's a few billion of value in here for the patient and ideologically committed.&lt;/p&gt;

&lt;p&gt;What else?&lt;/p&gt;

</description>
      <category>reflections</category>
    </item>
    <item>
      <title>Heart diseases prediction app creation using cloud platforms &amp; MLOps tools</title>
      <author>Sachin Kumar</author>
      <pubDate>Fri, 14 May 2021 14:15:42 +0000</pubDate>
      <link>https://dev.to/hackcoderr/heart-diseases-prediction-app-creation-using-cloud-platforms-mlops-tools-15gp</link>
      <guid>https://dev.to/hackcoderr/heart-diseases-prediction-app-creation-using-cloud-platforms-mlops-tools-15gp</guid>
      <description>&lt;p&gt;Welcome back to my another projet based staff. Here I am going to discuss all this project from the very beginning to the end. So Hopefully, you will really enjoy it. So let's get started.&lt;/p&gt;

&lt;p&gt;As it's clear from the name &lt;strong&gt;Heart diseases prediction app creation using cloud platforms &amp;amp; MLOps tools&lt;/strong&gt;, I am going to create a health-related application with an industry approach. So let's see step by step all my activities for deploying this project in the production environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#required-knowledge"&gt;
  &lt;/a&gt;
  Required knowledge
&lt;/h2&gt;

&lt;p&gt;To create this project, having good knowledge of the following tools and platforms is a prerequisite.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Terraform&lt;/li&gt;
&lt;li&gt;Cloud Platforms

&lt;ul&gt;
&lt;li&gt;Amazon Web Services (AWS)&lt;/li&gt;
&lt;li&gt;Microsoft Azure&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Ansible&lt;/li&gt;
&lt;li&gt;Kubernetes&lt;/li&gt;
&lt;li&gt;Machine Learning&lt;/li&gt;
&lt;li&gt;Git and Github&lt;/li&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;Jenkins&lt;/li&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;these all tools and platforms will help us how we can automate this project. So let's see the usages of all mentioned staff one by one and why we are using them here. So let's started with terraform.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#terraform"&gt;
  &lt;/a&gt;
  Terraform
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.terraform.io/"&gt;Terraform&lt;/a&gt; is an open-source infrastructure as a code software tool that provides a consistent CLI workflow to manage hundreds of cloud services. Terraform codifies cloud APIs into declarative configuration files.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-im-using-terraform-here"&gt;
  &lt;/a&gt;
  Why I'm using Terraform here.
&lt;/h3&gt;

&lt;p&gt;As it's mentioned in the above introduction of &lt;em&gt;Terraform&lt;/em&gt; that we use this to manage the cloud services So I want to use some cloud platforms (AWS, Azure, and GCP) here so that I can create the below-mentioned reproducible infrastructure.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--723wsJZ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s37k5nv4xqs2m4yxjbd2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--723wsJZ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s37k5nv4xqs2m4yxjbd2.png" alt="Terraform  infrastructure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now it's time to install the terraform. So let see its installation.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#install-terraform"&gt;
  &lt;/a&gt;
  Install terraform.
&lt;/h3&gt;

&lt;p&gt;If you're using Linux os as terraform workstation then run the below commands otherwise go with the mentioned link and install terraform according to your OS.&lt;br&gt;
&lt;a href="https://www.terraform.io/downloads.html"&gt;https://www.terraform.io/downloads.html&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo yum install wget -y
sudo wget https://releases.hashicorp.com/terraform/0.15.3/terraform_0.15.3_linux_amd64.zip 
sudo yum install unzip -y
sudo unzip terraform_0.15.3_linux_amd64.zip 
sudo mv terraform /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now check to terraform version with &lt;code&gt;terraform -version&lt;/code&gt; command.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AKb6Ywoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ii1264fa9h3ldzffei1l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AKb6Ywoo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ii1264fa9h3ldzffei1l.png" alt="terraform -version"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚ö†Ô∏è Hopefully now it's clear what I am going to do with the help of Terraform as it's clearly mentioned in the above diagram. I'm going to use 2 cloud platforms (AWS and Azure). So let start with AWS Cloud then I will go with Azure.&lt;/p&gt;

&lt;p&gt;Before going onward, let me create a workspace where I will save all the things related to this project.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iPzKibuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ityumun4ssxlnk14xe3k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iPzKibuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ityumun4ssxlnk14xe3k.png" alt="workspace"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#amazon-web-services-aws"&gt;
  &lt;/a&gt;
  Amazon Web Services (AWS)
&lt;/h1&gt;

&lt;p&gt;Amazon web service is an online platform that provides scalable and cost-effective cloud computing solutions. It is a broadly adopted cloud platform that offers several on-demand operations like compute power, database storage, content delivery, etc., to help corporates scale and grow.&lt;/p&gt;

&lt;p&gt;But if you want to more about it then visit the below link.&lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Amazon_Web_Services"&gt;https://en.wikipedia.org/wiki/Amazon_Web_Services&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#aws-iam"&gt;
  &lt;/a&gt;
  AWS IAM
&lt;/h2&gt;

&lt;p&gt;AWS Identity and Access Management (IAM) is a web service that helps you securely control access to AWS resources. You use IAM to control who is authenticated (signed in) and authorized (has permissions) to use resources.&lt;/p&gt;

&lt;p&gt;Now we will need &lt;code&gt;access key&lt;/code&gt; and &lt;code&gt;secret key&lt;/code&gt; for creating VPC and launch AWS instances by terraform tool that why we have to create &lt;strong&gt;AWS IAM User&lt;/strong&gt; with &lt;code&gt;AmazonVPCFullAccess&lt;/code&gt; and &lt;code&gt;AmazonEC2FullAccess&lt;/code&gt;. So download your IAM credential file.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3FoQfibZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k06uaahwv0oztqjkos59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3FoQfibZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k06uaahwv0oztqjkos59.png" alt="AWS IAM"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#install-aws-cli"&gt;
  &lt;/a&gt;
  Install AWS CLI
&lt;/h3&gt;

&lt;p&gt;Now install AWS CLI in your terraform workstation that will help to create making AWS profile and other staff. So if you are using linux then run the below commands and for others os visit the mentioned link.&lt;br&gt;
&lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html"&gt;https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#creating-aws-profile"&gt;
  &lt;/a&gt;
  Creating AWS Profile
&lt;/h3&gt;

&lt;p&gt;Now you can easily make an AWS CLI profile which we will use in &lt;code&gt;aws.tf&lt;/code&gt; file as a profile. So let's see.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First of all log in with AWS CLI.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws configure
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;After running the above command, give your &lt;code&gt;access key&lt;/code&gt; &amp;amp; &lt;code&gt;secret key&lt;/code&gt; which you downloaded during the creating &lt;strong&gt;AWS IAM User&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nRcdgN2E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/984ec7wjbdv082nsoojg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nRcdgN2E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/984ec7wjbdv082nsoojg.png" alt="aws configure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now run the below command to make your profile and the same is here, give your access and secret key.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws configure --profile profilename
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z1Ek5y5O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbbtvxpj91ste4oocdxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z1Ek5y5O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lbbtvxpj91ste4oocdxc.png" alt="aws profile"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚ö†Ô∏è Also, you can check your profile with the help of the below command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws configure --list-profiles
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now time is to move towards terraform code so make your workspace.&lt;br&gt;
Note: I am following mentioned workspace for terraform staff for easy understanding so you also can follow this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/root/hdp-project/terraform/aws/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;So create &lt;code&gt;aws.tf&lt;/code&gt; file inside above mentioned and write the below code.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;provider "aws" {
  region = "ap-south-1"
  profile = "hackcoderr"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you can set any &lt;code&gt;region&lt;/code&gt; at the place &lt;code&gt;ap-south-1&lt;/code&gt; according to your need and give your profile name instead of my profile &lt;code&gt;hakcoderr&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#initializing-terraform-code"&gt;
  &lt;/a&gt;
  Initializing terraform code
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;terraform init&lt;/code&gt; command is used to initialize a working directory containing Terraform configuration files. This is the first command that should be run after writing a new Terraform configuration or cloning an existing one from version control. It is safe to run this command multiple times. You can initialize using &lt;code&gt;terraform init&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-Mm6GIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hs1tmttqc7h73e79nrp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-Mm6GIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hs1tmttqc7h73e79nrp.png" alt="terraform-init"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-amazon-vpc"&gt;
  &lt;/a&gt;
  Creating Amazon VPC
&lt;/h3&gt;

&lt;p&gt;Amazon Virtual Private Cloud (Amazon VPC) enables you to launch AWS resources into a virtual network that you‚Äôve defined. This virtual network closely resembles a traditional network that you‚Äôd operate in your own data center, with the benefits of using the scalable infrastructure of AWS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_vpc" "vpc" {
  cidr_block       = "192.168.0.0/16"
  instance_tenancy = "default"
  enable_dns_support   = "true"
  enable_dns_hostnames = "true"
  tags = {
    Name = "aws-heart-disease-predictor-vpc"
    Environment = "Production"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, you can choose Classless Inter-Domain Routing &lt;strong&gt;(CIDR)&lt;/strong&gt; block range according to your desired and if you don't want to &lt;strong&gt;DNS&lt;/strong&gt; support then you can write &lt;code&gt;false&lt;/code&gt; to &lt;code&gt;enable_dns_support&lt;/code&gt;. and give any &lt;code&gt;tag&lt;/code&gt; as you want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--frXmIxp6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojyuseglxaya894ht3f9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--frXmIxp6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojyuseglxaya894ht3f9.png" alt="AWS VPC"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-subnet"&gt;
  &lt;/a&gt;
  Creating subnet
&lt;/h3&gt;

&lt;p&gt;Subnetwork or subnet is a logical subdivision of an IP network. The practice of dividing a network into two or more networks is called subnetting. AWS provides two types of subnetting one is Public which allows the internet to access the machine and another is private which is hidden from the internet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_subnet" "subnet-1a" {
  vpc_id     = aws_vpc.vpc.id
  cidr_block = "192.168.0.0/24"
  availability_zone = "ap-south-1a"
  map_public_ip_on_launch = "true"

  tags = {
    Name = "aws-heart-disease-predictor-sunbet"
    Environment = "Production"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here &lt;code&gt;CIDR&lt;/code&gt; range should be under your &lt;strong&gt;VPC CIDR&lt;/strong&gt; range otherwise it doesn't work and &lt;code&gt;map_public_ip_on_launch&lt;/code&gt; is used to assign public IP to instance after launching, choose any &lt;code&gt;availability_zone&lt;/code&gt; available your selected &lt;code&gt;region&lt;/code&gt;. You can give tags for easy recognition after creating subnets.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3cmdLVVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zir7lz04482x878t4ie2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3cmdLVVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zir7lz04482x878t4ie2.png" alt="AWS subnet"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-internet-gateway"&gt;
  &lt;/a&gt;
  Creating Internet Gateway
&lt;/h3&gt;

&lt;p&gt;An internet gateway serves two purposes: to provide a target in your VPC route tables for internet-routable traffic and to perform network address translation (NAT) for instances that have been assigned public IPv4 addresses.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.vpc.id

  tags = {
    Name = "aws-heart-disease-predictor-internet-gateway"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the above code will create your respective internet gateway. you need to specify on which VPC you want to create an internet gateway. Also, you can give a name using a tag block.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--evlyxJ_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odkofru6ov119mm5qidg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--evlyxJ_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odkofru6ov119mm5qidg.png" alt="internet gateway"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-route-table"&gt;
  &lt;/a&gt;
  Creating route table
&lt;/h3&gt;

&lt;p&gt;A routing table contains a set of rules, called routes, that are used to determine where network traffic from your subnet or gateway is directed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_route_table" "route_table" {
  vpc_id = aws_vpc.vpc.id

  route {

gateway_id = aws_internet_gateway.gw.id
    cidr_block = "0.0.0.0/0"
  }

    tags = {
    Name = "aws-heart-disease-predictor-route-table"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to create a routing table for the internet gateway you have created above. Here, I am allowing all the IP rage. So my ec2 instances can connect to the internet world. we need to give the vpc_id so that we can easily allocate the routing table to the respective VPC. You can specify the name of the routing table using a tag block.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TR6g2F16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97k3npq2td2unofqt2fs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TR6g2F16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97k3npq2td2unofqt2fs.png" alt="Route table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#route-table-association-to-subnets"&gt;
  &lt;/a&gt;
  Route Table Association To Subnets
&lt;/h3&gt;

&lt;p&gt;We need to connect the routing table created for internet gateways to the respective subnets inside the vpc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Route Table Association
resource "aws_route_table_association" "route-association" {
  subnet_id      = aws_subnet.subnet-1a.id
  route_table_id = aws_route_table.route_table.id
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to specify which subnets you want to take to the public world. As if the subnets get associated(connected) to the Internet Gateway it will be a public subnet. But if you don‚Äôt associate subnets to the Internet gateway routing table then it will be known as private subnets. The instances which are launched in the private subnet are not able to connect from outside as it will not having public IP, also it will not be connected to the Internet Gateway. You need to specify the routing table for the association of the subnets. If you don‚Äôt specify the routing table in the above association block then the subnet will take the vpc‚Äôs route table. So if you want to take the ec2 instances to the public world then you need to specify the router in the above association block. It's upon you which IP range you want your ec2 instances to connect. Here I have to give 0.0.0.0/0 means I can access anything from the ec2 instances.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-security-group"&gt;
  &lt;/a&gt;
  Creating Security Group
&lt;/h3&gt;

&lt;p&gt;A security group acts as a virtual firewall for your EC2 instances to control incoming and outgoing traffic. If you don‚Äôt specify a security group, Amazon EC2 uses the default security group. You can add rules to each security group that allows traffic to or from its associated instances.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_security_group" "SG" {
  name = "Heart-SG"
  vpc_id = "${aws_vpc.vpc.id}"
  ingress {
      from_port   = 0
      to_port     = 0
      protocol    = "-1"
      cidr_blocks = ["0.0.0.0/0"]
  }

 egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  tags ={
    Environment = "Production"
    Name= "aws-heart-disease-predictor-SG"
  }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above will create a security group that works as a firewall. So which type of traffic want to &lt;code&gt;engress&lt;/code&gt;&amp;amp; &lt;code&gt;ingress&lt;/code&gt; you can set here. But I want to all types of traffic SO  here I have given &lt;code&gt;all traffic&lt;/code&gt;. &lt;code&gt;-1&lt;/code&gt; means all. &lt;code&gt;from_port= 0&lt;/code&gt; &lt;code&gt;to_port=0&lt;/code&gt; &lt;code&gt;(0.0.0.0)&lt;/code&gt; that means we have disabled the firewall and(0.0.0.0/0) means all traffic I can able to access from this outbound rule. You can give the name of the respective Security Group.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9r57hKKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xj8fvzp5oc8upv94xcgm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9r57hKKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xj8fvzp5oc8upv94xcgm.png" alt="aws sg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-code-for-aws-instances"&gt;
  &lt;/a&gt;
  Creating code for AWS Instances
&lt;/h3&gt;

&lt;p&gt;An EC2 instance is nothing but a virtual server in Amazon Web services terminology. It stands for Elastic Compute Cloud. It is a web service where an AWS subscriber can request and provision a compute server in the AWS cloud. AWS provides multiple instance types for the respective business needs of the user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_instance" "AWS-HDP-instance" {
  ami    = "ami-0a9d27a9f4f5c0efc"
  count  = "3"
  instance_type = "t2.micro"
  subnet_id = "${aws_subnet.subnet-1a.id}"
  vpc_security_group_ids = ["${aws_security_group.SG.id}"]
  key_name = "key"
 tags ={
    Environment = "Production"
    Name= "AWS-HDP-Instance"
  }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above will launch EC2 instance so &lt;code&gt;ami&lt;/code&gt; &lt;code&gt;count&lt;/code&gt; and &lt;code&gt;instance_type&lt;/code&gt; you can choose according to your desired and write &lt;code&gt;tags&lt;/code&gt; as you want. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you want to see complete code at a time then go through my git repo.&lt;br&gt;
&lt;a href="https://github.com/hackcoderr/heart-diseases-predictor/blob/master/terraform/aws/aws.tf"&gt;https://github.com/hackcoderr/heart-diseases-predictor/blob/master/terraform/aws/aws.tf&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#microsoft-azure"&gt;
  &lt;/a&gt;
  Microsoft Azure
&lt;/h1&gt;

&lt;p&gt;It's also a public cloud provider and provides resources and services as AWS provides. So hopefully, you have an idea about it otherwise you want to more about it then visit mentioned link. &lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Microsoft_Azure"&gt;https://en.wikipedia.org/wiki/Microsoft_Azure&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#install-azure-cli"&gt;
  &lt;/a&gt;
  Install Azure CLI
&lt;/h3&gt;

&lt;p&gt;Here, we have to also install Azure CLI for the Azure profile So that run the terraform code for azure. So If you're using RHEL, CentOS, or Fedora as a linux then run the below commands otherwise follow this &lt;a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli"&gt;link&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
echo -e "[azure-cli]
name=Azure CLI
baseurl=https://packages.microsoft.com/yumrepos/azure-cli
enabled=1
gpgcheck=1
gpgkey=https://packages.microsoft.com/keys/microsoft.asc" | sudo tee /etc/yum.repos.d/azure-cli.repo
sudo dnf install azure-cli -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So let's check the Azure CLI version just for confirmation.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZDm_ZrR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1hnuq67fsnv20lmpdd8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZDm_ZrR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1hnuq67fsnv20lmpdd8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#login-with-azure-through-cli"&gt;
  &lt;/a&gt;
  Login with Azure through CLI
&lt;/h3&gt;

&lt;p&gt;When we will work terraform, we have to provide the azure credentials for the Azure profile so that we can login with azure. so there are many ways to login with it and Azure CLI is one of them that I am going to use. So let's move ahead and login.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;az login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kgu3T65C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsifhg2y4g9ra7ppy4yv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kgu3T65C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsifhg2y4g9ra7ppy4yv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
As you will type the above command, yellow-colored instructions will come up. So browse the given URL that I have underlined with red color. After it, a window will pop up and give the given Code. Now you can see your azure credentials on your CLI. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you get more than one subscription id then you can simply select one id with the below command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;az account set --subscription "My Demos"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So now time is to move towards writing the terraform code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-the-microsoft-azure-provider"&gt;
  &lt;/a&gt;
  Configure the Microsoft Azure Provider
&lt;/h3&gt;

&lt;p&gt;The provider section tells Terraform to use an Azure provider. It will use your azure credentials like &lt;code&gt;subscription_id&lt;/code&gt;, &lt;code&gt;client_id&lt;/code&gt;, &lt;code&gt;client_secret&lt;/code&gt;, and &lt;code&gt;tenant_id&lt;/code&gt; behind the scene.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;provider "azurerm" {
    features {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-resource-group"&gt;
  &lt;/a&gt;
  Create a resource group
&lt;/h3&gt;

&lt;p&gt;A resource group is a container that holds related resources for an Azure solution. The resource group can include all the resources for the solution, or only those resources that you want to manage as a group.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_resource_group" "hdp-rg" {
    name     = "Azure-HDP-ResourceGroup"
    location = "Central India"

    tags = {
        Name = "Azure-HDP-RG"
        environment = "Production"
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section creates a resource group named &lt;code&gt;Azure-HDP-ResourceGroup&lt;/code&gt; in the &lt;code&gt;Central India&lt;/code&gt; location. But these things you can manage according to your desire.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ekn43MTJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fql45jzbdwyju7uub0pl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ekn43MTJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fql45jzbdwyju7uub0pl.png" alt="hdp-rg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-virtual-network"&gt;
  &lt;/a&gt;
  Create a virtual network
&lt;/h3&gt;

&lt;p&gt;It has the same concept as AWS VPC so let understand the template code for it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_virtual_network" "hdp-vnet" {
    name                = "Azure-HDP-Vnet"
    address_space       = ["192.168.0.0/16"]
    location            = azurerm_resource_group.hdp-rg.location
    resource_group_name = azurerm_resource_group.hdp-rg.name

    tags = {
        Name = "Azure-HDP-VNet"
        environment = "Production"
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section creates a virtual network named &lt;code&gt;Azure-HDP-Vnet&lt;/code&gt; in the &lt;code&gt;192.168.0.0/16&lt;/code&gt; address space.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W4e26zhP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmmg5xvy60otmojxptt4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4e26zhP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmmg5xvy60otmojxptt4.png" alt="VNet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-subnet"&gt;
  &lt;/a&gt;
  Create subnet
&lt;/h3&gt;

&lt;p&gt;It also works as AWS Subnet so let's see code directly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_subnet" "hdp-subnet" {
    name                 = "Azure-HDP-Subnet"
    resource_group_name  = azurerm_resource_group.hdp-rg.name
    virtual_network_name = azurerm_virtual_network.hdp-vnet.name
    address_prefixes       = ["192.168.0.0/24"]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section creates a subnet named &lt;code&gt;Azure-HDP-Subnet&lt;/code&gt; in the &lt;code&gt;Azure-HDP-Vnet&lt;/code&gt; virtual network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uCQavjkd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4q98puxfomtvly55goxi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uCQavjkd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4q98puxfomtvly55goxi.png" alt="azure-subnet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-public-ip-address"&gt;
  &lt;/a&gt;
  Create public IP address
&lt;/h3&gt;

&lt;p&gt;To access resources across the Internet, create and assign a public IP address to your VM. So I'm going to 3 VM's that's why I will need 3 Public IPs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_public_ip" "hdp-publicip-1" {
    name                         = "Azure-HDP-PublicIP-1"
    location                     = azurerm_resource_group.hdp-rg.location
    resource_group_name          = azurerm_resource_group.hdp-rg.name
    allocation_method            = "Dynamic"

    tags = {
        Name = "HDP-Public-IP-1"
        environment = "Production"
    }
}

resource "azurerm_public_ip" "hdp-publicip-2" {
    name                         = "Azure-HDP-PublicIP-2"
    location                     = azurerm_resource_group.hdp-rg.location
    resource_group_name          = azurerm_resource_group.hdp-rg.name
    allocation_method            = "Dynamic"

    tags = {
        Name = "HDP-Public-IP-2"
        environment = "Production"
    }
}

resource "azurerm_public_ip" "hdp-publicip-3" {
    name                         = "Azure-HDP-PublicIP-3"
    location                     = azurerm_resource_group.hdp-rg.location
    resource_group_name          = azurerm_resource_group.hdp-rg.name
    allocation_method            = "Dynamic"

    tags = {
        Name = "HDP-Public-IP-3"
        environment = "Production"
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section creates 3 public IP address named &lt;code&gt;Azure-HDP-PublicIP-1&lt;/code&gt; and so on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-network-security-group"&gt;
  &lt;/a&gt;
  Create Network Security Group
&lt;/h3&gt;

&lt;p&gt;Network Security Groups control the flow of network traffic in and out of your VM.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_network_security_group" "hdp-sg" {
    name                = "Azure-HDP-SG"
    location            = azurerm_resource_group.hdp-rg.location
    resource_group_name = azurerm_resource_group.hdp-rg.name

    security_rule {
        name                       = "SSH"
        priority                   = 1001
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "Tcp"
        source_port_range          = "*"
        destination_port_range     = "22"
        source_address_prefix      = "*"
        destination_address_prefix = "*"
    }

    tags = {
        Name = "Azure-HDP-SG"
        environment = "Production"
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section creates a network security group named &lt;code&gt;Azure-HDP-SG&lt;/code&gt; and defines a rule to allow SSH traffic on &lt;code&gt;TCP port 22&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-virtual-network-interface-card"&gt;
  &lt;/a&gt;
  Create virtual network interface card.
&lt;/h3&gt;

&lt;p&gt;A virtual network interface card (NIC) connects your VM to a given virtual network, public IP address, and network security group.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_network_interface" "hdp-nic-1" {
    name                      = "myNIC-1"
    location                  = azurerm_resource_group.hdp-rg.location
    resource_group_name       = azurerm_resource_group.hdp-rg.name

    ip_configuration {
        name                          = "myNicConfiguration"
        subnet_id                     = azurerm_subnet.hdp-subnet.id
        private_ip_address_allocation = "Dynamic"
        public_ip_address_id          = azurerm_public_ip.hdp-publicip-1.id
    }

    tags = {
        Name = "HDP-NIC-1"
        Environment = "Production"
    }
}

resource "azurerm_network_interface" "hdp-nic-2" {
    name                      = "myNIC-2"
    location                  = azurerm_resource_group.hdp-rg.location
    resource_group_name       = azurerm_resource_group.hdp-rg.name

    ip_configuration {
        name                          = "myNicConfiguration"
        subnet_id                     = azurerm_subnet.hdp-subnet.id
        private_ip_address_allocation = "Dynamic"
        public_ip_address_id          = azurerm_public_ip.hdp-publicip-2.id
    }

    tags = {
        Name = "HDP-NIC-2"
        Environment = "Production"
    }
}

resource "azurerm_network_interface" "hdp-nic-3" {
    name                      = "myNIC-3"
    location                  = azurerm_resource_group.hdp-rg.location
    resource_group_name       = azurerm_resource_group.hdp-rg.name

    ip_configuration {
        name                          = "myNicConfiguration"
        subnet_id                     = azurerm_subnet.hdp-subnet.id
        private_ip_address_allocation = "Dynamic"
        public_ip_address_id          = azurerm_public_ip.hdp-publicip-3.id
    }

    tags = {
        Name = "HDP-NIC-3"
        Environment = "Production"
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section in a Terraform template creates 3 virtual NIC named &lt;code&gt;myNIC-1&lt;/code&gt; and so no, connected to the virtual networking resources you've created.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#connect-the-security-group-to-the-network-interface"&gt;
  &lt;/a&gt;
  Connect the security group to the network interface
&lt;/h3&gt;

&lt;p&gt;Now you can connect your nic cards with the security group which you have created.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_network_interface_security_group_association" "hdp-nic-sg-1" {
    network_interface_id      = azurerm_network_interface.hdp-nic-1.id
    network_security_group_id = azurerm_network_security_group.hdp-sg.id
}

resource "azurerm_network_interface_security_group_association" "hdp-nic-sg-2" {
    network_interface_id      = azurerm_network_interface.hdp-nic-2.id
    network_security_group_id = azurerm_network_security_group.hdp-sg.id
}

resource "azurerm_network_interface_security_group_association" "hdp-nic-sg-3" {
    network_interface_id      = azurerm_network_interface.hdp-nic-3.id
    network_security_group_id = azurerm_network_security_group.hdp-sg.id
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section in a Terraform template creates 3 security group associations connected to the nic cards you've created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bq7qMHKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyy6wuzs80f20ts9kibx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bq7qMHKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyy6wuzs80f20ts9kibx.png" alt="nic card"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-virtual-machines"&gt;
  &lt;/a&gt;
  Create the virtual machines
&lt;/h3&gt;

&lt;p&gt;The final step is to create  VMs and use all the resources created. So you see here 3 VMs named as &lt;code&gt;az-hdp-vm-1&lt;/code&gt; and so no.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; resource "azurerm_virtual_machine" "main-1" {
  name                  = "az-hdp-vm-1"
  location              = azurerm_resource_group.hdp-rg.location
  resource_group_name   = azurerm_resource_group.hdp-rg.name
  network_interface_ids = [azurerm_network_interface.hdp-nic-1.id]
  vm_size               = "Standard_DS1_v2"
  delete_os_disk_on_termination = true
  delete_data_disks_on_termination = true

  storage_image_reference {
    publisher = "RedHat"
    offer     = "RHEL"
    sku       = "8.1"
    version   = "latest"
  }
  storage_os_disk {
    name              = "hdp-disk-1"
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "Standard_LRS"
  }
  os_profile {
    computer_name  = "hostname"
    admin_username = "hdpAdmin"
    admin_password = "Password1234!"
  }
  os_profile_linux_config {
    disable_password_authentication = false
  }

  tags = {
    Name = "Az-HDP-Slave-1"
    Environment = "Production"
  }
}


resource "azurerm_virtual_machine" "main-2" {
  name                  = "az-hdp-vm-2"
  location              = azurerm_resource_group.hdp-rg.location
  resource_group_name   = azurerm_resource_group.hdp-rg.name
  network_interface_ids = [azurerm_network_interface.hdp-nic-2.id]
  vm_size               = "Standard_DS1_v2"
  delete_os_disk_on_termination = true
  delete_data_disks_on_termination = true

  storage_image_reference {
    publisher = "RedHat"
    offer     = "RHEL"
    sku       = "8.1"
    version   = "latest"
  }
  storage_os_disk {
    name              = "hdp-disk-2"
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "Standard_LRS"
  }
  os_profile {
    computer_name  = "hostname"
    admin_username = "hdpAdmin"
    admin_password = "Password1234!"
  }
  os_profile_linux_config {
    disable_password_authentication = false
  }
  tags = {
    Name = "Az-HDP-Slave-2"
    Environment = "Production"
  }
}


resource "azurerm_virtual_machine" "main-3" {
  name                  = "az-hdp-vm-3"
  location              = azurerm_resource_group.hdp-rg.location
  resource_group_name   = azurerm_resource_group.hdp-rg.name
  network_interface_ids = [azurerm_network_interface.hdp-nic-3.id]
  vm_size               = "Standard_DS1_v2"
  delete_os_disk_on_termination = true
  delete_data_disks_on_termination = true

  storage_image_reference {
    publisher = "RedHat"
    offer     = "RHEL"
    sku       = "8.1"
    version   = "latest"
  }
  storage_os_disk {
    name              = "hdp-disk-3"
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "Standard_LRS"
  }
 os_profile {
    computer_name  = "hostname"
    admin_username = "hdpAdmin"
    admin_password = "Password1234!"
  }
  os_profile_linux_config {
    disable_password_authentication = false
  }
  tags = {
    Name = "Az-HDP-Slave-3"
    Environment = "Production"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above section creates  3 VMs named &lt;code&gt;az-hdp-vm-1&lt;/code&gt; and &lt;code&gt;az-hdp-vm-2&lt;/code&gt; and &lt;code&gt;az-hdp-vm-3&lt;/code&gt; and attaches the virtual NICs named &lt;code&gt;myNIC-1&lt;/code&gt;, &lt;code&gt;myNIC-2&lt;/code&gt; and &lt;code&gt;myNIC-3&lt;/code&gt; respectlly. The latest &lt;code&gt;RHEL 8.1&lt;/code&gt; image is used, and a user named &lt;code&gt;azureuser&lt;/code&gt; is created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p2VEHB7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5ugpjr0i52c6wjhy2m2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p2VEHB7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5ugpjr0i52c6wjhy2m2.png" alt="azure vm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build-and-deploy-the-infrastructure"&gt;
  &lt;/a&gt;
  Build and deploy the infrastructure
&lt;/h3&gt;

&lt;p&gt;With your Terraform template created, the first step is to initialize Terraform. This step ensures that Terraform has all the prerequisites to build your template in Azure.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;terraform init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to have Terraform review and validate the template. This step compares the requested resources to the state information saved by Terraform and then outputs the planned execution. The Azure resources aren't created at this point.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;terraform plan
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After you execute the previous command, you should see something like the following screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;write output
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything looks correct and you're ready to build the infrastructure in Azure, apply the template in Terraform.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;terraform apply
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once Terraform completes, your VM infrastructure is ready.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-machine-learning-model"&gt;
  &lt;/a&gt;
  Creating Machine learning Model:
&lt;/h1&gt;

&lt;p&gt;Here now, we have to create a machine learning model. As the dataset is of classification problem then we have to choose classification algorithms. Here i trained the model with &lt;code&gt;Logistic Regression&lt;/code&gt;, &lt;code&gt;RandomForestClassifier&lt;/code&gt;, &lt;code&gt;DecisionTree Classsifier&lt;/code&gt;, &lt;code&gt;GradientBoostingClassifier&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#logistic-regression"&gt;
  &lt;/a&gt;
  Logistic Regression:
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from sklearn.linear_model import LogisticRegression
lr_model=LogisticRegression()
lr_model.fit(X_train, y_train)
lr_y_model= lr_model.predict(X_test)
lr_y_model
from sklearn.metrics import accuracy_score
print("Logistic Regression Accuracy: ", accuracy_score(y_test, lr_y_model))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Logistic Regression Accuracy:  0.9180327868852459/opt/conda/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#randomforestclassifier"&gt;
  &lt;/a&gt;
  RandomForestClassifier:
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from sklearn.ensemble import RandomForestClassifier
rfc_model = RandomForestClassifier(n_estimators=10000, max_depth=100)
rfc_model
rfc_model.fit(X_train, y_train)
rfc_y_pred = rfc_model.predict(X_test)
rfc_y_pred
from sklearn.metrics import accuracy_score
print("Random Forest Accuracy: ", accuracy_score(y_test, rfc_y_pred))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Random Forest Accuracy: 0.7704918032786885&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#decisiontreeclasssifier"&gt;
  &lt;/a&gt;
  DecisionTreeClasssifier:
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from sklearn.tree import DecisionTreeClassifier
dt_model = DecisionTreeClassifier()
dt_model.fit(X_train, y_train)
dt_y_pred=dt_model.predict(X_test)dt_y_pred
from sklearn.metrics import accuracy_score
print("Decision Tree Accuracy: ", accuracy_score(y_test, dt_y_pred))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Decision Tree Accuracy: 0.6721311475409836&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gradientboostingclassifier"&gt;
  &lt;/a&gt;
  GradientBoostingClassifier:
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from sklearn.ensemble import GradientBoostingClassifier
GB_model = GradientBoostingClassifier(n_estimators=1000)
GB_model.fit(X_train, y_train)
y_pred_GB = GB_model.predict(X_test)
y_pred_GB
from sklearn.metrics import accuracy_score
accuracy_score(y_test, y_pred_GB)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;GradientBoostingClassifer Accuracy: 0.7868852459016393&lt;/code&gt;&lt;br&gt;
From the above model creation and comparision &lt;code&gt;Logistic Regression&lt;/code&gt; is giving much accuracy but i am taking model of &lt;code&gt;Random Forest&lt;/code&gt; and saving it to &lt;code&gt;.h5&lt;/code&gt; extension.&lt;/p&gt;

&lt;p&gt;
     &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uRl-S0_w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/amit17133129/Heart_Diseases_Prediction_App_Creation_Using_MLOps_Tools/main/Images/2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uRl-S0_w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/amit17133129/Heart_Diseases_Prediction_App_Creation_Using_MLOps_Tools/main/Images/2.gif"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#saving-randomforestclassifier-model"&gt;
  &lt;/a&gt;
  Saving RandomForestClassifier Model:
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import joblib
joblib_file = "RandomForest_Heart_Prediction.h5"
joblib.dump(lr_model, joblib_file)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This above code will create a file named &lt;code&gt;RandomForest_Heart_Prediction.h5&lt;/code&gt; and we have to use this model while create a docker image in which flask we have to install. Below is the code for &lt;code&gt;dockerfile&lt;/code&gt;. &lt;code&gt;Code link&lt;/code&gt;‚Üí &lt;a href="https://colab.research.google.com/drive/1_PkhVlrW5rC45Ehccxloosl2-gYPcklN?usp=sharing"&gt;https://colab.research.google.com/drive/1_PkhVlrW5rC45Ehccxloosl2-gYPcklN?usp=sharing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can watch below video to for refernce for creating Machine learning model. &lt;a href="https://youtu.be/Du9mFr226I4"&gt;https://youtu.be/Du9mFr226I4&lt;/a&gt;&lt;br&gt;
Now we need to build the image using below &lt;code&gt;dockerfile code&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM centos:latestRUN yum install python3  python3-devel   gcc-c++ -y &amp;amp;&amp;amp; \
    python3 -m pip install --upgrade --force-reinstall pip &amp;amp;&amp;amp; \
    yum install sudo -y &amp;amp;&amp;amp; \
    yum install --assumeyes  python3-pip &amp;amp;&amp;amp; \
    pip install keras &amp;amp;&amp;amp; \
    pip install tensorflow --no-cache-dir  tensorflow &amp;amp;&amp;amp; \
    pip install --upgrade pip tensorflow &amp;amp;&amp;amp; \
    pip3 install flask &amp;amp;&amp;amp; \
    pip3 install joblib &amp;amp;&amp;amp; \
    pip3 install sklearn &amp;amp;&amp;amp; \
    mkdir  /heart_app &amp;amp;&amp;amp;  \
    mkdir /heart_app/templatesCOPY  Randorm_Forest_Heart_Prediction.h5    /heart_app
COPY  app.py  /heart_app
COPY  myform.html  /heart_app/templates
COPY  result.html   /heart_app/templates
EXPOSE  4444WORKDIR  /heart_app
CMD export FLASK_APP=app.pyENTRYPOINT flask  run --host=0.0.0.0    --port=4444
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To build the docker image use below command.  &lt;code&gt;docker build -t image_name:version   .&lt;/code&gt; You can watch enlow video for reference &lt;a href="https://youtu.be/bUBOI-5Ya6U"&gt;https://youtu.be/bUBOI-5Ya6U&lt;/a&gt;&lt;br&gt;
Now we need to configure epel repository so that ansible installation would be easy.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#ansible"&gt;
  &lt;/a&gt;
  Ansible
&lt;/h1&gt;

&lt;p&gt;Ansible is an open-source software provisioning, configuration management, and application-deployment tool enabling infrastructure as code.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#install-ansible"&gt;
  &lt;/a&gt;
  Install Ansible
&lt;/h3&gt;

&lt;p&gt;I'm going to install an ansible setup AWS Instance named &lt;code&gt;ansible-controller-node&lt;/code&gt;  which I have launched before. So run mentioned commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo yum install python3 git -y
git clone https://github.com/hackcoderr/Ansible-Setup.git
cd Ansible-Setup/
python3 script.py
sudo hostnamectl set-hostname ansible-controller
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you want to know more about it then you can visit my &lt;a href="https://github.com/hackcoderr/Ansible-Setup"&gt;Ansible Steup Repository&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>devops</category>
      <category>machinelearning</category>
      <category>webdev</category>
    </item>
    <item>
      <title>[Video] Introduction to Git and GitHub Crash Course + Giveaway ‚≠ê</title>
      <author>Bobby Iliev</author>
      <pubDate>Fri, 14 May 2021 14:10:29 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/video-introduction-to-git-and-github-crash-course-giveaway-3jjh</link>
      <guid>https://dev.to/bobbyiliev/video-introduction-to-git-and-github-crash-course-giveaway-3jjh</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Hello everybody! Welcome to this Introduction to Git and GitHub video series, where you will learn the basics of Git and start using it for your day-to-day tasks.&lt;/p&gt;

&lt;p&gt;My name is Bobby and I've been working as a Linux system administrator for the past 7 years and a few months ago I wrote an opensource eBook on how to get started with Git and GitHub.&lt;/p&gt;

&lt;p&gt;You can find a link to the GitHub project where you can Download the eBook for free here:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;Opensource eBook on how to get started with Git and GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this video series we are going to cover the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Introduction to Git&lt;/li&gt;
&lt;li&gt;Version Control&lt;/li&gt;
&lt;li&gt;Basic Shell Commands&lt;/li&gt;
&lt;li&gt;Git Configuration&lt;/li&gt;
&lt;li&gt;Introduction to GitHub&lt;/li&gt;
&lt;li&gt;Initializing a Git project&lt;/li&gt;
&lt;li&gt;Git Status&lt;/li&gt;
&lt;li&gt;Git Add&lt;/li&gt;
&lt;li&gt;Git Commit&lt;/li&gt;
&lt;li&gt;Git Diff&lt;/li&gt;
&lt;li&gt;Git Log&lt;/li&gt;
&lt;li&gt;Gitignore&lt;/li&gt;
&lt;li&gt;SSH Keys&lt;/li&gt;
&lt;li&gt;Git Push&lt;/li&gt;
&lt;li&gt;Git Pull&lt;/li&gt;
&lt;li&gt;Git Branches&lt;/li&gt;
&lt;li&gt;Git Merge&lt;/li&gt;
&lt;li&gt;Reverting changes&lt;/li&gt;
&lt;li&gt;Git Clone&lt;/li&gt;
&lt;li&gt;Forking in Git&lt;/li&gt;
&lt;li&gt;Git Workflow&lt;/li&gt;
&lt;li&gt;Pull Requests&lt;/li&gt;
&lt;li&gt;Wrap up&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UpdhourKi3c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#playlist"&gt;
  &lt;/a&gt;
  Playlist
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=UpdhourKi3c&amp;amp;list=PLY7SzAmnEqp7P6KHmBKBVNIjZkXMKh_fn"&gt;Introduction to Git and GitHub video crash course playlist&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  Giveaway
&lt;/h1&gt;

&lt;p&gt;I've got those awesome stickers here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q2Uj75y6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jcd2ao7925c258inutip.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q2Uj75y6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jcd2ao7925c258inutip.jpg" alt="Free stickers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One way to support me is by clicking the subscribe button! I will send out a sticker to everyone who does so! üôè&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;As I am very new to the whole video creation process any feedback will be appreciated üôå&lt;/p&gt;

&lt;p&gt;Useful links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;The Introduction to Git and GitHub Opensource eBook&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://m.do.co/c/2a9bba940f39%E2%80%8B"&gt;Free $100 Credit For DigitalOcean&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://git.bobby.sh%E2%80%8B"&gt;Website with interactive training&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>github</category>
      <category>linux</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>My Portfolio</title>
      <author>Alonso Diaz</author>
      <pubDate>Fri, 14 May 2021 14:09:58 +0000</pubDate>
      <link>https://dev.to/alonxx/my-portfolio-2i99</link>
      <guid>https://dev.to/alonxx/my-portfolio-2i99</guid>
      <description>&lt;p&gt;Hello! thanks for entering.&lt;/p&gt;

&lt;p&gt;I wanted to share my first version of my portfolio, made with React.js and Styled-Component. I would love if you could give me feedback no matter what it is, to improve it.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.alonsodiaz.dev"&gt;www.alonsodiaz.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FtJAV1ZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1foi2hz5hcefgzljchq5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FtJAV1ZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1foi2hz5hcefgzljchq5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>portfolio</category>
      <category>react</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Modern Shopify Themes Development with Nx-Shopify</title>
      <author>Sebasti√°n Duque G</author>
      <pubDate>Fri, 14 May 2021 14:03:18 +0000</pubDate>
      <link>https://dev.to/trafilea/modern-shopify-themes-development-with-nx-shopify-31ho</link>
      <guid>https://dev.to/trafilea/modern-shopify-themes-development-with-nx-shopify-31ho</guid>
      <description>&lt;h1&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h1&gt;

&lt;p&gt;Nx-Shopify is an &lt;a href="https://nx.dev"&gt;Nx&lt;/a&gt; plugin for developing Shopify themes with performance, modern tooling, and ergonomics in mind.&lt;/p&gt;

&lt;p&gt;Check the Getting Started guide and the full docs at the &lt;a href="https://trafilea.github.io/nx-shopify/"&gt;Nx-Shopify&lt;/a&gt; official website.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trafilea"&gt;
        trafilea
      &lt;/a&gt; / &lt;a href="https://github.com/trafilea/nx-shopify"&gt;
        nx-shopify
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Nx plugin for developing performance-first Shopify themes üöÄ
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nrwl/nx/master/images/nx-logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jb9Lhn94--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nrwl/nx/master/images/nx-logo.png" width="80" height="50"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
  Nx-Shopify
&lt;/h1&gt;

&lt;div&gt;
&lt;p&gt;&lt;a href="https://github.com/trafilea/nx-shopify/actions/workflows/e2e.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4aACIdpW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/trafilea/nx-shopify/actions/workflows/e2e.yml/badge.svg" alt="e2e"&gt;&lt;/a&gt;
&lt;a href="http://commitizen.github.io/cz-cli/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aca3301042bdedae125df537db587fe82c2123dc8a2c46f0859840b5fa4b7f1a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6d6d6974697a656e2d667269656e646c792d627269676874677265656e2e737667" alt="Commitizen friendly"&gt;&lt;/a&gt;
&lt;a href="https://github.com/trafilea/nx-shopify/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/26c4a32a07e084cf4fb601f4fdcf75e21581d61fbe62817c8e5b575595a3ee2c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f74726166696c65612f6e782d73686f70696679" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@trafilea/nx-shopify" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2765536d59dec1fd959a17cf6bd417b1e052808c78a9243d83dcafc77ab0667e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4074726166696c65612f6e782d73686f70696679" alt="npm (scoped)"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@trafilea/nx-shopify" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54040f02fc63434d45706c0b913b1d352bc9667f12e55c4cca2ce3ae549881f3/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f4074726166696c65612f6e782d73686f70696679" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://github.com/semantic-release/semantic-release"&gt;&lt;img src="https://camo.githubusercontent.com/df1fd6655472a008d21057736be3b95a2bced4e9ea6db7c393e7c960a4d9e450/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302532302546302539462539332541362546302539462539412538302d73656d616e7469632d2d72656c656173652d6531303037392e737667" alt="semantic-release"&gt;&lt;/a&gt;
&lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://camo.githubusercontent.com/c0486311910977832125780d8ef9ac681614939bd1b9328678007156a4648896/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d6666363962342e7376673f7374796c653d666c61742d737175617265" alt="code style: prettier"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/trafilea/nx-shopify/master/#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/87951bc87eb4d4e9f8a51c8d25c37f5a579ab214ff609b5dbf7d273271daad18/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d362d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;üîé &lt;strong&gt;An &lt;a href="https://nx.dev" rel="nofollow"&gt;Nx&lt;/a&gt; plugin for developing performance-first Shopify themes üöÄ&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Be it you need to build a custom Shopify store theme, develop a generic theme or even maintain multiple stores/themes with shared code across them, this Nx plugin helps you power-up your development experience&lt;/p&gt;




&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;p&gt;Install the Nx CLI globally&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;# npm
$ npm install --global nx

# yarn
$ yarn add --global nx

# pnpm
$ pnpm install --global nx
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Create an empty Nx workspace (or use an existing one)&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;$ npx create-nx-workspace my-org --preset=empty
$ cd ./my-org
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Install the Nx-Shopify plugin as a devDependency&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;# npm
$ npm install --save-dev @trafilea/nx-shopify

# yarn
$ yarn add --save-dev @trafilea/nx-shopify

# pnpm
$ pnpm install --save-dev @trafilea/nx-shopify
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Generate a Shopify theme using the Nx CLI&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;$ nx generate @trafilea/nx-shopify:theme my-theme
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Check the generators and executors provided by the plugin&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;$ nx list @trafilea/nx-shopify
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
ü§ì Read the full‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/trafilea/nx-shopify"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#a-little-history-shopify-slate-amp-themekit"&gt;
  &lt;/a&gt;
  A little history: Shopify Slate &amp;amp; Themekit
&lt;/h1&gt;

&lt;p&gt;Before being &lt;a href="https://github.com/Shopify/slate/pull/1091"&gt;deprecated in January 2020&lt;/a&gt;, Shopify's official toolkit for developing Shopify themes was &lt;a href="https://github.com/Shopify/slate"&gt;Slate&lt;/a&gt;. Slate provided a theme development environment that enabled the developer to have a better project structure than the regular directories found in a Shopify theme. With the deprecation of Slate, the only official tool for theme development left is &lt;a href="https://shopify.dev/tools/theme-kit"&gt;Themekit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Themekit acts like a bridge between the developer's local files and the files found in a Shopify store's theme. The folder structure of a Themekit theme is meant more for the theme rendering process than for code maintainability or multiple developers constantly working on the same code base. Additionally, a Themekit project provides little to zero build tooling for the application code. &lt;/p&gt;

&lt;p&gt;This is how a basic Themekit project looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tjq_bn2e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0zd9i6v38g40jnm5x1ep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tjq_bn2e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0zd9i6v38g40jnm5x1ep.png" alt="Themekit Structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Given the context above, the need to have a well-defined project structure, dev ergonomics, high-quality code, and use of modern web technologies, were limited due to lack of tooling.&lt;/p&gt;

&lt;p&gt;At &lt;a href="https://trafilea.com"&gt;Trafilea&lt;/a&gt;, we heavily use Shopify themes and are constantly making changes to them according to our business needs and growth. Providing our developers a functional, stable, and feature-rich development experience is crucial, this why we built and open-sourced &lt;a href="https://github.com/trafilea/nx-shopify"&gt;Nx-Shopify&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#nxshopify"&gt;
  &lt;/a&gt;
  Nx-Shopify üöÄ
&lt;/h1&gt;

&lt;p&gt;Nx-Shopify is an Nx plugin that adds support for modern Shopify Themes development to an Nx workspace. It comes with various features including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TypeScript based.&lt;/li&gt;
&lt;li&gt;Styling with SASS and PostCSS.&lt;/li&gt;
&lt;li&gt;Out of the box unit testing with Jest.&lt;/li&gt;
&lt;li&gt;Out of the box code formatting using Prettier and ESLint.&lt;/li&gt;
&lt;li&gt;Multiple application and Themekit environments.&lt;/li&gt;
&lt;li&gt;Code lazy loading.&lt;/li&gt;
&lt;li&gt;Code generator for creating new themes with separate configs.&lt;/li&gt;
&lt;li&gt;Code generators for creating theme blocks such as layouts, templates, sections, and snippets.&lt;/li&gt;
&lt;li&gt;React integration via &lt;code&gt;@nrwl/react&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Webpack extended configuration.&lt;/li&gt;
&lt;li&gt;‚ûï all features included in an Nx workspace.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nx-Shopify makes use of Shopify Themekit under the hood, so every project built with Nx-Shopify will be compliant with the themekit project format, in case you need to run specific themekit commands in your project. &lt;strong&gt;TIP:&lt;/strong&gt; you can add custom targets for your projects using the &lt;a href="http://nx.dev/workspace/run-commands-executor"&gt;Nx run commands executor&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ok, but...&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-nx"&gt;
  &lt;/a&gt;
  What is Nx?
&lt;/h2&gt;

&lt;p&gt;Nx is a set of dev tools for monorepos designed to provide a great development experience in a plug-and-play way. According to their website: "&lt;strong&gt;Nx&lt;/strong&gt; is a suite of powerful, extensible dev tools to help you architect, test, and build at any scale ‚Äî integrating seamlessly with modern technologies and libraries while providing a robust CLI, caching, dependency management, and more."&lt;/p&gt;

&lt;p&gt;Watch this 35 seconds video to have a general overview of some of the things Nx does:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BIeQTWLyAqc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;(We ‚ù§Ô∏è Nx)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-generators"&gt;
  &lt;/a&gt;
  Code Generators
&lt;/h2&gt;

&lt;p&gt;Most Nx plugins include code generators to facilitate developers' life so they can focus on what really matters. Nx-Shopify includes generators for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://trafilea.github.io/nx-shopify/docs/fundamentals/creating-a-theme"&gt;New themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/generators/layout"&gt;Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/generators/template"&gt;Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/generators/section"&gt;Sections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/generators/snippet"&gt;Snippets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A fresh generated Shopify theme would look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--71m40zOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnm046v355dupw99pdh5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--71m40zOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnm046v355dupw99pdh5.png" alt="Nx-Shopify Structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every theme block is organized in a component-based/cohesive design with its respective Liquid, styles, Typescript, and test files. You can also nest blocks under another block's directory if that makes sense to you. You have control of your theme project architecture. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cli-commands"&gt;
  &lt;/a&gt;
  CLI commands
&lt;/h2&gt;

&lt;p&gt;The CLI commands that can be executed against a theme are known in Nx as executors. The list of executors included with Nx-Shopify are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/executors/build"&gt;build&lt;/a&gt; - Builds the theme to a Themekit compliant structure ready to be deployed to Shopify&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/executors/serve"&gt;serve&lt;/a&gt; - Runs a local web &amp;amp; assets server for local theme development&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/executors/test"&gt;test&lt;/a&gt; - Runs Jest tests against the theme code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://trafilea.github.io/nx-shopify/docs/cli-usage/executors/deploy"&gt;deploy&lt;/a&gt; - Deploys a built theme to Shopify according to the Themekit environment configured in the &lt;code&gt;config.yml&lt;/code&gt; file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You get a list of all plugin's generators and executors by running the following command in your workspace:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nx list @trafilea/nx-shopify
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#react-integration-via-raw-nrwlreact-endraw-"&gt;
  &lt;/a&gt;
  React integration via &lt;code&gt;@nrwl/react&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Do not miss the &lt;a href="https://trafilea.github.io/nx-shopify/docs/guides/using-react"&gt;React integration step-by-step guide&lt;/a&gt; on our docs site.&lt;/p&gt;



&lt;p&gt;Star ‚≠ê the repo, check the &lt;a href="https://trafilea.github.io/nx-shopify/"&gt;docs&lt;/a&gt;, and power up your Shopify themes development experience!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trafilea"&gt;
        trafilea
      &lt;/a&gt; / &lt;a href="https://github.com/trafilea/nx-shopify"&gt;
        nx-shopify
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Nx plugin for developing performance-first Shopify themes üöÄ
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nrwl/nx/master/images/nx-logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jb9Lhn94--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nrwl/nx/master/images/nx-logo.png" width="80" height="50"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;
  Nx-Shopify
&lt;/h1&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://github.com/trafilea/nx-shopify/actions/workflows/e2e.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4aACIdpW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/trafilea/nx-shopify/actions/workflows/e2e.yml/badge.svg" alt="e2e"&gt;&lt;/a&gt;
&lt;a href="http://commitizen.github.io/cz-cli/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aca3301042bdedae125df537db587fe82c2123dc8a2c46f0859840b5fa4b7f1a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6d6d6974697a656e2d667269656e646c792d627269676874677265656e2e737667" alt="Commitizen friendly"&gt;&lt;/a&gt;
&lt;a href="https://github.com/trafilea/nx-shopify/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/26c4a32a07e084cf4fb601f4fdcf75e21581d61fbe62817c8e5b575595a3ee2c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f74726166696c65612f6e782d73686f70696679" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@trafilea/nx-shopify" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2765536d59dec1fd959a17cf6bd417b1e052808c78a9243d83dcafc77ab0667e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4074726166696c65612f6e782d73686f70696679" alt="npm (scoped)"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@trafilea/nx-shopify" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54040f02fc63434d45706c0b913b1d352bc9667f12e55c4cca2ce3ae549881f3/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f4074726166696c65612f6e782d73686f70696679" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://github.com/semantic-release/semantic-release"&gt;&lt;img src="https://camo.githubusercontent.com/df1fd6655472a008d21057736be3b95a2bced4e9ea6db7c393e7c960a4d9e450/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532302532302546302539462539332541362546302539462539412538302d73656d616e7469632d2d72656c656173652d6531303037392e737667" alt="semantic-release"&gt;&lt;/a&gt;
&lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://camo.githubusercontent.com/c0486311910977832125780d8ef9ac681614939bd1b9328678007156a4648896/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d6666363962342e7376673f7374796c653d666c61742d737175617265" alt="code style: prettier"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/trafilea/nx-shopify/master/#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/87951bc87eb4d4e9f8a51c8d25c37f5a579ab214ff609b5dbf7d273271daad18/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d362d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;üîé &lt;strong&gt;An &lt;a href="https://nx.dev" rel="nofollow"&gt;Nx&lt;/a&gt; plugin for developing performance-first Shopify themes üöÄ&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Be it you need to build a custom Shopify store theme, develop a generic theme or even maintain multiple stores/themes with shared code across them, this Nx plugin helps you power-up your development experience&lt;/p&gt;




&lt;h2&gt;
Getting Started&lt;/h2&gt;

&lt;p&gt;Install the Nx CLI globally&lt;/p&gt;

&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;# npm
$ npm install --global nx

# yarn
$ yarn add --global nx

# pnpm
$ pnpm install --global nx
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;


&lt;/div&gt;

&lt;p&gt;Create an empty Nx workspace (or use an existing one)&lt;/p&gt;

&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;$ npx create-nx-workspace my-org --preset=empty
$ cd ./my-org
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;


&lt;/div&gt;

&lt;p&gt;Install the Nx-Shopify plugin as a devDependency&lt;/p&gt;

&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;# npm
$ npm install --save-dev @trafilea/nx-shopify

# yarn
$ yarn add --save-dev @trafilea/nx-shopify

# pnpm
$ pnpm install --save-dev @trafilea/nx-shopify
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;


&lt;/div&gt;

&lt;p&gt;Generate a Shopify theme using the Nx CLI&lt;/p&gt;

&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;$ nx generate @trafilea/nx-shopify:theme my-theme
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;


&lt;/div&gt;

&lt;p&gt;Check the generators and executors provided by the plugin&lt;/p&gt;

&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;$ nx list @trafilea/nx-shopify
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    
    

    
    

  
&lt;/div&gt;


&lt;/div&gt;

&lt;h2&gt;
Documentation&lt;/h2&gt;


&lt;ul&gt;
&lt;li&gt;
ü§ì Read the full‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/trafilea/nx-shopify"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>showdev</category>
      <category>webdev</category>
      <category>typescript</category>
      <category>shopify</category>
    </item>
  </channel>
</rss>
