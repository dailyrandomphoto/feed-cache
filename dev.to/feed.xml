<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 21 May 2021 17:54:59 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-3lce</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-3lce</guid>
      <description>&lt;p&gt;Hey there!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking back on your week, what was something you're proud of?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All wins count ‚Äî big or small üéâ&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Taking some time off ... or whatever else might spark joy ‚ù§Ô∏è &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Happy Friday!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/1iYG017UokdODQc0/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/1iYG017UokdODQc0/giphy.gif" alt="That Friday feeling"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>How Much CSS Do I Need To Be Job Ready?</title>
      <author>Michael Caveney</author>
      <pubDate>Fri, 21 May 2021 17:35:27 +0000</pubDate>
      <link>https://dev.to/dylanesque/how-much-css-do-i-need-to-be-job-ready-3h0m</link>
      <guid>https://dev.to/dylanesque/how-much-css-do-i-need-to-be-job-ready-3h0m</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QKoJJ8r5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/CSS3_logo_and_wordmark.svg/180px-CSS3_logo_and_wordmark.svg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QKoJJ8r5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/CSS3_logo_and_wordmark.svg/180px-CSS3_logo_and_wordmark.svg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CSS is one of the three foundational web technologies every front-end developer needs to know, and in some ways, the most difficult to learn. There are a staggering amount of &lt;a href="https://css-tricks.com/how-many-css-properties-are-there/#:~:text=520%20distinct%20property%20names%20from,reports%20and%2066%20editors'%20drafts."&gt;properties&lt;/a&gt; one can learn, and many subtleties to be aware of regarding how they interact with each other. Today, I'm going to go over the minimum CSS you need to know to be effective on the job!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-do-i-mean-by-jobready"&gt;
  &lt;/a&gt;
  What Do I Mean By Job-Ready?
&lt;/h1&gt;

&lt;p&gt;Before starting, let me clarify precisely what I mean when I say 'job-ready:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You'll understand the broad strokes of the technology in question, and know the most fundamental concepts that come up every day. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There may be gaps in your knowledge, but those will be limited to secondary concepts or syntax/other details that you'll be able to find the answer to relatively quickly and easily.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You'll know exactly where to turn to find answers to problems or questions that you're running into.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Following the advice here won't make you a master of CSS, but you'll be effective at the day-to-day that you'll need to get started on the job.&lt;/p&gt;

&lt;p&gt;I will mention that while the mechanics that dictate how CSS works are simple, how they interact with each other in the wild can be anything BUT simple, and CSS requires a much deeper understanding of the fundamentals that HTML to be truly effective and not have to constantly be redoing previous code. This post in particular is probably going to have a lot of edits as I refine it to deliver the best information. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-you-need-to-know"&gt;
  &lt;/a&gt;
  What you need to know
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#core-mechanics-and-terminology"&gt;
  &lt;/a&gt;
  Core mechanics and terminology
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Be able to identify and explain what properties, selectors, declarations, values, and rules are. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand at a high level how specificity, inheritance, and the cascade work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand the &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model"&gt;box model&lt;/a&gt;, the different roles that margin/padding/border play, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand the basic display types (block, inline, and inline-block), and the major differences in how the default versions of these display types work in &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flow_Layout"&gt;flow layout&lt;/a&gt; aka the default version of how layout works in CSS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand the basics of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position"&gt;positioning&lt;/a&gt; in flow layout (absolute vs relative vs sticky vs fixed vs static) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand the fundamentals of stacking with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/z-index"&gt;z-index&lt;/a&gt;, and when and what elements it's applied to in that given context.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understanding how &lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/"&gt;Flexbox&lt;/a&gt; and &lt;a href="https://css-tricks.com/snippets/css/complete-guide-grid/"&gt;Grid&lt;/a&gt; work is a must for modern CSS developers; you should be tangentially aware of how layout works using &lt;code&gt;float&lt;/code&gt;, but don't spend a lot of time on this since it shouldn't be the first layout tool you reach for.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to remove or hide items from the DOM or the page: There is a difference between removing items from the DOM or simply making them invisible, and you should know what rules accomplish one or the other, and have an idea of some situations where one method is more desirable than the other.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Understand the different units of measurement (pixels, ems, rems, etc), and their strengths, weaknesses, optimum use cases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Techniques for responsive design, including media queries.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;At least some familiarity with transforms, animation, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to build a basic design system, and utilize CSS variables.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#extra-credit"&gt;
  &lt;/a&gt;
  Extra Credit
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Have some familiarity with older paradigms to make CSS more efficient, such as Sass, BEM, etc. These aren't as widely used these days, and you can delve into more detail if you need one of these technologies for a job, but it's not something you'll need for every job.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Some familiarity with a CSS framework like Bootstrap can be helpful, but it would be better to be able to demonstrate fluency in writing CSS without them. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If and when you learn a front-end framework like React, some knowledge of a paradigm like Tailwind, styled-components, or Emotion would be helpful.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#where-to-learn"&gt;
  &lt;/a&gt;
  Where to Learn
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#basic-resources"&gt;
  &lt;/a&gt;
  Basic Resources
&lt;/h2&gt;

&lt;p&gt;For the absolute basics, I'm going to repeat my recommendations from my post on &lt;a href="https://dev.to/dylanesque/how-much-html-do-i-need-to-be-job-ready-11pc"&gt;getting job-ready with HTML&lt;/a&gt;, as far as basic resources for your first contact with the language go, with the caveat that you'll get less of a quality education in terms of writing solid CSS from freeCodeCamp than you would HTML.&lt;/p&gt;

&lt;p&gt;Additionally, Google's &lt;a href="https://web.dev/"&gt;web.dev&lt;/a&gt; mini learning platform has a really nice, brand-new &lt;a href="https://web.dev/learn/css/"&gt;CSS module&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pdjl811W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://freetutorialsudemy.com/wp-content/uploads/2020/03/images/image_03-18-2020_114249.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pdjl811W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://freetutorialsudemy.com/wp-content/uploads/2020/03/images/image_03-18-2020_114249.jpg" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
For a deeper dive, I would recommend taking a look at Jonas Schmedtman's &lt;a href="https://www.udemy.com/course/advanced-css-and-sass/"&gt;Advanced CSS&lt;/a&gt; Udemy course. This course shows projects in styled with three different paradigms (old school, Flexbox, Grid) so you can see how those approaches work, and how some of the more modern ones make some techniques easier than the old way or enable layouts that would have been previously impossible. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#premium-resources"&gt;
  &lt;/a&gt;
  Premium Resources
&lt;/h2&gt;

&lt;p&gt;A small caveat about the following section: The course I'm about to talk about is in closed beta at the time of this writing, but I consider it so essential that I can't exclude it here. So with that said...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pu9iMIUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://css-for-js.dev/og-image-v2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pu9iMIUL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://css-for-js.dev/og-image-v2.jpg" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The toughest thing about CSS is that the overwhelming majority of education surrounding it is "Here's this rule, this is what it does" without going into the inevitable gotchas or unexpected behavior that will pop up when you're writing CSS at any scale above the smallest possible use-case. Compared to HTML and JavaScript, it's much harder to learn how to write good CSS without a teacher that really knows that they're talking about.&lt;/p&gt;

&lt;p&gt;Josh Comeau's &lt;a href="https://css-for-js.dev/"&gt;CSS For JS Developers&lt;/a&gt; doesn't do this and instead focuses on how the core behavior behind many aspects of the language work, and will teach you tips and tricks it would take you years of trial and error writing production code to figure out. My ability to write efficient, maintainable, and scalable CSS has improved considerably as a direct result of the modules currently available to those who were able to get in on the beat (5 out of 9 total modules), and I consider this the single best CSS resource money can buy.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#where-to-get-helpfind-reference"&gt;
  &lt;/a&gt;
  Where To Get Help/Find Reference
&lt;/h1&gt;

&lt;p&gt;In addition to the sources I mentioned in my last post (Stack Overflow and MDN), I would also recommend checking out &lt;a href="https://css-tricks.com/"&gt;CSS Tricks&lt;/a&gt;, a time-honored blog with many deep dives on various CSS subjects, including the definitive guide to Flexbox that I had linked above.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  In Conclusion
&lt;/h1&gt;

&lt;p&gt;CSS can be surprisingly tricky to get a firm handle on, but I hope this guide makes the path a lot easier for you. Join me next time, where I talk about getting job-ready with JavaScript!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>css</category>
    </item>
    <item>
      <title>CodePen - CSS Icons (Animation)</title>
      <author>Roden</author>
      <pubDate>Fri, 21 May 2021 17:28:49 +0000</pubDate>
      <link>https://dev.to/kerthin/codepen-css-icons-animation-3c1e</link>
      <guid>https://dev.to/kerthin/codepen-css-icons-animation-3c1e</guid>
      <description>&lt;p&gt;I want to introduce you to my 6 animated icons. It took me a little over a week to create them.&lt;/p&gt;

&lt;p&gt;You know, I often use icons in my projects, but it always seemed to me that they lack dynamics, and that they sometimes look very boring. I always wanted those elements that are displayed on the icon to be animated, and that they can be edited as you need. But I could not find anything interesting, which later prompted me to create my own icons created using &lt;strong&gt;html&lt;/strong&gt; and &lt;strong&gt;css&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can edit these icons as you like: change the size of all the elements, edit the colors, create your own animation for them, and change the location of any element.&lt;/p&gt;

&lt;p&gt;To insert an icon on your site, simply copy the necessary sections of the &lt;strong&gt;pug&lt;/strong&gt; and &lt;strong&gt;scss&lt;/strong&gt; code (&lt;strong&gt;html&lt;/strong&gt; and &lt;strong&gt;css&lt;/strong&gt;), which are marked with the corresponding comments. Also, don't forget about the &lt;strong&gt;@keyframes&lt;/strong&gt; required for the animation, which are located at the very bottom of the code.&lt;/p&gt;

&lt;p&gt;I hope they will benefit you in your future projects.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Astap/embed/QWddOgw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I would be very grateful if you appreciate this work.&lt;/p&gt;

&lt;p&gt;P.S.&lt;br&gt;
To reset the styles, I use &lt;strong&gt;reset.css&lt;/strong&gt; with the addition of the &lt;strong&gt;box-sizing: border-box;&lt;/strong&gt; property, but if you do not want to use it, you can simply insert at the beginning of the styles:&lt;br&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;{
padding: 0;
margin: 0;
box-sizing: border-box;
}
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also keep in mind that the project uses &lt;strong&gt;variables&lt;/strong&gt; and &lt;strong&gt;@extend&lt;/strong&gt;. So, if you don't want to worry about them, just compile them into styles from &lt;strong&gt;scss&lt;/strong&gt; to &lt;strong&gt;css&lt;/strong&gt;. This can be done in CodePen.&lt;br&gt;
The appearance of the icons I took from the Internet.&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>webdev</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Front-end Studio powered  by SolidJS</title>
      <author>Przemyslaw Michalak</author>
      <pubDate>Fri, 21 May 2021 17:12:50 +0000</pubDate>
      <link>https://dev.to/przemek/front-end-studio-powered-by-solidjs-e5o</link>
      <guid>https://dev.to/przemek/front-end-studio-powered-by-solidjs-e5o</guid>
      <description>&lt;p&gt;I would like to showcase my project I've been working on for a last year. It's a Studio that has built in IDE, repository of Widgets, it's own meta-framework, it is powered by SolidJS and export code to clean JSX. That's only a small part of all features that we managed to implement so you can read more below or go straight to the video I uploaded on YouTube&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=OGR7cjZW44Q&amp;amp;t=520s%20feature=player_embedded&amp;amp;v=glueCodesStudioPresentation"&gt;&lt;br&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NORBv9To--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfzizdycczentasy9qb4.jpg" alt="GlueCodes Studio"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#solidjs"&gt;
  &lt;/a&gt;
  SolidJS
&lt;/h2&gt;

&lt;p&gt;First and most important - it runs &lt;a href="https://github.com/solidjs/solid"&gt;SolidJS&lt;/a&gt;. When we started building first prototype a year ago we were using virtual-dom. Since the library seems to be abandoned and it's performance is not the greatest we decided to swap it with Solid just at the beginning of the year. That not only gave us huge performance boost in both - Studio and exported code, but also let us to implement more features for developers like &lt;a href="https://www.glue.codes/docs-templating-htmlDirectives.html#uiSignals"&gt;UI Signals&lt;/a&gt;. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#all-you-need-is-browser"&gt;
  &lt;/a&gt;
  All you need is browser...
&lt;/h2&gt;

&lt;p&gt;...and everything happens locally. The Studio not only stores your project on your hard drive to keep it safe but also transpile the code right on your PC which makes it fast since is not send to any cloud service before is displayed in...&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-live-preview"&gt;
  &lt;/a&gt;
  The Live Preview
&lt;/h2&gt;

&lt;p&gt;Setup-free and ready to go right at the start. Simply open the new tab with the Live Preview, drag it on a different screen and enjoy looking at all your changes while you type.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#implementation-assistant"&gt;
  &lt;/a&gt;
  Implementation Assistant
&lt;/h2&gt;

&lt;p&gt;Now let's deep down how the Studio actually makes developing web apps fast. Implementation Assistant scans your code while you type, and gives you in-context notifications about what needs to be done inside your project. When Implementation Assistant is triggered by developer, it's creating all necessary folders, files, glue code and places everything inside the project structure exposing only the file where you type your code to add new functionalities to your web app.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#widgets"&gt;
  &lt;/a&gt;
  Widgets
&lt;/h2&gt;

&lt;p&gt;Please, don't expect here simple dropdowns, buttons, inputs or god knows what other simple elements you can think of. Widgets are isolated UI pieces that lets you prototype simple landing pages or advanced administration panels in minutes. At the moment we developed over 70 of them, starting from simple block presenter going to advanced data tables and forms. All of it is installable inside your project within one click. You can edit their content by using simple object JSON and style them with scoped CSS or Global Styles (we also planning on opening the repository with pre-made global styles created by community). Of course they are fully responsive and their documentation can be found inside the Studio right before installation.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#reusable-slots"&gt;
  &lt;/a&gt;
  Reusable Slots
&lt;/h2&gt;

&lt;p&gt;Navigations, footers, cookie consent notice, pop-up's - everything that you think should be reused on multiple pages can be developed in the reusable slot (also Widgets can be installed there) and reused by pasting single line of HTML:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;gc-as=&lt;/span&gt;&lt;span class="s"&gt;"slot"&lt;/span&gt; &lt;span class="na"&gt;gc-name=&lt;/span&gt;&lt;span class="s"&gt;"footer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#html-directives"&gt;
  &lt;/a&gt;
  HTML directives
&lt;/h2&gt;

&lt;p&gt;Loops, conditionals, error presenters and more can be done using simple &lt;code&gt;gc&lt;/code&gt; directives. That's definitely to wide subject to write more about it here, so I definitely make separate blog about it in close feature, but if you are curious - have a look at our &lt;a href="https://www.glue.codes/docs.html"&gt;docs&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#styling"&gt;
  &lt;/a&gt;
  Styling
&lt;/h2&gt;

&lt;p&gt;For all the Widgets, Slots or Reusable Slots the Studio creates separate CSS files that you can use to style parts of your web app without interfering with the rest of it. On the other hand you can use Global Styles to edit the whole app at once which help you to keep consistent design. Since scoped files have always priority over Global Styles you can create 10 header on your page, set their size, margins and paddings globally and change just color for each of them using scoped CSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bootstrap-and-font-awesome"&gt;
  &lt;/a&gt;
  Bootstrap and Font Awesome
&lt;/h2&gt;

&lt;p&gt;Since those 2 libraries are very popular we decided to implement them inside the Studio. So you can use them right at the start without looking for their dependencies etc. If you are not a big fan of them, or you just working on a project that won't make a use out of them, no problem. You can easily delete them from the dependencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exported-code"&gt;
  &lt;/a&gt;
  Exported code
&lt;/h2&gt;

&lt;p&gt;The code is exported to clean and well organized JSX powered by SolidJS. It also comes with docker and webpack setup. You can deploy it straight to your hosting service or build it using terminal and keep developing outside the Studio&lt;/p&gt;

&lt;p&gt;Yeah. That's just a small part of everything that we developed in the Studio, but I don't want to keep it too long. We'll definitely keep making new videos and blogs showing more details about specific features, but it is important for us to adjust to community. So any suggestions will be appreciated.&lt;/p&gt;

&lt;p&gt;I'm leaving small video with presentation of the GlueCodes Studio to show you how everything described here works in practice.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=OGR7cjZW44Q&amp;amp;t=520s"&gt;GlueCodes Studio Presentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also try out the Studio here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.glue.codes"&gt;www.glue.codes&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Parse LIVE Website - Extract component and convert to React</title>
      <author>Sm0ke</author>
      <pubDate>Fri, 21 May 2021 17:04:57 +0000</pubDate>
      <link>https://dev.to/sm0ke/parse-live-website-extract-component-and-convert-to-react-5761</link>
      <guid>https://dev.to/sm0ke/parse-live-website-extract-component-and-convert-to-react-5761</guid>
      <description>&lt;p&gt;Hello Coders, &lt;/p&gt;

&lt;p&gt;This article explains how to parse and extract components from a LIVE website using open-source libraries and tools. Personally, I'm using HTML parsing to convert automatically components from one technology (Bootstrap) to others like React, Vue, Svelte with less manual work and better quality. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - The article is heavily inspired from here: &lt;strong&gt;&lt;a href="https://docs.appseed.us/content/tutorials/parse-html-components"&gt;Parse HTML Components&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;




&lt;p&gt;Parsing LIVE websites or lifeless HTML files might be useful in many scenarios. I will mention only a few:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;code a pricing scanner to detect changes&lt;/li&gt;
&lt;li&gt;check health for a LIVE system &lt;/li&gt;
&lt;li&gt;extract components and reuse previous work for evolutions&lt;/li&gt;
&lt;li&gt;extract texts from a LIVE website and check text errors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the end, I will mention an &lt;a href="https://github.com/app-generator/django-pixel-lite"&gt;open-source Django product&lt;/a&gt; that uses a UI built with components extracted from a Bootstrap 5 Kit using parsing code quite similar to the one presented in this article. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tools-we-need"&gt;
  &lt;/a&gt;
  Tools we need
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; - the interpreter &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/"&gt;Beautiful Soup&lt;/a&gt; - a well-known parsing library &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://lxml.de/"&gt;Lxml&lt;/a&gt; - used to compensate BS4 limitations&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;The process&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Load the HTML content - this can be done from a local file or using a LIVE website&lt;/li&gt;
&lt;li&gt;Analyze the page and extract XPATH expression for a component&lt;/li&gt;
&lt;li&gt;Use Lxml library to extract the HTML using &lt;em&gt;Xpath&lt;/em&gt; selector&lt;/li&gt;
&lt;li&gt;Format the component and save it on disk&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;Install tools&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;requests 
&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;lxml
&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;beautifulsoup4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once all tools and libraries are installed and accessible in the terminal, we can start coding using &lt;code&gt;Python console&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ENTER&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The HTML content can be a local file or a remote one, deployed and rendered by a LIVE system. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Load the HTML from a local file&lt;/strong&gt; (a simple file read)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'./app/templates/index.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;html_page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Load content from a live website&lt;/strong&gt; - &lt;a href="https://demo.themesberg.com/pixel-lite/index.html"&gt;Pixel Lite&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'https://demo.themesberg.com/pixel-lite/index.html'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;html_page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, &lt;code&gt;html_page&lt;/code&gt; variable contains the entire HTML content (string type) and we can use it in BS4 or Lxml to extract the components. To visualize the page structure we can use browser tools:  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cmUDCzLv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck60uqemtra5p1g8mseb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cmUDCzLv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck60uqemtra5p1g8mseb.png" alt="HTML Parser - Target Component Inspection."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The target component will be extracted using an &lt;code&gt;XPATH expression&lt;/code&gt; provided by the browser:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//*[@id="features"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we have the selector, let's extract the components using LXML library:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;lxml&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;html_dom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromstring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;html_page&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;component&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;html_dom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;'//*[@id="features"]'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the &lt;code&gt;XPATH selector&lt;/code&gt; returns a valid component, we should have a valid LXML object that holds the HTML code - Let's use it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;lxml.etree&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tostring&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;component_html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tostring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;component&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To have a nice formatted component and gain access to all properties like nodes, &lt;code&gt;css style&lt;/code&gt;, texts .. etc, the HTML is used to build a &lt;code&gt;Beautiful Soup&lt;/code&gt; object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;bs&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;component_html&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prettify&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The component is now fully parsed and we can traverse all information and proceed further with a conversion to React.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"section section-lg pb-0"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"features"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

     ...

     &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-12 col-md-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon-box text-center mb-5 mb-md-0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon icon-shape icon-lg bg-white shadow-lg border-light rounded-circle icon-secondary mb-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-box-open"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"my-3 h5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        80 components
       &lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"px-lg-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Beatifully crafted and creative components made with great care for each pixel
       &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

     ...

     &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This tool-chain will check and validate the component to be a valid HTML block with valid tags. &lt;/p&gt;




&lt;p&gt;&lt;strong&gt;The extracted component&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4TJ9H1JR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wo3l8vtvpd6y5ie6x34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4TJ9H1JR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wo3l8vtvpd6y5ie6x34.png" alt="HTML Parser - Extracted Component."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;React component&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Comp&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;COMPONENT_HTML_GOES_HERE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;React Component usage&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Comp&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;This process can be extended for more tasks and automation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;detect page layouts&lt;/li&gt;
&lt;li&gt;validate links (inner and outer)&lt;/li&gt;
&lt;li&gt;check images size&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;To see a final product built using a component extractor please access &lt;a href="https://github.com/app-generator/django-pixel-lite"&gt;Pixel Lite Django&lt;/a&gt;, an open-source product that uses a Bootstrap 5 design. &lt;/p&gt;

&lt;p&gt;The project can be used by anyone to code faster a nice website  using Django as backend technology and Bootstrap 5 for styling.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://django-pixel-lite.appseed-srv1.com/"&gt;Django Pixel Lite&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://demo.themesberg.com/pixel-lite/index.html"&gt;Pixel Lite&lt;/a&gt; - the original HTML design &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LokJi_YT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fx9yfsoylsnpk7a45r6k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LokJi_YT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fx9yfsoylsnpk7a45r6k.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://stackoverflow.com/questions/11465555/can-we-use-xpath-with-beautifulsoup"&gt;Use XPath in Beautiful Soup&lt;/a&gt; - related article published on StackOverflow&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.python-guide.org/scenarios/scrape/"&gt;Web Scraping&lt;/a&gt; - the right way (with sample)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>python</category>
    </item>
    <item>
      <title>My Top 10 Visual Studio Code Extensions for Web Development</title>
      <author>Atul Vishwakarma</author>
      <pubDate>Fri, 21 May 2021 16:52:08 +0000</pubDate>
      <link>https://dev.to/jerry45/my-top-10-visual-studio-code-extensions-for-web-development-2hn8</link>
      <guid>https://dev.to/jerry45/my-top-10-visual-studio-code-extensions-for-web-development-2hn8</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;Visual Studio Code or VS Code is the most popular editor for Web Development in 2021. One of the most impressive parts of Visual Studio Code is customizability, especially with the extensions. Today, I will show you my 10 favourite VS Code extenions for web development.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-vs-code-and-vs-code-extensions"&gt;
  &lt;/a&gt;
  Installing VS Code and VS Code Extensions
&lt;/h3&gt;

&lt;p&gt;In order to use VS Code's extensions, you need to download VS Code. You can download it &lt;a href="https://code.visualstudio.com/"&gt;click here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To  install extensions press &lt;strong&gt;CTRL+SHIFT+X&lt;/strong&gt; or just click on the extension icon of Visual Studio Code. Search for the extension and press install.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RfQDEK0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/is1hrznajbtolqbyh53h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RfQDEK0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/is1hrznajbtolqbyh53h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The choices of the extensions are my of personal opinion.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. ESLint&lt;/strong&gt;&lt;br&gt;
Want to write better code? Want consistent formatting across your team? Install ESLint. This extension can be configured to auto format your code as well as 'yell' with linting errors/warnings. VS Code specifically is also perfectly configured to show you these errors/warnings. &lt;/p&gt;

&lt;p&gt;Link : &lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f7uGtPO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ll3chb3svwy9bwsjzqw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f7uGtPO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ll3chb3svwy9bwsjzqw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;2. Live Server&lt;/strong&gt;&lt;br&gt;
Make changes in code editor, switch to browser, and refresh to see changes. That's the endless cycle of a developer, but what if your browser would automatically refresh anytime you make changes? That's where Live Server comes in!  On a click of a button, your site is up and running locally. It provides the live preview of our web application right within your editor.&lt;/p&gt;

&lt;p&gt;Link : &lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MhT9qING--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8eqptyt8aka34b53nvbs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MhT9qING--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8eqptyt8aka34b53nvbs.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;3. Prettier - Code formatter&lt;/strong&gt;&lt;br&gt;
Prettier is a lifesaver when it comes to formatting and productivity. Prettier formats your files on a save once you configure it in your settings. Instead of spending hours a day making your code look clean, use Prettier.  This extension performs the formatting of the JavaScript, CSS, and HTML code.&lt;/p&gt;

&lt;p&gt;Never worry about formatting again!&lt;/p&gt;

&lt;p&gt;Link : &lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K3jqVi2O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5sxglf0ukyyi6497bxbx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K3jqVi2O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5sxglf0ukyyi6497bxbx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;4. Material Icon Theme&lt;/strong&gt;&lt;br&gt;
Fan of Google's Material design? Then, check out this Material themed icon pack. There's hundreds of different icons and they are pretty awesome looking!&lt;/p&gt;

&lt;p&gt;Link : &lt;a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme"&gt;https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NhD_C_wM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84ymvcy8n0aawv703dzb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NhD_C_wM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84ymvcy8n0aawv703dzb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;5. Better Comments&lt;/strong&gt;&lt;br&gt;
This extension helps you to create more human-friendly and easy-to-read comments.&lt;/p&gt;

&lt;p&gt;Link : &lt;a href="https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments"&gt;https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ULLglYdq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t58zbicvag6jckmoqior.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ULLglYdq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t58zbicvag6jckmoqior.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;6. Path Intellisense&lt;/strong&gt;&lt;br&gt;
Remembering specific file names and the directories your files are in can get tricky. This extension will provide you intellisense for just that. As you start typing a path in quotations, you will get intellisense for directories and file names. This will save you from spending a lot of time in the file explorer &lt;/p&gt;

&lt;p&gt;Link :  &lt;a href="https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense"&gt;https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kLm6Iuzc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/54afut14pmvq9km5o66g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kLm6Iuzc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/54afut14pmvq9km5o66g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;7. Polacode&lt;/strong&gt;&lt;br&gt;
You know those fancy code screenshots you see in articles and tweets? Well, most likely they came from Polacode. It's super simple to use. Copy a piece of code to your clipboard, open up the extension, paste the code, and click to save your image!&lt;/p&gt;

&lt;p&gt;Link :  &lt;a href="https://marketplace.visualstudio.com/items?itemName=pnp.polacode"&gt;https://marketplace.visualstudio.com/items?itemName=pnp.polacode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Q9_DFxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5rugpzo31kxkkrkedb6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Q9_DFxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5rugpzo31kxkkrkedb6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;8. Debugger for Chrome&lt;/strong&gt;&lt;br&gt;
Believe it or not, debugging JavaScript means more than just writing console.log() statements (although that's a lot of it). Chrome has features built in that make debugging a much better experience. This extension brought the powerful chrome debugger right into the visual studio code. It is very useful for front-end developers to perform the testing and debugging.&lt;/p&gt;

&lt;p&gt;Link : &lt;a href="https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome"&gt;https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bFWECgPp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aok0zxbegn6vz98dahyz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bFWECgPp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aok0zxbegn6vz98dahyz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;9. Bracket Pair Colorizor&lt;/strong&gt;&lt;br&gt;
This extension gives the same colour to matching brackets and parenthesis. This extension prevents you from taking too long looking for the correct closing bracket. This is a must-have if you are using a language which uses brackets and not indentation (sorry python users).&lt;/p&gt;

&lt;p&gt;Link : &lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer"&gt;https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EEsXE-mn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i736bbtb5c16yg7r3w8k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EEsXE-mn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i736bbtb5c16yg7r3w8k.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;10. Settings Sync&lt;/strong&gt;&lt;br&gt;
Developers, myself included, spend a lot of time customizing their dev environment, especially their text editors. With the Settings Sync extension, you can save your setting off in Github. Then, you can load them to any new version of VS Code with one command. Don't get caught without your amazing setup ever again!&lt;/p&gt;

&lt;p&gt;Link : &lt;a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync"&gt;https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jt9Ob8oh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/123z5a5yszqftwu31tcu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jt9Ob8oh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/123z5a5yszqftwu31tcu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Hope this post will help you in web development. Thank you for reading the post.&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>html</category>
    </item>
    <item>
      <title>Launching Pixiko on Product Hunt</title>
      <author>–ü–∞–≤–µ–ª –®—É–ª—å–≥–∞</author>
      <pubDate>Fri, 21 May 2021 16:31:00 +0000</pubDate>
      <link>https://dev.to/kinga2281/launching-pixiko-on-product-hunt-53i7</link>
      <guid>https://dev.to/kinga2281/launching-pixiko-on-product-hunt-53i7</guid>
      <description>&lt;p&gt;Hey everyone üëã&lt;/p&gt;

&lt;p&gt;We‚Äôre developing an online video editor and maker and today we‚Äôre launched on Product Hunt üí™&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ZZJnskL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogd6inanw5thiclmoies.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ZZJnskL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogd6inanw5thiclmoies.jpg" alt="Pixiko"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pixiko is cool at:&lt;br&gt;
üëâApply filters (Glitch, BW, RGB splitter and etc.) to any period of time (all together and at the same time)&lt;br&gt;
üëâAdd text with motion and animated letter effects, neon, rainbow and so on&lt;br&gt;
üëâLoop, reverse, trim, speed up and down your video at any time period&lt;/p&gt;

&lt;p&gt;Surely, you can create animated posts, ads, stories, videos using your images on Pixiko üòù&lt;/p&gt;

&lt;p&gt;We will be very grateful for the support on PH, and even more so for the use and feedback about Pixiko üòé&lt;/p&gt;

&lt;p&gt;P.S. Our Product Hunt link - &lt;a href="https://www.producthunt.com/posts/pixiko"&gt;https://www.producthunt.com/posts/pixiko&lt;/a&gt;&lt;/p&gt;

</description>
      <category>help</category>
      <category>startup</category>
      <category>saas</category>
    </item>
    <item>
      <title>üò≤ ZERO CSS and just 1 HTML element to build a fully interactive SPA???!!?? üò± Abusing the internet once more! [Extreme SSR!]</title>
      <author>InHuOfficial</author>
      <pubDate>Fri, 21 May 2021 16:28:02 +0000</pubDate>
      <link>https://dev.to/inhuofficial/i-built-a-3-page-interactive-spa-with-a-single-image-element-and-no-css-extreme-ssr-4knk</link>
      <guid>https://dev.to/inhuofficial/i-built-a-3-page-interactive-spa-with-a-single-image-element-and-no-css-extreme-ssr-4knk</guid>
      <description>&lt;p&gt;I am back at it again, abusing the internet and this one should really blow you away.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J8cmpgNB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ceu1nrfg1hmf5hr2x1zf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J8cmpgNB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ceu1nrfg1hmf5hr2x1zf.gif" alt='"hold onto your butts" from Jurassic Park 1'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This time I really do think I have outdone myself.&lt;/p&gt;

&lt;p&gt;I present to you:&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;A 3 page SPA with an interactive poll and a contact form, with no CSS and one DOM element - just a single image! (go on, inspect the page!)&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I call it "Extreme Server Side Rendering (SSR)" ü§£&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PLEASE NOTE:&lt;/strong&gt; - if using a mobile you cannot use the contact form, I couldn't find a way of opening the keyboard without an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; I am afraid! Try it on PC instead!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FINAL THING:&lt;/strong&gt; Due to the round-trip time to the server the page feels "laggy", if you are on a 3G connection it might be unusable so wait until you are on a better connection before trying it!&lt;/p&gt;

&lt;p&gt;&amp;gt; &amp;gt; &amp;gt; &amp;gt; &lt;a href="https://inhu.co/demos/single-image-spa/"&gt;Try the single image SPA here! (best viewed on PC)&lt;/a&gt; &amp;lt; &amp;lt; &amp;lt; &amp;lt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-can-i-do-in-the-spa"&gt;
  &lt;/a&gt;
  What can I do in the SPA?
&lt;/h2&gt;

&lt;p&gt;There are some fun bits for you to try:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-kind-of-works-with-a-keyboard"&gt;
  &lt;/a&gt;
  It kind of works with a keyboard
&lt;/h3&gt;

&lt;p&gt;Well, you can Tab to elements to highlight them. You can even activate them with "Enter". &lt;/p&gt;

&lt;p&gt;Just don't expect a smooth experience (and I have only tested it in Chrome so it may not work in other browsers!)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-home-page-is-responsive"&gt;
  &lt;/a&gt;
  The home page is responsive
&lt;/h3&gt;

&lt;p&gt;Yup, if you try it on your mobile the home page actually has two different versions, a mobile one and a desktop one.&lt;/p&gt;

&lt;p&gt;On mobile you can even open and close the menu!&lt;/p&gt;

&lt;p&gt;I sadly didn't have time to make the other two pages responsive (this silly project took ages already!).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-poll-actually-works"&gt;
  &lt;/a&gt;
  The poll actually works!
&lt;/h3&gt;

&lt;p&gt;Cast your vote on the SPA as to what you think of my silly experiments!&lt;/p&gt;

&lt;p&gt;The current results are as follows:&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;This has to be the stupidest thing I have ever seen - I love it!&lt;/strong&gt;&lt;br&gt;
43%&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quite silly, &lt;a href="https://dev.to/inhuofficial/animations-without-js-or-css-or-images-pure-html-animation-45di"&gt;being rick rolled by ASCII text&lt;/a&gt; was sillier though!&lt;/strong&gt;&lt;br&gt;
29%&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is silly? I thought this was what server side rendering was!&lt;/strong&gt;&lt;br&gt;
29%&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-contact-form-works"&gt;
  &lt;/a&gt;
  The contact form "works"
&lt;/h3&gt;

&lt;p&gt;It is one of if not the worst experiences you will ever have on the web, but it works!&lt;/p&gt;

&lt;p&gt;In fact you can see the messages people have posted via the SPA in the final section!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-actually-going-on-here"&gt;
  &lt;/a&gt;
  What is actually going on here?
&lt;/h2&gt;

&lt;p&gt;Oh loads! &lt;/p&gt;

&lt;p&gt;Essentially every interaction with the page is being tracked with JavaScript and cookies.&lt;/p&gt;

&lt;p&gt;I am then sending that to a script on my server that renders an image based on mouse position, current focused item, keys pressed and more. I then send the constructed image back so you can view it!&lt;/p&gt;

&lt;p&gt;Needless to say I now have a much greater appreciation for browser developers as there are so many little things that I just take for granted!&lt;/p&gt;

&lt;p&gt;To give you an idea of how difficult this is, from the X and Y coordinates of the mouse I calculate if an item is hovered. To do that I need the X, Y, width and Height of each item on the page. I also need to know what state to turn that button to. &lt;/p&gt;

&lt;p&gt;Now if you click, I have to check if the click is within the bounds of a button and what action should be performed!&lt;/p&gt;

&lt;p&gt;Multiply that by 3 pages worth of buttons and inputs and a few other features and there is an awful lot I had to plumb together!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words-before-the-comments"&gt;
  &lt;/a&gt;
  Final words before the comments
&lt;/h2&gt;

&lt;p&gt;As with all of my silly experiments, there is no real point to this, just a bit of fun for you on a Friday!&lt;/p&gt;

&lt;p&gt;Have a fantastic weekend!&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#user-comments-submitted-via-the-contact-page-may-be-disabled-if-people-cannot-behave-"&gt;
  &lt;/a&gt;
  User comments submitted via the contact page (may be disabled if people cannot behave üòã)
&lt;/h2&gt;

&lt;p&gt;Here are a few comments that people have added via the single image SPA! &lt;/p&gt;




&lt;p&gt;&lt;strong&gt;InHuOfficial&lt;/strong&gt; - 17:11 21/05/2021&lt;br&gt;
I look forward to seeing the messages you all post! Don't forget that you have to wait one minute before refreshing this page to see your comment!&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;asdfsadf&lt;/strong&gt; - 17:40 21/05/2021&lt;br&gt;
asdfasdfasdfasdfsaf&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;testt&lt;/strong&gt; - 17:41 21/05/2021&lt;br&gt;
est&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;55&lt;/strong&gt; - 18:30 21/05/2021&lt;br&gt;
55&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;dakujem&lt;/strong&gt; - 18:38 21/05/2021&lt;br&gt;
serus&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;gghh&lt;/strong&gt; - 19:08 21/05/2021&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#for-the-algo"&gt;
  &lt;/a&gt;
  For the Algo!
&lt;/h2&gt;

&lt;p&gt;If you enjoyed this article, give it a ‚ù§ü¶Ñ and don't forget:&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Leave a comment for the algorithm! (even if it is just to say how silly I am üòã!)&lt;/p&gt;
&lt;/blockquote&gt;




</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>html</category>
    </item>
    <item>
      <title>A import√¢ncia da matem√°tica para a programa√ß√£o</title>
      <author>Fabr√≠cia Diniz</author>
      <pubDate>Fri, 21 May 2021 16:18:05 +0000</pubDate>
      <link>https://dev.to/fabriciadiniz/a-importancia-da-matematica-para-a-programacao-329e</link>
      <guid>https://dev.to/fabriciadiniz/a-importancia-da-matematica-para-a-programacao-329e</guid>
      <description>&lt;p&gt;&lt;em&gt;Esse artigo surgiu a partir de uma palestra que eu dei para pessoas de ensino m√©dio. O intuito era mostrar que a matem√°tica existe no mundo real da profiss√£o.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Quando eu decidi abandonar a carreira de biotecnologista e virar programadora, instintivamente eu voltei a estudar c√°lculo, geometria... &lt;strong&gt;N√£o que eu esperasse encontrar esses assuntos no dia a dia do trabalho&lt;/strong&gt;, mas porque eu achava os desafios interessantes e via similaridade entre eles e os desafios impostos pela programa√ß√£o.&lt;/p&gt;

&lt;p&gt;A matem√°tica se apoia na l√≥gica, que √© uma qualidade essencial para um bom profissional de TI, a geometria √© uma aliada no processo criativo, ajudando na abstra√ß√£o do mundo real e estat√≠stica nem se fala (al√¥ ci√™ncia de dados). √â poss√≠vel trabalhar com TI sem saber nada al√©m do b√°sico de matem√°tica, &lt;strong&gt;mas saber conceitos de matem√°tica mais avan√ßados te ajuda a ser uma pessoa profissional de destaque.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A pessoa que possui conhecimento em matem√°tica √© capaz de resolver problemas profundos, oferecendo solu√ß√µes mais claras, organizadas e eficientes. Empresas como Amazon, Facebook e Google olham muito mais para a l√≥gica no c√≥digo que voc√™ escreve do que conhecimentos de tecnologias espec√≠ficas. Elas te pedem para resolver desafios de l√≥gica, resolver problemas apontando tamb√©m a complexidade e a rapidez do c√≥digo que voc√™ fez al√©m da l√≥gica que te levou √† resposta apresentada.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uaqdUr5u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmlxyqtk4u7t9ys9t6jr.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uaqdUr5u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmlxyqtk4u7t9ys9t6jr.jpeg" alt="Sapinhos de porcelana trabalhando no computador, com um computador entre eles mostrando a logo do Google"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Quando estamos aprendendo matem√°tica, n√≥s aprendemos as opera√ß√µes b√°sicas e depois evolu√≠mos para as letrinhas, para achar x, achar y, e isso s√£o fun√ß√µes, que √© a base da computa√ß√£o todinha. Como na escola evolu√≠mos de opera√ß√µes b√°sicas s√≥ com n√∫meros para fun√ß√µes que t√™m umas letras no meio, quando entramos no campo da programa√ß√£o os n√∫meros e letras evoluem para &lt;strong&gt;qualquer coisa&lt;/strong&gt;. O que n√≥s nos apoiamos para lidar com esses desafios mais complexos √© na l√≥gica que vem bem do in√≠cio. Partimos de n√∫meros para letras e depois para coisas como carros, naves espaciais‚Ä¶ umas coisas mais legais e diferenciadas.&lt;/p&gt;

&lt;p&gt;Falando em naves espaciais, voc√™s sabiam que o programa que possibilitou o pouso do homem na lua pela primeira vez foi escrito por uma mulher? Foi a Margaret Hamilton que fez esse feito. &lt;strong&gt;Imaginem o TANTO de matem√°tica que n√£o √© necess√°rio para fazer uma nave espacial voar?&lt;/strong&gt; Ou ent√£o, pra fazer um joguinho como Minecraft?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IfRTI-66--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vj4urd4zbcb6lgs3ey4s.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IfRTI-66--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vj4urd4zbcb6lgs3ey4s.jpeg" alt="Minecraft"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nesse jogos mais legais de hoje em dia as pessoas precisam simular no computador a f√≠sica do mundo, uma bala ou uma flecha sendo lan√ßadas, o seu personagem caindo muito r√°pido de um lugar alto e se estabacando no ch√£o e voc√™ morrendo. Tudo isso envolve bastante matem√°tica (e f√≠sica). Meu marido come√ßou a aprender design de jogos ano passado e eu o estava ajudando com a parte de programa√ß√£o puramente dita. A gente tinha que definir a velocidade do personagem quando ele andava, a velocidade quando ele corria, a acelera√ß√£o para ele mudar de andando pra correndo pra parado. &lt;strong&gt;Tinha que definir a gravidade, a for√ßa do pulo do personagem pra definir qu√£o alto ele ia pular e qu√£o r√°pido ele ia cair no ch√£o.&lt;/strong&gt; Foi bem divertido, e mostrou pra n√≥s que tem muita matem√°tica e f√≠sica envolvida em fazer joguinhos legais.&lt;/p&gt;

&lt;p&gt;Hoje em dia ainda existem outras profiss√µes dentro da TI que s√£o bem legais e demandam bastante matem√°tica, como ci√™ncia de dados que √© estat√≠stica pura (&lt;em&gt;e uma das profiss√µes de TI com os maiores sal√°rios&lt;/em&gt;), como intelig√™ncia artificial, rob√≥tica e o pr√≥prio desenvolvimento de jogos. Isso sem contar todas as profiss√µes que envolvem hardware. A matem√°tica permeia toda a base dos trabalhos em TI e definitivamente n√£o √© algo que fica na escola e deixa de impactar o nosso dia a dia no trabalho.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Lembrete para quem chegou at√© aqui: matem√°tica n√£o √© um pr√©-requisito, √© apenas um b√¥nus. Ainda √© poss√≠vel ser um excelente profissional em diversas √°reas sem saber bulhufas de matem√°tica.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>braziliandevs</category>
      <category>gamedev</category>
      <category>programming</category>
      <category>math</category>
    </item>
    <item>
      <title>Let's start the journey to learn together Full-Stack Development</title>
      <author>scotty252</author>
      <pubDate>Fri, 21 May 2021 15:59:06 +0000</pubDate>
      <link>https://dev.to/scotty252/let-s-start-the-journey-to-learn-together-full-stack-development-40a0</link>
      <guid>https://dev.to/scotty252/let-s-start-the-journey-to-learn-together-full-stack-development-40a0</guid>
      <description>&lt;p&gt;Hello, My name is James Scott and I am a students of CS, as most students would know just got into college for Bachelors.&lt;/p&gt;

&lt;p&gt;I will be utilizing this summer to learn Web development basic languages like HTML, CSS, JavaScript and more...&lt;/p&gt;

&lt;p&gt;üôè üåç, I decided to create this space with the aim of documenting my programming road, organizing materials and inspirations that I have saved in millions of folders üóÇÔ∏è and notes üìö.&lt;/p&gt;

&lt;p&gt;You want to join me?üëÄ&lt;/p&gt;

&lt;p&gt;I am working hard towards becoming a Full Stack Web Developer, learning programming is a bit tough for me because I have to reconcile it with my daily Online Classes and work.&lt;/p&gt;

&lt;p&gt;I will be happy to make contact with Dev community (dev.io)! üë©‚Äçüíª üè¶ Ohh, I would like to add English is not my native language, please understand. This is another challenge for me.&lt;/p&gt;

&lt;p&gt;Today onwards I will be sharing my Coding Journey with you guys. Be the part of my this journey.&lt;/p&gt;

&lt;p&gt;If you like to Be the part of my this journey and follow me: Instagram : &lt;a href="https://instagram.com/devscott20"&gt;https://instagram.com/devscott20&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Devscott20: GET INSPIRED!&lt;/p&gt;

&lt;p&gt;Happy Coding! ‚úåÔ∏è&lt;/p&gt;

&lt;p&gt;Learning Resources :&lt;br&gt;
&lt;a href="https://freecodecamp.org"&gt;https://freecodecamp.org&lt;/a&gt; Responsive Web Design Certification &lt;a href="https://freecodecamp.org/learn"&gt;https://freecodecamp.org/learn&lt;/a&gt;&lt;br&gt;
‚ÄúPut Down the Javascript: Learn HTML &amp;amp; CSS first‚Äú &lt;a href="https://freecodecamp.org/news/put-down-the-javascri"&gt;https://freecodecamp.org/news/put-down-the-javascri&lt;/a&gt;..&lt;br&gt;
MDN Intro to Javascript &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaSc"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaSc&lt;/a&gt;..&lt;br&gt;
Just Javascript email course &lt;a href="https://justjavascript.com"&gt;https://justjavascript.com&lt;/a&gt;&lt;br&gt;
JSRobot Learning Game &lt;a href="https://lab.reaal.me/jsrobot"&gt;https://lab.reaal.me/jsrobot&lt;/a&gt;&lt;br&gt;
reactjs.org Intro to React &lt;a href="https://reactjs.org/tutorial/tutorial.html"&gt;https://reactjs.org/tutorial/tutorial.html&lt;/a&gt;&lt;br&gt;
gatsbyjs.org Tutorials &lt;a href="https://gatsbyjs.org/tutorial"&gt;https://gatsbyjs.org/tutorial&lt;/a&gt;&lt;br&gt;
So you can check out this blog regularly and let's do this journey together.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;br&gt;
Which Course will you Choose?&lt;/p&gt;

&lt;p&gt;Please share your thoughts in comments!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Build Serverless Applications using CDK and SAM</title>
      <author>Lorenz Vanthillo</author>
      <pubDate>Fri, 21 May 2021 15:56:56 +0000</pubDate>
      <link>https://dev.to/aws-builders/build-serverless-applications-using-cdk-and-sam-4oig</link>
      <guid>https://dev.to/aws-builders/build-serverless-applications-using-cdk-and-sam-4oig</guid>
      <description>&lt;p&gt;AWS recently announced the public preview of Serverless Application Model (SAM) support for CDK. SAM is an open-source framework that can be used to build, test and deploy serverless applications on AWS. It provides a Lambda-like execution environment that lets you locally build, test, and debug applications. Previously this could only be defined by SAM templates but now it is also possible through the AWS Cloud Development Kit (CDK)!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eCNL4LMm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6k2bhe9sr1ukxxusudvo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eCNL4LMm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6k2bhe9sr1ukxxusudvo.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will guide you through a small demo project to demonstrate how to build a serverless application with AWS CDK and test it locally with AWS SAM.&lt;/p&gt;

&lt;p&gt;We will build a simple REST API which shows the current bid or ask price of a certain cryptocurrency on Binance (exchange), expressed in the value of Bitcoin. &lt;/p&gt;

&lt;p&gt;The API expects two query parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;coin: (ETH, DOG, LINK, DOT, ...)&lt;/li&gt;
&lt;li&gt;price: (bid or ask)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example of the API call:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ curl "http://127.0.0.1:3000/crypto?type=ask&amp;amp;coin=ETH"
{"coin": "ETH", "price": 0.066225}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The setup in AWS will also be pretty straight forward. &lt;br&gt;
We will set up a Lambda proxy integration in API Gateway&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2mVOqkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jeqxpod37dzyst85djr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2mVOqkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jeqxpod37dzyst85djr.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get started, we need to install the AWS CDK CLI and create a new CDK project. I use Python as client language.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm install -g aws-cdk
$ cdk init app --language python
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The project structure looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
‚îú‚îÄ‚îÄ README.md
‚îú‚îÄ‚îÄ app.py
‚îú‚îÄ‚îÄ cdk.json
‚îú‚îÄ‚îÄ requirements.txt
‚îú‚îÄ‚îÄ sam_cdk_demo
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ __init__.py
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ sam_cdk_demo_stack.py
‚îî‚îÄ‚îÄ setup.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The file &lt;code&gt;sam_cdk_demo/sam_cdk_demo_stack.py&lt;/code&gt; should contain our code to define the AWS cloud resources we need but first let's start with writing our Lambda.&lt;/p&gt;

&lt;p&gt;Create a folder inside the root of the project called &lt;em&gt;"lambda"&lt;/em&gt; and add a &lt;code&gt;handler.py&lt;/code&gt;. The &lt;a href="https://github.com/ccxt/ccxt"&gt;ccxt&lt;/a&gt; library is used by our Lambda to interact with the Binance API. The Lambda itself is very basic on purpose.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ccxt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;


&lt;span class="c1"&gt;# use CCXT library to connect with Binance API
&lt;/span&gt;&lt;span class="n"&gt;exchange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ccxt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'binance'&lt;/span&gt;&lt;span class="p"&gt;)({&lt;/span&gt;
    &lt;span class="s"&gt;'timeout'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'enableRateLimit'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_current_price&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coin_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price_type&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# fetch latest ticker data for coin pair xxx/BTC
&lt;/span&gt;    &lt;span class="n"&gt;ticker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exchange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetch_ticker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'{}/BTC'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coin_name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="c1"&gt;# get ask/bid price from ticket data
&lt;/span&gt;    &lt;span class="n"&gt;current_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ticker&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;price_type&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;current_price&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;lambda_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# get values from query string parameters
&lt;/span&gt;    &lt;span class="n"&gt;coin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'queryStringParameters'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'coin'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'queryStringParameters'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'type'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# CCXT exchange expects coin in uppercase
&lt;/span&gt;    &lt;span class="n"&gt;valid_coin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;coin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# get current price based on coin name and price type (ask/bid)
&lt;/span&gt;    &lt;span class="n"&gt;current_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_current_price&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;valid_coin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'statusCode'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'headers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
            &lt;span class="s"&gt;'Content-Type'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'application/json'&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s"&gt;'body'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="s"&gt;'coin'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;valid_coin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;current_price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't forget to add a &lt;code&gt;requirements.txt&lt;/code&gt; inside the folder to make the ccxt library available to the Lambda.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ccxt==1.50.13
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Lambda is ready! Now we will use AWS CDK to define our AWS infrastructure. We need to deploy the Lambda and create an API Gateway in front of it. Update the file &lt;code&gt;demo/demo_stack.py&lt;/code&gt;. We keep the code pretty basic again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;aws_cdk&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;aws_lambda&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;_lambda&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;aws_apigateway&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;apigw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CdkLambdaSamStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;construct_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;construct_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# creating Lambda function that will be triggered by the API Gateway
&lt;/span&gt;        &lt;span class="n"&gt;get_price_handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'CryptoFunction'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'handler.lambda_handler'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;runtime&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Runtime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PYTHON_3_8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'lambda'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# create REST API
&lt;/span&gt;        &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apigw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RestApi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'crypto-api'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# add resource /crypto
&lt;/span&gt;        &lt;span class="n"&gt;resource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'crypto'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# create Lambda integration 
&lt;/span&gt;        &lt;span class="n"&gt;get_crypto_integration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apigw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LambdaIntegration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_price_handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# add method which requires two query string parameteres (coin and type)    
&lt;/span&gt;        &lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;http_method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;integration&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;get_crypto_integration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;request_parameters&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;'method.request.querystring.coin'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'method.request.querystring.type'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="n"&gt;request_validator_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;apigw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestValidatorOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;validate_request_parameters&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update the &lt;code&gt;requirements.txt&lt;/code&gt; in the project root with the necessary modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws-cdk.core
aws-cdk.aws_lambda
aws-cdk.aws_apigateway
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start the Python virtual environment which is created by CDK and install the modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ source .venv/bin/activate
(.venv)$ pip3 install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will use AWS SAM to test our setup locally. It's important to mention that you need to have &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt; installed. We will use Docker to build our code. The Lambda will also run inside as a  Lambda-like Docker container.&lt;/p&gt;

&lt;p&gt;Prepare the deployment artifact.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(.venv)$ sam-beta-cdk build --use-container
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start the local API Gateway.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sam-beta-cdk local start-api
...
* Running on http://127.0.0.1:3000/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use a tool like &lt;a href="https://www.postman.com/"&gt;Postman&lt;/a&gt; (or &lt;code&gt;curl&lt;/code&gt; or just your browser) to perform calls against our API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z8jK3RLY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa74mjmgtbvj1prmbg5k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z8jK3RLY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xa74mjmgtbvj1prmbg5k.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It takes a few seconds to execute the function because AWS SAM is spinning up a Docker container to execute our code. After the execution the container is destroyed. &lt;/p&gt;

&lt;p&gt;When everything looks fine we can deploy it to AWS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(.venv)$ cdk bootstrap
(.venv)$ cdk deploy -a .aws-sam/build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now test against the deployed API.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w1nF0ibb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5wwbqs1kech0j05bmli.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w1nF0ibb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5wwbqs1kech0j05bmli.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o2zB4RVM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r49pzbb9scyg77dlj5zn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o2zB4RVM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r49pzbb9scyg77dlj5zn.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We were able to test our API and Lambda using the new Serverless Application Model integration with CDK! You can find all code &lt;a href="https://github.com/lvthillo/sam-cdk-demo"&gt;on my GitHub&lt;/a&gt;. Be aware that this feature is in preview. Feel free to do more extensive testing. You can report bugs and submit feature requests to the &lt;a href="https://github.com/aws/aws-sam-cli"&gt;SAM opensource repository&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>cdk</category>
      <category>sam</category>
    </item>
    <item>
      <title>Sublime Text 4 is here, can it convert you? (Snack Pack #6)</title>
      <author>Blake Campbell</author>
      <pubDate>Fri, 21 May 2021 15:42:21 +0000</pubDate>
      <link>https://dev.to/blaketweeted/sublime-text-4-is-here-can-it-convert-you-snack-pack-6-53p0</link>
      <guid>https://dev.to/blaketweeted/sublime-text-4-is-here-can-it-convert-you-snack-pack-6-53p0</guid>
      <description>&lt;h1&gt;
  &lt;a href="#it-hasnt-converted-me"&gt;
  &lt;/a&gt;
  It hasn't converted me.
&lt;/h1&gt;




&lt;h2&gt;
  &lt;a href="#benefits-large-files-and-memory"&gt;
  &lt;/a&gt;
  Benefits Large files and memory
&lt;/h2&gt;

&lt;p&gt;VSCode is without a doubt a fantastic experience when you get your workflow set up. VSCode also is a memory hog in comparison to Sublime Text 4. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Not an extensive test&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;My VSCode has extensions running vs. a clean install of Sublime Text 4. The same project and tabs are open in each editor.&lt;/p&gt;

&lt;p&gt;The difference in memory is vast. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TNIx-57N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v367ir84c17y2idr86x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TNIx-57N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v367ir84c17y2idr86x.png" alt="Screen Shot 2021-05-21 at 11.19.49 AM"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkDXsez4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dscg6lqgzivbozbu137c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkDXsez4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dscg6lqgzivbozbu137c.png" alt="Screen Shot 2021-05-21 at 11.20.29 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This doesn't bug me. My laptop has plenty of memory to use. If your workstation is limited, it's worth the mention. VSCode also has many more things I use, from the git integration to a snippet library I've written. Again not a fair comparison for memory usage.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#my-history-with-text-editors"&gt;
  &lt;/a&gt;
  My history with Text editors
&lt;/h2&gt;

&lt;p&gt;Sublime Text 2 -&amp;gt; Atom -&amp;gt; VSCode&lt;/p&gt;

&lt;p&gt;Starting with Sublime then moving to Atom. Atom was my favorite for years with the extensions. I even bought the coffee mug.&lt;/p&gt;

&lt;p&gt;After arriving at VSCode, I don't think I'm changing anytime soon. There are too many tools and plugins that make my job easier. There are a million articles about the extension marketplace and making your own.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#when-would-i-switch-fulltime"&gt;
  &lt;/a&gt;
  When would I switch full-time?
&lt;/h3&gt;

&lt;p&gt;Honestly, if Sublime Text integrated with VSCode's marketplace, that'd be the only thing to get me to switch. I'm not even sure if that's possible, but my entire flow has been built around VSCode. &lt;/p&gt;

&lt;p&gt;Even then, I need to buy a license. &lt;/p&gt;

&lt;p&gt;What do you think about the new version of Sublime Text? Is it worth the download?&lt;/p&gt;




&lt;p&gt;My snack pack reads are intended for a quick read without any fluff and provide actionable items.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
