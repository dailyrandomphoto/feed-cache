<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The First Gaming blog here in dev community</title>
      <author>tirth-uhiha-dev</author>
      <pubDate>Thu, 03 Jun 2021 18:50:25 +0000</pubDate>
      <link>https://dev.to/tirthuhihadev/the-first-gaming-blog-in-dev-community-5boc</link>
      <guid>https://dev.to/tirthuhihadev/the-first-gaming-blog-in-dev-community-5boc</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XlJm_7Xi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pn81oc9lz8zy8c4csah.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XlJm_7Xi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pn81oc9lz8zy8c4csah.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#heythere"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Hey&lt;/strong&gt;,&lt;strong&gt;There&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Tired Hardworking Devs its me tirth, the one and only gaming blogger on dev from nowonwards i will posting valorant, fortnite , and pubg etc. blogs here on dev community so do follow me for more if play one of these games adios!!.&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>gratitude</category>
      <category>devjournal</category>
      <category>vscode</category>
    </item>
    <item>
      <title>Key Steps To Building A Great Small Business Website</title>
      <author>Krowser Web Services </author>
      <pubDate>Thu, 03 Jun 2021 18:47:46 +0000</pubDate>
      <link>https://dev.to/krowser/key-steps-to-building-a-great-small-business-website-nn7</link>
      <guid>https://dev.to/krowser/key-steps-to-building-a-great-small-business-website-nn7</guid>
      <description>&lt;p&gt;Whether you are a freelance developer, own a launderette, or have another type of small business, a great website is necessary for your company’s success. &lt;/p&gt;

&lt;p&gt;If you are looking to build a new startup website or make your current site more productive, here are the key steps to getting started and helping your small business website compete effectively in the online marketplace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obtain a good domain name&lt;/strong&gt;&lt;br&gt;
Your domain name, also known as your website address, is often the entry point to your site. It is important that it makes a good impression for usability purposes, as well as for search engine optimization (SEO).&lt;/p&gt;

&lt;p&gt;Here are some tips for coming up with an optimal domain name:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make it easy to spell. Try not to use slang, made up, or extremely esoteric words.&lt;/li&gt;
&lt;li&gt;Keep it as short as possible. The shorter it is, the easier it is to remember and type correctly.&lt;/li&gt;
&lt;li&gt;Use the proper domain extension. Try to always make it a .com domain name (as opposed to .net, .co, etc.) unless it is more appropriate to use another extension, such as .gov, .edu, or .org.&lt;/li&gt;
&lt;li&gt;Avoid numbers and hyphens. They are hard to remember and less elegant and memorable than word-only domain names, and may be misunderstood when vocalizing the domain name.&lt;/li&gt;
&lt;li&gt;Make the address broad to facilitate future growth. For example, Amazon.com is a much broader website address than BooksOnline.com and allows Amazon to sell pretty much every type of consumer good instead of books only, as was its original purpose.&lt;/li&gt;
&lt;li&gt;Ensure it is memorable. With so many websites on the internet, it is important that your website name is catchy so people will remember how to access it in the future.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Purchase secure, scalable website hosting with good tech support&lt;/strong&gt;&lt;br&gt;
A website host (or sometimes referred to as a website hosting provider) is a company that offers the technology and services necessary for a website to be viewed on the internet. You connect your domain name to your hosting provider so that when users visit your website address, they are shown your website that you store on your hosting account.&lt;/p&gt;

&lt;p&gt;Hosting services can cost anywhere between $2 to $100+ per month, depending on the kind of technology and support you choose. You can usually get a discount if you purchase a yearly plan as opposed to a monthly plan.&lt;/p&gt;

&lt;p&gt;Here are some guidelines for choosing a good website hosting plan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Although you can get a “shared server” hosting plan for as little as $2 per month, I would typically advise against this. Shared hosting means you are sharing a server and its resources with other customers, which can make the performance of your site suffer. Also, if one of the other websites on your shared server is hacked, it is possible for your website to also be infected.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A “dedicated server” hosting plan is the most expensive option—cost can range from around $100 to $2,000 per month—but it would make your website perform the most optimally. Having a dedicated server plan means that the physical server machine is entirely dedicated to your site; therefore, all the resources are yours and it is more secure than a shared hosting plan, as long as the technology is optimal. However, it is much more expensive than what most small businesses usually are willing to pay. Once you have a very high-performing site, this may be what you need, but it is overkill for most early stage and small businesses.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The compromise I typically recommend is a “virtual private server” (VPS) hosting plan which offers the best of both worlds. The cost ranges from around $20 to $50 per month, which is affordable for the hosting services you will receive. A VPS is one machine that is partitioned to act as multiple machines, which gives it a similar affordability to shared hosting, with similar security and performance potential as a dedicated server hosting plan.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make sure your hosting company has phone and/or chat support so you can be helped quickly if you have a problem. Email support can often take too long and become frustrating when a problem needs to be resolved immediately. Phone support is best, but chatting works well, too.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There needs to be an easy to use server interface like cPanel to access your server. You do not want to have to use terminal commands to view your server contents and make changes, unless you can afford to hire a professional server administrator to help you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check to see what kind of server security is in place on the server you are considering. You will want to be able to access your server via Secure File Transfer Protocol (SFTP). There should be daily backups being made of your server contents. There should also be an easy, one or two-click method to install Secure Sockets Layer (SSL) certificates. Make sure the hosting company performs regular security maintenance. Ideally your hosting company has a published security protocol you can review so you know how they keep their servers safe.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some popular website hosting companies include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GoDaddy&lt;/li&gt;
&lt;li&gt;DreamHost&lt;/li&gt;
&lt;li&gt;Bluehost&lt;/li&gt;
&lt;li&gt;InMotion&lt;/li&gt;
&lt;li&gt;SiteGround&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Prominently display a clear description of your business&lt;/strong&gt;&lt;br&gt;
It is important to let people know who you are and what you do right away so they don’t feel confused when they visit your small business website. Make sure your main homepage banner (also known as a “hero image”) and subsequent banners are visual representations of your services, and also that you have an introductory text blurb near the top of the page that describes who you are and what you do.&lt;/p&gt;

&lt;p&gt;Additionally, make sure both your main and footer navigation menus have “About Us” page links easily accessible so people can click them and read more about your business in depth.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Implement the best content management system&lt;/strong&gt;&lt;br&gt;
A content management system (CMS) is a software program or application that is used to create and manage digital content. A good CMS will help you maintain your site, and you don’t need much technical knowledge to use it. You should choose a CMS that is designed for your unique needs; different systems are used for different reasons, such as user-friendliness, extensibility, and budget.&lt;/p&gt;

&lt;p&gt;The following are some popular systems with descriptions of their strengths and weaknesses.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WordPress:&lt;/strong&gt; WordPress is the world’s most popular CMS. It has a vast, active support community and many useful plugins to extend the functionality of your site. (And if you cannot find a plugin that does what you want, it is easy to find a WordPress developer who can make one for you!) WordPress is also free and relatively simple to install. Most website developers are familiar with it so it is not hard to find an individual or agency that can work on your site. I normally recommend that small businesses use WordPress to create their websites, due to its flexibility and extensibility.&lt;br&gt;
It must be noted, however, that WordPress’s biggest weakness is security—because it is so popular, hackers target it the most. Your WordPress site needs to be regularly maintained and secured so it is not hacked. Also, it is difficult to secure every single third-party plugin, so keeping your WordPress site secure must be an ongoing commitment through various best practices (checking to see if your plugins have been updated within the past few months, making sure it is a plugin provided in the official WordPress repository, deleting unused plugins immediately, etc.).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Drupal:&lt;/strong&gt; Drupal is another popular CMS. It offers many of the same benefits as WordPress, including flexibility, ease of use, and a large support community. Notably it is a more secure CMS than WordPress (safer from malicious activity); however, it doesn’t have as many plugin or theme options, which makes it less extensible. For many years, the White House website (Whitehouse.gov) was run with Drupal, but has since switched to WordPress, which it still uses today.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Joomla!:&lt;/strong&gt; Another popular CMS is Joomla! Out of the box, it has better SEO, security, and multilingual capabilities than WordPress; however, with the help of a few plugins, WordPress surpasses Joomla!’s capabilities.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Squarespace:&lt;/strong&gt; Squarespace is a service you subscribe to monthly or annually that makes website and blog creation an easy “drag and drop” experience. It includes website design, development, software maintenance, metrics, domain name with annual purchase, SSL security, 24/7 support, and unlimited bandwidth and storage hosting all in one package. It is especially suitable for creatives and provides you with top-notch design templates. If you are on a tight budget, need a simple and beautiful site, but cannot afford a website designer, this is a great service for you.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a much smaller learning curve with Squarespace than with WordPress, Drupal, and Joomla!, but it doesn’t have nearly as many extensibility options. However, if you have little or no technical knowledge and are looking for a quick and easy way to put up a website, Squarespace is an excellent option for you.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Wix:&lt;/strong&gt; Wix is very similar to Squarespace, but it is a bit more user-friendly. It offers a monthly, but not annual, subscription and includes similar features. Wix is also a drag-and-drop builder—you can freely drag and drop elements anywhere on the page; in comparison, Squarespace is more structured in where you can drag and drop on the page. The learning curve to using Wix is even shorter than Squarespace, so if you need to publish a site quickly, this may be your best option.
Wix has a lot more templates than Squarespace to choose from, but once you choose a template, you must stick with it or be forced to completely rebuild your site. With Squarespace, you can change your template anytime without having to rebuild the entire site. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Choose a good e-commerce platform&lt;/strong&gt;&lt;br&gt;
If you plan on selling goods and/or services through your website, you will need the right technology to do so. (If you do not currently sell anything, you may want to consider doing so since e-commerce could potentially increase your profits.) If you decide to allow users to financially transact with you online, you will need to choose the right platform for your business model.&lt;/p&gt;

&lt;p&gt;Here are some popular small business e-commerce platforms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WooCommerce:&lt;/strong&gt; WooCommerce is one of the world’s most popular e-commerce platforms—it can turn your WordPress website into an online store. Like WordPress, there are many plugins available, and it attaches to WordPress, which makes it extremely flexible. There are many free and premium themes pre-built for WooCommerce. (As a rule, it is better to use a premium theme from a reputable developer because it will offer better security and support.) If you are not tech-savvy, you will most likely need a WordPress developer to help you set it up and use it. WooCommerce also offers a very high amount of capabilities and scalability that your small business might need.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Shopify:&lt;/strong&gt; Shopify is a cloud based e-commerce platform that allows you to create and customize an online store, and to manage products, inventory, payments, and shipping. It is not a WordPress extension like WooCommerce—it is a standalone platform that is hosted on the Shopify server—so if you have a main website, your e-commerce site would technically be separate from that. You can link to your Shopify account from your regular website built with WordPress, Drupal, Wix, etc., unless your main website has a Shopify integration plugin.&lt;br&gt;
Features include unlimited products, unlimited bandwidth, fraud analysis, discount codes, reports, and much more. The key benefits of Shopify are that you do not need a developer to set up a store, and everything on the backend is already set up for you when you subscribe. The downside is you do not have as much control or flexibility over your store as you would with WooCommerce.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Shopify Plus:&lt;/strong&gt; Shopify Plus is Shopify, but with a higher level of customization, more staff accounts, and international e-commerce options. It also has a higher level of support. However, all of this obviously comes with a higher subscription cost, and it still does not have all the flexibility and customization abilities as WooCommerce.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Business Squarespace:&lt;/strong&gt; Squarespace has an e-commerce subscription option, so if you chose Squarespace to build your site and have very simple e-commerce needs, you can choose this route. Business Squarespace charges a transaction fee, but this can be bypassed by upgrading your subscription to a basic online store. It includes a free domain, SSL security, SEO, abandoned cart recovery, discounts, real-time carrier shipping, and more. However, it has been noted it is not as user-friendly as Shopify. And like Shopify, it is simply not as flexible as WooCommerce.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Wix:&lt;/strong&gt; Wix actually has a Shopify extension which is very user friendly. You will have to upgrade your Wix account and subscribe to Shopify in order to use it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GoDaddy Online Store:&lt;/strong&gt; GoDaddy has a relatively new e-commerce standalone subscription platform that is relatively easy to set up and use. Very little technical knowledge is required to launch your shop with GoDaddy Online Store. The templates are simple and clean, and somewhat customizable. Features include marketing and SEO tools, social media integration, appointment booking, SSL security, rapid page loading, and more.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Create an interesting, memorable, and engaging website user interface&lt;/strong&gt;&lt;br&gt;
Make sure your small business website interface leaves a positive impression that drives results. You can do so by implementing the following suggestions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use beautiful graphics and easy-to-read fonts.&lt;/li&gt;
&lt;li&gt;Make sure your graphics are compressed and optimized for fast loading. If your website is slow, search engines like Google will penalize your ranking.&lt;/li&gt;
&lt;li&gt;Research the competition to see how they have designed and optimized their websites; implement similar components that will work for your small business website.&lt;/li&gt;
&lt;li&gt;Research your target audience to see what they want from your site and make it easy for them to accomplish it.&lt;/li&gt;
&lt;li&gt;Stay consistently on brand throughout your website design.&lt;/li&gt;
&lt;li&gt;Design an intuitive navigation system which allows users to get to the pages they need quickly.&lt;/li&gt;
&lt;li&gt;Publish easily accessible contact information.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Incorporate obvious call-to-actions (especially “buy now” buttons).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create pages that are standard for small business websites, such as: &lt;br&gt;
*Home&lt;br&gt;
*About us&lt;br&gt;
*Products/Services (with descriptions and visually appealing images)&lt;br&gt;
*Sitemap (for SEO purposes)&lt;br&gt;
*Management team&lt;br&gt;
*Contact us&lt;br&gt;
*Terms of use (the online contract governing how users can use your site)&lt;br&gt;
*Privacy policy&lt;br&gt;
*Additional pages relevant to your specific small business&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Optimize your small business website for search engines&lt;/strong&gt;&lt;br&gt;
SEO is a set of practices you apply to your website to ensure search engines index and rank your website appropriately and then show it to search engine users. Once your website is “crawled” by search engines, it competes with websites that have similar content. The better your website design and content is, the higher your site will show up on search engine result pages.&lt;/p&gt;

&lt;p&gt;SEO mainly includes the following practices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Keyword research and implementation&lt;/li&gt;
&lt;li&gt;Optimal website code&lt;/li&gt;
&lt;li&gt;Fast loading speed&lt;/li&gt;
&lt;li&gt;Being secure and having an SSL certificate installed; SSL is the standard security technology that ensures data passed between web servers and browsers remains private&lt;/li&gt;
&lt;li&gt;Having a mobile-friendly site&lt;/li&gt;
&lt;li&gt;Existence of high-quality backlinks (links on external websites with related content) that lead to your site&lt;/li&gt;
&lt;li&gt;Having lots of positive reviews online (Google, Yelp, Facebook, etc.)&lt;/li&gt;
&lt;li&gt;Using internal links throughout your site to keep people clicking and reading&lt;/li&gt;
&lt;li&gt;Using social media to link to your site (LinkedIn, Twitter, Facebook, Pinterest, etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SEO is an extremely important ongoing process that can mean the difference between showing up on the first page of search engine results pages (resulting in large amounts of free traffic to your website) or page 300 (resulting in no traffic).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Regularly create and publish quality content&lt;/strong&gt;&lt;br&gt;
Both content quantity and freshness are important to search engines, so it’s important that you create a plan to publish quality articles and/or blog posts on your site and on external sites that link to your site. If you want to rank highly in search engine results and encourage people to return to your site again and again, you will have to update your website with new and relevant content as frequently as possible.&lt;/p&gt;

&lt;p&gt;In addition to static page content and articles, a great form of content to post on your website is testimonials. Asking for testimonials from your customers and then publishing them on your website is a great way to post fresh, high-quality content on your site that makes your small business more attractive.&lt;/p&gt;

&lt;p&gt;Make sure your content uses an appropriate, on-brand tone that people will enjoy reading.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install webmaster tools&lt;/strong&gt;&lt;br&gt;
Make use of vital data to help you analyze traffic and site performance by installing Google Analytics and Google Search Console (both preferably via Google Tag Manager), and Bing Webmaster Tools. These tools can be used to track the following types of information:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Daily, weekly, and monthly visitors to your site&lt;/li&gt;
&lt;li&gt;Number of views on each page of your site&lt;/li&gt;
&lt;li&gt;“Bounce rate”—the percentage of users who come to your site and leave after having only viewed one page (Google algorithms give higher rankings to websites that have a low bounce rate, on the theory that visitors are spending more time on the site and find it valuable.)&lt;/li&gt;
&lt;li&gt;Average time spent on site by visitors&lt;/li&gt;
&lt;li&gt;Crawl errors on your site (errors that the search engines found on your site in crawling its content)&lt;/li&gt;
&lt;li&gt;Broken links on the site
Keywords that lead users to your site&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Implement a website maintenance plan&lt;/strong&gt;&lt;br&gt;
A website shouldn’t be created and then allowed to grow stale. In order to have a successful website that ranks well in search engines and doesn’t get hacked, you need to make sure it is properly maintained.&lt;/p&gt;

&lt;p&gt;Here are some tips to create a small business website maintenance plan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check Webmaster Tools data at least once a month and have any vital errors emailed to you in real time.&lt;/li&gt;
&lt;li&gt;Use traffic data to learn more about your audience so you can better cater to them.&lt;/li&gt;
&lt;li&gt;Use performance data to optimize and fix warnings and errors.
Make sure all software is always up to date.&lt;/li&gt;
&lt;li&gt;Run security scans so you know your website is clean of malware and hasn’t been hacked.&lt;/li&gt;
&lt;li&gt;Use “split testing” to see if certain variations of your website help performance; for example, if you are selling a product, you might have two versions of a particular landing page with different images and wording—the split testing allows you to see which version has a higher conversion rate&lt;/li&gt;
&lt;li&gt;Allow website users to provide you with feedback about your site.&lt;/li&gt;
&lt;li&gt;Continue to check out your competition from time to time to see what they are doing with their online presence and see if what they’ve done can work for you as well.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
As you can tell after reading this article, creating a great small business website may not be as simple as you first thought. However, if you follow the steps set forth in this article, your small business will have an excellent chance at succeeding in the online marketplace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Forbes&lt;/li&gt;
&lt;li&gt;AllBusiness&lt;/li&gt;
&lt;li&gt;Shopify blog&lt;/li&gt;
&lt;li&gt;Wix Blog&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Why Every Developer Should Build Their Own Blog</title>
      <author>Braydon Coyer</author>
      <pubDate>Thu, 03 Jun 2021 18:38:07 +0000</pubDate>
      <link>https://dev.to/braydoncoyer/why-every-developer-should-build-their-own-blog-ceg</link>
      <guid>https://dev.to/braydoncoyer/why-every-developer-should-build-their-own-blog-ceg</guid>
      <description>&lt;p&gt;If you’re a web developer applying for a job, you’re placed in a unique position. Job applications require a resume, yes, but they may also ask for your portfolio or personal website, giving you an opportunity to impress with your own slice of the internet and display past projects and experience.&lt;/p&gt;

&lt;p&gt;Someone approached me last month and asked me what personal project they should work on (as a new developer) and put on their portfolio. Instead of suggesting the age-old todo application, I took some time to really think about this question. And I have an answer.&lt;/p&gt;

&lt;p&gt;While a lot of work can go into creating your portfolio itself, &lt;strong&gt;I believe that building your own blog is one of the best projects you can show to potential employers.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-projects-to-your-portfolio-that-span-many-verticals"&gt;
  &lt;/a&gt;
  Add projects to your portfolio that span many verticals
&lt;/h3&gt;

&lt;p&gt;When considering projects to list on your portfolio, select items to showcase that touch a variety of topics directly related to your ideal role. This is appealing to your potential employers - they have tangible evidence of your credibility with those topics, languages or frameworks.&lt;/p&gt;

&lt;p&gt;While there isn’t anything wrong with the traditional todo application (and may be the best beginner project for some fresh developers), it usually remains simple enough to fit on one page and cover straightforward topics like basic state management and user interaction.&lt;/p&gt;

&lt;p&gt;If you’re a developer building your own blog, here is a list of topics you’d have to cover at a bare minimum to get a basic system operational:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data storage for articles, pictures and more&lt;/li&gt;
&lt;li&gt;Routing&lt;/li&gt;
&lt;li&gt;Image optimization&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Take it a step further, and things get a bit more complex:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sorting and filtering articles&lt;/li&gt;
&lt;li&gt;Social sharing images&lt;/li&gt;
&lt;li&gt;Share articles to social media outlets&lt;/li&gt;
&lt;li&gt;Code syntax highlighting for snippets&lt;/li&gt;
&lt;li&gt;Article read time&lt;/li&gt;
&lt;li&gt;Individual article view count&lt;/li&gt;
&lt;li&gt;Heading anchor links&lt;/li&gt;
&lt;li&gt;Dynamic slug creation&lt;/li&gt;
&lt;li&gt;Dynamic page creation&lt;/li&gt;
&lt;li&gt;Experience using a CMS&lt;/li&gt;
&lt;li&gt;Migrating to statically generated pages for blazing fast speeds&lt;/li&gt;
&lt;li&gt;SEO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While not exhaustive, these lists help get the idea across that building your own blog is a bit more complex (and impressive) than building a todo application. Potential employers (especially those who have a technical background) understand the amount of time and effort it takes to build your own blog, and allows them to ask specific implementation questions as part of your interview.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-benefit-of-having-your-own-slice-of-the-internet"&gt;
  &lt;/a&gt;
  The benefit of having your own slice of the internet
&lt;/h3&gt;

&lt;p&gt;Having your own custom blog (or portfolio) serves as a creative outlet and digital playground.&lt;/p&gt;

&lt;p&gt;Want to test out a new UI library? There’s nothing stopping you. Want to add some crazy animations to articles? Go ahead! There’s no limit to what you can do with something as generic as a blog! And remember — potential employers have tangible proof of your experience building out a robust system.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#best-custom-developer-blogs"&gt;
  &lt;/a&gt;
  Best custom developer blogs
&lt;/h3&gt;

&lt;p&gt;Here’s a list of some my favorite creative blogs that I’ve compiled to kickstart your creativity.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.joshwcomeau.com/"&gt;Josh Comeau&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://una.im/archive/"&gt;Una Kravets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aboutmonica.com/writing"&gt;Monica Powell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://telmo.is/"&gt;Telmo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-about-blogging-platforms"&gt;
  &lt;/a&gt;
  What about blogging platforms?
&lt;/h3&gt;

&lt;p&gt;I’m not against the various blogging platforms available for developers. In fact, if you don’t have the time to build your own custom blog, I highly recommend you create a blog over on &lt;a href="https://hashnode.com/@braydoncoyer/joinme"&gt;Hashnode&lt;/a&gt;; it’s easy to set up and you can connect it to your own domain within a matter of minutes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;What are some projects that you would recommend developers showcase on their portfolio?&lt;/p&gt;

&lt;p&gt;Hit me up &lt;a href="https://twitter.com/BraydonCoyer"&gt;on Twitter&lt;/a&gt; and let me know!&lt;/p&gt;

&lt;p&gt;Thanks for reading! If you enjoyed this article, consider &lt;a href="https://braydoncoyer.dev/newsletter"&gt;signing up for my developer newsletter!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>portfolio</category>
      <category>webdev</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>The AWS Community Builders Program - What it is and how to apply.</title>
      <author>Fon Nkwenti</author>
      <pubDate>Thu, 03 Jun 2021 18:26:45 +0000</pubDate>
      <link>https://dev.to/aws-builders/the-aws-community-builders-program-what-it-is-and-how-to-apply-159l</link>
      <guid>https://dev.to/aws-builders/the-aws-community-builders-program-what-it-is-and-how-to-apply-159l</guid>
      <description>&lt;p&gt;I was recently accepted into the AWS Community Builder's program, so I shared my excitement and gratitude on social media, which naturally led to congratulatory messages in response. Some people actually thought I had landed a new position at AWS. I must admit, living in Cameroon and working for a company like AWS would be a good thing, but sorry, I'm not on Amazon's payroll (yet 🤫). &lt;br&gt;
In this post, I want to share with you what the AWS Community Builders program is all about, who can apply, and the advertised benefits of joining the program. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-is-the-aws-community-builders-program"&gt;
  &lt;/a&gt;
  So what is the AWS community Builders program?
&lt;/h2&gt;

&lt;p&gt;The AWS Community Builders program offers technical resources, mentorship, and networking opportunities to AWS enthusiasts and emerging thought leaders who are passionate about sharing knowledge and connecting with the technical community.&lt;br&gt;
The program isn't a lifetime achievement. It runs in 12-month intervals for each member, but if you feel you need to acquire more skills, say in another topic, you can re-apply to remain in the program.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-benefits-of-the-program"&gt;
  &lt;/a&gt;
  What are the benefits of the program?
&lt;/h2&gt;

&lt;p&gt;When you sign the NDA and join the program, you will eventually receive;&lt;br&gt;
Access to AWS product teams and information about new services and features.&lt;br&gt;
Mentorship from AWS subject matter experts on a variety of topics, including content creation, community building, and securing speaking engagements&lt;br&gt;
AWS Promotional Credits and other helpful resources to support content creation and community-based work&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-can-apply"&gt;
  &lt;/a&gt;
  Who can apply?
&lt;/h2&gt;

&lt;p&gt;I know it sounds like you need to be quite skilled before applying for the program. After seeing what other builders were contributing on Twitter and LinkedIn, I personally felt like I wasn't yet ready for it. Although you must be 18 years of age or older, you must keep in mind that there are no single specific criteria for being accepted. However, your application will be reviewed for evidence and accuracy of technical content, such as blog posts, open-source contributions, community organization efforts, online knowledge sharing, etc. Community organization efforts, such as hosting AWS User Groups, Meetups and other events, are also reviewed. In my case, I started my &lt;a href="https://fonnkwenti.hashnode.dev/"&gt;blog&lt;/a&gt; in December 2020 and organized the first &lt;a href="https://www.meetup.com/awsugdouala/"&gt;AWS user group in Douala&lt;/a&gt; in January before applying for the program.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-topics-and-how-many-are-there"&gt;
  &lt;/a&gt;
  What are Topics, and how many are there?
&lt;/h2&gt;

&lt;p&gt;You would be asked to choose a topic when applying for the program. Topics are simply categories that cover specific technology areas. I think it is a brilliant idea because otherwise, it would be challenging to navigate the breadth of AWS services. I chose the Networking and Content Delivery Topic, which is lead by &lt;a href="https://www.linkedin.com/in/michael-y-9907a9114/"&gt;Michael Yitayew&lt;/a&gt;. The other topics include Containers, Data (databases, analytics, and BI), Developer Tools, Front-End Web and Mobile, Game Tech, Graviton/Arm Development, Management and Governance + Migration, Machine Learning, Security &amp;amp; Identity, Serverless, and Storage. You can join any of the topics you may be interested in.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you are an AWS enthusiast, you create content, build software or organize events around AWS services, then you should definitely apply to join the program. You will find a lot of opportunities to connect to and learn from like-minded people. &lt;br&gt;
Now that you know what the program is and the benefits of being accepted, I hope you have had enough reason to apply and join me and the others. We would love to network with you.&lt;br&gt;
New applications will be open in Q3. Add your name to the &lt;a href="https://pages.awscloud.com/aws-community-builders-program-waitlist.html"&gt;waiting list&lt;/a&gt; and be notified when the next opportunity to apply opens later in 2021.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h2&gt;

&lt;p&gt;AWS Community Builder landing page &lt;br&gt;
👇🏽 &lt;br&gt;
&lt;a href="https://aws.amazon.com/developer/community/community-builders/"&gt;https://aws.amazon.com/developer/community/community-builders/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add your email to get notified when the next opportunity to apply opens up &lt;br&gt;
👇🏽 &lt;br&gt;
&lt;a href="https://pages.awscloud.com/aws-community-builders-program-waitlist.html"&gt;https://pages.awscloud.com/aws-community-builders-program-waitlist.html&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you want to have an idea on what you would fill in the online application, here is an apt post by my fellow community builder &lt;a href="https://dev.to/aditmodi"&gt;Adit Modi&lt;/a&gt;; &lt;br&gt;
👇🏽&lt;br&gt;
&lt;a href="https://dev.to/aws-builders/aws-community-builders-program-how-to-apply-get-accepted-tips-tricks-4cn2builders/aws-community-builders-program-how-to-apply-get-accepted-tips-tricks-4cn2"&gt;https://dev.to/aws-builders/aws-community-builders-program-how-to-apply-get-accepted-tips-tricks-4cn2builders/aws-community-builders-program-how-to-apply-get-accepted-tips-tricks-4cn2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For all other public announcements, follow 👉🏽 &lt;a href="https://www.linkedin.com/in/jasonrobertdunn/"&gt;Jason Dunn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>awscommunity</category>
    </item>
    <item>
      <title>Learn to code using FreeCodeCamp Especially If You Do Not Have 24/7 Internet Access</title>
      <author>Opeyemi Stephen</author>
      <pubDate>Thu, 03 Jun 2021 18:19:37 +0000</pubDate>
      <link>https://dev.to/resourcefulmind/learn-to-code-using-freecodecamp-especially-if-you-do-not-have-24-7-internet-access-101e</link>
      <guid>https://dev.to/resourcefulmind/learn-to-code-using-freecodecamp-especially-if-you-do-not-have-24-7-internet-access-101e</guid>
      <description>&lt;p&gt;My previous post was supposed to be a rant...a way of releasing my pent-up anger and frustration at the system and the very scarce resources it was swallowing, with little returns and immense presure all because I wanted to make a difference. The reception and similar experiences I read in the comments section is a source of motivation I will never take for granted. &lt;/p&gt;

&lt;p&gt;I am working with a few people to build solutions which would help the average developer and while that would take some level of planning, implementation and even donations, I thought of other non-monetary(if there's a word like that) ways of helping newbies.&lt;/p&gt;

&lt;p&gt;So...lots of research, a bout of serious typhoid fever, speaking with awesome developers including Jay, Trevor and Sebastian and my laptop getting spoilt by a power surge on the very day I wanted to POST this later, I was able to come up with this...now ask yourself...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOW WOULD YOU LIKE TO BE ABLE TO USE FREECODECAMP AND ITS AMAZING LEARNING RESOURCES AND CERTIFICATIONS WITHOUT THE INTERNET?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Awesome yeah? Check out FreeCodeCamp here &lt;a href="https://www.freecodecamp.org"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You're probably thinking this is hard and it might take a long time to set up, well it isn't. You should be done in an hour or less.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Preliminary Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;First you need to have a working computer/laptop.(Thankfully I was able to get this post compiled before mine got spoilt).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You would also need initial internet connectivity.(This is so you can download the necessary FreeCodeCamp files from GitHub).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Lastly, you would need a resilience like no other. This is because it is one thing to download and set this up and it's a whole different thing to actually PUT THESE RESOURCES TO USE AND LEARN. Do not procastinate, start learning!&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#first-step-setting-up-your-database-on-your-local-machine"&gt;
  &lt;/a&gt;
  First Step: Setting Up Your Database On Your Local Machine
&lt;/h2&gt;

&lt;p&gt;We will be making use of a document-oriented database called MongoDB. To learn more about MongoDB and why it is used, i have a helpful article here &lt;a href="https://www.dotnettricks.com/learn/mongodb/what-is-mongodb-and-why-to-use-it"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's go on and install MongoDB. You can find the necessary documentation to install on all supported Operating Systems here &lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.mongodb.com/manual/installation/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will be using Windows 10 so kindly follow the steps below if you use windows 10 as well.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Download&lt;/strong&gt; the latest version(mine was 4.4.6) at &lt;a href="https://www.mongodb.com/try/download/community"&gt;Link&lt;/a&gt; (make sure to select "On-Premises MongooDB locally" and on the right-hand side select "msi" as Package. Learn more about "msi" here &lt;a href="https://whatis.techtarget.com/fileformat/MSI-Installer-package-Microsoft-Windows"&gt;Link&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AZZpRj07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufoityrfmwchz1ukz02r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AZZpRj07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufoityrfmwchz1ukz02r.png" alt="The user interface of the MongoDB download page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;After the Download is complete, navigate to your file location and install.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When you get to the prompt that says &lt;strong&gt;"Custom SetUp"&lt;/strong&gt;, make sure all features are selected and the "Server" is set to &lt;strong&gt;"install on the local hard drive, C:".&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-ysdoVN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcnrk52scwcz9ico7ews.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-ysdoVN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcnrk52scwcz9ico7ews.png" alt="Custom Setup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Click &lt;em&gt;"Next"&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You should be in &lt;strong&gt;"Service Configuration"&lt;/strong&gt; now. &lt;em&gt;Unselect&lt;/em&gt; the checkbox which says &lt;strong&gt;"Install MongoDB as a service"&lt;/strong&gt;. We are doing this so MongoDB doesn't use up all your computer's memory and we will only run it before starting up FreeCodeCamp. You are not Google or Netflix my friend, winks. Click &lt;em&gt;"Next"&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--umzFDLmO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo3hcgrcb5wk8rjo7jxn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--umzFDLmO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo3hcgrcb5wk8rjo7jxn.png" alt="Service Configuration"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Keep Clicking &lt;em&gt;"Next"&lt;/em&gt; to complete the rest of the installation.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#second-step-setting-up-nodejs-and-npm"&gt;
  &lt;/a&gt;
  Second Step:  Setting Up Node.js and NPM
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Node.js&lt;/strong&gt; is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NPM&lt;/strong&gt; stands for Node Package Manager and is always installed with Node.js&lt;/p&gt;

&lt;p&gt;To learn more about NPM, you can check this resource &lt;a href="https://www.w3schools.com/whatis/whatis_npm.asp"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To learn more about node.js, you can check this resource &lt;a href="https://www.w3schools.com/nodejs/nodejs_intro.asp"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download and install node.js by clicking &lt;a href="https://nodejs.org/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Make sure to download the recommended msi version (14.17.0 LTS).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When this prompt below comes up, &lt;strong&gt;select the checkbox&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Sn_kkjj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxzmasfy0tiqklu3yiji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Sn_kkjj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxzmasfy0tiqklu3yiji.png" alt="Select the Check Box To Download Other Dependencies"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will enable your system to also install additional packages and dependencies when you need them and build stuff on FreeCodeCamp as well. Chocolately, Python and other packages will also be  installed with this step&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#third-step-cloning-freecodecamp-from-github"&gt;
  &lt;/a&gt;
  Third Step: Cloning FreeCodeCamp From GitHub
&lt;/h2&gt;

&lt;p&gt;First thing to do is to install Git using your computer's package manager.&lt;/p&gt;

&lt;p&gt;You can type &lt;code&gt;"choco install git"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you still do not know how, you can install normally here &lt;a href="https://git-scm.com/download/win"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open a new folder titled "FreeCodeCamp" on your computer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then Open your terminal or Windows Powershell and follow the following sub-steps;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Using &lt;code&gt;"cd"&lt;/code&gt; and &lt;code&gt;"ls"&lt;/code&gt; commands, navigate to the FreeCodeCamp folder(directory) which you opened in 1.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Clone FreeCodeCamp and its necessary accompanying files using git by typing the following command in your Powershell or Terminal&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;git clone --depth=1 https://github.com/freeCodeCamp/freeCodeCamp&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fourth-step-setup-and-install-freecodecamp-on-your-local-machine"&gt;
  &lt;/a&gt;
  Fourth Step: SetUp and Install FreeCodeCamp On Your Local Machine
&lt;/h2&gt;

&lt;p&gt;Use &lt;code&gt;"cd"&lt;/code&gt; to navigate into the FreeCodeCamp directory you just cloned and then type the command below to begin installation(might take a while but you've already come this far so be patient my friend)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;"npm ci"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DO NOT CLOSE THIS POWERSHELL/TERMINAL WINDOW YET&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fifth-step-starting-up-the-mongodb-database"&gt;
  &lt;/a&gt;
  Fifth Step: Starting Up The MongoDB Database
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;You will need to always start the service in 2 below before you can run FreeCodeCamp everytime so you can do well to note it down somewhere.&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Open up a new window in your terminal or Powershell while waiting for the installation in the Fourth Step above.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can start up the MongoDB database by following the steps below:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Windows Users: Navigate as seen below and then type in the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"C:\Program Files\MongoDB\Server\3.6\bin\mongod.exe" --dbpath=/path/to/freeCodeCamp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Linux Users: Navigate as seen below and then type in the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mongod --dbpath=/path/to/freeCodeCamp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;DO NOT CLOSE THIS POWERSHELL/TERMINAL WINDOW YET&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sixth-step-seeding-the-mongodb-database"&gt;
  &lt;/a&gt;
  Sixth Step: Seeding the MongoDB Database
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Remember the installation in Step 4? It should be completed by now. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go back to that Powershell or Terminal window and then type in the command below just once;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;"npm run seed"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note: In subsequent times, you do not have to run the above command again because your would have already been initialized.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7th-step-start-freecodecamp"&gt;
  &lt;/a&gt;
  7th Step: Start FreeCodeCamp
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Go back to the Powershell terminal in the Sixth Step.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run this command to start FreeCodeCamp&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;"npm run develop"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It might take an awful lot of time but as long as you have a stable internet connection, trust the process and let the building sun its full course. it took about 8 minutes on my end.&lt;/p&gt;

&lt;p&gt;How do i know it's done? You should see this line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;success Building development bundle - 497.330s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-8"&gt;
  &lt;/a&gt;
  Step 8:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Open up your preferred browser and type in [Link}(&lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click &lt;strong&gt;"Get Started Now, It's Free!"&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You should see &lt;strong&gt;" Welcome back, development user".&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Congratulations, you can access all the courses now without the internet. Your progress will be saved in the MongoDB commands run in Step 5.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt; What I want to start FreeCodeCamp later, do i need to go through all the steps again? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; Of course not, next time you can do so without the internet by following the instructions on Step 5 and 8 in two different terminals/powershells.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;May The Stars Align For You Fellow Dev....Major shoutouts to every resource I previously read and a few blogs that already did something like this. I hope this helps us all.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>career</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Appwrite's Isomorphic Web SDK</title>
      <author>Torsten Dittmann</author>
      <pubDate>Thu, 03 Jun 2021 18:09:29 +0000</pubDate>
      <link>https://dev.to/appwrite/appwrite-s-isomorphic-web-sdk-3a55</link>
      <guid>https://dev.to/appwrite/appwrite-s-isomorphic-web-sdk-3a55</guid>
      <description>&lt;p&gt;We at Appwrite recently announced our new web SDK and would love to share the improvements we introduced. This article is a quick summary of what has changed and things you need to keep in mind while using the latest version of our SDK.&lt;/p&gt;

&lt;p&gt;For the developers not much has changed, but internally some things have been rewritten that enable completely new use cases.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#breaking-changes"&gt;
  &lt;/a&gt;
  Breaking Changes
&lt;/h1&gt;

&lt;p&gt;Let's start with the first and only breaking change: the way our Web SDK is imported. We have switched from default to named exports. &lt;/p&gt;

&lt;p&gt;This allows for innovative auto completion and takes away the user's decision making when importing. Every decision you need to make slows you down, which is why things like coding conventions lead to faster development.&lt;/p&gt;

&lt;p&gt;It also unifies the importing process, which could be different depending on the bundler in our previous approach.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// is now&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#isomorphic"&gt;
  &lt;/a&gt;
  Isomorphic
&lt;/h1&gt;

&lt;p&gt;Previously, our SDK was initialized in the &lt;code&gt;window&lt;/code&gt; object of the browser. This meant that the SDK only worked in the browser and did not cooperate with technologies like &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;, &lt;a href="https://nuxtjs.org/"&gt;Nuxt.js&lt;/a&gt; or &lt;a href="https://kit.svelte.dev/"&gt;Svelte Kit&lt;/a&gt;, which also interact server-side in &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That's why we refactored parts of our SDK so that it acts isomorphically and according to the environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Node.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// ESM - Modern Javascript&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// IIFE - Browser&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#jwt"&gt;
  &lt;/a&gt;
  JWT
&lt;/h1&gt;

&lt;p&gt;Talking about server-side rendering, when doing SDK calls in your users scope from the server, it is not possible right away, since the HTTP-only cookie used for authentication is saved in the user's browser. That's why the Web SDK now allows to use JWT for authentication.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setJWT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eyJhbGciOiJIUzI1NiI.....&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Prints out the user attached to the JWT&lt;/span&gt;
&lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#typescript"&gt;
  &lt;/a&gt;
  Typescript
&lt;/h1&gt;

&lt;p&gt;Also, the first preparations for the upcoming response models have been integrated, which is going to provide full Typescript coverage across every service.&lt;/p&gt;

&lt;p&gt;For this release, the &lt;code&gt;Promise&amp;lt;unknown&amp;gt;&lt;/code&gt; generic has been added to all methods that will receive a response from the server. This way it is easier for developers right now to implement their own definitions when working with Appwrite and Typescript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  Learn More
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;You can find the new version of the NPM package &lt;a href="https://www.npmjs.com/package/appwrite"&gt;here&lt;/a&gt;.
&lt;/li&gt;
&lt;li&gt;Checkout &lt;a href="https://github.com/appwrite/appwrite"&gt;Appwrite's&lt;/a&gt; Github Repo.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appwrite.io/discord"&gt;Our Discord Server&lt;/a&gt; is the place to be if you ever get stuck.&lt;/li&gt;
&lt;li&gt;You can find all our Documentation &lt;a href="https://appwrite.io/docs"&gt;here&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>flutter</category>
      <category>showdev</category>
    </item>
    <item>
      <title>JavaScript-30-Day-3</title>
      <author>KUMAR HARSH</author>
      <pubDate>Thu, 03 Jun 2021 18:06:09 +0000</pubDate>
      <link>https://dev.to/cenacr007_harsh/javascript-30-day-3-29o6</link>
      <guid>https://dev.to/cenacr007_harsh/javascript-30-day-3-29o6</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WgwsSgv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ehi9jt15teige1dpica.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WgwsSgv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ehi9jt15teige1dpica.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cenacrharsh.github.io/JS-30-DAY-3/"&gt;click for project demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In todays lesson we made a kind of Image editor to control padding, color and blur. The lesson mainly focusses on the use of CSS variables and how we can change them using JavaScript.&lt;/p&gt;

&lt;h2&gt;Lessons Learned&lt;/h2&gt;

&lt;p&gt;-I learned about a new input type, 'range', which is basically a slider that has a default “value” a min value and max value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
        &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;spacing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;range&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;spacing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;10&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;200&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;10&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;sizing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blur&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Blur&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
        &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blur&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;range&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blur&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;25&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;10&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;sizing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Notice that the min and max values have to be in quotes.&lt;/p&gt;

&lt;p&gt;-I learned about another input type, called color.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;base&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Base&lt;/span&gt; &lt;span class="nx"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;base&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;base&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#ffc600&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;So what's so good about CSS variables you may ask. Specially when we've had variables in SAAS forever. The key difference and advantage of CSS variables is that the can be updated using JS meaning that when you update a variable in CSS, everywhere on the page that that variable is referenced will update itself unlike in SAAS where we define the variables at compile time, then they get compiled and we can't change them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The way CSS variables work is that you declare them on some sort of element, in our case we are going to declare it on root, which is sort of the highest level you can get (very similar to declaring it on the HTML element) and this is where we will set the default values for our variables.&lt;br&gt;
The syntax is a bit odd we have to use -- as a prefix and while using them use the prefix var and then write the variable name inside parenthesis prefixed by the --.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;ffc600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nl"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hl&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;h3&gt;Changing the CSS variables using JS &lt;/h3&gt;

&lt;p&gt;-first thing we have to do is select all 3 input types we have used so that when they change, we can update the CSS variables which in turn will update all elements where the variables are used.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.controls input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will return a NodeList of all the inputs that we have used.&lt;/p&gt;

&lt;p&gt;-Now we'll loop over the entire list using forEach and listen for a change in input.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;change&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleUpdate&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;-The change event listener will not be enough as we want to trigger change not only when we let go but also when we slide (move the mouse). So we'll add a mouseover event as well.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleUpdate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now inside the handleUpdate function that we are calling everytime and event is triggered, first thing we need to know is what is the suffix of the value we are working on. Why? because spacing/blur they are going to return values like 10/20 but we actually need is 10px/20px otherwise the values won't be changed. So for that we use data attribute (&lt;code&gt;data-sizing="px"&lt;/code&gt;) to store the suffix in spacing and blur input but not in base as it does not have a suffix, it's just a hex code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-now we use dataset which is an already existing object (we don't have to select it or use attribute selectors from it). dataset is an object consisting of all the data attributes from that specific element.&lt;br&gt;
&lt;code&gt;this.dataset&lt;/code&gt;returns all the “data” prefixed properties and their values.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we use dataset to get our suffix and as a fallback value we use empty string to avoid getting undefined in case of base where there is no suffix.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;suffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sizing&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;-Now to update the variables we first have to select the variables and for that we select our entire document which is our root here and we're going to set a property of name="base/blur/spacing" beforehand in our attributes and we named our variables exactly that. &lt;br&gt;
&lt;code&gt;name="blur"&lt;/code&gt; &lt;code&gt;name="base"&lt;/code&gt; &lt;code&gt;name="spacing"&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;finally we change the values using js
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="s2"&gt;`--&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;suffix&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;What is documentElement?&lt;/p&gt;

&lt;p&gt;From MDN, we find out:&lt;br&gt;
document.documentElement returns the root element of the document for example, the HTML element for HTMLdocuments.&lt;/p&gt;

&lt;p&gt;style.setProperty() takes in the name of the property, for example, the “name” attribute assigned to an input, in our case spacing|blur|base, and takes in the value for that element, as in, the value assigned to the “value” attribute in that element. The value also must have a unit-suffix if it applies (like px, s, pt, etc.) which we already stored in suffix variable.&lt;/p&gt;

&lt;p&gt;GitHub Repo:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/cenacrharsh"&gt;
        cenacrharsh
      &lt;/a&gt; / &lt;a href="https://github.com/cenacrharsh/JS-30-DAY-3"&gt;
        JS-30-DAY-3
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://twitter.com/cenacr007_harsh"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/kumarharsh22/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank You!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
      <category>github</category>
    </item>
    <item>
      <title>How to easily test REST endpoints with Visual Studio Code</title>
      <author>Michael Crump</author>
      <pubDate>Thu, 03 Jun 2021 17:52:29 +0000</pubDate>
      <link>https://dev.to/mbcrump/how-to-easily-test-rest-endpoints-with-visual-studio-code-1bme</link>
      <guid>https://dev.to/mbcrump/how-to-easily-test-rest-endpoints-with-visual-studio-code-1bme</guid>
      <description>&lt;p&gt;Hello everyone, &lt;/p&gt;

&lt;p&gt;I've been asked a few times why I don't use PostMan anymore and the answer is because I can just do it all in Visual Studio Code with one single plug-in. Checkout the video below and hopefully you'll find it helpful! &lt;/p&gt;

&lt;p&gt;Video (13 mins)&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LmfdPsq4IVs"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;Conclusion&lt;/p&gt;

&lt;p&gt;Feel free to checkout my &lt;a href="https://twitch.tv/mbcrump"&gt;Twitch streams&lt;/a&gt; as we learn about security and app development or you can watch the condensed version of all of my streams by subscribing to my &lt;a href="https://youtube.com/mbcrump"&gt;YouTube&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Stay connected with me on social platforms for daily software development news.&lt;/p&gt;

&lt;p&gt;-&lt;a href="https://twitter.com/intent/follow?screen_name=mbcrump"&gt;Twitter&lt;/a&gt; | &lt;a href="https://twitch.tv/mbcrump"&gt;Twitch&lt;/a&gt; | &lt;a href="https://instagram.com/mbcrump"&gt;Instagram&lt;/a&gt; | &lt;a href="https://youtube.com/mbcrump"&gt;YouTube&lt;/a&gt; | &lt;a href="https://github.com/mbcrump"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.michaelcrump.net"&gt;Website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>productivity</category>
      <category>code</category>
      <category>beginners</category>
    </item>
    <item>
      <title>A Svelte Open Source Project to contribute to</title>
      <author>Abdallah Mohammed</author>
      <pubDate>Thu, 03 Jun 2021 17:50:35 +0000</pubDate>
      <link>https://dev.to/abdallahmoh/a-svelte-open-source-project-to-contribute-to-3382</link>
      <guid>https://dev.to/abdallahmoh/a-svelte-open-source-project-to-contribute-to-3382</guid>
      <description>&lt;h2&gt;
  &lt;a href="#rhyme-player"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/RhymePlayer/Rhyme-Player"&gt;Rhyme Player&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#mutlitheme-support"&gt;
  &lt;/a&gt;
  Mutli-Theme Support
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EObnxYGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qk7vtbilcj05pcbfwob4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EObnxYGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qk7vtbilcj05pcbfwob4.png" alt="My Music _ Light (1)"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Me6hpot9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rv3lh18a6us1bsddl59y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Me6hpot9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rv3lh18a6us1bsddl59y.png" alt="My Music _ Dark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#explore-music-online"&gt;
  &lt;/a&gt;
  Explore Music Online
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ezc5ZndP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gzw24vhqgyvkjvqkr2nx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ezc5ZndP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gzw24vhqgyvkjvqkr2nx.png" alt="Explore _ Light"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>opensource</category>
      <category>github</category>
      <category>musicplayer</category>
    </item>
    <item>
      <title>My Journey Facing Fears and Starting as an Open-Source Contributor</title>
      <author>Josseline Perdomo</author>
      <pubDate>Thu, 03 Jun 2021 17:46:40 +0000</pubDate>
      <link>https://dev.to/josselineperdomo/my-journey-facing-fears-and-starting-as-an-open-source-contributor-39jl</link>
      <guid>https://dev.to/josselineperdomo/my-journey-facing-fears-and-starting-as-an-open-source-contributor-39jl</guid>
      <description>&lt;p&gt;&lt;em&gt;This post is part of my &lt;strong&gt;&lt;a href="https://www.outreachy.org/"&gt;Outreachy Internship&lt;/a&gt;&lt;/strong&gt; blogs.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hello DEV Community! Nice to be here 👋🏻, for so long I really want to start blogging but I postpone doing it later on. Most of the time, I was saying to myself so many reasons to don't do it. In the end, I found out that all of these are excuses that I told myself to avoid facing that writing could be challenging! &lt;/p&gt;

&lt;p&gt;Recently, I got selected in Outreachy as an &lt;a href="https://communityblog.fedoraproject.org/outreachy-interns-introduction-2021-summer/"&gt;Intern at Fedora&lt;/a&gt;, and one of the tasks as an intern is blogging about my experiences. It's the perfect occasion to finally do my first blog entry ever!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/ftMKOEsgL2ALMks8by/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/ftMKOEsgL2ALMks8by/giphy.gif" alt="Joey and Chandler meme meme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This first entry is not technical at all. Before telling you more details about Outreachy, or my project in Fedora, I'd like to talk about me, sharing some of my stories as a woman in tech looking for her own path. So, let's start! 😊&lt;/p&gt;

&lt;p&gt;As you may have guessed, my name is Josseline Perdomo, some of my friends call me Joss. I'm a Software Developer from Venezuela 🇻🇪 In my spare time I enjoy listening to music, watching movies, especially dramas, and also series (just like most of you 😉). Also, during the quarantine, I've found an interest in gardening, and painting mandalas, both activities could be very relaxing and you can do them indoors. &lt;/p&gt;

&lt;p&gt;Although most of my working experience is related to web development, I've been curious about other areas in Computer Science. A fun fact: &lt;strong&gt;curiosity&lt;/strong&gt; about how animation by computer actually works was one of the reasons I felt attracted to study Computer Science. My younger version dreamed of being part of a big animation studio, like Pixar. When I look back, not only in my career but also in life, curiosity has been one of the reasons I push myself and try new things.&lt;/p&gt;

&lt;p&gt;Besides curiosity, &lt;strong&gt;learning&lt;/strong&gt; has been another of my core values. Learning is so powerful that gives us the chance to get new skills, like gardening 🌱 or programming 👩‍💻. It's so powerful that it can be wonderful or painful, very useful when we pay enough attention. The most recent of my learning has been a bit deeper than a new technical skill, it's about how I feel about myself. Learning to forgive some of my past decisions and paying more attention to my feelings has changed my life. &lt;/p&gt;

&lt;p&gt;Like so many of you, the pandemic has been a bit complicated, messy and also has changed my life. Last year, I'd experienced moments where I asked myself if I felt comfortable with my experiences studying and working in tech. I was looking for how I feel about my job or my career. After a few months of working on myself, I finally have gotten a better approach to my career and most importantly, I've improved my self-concept. &lt;/p&gt;

&lt;p&gt;Now, I'm able to see that &lt;strong&gt;growth&lt;/strong&gt; is one of the things that I'm looking for, I've almost my whole life pursuing it. And, of course, I'm going to tell you why I think this.&lt;/p&gt;

&lt;p&gt;For some people, growth involves going through a nonlinear path. It's kind of like going through climbing a mountain and then walking on a plateau. I know, you may think "getting stuck on the plateau doesn't mean growing at all", but in fact, it could be, it's a thing of perspective. When you start to feel bored or stuck on the plateau, instead of doing the same thing, you need to figure out what you should do in a different way to stop feeling stuck. It's the opportunity to take action and change your path.&lt;/p&gt;

&lt;p&gt;Some of our fears have been a blocker to keep growing, our instinct is to put a shield to avoid thinking about it and don't feel scared, that'll only make matters worse. We usually make a task bigger than it actually is, and our anti-fears shield is creative enough to make excuses, negativity, or procrastination appear. The thing is, we follow the "easy path" avoiding our fears, we choose to believe in our excuses, just to feel better at the moment, we sometimes give up. &lt;/p&gt;

&lt;p&gt;So many times I gave up on blogging about tech or contributing to open-source communities because "I wasn't experienced enough" or "My English is not good enough"... I believed in this voice so many times and for so long, unfortunately not only into these, and sometimes it's been a blocker to keep pursuing my goals. &lt;/p&gt;

&lt;p&gt;If you are currently asking yourself this question, my advice is to do the first step without thinking too much about it, and then do the same with the second step and so on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/2tMYOWRjFHveuOB6jg/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/2tMYOWRjFHveuOB6jg/giphy.gif" alt="Progress meme"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In my case, to overcome my fear of contributing to open-source communities my first step was to participate in the last Hacktoberfest. After this experience, a few months later, I sent an application to Outreachy, it was the second step, I still cannot believe my proposal got selected! &lt;/p&gt;

&lt;p&gt;Making this entry is also a new step to overcome my fears, specifically the blogging one. When I think about how far I go instead of listening to my excuses, I encourage myself to take action without thinking too much. Getting selected in Outreachy has helped in my self-confidence, it is a motivation to work harder to improve my skills. After 2 months of the process, I found Fedora a community open to newcomers, and a welcoming place. &lt;/p&gt;

&lt;p&gt;It's been a week since I started my internship at Fedora and after writing this entry I feel better, with confidence, and very proud to finally overcome some of my anti-fear shields 😊 It's the best way to keep growing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/P51XE27jtQLE4/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/P51XE27jtQLE4/giphy.gif" alt="Yes girl, you can do it meme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you would like to share any thoughts about tech, self-confidence, movies or even gardening tips feel free to reach out to me on &lt;a href="https://twitter.com/jossperdomo_"&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>motivation</category>
      <category>career</category>
      <category>outreachy</category>
    </item>
    <item>
      <title>Web Performance Case Study: webpack splitChunks</title>
      <author>Paul Golubkov</author>
      <pubDate>Thu, 03 Jun 2021 17:43:04 +0000</pubDate>
      <link>https://dev.to/paulcodes/web-performance-case-study-webpack-splitchunks-3ek3</link>
      <guid>https://dev.to/paulcodes/web-performance-case-study-webpack-splitchunks-3ek3</guid>
      <description>&lt;p&gt;Hello there! I've just finished optimizing my last commercial project, and now, I want to share what I've learned. So, I've decided to start a series of articles.&lt;/p&gt;

&lt;p&gt;In this article, I want to share with you knowledge about webpack's optimization.splitChunks functionality. That functionality is a part of the webpack since version 4 before It was an external plugin called SplitChunksPlugin. It provides a way to split your bundle into several parts.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#when-can-it-be-useful"&gt;
  &lt;/a&gt;
  When can it be useful?
&lt;/h1&gt;

&lt;p&gt;It can help you at least in two kinds of cases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you have a single entry, you can separate vendors for a better cache strategy&lt;/li&gt;
&lt;li&gt;When you have many entries, you can separate common parts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's take a look at examples of both cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#single-entry"&gt;
  &lt;/a&gt;
  Single entry
&lt;/h2&gt;

&lt;p&gt;Let's imagine that we have a bundle that contains react app. It includes JavaScript code from an &lt;code&gt;app&lt;/code&gt; directory and several npm packages from the &lt;code&gt;node_modules&lt;/code&gt; directory:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IuMBXCxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622567350860/K4TpTZLWs.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IuMBXCxB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622567350860/K4TpTZLWs.jpeg" alt="Initial bundle for single entry"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our bundle's name contains a &lt;code&gt;contenthash&lt;/code&gt; for cache validation in the browser. When we change some code in our app, we create a new bundle that includes a different &lt;code&gt;contenthash&lt;/code&gt;, and users will download it again. Frequently we'll change code inside our &lt;code&gt;app&lt;/code&gt; directory and not change our npm dependencies, but our users will anew download the whole bundle. Here is where splitChunks can help us.&lt;/p&gt;

&lt;p&gt;We can separate our bundle into two parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;code inside &lt;code&gt;app&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;code inside &lt;code&gt;node_modules&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this way, when we'll change a code inside the &lt;code&gt;app&lt;/code&gt; directory, our users will download only that part.&lt;/p&gt;

&lt;p&gt;Let's do it!&lt;/p&gt;

&lt;p&gt;To do that we need to add that code to our webpack config:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="c1"&gt;// here is your entry&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;optimization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;splitChunks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;cacheGroups&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;vendors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/node_modules/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;chunks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;initial&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vendors.[contenthash].js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;priority&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;maxInitialRequests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// create only one vendor file&lt;/span&gt;
          &lt;span class="na"&gt;minChunks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our bundles will looks like that:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RH8FA0ZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622567369138/vzbQGgh7o.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RH8FA0ZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622567369138/vzbQGgh7o.jpeg" alt="Final bundle for single entry"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How you can see we don't reduce bundle size, but we save some kb of traffic for our users in case when we change only one part of code.&lt;/p&gt;

&lt;p&gt;You can get more control of what will be added to bundle by passing function instead of regexp as test:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="c1"&gt;// here is your entry&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;optimization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;splitChunks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;cacheGroups&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;react&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// `module.resource` contains the absolute path of the file on disk.&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
              &lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
              &lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node_modules/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;chunks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;initial&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react.[contenthash].js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;priority&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;maxInitialRequests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;minChunks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case will be created bundle that will contain only code of react package.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#many-entries"&gt;
  &lt;/a&gt;
  Many entries
&lt;/h2&gt;

&lt;p&gt;Assume we have three entries like that:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKnHVx-P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622569976386/wFTEXdkW9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKnHVx-P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622569976386/wFTEXdkW9.jpeg" alt="Initial bundles for many entries"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can move common code to separate bundle:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  optimization: {
    splitChunks: {
      cacheGroups: {
        vendors: {
          test: /node_modules/,
          chunks: 'initial',
          filename: 'vendors.[contenthash].js',
          priority: 1,
          maxInitialRequests: 2,
          minChunks: 3, // count of entries
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our bundles may looks like that:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TNHL2rVg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622571307268/9QU4TT4tg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TNHL2rVg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622571307268/9QU4TT4tg.jpeg" alt="Final bundles of many entries"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We didn't reduced size of javascript needed for page, but we reduced total size of bundles and now we can cache common bundle across pages, and it's cool!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it
&lt;/h1&gt;

&lt;p&gt;Now you know how you can use the splitChunks to improve UX in your app, read &lt;a href="https://webpack.js.org/plugins/split-chunks-plugin/"&gt;documentation&lt;/a&gt; for more detais and try it out!&lt;/p&gt;

&lt;p&gt;Thank you for reading! This is the first article of the series about web performance, click on the &lt;code&gt;Follow&lt;/code&gt; button to see future articles and motivate me to write them.&lt;/p&gt;

&lt;p&gt;Follow me on Twitter: &lt;a href="https://twitter.com/paulcodes_tech"&gt;https://twitter.com/paulcodes_tech&lt;/a&gt;, there I'll share with you some tips and tools for Frontend developers.&lt;/p&gt;

&lt;p&gt;Answer me in comments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Did this article was helpful?&lt;/li&gt;
&lt;li&gt;Do you like the pictures I provide?&lt;/li&gt;
&lt;li&gt;Will you try it out?&lt;/li&gt;
&lt;li&gt;Do you want me to provide a repository for this and future articles?&lt;/li&gt;
&lt;li&gt;Any other feedback :)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>performance</category>
      <category>webpack</category>
      <category>webperf</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Creating 2D blocks layout with custom hook useDraggable</title>
      <author>Mukul Jain</author>
      <pubDate>Thu, 03 Jun 2021 17:18:21 +0000</pubDate>
      <link>https://dev.to/mukuljainx/how-to-create-a-2d-draggable-grid-with-react-spring-part-2-6dh</link>
      <guid>https://dev.to/mukuljainx/how-to-create-a-2d-draggable-grid-with-react-spring-part-2-6dh</guid>
      <description>&lt;p&gt;We already have a &lt;a href="https://gq1co.csb.app/"&gt;draggable block&lt;/a&gt; with dragging logic coupled with the UI component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#custom-hook-usedraggable"&gt;
  &lt;/a&gt;
  Custom hook: useDraggable
&lt;/h2&gt;

&lt;p&gt;Let's take it out the dragging part and create a custom hook that can be used with anything anywhere!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useDraggable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCoordinate&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;block&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;moving&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleMouseMove&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moving&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;coordinates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientY&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

      &lt;span class="nx"&gt;setCoordinate&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;moving&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;block&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moving&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleMouseUp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setCoordinate&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;moving&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}));&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleMouseDown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;startingCoordinates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientY&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;setCoordinate&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;startingCoordinates&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;moving&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}));&lt;/span&gt;
    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stopPropagation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;handleMouseDown&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;handleMouseMove&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;handleMouseUp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;useDraggable&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#usage-with-block"&gt;
  &lt;/a&gt;
  Usage with block
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BlockWrapper&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledText&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;1&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledText&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;BlockWrapper&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;handleMouseDown&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleMouseMove&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleMouseUp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;coordinate&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nx"&gt;useDraggable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
      &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px solid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;onMouseMove&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleMouseMove&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;onMouseUp&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleMouseUp&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Block&lt;/span&gt;
        &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`translate3d(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, 0px)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;onMouseDown&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleMouseDown&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's add more blocks to our layout for adding more block we can use an array and store position of each of block as object in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;blocks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setBlocks&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="c1"&gt;// creates an array of 10 elements each equals to 1&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;}))&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BlockContainer&lt;/span&gt;
  &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px solid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
  &lt;span class="nx"&gt;onMouseMove&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleMouseMove&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;onMouseUp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleMouseUp&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;blocks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Block&lt;/span&gt;
      &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`translate3d(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, 0px)`&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;onMouseDown&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleMouseDown&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;))}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="na"&gt;BlockContainer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Somethings wrong and I can feel it!&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;Even if you will move one block they all will move. &lt;a href="https://f2tbv.csb.app/"&gt;Check here&lt;/a&gt;, &lt;strong&gt;but why?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Moving one block is moving every block in same director and with same difference, we have handled it by using the &lt;code&gt;position: relative&lt;/code&gt; for now! Another thing here to notice is I have changed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;

&lt;span class="c1"&gt;// to&lt;/span&gt;

&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
  &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`translate3d(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, 0px)`&lt;/span&gt;
&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;reason being this one is more efficient considering we will be changing these values again-again, when changing &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; the browser has to run through the layout phase again because &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; may have changed how things were laid out, &lt;code&gt;transform&lt;/code&gt; on the other hand will not affect layout.&lt;/p&gt;

&lt;p&gt;Layout is not same on all screen sizes, as I have not limited the width height of parent div, blocks spreads according to the space as we are using &lt;code&gt;flex-wrap&lt;/code&gt; to wrap them and it has it's downsides. If I will limit the width and height dragging will not work properly for the same reason it's was not working for the single block, if moved fast enough pointer will leave the block and might leave our parent div to where the handler are attached, we will change the layout later in this part without limiting the height and width of parent. We will limit that in part 3.&lt;/p&gt;

&lt;p&gt;Let's visualize with limited parent height and width with our current handling.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dia-a"&gt;
  &lt;/a&gt;
  Dia A
&lt;/h3&gt;

&lt;p&gt;Black area is our parent container and green ones are the blocks. It doesn't matter how fast I drag the pointer inside black area, block will always catch up, there might be bigger jumps in case of fast movements, but it always catch up.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sXdm5jVE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9627xpjo8z1u0yklwoas.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sXdm5jVE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9627xpjo8z1u0yklwoas.png" alt="Dia A"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dia-b"&gt;
  &lt;/a&gt;
  Dia B
&lt;/h3&gt;

&lt;p&gt;Once pointer left the parent, block will move until the pointer is above it as &lt;code&gt;handleMouseMove&lt;/code&gt; is still triggered because event current target is block and the propagates to the parent where we are catching the &lt;code&gt;mouseMove&lt;/code&gt; using &lt;code&gt;onMouseMove&lt;/code&gt;, it will keep propagating if there is no &lt;code&gt;event.stopPropagation()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZgL2YM5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pw7hw5xuab7cv4nlftmf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZgL2YM5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pw7hw5xuab7cv4nlftmf.png" alt="Dia B"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dia-c"&gt;
  &lt;/a&gt;
  Dia C
&lt;/h3&gt;

&lt;p&gt;Once the pointer left the block &lt;code&gt;handleMouseMove&lt;/code&gt; will not trigger anymore for the block, note that the &lt;code&gt;mouseUp&lt;/code&gt; is still not triggered inside block or parent, so we still have &lt;code&gt;moving: true&lt;/code&gt; in our state and once the pointer reaches inside the parent, there will be wired movements of block, we can handle this while applying checks on &lt;code&gt;mouseMove&lt;/code&gt; such that our block never leaves the parent, whenever the pointer leaves the parent, trigger &lt;code&gt;handleMouseUp&lt;/code&gt; manually, there are still some catches that can be resolved using some calculation that we will cover later in part 3.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hx4cdKyx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eh07o9g7edgzlj1m5rs9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hx4cdKyx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eh07o9g7edgzlj1m5rs9.png" alt="Dia C"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-particular-block-move"&gt;
  &lt;/a&gt;
  Making particular block move
&lt;/h2&gt;

&lt;p&gt;Till now we can drag every block together in any direction as we are maintaining only one state with &lt;code&gt;useDraggable&lt;/code&gt;, instead of maintaining one state we will maintain an array and each element inside an array will be coordinates of a block at that index!&lt;/p&gt;

&lt;p&gt;Change the state to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Grid.jsx&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;handleMouseDown&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleMouseMove&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handleMouseUp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blocks&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="nx"&gt;useDraggable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BlockContainer&lt;/span&gt; &lt;span class="na"&gt;onMouseMove&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleMouseMove&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;onMouseUp&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleMouseUp&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;blocks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Block&lt;/span&gt;
        &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`translate3d(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, 0px)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;// we will use this to identify the block, to avoid n number of inline function declaration&lt;/span&gt;
        &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;onMouseDown&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleMouseDown&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;BlockContainer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// useDraggable.js state&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;coordinate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCoordinate&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;blocks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;totalBlocks&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;})),&lt;/span&gt;
  &lt;span class="na"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;// removed `moving` and added `movingBlockIndex` key to track the moving block&lt;/span&gt;
  &lt;span class="na"&gt;movingBlockIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleMouseDown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;data-index&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;startingCoordinates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientY&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="nx"&gt;setCoordinate&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;startingCoordinates&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;// we set this to null on mouseUp&lt;/span&gt;
    &lt;span class="na"&gt;movingBlockIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}));&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stopPropagation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#fixing-the-layout"&gt;
  &lt;/a&gt;
  Fixing the layout
&lt;/h2&gt;

&lt;p&gt;As we discussed earlier they layout is not great, though we can definitely limit the heigh and width, but we will do it using &lt;code&gt;position: absolute&lt;/code&gt;, but isn't that will require more work ? Not actually, Not for the long run!&lt;/p&gt;

&lt;p&gt;A grid gives us defined structure to work on as we will be working with coordinates, if one block moves we can shift other blocks to it's position and create space for this one at it's current position like you saw in the &lt;a href="https://gbdgu.csb.app/"&gt;demo&lt;/a&gt; with &lt;code&gt;position: relative&lt;/code&gt; these calculation will be hard as then we will always have to calculate with respect to the block's initial position to move it which will be a nightmare.&lt;/p&gt;

&lt;p&gt;Though we will fixing only the layout not blocks re-arrangement in this part but consider these two scenario with position &lt;code&gt;absolute&lt;/code&gt; &amp;amp; &lt;code&gt;relative&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--llZKEwFc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q419fb8lzrbonfimqoh1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--llZKEwFc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q419fb8lzrbonfimqoh1.png" alt="With position relative"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qmlh85ZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fk9u0apl4bmo40a3n005.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qmlh85ZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fk9u0apl4bmo40a3n005.png" alt="With position absolute"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;position: absolute&lt;/code&gt; everything is natural and easy!&lt;/p&gt;

&lt;p&gt;Then why were using &lt;code&gt;position: relative&lt;/code&gt;? That's best for single block moment or even the grid where we don't have to re-arrange everything, if any block overlaps anyone we can simple move it with some few pixels, like &lt;a href="https://agni-web.netlify.app/"&gt;here&lt;/a&gt;. So it depends on the case.&lt;/p&gt;

&lt;p&gt;It's pretty simple to define a grid, everything has to be place &lt;code&gt;120px&lt;/code&gt; apart whether horizontal or vertical. On X axis for each block we will multiply by 120 and same will happen for Y axis. Let's say we want only 3 blocks in one row, if we had 9 block the arrangement will look like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;0 | 1 | 2
__________
3 | 4 | 5
__________
6 | 7 | 8

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;if you notice there is a pattern, column of any index can be determined using &lt;code&gt;index%3&lt;/code&gt; and row can be determined using floor of &lt;code&gt;index/3&lt;/code&gt;. So coordinate will be&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rowindex&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But there will no gap between the blocks and it will probably look bad. Let's add 8px of gap between each block, to do so X coordinate of 1st block will be same as before, we should add 8px to the 2nd block, 16px to the 3rd and so on. Why we are increasing the gap with each block as 8px as been added to 2nd block that will be pushed toward right, now the 3rd one is overlapping the 2nd by 8px so to cover that 8px and to add gap of 8px we have to add 16px, it stays same for upcoming blocks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UplYFwD8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2152gz8lbt2asjws602d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UplYFwD8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2152gz8lbt2asjws602d.png" alt="Overlapping blocks"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rowindex&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rowindex&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Enough talking, the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;totalBlocks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blockInRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blocks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;totalBlocks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nx"&gt;blockInRow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;blockInRow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;col&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;col&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You check it working code &lt;a href="https://y1tdz.csb.app/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all for today, we have a grid and draggable blocks, in next part will restrict the block movement inside the grid only and will re-arrange them if a block hovers on another using &lt;code&gt;react-sprint&lt;/code&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
