<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Opensource Introduction to SQL eBook üí°</title>
      <author>Bobby Iliev</author>
      <pubDate>Tue, 18 May 2021 13:32:32 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/opensource-introduction-to-sql-ebook-4kf5</link>
      <guid>https://dev.to/bobbyiliev/opensource-introduction-to-sql-ebook-4kf5</guid>
      <description>&lt;p&gt;This is an open-source introduction to SQL guide that will help you learn the basics of SQL and start using relational databases for your SysOps, DevOps, and Dev projects. No matter if you are a DevOps/SysOps engineer, developer, or just a Linux enthusiast, you will most likely have to use SQL at some point in your career.&lt;/p&gt;

&lt;p&gt;The guide is suitable for anyone working as a developer, system administrator, or a DevOps engineer and wants to learn the basics of SQL.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#download"&gt;
  &lt;/a&gt;
  üöÄ Download
&lt;/h2&gt;

&lt;p&gt;To download a copy of the ebook use one of the following links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-sql/raw/main/ebook/en/export/introduction-to-sql-dark.pdf"&gt;Dark mode&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-sql/raw/main/ebook/en/export/introduction-to-sql-light.pdf"&gt;Light mode&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#chapters"&gt;
  &lt;/a&gt;
  üìò Chapters
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;About the book&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Databases&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MySQL&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tables&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Basic Syntax&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SELECT&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WHERE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ORDER and GROUP BY&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;INSERT&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DELETE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JOIN&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The MySQL dump command&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sponsors"&gt;
  &lt;/a&gt;
  üåü Sponsors
&lt;/h2&gt;

&lt;p&gt;This book is made possible thanks to these fantastic companies!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#digitalocean"&gt;
  &lt;/a&gt;
  üíô DigitalOcean
&lt;/h3&gt;

&lt;p&gt;DigitalOcean is a cloud services platform delivering the simplicity developers love and businesses trust to run production applications at scale.&lt;/p&gt;

&lt;p&gt;It provides highly available, secure, and scalable compute, storage, and networking solutions that help developers build great software faster.&lt;/p&gt;

&lt;p&gt;Founded in 2012 with offices in New York and Cambridge, MA, DigitalOcean offers transparent and affordable pricing, an elegant user interface, and one of the largest libraries of open source resources available.&lt;/p&gt;

&lt;p&gt;For more information, please visit &lt;a href="https://www.digitalocean.com"&gt;https://www.digitalocean.com&lt;/a&gt; or follow &lt;a href="https://twitter.com/digitalocean"&gt;@digitalocean&lt;/a&gt; on Twitter.&lt;/p&gt;

&lt;p&gt;If you are new to DigitalOcean, you can get a free $100 credit and spin up your own servers via this referral link here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://m.do.co/c/2a9bba940f39"&gt;Free $100 Credit For DigitalOcean&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devdojo"&gt;
  &lt;/a&gt;
  üë©‚Äçüíª DevDojo
&lt;/h3&gt;

&lt;p&gt;The DevDojo is a resource to learn all things web development and web design. Learn on your lunch break or wake up and enjoy a cup of coffee with us to learn something new.&lt;/p&gt;

&lt;p&gt;Join this developer community, and we can all learn together, build together, and grow together.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdojo.com?ref=bobbyiliev"&gt;Join DevDojo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more information, please visit &lt;a href="https://www.devdojo.com?ref=bobbyiliev"&gt;https://www.devdojo.com&lt;/a&gt; or follow &lt;a href="https://twitter.com/thedevdojo"&gt;@thedevdojo&lt;/a&gt; on Twitter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mini-video-course"&gt;
  &lt;/a&gt;
  üìπ Mini Video Course
&lt;/h2&gt;

&lt;p&gt;I am planning on recording a mini video course soon based on the eBook.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-the-author"&gt;
  &lt;/a&gt;
  üëã About the author
&lt;/h2&gt;

&lt;p&gt;My name is Bobby Iliev, and I have been working as a Linux DevOps Engineer since 2014. I am an avid Linux lover and supporter of the open-source movement philosophy. I am always doing that which I cannot do in order that I may learn how to do it, and I believe in sharing knowledge.&lt;/p&gt;

&lt;p&gt;I think it's essential always to keep professional and surround yourself with good people, work hard, and be nice to everyone. You have to perform at a consistently higher level than others. That's the mark of a true professional.&lt;/p&gt;

&lt;p&gt;For more information, please visit my blog at &lt;a href="https://bobbyiliev.com"&gt;https://bobbyiliev.com&lt;/a&gt;, follow me on Twitter &lt;a href="https://twitter.com/bobbyiliev_"&gt;@bobbyiliev_&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCQWmdHTeAO0UvaNqve9udRw"&gt;YouTube&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In case that you want to support me you can Buy Me a Coffee here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/bobbyiliev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kziPr3-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pdf-generation-tool"&gt;
  &lt;/a&gt;
  üî• PDF Generation Tool
&lt;/h2&gt;

&lt;p&gt;The project uses &lt;a href="https://github.com/themsaid/ibis/"&gt;Ibis&lt;/a&gt; developed by &lt;a href="https://github.com/themsaid"&gt;Mohamed Said&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ibis is a PHP tool that helps you write eBooks in markdown.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#book-cover"&gt;
  &lt;/a&gt;
  üé® Book Cover
&lt;/h2&gt;

&lt;p&gt;The cover for this ebook was created with &lt;a href="https://www.canva.com/join/determined-cork-learn"&gt;Canva.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you ever need to create a graphic, poster, invitation, logo, presentation ‚Äì or anything that looks good ‚Äî give Canva a go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-books"&gt;
  &lt;/a&gt;
  üìñ Other books
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;Introduction to Git and GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;Introduction to Bash Scripting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contributing"&gt;
  &lt;/a&gt;
  ü§≤ Contributing
&lt;/h2&gt;

&lt;p&gt;All contributions üçø are more than welcome! &lt;/p&gt;

&lt;p&gt;If you enjoy the eBook, make sure to star it on &lt;a href="https://github.com/bobbyiliev/introduction-to-sql"&gt;GitHub&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>sql</category>
      <category>database</category>
      <category>webdev</category>
      <category>books</category>
    </item>
    <item>
      <title>#30DaysOfAppwrite : Create Blog Posts</title>
      <author>Christy Jacob</author>
      <pubDate>Tue, 18 May 2021 13:08:52 +0000</pubDate>
      <link>https://dev.to/appwrite/30daysofappwrite-create-blog-posts-31fi</link>
      <guid>https://dev.to/appwrite/30daysofappwrite-create-blog-posts-31fi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://30days.appwrite.io/"&gt;#30DaysOfAppwrite&lt;/a&gt; is a month long event focused at giving developers a walk through of all of Appwrite's features, starting from the basics to more advanced features like Cloud Functions! Alongside we will also be building a fully featured Medium Clone to demonstrate how these concepts can be applied when building a real world app. We also have some exciting prizes for developers who follow along with us!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#retrieving-blog-posts"&gt;
  &lt;/a&gt;
  Retrieving Blog Posts
&lt;/h2&gt;

&lt;p&gt;Welcome back to another session on the Appwrite Database üëã . We hope you have gone through the &lt;a href="https://dev.to/appwrite/30daysofappwrite-create-user-profiles-1c3m"&gt;Day 17&lt;/a&gt; article. It is important as we build upon the knowledge gained in Day &lt;a href="https://dev.to/appwrite/30daysofappwrite-database-design-140a"&gt;16&lt;/a&gt; and &lt;a href="https://dev.to/appwrite/30daysofappwrite-create-user-profiles-1c3m"&gt;17&lt;/a&gt;. Now it's time to integrate our main feature into our app, Blog Posts.&lt;/p&gt;

&lt;p&gt;We will use the &lt;strong&gt;Post&lt;/strong&gt; Collection to have users create posts that are embedded into their profiles.&lt;/p&gt;

&lt;p&gt;For this we need to add several methods to our &lt;code&gt;appwrite.js&lt;/code&gt; file:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fetch all Posts&lt;/li&gt;
&lt;li&gt;Fetch all Posts from a User&lt;/li&gt;
&lt;li&gt;Fetch a single Post&lt;/li&gt;
&lt;li&gt;Create/Edit/Delete a Post&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first method to add is going to be the one that fetches all posts. Technically, we want to retrieve the latest 25 posts with the &lt;a href="https://appwrite.io/docs/client/database?sdk=web#databaseListDocuments"&gt;&lt;code&gt;listDocuments&lt;/code&gt;&lt;/a&gt; method, sorted from new to old, which have the &lt;code&gt;published&lt;/code&gt; attribute to &lt;code&gt;true&lt;/code&gt; from the server. For this we are going to add following to the &lt;code&gt;appwrite.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
    &lt;span class="na"&gt;fetchPosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nx"&gt;postsCollection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;published=1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;created_at&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;int&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To fetch all Posts from a user, our method is going to look similar - except that we will filter by a User ID in the &lt;code&gt;user_id&lt;/code&gt; attribute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//...&lt;/span&gt;
    &lt;span class="na"&gt;fetchUserPosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nx"&gt;postsCollection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="s2"&gt;`user_id=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;published=1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;created_at&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DESC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;int&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To fetch a single post, we will use the &lt;a href="https://appwrite.io/docs/client/database?sdk=web#databaseGetDocument"&gt;&lt;code&gt;getDocument&lt;/code&gt;&lt;/a&gt; method where we can pass an ID, instead of the previously used &lt;a href="https://appwrite.io/docs/client/database?sdk=web#databaseListDocuments"&gt;&lt;code&gt;listDocuments&lt;/code&gt;&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
    &lt;span class="na"&gt;fetchPost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;postsCollection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And for deleting a post we can use the &lt;a href="https://appwrite.io/docs/client/database?sdk=web#databaseDeleteDocument"&gt;&lt;code&gt;deleteDocument&lt;/code&gt;&lt;/a&gt; method like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
    &lt;span class="na"&gt;deletePost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleteDocument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;postsCollection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have all the API requests ready to retrieve blog posts, we now need to add Routes and Components for it. For this, we edit the &lt;code&gt;src/routes/Index.svelte&lt;/code&gt; file which will display all blog posts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;md&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;snarkdown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Loading&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../lib/Loading.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Action&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../lib/Action.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Author&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../lib/Author.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Preview&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../lib/Preview.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetchPosts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;promoted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="na"&gt;featured&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="na"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

{#await data}
    &lt;span class="nt"&gt;&amp;lt;Loading&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
{:then { promoted, featured, latest }}
    &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"top"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"promoted"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            {#if promoted.cover}
                &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;{promoted.cover}&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;{promoted.title}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            {/if}
            &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{promoted.title}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;Author&lt;/span&gt; &lt;span class="na"&gt;user=&lt;/span&gt;&lt;span class="s"&gt;{promoted.user_id}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
                {@html md(promoted.text)}
            &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;Action&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;{`#/post/${promoted.$id}`}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Read more&lt;span class="nt"&gt;&amp;lt;/Action&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cards"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            {#each featured as feature}
                &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;{`#/post/${feature.$id}`}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    {#if feature.cover}
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
                            &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;{feature.cover}&lt;/span&gt;
                            &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;{feature.title}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                    {/if}
                    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{feature.title}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            {/each}
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Latest&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"latest"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {#each latest as post}
            &lt;span class="nt"&gt;&amp;lt;Preview&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="na"&gt;post&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        {/each}
    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
{/await}

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="nc"&gt;.top&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-evenly&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="py"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="nc"&gt;.latest&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;align-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="py"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.promoted&lt;/span&gt; &lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.cards&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="py"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.cards&lt;/span&gt; &lt;span class="nc"&gt;.card&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="py"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.cards&lt;/span&gt; &lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f02e65&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.05&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.card&lt;/span&gt; &lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;object-fit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, the &lt;code&gt;fetchPosts()&lt;/code&gt; method is retrieving that latest 25 posts from our Database and splits them up into the following object structure:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Promoted&lt;/strong&gt; - The latest Post&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Featured&lt;/strong&gt; - The next 4 posts subsequent to &lt;strong&gt;Promoted&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Latest&lt;/strong&gt; - All the remaining Posts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On Day 17 we created a Profile page, but there were no posts yet. To add this feature we will revisit &lt;code&gt;src/routes/Profile.svelte&lt;/code&gt; and update the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Preview&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../lib/Preview.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MyPost&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../lib/MyPost.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetchUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchPosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetchUserPosts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documents&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;all&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;fetchUser&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;fetchPosts&lt;/span&gt;&lt;span class="p"&gt;()]);&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
    {#await all}
        &lt;span class="nt"&gt;&amp;lt;Loading&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    {:then [author, posts]}
        &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"author"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;{author.name}&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
        {#if $state.user.$id == params.id}
            &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;My Posts&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/create"&lt;/span&gt; &lt;span class="na"&gt;use:link&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Create&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"my-post"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                {#each posts as post}
                    &lt;span class="nt"&gt;&amp;lt;MyPost&lt;/span&gt; &lt;span class="na"&gt;on:deleted=&lt;/span&gt;&lt;span class="s"&gt;{()&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; {all = Promise.all([fetchUser(), fetchPosts()]); console.log("deleted")} } {post} /&amp;gt;
                {/each}
            &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
        {:else}
            &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Latest Posts&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"latest"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                {#each posts as post}
                    &lt;span class="nt"&gt;&amp;lt;Preview&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="na"&gt;post&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
                {/each}
            &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
        {/if}
    {:catch error}
        {error}
        &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
            Public profile not found
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/profile/create"&lt;/span&gt; &lt;span class="na"&gt;use:link&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Create Public Profile&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    {/await}
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are using two components here that haven't been created yet.&lt;code&gt;MyPost&lt;/code&gt; is an editable component that will be shown only to the owner of a post and allow them to edit and delete their posts.&lt;br&gt;&lt;br&gt;
The &lt;code&gt;Preview&lt;/code&gt; component on the other hand is a read-only component that will solely be used to display a preview of a blog post.  We will reuse this component in the &lt;code&gt;Index&lt;/code&gt; route.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;src/lib/Preview.svelte&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;{`#/post/${post.$id}`}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {#if post.cover}
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
            &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cover"&lt;/span&gt;
            &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;{post.cover}&lt;/span&gt;
            &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;{post.title}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    {/if}
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{post.title}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="nc"&gt;.cover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f02e65&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.05&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;src/lib/MyPost.svelte&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createEventDispatcher&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;svelte-spa-router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createEventDispatcher&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deletePost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;are you sure you want to delete?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deletePost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;deleted&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {#if post.cover}
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
            &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cover"&lt;/span&gt;
            &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;{post.cover}&lt;/span&gt;
            &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;{post.title}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    {/if}
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{post.title}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/post/{post.$id}"&lt;/span&gt; &lt;span class="na"&gt;use:link&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Preview&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/post/{post.$id}/edit"&lt;/span&gt; &lt;span class="na"&gt;use:link&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Edit&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;
        &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/delete"&lt;/span&gt;
        &lt;span class="na"&gt;on:click&lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="na"&gt;preventDefault=&lt;/span&gt;&lt;span class="s"&gt;{()&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; deletePost(post.$id)}
        class="button"&amp;gt;Delete&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;article&lt;/span&gt;&lt;span class="nc"&gt;.card&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="py"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="nc"&gt;.cover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-top-left-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-bottom-left-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the component to display a single blog post is left. For this we are going to create &lt;strong&gt;src/routes/Post.svelte&lt;/strong&gt; with following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;md&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;snarkdown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Loading&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../lib/Loading.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Author&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../lib/Author.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;postFetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetchPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

{#await postFetch}
    &lt;span class="nt"&gt;&amp;lt;Loading&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
{:then post}
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
        {post.title}
    &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Author&lt;/span&gt; &lt;span class="na"&gt;user=&lt;/span&gt;&lt;span class="s"&gt;{post.user_id}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    {#if post.cover}
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cover"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;{post.cover}&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;{post.title}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    {/if}
    &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {@html md(post.text)}
    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Comments&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
{/await}

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="nc"&gt;.cover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now all blog posts can be read, unfortunately we have no way to verify this as our users lack the ability to create posts. We will take care of this in the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-blog-posts"&gt;
  &lt;/a&gt;
  Creating Blog Posts
&lt;/h2&gt;

&lt;p&gt;Now we are going to add the first component which is going to write data to our Appwrite database. For this we are going to add the &lt;code&gt;src/routes/Create.svelte&lt;/code&gt; file and fill it with following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;EasyMDE&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;easymde&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../store&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;onMount&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;replace&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte-spa-router&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../node_modules/easymde/dist/easymde.min.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Loading&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../lib/Loading.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;published&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;easyMDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;postFetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetchPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;easyMDE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;cover&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;onMount&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;postFetch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;easyMDE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EasyMDE&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;element&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;content&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="na"&gt;renderingConfig&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;singleLineBreaks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;submit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;easyMDE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Title and content are both required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title and content are both required&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;published&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;published&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;$state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;$state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;published&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;published&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;$state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;created_at&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
                &lt;span class="p"&gt;};&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;//update&lt;/span&gt;
                &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updatePost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;$state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/profile/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;$state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;$state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;$state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;
                &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nx"&gt;easyMDE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;post created successfully&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Post created successfully&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;finally&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
    {#if params.slug}
        &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Edit Post&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    {:else}
        &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Create Post&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    {/if}
    {#if message}
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"alert"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{message}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    {/if}
    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;on:submit&lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="na"&gt;preventDefault=&lt;/span&gt;&lt;span class="s"&gt;{submit}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Title&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;required&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter title"&lt;/span&gt;
            &lt;span class="na"&gt;bind:value=&lt;/span&gt;&lt;span class="s"&gt;{title}&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Content&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt;
            &lt;span class="na"&gt;bind:value=&lt;/span&gt;&lt;span class="s"&gt;{content}&lt;/span&gt;
            &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;
            &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;
            &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"30"&lt;/span&gt;
            &lt;span class="na"&gt;rows=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter content"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"status"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Status&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"status"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"status"&lt;/span&gt; &lt;span class="na"&gt;bind:value=&lt;/span&gt;&lt;span class="s"&gt;{published}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;{false}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Draft&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;{true}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Published&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled=&lt;/span&gt;&lt;span class="s"&gt;{loading&lt;/span&gt; &lt;span class="err"&gt;?&lt;/span&gt; &lt;span class="na"&gt;true&lt;/span&gt; &lt;span class="na"&gt;:&lt;/span&gt; &lt;span class="na"&gt;false&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{ params.slug ? 'Save' : 'Create'}&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.alert&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ff000066&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This allows user to create and edit their posts. Now the final step is to add all the components to our router over at &lt;code&gt;src/App.svelte&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="c1"&gt;//...&lt;/span&gt;
     &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Post&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./routes/Post.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Create&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./routes/Create.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//..    &lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//...&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/create&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/post/:slug&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/post/:slug/edit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Create&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;

&lt;p&gt;We hope you liked this write up. You can follow &lt;a href="https://twitter.com/search?q=%2330daysofappwrite"&gt;#30DaysOfAppwrite&lt;/a&gt; on Social Media to keep up with all of our posts. The complete event timeline can be found &lt;a href="http://30days.appwrite.io"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/discord"&gt;Discord Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appwrite.io/"&gt;Appwrite Homepage&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite"&gt;Appwrite's Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to reach out to us on Discord if you would like to learn more about Appwrite, Aliens or Unicorns ü¶Ñ. Stay tuned for tomorrow's article! Until then üëã&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>flutter</category>
      <category>30daysofappwrite</category>
    </item>
    <item>
      <title>Tracking my working time using timetrace</title>
      <author>Dominik Braun</author>
      <pubDate>Tue, 18 May 2021 13:00:00 +0000</pubDate>
      <link>https://dev.to/dominikbraun/tracking-my-working-time-using-timetrace-4hj4</link>
      <guid>https://dev.to/dominikbraun/tracking-my-working-time-using-timetrace-4hj4</guid>
      <description>&lt;p&gt;In my new job, I'm not required to track my working time anymore. This feels great, but since I'm getting paid for working 40 hours a week, I decided to track it myself and built a simple and friendly CLI tool: &lt;a href="https://github.com/dominikbraun/timetrace"&gt;timetrace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DlDp2wj9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/676h7vy6dl6q3h0f3m8b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DlDp2wj9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/676h7vy6dl6q3h0f3m8b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-timetrace"&gt;
  &lt;/a&gt;
  Installing timetrace
&lt;/h2&gt;

&lt;p&gt;timetrace is available for many platforms. Since I'm on macOS, I'll simply use Homebrew:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew tap dominikbraun/timetrace
brew install timetrace
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For other installation methods, check out the &lt;a href="https://github.com/dominikbraun/timetrace#installation"&gt;installation instructions&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-project"&gt;
  &lt;/a&gt;
  Creating a project
&lt;/h2&gt;

&lt;p&gt;timetrace uses &lt;em&gt;projects&lt;/em&gt; to store what you are currently working on. For example, creating a project called &lt;code&gt;make-coffee&lt;/code&gt; is pretty simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace create project make-coffee
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#tracking-time"&gt;
  &lt;/a&gt;
  Tracking time
&lt;/h2&gt;

&lt;p&gt;To start tracking time for a project, run the &lt;code&gt;start&lt;/code&gt; command and provide the project name:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace start make-coffee
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll see the following output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚úîÔ∏è Started tracking time
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#current-tracking-status"&gt;
  &lt;/a&gt;
  Current tracking status
&lt;/h2&gt;

&lt;p&gt;What project are you currently working on? And how long have you been working on it? The &lt;code&gt;status&lt;/code&gt; command answers such questions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace status
+-----------------+--------------------+--------------+
| CURRENT PROJECT | WORKED SINCE START | WORKED TODAY |
+-----------------+--------------------+--------------+
| make-coffee     | 0h 5min            | 4h 20min     |
+-----------------+--------------------+--------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#stop-tracking-time"&gt;
  &lt;/a&gt;
  Stop tracking time
&lt;/h2&gt;

&lt;p&gt;Once you've finished your work, stop tracking time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace stop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#list-todays-records"&gt;
  &lt;/a&gt;
  List today's records
&lt;/h2&gt;

&lt;p&gt;Tracked time is stored as a &lt;em&gt;record&lt;/em&gt;. To list all records, use the &lt;code&gt;list records&lt;/code&gt; command and provide the current date. On our example, this is only one record:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;timetrace list records 2021-05-18
+---+-------------+-------+-----+----------+
| # |   PROJECT   | START | END | BILLABLE |
+---+-------------+-------+-----+----------+
| 1 | make-coffee | 14:44 | --- | no       |
+---+-------------+-------+-----+----------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This overview is useful for running other commands like &lt;code&gt;get record&lt;/code&gt;, &lt;code&gt;edit record&lt;/code&gt; or &lt;code&gt;delete record&lt;/code&gt;, since you'll have to provide the record's start time for them.&lt;/p&gt;

&lt;p&gt;To get a complete list of available commands, run &lt;code&gt;timetrace -h&lt;/code&gt; or check out the &lt;a href="https://github.com/dominikbraun/timetrace#command-reference"&gt;command reference&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#planned-features"&gt;
  &lt;/a&gt;
  Planned features
&lt;/h2&gt;

&lt;p&gt;This was a quick usage example including the most important commands I'm using every day. But there are more advanced features planned. Some of them are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lengthen and shorten existing records&lt;/li&gt;
&lt;li&gt;Generating reports of tracked time&lt;/li&gt;
&lt;li&gt;Reverting changes done with &lt;code&gt;edit&lt;/code&gt; or &lt;code&gt;delete&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Project modules for managing sub-modules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you'd like to contribute or have some suggestions, check out &lt;a href="https://github.com/dominikbraun/timetrace/issues"&gt;timetrace's open issues&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>timetracking</category>
      <category>go</category>
      <category>cli</category>
    </item>
    <item>
      <title>Chakra UI: the hidden treasures</title>
      <author>Axel Navarro</author>
      <pubDate>Tue, 18 May 2021 12:49:58 +0000</pubDate>
      <link>https://dev.to/cloudx/chakra-ui-the-hidden-treasures-1gl9</link>
      <guid>https://dev.to/cloudx/chakra-ui-the-hidden-treasures-1gl9</guid>
      <description>&lt;p&gt;I found &lt;a href="https://github.com/chakra-ui/chakra-ui"&gt;Chakra UI&lt;/a&gt; (by &lt;a href="https://github.com/readme/segun-adebayo"&gt;Sage&lt;/a&gt;) a few months ago, and I learned a lot of things from it.&lt;/p&gt;

&lt;p&gt;I've been coding in React since 2017, and I used Less, Sass, &lt;code&gt;styled-components&lt;/code&gt;, even StyleSheet in &lt;code&gt;react-native&lt;/code&gt;. But this time I found something more fluent.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-little-introduction"&gt;
  &lt;/a&gt;
  A little Introduction
&lt;/h2&gt;

&lt;p&gt;Have you ever used &lt;code&gt;styled-components&lt;/code&gt;? Chakra UI moved all the CSS strings to props, like the following &lt;code&gt;Box&lt;/code&gt;, a &lt;code&gt;div&lt;/code&gt; wrapper:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"20rem"&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"blue.100"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is awesome. ü§©&lt;/p&gt;

&lt;p&gt;Also the default theme is flexible and you can overwrite whatever you want, and also create custom components to extend the built-in Chakra components.&lt;/p&gt;

&lt;p&gt;And if you are a TypeScript lover: the types are very consistent.&lt;/p&gt;

&lt;p&gt;But this post is not an introduction...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#and-where-is-the-treasure"&gt;
  &lt;/a&gt;
  And where is the treasure?
&lt;/h2&gt;

&lt;p&gt;Like every treasure, this one is not in the surface, you'll need to go deeper. I cloned the source code of Chakra UI and I found a lot of stuff.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-project-structure"&gt;
  &lt;/a&gt;
  The project structure
&lt;/h3&gt;

&lt;p&gt;Chakra is built using packages for each module üëå; some are internals and others are public and exported by the main package &lt;a href="https://www.npmjs.com/package/@chakra-ui/react"&gt;@chakra-ui/react&lt;/a&gt;. You can learn how to use &lt;code&gt;lerna&lt;/code&gt; and how to build this system package by package. üì¶&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-hooks"&gt;
  &lt;/a&gt;
  The hooks
&lt;/h3&gt;

&lt;p&gt;The first package I dove into was the &lt;a href="https://github.com/chakra-ui/chakra-ui/tree/main/packages/hooks"&gt;@chakra-ui/hooks&lt;/a&gt; and I found the first treasure:&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://chakra-ui.com/docs/hooks/use-outside-click"&gt;useOutsideClick&lt;/a&gt; is a common one to hide popovers when the user clicks outside them. And then there is the &lt;a href="https://chakra-ui.com/docs/hooks/use-merge-refs"&gt;useMergeRefs&lt;/a&gt; when you need to merge several React refs into one. I contributed with doc pages for both hooks. üòÅ&lt;/p&gt;

&lt;p&gt;You can find more &lt;a href="https://github.com/chakra-ui/chakra-ui/blob/main/packages/hooks/src/use-const.ts"&gt;useful&lt;/a&gt; &lt;a href="https://github.com/chakra-ui/chakra-ui/blob/main/packages/hooks/src/use-why-update.ts"&gt;hooks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Like this special one: the &lt;a href="https://github.com/chakra-ui/chakra-ui/blob/main/packages/popper/README.md"&gt;usePopper&lt;/a&gt;, a wrapper for the &lt;a href="https://popper.js.org/"&gt;popper.js&lt;/a&gt; üçø library, converting it into a magic hook. This is an internal hook and it's not documented in the website, but is still exported and you can use it, the downside is that ‚ö†Ô∏è it's not covered by &lt;a href="https://semver.org/"&gt;semver&lt;/a&gt;. üôÄ&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-utils"&gt;
  &lt;/a&gt;
  The utils
&lt;/h3&gt;

&lt;p&gt;Another internal package is the &lt;a href="https://github.com/chakra-ui/chakra-ui/tree/main/packages/utils"&gt;@chakra-ui/utils&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here you can find functions for &lt;a href="https://github.com/chakra-ui/chakra-ui/blob/main/packages/utils/src/array.ts"&gt;arrays&lt;/a&gt; that remembers to the Lodash library. Also to manage &lt;a href="https://github.com/chakra-ui/chakra-ui/blob/main/packages/utils/src/function.ts"&gt;functions&lt;/a&gt; and parse &lt;a href="https://github.com/chakra-ui/chakra-ui/blob/main/packages/utils/src/number.ts"&gt;numbers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another one to work with &lt;a href="https://github.com/chakra-ui/chakra-ui/blob/main/packages/utils/src/object.ts"&gt;objects&lt;/a&gt; with &lt;a href="https://www.npmjs.com/package/lodash.mergewith"&gt;&lt;code&gt;lodash.mergewith&lt;/code&gt;&lt;/a&gt; as a dependency.&lt;/p&gt;

&lt;p&gt;You can use &lt;a href="https://github.com/chakra-ui/chakra-ui/blob/main/packages/utils/src/dom.ts#L41"&gt;&lt;code&gt;addDomEvent&lt;/code&gt;&lt;/a&gt; to add global event listeners without leaks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;addDomEvent&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@chakra-ui/utils&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyNiceFeature&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setHeight&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;addDomEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resize&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;setHeight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If these helpers are already loaded in your bundle, why would you repeat the code instead of reusing it?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-react-code"&gt;
  &lt;/a&gt;
  The React code
&lt;/h3&gt;

&lt;p&gt;I found myself reading the code by &lt;a href="https://github.com/readme/segun-adebayo"&gt;Sage&lt;/a&gt; and the contributors and learning another way to handle heavy UI components, like the &lt;a href="https://github.com/chakra-ui/chakra-ui/tree/main/packages/menu"&gt;@chakra-ui/menu&lt;/a&gt;. Using hooks and event handlers to handle the user interactions in a fluent way. ü§Ø&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I found a nice and beautiful UI library where I can handle CSS inside the React components without string templates. But I also found a source to learn new stuff:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to handle UI behavior with reusable hooks and functions.&lt;/li&gt;
&lt;li&gt;A hidden toolbox that I can use for my own components too.&lt;/li&gt;
&lt;li&gt;The path to use Lerna in a monorepo.&lt;/li&gt;
&lt;li&gt;A guideline to pass from &lt;code&gt;px&lt;/code&gt; to &lt;code&gt;rem&lt;/code&gt; units in CSS.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Some tweaks that you'll need to customize the theme is not explicitly documented.&lt;/li&gt;
&lt;li&gt;The community is growing but not so big like `styled-components.&lt;/li&gt;
&lt;li&gt;The documentation is a work in progress, there are some advanced functionalities that you'll have to understand by reading the source code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope you fall in love with Chakra UI too and the power of the Open Source Software. ü•∞ &lt;em&gt;#ShareTheKnowledge&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>ux</category>
      <category>javascript</category>
    </item>
    <item>
      <title>CSS Tutorial - Styling a CSS Form &amp; Adding a Shine üåü Effect [video]</title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 18 May 2021 12:47:03 +0000</pubDate>
      <link>https://dev.to/thenerdydev/css-tutorial-styling-a-css-form-adding-a-shine-effect-video-3jh0</link>
      <guid>https://dev.to/thenerdydev/css-tutorial-styling-a-css-form-adding-a-shine-effect-video-3jh0</guid>
      <description>&lt;p&gt;In this video, we will see how we can style a CSS form and then we will understand How to add Shine Effect to our form button using CSS Transitions&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HRuqCEZRV7c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you want to play with the code, check this out : &lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/9q9j1"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - Make sure to subscribe to my YouTube Channel for FREE content on Web Development and loads of other technologies. &lt;/p&gt;




&lt;p&gt;Follow me on:&lt;br&gt;
üëâ Twitter: &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt;&lt;br&gt;
üëâ Instagram: &lt;a href="https://instagram.com/thenerdydev"&gt;https://instagram.com/thenerdydev&lt;/a&gt;&lt;br&gt;
üëâ YouTube: &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>100daysofcode</category>
      <category>html</category>
    </item>
    <item>
      <title>You can do more than just console.log()</title>
      <author>Daryl Lukas</author>
      <pubDate>Tue, 18 May 2021 12:25:56 +0000</pubDate>
      <link>https://dev.to/daryllukas/you-can-do-more-than-just-console-log-598a</link>
      <guid>https://dev.to/daryllukas/you-can-do-more-than-just-console-log-598a</guid>
      <description>&lt;p&gt;The JavaScript &lt;code&gt;console&lt;/code&gt; object has a number of methods that can be very useful for debugging. Below are a few examples:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#groups-using-raw-consolegroup-endraw-"&gt;
  &lt;/a&gt;
  Groups using &lt;code&gt;console.group()&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;This method allows to you create new inline (and collapsible) groups in the console output. You can close/exit the inline group by calling &lt;code&gt;console.groupEnd()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here is a simple example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Basic Info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Name: Daryl Lukas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Location: Lusaka, Zambia&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Additional Info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Twitter: @daryllukas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Website: https://daryllukas.me&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Outside of the groups...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ReG0VZzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dcikt2gkjzjd7hnbkt2g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ReG0VZzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dcikt2gkjzjd7hnbkt2g.png" alt="Console Group"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: Groups created using &lt;code&gt;console.group()&lt;/code&gt; are expanded, by default. If you wish to create a new inline group that is collapsed, use &lt;code&gt;console.groupCollapsed()&lt;/code&gt; instead.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tables-using-raw-consoletable-endraw-"&gt;
  &lt;/a&gt;
  Tables using &lt;code&gt;console.table()&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;This method allows you to display tabular data as a table. It takes one mandatory argument data, which must be a collection of primitive data types (an array or an object).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cherries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dates&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jt_p5LL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0eym62bp099wkmko7rvh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jt_p5LL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0eym62bp099wkmko7rvh.png" alt="Console Table: Array"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="err"&gt;¬†&lt;/span&gt; &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Daryl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="err"&gt;¬†&lt;/span&gt; &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lukas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="err"&gt;¬†&lt;/span&gt; &lt;span class="na"&gt;occupation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Developer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t4iv0y6R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ce72nrvd0etszse4red.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t4iv0y6R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ce72nrvd0etszse4red.png" alt="Console Table: Object"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This method is very useful when displaying arrays of objects, as it makes the output very readable. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;students&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jonathan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Daniel&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;students&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tKD67xYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6sltt3lt5g3q2poex5b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tKD67xYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6sltt3lt5g3q2poex5b.png" alt="Console Table: Array of objects"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#working-with-times"&gt;
  &lt;/a&gt;
  Working with times
&lt;/h2&gt;

&lt;p&gt;The console object also has timer methods that allow you to calculate the duration of a specific operation. To start a timer, call the &lt;code&gt;console.time()&lt;/code&gt; method, giving it a unique name/label as the only parameter e.g., &lt;code&gt;console.time("operationOne")&lt;/code&gt;. To check the current value of the timer, call the &lt;code&gt;console.timeLog()&lt;/code&gt; method, giving the label of the timer which was started, e.g., &lt;code&gt;console.timeLog("operationOne")&lt;/code&gt;. This will output the time, in milliseconds, that has elapsed since the timer started. And finally, you can stop the timer by calling &lt;code&gt;console.timeEnd()&lt;/code&gt;, again using the same label, e.g., &lt;code&gt;console.timeEnd("operationOne")&lt;/code&gt;. This will also output the elapsed time, in milliseconds.&lt;/p&gt;

&lt;p&gt;See an example below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;operationOne&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Click to continue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;operationOne&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Click again to continue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;operationOne&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eLuPc1Nb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eemmhxe44m6dx22228y3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eLuPc1Nb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eemmhxe44m6dx22228y3.png" alt="Console timer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: You can have up to 10,000 timers running on a given page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  Learn more
&lt;/h2&gt;

&lt;p&gt;You learn more console methods &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Console"&gt;here&lt;/a&gt;, from styling console output to string substitutions.&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Why I made my open source React component private by default: an Open Source story</title>
      <author>Ibrahim Cesar</author>
      <pubDate>Tue, 18 May 2021 12:22:44 +0000</pubDate>
      <link>https://dev.to/ibrahimcesar/why-i-made-my-open-source-react-component-private-by-default-an-open-source-story-1jja</link>
      <guid>https://dev.to/ibrahimcesar/why-i-made-my-open-source-react-component-private-by-default-an-open-source-story-1jja</guid>
      <description>&lt;p&gt;I‚Äôm a big fan of open source. Because, well, we all owe to this vast collection of code, libraries, frameworks and knowledge. Just like with arts and science, we stand on the shoulders of Giants. Inspired and iterations upon previous works, adding one more chain, keeping us together. And not just in the &lt;em&gt;figurative&lt;/em&gt; sense, but &lt;em&gt;literally&lt;/em&gt;, as xkcd pointed in the ‚ÄúIt‚Äôs funny cause is truth‚Äù, &lt;a href="https://xkcd.com/2347/"&gt;Dependency&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HlHkDKDJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efwtn5lt8k8krxhcaz02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HlHkDKDJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efwtn5lt8k8krxhcaz02.png" alt="Dependency"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ibrahimcesar.cloud/blog/10-livros-de-2020/"&gt;Last year, one of books&lt;/a&gt; I loved was &lt;a href="https://amzn.to/2JY2S1s"&gt;Working in Public&lt;/a&gt; from &lt;a href="https://twitter.com/nayafia"&gt;Nadia Eghbal&lt;/a&gt; whose subtitle, ‚ÄúThe Making and Maintenance of Open Source Software‚Äù makes clear about the themes in the book: the para-social relationship between maintainers and community, the different kinds of projects in a very helpful framework and the economics of produce and maintain high quality work &lt;em&gt;for free&lt;/em&gt; for almost all projects. If you scan for reviews quickly, you‚Äôll see someone ‚Äúcomplaining‚Äù is not technical or doesn‚Äôt help as a maintainer... I think they just misread the book and its purposes: explore a vast topic, where each actor has its own interest, that much of our infrastructure at production today depended on, and ... &lt;em&gt;works&lt;/em&gt;. These &lt;a href="https://squidarth.com/books/2020/08/18/working-in-public.html"&gt;notes from Sid Shanker helps to summarize it&lt;/a&gt; or a more &lt;a href="https://www.techbookofthemonth.com/books/oct20"&gt;in-depth guide here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KkZ41r4u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9r6mnu31usfw39occof.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KkZ41r4u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9r6mnu31usfw39occof.png" alt="Ehgbal‚Äôs framework"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nadia Ehgbal‚Äôs framework has four classifications: &lt;em&gt;Federations&lt;/em&gt;, &lt;em&gt;Clubs&lt;/em&gt;, &lt;em&gt;Stadiums&lt;/em&gt; and &lt;em&gt;Toys&lt;/em&gt;. My story comes from the ranks of the &lt;em&gt;toys&lt;/em&gt; ‚Äì another world from those in the big categories, like the &lt;a href="https://babeljs.io/blog/2021/05/10/funding-update"&gt;post from the the Babel project, used by millions but running out of funds&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;I was fortunate enough to take part of the &lt;a href="https://www.youtube.com/playlist?list=PLNYkxOF6rcIDA1uGhqy45bqlul0VcvKMr"&gt;Chrome Developer Summit 2019&lt;/a&gt; in San Francisco (on a personal note, I propose to my wife there, in the Cupid‚Äôs Span). At the time I was finishing a project in the works in the last 6 months: a complete rewrite of our frontend. We used a Bootstrap 3.0 in a backed-in framework on our CMS, that we had basically to ‚Äúshadow‚Äù properties we don‚Äôt wanted in the JSPs. It was madness. With the new offering of a headless CMS we rewrote everything in React SSR. I work at a digital only news site in Brazil. I was doing what I called ‚ÄúLighthouse-Driven Development‚Äù to achieve better performance.&lt;/p&gt;

&lt;p&gt;I notice two things right away: YouTube iframe looked to load not so fast like the rest. And we don‚Äôt run ads in our sites. Of any kind. But as soon as our iframe load with our videos, every ad-blocker would point that there was an ad in the page, and traced back to the YouTube embed. Also, our embeds sometimes loaded with several little ‚Äúrecommendations‚Äù that don‚Äôt matched our themes exactly. But who I was to blame YouTube embed?&lt;/p&gt;

&lt;p&gt;But in one of the talks, &lt;a href="https://twitter.com/paul_irish"&gt;Paul Irish&lt;/a&gt; presented &lt;a href="https://github.com/paulirish/lite-youtube-embed"&gt;Lite YouTube Embed&lt;/a&gt;, a custom element renders just like the real thing but approximately &lt;a href="https://paulirish.github.io/lite-youtube-embed/"&gt;224√ó faster&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yNx0nrmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etw31n0xk5cet7gzmhx0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yNx0nrmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etw31n0xk5cet7gzmhx0.png" alt="Ads network"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there, in the code, I found that I was loading at least two sources of ad for one iframe. But I was more interested in the ‚Äú224x‚Äù. The project at work could not ‚Äúwait‚Äù. for me work on this. But I used my free time and weekends and built &lt;a href="https://github.com/ibrahimcesar/react-lite-youtube-embed"&gt;üì∫ React Lite YouTube Embed&lt;/a&gt; that later became part of my project. My benchmarks never got close, but I could do a faster and cleaner way of loading iframes for our project since we would wait for user interaction, applying &lt;a href="https://www.youtube.com/watch?v=puUPpVrIRkc"&gt;Adaptive Loading&lt;/a&gt; as presented by &lt;a href="https://twitter.com/addyosmani"&gt;Addy Osmani&lt;/a&gt;‚Äîwhich, many of the ideas were a lot about my &lt;em&gt;every day work&lt;/em&gt; since I was dealing with very poor performance mobiles and low-quality networks that we have here in Brazil and not exception. My motivation was part solve a problem for me and part apply those ideas of respect users‚Äôs hardware and network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CIfF0BQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1zqig24h3zhu3k5prgs.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CIfF0BQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1zqig24h3zhu3k5prgs.jpeg" alt="Addy presenting the adaptive loading"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-alive"&gt;
  &lt;/a&gt;
  It‚Äôs alive!
&lt;/h2&gt;

&lt;p&gt;The first release I was so afraid. Of criticism. Of put my code out there. I had to do some tweaks because when integrating with my own work I faced problems. I receive feedback, &lt;em&gt;pull requests&lt;/em&gt; and then, on the &lt;a href="https://github.com/ibrahimcesar/react-lite-youtube-embed/pull/6"&gt;6th PR&lt;/a&gt; a collaborator, &lt;a href="https://github.com/elbotho"&gt;Botho&lt;/a&gt; added a nice option &lt;code&gt;noCookie&lt;/code&gt;, when &lt;code&gt;true&lt;/code&gt;, connected to YouTube via the Privacy-Enhanced Mode using &lt;code&gt;https://www.youtube-nocookie.com&lt;/code&gt;. I already had in place &lt;code&gt;adNetwork&lt;/code&gt; to preconnect or not to the ad networks and it delighted me to get this kind of not only validation for these kind of concerns but active ideas and work towards the goal. But these privacy enhancements were all by opt-in.&lt;/p&gt;

&lt;p&gt;I was getting feedback that the component was not playing nice with &lt;code&gt;Next.JS&lt;/code&gt;. I was making a hard-coded import of the css and this would make the app not render at all. Since I was taking more and a more close look to Next.JS‚Äîand loving it! I did not want to my first open sourced my little project doesn‚Äôt give access to this framework and potentially others.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#privacy-by-default"&gt;
  &lt;/a&gt;
  Privacy by default
&lt;/h2&gt;

&lt;p&gt;At the same time in Brazil we got a new law, our own home-baked GDPR, called LGPD (Lei Geral de Prote√ß√£o de dados or General Law of Data Protection) and all concerns with the massive misuse of our data. I made a course in the area to better prepare our systems (since we deal with billing for subscriptions and other kind of PII). And I was a ‚ÄúTypeScript newborn‚Äù, a recent converted and got the challenge to rewrite from the zero (well, is a small lib, it was not a tremendous feat!). And got me thinking about privacy, how sensitive defaults could become the norm in an invisible, but fundamental way and, I as designer of this component, decided I would make a private by default component. I would make the developer responsible for the choices or even better, be possible to give to the user these choices.&lt;/p&gt;

&lt;p&gt;How will evolve our society trusting on advertising corporations to be neutral purveyors of information when their profit depends on manipulating that information misunderstands our capitalist marketplace and the value and nature of unbiased information? I as a developer in a news media outlet was thinking on things like that and I know everyone has an approach to this, even if is ‚ÄúI don‚Äôt care‚Äù. So, I choose privacy by default.&lt;/p&gt;

&lt;p&gt;And this will be my choice from now on. And that PR, of a person I never meet or spoke, but that we collaborate in the same piece of code, gave me confidence in my choices.&lt;/p&gt;




&lt;p&gt;And this is my first open source project, on &lt;code&gt;2.0&lt;/code&gt; since the TypeScript migration.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ibrahimcesar"&gt;
        ibrahimcesar
      &lt;/a&gt; / &lt;a href="https://github.com/ibrahimcesar/react-lite-youtube-embed"&gt;
        react-lite-youtube-embed
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üì∫ &amp;lt; A private by default, faster and cleaner YouTube embed component for React applications /&amp;gt;
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt; &lt;div&gt;
  &lt;h1&gt;
üì∫  React Lite YouTube Embed&lt;/h1&gt;
  &lt;blockquote&gt;A private by default, faster and cleaner YouTube embed component for React applications&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/ellerbrock/typescript-badges/"&gt;&lt;img src="https://camo.githubusercontent.com/1d1f56c37cf5dfd1b9c3782a8d1d6fe07f8764e8c35f53ec90460e5b38cd8f7d/68747470733a2f2f6261646765732e66726170736f66742e636f6d2f747970657363726970742f636f64652f747970657363726970742e7376673f763d313031" alt="TypeScript"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/react-lite-youtube-embed" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/485749f3898fb2288e39ffcd1a6b871f2b93b965a10c251cf2e9700ac97a42bb/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d6c6974652d796f75747562652d656d6265643f6c6162656c3d6c617465737425323076657273696f6e" alt="Version"&gt;&lt;/a&gt;¬† ¬†&lt;a href="https://raw.githubusercontent.com/ibrahimcesar/react-lite-youtube-embed/main/./LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/cc2d64e6af0f51a7ca1d15e065b021d5ca9216405e96fe2efc3103a9bc564be4/68747470733a2f2f62616467656e2e6e65742f6769746875622f6c6963656e73652f6962726168696d63657361722f72656163742d6c6974652d796f75747562652d656d626564" alt="License"&gt;&lt;/a&gt;¬† ¬†&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1a28aa39ed91c6ce054986970bccc61bc0a0e6d46630d30d6c1efe050afdfd3d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6962726168696d63657361722f72656163742d6c6974652d796f75747562652d656d6265642f627567"&gt;&lt;img src="https://camo.githubusercontent.com/1a28aa39ed91c6ce054986970bccc61bc0a0e6d46630d30d6c1efe050afdfd3d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6962726168696d63657361722f72656163742d6c6974652d796f75747562652d656d6265642f627567" alt="GitHub issues by-label"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Developed in üáßüá∑ &lt;span&gt;Brazil&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Port of Paul Irish's &lt;a href="https://github.com/paulirish/lite-youtube-embed"&gt;Lite YouTube Embed&lt;/a&gt; to a React Component. Provide videos with a supercharged focus on visual performance. The gain is not the same as the web component of the original implementation but saves some requests and gives you more control of the embed visual. An &lt;a href="https://www.youtube.com/watch?v=puUPpVrIRkc" rel="nofollow"&gt;"Adaptive Loading"&lt;/a&gt; way to handle iframes for YouTube.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1d1ba5220a61cd6f4bf923a7f7689572c4eebff02f5fa16c29ea48536963b205/68747470733a2f2f72656163742d6c6974652d796f75747562652d656d6265642e73332d73612d656173742d312e616d617a6f6e6177732e636f6d2f6c6974652e676966"&gt;&lt;img src="https://camo.githubusercontent.com/1d1ba5220a61cd6f4bf923a7f7689572c4eebff02f5fa16c29ea48536963b205/68747470733a2f2f72656163742d6c6974652d796f75747562652d656d6265642e73332d73612d656173742d312e616d617a6f6e6177732e636f6d2f6c6974652e676966" alt="iFrame example"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;a href="https://react-lite-youtube-embed.ibrahimcesar.cloud/" rel="nofollow"&gt;View Demo&lt;/a&gt;
&lt;/h2&gt;
&lt;/div&gt;
&lt;h2&gt;
üîí 2.0.0 Privacy by Default&lt;/h2&gt;
&lt;p&gt;The biggest change is, from 2.0.0 this component is private by default. Meaning that will not preconnect with the ad network from Google and connect to YouTube via the Privacy-Enhanced Mode using &lt;a href="https://www.youtube-nocookie.com" rel="nofollow"&gt;https://www.youtube-nocookie.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
üöÄ Install&lt;/h2&gt;
&lt;p&gt;Use your favorite package manager:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add react-lite-youtube-embed&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install react-lite-youtube-embed -S&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
üïπÔ∏è Basic Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"react"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;render&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"react-dom"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;LiteYouTubeEmbed&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ibrahimcesar/react-lite-youtube-embed"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Please leave your thoughts, takes and insights in the comments!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@christianw?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Christian Wiediger&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/youtube?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>opensource</category>
      <category>typescript</category>
      <category>privacy</category>
    </item>
    <item>
      <title>4 ways to Compare Strings in JavaScript</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Tue, 18 May 2021 12:02:57 +0000</pubDate>
      <link>https://dev.to/coderslang/4-ways-to-compare-strings-in-javascript-2ej9</link>
      <guid>https://dev.to/coderslang/4-ways-to-compare-strings-in-javascript-2ej9</guid>
      <description>&lt;p&gt;In this short JS tutorial, you‚Äôll learn how to compare strings and see code examples.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#strict-equality"&gt;
  &lt;/a&gt;
  Strict equality
&lt;/h2&gt;

&lt;p&gt;To determine whether the strings are equal, you can use the strict equality operator &lt;code&gt;===&lt;/code&gt;. It returns &lt;code&gt;false&lt;/code&gt; if the strings are different and &lt;code&gt;true&lt;/code&gt;, if they‚Äôre the same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;learn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;today&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;learn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Comparing the strings using strict equality &lt;code&gt;===&lt;/code&gt; always analyzes the case of the letters, meaning that capital letters are different from the small ones.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#caseinsensitive-string-comparison"&gt;
  &lt;/a&gt;
  Case-insensitive string comparison
&lt;/h2&gt;

&lt;p&gt;If you want to do a case insensitive comparison of the strings in JavaScript, you can turn both strings to lowercase and compare them using a strict equality operator afterward.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#comparing-the-length-of-javascript-strings"&gt;
  &lt;/a&gt;
  Comparing the length of JavaScript strings
&lt;/h2&gt;

&lt;p&gt;If you need to find which of two strings is longer, then the operators "greater than" and "lower than" won‚Äôt suit you well. They compare the characters of a string in alphanumeric order one by one and consider the length of the strings at the very end.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In JS, every string has the &lt;code&gt;length&lt;/code&gt; property. By comparing the value of this property in different strings, we‚Äôll get to know which of them is longer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#check-if-a-string-contains-another-string"&gt;
  &lt;/a&gt;
  Check if a string contains another string
&lt;/h2&gt;

&lt;p&gt;To check if one string is a substring of another in JavaScript, there‚Äôs a built-in function &lt;code&gt;includes&lt;/code&gt;. Remember, the function &lt;code&gt;contains&lt;/code&gt; exists in Java, but it‚Äôs deprecated and replaced by &lt;code&gt;includes&lt;/code&gt; in JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;javascript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;python&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;script&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;script&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;java&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    &lt;span class="c1"&gt;// ERROR! .contains is not a function&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Read more &lt;a href="https://learn.coderslang.com/tags/javascript/"&gt;JavaScript tutorials&lt;/a&gt; or &lt;a href="https://js.coderslang.com"&gt;Learn Full-Stack JS&lt;/a&gt; from scratch!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Roblox Developing</title>
      <author>littlePitMit_Dev</author>
      <pubDate>Tue, 18 May 2021 11:29:52 +0000</pubDate>
      <link>https://dev.to/mit_pit/roblox-developing-1da9</link>
      <guid>https://dev.to/mit_pit/roblox-developing-1da9</guid>
      <description>&lt;p&gt;Roblox developing is now one of the easiest ways to earn money by putting in effort but with low risk! All that really needs to happen is imagination. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reasons why roblox developing is low risk&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Roblox is an online platform where there is no reason to spend money at all&lt;/li&gt;
&lt;li&gt;The code of conduct is easy to follow and there are some great websites to help you &lt;/li&gt;
&lt;li&gt;DevEx or cashing out with money is easy and very efficient &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;What to watch out for in roblox developing&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Many of the users online will scam you so always take payment before you submit the build or code. (I send screenshots then ask for pay)&lt;/li&gt;
&lt;li&gt;I think 360 robux=$1 which is quite manageable&lt;/li&gt;
&lt;li&gt;You might want to have other platforms with your user so you can get an audience, this is a great way to form a fanbase and make money with youTube&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;What skills do I need?&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You need to be able to 3D model. Roblox Studio (where you make the games) has a great interface design that can help you. Another way is to make a file in blender and export it to Roblox Studio. &lt;/li&gt;
&lt;li&gt;Basic coding, Roblox coding is different from other coding but it's easier to understand a new code when you can code a little&lt;/li&gt;
&lt;li&gt;Time, Roblox is a platform where developers spend up to a year creating 1 game. You will have to provide updates regularly.&lt;/li&gt;
&lt;li&gt;Communications skills, If you wish to develop you should probably get a team together of expert 3D modelers, Scripters, GFX creators. If you can do them all then go solo! &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Many of the developers on Roblox have made millions of $$$ join today at roblox.com, make an account, click create, download the studio and boom you can create games. The interface is easy to figure out but you might want to watch some videos to get started! &lt;/p&gt;

&lt;p&gt;I have my own, "Roblox Devs" orginazation that you can be sure to reach out on&lt;/p&gt;

&lt;p&gt;Twitter: &lt;a class="mentioned-user" href="https://dev.to/mit_pit"&gt;@mit_pit&lt;/a&gt;
 &lt;br&gt;
Roblox: @littlePitMit_Dev&lt;br&gt;
DevTo &lt;a class="mentioned-user" href="https://dev.to/mit_pit"&gt;@mit_pit&lt;/a&gt;
 &lt;/p&gt;

&lt;p&gt;Message me with any questions, concerns, comments, or other&lt;/p&gt;

&lt;p&gt;You can also write a reply below. &lt;/p&gt;

&lt;p&gt;Have a great day DEV.To community I know that was a lot to read! &lt;/p&gt;

</description>
      <category>design</category>
      <category>architecture</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Various methods for Python String Comparison</title>
      <author>hrishikesh1990</author>
      <pubDate>Tue, 18 May 2021 11:19:09 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/various-methods-for-python-string-comparison-41fj</link>
      <guid>https://dev.to/hrishikesh1990/various-methods-for-python-string-comparison-41fj</guid>
      <description>&lt;p&gt;In this short tutorial, let us look at the various string comparison methods in python. We also look at the various edge cases, limitations and caveats.  &lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#python-string-comparison"&gt;Python String Comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#string-comparison-operators"&gt;String Comparison Operators&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#-and-"&gt;"==" and "!="&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#is-and-not-is"&gt;"is" and "not is"&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations-and-caveats"&gt;Limitations and Caveats&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#python-string-comparison"&gt;
  &lt;/a&gt;
  Python String Comparison
&lt;/h2&gt;

&lt;p&gt;Python string comparison is very common and is often used as a condition for loops. Python also comes with a few handy inbuilt operators to facilitate this. However before we dive into the methods, we have one important concept to touch upon.  &lt;/p&gt;

&lt;p&gt;All the data in your program are represented as objects, and every object has the following 3 properties. &lt;strong&gt;Identity&lt;/strong&gt; &lt;strong&gt;(Id)&lt;/strong&gt; - One may think of identity as the address of the memory in with the data is stored. The other two properties are &lt;strong&gt;Type&lt;/strong&gt; and &lt;strong&gt;Value.&lt;/strong&gt; Type is the data type of the object and Value is the value that the object stores. Python tries to save memory by re-using Id for objects with the same value, I have added an example below, this makes python string comparison much faster and easier.  Also, please be vary of these terms as each operator uses a different comparison method.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#string-comparison-operators"&gt;
  &lt;/a&gt;
  String Comparison Operators
&lt;/h2&gt;

&lt;p&gt;Out of the multiple methods that could be used to compare strings in python, I've explained two of the most commonly used, methods below. Note that all these methods return a boolean &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-and-"&gt;
  &lt;/a&gt;
  "==" and "!="
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; are commonly used relation operation in python string comparison. Both these operators compare the Unicode values of all the characters in the string one by one and then return a value. In case you aren't familiar with Unicode values, it essentially means that strings get converted into a Unicode, this helps maintain a uniform code irrespective of the language the programmer uses. You can read more about this &lt;a href="https://docs.python.org/3/howto/unicode.html"&gt;here&lt;/a&gt;. So based on these values you each character of a string is compared. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using "=="&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The "==" is a python string comparison method that is used to check if the value of both the operands is equal. And this is the most common method used to check equality.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output = 2621679855024
&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output = 2621679855024
&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output = 140735453670112
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output = True
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output = False
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The operator returns &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; respectively. Also notice how the &lt;code&gt;Id&lt;/code&gt; of &lt;code&gt;s1&lt;/code&gt; and &lt;code&gt;s2&lt;/code&gt; is identical, however, bear in mind that the &lt;code&gt;Id&lt;/code&gt; function will return a different number for you.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using "!="&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;!=&lt;/code&gt; is another python string comparison operator that is used to check if the values of the operands are not equal. Basically, the inverse of &lt;code&gt;==&lt;/code&gt; and the code makes it pretty straightforward to understand.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;

&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;

&lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple'&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Output = False
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Output = True
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#is-and-not-is"&gt;
  &lt;/a&gt;
  "is" and "not is"
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;not is&lt;/code&gt; operators are also quite similar to &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; respectively. However, &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;is not&lt;/code&gt; compares to the Identity (id) of the objects and returns &lt;code&gt;true&lt;/code&gt; only if they share the same identity. One could argue that the identity of the object remains the same, but this is not the case when working with immutables. When the object is given another value the memory allocated changes giving it a new id. This is something you need to keep in mind while using &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;is not&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using "is":&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;

&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;

&lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple'&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output = True
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output = False
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Using "is not":&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;

&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;

&lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple'&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output = False
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#output = True
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's look at how the Identity (id) changes when the value is changing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output = 2621679855024
&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexiple!'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output = 2621679855024
&lt;/span&gt;
&lt;span class="c1"&gt;#Now let us update s1
&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'flexi'&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 2621680032944
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So as soon as the value in &lt;code&gt;s1&lt;/code&gt; changes, &lt;code&gt;s2&lt;/code&gt; stops referring to &lt;code&gt;s1&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limitations-and-caveats"&gt;
  &lt;/a&gt;
  Limitations and Caveats
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Python string comparison operators can only be used to compare objects of a similar type.&lt;/li&gt;
&lt;li&gt;A best practice is to use &lt;code&gt;==&lt;/code&gt; when working with immutables&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>
10 Things You Need To Know About Automation In Marketing
</title>
      <author>Harshith</author>
      <pubDate>Tue, 18 May 2021 11:02:46 +0000</pubDate>
      <link>https://dev.to/harshith/10-things-you-need-to-know-about-automation-in-marketing-nfk</link>
      <guid>https://dev.to/harshith/10-things-you-need-to-know-about-automation-in-marketing-nfk</guid>
      <description>&lt;p&gt;Automation is a word that gets thrown around quite a bit in the marketing world. But what does it actually mean? And how can you implement automation in your own business? For ten things you need to know about automation, see this article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YI5VWcmu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vku5064r0hwtcudsjb3c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YI5VWcmu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vku5064r0hwtcudsjb3c.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
 Automation is a word that gets thrown around quite a bit in the marketing world. But what does it actually mean? And how can you implement automation in your own business? For ten things you need to know about automation, see this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-what-is-automation"&gt;
  &lt;/a&gt;
  1. What is automation?
&lt;/h2&gt;

&lt;p&gt;Automation is the process of removing human beings from a repetitive or mundane task, which is then completed by a computer or robot. Often referred to as ‚Äúlights out‚Äù production, automation is used in manufacturing, but it can be used in virtually any field. &lt;br&gt;
The impact of automation on the global, traditional retail, and online eCommerce sectors is undeniable. There are numerous ways that companies are utilizing technology to make their businesses more efficient, with vision tracking, inventory control, and online services as the prime examples. It isn‚Äôt uncommon for a small online retailer to generate tens of millions of dollars a year.&lt;br&gt;
As we move forward into the future of the ‚Äúrobot economy,‚Äù and the adoption of these technologies by consumers becomes more and more common, companies need to be asking the question of how they can best place their businesses in the technological age. Simply put, how can companies automate their operations?&lt;br&gt;
Silicon Valley has long been criticized for its role in perpetuating what is referred to as the ‚Äúman vs. machine‚Äù dichotomy. This view is held by many in society, who share the belief that the machines will always out-work the human work force ‚Äî which is a disastrous idea for those of us who seek to operate in a more humane manner.&lt;br&gt;
While it‚Äôs true that many advancements in technology have lowered the bar for what humans can achieve, the automation of manufacturing, in particular, has created tremendous value. Today, these technologies provide more jobs for humans, improve productivity, save lives, and lower costs for companies. It makes economic sense, and companies have started integrating them into their business models.&lt;br&gt;
Simply put, knowing how to put your products in the warehouse or how to deliver them to the customer at the end of the day depends on a thriving robotics sector. Without this, logistics, food distribution, retail, and many other manufacturing sectors will be unable to function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-how-can-you-use-automation"&gt;
  &lt;/a&gt;
  2. How can you use automation?
&lt;/h2&gt;

&lt;p&gt;I love automation because it saves me from so much hassle. I love it so much I even wrote a book about it called The Power of Automation . Automation has been a huge part of my success as a blogger. Automation has also been a huge part of my business.I like to think about business using the 80/20 rule as a way of understanding what has worked in the past, and what similar campaigns can be made to work in the future.&lt;/p&gt;

&lt;p&gt;Here are ten simple but important things automation does for me.&lt;br&gt;
 10 Benefits of Automation in Your Business&lt;br&gt;
 Here are some of the benefits automation has brought me:&lt;br&gt;
 More time to focus on other important things in my business&lt;br&gt;
 Extra time to manage other parts of the business such as social media posting, email etc.&lt;br&gt;
 Faster development on new projects and marketing efforts&lt;br&gt;
 greater creativity in all of my marketing efforts (both in terms of content and layout)&lt;br&gt;
 More budget for more projects&lt;/p&gt;

&lt;p&gt;More time to focus on other important things in my business&lt;br&gt;
 It's the little things that make a difference. If your minutes per task piece of paper has changed quite a bit, you may find time to dedicate to more important items in your business. Likewise, if your daily rate has changed quite a bit, then you might want to reassess where automation can make a big difference in how you do business.&lt;br&gt;
 Extra time to focus on other parts of the business such as social media posting, email etc.&lt;br&gt;
 As the old clich√© goes, the difference between doing and making is the difference between making something valuable and not. Of course there will always be a need to manage social media, and email etc, but taking time on a regular basis to focus on them will only make a difference for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-what-are-the-benefits-of-automation"&gt;
  &lt;/a&gt;
  3. What are the benefits of automation?
&lt;/h2&gt;

&lt;p&gt;We live in a world where automation is becoming the norm. It‚Äôs no longer a luxury, it is the norm. Everything is becoming automated, from cars to coffee machines. Automation is the future of the workforce. Automation, for the most part, is a good thing.Under automation, we can use resources more efficiently, discover new areas to expand into, and take on new roles due to the roles changing.&lt;br&gt;
However, let's talk a little more about what it means to automate a process. With automation, we are talking about elements of a process that no human can do on their own. Things like software maintenance, software updates, repetitive tasks are things that can be automated. So automation then could mean anything from automating a coffee machine to automating a customer support call.&lt;br&gt;
Now, I‚Äôm not going to try and convince you that software is going to replace you. In fact, you likely have a work ethic that is greater than mine. I just think the automation of certain processes can help reduce your workload, especially now that more people expect us to do things like identify a virus or fix an email. Without automation, humans still take up those roles and, therefore, jobs will need to be created to help take care of those repetitive tasks. That creates a whole host of new roles like customer support, sales, and support for customer support.&lt;br&gt;
Another benefit of automation is the more efficient use of the resources you have. Generally, if you can automate something the cost is split between the human user and the machine. If there is a process that is covered by automation, then an almost 50/50 split can take place. All of the resources, time, and costs of setting up and running an automation tool are then being taken care of by the machine.&lt;br&gt;
Want more? Check out the article I wrote on How to get started on automation in your business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-are-there-any-drawbacks-to-automation"&gt;
  &lt;/a&gt;
  4. Are there any drawbacks to automation?
&lt;/h2&gt;

&lt;p&gt;There are some drawbacks to automation. For example, the more automated your business becomes, the less human interaction you‚Äôre going to have with your audience. The more automated your business becomes, the less human interaction you‚Äôre going to have with your audience. It‚Äôs all about balance.Another drawback to automation is that some aspects of customer service, like the human touch, depend on consistency. That tells you something. If you make your automated parts fail sometimes, then your business is going to have echo chambers where repetitive automation will help it get bad feedback from customers again and again. If your automation relies on a lot of approval processes constantly, then every customer interaction is going to require the approval of a human, and that becomes harder and harder as the business becomes more automated.&lt;br&gt;
The good news is that to get your automation right, you need to know two things: size of your audience and social proof. These are factors that help a lot when automating your marketing. Here are some things that you can use to validate that an automation is going to work for your target audience.&lt;br&gt;
One of the very first steps of your automation is picking out measurement tools. This is something you should probably start thinking about before anything else because if you automate something without any measurement, you‚Äôre just going to have a big pile of money sitting in the bank instead of actual profits to be made or conversions to be had.&lt;br&gt;
There are a handful of choices out there, the strategy that splits the difference for a wide audience of businesses is the Hubspot journey map. This gives a pretty clear overview of your current industry, competition, and the major driving factors for your business to make changes. They provide analytics on the accounts that are generating the most data and where you can optimize your marketing, content, and advertising to reach as many prospects as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-how-can-you-overcome-the-drawbacks-of-automation"&gt;
  &lt;/a&gt;
  5. How can you overcome the drawbacks of automation?
&lt;/h2&gt;

&lt;p&gt;Automation can make your life easier, but it can also take away some of the joy of the creative process. For example, instead of playing around with different colour schemes for a website header, you could just have an app that does it for you. The drawbacks of automation include: &lt;br&gt;
In other words, automation is very convenient, but it also has its limits.&lt;br&gt;
The question then is: What do you actually do with automation in your business?&lt;br&gt;
We see it all the time in the marketing world. We have streamers like Adam Taggart on Fullscreen. What are their hard skills? Both are quite impressive. Adam shines when he has his own things to talk about or is leading a conversation about some topic. He also has a habit of bringing up what he has on his mind without filter. It pulls the information into focus and turns dull meetings into something entertaining. Technically, he might be a robot at heart ‚Äî a disembodied spirit channeling his thoughts. Nonetheless, he does an amazing job of keeping his audience engaged and interested.&lt;br&gt;
Adam is a wizard at driving sales. To show just how good he is at this, I recorded a video about SEO and sent it out to my students. Adam reviewed it, commented, and then emailed me back with the link. I copied the video into an email and sent it to one of his clients. Two hours later, he wrote back and said that he thought it was brilliant!&lt;br&gt;
Did you know that there are promo codes in Facebook Messenger right now worth 40% of your first order! That‚Äôs just one of many promo codes in the Messenger app! How did these promo codes get into your brand? Maybe you have a Messenger account, and if you sign in and need to solve a problem, you can use the app to ask for help. And when someone answers you, you can click a button to share that it‚Äôs you that the person is messaging and point them to your own messenger.&lt;/p&gt;

&lt;p&gt;Automation makes Everything simple &lt;br&gt;
Example- A Robot Cleans your house ,Dont have it? &lt;br&gt;
         link if you want one - &lt;/p&gt;

&lt;p&gt;Irobot Amazon India - &lt;a href="https://amzn.to/3bCNRwu"&gt;https://amzn.to/3bCNRwu&lt;/a&gt; &lt;br&gt;
Irobot Amazon Usa   - &lt;a href="https://amzn.to/2S7CtBO"&gt;https://amzn.to/2S7CtBO&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EIkDqfIB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qv0q6epy422v7a1lsh0b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EIkDqfIB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qv0q6epy422v7a1lsh0b.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have provided my Followers a free Ebook in my last Post , do check it out and claim you copy &lt;/p&gt;

</description>
      <category>automation</category>
      <category>beginners</category>
      <category>marketing</category>
      <category>bots</category>
    </item>
    <item>
      <title>Top c√°c ph·∫ßn m·ªÅm di·ªát virus t·ªët nh·∫•t cho Windows 2022</title>
      <author>Joney</author>
      <pubDate>Tue, 18 May 2021 10:56:26 +0000</pubDate>
      <link>https://dev.to/jonynguyen/top-cac-phan-mem-diet-virus-tot-nhat-cho-windows-2022-5459</link>
      <guid>https://dev.to/jonynguyen/top-cac-phan-mem-diet-virus-tot-nhat-cho-windows-2022-5459</guid>
      <description>&lt;p&gt;Nh∆∞ c√°c b·∫°n ƒë√£ bi·∫øt th√¨ ƒë·ªëi v·ªõi m√°y t√≠nh s·ª≠ d·ª•ng h·ªá ƒëi·ªÅu h√†nh windows 10, windows 8/8.1 hay windows 7 th√¨ vi·ªác s·ª≠ d·ª•ng c√°c lo·∫°i ph·∫ßn m·ªÅm nh∆∞ t∆∞·ªùng l·ª≠a, di·ªát virus nh·∫±m b·∫£o v·ªÅ m√°y t√≠nh c·ªßa m√¨nh l√† ƒëi·ªÅu c·∫ßn thi·∫øt ph·∫£i th·ª±c hi·ªán. V√† n·∫øu kh√¥ng bi·∫øt t√¨m ki·∫øm nh·ªØng ph·∫ßn m·ªÅm n√†o th√¨ trong chuy√™n m·ª•c c·ªßa &lt;a href="https://dev.to/"&gt;&lt;b&gt;dev.to&lt;/b&gt;&lt;/a&gt; m√¨nh xin ƒë∆∞·ª£c chia s·∫ª ƒë·∫øn m·ªçi ng∆∞·ªùi v·ªÅ top c√°c ph·∫ßn m·ªÅm di·ªát virus t·ªët nh·∫•t cho Windows 2022&lt;/p&gt;

&lt;h2&gt;10 ph·∫ßn m·ªÅm di·ªát virus t·ªët nh·∫•t cho Windows 2022&lt;/h2&gt;

&lt;h3&gt;1. Bitdefender Antivirus Plus&lt;/h3&gt;

&lt;p&gt;Bitdefender Antivirus Plus&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;Gi√†nh ƒë∆∞·ª£c ƒëi·ªÉm s·ªë n·ªïi b·∫≠t trong c√°c b√†i ki·ªÉm tra ƒë·ªôc l·∫≠p t·∫°i ph√≤ng th√≠ nghi·ªám v√† ki·ªÉm tra kh·∫£ nƒÉng b·∫£o v·ªá web&lt;br&gt;
B·∫£o v·ªá ransomware nhi·ªÅu l·ªõp&lt;br&gt;
C√≥ t√≠nh nƒÉng ch·ªëng theo d√µi (Do Not Track)&lt;br&gt;
C√≥ tr√¨nh qu·∫£n l√Ω m·∫≠t kh·∫©u&lt;br&gt;
C√≥ t√≠nh nƒÉng Banking protection (b·∫£o v·ªá c√°c giao d·ªãch t√†i ch√≠nh tr·ª±c tuy·∫øn, nh∆∞ mua s·∫Øm hay thanh to√°n qua ng√¢n h√†ng)&lt;br&gt;
Cung c·∫•p m·ªôt m·∫°ng ri√™ng ·∫£o (VPN)&lt;br&gt;
Nhi·ªÅu t√≠nh nƒÉng b·ªï sung t·∫≠p trung v√†o b·∫£o m·∫≠t.&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;Truy c·∫≠p VPN kh√¥ng gi·ªõi h·∫°n y√™u c·∫ßu ƒëƒÉng k√Ω ri√™ng&lt;br&gt;
N·∫øu t·∫•t c·∫£ c√°c bi·ªán ph√°p b·∫£o v·ªá th·ªùi gian th·ª±c b·ªã v√¥ hi·ªáu h√≥a, nh·ªØng t√≠nh nƒÉng d√†nh ri√™ng cho ransomware ƒë√£ b·ªè qua m·ªôt m·∫´u kh√¥ng ph·ªï bi·∫øn.&lt;/p&gt;

&lt;h3&gt;2. Kaspersky Anti-Virus&lt;/h3&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;Gi√†nh ƒë∆∞·ª£c ƒëi·ªÉm s·ªë ho√†n h·∫£o v√† g·∫ßn nh∆∞ ho√†n h·∫£o t·ª´ 4 ph√≤ng th·ª≠ nghi·ªám ƒë·ªôc l·∫≠p&lt;br&gt;
ƒê·∫°t ƒëi·ªÉm ho√†n h·∫£o trong b√†i ki·ªÉm tra b·∫£o v·ªá ch·ªëng phishing&lt;br&gt;
ƒêi·ªÉm s·ªë t·ªët trong c√°c b√†i ki·ªÉm tra ch·∫∑n &lt;a href="https://bloghotro.com/phan-mem/"&gt;ph·∫ßn m·ªÅm&lt;/a&gt; v√† URL ƒë·ªôc h·∫°i&lt;br&gt;
C√≥ h·ªó tr·ª£ qua ƒëi·ªán tho·∫°i ho·∫∑c tr√≤ chuy·ªán tr·ª±c ti·∫øp&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;C√°c t√≠nh nƒÉng qu√©t b·ªï sung ch·ªìng ch√©o l·∫´n nhau ƒë√°ng k·ªÉ&lt;/p&gt;

&lt;h3&gt;3. Webroot SecureAnywhere AntiVirus&lt;/h3&gt;

&lt;p&gt;Webroot SecureAnywhere AntiVirus&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒê·∫°t ƒëi·ªÉm s·ªë ho√†n h·∫£o trong b√†i ki·ªÉm tra b·∫£o v·ªá ch·ªëng ph·∫ßn m·ªÅm ƒë·ªôc h·∫°i&lt;br&gt;
Kh·∫£ nƒÉng ch·ªëng phishing r·∫•t t·ªët&lt;br&gt;
C√≥ t√≠nh nƒÉng b·∫£o v·ªá ch·ªëng ransomware&lt;br&gt;
Kh√¥ng ti√™u t·ªën nhi·ªÅu t√†i nguy√™n h·ªá th·ªëng.&lt;br&gt;
Qu√©t nhanh, k√≠ch th∆∞·ªõc nh·ªè&lt;br&gt;
S·ªü h·ªØu nhi·ªÅu t√≠nh nƒÉng ti√™n ti·∫øn&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;K·∫øt qu·∫£ th·ª≠ nghi·ªám h·∫°n ch·∫ø do k·ªπ thu·∫≠t ph√°t hi·ªán kh√¥ng gi·ªëng b√¨nh th∆∞·ªùng&lt;br&gt;
ƒê√£ b·ªè l·ª° m·ªôt m·∫´u ransomware ƒë∆∞·ª£c s·ª≠a ƒë·ªïi th·ªß c√¥ng ƒë·∫∑c bi·ªát trong th·ª≠ nghi·ªám.&lt;/p&gt;

&lt;h3&gt;4. McAfee AntiVirus Plus&lt;/h3&gt;

&lt;p&gt;McAfee AntiVirus Plus&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;B·∫£o v·ªá cho m·ªçi thi·∫øt b·ªã Windows, macOS, Android v√† iOS trong gia ƒë√¨nh&lt;br&gt;
ƒêi·ªÉm s·ªë t·ªët trong c√°c b√†i ki·ªÉm tra th·ª±c t·∫ø&lt;br&gt;
ƒê·∫°t ƒëi·ªÉm xu·∫•t s·∫Øc trong b√†i ki·ªÉm tra ch·ªëng phishing&lt;br&gt;
Bao g·ªìm t√≠nh nƒÉng b·∫£o v·ªá Ransom Guard, PC Boost v√† nhi·ªÅu t√≠nh nƒÉng b·ªï sung kh√°c.&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;Ransom Guard ƒë√£ b·ªè l·ª° m·ªôt s·ªë m·∫´u ransomware trong th·ª±c t·∫ø&lt;br&gt;
T√≠nh nƒÉng tƒÉng t·ªëc web PC Boost v·∫´n ch·ªâ ho·∫°t ƒë·ªông trong Chrome&lt;br&gt;
Vi·ªác qu√©t to√†n b·ªô r·∫•t ch·∫≠m tr√™n Windows&lt;br&gt;
Phi√™n b·∫£n Mac √≠t t√≠nh nƒÉng h∆°n Windows ho·∫∑c Android&lt;br&gt;
V·∫´n c√≤n √≠t t√≠nh nƒÉng cho iOS&lt;/p&gt;

&lt;h3&gt;5. ESET NOD32 Antivirus&lt;/h3&gt;

&lt;p&gt;ESET NOD32 Antivirus&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒê·∫°t ƒëi·ªÉm r·∫•t t·ªët t·ª´ c√°c ph√≤ng th√≠ nghi·ªám ƒë·ªôc l·∫≠p&lt;br&gt;
ƒêi·ªÉm s·ªë t·ªët trong c√°c b√†i ki·ªÉm tra th·ª±c t·∫ø&lt;br&gt;
Th√†nh ph·∫ßn HIPS ch·∫∑n ƒë∆∞·ª£c c√°c cu·ªôc t·∫•n c√¥ng exploit&lt;br&gt;
Tr√¨nh qu√©t UEFI t√¨m th·∫•y ph·∫ßn m·ªÅm ƒë·ªôc h·∫°i trong firmware&lt;br&gt;
Kh·∫£ nƒÉng ƒëi·ªÅu khi·ªÉn thi·∫øt b·ªã to√†n di·ªán&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;Kh·∫£ nƒÉng b·∫£o v·ªá ch·ªëng phishing ch·ªâ ·ªü m·ª©c ch·∫•p nh·∫≠n ƒë∆∞·ª£c&lt;br&gt;
Kh·∫£ nƒÉng ƒëi·ªÅu khi·ªÉn thi·∫øt b·ªã qu√° ph·ª©c t·∫°p ƒë·ªëi v·ªõi h·∫ßu h·∫øt ng∆∞·ªùi d√πng.&lt;/p&gt;

&lt;h3&gt;6. Norton AntiVirus Plus&lt;/h3&gt;

&lt;p&gt;Norton AntiVirus Plus&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒêi·ªÉm s·ªë xu·∫•t s·∫Øc trong c√°c b√†i ki·ªÉm tra th·ª≠ nghi·ªám ƒë·ªôc l·∫≠p v√† ki·ªÉm tra ri√™ng&lt;br&gt;
C√≥ kh·∫£ nƒÉng b·∫£o v·ªá d·ªØ li·ªáu ch·ªëng l·∫°i ransomware&lt;br&gt;
Bao g·ªìm sao l∆∞u tr·ª±c tuy·∫øn, t∆∞·ªùng l·ª≠a, b·∫£o v·ªá ch·ªëng t·∫•n c√¥ng exploit, qu·∫£n l√Ω m·∫≠t kh·∫©u v√† c√°c t√≠nh nƒÉng b·ªï sung kh√°c.&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;T√≠nh nƒÉng Data Protector (B·∫£o v·ªá d·ªØ li·ªáu) kh√° k√©m khi th·ª≠ nghi·ªám&lt;br&gt;
ƒê·∫Øt ti·ªÅn&lt;br&gt;
Kh√¥ng c√≥ m·ª©c gi√° t·ªët khi mua nhi·ªÅu gi·∫•y ph√©p&lt;/p&gt;

&lt;h3&gt;7. Trend Micro Antivirus+ Security&lt;/h3&gt;

&lt;p&gt;Trend Micro Antivirus+ Security&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒêi·ªÉm s·ªë tuy·ªát v·ªùi trong c√°c b√†i ki·ªÉm tra ch·∫∑n URL ƒë·ªôc h·∫°i v√† ch·ªëng phishing&lt;br&gt;
B·∫£o v·ªá ransomware nhi·ªÅu l·ªõp&lt;br&gt;
T√≠nh nƒÉng Pay Guard b·∫£o v·ªá c√°c giao d·ªãch tr·ª±c tuy·∫øn&lt;br&gt;
Nhi·ªÅu t√≠nh nƒÉng b·ªï sung&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒê·∫°t ƒëi·ªÉm kh√° k√©m trong b√†i ki·ªÉm tra b·∫£o v·ªá ch·ªëng l·∫°i ph·∫ßn m·ªÅm ƒë·ªôc h·∫°i th·ª±c t·∫ø&lt;br&gt;
Pay Guard kh√¥ng b·∫£o v·ªá m·ªôt c√°ch nh·∫•t qu√°n&lt;br&gt;
B·ªô l·ªçc th∆∞ r√°c ch·ªâ ho·∫°t ƒë·ªông v·ªõi Outlook&lt;br&gt;
Kh√¥ng c√≥ gi·∫•y ph√©p chung cho nhi·ªÅu thi·∫øt b·ªã.&lt;/p&gt;

&lt;h3&gt;8. Emsisoft Anti-Malware&lt;/h3&gt;

&lt;p&gt;Emsisoft Anti-Malware&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒê·∫°t ƒëi·ªÉm t·ªët trong b√†i ki·ªÉm tra b·∫£o v·ªá ch·ªëng ph·∫ßn m·ªÅm ƒë·ªôc h·∫°i&lt;br&gt;
Kh·∫£ nƒÉng ph√°t hi·ªán h√†nh vi ƒë√°ng ng·ªù ƒë√£ ch·∫∑n th√†nh c√¥ng ransomware&lt;br&gt;
Cloud Console cho ph√©p qu·∫£n l√Ω t·ª´ xa ƒë·∫ßy ƒë·ªß&lt;br&gt;
C√≥ ti·ªán √≠ch m·ªü r·ªông m·ªõi c√≥ th·ªÉ ph√°t hi·ªán phishing.&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;H·∫ßu nh∆∞ kh√¥ng c√≥ ƒëi·ªÉm s·ªë ghi l·∫°i t·ª´ c√°c ph√≤ng th√≠ nghi·ªám ƒë·ªôc l·∫≠p&lt;br&gt;
T√≠nh nƒÉng b·∫£o v·ªá ch·ªëng phishing kh√¥ng d√†nh cho t·∫•t c·∫£ c√°c tr√¨nh duy·ªát&lt;br&gt;
Cloud Console c√≥ th·ªÉ qu√° ph·ª©c t·∫°p ƒë·ªëi v·ªõi m·ªôt s·ªë ng∆∞·ªùi&lt;/p&gt;

&lt;h3&gt;9. F-Secure Anti-Virus&lt;/h3&gt;

&lt;p&gt;F-Secure Anti-Virus&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒê·∫°t ƒëi·ªÉm s·ªë t·ªët trong c√°c b√†i ki·ªÉm tra ph√≤ng th√≠ nghi·ªám ƒë·ªôc l·∫≠p v√† c√°c b√†i ki·ªÉm tra th·ª±c t·∫ø&lt;br&gt;
T√≠nh nƒÉng DeepGuard d·ª±a tr√™n h√†nh vi ph√°t hi·ªán ph·∫ßn m·ªÅm ƒë·ªôc h·∫°i ho√†n to√†n m·ªõi, bao g·ªìm c·∫£ ransomware&lt;br&gt;
Kh·∫£ nƒÉng b·∫£o v·ªá m·∫°ng ti√™n ti·∫øn&lt;br&gt;
Giao di·ªán h·ª£p l√Ω, ƒë∆°n gi·∫£n&lt;br&gt;
Kh√¥ng t·ªën k√©m&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;Kh·∫£ nƒÉng b·∫£o v·ªá ch·ªëng l·∫°i ransomware th·∫•t b·∫°i tr∆∞·ªõc m·ªôt m·∫´u th·ª±c t·∫ø trong qu√° tr√¨nh th·ª≠ nghi·ªám&lt;br&gt;
Kh√¥ng c√≥ th√†nh ph·∫ßn ch·ªëng phishing&lt;/p&gt;

&lt;h3&gt;10. Malwarebytes Premium&lt;/h3&gt;

&lt;p&gt;Malwarebytes Premium&lt;/p&gt;

&lt;p&gt;∆Øu ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒê·∫°t ƒëi·ªÉm s·ªë tuy·ªát v·ªùi v·ªÅ kh·∫£ nƒÉng b·∫£o v·ªá ch·ªëng malware v√† ki·ªÉm tra ch·∫∑n URL ƒë·ªôc h·∫°i trong c√°c b√†i ki·ªÉm tra th·ª±c t·∫ø&lt;br&gt;
Bao g·ªìm kh·∫£ nƒÉng b·∫£o v·ªá ch·ªëng l·∫°i c√°c cu·ªôc t·∫•n c√¥ng exploit, ransomware, ph√°t hi·ªán d·ª±a tr√™n h√†nh vi&lt;br&gt;
Nh∆∞·ª£c ƒëi·ªÉm:&lt;/p&gt;

&lt;p&gt;ƒêi·ªÉm ki·ªÉm tra ph√≤ng th√≠ nghi·ªám ƒë·ªôc l·∫≠p √≠t v√† kh√° k√©m&lt;br&gt;
Kh·∫£ nƒÉng b·∫£o v·ªá ch·ªëng phishing kh√¥ng hi·ªáu qu·∫£&lt;br&gt;
K·∫øt qu·∫£ ph√°t hi·ªán ransomware kh√° r·ªëi&lt;/p&gt;

&lt;p&gt;K·∫øt lu·∫≠n: Tr√™n ƒë√¢y l√† t·ªïng h·ª£p pop c√°c &lt;a href="https://bloghotro.com/phan-mem-diet-virus/"&gt;ph·∫ßn m·ªÅm di·ªát virus&lt;/a&gt; t·ªët nh·∫•t cho Windows 2021, m·ªçi ng∆∞·ªùi c√≥ th·ªÉ tham kh·∫£o nhi·ªÅu h∆°n n·ªØa c√°c d·∫°ng ph·∫ßn m·ªÅm n√†y t·∫°i blog h·ªó tr·ª£ th√¥ng qua ƒë·ªãa ch·ªâ website bloghotro.com ƒë·ªÉ c√≥ th√™m nhi·ªÅu th√¥ng tin h∆°n n·ªØa nh√©&lt;/p&gt;

</description>
      <category>bloghotro</category>
    </item>
  </channel>
</rss>
