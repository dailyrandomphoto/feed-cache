<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Login Without Email and Password | JavaScript</title>
      <author>Rajesh Joshi</author>
      <pubDate>Sun, 02 Jan 2022 05:43:04 +0000</pubDate>
      <link>https://dev.to/rajeshj3/login-without-email-and-password-javascript-38le</link>
      <guid>https://dev.to/rajeshj3/login-without-email-and-password-javascript-38le</guid>
      <description>&lt;p&gt;Whether a project is small, medium, or huge, it's most common necessity is &lt;code&gt;authentication&lt;/code&gt;. In few cases, it is just required to not to ask user for credentials, but just to log user in for proper authentication.&lt;/p&gt;

&lt;p&gt;The best way to solve this problem is to use Firebase's Anonymous Authentication.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Here's the YouTube video of me, demonstrate the same&lt;/em&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Wwl2bsvGeyE"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#index"&gt;
  &lt;/a&gt;
  INDEX
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create React Project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;:&lt;/em&gt; I'll recommend you, to use the &lt;code&gt;yarn&lt;/code&gt;, but it is completely up to you.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-1-create-react-app"&gt;
  &lt;/a&gt;
  &lt;em&gt;Step 1.&lt;/em&gt; Create React App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EQtQCT1B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7cmefwuu2xqzgnsfl57n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EQtQCT1B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7cmefwuu2xqzgnsfl57n.png" alt="Create React App" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-add-firebase"&gt;
  &lt;/a&gt;
  &lt;em&gt;Step 2.&lt;/em&gt; Add firebase
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zE1KalZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vkch2ybyq7xogdcdn4k6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zE1KalZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vkch2ybyq7xogdcdn4k6.png" alt="yarn add firebase" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It'll be reflected in &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ubzGrdfi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0b93ckkmncg9huqrh4v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ubzGrdfi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0b93ckkmncg9huqrh4v.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-create-raw-firebaseconfigjson-endraw-file"&gt;
  &lt;/a&gt;
  &lt;em&gt;Step 3.&lt;/em&gt; Create &lt;code&gt;firebaseConfig.json&lt;/code&gt; file
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r0h5q-QI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0szvxu3bxpoqzkpm5fh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r0h5q-QI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0szvxu3bxpoqzkpm5fh.png" alt="Create firebaseConfig.json" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-write-raw-appjs-endraw-"&gt;
  &lt;/a&gt;
  &lt;em&gt;Step 4.&lt;/em&gt; Write &lt;code&gt;app.js&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1R-Jx0Gp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iigs789n5gij1qpl5po1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1R-Jx0Gp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iigs789n5gij1qpl5po1.png" alt="Write  raw `app.js` endraw " width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, create Flexbox&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X2CAB82D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yxua6ohc4nn8nvmeg2cn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X2CAB82D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yxua6ohc4nn8nvmeg2cn.png" alt="create Flexbox" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add HTML form&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jTyEVHRr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bcjrdd34efjnaysdptpx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jTyEVHRr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bcjrdd34efjnaysdptpx.png" alt="form" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;define &lt;code&gt;onSubmit&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u7AmswQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4keu9l6w9o8d4myu2h1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u7AmswQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4keu9l6w9o8d4myu2h1.png" alt="onSubmit" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Import further modules&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4nR5zPbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93en4fvhwy3o05lsuip7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4nR5zPbw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93en4fvhwy3o05lsuip7.png" alt="imports" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, extend &lt;code&gt;handleSubmit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j1dIdsSJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tq3vx9y8cxcgm8w65qpb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j1dIdsSJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tq3vx9y8cxcgm8w65qpb.png" alt="extend handleSubmit" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Write, responses&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_yB4stZ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kiigbjrd6pxg0kxomlb9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_yB4stZ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kiigbjrd6pxg0kxomlb9.png" alt="responses" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-run-the-server"&gt;
  &lt;/a&gt;
  &lt;em&gt;Step 5.&lt;/em&gt; Run the server
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4u3E62AA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fsh6vtywpa146bpsc7u6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4u3E62AA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fsh6vtywpa146bpsc7u6.png" alt="Run the server" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;click &lt;code&gt;Login&lt;/code&gt; button and Open developer console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JElPEvwv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dc9q72j3smncsef2hs1f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JElPEvwv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dc9q72j3smncsef2hs1f.png" alt="Login" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;Applications &amp;gt; IndexedDB&lt;/code&gt; you'll see user credentials saved.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6iObIf5a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cailm0m2wge26224o8gx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6iObIf5a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cailm0m2wge26224o8gx.png" alt="IndexedDB" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-6-have-a-look-in-firebase-console"&gt;
  &lt;/a&gt;
  &lt;em&gt;Step 6.&lt;/em&gt; Have a look in Firebase Console
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y52riMsY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gjxgxng1c2v82tr0gu6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y52riMsY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gjxgxng1c2v82tr0gu6.png" alt="Firebase Console" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Hurray! You just learned how to set up API end-points for Login &lt;code&gt;Without Email and Password&lt;/code&gt; in &lt;code&gt;JavaScript&lt;/code&gt;.&lt;/p&gt;




&lt;p&gt;I hope, you guys liked this quick tutorial. If so, then please don't forget to drop a Like ❤️&lt;/p&gt;

&lt;p&gt;And also, help me reach &lt;strong&gt;1k Subscribers&lt;/strong&gt; 🤩, on my &lt;a href="https://www.youtube.com/channel/UCCO4jIqmQVFDmVeeaAO5obA"&gt;YouTube channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy Coding! 😃💻&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>firebase</category>
    </item>
    <item>
      <title>Basic Git cheat sheet (yet another)</title>
      <author>Gourav Singh Rawat</author>
      <pubDate>Sun, 02 Jan 2022 04:53:18 +0000</pubDate>
      <link>https://dev.to/seek4samurai/basic-git-cheat-sheet-yet-another-3551</link>
      <guid>https://dev.to/seek4samurai/basic-git-cheat-sheet-yet-another-3551</guid>
      <description>&lt;h2&gt;
  &lt;a href="#yet-another-git-cheat-sheet"&gt;
  &lt;/a&gt;
  Yet another Git cheat sheet.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;This sheet only contains the basics of git like committing, viewing, cloning, removing, etc&lt;/strong&gt;&lt;br&gt;
Well to guys who gonna comment down, look at this duuuude...posting another cheat sheet, just move on bro.&lt;br&gt;
Anyways I hope you'll like this cheat sheet &amp;lt;3&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-snapshots"&gt;
  &lt;/a&gt;
  Creating Snapshots
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Initializing a Repository&lt;/strong&gt;&lt;br&gt;
Initializing - git init&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Staging Changes/Files&lt;/strong&gt;&lt;br&gt;
Stages a single file - git add file1.js &lt;br&gt;
Stages multiple files - git add file1.js file2.js&lt;br&gt;
Stages with a pattern - git add *.js&lt;br&gt;
Stages the current directory and all its content - git add .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Unstaging Changes/Files&lt;/strong&gt;&lt;br&gt;
Copies the last version from repo - git restore --staged file.js&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Viewing Status&lt;/strong&gt;&lt;br&gt;
Full status - git status&lt;br&gt;
Short status - git status -s&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Viewing the staged/unstaged changes&lt;/strong&gt;&lt;br&gt;
Shows unstaged changes - git diff&lt;br&gt;
Shows staged changes - git diff --staged&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skipping the staging area&lt;/strong&gt;&lt;br&gt;
git commit -am “Message”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Removing files&lt;/strong&gt;&lt;br&gt;
Removes from working directory and staging area - git rm file1.js&lt;br&gt;
Removes from staging area only - git rm --cached file1.js&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Renaming or moving files&lt;/strong&gt;&lt;br&gt;
git mv file1.js file1.txt (first old name, new name)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#browsing-history"&gt;
  &lt;/a&gt;
  Browsing History
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Viewing history&lt;/strong&gt;&lt;br&gt;
Full history - git log &lt;br&gt;
Full history from oldest to newest - git log --reverse&lt;br&gt;
Shows the list of last modified files - git log --stat&lt;br&gt;
Shows the actual changes - git log --patch&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Viewing the history of a file&lt;/strong&gt;&lt;br&gt;
Shows the commits that touched file.txt - git log file.txt &lt;br&gt;
Shows statistics (the number of changes) for file.txt - git log --stat file.txt&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Filtering history&lt;/strong&gt;&lt;br&gt;
Show last 3 changes - git log -3&lt;br&gt;
Filter by author - git log --author="Gourav"&lt;br&gt;
Filter by date - git log --before="2022-01-20"&lt;br&gt;
Filter by files modified (commit in which there are changes in file.txt) - git log file.txt&lt;br&gt;
Show Commits with “Fixed” in their message - git log --grep=“Fixed”&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#branching-amp-merging"&gt;
  &lt;/a&gt;
  Branching &amp;amp; Merging
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Managing branches&lt;/strong&gt;&lt;br&gt;
Creates a new branch called alpha - git branch alpha&lt;br&gt;
Switching branch to alpha - git switch alpha&lt;br&gt;
Deleting branch alpha - git branch -d alpha&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Merging&lt;/strong&gt;&lt;br&gt;
Merges the alpha branch into the current branch - git merge alpha&lt;br&gt;
Aborting merge - git merge --abort&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Viewing the merged branches&lt;/strong&gt;&lt;br&gt;
Shows the merged branches - git branch --merged &lt;br&gt;
Shows the unmerged branches - git branch --no-merged &lt;/p&gt;

&lt;p&gt;If you think there's something wrong or I missed related to these types, please comment below. Thanks.&lt;br&gt;
&lt;em&gt;Hope you found this helpful &amp;lt;3&lt;/em&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>git</category>
    </item>
    <item>
      <title>Google Solution Challenge 2022 Announced 🤩</title>
      <author>YONKEU KWEYA STEVE JUNIOR</author>
      <pubDate>Sun, 02 Jan 2022 04:52:19 +0000</pubDate>
      <link>https://dev.to/yokwejuste/google-solution-challenge-2022-announced-3l28</link>
      <guid>https://dev.to/yokwejuste/google-solution-challenge-2022-announced-3l28</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-the-google-solution-challenge-all-about"&gt;
  &lt;/a&gt;
  What is The Google Solution Challenge all About.
&lt;/h1&gt;

&lt;p&gt;Annually, each January, the Google team enters a partnership with the &lt;a href="https://www.un.org/"&gt;United Nations&lt;/a&gt; aimed at solving some worldly faced problems all known as sustainable development goals using or with the help of one or more &lt;a href="https://developers.google.com/products"&gt;Google technologies&lt;/a&gt;, they are altogether 13 in number with some cool prices without forgetting about the recent Chrome books.&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2bRY-wqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641091466167/pLotNusCV.png" alt="image.png" width="880" height="495"&gt;&lt;br&gt;
&lt;/center&gt;
&lt;br&gt;
Each sustainable development goal is to be understood by the candidate and understood by the candidate and a solution to the problem is being built, depending on the candidate's preference it can be a robot, software, website, or even a mobile app.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
While speaking about an app, I just remember something amazing that happened last year and made Google itself surprised, let's dive into the epic events of the solution challenge of 2021.
&lt;h1&gt;
  &lt;a href="#something-epic-from-last-year-session"&gt;
  &lt;/a&gt;
  Something Epic from last year session
&lt;/h1&gt;

&lt;p&gt;Teams upon teams have been participating in this challenge but last year we got amazed by &lt;strong&gt;Team Flow&lt;/strong&gt; from Cameroon, all students from the &lt;a href="https://uniba.com"&gt;University Of Bamenda&lt;/a&gt; in Cameroon developed a mobile application to help out the Bambili community facing serious portable water sources absence during the dry season. And by so doing gets an honorable mention from the google team.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#presentation-of-the-flow-app"&gt;
  &lt;/a&gt;
  Presentation of the Flow app💧
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-flow-just-go-with-the-flow"&gt;
  &lt;/a&gt;
  The Flow- Just go with the flow💧
&lt;/h3&gt;


&lt;center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PVUyHfPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641093567954/ScOqYoaqh.png" alt="image.png" width="880" height="495"&gt;&lt;br&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
From a team of 4 young talented and incredible youths, TeamFluid, the flow app came about as a result of the persistent water crises in Bambili, Cameroon. Due to the high influx of students into this locality, water shortages have been the order of the day.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
The Flow app contains a map where different portable water sources in Bambili are identified as green and red points, depending on the condition of the tap(flowing or not) based on votes by the student community.
&lt;h3&gt;
  &lt;a href="#good-to-know"&gt;
  &lt;/a&gt;
  Good to know
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#key-features-of-flow"&gt;
  &lt;/a&gt;
  Key Features of Flow
&lt;/h4&gt;

&lt;p&gt;Locate all clean water sources around you by radius.&lt;br&gt;
Show approximate distance from user to a water source.&lt;br&gt;
Get directions to the water source.&lt;br&gt;
Save your favorite water sources.&lt;br&gt;
Indicate if water is flowing at a water source or not.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
It's available on &lt;a href="https://play.google.com/store/apps/details?id=com.team_fluid.flow"&gt;PlayStore💧&lt;/a&gt;, download, and get a try.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/Developer-Student-Clubs-UBa/Flow"&gt;Flow is an open-source project on Github&lt;/a&gt;, go make a fork and pull request, I guess they will be happy to hear from you.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#solution-challenge-2022"&gt;
  &lt;/a&gt;
  Solution Challenge 2022
&lt;/h1&gt;

&lt;p&gt;Back to the session of this year, a global kickoff event has been scheduled for January 19, 2022, when it will be exactly 2:00 pm GMT. I guess will be something sweet is to happen by that day.&lt;/p&gt;

&lt;p&gt;The Google developers team made a tweet recently about that:&lt;br&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;📣 Attention students! RSVP for the Solution Challenge 2022 kickoff event on January 19! → &lt;a href="https://t.co/DAfJUXcMlp"&gt;&lt;/a&gt;&lt;a href="https://t.co/DAfJUXcMlp"&gt;https://t.co/DAfJUXcMlp&lt;/a&gt;&lt;br&gt;&lt;br&gt;New to the Solution Challenge? Each year, university students are invited to support the &lt;a href="https://twitter.com/UN?ref_src=twsrc%5Etfw"&gt;@UN&lt;/a&gt;’s Sustainable Development Goals using &lt;a href="https://twitter.com/Google?ref_src=twsrc%5Etfw"&gt;@Google&lt;/a&gt; tech.&lt;br&gt;&lt;br&gt;🎉 See you there! &lt;a href="https://t.co/5KvkRIstVl"&gt;pic.twitter.com/5KvkRIstVl&lt;/a&gt;&lt;/p&gt;— Google Developers (@googledevs) &lt;a href="https://twitter.com/googledevs/status/1476251707038437384?ref_src=twsrc%5Etfw"&gt;December 29, 2021&lt;/a&gt;
&lt;/blockquote&gt; 
&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Get more information about the &lt;a href="https://developers.google.com/community/gdsc-solution-challenge"&gt;Google Solution Challenge&lt;/a&gt; and have a try this year to propose a solution to help out your own community with.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>opensource</category>
      <category>flow</category>
    </item>
    <item>
      <title>Top 5 Most Popular Backend Framework for 2022</title>
      <author>virender</author>
      <pubDate>Sun, 02 Jan 2022 04:27:49 +0000</pubDate>
      <link>https://dev.to/virendebro/top-5-most-popular-backend-framework-for-2022-4g6e</link>
      <guid>https://dev.to/virendebro/top-5-most-popular-backend-framework-for-2022-4g6e</guid>
      <description>&lt;p&gt;&lt;strong&gt;Top 5 Most Popular Backend Framework for 2022&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this blog i am going to tell you Top 5 Most Popular Backend Framework for 2022. So Lets start this article:-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Laravel&lt;/li&gt;
&lt;li&gt;Express.js&lt;/li&gt;
&lt;li&gt;Django&lt;/li&gt;
&lt;li&gt;Ruby on Rails&lt;/li&gt;
&lt;li&gt;Flask&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can read the whole blog here👇&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2022/01/top-5-most-popular-backend-framework.html"&gt;Click Here&lt;/a&gt; to see this post in detailed.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thankyou&lt;/em&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>django</category>
      <category>ruby</category>
      <category>javascript</category>
    </item>
    <item>
      <title>No way did Github Copilot just Rickroll me!</title>
      <author>Virej Dasani</author>
      <pubDate>Sun, 02 Jan 2022 04:22:07 +0000</pubDate>
      <link>https://dev.to/virejdasani/no-way-did-github-copilot-just-rickroll-me-4g02</link>
      <guid>https://dev.to/virejdasani/no-way-did-github-copilot-just-rickroll-me-4g02</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/EF6laCaSQfo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Please subscribe for more &amp;lt;3&lt;/p&gt;

</description>
      <category>github</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>python</category>
    </item>
    <item>
      <title>3 Tricks on VS Code</title>
      <author>Marcos RJJunior</author>
      <pubDate>Sun, 02 Jan 2022 04:21:48 +0000</pubDate>
      <link>https://dev.to/marcosrjjunior/3-tricks-on-vs-code-36d0</link>
      <guid>https://dev.to/marcosrjjunior/3-tricks-on-vs-code-36d0</guid>
      <description>&lt;p&gt;I've been using the first one since the last update.&lt;/p&gt;

&lt;p&gt;The options are very minimal, but really helpful !! let me know how do you feel using them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enabling-bracket-pair-colorization"&gt;
  &lt;/a&gt;
  Enabling bracket pair colorization
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"editor.bracketPairColorization.enabled"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1xcHQ-LG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://marcosrjjunior.com/_next/image%3Furl%3D%252Fimages%252Fposts%252F3-tricks-on-vscode%252Fpair-colorization.png%26w%3D1080%26q%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1xcHQ-LG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://marcosrjjunior.com/_next/image%3Furl%3D%252Fimages%252Fposts%252F3-tricks-on-vscode%252Fpair-colorization.png%26w%3D1080%26q%3D100" alt="bracket pair colorization" width="880" height="552"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enabling-auto-complete-your-sentence"&gt;
  &lt;/a&gt;
  Enabling Auto complete your sentence
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"editor.suggest.preview"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xscf-T4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://marcosrjjunior.com/_next/image%3Furl%3D%252Fimages%252Fposts%252F3-tricks-on-vscode%252Fautocomplete.png%26w%3D1080%26q%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xscf-T4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://marcosrjjunior.com/_next/image%3Furl%3D%252Fimages%252Fposts%252F3-tricks-on-vscode%252Fautocomplete.png%26w%3D1080%26q%3D100" alt="auto complete sentence" width="880" height="374"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sorting-code"&gt;
  &lt;/a&gt;
  Sorting code
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"shift+alt+s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editor.action.sortLinesAscending"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#running-multiple-actions-using-macros"&gt;
  &lt;/a&gt;
  Running multiple actions using macros
&lt;/h2&gt;

&lt;p&gt;Because this is still not native feature, I'm using the macros extension.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"shift+alt+f"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"command"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"macros.fixDocumentAndSort"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"when"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"editorHasDocumentFormattingProvider &amp;amp;&amp;amp; editorTextFocus &amp;amp;&amp;amp; !editorReadonly &amp;amp;&amp;amp; !inCompositeEditor"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"macros"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslintFixAndFormatDocument"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"eslint.executeAutofix"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"editor.action.formatDocument"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this binding, vscode is performing two actions&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;formatting the document&lt;/li&gt;
&lt;li&gt;fixing eslint issues.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vscode</category>
      <category>vscodesettings</category>
      <category>vscodekeybindings</category>
    </item>
    <item>
      <title>Implementing a theme switcher using javascript</title>
      <author>Marcos RJJunior</author>
      <pubDate>Sun, 02 Jan 2022 04:06:47 +0000</pubDate>
      <link>https://dev.to/marcosrjjunior/implementing-a-theme-switcher-using-javascript-347d</link>
      <guid>https://dev.to/marcosrjjunior/implementing-a-theme-switcher-using-javascript-347d</guid>
      <description>&lt;p&gt;In this simple tutorial you are going to learn how to implement a theme switcher for your website using CSS and Javascript.&lt;/p&gt;

&lt;p&gt;Let's start by creating a simple HTML structure.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Simple theme switcher&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"./style.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Simple theme switcher&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

      &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is your first paragraph&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And a simple CSS to start, just to prepare the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we are going to create a button that will trigger the theme.&lt;/p&gt;

&lt;p&gt;We can start with a dark-theme button and a script that will include a data-theme attribute to the body element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h5&amp;gt;&lt;/span&gt;Theme:&lt;span class="nt"&gt;&amp;lt;/h5&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;"switchTheme('dark')"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Dark&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;switchTheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data-theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have to implement the themes.&lt;/p&gt;

&lt;p&gt;we start by creating the &lt;strong&gt;:root&lt;/strong&gt; variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--white&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#FFFFFF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--black&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="py"&gt;--gray-100&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#EEEEEE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--gray-800&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#1c1c1c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--blue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#0000b8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* ... */&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--white&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--black&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's also include other themes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;"switchTheme('light')"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Light&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;"switchTheme('dark')"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Dark&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;"switchTheme('blue')"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Blue&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;data-theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;'light'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--white&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--black&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;data-theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;'dark'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--gray-800&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--gray-100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;data-theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;'blue'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--blue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--white&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should now be able to see the buttons and switch to the selected theme, but the theme is reset to the default theme when reloading the page. In the next section we will store that selected theme on localStorage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#storing-theme-on-localstorage"&gt;
  &lt;/a&gt;
  Storing theme on localStorage
&lt;/h2&gt;

&lt;p&gt;Now let's store the selected theme, so we can keep the style even if the user reload the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;saveTheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;loadTheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;setTheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data-theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;switchTheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;saveTheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;loadTheme&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;setTheme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it.&lt;/p&gt;




&lt;p&gt;Now challenge for you 🤔.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Implement a toggle switcher from light to dark theme using only one button. You can use emoji to identify the states ☀️ and 🌙.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>darktheme</category>
      <category>themeswitch</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Public Solving: Caesar decipher in JavaScript</title>
      <author>Chris Bongers</author>
      <pubDate>Sun, 02 Jan 2022 04:06:10 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/public-solving-caesar-decipher-in-javascript-4n7i</link>
      <guid>https://dev.to/dailydevtips1/public-solving-caesar-decipher-in-javascript-4n7i</guid>
      <description>&lt;p&gt;Some kid elves are being naughty and sending themselves encrypted messages during elf class.&lt;/p&gt;

&lt;p&gt;Santa has asked us to decrypt these messages to see what's happening.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Caesar_cipher"&gt;Caesar cipher&lt;/a&gt; is pretty easy to understand. It's basically the alphabet but offset with an x amount of characters.&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;abc 
// shift 1
bcd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we shift the letters up by the shift amount.&lt;/p&gt;

&lt;p&gt;To decipher a message, we have to do the opposite.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thinking-about-the-solution"&gt;
  &lt;/a&gt;
  Thinking about the solution
&lt;/h2&gt;

&lt;p&gt;At first, I started thinking about providing the alphabet as the shifted version and then mapping using that.&lt;br&gt;
But then I realized using the charCode might actually be a more straightforward solution.&lt;/p&gt;

&lt;p&gt;We used the charCode for &lt;a href="https://daily-dev-tips.com/posts/public-solving-hacking-santas-password/"&gt;hacking Santa's password&lt;/a&gt;.&lt;br&gt;
]&lt;/p&gt;

&lt;p&gt;However, we should only match on a-z and A-Z. Capital and lowercase use a different charCode offset, so it's vital to distinguish between them.&lt;/p&gt;

&lt;p&gt;Probably something that a regex and the replace function can help us with!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#building-a-caesar-decipher-in-javascript"&gt;
  &lt;/a&gt;
  Building a Caesar decipher in JavaScript
&lt;/h2&gt;

&lt;p&gt;As mentioned, we need to only replace &lt;code&gt;a-z&lt;/code&gt; and &lt;code&gt;A-Z&lt;/code&gt;, meaning all characters like &lt;code&gt;,.!&lt;/code&gt; etc. should remain.&lt;/p&gt;

&lt;p&gt;For this, we can use a regex and call another actual shift function for each of the two matches.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;a-z&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;letterShift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;A-Z&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;letterShift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the starting offset for a lowercase letter is 97, and for uppercase, it's 65.&lt;/p&gt;

&lt;p&gt;This means the character code for &lt;code&gt;a&lt;/code&gt; is 97.&lt;br&gt;
And for &lt;code&gt;A&lt;/code&gt; it's 65.&lt;/p&gt;

&lt;p&gt;Now let's move on to making the actual &lt;code&gt;letterShift&lt;/code&gt; function we declared.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;letterShift&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'll break down each step of the following function and end with the complete function ready for use.&lt;/p&gt;

&lt;p&gt;Let's take &lt;code&gt;aol&lt;/code&gt; as our message. We know the offset here is 7.&lt;/p&gt;

&lt;p&gt;The first thing we need to do is retrieve the char code of the letter we received.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;// a = 97 &lt;/span&gt;
&lt;span class="c1"&gt;// o = 111&lt;/span&gt;
&lt;span class="c1"&gt;// l = 108&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to offset this character code with the shift.&lt;br&gt;
In our case, the shift is &lt;code&gt;7&lt;/code&gt;, so we have to detract 7 from our character code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;shift&lt;/span&gt;

&lt;span class="c1"&gt;// a = 90&lt;/span&gt;
&lt;span class="c1"&gt;// o = 104&lt;/span&gt;
&lt;span class="c1"&gt;// l = 101&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For those paying attention, you might have spotted an issue here.&lt;/p&gt;

&lt;p&gt;90 is not a valid letter since it should be more than 97.&lt;br&gt;
The &lt;code&gt;ol&lt;/code&gt; is correct already.&lt;/p&gt;

&lt;p&gt;To solve this, we need to add &lt;code&gt;26&lt;/code&gt; to negative numbers.&lt;br&gt;
This means any number negative should be at the end of the alphabet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;shift&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;

&lt;span class="c1"&gt;// a = 116&lt;/span&gt;
&lt;span class="c1"&gt;// o = 130&lt;/span&gt;
&lt;span class="c1"&gt;// l = 127&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the &lt;code&gt;a&lt;/code&gt; is fine, but the &lt;code&gt;ol&lt;/code&gt; are wrong as they should not have been plussed.&lt;/p&gt;

&lt;p&gt;To make a rock-solid solution, we can do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;letter char code&lt;/li&gt;
&lt;li&gt;minus the offset (97 for lowercase or 65 for uppercase)&lt;/li&gt;
&lt;li&gt;add the shift (-7 in our example)&lt;/li&gt;
&lt;li&gt;plus the alphabet length (+26)&lt;/li&gt;
&lt;li&gt;get the remainder of 26 (% 26)&lt;/li&gt;
&lt;li&gt;and then re-add the offset again&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This way, we adhere to negative numbers as well as positive ones.&lt;/p&gt;

&lt;p&gt;Making the complete function look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromCharCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;shift&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;offset&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// a = 116 = t&lt;/span&gt;
&lt;span class="c1"&gt;// o = 104 = h&lt;/span&gt;
&lt;span class="c1"&gt;// l = 101 = e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's run our test to see if this works for all the test cases.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dgFli0Zk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640232194932/7y6n0zweH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dgFli0Zk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640232194932/7y6n0zweH.png" alt="Tests turning greeen" width="626" height="284"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We did it!&lt;/p&gt;

&lt;p&gt;Would really love to hear what your solution would be to this puzzle. 👏&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>5 Awesome Libraries To Use In Your Next ReactJs Project</title>
      <author>Sachin Chaurasiya</author>
      <pubDate>Sun, 02 Jan 2022 04:04:01 +0000</pubDate>
      <link>https://dev.to/sachinchaurasiya/5-awesome-libraries-to-use-in-your-next-reactjs-project-3p31</link>
      <guid>https://dev.to/sachinchaurasiya/5-awesome-libraries-to-use-in-your-next-reactjs-project-3p31</guid>
      <description>&lt;p&gt;We all know Reactjs is a UI library using which we can build user interfaces rapidly. but Reactjs ecosystem is so rich that you can build dynamic interactive web applications just by using some external libraries.&lt;/p&gt;

&lt;p&gt;In this post, we will discuss 5 Reactjs libraries you can use in your next project. we will discuss its use cases and how it can help you to build your next project without any hiccups.&lt;/p&gt;

&lt;p&gt;Here is the list of libraries that we are going to discuss&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;React Flow&lt;/li&gt;
&lt;li&gt;React Markdown&lt;/li&gt;
&lt;li&gt;Code Mirror&lt;/li&gt;
&lt;li&gt;React Draft WYSIWYG&lt;/li&gt;
&lt;li&gt;React tippy&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-flow"&gt;
  &lt;/a&gt;
  &lt;a href="https://reactflow.dev/docs/"&gt;React Flow&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;React flow is a library to build node-based applications and it is built by &lt;a href="https://webkid.io"&gt;webkid.io&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  Use case
&lt;/h3&gt;

&lt;p&gt;Let's say you want to build an application where you want to render node diagrams/flow that could be anything from static to dynamic. &lt;br&gt;
here we can use react flow to render node diagrams/flow and end-user can customize it, can add a new node, can update the existing node and delete the existing node.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-react-flow-over-other-libraries"&gt;
  &lt;/a&gt;
  Why use react flow over other libraries
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;customizable&lt;/li&gt;
&lt;li&gt;utils rich&lt;/li&gt;
&lt;li&gt;types support&lt;/li&gt;
&lt;li&gt;fast rendering&lt;/li&gt;
&lt;li&gt;and many more&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#live-example"&gt;
  &lt;/a&gt;
  Live Example
&lt;/h3&gt;

&lt;p&gt;Here is a live example of &lt;a href="https://open-metadata.org/"&gt;OpenMetadata&lt;/a&gt; A Single place to Discover, Collaborate, and Get your data right that uses React flow to render entity lineage.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HxxCROA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641047040552/6qrPy9ghyy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HxxCROA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641047040552/6qrPy9ghyy.png" alt="image.png" width="880" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-markdown"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/remarkjs/react-markdown"&gt;React Markdown&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;React markdown is a markdown parser react component which can take string markdown and render it to the react element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  Use case
&lt;/h3&gt;

&lt;p&gt;There could be a variety of use cases for this library, let's say you are building a blog application and content would be in markdown so there you can use react markdown to parse the content.&lt;/p&gt;

&lt;p&gt;We all have used GitHub or a similar application at least once in our developer journey and know that most of the contents are in markdown format. so we can also build a tool using react markdown to create a GitHub readme profile.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-react-markdown-over-other-libraries"&gt;
  &lt;/a&gt;
  Why use react markdown over other libraries
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Easy to use&lt;/li&gt;
&lt;li&gt;Rich API Support&lt;/li&gt;
&lt;li&gt;Custome Component Support&lt;/li&gt;
&lt;li&gt;Extendible with plugins system&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#live-example"&gt;
  &lt;/a&gt;
  Live Example
&lt;/h3&gt;

&lt;p&gt;Here you can see I have built a &lt;a href="https://sachinchaurasiya.dev/tools/markdown-previewer"&gt;markdown previewer&lt;/a&gt; using react markdown. you can write markdown and see the output side by side also you can download it as a markdown file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nKnlDDnf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641047943901/22TJXqdbp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nKnlDDnf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641047943901/22TJXqdbp.png" alt="image.png" width="880" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-mirror"&gt;
  &lt;/a&gt;
  &lt;a href="https://codemirror.net/"&gt;Code Mirror&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;Code Mirror is a text editor with support for different languages and add-ons to implement the advance and extend the existing functionality.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  Use case
&lt;/h3&gt;

&lt;p&gt;Let's say you are building an LMS (Learning management system) and you want to provide an editor to end-users for editing code snippets that could be in any language like python, javascript, etc or format likes JSON, Avro, SQL, etc.&lt;/p&gt;

&lt;p&gt;Here you can use code mirror to build an editor that can allow end-users to play with code snippets.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-code-mirror-over-other-libraries"&gt;
  &lt;/a&gt;
  Why use code mirror over other libraries
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Support for more than 100 languages&lt;/li&gt;
&lt;li&gt;Code Folding Support&lt;/li&gt;
&lt;li&gt;Support for inline and block widget&lt;/li&gt;
&lt;li&gt;Configurable bindings&lt;/li&gt;
&lt;li&gt;Used by browsers like firefox, chrome and safari.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#live-example"&gt;
  &lt;/a&gt;
  Live Example
&lt;/h3&gt;

&lt;p&gt;Here you can see the live use case of code mirror by &lt;a href="https://carbon.now.sh/"&gt;Carbon&lt;/a&gt; tool for creating and sharing beautiful images of your source code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vgcZK5zw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641049383314/XZMTx1sO8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vgcZK5zw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641049383314/XZMTx1sO8.png" alt="image.png" width="880" height="407"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-draft-wysiwyg"&gt;
  &lt;/a&gt;
  &lt;a href="https://jpuri.github.io/react-draft-wysiwyg/"&gt;React Draft WYSIWYG&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;React Draft WYSIWYG is a rich text editor built on top of reactjs and &lt;a href="https://draftjs.org/"&gt;draftjs&lt;/a&gt;.ready to use react component to provide rich text support in your application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  Use case
&lt;/h3&gt;

&lt;p&gt;Nowadays most of the communities/publications like &lt;code&gt;Hashnode&lt;/code&gt;, &lt;code&gt;dev.to&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;showscase&lt;/code&gt; and &lt;code&gt;devdojo&lt;/code&gt;  provide support for rich text content and they have built their own rich text editor. but you don't have to reinvent the wheel you can use React Draft WYSIWYG directly in your application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-react-draft-wysiwyg-over-other-libraries"&gt;
  &lt;/a&gt;
  Why use React Draft WYSIWYG over other libraries
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can configure toolbar options&lt;/li&gt;
&lt;li&gt;Support for Mention and Hashtags&lt;/li&gt;
&lt;li&gt;Support for emojis&lt;/li&gt;
&lt;li&gt;Support for internationalization.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#live-example"&gt;
  &lt;/a&gt;
  Live Example
&lt;/h3&gt;

&lt;p&gt;Here you can see the &lt;a href="https://jpuri.github.io/react-draft-wysiwyg"&gt;live example&lt;/a&gt; of &lt;code&gt;React Draft WYSIWYG&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2_HV-2NQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641050376074/tatVaDChr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2_HV-2NQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641050376074/tatVaDChr.png" alt="image.png" width="880" height="397"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-tippy"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/tvkhoa/react-tippy"&gt;React tippy&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;React Tippy is a lightweight tooltip component library for reactjs. it provides a tooltip element or HOC (Higher-order component) and it uses the React DOM to render tooltip. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  Use case
&lt;/h3&gt;

&lt;p&gt;The use case for React tippy is simple if you need to show some content using a tooltip then you should use React Tippy library.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-react-tippy-over-other-libraries"&gt;
  &lt;/a&gt;
  Why use React Tippy over other libraries
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Work's well with reactjs&lt;/li&gt;
&lt;li&gt;Enhancement of Tippy.js&lt;/li&gt;
&lt;li&gt;Support multiple triggers&lt;/li&gt;
&lt;li&gt;Customizable&lt;/li&gt;
&lt;li&gt;Support for different themes&lt;/li&gt;
&lt;li&gt;Support for different sizes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#live-example"&gt;
  &lt;/a&gt;
  Live Example
&lt;/h3&gt;

&lt;p&gt;Here you can find the live example of &lt;a href="https://tvkhoa.github.io/testlib/"&gt;react tippy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HaaABfDD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641051255326/zWLkU1E82.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HaaABfDD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641051255326/zWLkU1E82.png" alt="image.png" width="880" height="391"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that’s it for this topic. Thank you for reading.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  Connect with me
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/sachin-chaurasiya"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://twitter.com/sachindotcom"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Resources to Kickstart Your Newsletter</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Sun, 02 Jan 2022 03:59:48 +0000</pubDate>
      <link>https://dev.to/surajondev/resources-to-kickstart-your-newsletter-30kk</link>
      <guid>https://dev.to/surajondev/resources-to-kickstart-your-newsletter-30kk</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;I have been writing and sending newsletters to subscribers for the last 6 months. I learned much more about managing a Developer centric Newsletter though out the journey.&lt;/p&gt;

&lt;p&gt;During this period, I use many tools to help me with writing, designing, sending newsletters to the subscribers.&lt;/p&gt;

&lt;p&gt;Today, I will share some of the tools that I used on regular basis to send my newsletter.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#weekly-newsletter-of-surajondev"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.getrevue.co/profile/surajondev"&gt;Weekly Newsletter of SurajOnDev&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Time for &lt;a href="https://michelletanpy.hashnode.dev/what-ive-learnt-the-importance-of-self-promotion"&gt;self promotion&lt;/a&gt;. This is a weekly newsletter by myself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cL1qWSEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/boivc5mdfzzs2kt0s5wg.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cL1qWSEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/boivc5mdfzzs2kt0s5wg.PNG" alt="Weekly Newsletter of SurajOnDev" width="686" height="134"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read of the Week&lt;/strong&gt;: 5 best articles hand-picked by myself from different platforms. This article will be developer, self-growth, and productivity-oriented.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tool of the Week&lt;/strong&gt;: A resource or tool link that will help in easing your work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Our latest blog post&lt;/strong&gt;: Latest 3 blog post from SurajOnDev that is me.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Free eBook and Resources&lt;/strong&gt;: Occasionally you will get free eBook that are by developers and for developers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Twitter thread that I have bookmarked&lt;/strong&gt;: Intresting and useful twitter threads. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Weekly&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://tripetto.app/run/4OQIUAO89L"&gt;Weekly Newsletter of SurajOnDev&lt;/a&gt;&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#getrevue"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.getrevue.co/"&gt;GetRevue&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Revue makes it easy for writers and publishers to send editorial newsletters — and get paid.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YG1KnM6e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ekfd9tzkfpi02kkmj5an.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YG1KnM6e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ekfd9tzkfpi02kkmj5an.jpg" alt="GetRevue" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have been using GetRevue by Twitter to send my newsletters. It is easy to understand and use. It manages everything including creating, sending, managing subscribers, providing you with stats, and other newsletter-related stuff. &lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#tripetto"&gt;
  &lt;/a&gt;
  &lt;a href="https://tripetto.app/"&gt;Tripetto&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Build and run fully customizable conversational forms and surveys from the Tripetto studio and choose where you want to store collected data.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C_0e2pZy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sg9e88tfl0ful4p6pe9f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C_0e2pZy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sg9e88tfl0ful4p6pe9f.png" alt="Tripetto" width="880" height="502"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tripetto will help you in building beautiful and scrollable forms. It is the best alternative for Typeform and it is absolutely free. You can gather user information such emails through such form which will be easily added into GetRevue.&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#grammarly"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.grammarly.com/"&gt;Grammarly&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Communicate With Impact. Ensure Everything You Write Comes Across The Way You Intend. Present Your Best Self Every Time You Type. Make Your Writing Clear and Engaging. Eliminate grammar errors. Easily improve any text.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KiTndzLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.grammarly.com/assets/files/e80911c560f18f1ffdc084f23fe9c715/mobile_opengraph.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KiTndzLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.grammarly.com/assets/files/e80911c560f18f1ffdc084f23fe9c715/mobile_opengraph.png" alt="Grammarly" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have been using Grammarly for a long time to check grammar mistakes. It helped me in producing better newsletter issues without any grammar errors and wrong tone. &lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#canva"&gt;
  &lt;/a&gt;
  &lt;a href="https://canva.com/"&gt;Canva&lt;/a&gt;
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Thousands Of Custom Templates And Stock Images, Easy-To-Use Editing Features, And More! Priority Support. Simple To Use Interface. 200K+ Companies On Board. 100% Happiness Guarantee. Free 30 Day Trial. Services: Brand Kit, Magic Resize Tool.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nGc6AQHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static-cse.canva.com/image/76579/stickers.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nGc6AQHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static-cse.canva.com/image/76579/stickers.jpg" alt="Canva" width="880" height="557"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My go-to web app for creating header images for my blog and thumbnail for the newsletter. It has tons of templates to start editing and make its own with its editing tools. &lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#for-inspiration"&gt;
  &lt;/a&gt;
  For Inspiration
&lt;/h1&gt;

&lt;p&gt;You can follow some developers' newsletters to get inspiration and know more about the newsletter. &lt;/p&gt;

&lt;p&gt;Read our article to know some of the best developer newsletters:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/basecampxd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KlkYMk3q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--bdopcKHh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/3998/fa199775-e414-4bf8-8943-b1b645ce7c5b.png" alt="Basecamp Community" width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b_yru6x_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8FEvckRs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/417922/d5a37d43-1157-4c3a-b4dd-8b5a111371ca.png" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/basecampxd/10-newsletters-for-developers-5c7j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 Newsletters for Developers&lt;/h2&gt;
      &lt;h3&gt;Suraj Vishwakarma for Basecamp Community ・ Jul 28 '21 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;I hope these resources will help you in kickstarting your newsletter journey. To know more about the newsletter, read our last 2 articles in this series.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you have any other tools in your mind, let us know in the comment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading the article.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>3 Ways to center a div horizontally and vertically</title>
      <author>Amrin</author>
      <pubDate>Sun, 02 Jan 2022 03:51:57 +0000</pubDate>
      <link>https://dev.to/coderamrin/3-ways-to-center-a-div-horizontally-and-vertically-220n</link>
      <guid>https://dev.to/coderamrin/3-ways-to-center-a-div-horizontally-and-vertically-220n</guid>
      <description>&lt;p&gt;Centering a div is a crucial skill for a web developer. So, today I’ll share 3 ways to center a div horizontally and vertically.  &lt;/p&gt;

&lt;p&gt;Let’s get started. &lt;/p&gt;

&lt;p&gt;If you prefer video then check it out here:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iaPbZ8vsWyk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Note: to center a div with flexbox or grid you need to add flexbox or grid to the parent of that div. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-using-flexbox"&gt;
  &lt;/a&gt;
  #1. Using Flexbox
&lt;/h3&gt;

&lt;p&gt;You can center a div horizontally and vertically with Flex box, with just 4 lines of code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-using-grid"&gt;
  &lt;/a&gt;
  #2. Using Grid
&lt;/h3&gt;

&lt;p&gt;Centering a div with grid is much more easier than with flexbox.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-using-position-absolute"&gt;
  &lt;/a&gt;
  #3. Using Position Absolute:
&lt;/h3&gt;

&lt;p&gt;You can center a div with CSS positionning too.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That’s it for today. &lt;/p&gt;

&lt;p&gt;If you enjoyed reading this article, I think you’ll also enjoy my newsletter where I share my articles and videos, and other useful resources &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#subscribe-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.getrevue.co/profile/coderamrin"&gt;Subscribe Now!&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Also you can connect with me on Twitter at &lt;a class="mentioned-user" href="https://dev.to/coderamrin"&gt;@coderamrin&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Best Practices For Writing
Automation Test Code</title>
      <author>Suresh Ayyanna</author>
      <pubDate>Sun, 02 Jan 2022 03:35:00 +0000</pubDate>
      <link>https://dev.to/sureshayyanna/best-practices-for-writingautomation-test-code-1laa</link>
      <guid>https://dev.to/sureshayyanna/best-practices-for-writingautomation-test-code-1laa</guid>
      <description>&lt;ol&gt;
&lt;li&gt;Follow OOPs Concepts Wherever Possible

&lt;ul&gt;
&lt;li&gt;Abstraction(base classes),&lt;/li&gt;
&lt;li&gt;Inheritance(multiple implementation of same things/multiple 
inheritance),&lt;/li&gt;
&lt;li&gt;Polymorphism(many forms with something different)
&lt;/li&gt;
&lt;li&gt;Data Hiding(hide unnecessary/sensitive info),
&lt;/li&gt;
&lt;li&gt;Encapsulation(Bind small entities into a single large entity)&lt;/li&gt;
&lt;li&gt;Follow Programming Language Guidelines (class name, Method 
name, package name, variable names)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reduce code duplicity (think before writing new code) &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;can I use/make change in existing code?&lt;/li&gt;
&lt;li&gt;Increase code reusability&lt;/li&gt;
&lt;li&gt;Make your code generic wherever possible&lt;/li&gt;
&lt;li&gt;Leave no hardcoded data in source code&lt;/li&gt;
&lt;li&gt;Keep your static data outside the source code&lt;/li&gt;
&lt;li&gt;Keep your dynamic data dynamic in test code (fetch it from 
util files)&lt;/li&gt;
&lt;li&gt;Test your code properly, use IDE options such as call 
hierarchy or show usage to test your changes E2E&lt;/li&gt;
&lt;li&gt;Use Extensive logging- everything which is part of source
code should be analysed from logs without looking at the 
source code&lt;/li&gt;
&lt;li&gt;Generate and save failure proofs outside the src code-
videos/data/screenshots/logs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Focus on making your code scalable and faster without &lt;br&gt;
compromising the code quality&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your code should be platform and system independent&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use as many assertions as possible focus on automated testing &lt;br&gt;
rather than automation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Leave no hardcoded data in source code&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Always think for the future, separate out tech dependencies so &lt;br&gt;
that migration to new tech is easy in case it is needed&lt;br&gt;
10.Keep your tests independent for better results in &lt;br&gt;
multithreading unless they are related (example publisher subscriber related tests)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use Proper Documentation (Using comments wherever required)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create code which is can be easily read and modified by others(Important)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>programming</category>
      <category>java</category>
      <category>python</category>
      <category>testing</category>
    </item>
  </channel>
</rss>
